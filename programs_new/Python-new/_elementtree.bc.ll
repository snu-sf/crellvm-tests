; ModuleID = 'irs-onlybc/_elementtree.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyExpat_CAPI = type { i8*, i32, i32, i32, i32, i8* (i32)*, i32 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)*, i32 (%struct.XML_ParserStruct*, i8*, i32, i32)*, %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)*, void (%struct.XML_ParserStruct*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)*, void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)*, void (%struct.XML_ParserStruct*, i8*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*)*, i32 (%struct.XML_ParserStruct*, i8*)*, i32 (i8*, i8*, %struct.XML_Encoding*)* }
%struct.XML_ParserStruct = type opaque
%struct.XML_Memory_Handling_Suite = type { i8* (i64)*, i8* (i8*, i64)*, void (i8*)* }
%struct.XML_Encoding = type { [256 x i32], i8*, i32 (i8*, i8*)*, void (i8*)* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.elementtreestate = type { %struct._object*, %struct._object*, %struct._object* }
%struct.ElementObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct.ElementObjectExtra*, %struct._object* }
%struct.ElementObjectExtra = type { %struct._object*, i32, i32, %struct._object**, [4 x %struct._object*] }
%struct.ElementIterObject = type { %struct._object, %struct.ParentLocator_t*, %struct.ElementObject*, %struct._object*, i32, i32 }
%struct.ParentLocator_t = type { %struct.ElementObject*, i64, %struct.ParentLocator_t* }
%struct.TreeBuilderObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i64, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }
%struct.XMLParserObject = type { %struct._object, %struct.XML_ParserStruct*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }

@elementtreemodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i8* null, i64 24, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @_functions, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* @elementtree_traverse, i32 (%struct._object*)* @elementtree_clear, void (i8*)* @elementtree_free }, align 8
@ElementIter_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0), i64 48, i64 0, void (%struct._object*)* bitcast (void (%struct.ElementIterObject*)* @elementiter_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 278528, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.ElementIterObject*, i32 (%struct._object*, i8*)*, i8*)* @elementiter_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* @PyObject_SelfIter, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.ElementIterObject*)* @elementiter_next to %struct._object* (%struct._object*)*), %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@TreeBuilder_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i32 0, i32 0), i64 112, i64 0, void (%struct._object*)* bitcast (void (%struct.TreeBuilderObject*)* @treebuilder_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.TreeBuilderObject*, i32 (%struct._object*, i8*)*, i8*)* @treebuilder_gc_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.TreeBuilderObject*)* @treebuilder_gc_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @treebuilder_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @treebuilder_init, %struct._object* (%struct._typeobject*, i64)* @PyType_GenericAlloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @treebuilder_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@Element_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i64 56, i64 0, void (%struct._object*)* bitcast (void (%struct.ElementObject*)* @element_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.ElementObject*)* @element_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* @element_as_sequence, %struct.PyMappingMethods* @element_as_mapping, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_getattro to %struct._object* (%struct._object*, %struct._object*)*), i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_setattro to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.ElementObject*, i32 (%struct._object*, i8*)*, i8*)* @element_gc_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.ElementObject*)* @element_gc_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 48, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([24 x %struct.PyMethodDef], [24 x %struct.PyMethodDef]* @element_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @element_init, %struct._object* (%struct._typeobject*, i64)* @PyType_GenericAlloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @element_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@XMLParser_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.105, i32 0, i32 0), i64 104, i64 0, void (%struct._object*)* bitcast (void (%struct.XMLParserObject*)* @xmlparser_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_getattro to %struct._object* (%struct._object*, %struct._object*)*), i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.XMLParserObject*, i32 (%struct._object*, i8*)*, i8*)* @xmlparser_gc_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.XMLParserObject*)* @xmlparser_gc_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @xmlparser_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @xmlparser_init, %struct._object* (%struct._typeobject*, i64)* @PyType_GenericAlloc, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @xmlparser_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"deepcopy\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"xml.etree.ElementPath\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"pyexpat.expat_CAPI\00", align 1
@expat_capi = internal global %struct.PyExpat_CAPI* null, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"pyexpat.expat_CAPI 1.0\00", align 1
@PyExc_ImportError = external global %struct._object*, align 8
@.str.5 = private unnamed_addr constant [32 x i8] c"pyexpat version is incompatible\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"xml.etree.ElementTree.ParseError\00", align 1
@PyExc_SyntaxError = external global %struct._object*, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"ParseError\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"Element\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"TreeBuilder\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"XMLParser\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"_elementtree\00", align 1
@_functions = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @subelement to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.12 = private unnamed_addr constant [11 x i8] c"SubElement\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"O!O|O!:SubElement\00", align 1
@PyDict_Type = external global %struct._typeobject, align 8
@_Py_NoneStruct = external global %struct._object, align 8
@.str.14 = private unnamed_addr constant [7 x i8] c"attrib\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.15 = private unnamed_addr constant [32 x i8] c"attrib must be dict, not %.100s\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"_elementtree._element_iterator\00", align 1
@PyExc_StopIteration = external global %struct._object*, align 8
@PyList_Type = external global %struct._typeobject, align 8
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"xml.etree.ElementTree.TreeBuilder\00", align 1
@treebuilder_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_data to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_start to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_end to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_close to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.19 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"O:data\00", align 1
@PyBytes_Type = external global %struct._typeobject, align 8
@.str.24 = private unnamed_addr constant [10 x i8] c"O|O:start\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"OO\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"multiple elements on top level\00", align 1
@treebuilder_set_element_text.PyId_text = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), %struct._object* null }, align 8
@.str.27 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@treebuilder_set_element_tail.PyId_tail = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct._object* null }, align 8
@.str.28 = private unnamed_addr constant [5 x i8] c"tail\00", align 1
@treebuilder_add_subelement.PyId_append = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), %struct._object* null }, align 8
@.str.29 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"O:end\00", align 1
@PyExc_IndexError = external global %struct._object*, align 8
@.str.32 = private unnamed_addr constant [21 x i8] c"pop from empty stack\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c":close\00", align 1
@treebuilder_init.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i32 0, i32 0), i8* null], align 16
@.str.34 = private unnamed_addr constant [16 x i8] c"element_factory\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"|O:TreeBuilder\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"xml.etree.ElementTree.Element\00", align 1
@element_as_sequence = internal global %struct.PySequenceMethods { i64 (%struct._object*)* bitcast (i64 (%struct.ElementObject*)* @element_length to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null, %struct._object* (%struct._object*, i64)* @element_getitem, i8* null, i32 (%struct._object*, i64, %struct._object*)* @element_setitem, i8* null, i32 (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null }, align 8
@element_as_mapping = internal global %struct.PyMappingMethods { i64 (%struct._object*)* bitcast (i64 (%struct.ElementObject*)* @element_length to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @element_subscr, i32 (%struct._object*, %struct._object*, %struct._object*)* @element_ass_subscr }, align 8
@element_methods = internal global [24 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_clearmethod to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_get to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_set to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_find to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_findtext to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_findall to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_append to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_extend to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_insert to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_remove to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iter to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_itertext to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iterfind to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iter to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_getchildren to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_items to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_keys to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.62, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @element_makeelement to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_copy to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.64, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_deepcopy to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @element_sizeof, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*)* @element_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.ElementObject*, %struct._object*)* @element_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.37 = private unnamed_addr constant [19 x i8] c"<Element %R at %p>\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"<Element at %p>\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"child index out of range\00", align 1
@.str.40 = private unnamed_addr constant [36 x i8] c"child assignment index out of range\00", align 1
@PySlice_Type = external global %struct._typeobject, align 8
@.str.41 = private unnamed_addr constant [33 x i8] c"element indices must be integers\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"expected sequence, not \22%.200s\22\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.43 = private unnamed_addr constant [69 x i8] c"attempt to assign sequence of size %zd to extended slice of size %zd\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@PyExc_AttributeError = external global %struct._object*, align 8
@.str.45 = private unnamed_addr constant [42 x i8] c"Can't set arbitrary attributes on Element\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"find\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"findtext\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"findall\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"insert\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"iter\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"itertext\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"iterfind\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"getiterator\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"getchildren\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.62 = private unnamed_addr constant [12 x i8] c"makeelement\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"__copy__\00", align 1
@.str.64 = private unnamed_addr constant [13 x i8] c"__deepcopy__\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"__sizeof__\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"__getstate__\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"__setstate__\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c":clear\00", align 1
@element_get.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8* null], align 16
@.str.69 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"O|O:get\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"OO:set\00", align 1
@element_find.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.73 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"namespaces\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"O|O:find\00", align 1
@element_find.PyId_find = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), %struct._object* null }, align 8
@.str.76 = private unnamed_addr constant [4 x i8] c"OOO\00", align 1
@element_findtext.PyId_findtext = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), %struct._object* null }, align 8
@element_findtext.kwlist = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.77 = private unnamed_addr constant [14 x i8] c"O|OO:findtext\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"OOOO\00", align 1
@element_findall.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.79 = private unnamed_addr constant [12 x i8] c"O|O:findall\00", align 1
@element_findall.PyId_findall = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct._object* null }, align 8
@.str.80 = private unnamed_addr constant [10 x i8] c"O!:append\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"O:extend\00", align 1
@.str.82 = private unnamed_addr constant [34 x i8] c"expected an Element, not \22%.200s\22\00", align 1
@.str.83 = private unnamed_addr constant [11 x i8] c"iO!:insert\00", align 1
@.str.84 = private unnamed_addr constant [10 x i8] c"O!:remove\00", align 1
@.str.85 = private unnamed_addr constant [30 x i8] c"list.remove(x): x not in list\00", align 1
@element_iter.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* null], align 16
@.str.86 = private unnamed_addr constant [8 x i8] c"|O:iter\00", align 1
@.str.87 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.88 = private unnamed_addr constant [10 x i8] c":itertext\00", align 1
@element_iterfind.PyId_iterfind = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), %struct._object* null }, align 8
@element_iterfind.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.89 = private unnamed_addr constant [13 x i8] c"O|O:iterfind\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c":getchildren\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c":items\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c":keys\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"OO:makeelement\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c":__copy__\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"O:__deepcopy__\00", align 1
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.96 = private unnamed_addr constant [26 x i8] c"deepcopy helper not found\00", align 1
@.str.97 = private unnamed_addr constant [14 x i8] c"{sOsOs{}sOsO}\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"_children\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"{sOsOsOsOsO}\00", align 1
@.str.100 = private unnamed_addr constant [50 x i8] c"Don't know how to unpickle \22%.200R\22 as an Element\00", align 1
@element_setstate_from_Python.kwlist = internal global [6 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i8* null], align 16
@.str.101 = private unnamed_addr constant [8 x i8] c"|$OOOOO\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"tag may not be NULL\00", align 1
@.str.103 = private unnamed_addr constant [26 x i8] c"'_children' is not a list\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"O|O!:Element\00", align 1
@.str.105 = private unnamed_addr constant [32 x i8] c"xml.etree.ElementTree.XMLParser\00", align 1
@xmlparser_methods = internal global [6 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_feed to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_close to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_parse_whole to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_setevents to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_doctype to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.106 = private unnamed_addr constant [7 x i8] c"entity\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.109 = private unnamed_addr constant [15 x i8] c"Expat %d.%d.%d\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"feed\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"_parse_whole\00", align 1
@.str.112 = private unnamed_addr constant [11 x i8] c"_setevents\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"doctype\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.114 = private unnamed_addr constant [28 x i8] c"size does not fit in an int\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"utf-8\00", align 1
@.str.116 = private unnamed_addr constant [23 x i8] c"%s: line %d, column %d\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"(ii)\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"O:_parse\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.122 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@PyUnicode_Type = external global %struct._typeobject, align 8
@.str.123 = private unnamed_addr constant [14 x i8] c"surrogatepass\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"O!|O:_setevents\00", align 1
@.str.125 = private unnamed_addr constant [66 x i8] c"event handling only supported for ElementTree.TreeBuilder targets\00", align 1
@.str.126 = private unnamed_addr constant [26 x i8] c"events must be a sequence\00", align 1
@.str.127 = private unnamed_addr constant [24 x i8] c"invalid events sequence\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"start-ns\00", align 1
@.str.129 = private unnamed_addr constant [7 x i8] c"end-ns\00", align 1
@.str.130 = private unnamed_addr constant [19 x i8] c"unknown event '%s'\00", align 1
@.str.131 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@xmlparser_init.kwlist = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), i8* null], align 16
@.str.132 = private unnamed_addr constant [5 x i8] c"html\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.134 = private unnamed_addr constant [15 x i8] c"|OOz:XMLParser\00", align 1
@ExpatMemoryHandler = internal global %struct.XML_Memory_Handling_Suite { i8* (i64)* @PyObject_Malloc, i8* (i8*, i64)* @PyObject_Realloc, void (i8*)* @PyObject_Free }, align 8
@.str.135 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.136 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@expat_default_handler.message = private unnamed_addr constant [128 x i8] c"undefined entity \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@PyExc_DeprecationWarning = external global %struct._object*, align 8
@.str.138 = private unnamed_addr constant [92 x i8] c"This method of XMLParser is deprecated.  Define doctype() method on the TreeBuilder target.\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__elementtree() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp80 = alloca i32, align 4
  %0 = bitcast %struct._object** %m to i8*, !dbg !2612
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2612
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !608, metadata !2613), !dbg !2614
  %1 = bitcast %struct._object** %temp to i8*, !dbg !2612
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2612
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !609, metadata !2613), !dbg !2615
  %2 = bitcast %struct.elementtreestate** %st to i8*, !dbg !2616
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2616
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !610, metadata !2613), !dbg !2617
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !2618
  store %struct._object* %call, %struct._object** %m, align 8, !dbg !2619, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %m, align 8, !dbg !2624, !tbaa !2620
  %tobool = icmp ne %struct._object* %3, null, !dbg !2624
  br i1 %tobool, label %if.then, label %if.end, !dbg !2626

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %m, align 8, !dbg !2627, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !2629
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !2630, !tbaa !2631
  %inc = add i64 %5, 1, !dbg !2630
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2630, !tbaa !2631
  %6 = load %struct._object*, %struct._object** %m, align 8, !dbg !2634, !tbaa !2620
  store %struct._object* %6, %struct._object** %retval, !dbg !2635
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2635

if.end:                                           ; preds = %entry
  %call1 = call i32 @PyType_Ready(%struct._typeobject* @ElementIter_Type), !dbg !2636
  %cmp = icmp slt i32 %call1, 0, !dbg !2638
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2639

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !2640
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2640

if.end.3:                                         ; preds = %if.end
  %call4 = call i32 @PyType_Ready(%struct._typeobject* @TreeBuilder_Type), !dbg !2641
  %cmp5 = icmp slt i32 %call4, 0, !dbg !2643
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !2644

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !2645
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2645

if.end.7:                                         ; preds = %if.end.3
  %call8 = call i32 @PyType_Ready(%struct._typeobject* @Element_Type), !dbg !2646
  %cmp9 = icmp slt i32 %call8, 0, !dbg !2648
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !2649

if.then.10:                                       ; preds = %if.end.7
  store %struct._object* null, %struct._object** %retval, !dbg !2650
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2650

if.end.11:                                        ; preds = %if.end.7
  %call12 = call i32 @PyType_Ready(%struct._typeobject* @XMLParser_Type), !dbg !2651
  %cmp13 = icmp slt i32 %call12, 0, !dbg !2653
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !2654

if.then.14:                                       ; preds = %if.end.11
  store %struct._object* null, %struct._object** %retval, !dbg !2655
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2655

if.end.15:                                        ; preds = %if.end.11
  %call16 = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @elementtreemodule, i32 1013), !dbg !2656
  store %struct._object* %call16, %struct._object** %m, align 8, !dbg !2657, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %m, align 8, !dbg !2658, !tbaa !2620
  %tobool17 = icmp ne %struct._object* %7, null, !dbg !2658
  br i1 %tobool17, label %if.end.19, label %if.then.18, !dbg !2660

if.then.18:                                       ; preds = %if.end.15
  store %struct._object* null, %struct._object** %retval, !dbg !2661
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2661

if.end.19:                                        ; preds = %if.end.15
  %8 = load %struct._object*, %struct._object** %m, align 8, !dbg !2662, !tbaa !2620
  %call20 = call i8* @PyModule_GetState(%struct._object* %8), !dbg !2663
  %9 = bitcast i8* %call20 to %struct.elementtreestate*, !dbg !2664
  store %struct.elementtreestate* %9, %struct.elementtreestate** %st, align 8, !dbg !2665, !tbaa !2620
  %call21 = call %struct._object* @PyImport_ImportModule(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !2666
  store %struct._object* %call21, %struct._object** %temp, align 8, !dbg !2668, !tbaa !2620
  %tobool22 = icmp ne %struct._object* %call21, null, !dbg !2668
  br i1 %tobool22, label %if.end.24, label %if.then.23, !dbg !2669

if.then.23:                                       ; preds = %if.end.19
  store %struct._object* null, %struct._object** %retval, !dbg !2670
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2670

if.end.24:                                        ; preds = %if.end.19
  %10 = load %struct._object*, %struct._object** %temp, align 8, !dbg !2671, !tbaa !2620
  %call25 = call %struct._object* @PyObject_GetAttrString(%struct._object* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0)), !dbg !2672
  %11 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2673, !tbaa !2620
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %11, i32 0, i32 1, !dbg !2674
  store %struct._object* %call25, %struct._object** %deepcopy_obj, align 8, !dbg !2675, !tbaa !2676
  br label %do.body, !dbg !2678

do.body:                                          ; preds = %if.end.24
  %12 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2679
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !2679
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !611, metadata !2613), !dbg !2681
  %13 = load %struct._object*, %struct._object** %temp, align 8, !dbg !2682, !tbaa !2620
  store %struct._object* %13, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2681, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2683, !tbaa !2620
  %cmp26 = icmp ne %struct._object* %14, null, !dbg !2684
  br i1 %cmp26, label %if.then.27, label %if.end.33, !dbg !2685

if.then.27:                                       ; preds = %do.body
  br label %do.body.28, !dbg !2686

do.body.28:                                       ; preds = %if.then.27
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2688
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !2688
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !613, metadata !2613), !dbg !2690
  %16 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2691, !tbaa !2620
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !2690, !tbaa !2620
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2692, !tbaa !2620
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !2694
  %18 = load i64, i64* %ob_refcnt29, align 8, !dbg !2695, !tbaa !2631
  %dec = add i64 %18, -1, !dbg !2695
  store i64 %dec, i64* %ob_refcnt29, align 8, !dbg !2695, !tbaa !2631
  %cmp30 = icmp ne i64 %dec, 0, !dbg !2696
  br i1 %cmp30, label %if.then.31, label %if.else, !dbg !2697

if.then.31:                                       ; preds = %do.body.28
  br label %if.end.32, !dbg !2698

if.else:                                          ; preds = %do.body.28
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2700, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !2702
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2702, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !2704
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2704, !tbaa !2705
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2709, !tbaa !2620
  call void %21(%struct._object* %22), !dbg !2710
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.31
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2711
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !2711
  br label %do.cond, !dbg !2713

do.cond:                                          ; preds = %if.end.32
  br label %do.end, !dbg !2714

do.end:                                           ; preds = %do.cond
  br label %if.end.33, !dbg !2716

if.end.33:                                        ; preds = %do.end, %do.body
  %24 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2718
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !2718
  br label %do.cond.34, !dbg !2721

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !2722

do.end.35:                                        ; preds = %do.cond.34
  %call36 = call %struct._object* @PyImport_ImportModule(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0)), !dbg !2724
  %25 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2726, !tbaa !2620
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %25, i32 0, i32 2, !dbg !2727
  store %struct._object* %call36, %struct._object** %elementpath_obj, align 8, !dbg !2728, !tbaa !2729
  %tobool37 = icmp ne %struct._object* %call36, null, !dbg !2728
  br i1 %tobool37, label %if.end.39, label %if.then.38, !dbg !2730

if.then.38:                                       ; preds = %do.end.35
  store %struct._object* null, %struct._object** %retval, !dbg !2731
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2731

if.end.39:                                        ; preds = %do.end.35
  %call40 = call i8* @PyCapsule_Import(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 0), !dbg !2732
  %26 = bitcast i8* %call40 to %struct.PyExpat_CAPI*, !dbg !2732
  store %struct.PyExpat_CAPI* %26, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2733, !tbaa !2620
  %27 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2734, !tbaa !2620
  %tobool41 = icmp ne %struct.PyExpat_CAPI* %27, null, !dbg !2734
  br i1 %tobool41, label %if.then.42, label %if.else.99, !dbg !2735

if.then.42:                                       ; preds = %if.end.39
  %28 = bitcast i64* %__s1_len to i8*, !dbg !2736
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !2736
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !616, metadata !2613), !dbg !2737
  %29 = bitcast i64* %__s2_len to i8*, !dbg !2736
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !2736
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !621, metadata !2613), !dbg !2738
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i64 1) to i64), i64 ptrtoint ([23 x i8]* @.str.4 to i64)), i64 1), label %land.lhs.true, label %cond.false, !dbg !2739

land.lhs.true:                                    ; preds = %if.then.42
  store i64 22, i64* %__s2_len, align 8, !dbg !2740, !tbaa !2742
  %30 = load i64, i64* %__s2_len, align 8, !dbg !2743, !tbaa !2742
  %cmp43 = icmp ult i64 %30, 4, !dbg !2744
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !2745

cond.true:                                        ; preds = %land.lhs.true
  %31 = bitcast i8** %__s1 to i8*, !dbg !2746
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !2746
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !622, metadata !2613), !dbg !2748
  %32 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2749, !tbaa !2620
  %magic = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %32, i32 0, i32 0, !dbg !2750
  %33 = load i8*, i8** %magic, align 8, !dbg !2750, !tbaa !2751
  store i8* %33, i8** %__s1, align 8, !dbg !2748, !tbaa !2620
  %34 = bitcast i32* %__result to i8*, !dbg !2753
  call void @llvm.lifetime.start(i64 4, i8* %34) #1, !dbg !2753
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !624, metadata !2613), !dbg !2754
  %35 = load i8*, i8** %__s1, align 8, !dbg !2755, !tbaa !2620
  %arrayidx = getelementptr i8, i8* %35, i64 0, !dbg !2755
  %36 = load i8, i8* %arrayidx, align 1, !dbg !2755, !tbaa !2756
  %conv = zext i8 %36 to i32, !dbg !2755
  %37 = load i8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), align 1, !dbg !2757, !tbaa !2756
  %conv46 = zext i8 %37 to i32, !dbg !2757
  %sub = sub i32 %conv, %conv46, !dbg !2758
  store i32 %sub, i32* %__result, align 4, !dbg !2754, !tbaa !2759
  %38 = load i64, i64* %__s2_len, align 8, !dbg !2760, !tbaa !2742
  %cmp47 = icmp ugt i64 %38, 0, !dbg !2762
  br i1 %cmp47, label %land.lhs.true.49, label %if.end.79, !dbg !2763

land.lhs.true.49:                                 ; preds = %cond.true
  %39 = load i32, i32* %__result, align 4, !dbg !2764, !tbaa !2759
  %cmp50 = icmp eq i32 %39, 0, !dbg !2766
  br i1 %cmp50, label %if.then.52, label %if.end.79, !dbg !2767

if.then.52:                                       ; preds = %land.lhs.true.49
  %40 = load i8*, i8** %__s1, align 8, !dbg !2768, !tbaa !2620
  %arrayidx53 = getelementptr i8, i8* %40, i64 1, !dbg !2768
  %41 = load i8, i8* %arrayidx53, align 1, !dbg !2768, !tbaa !2756
  %conv54 = zext i8 %41 to i32, !dbg !2768
  %42 = load i8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i64 1), align 1, !dbg !2771, !tbaa !2756
  %conv55 = zext i8 %42 to i32, !dbg !2771
  %sub56 = sub i32 %conv54, %conv55, !dbg !2772
  store i32 %sub56, i32* %__result, align 4, !dbg !2773, !tbaa !2759
  %43 = load i64, i64* %__s2_len, align 8, !dbg !2774, !tbaa !2742
  %cmp57 = icmp ugt i64 %43, 1, !dbg !2776
  br i1 %cmp57, label %land.lhs.true.59, label %if.end.78, !dbg !2777

land.lhs.true.59:                                 ; preds = %if.then.52
  %44 = load i32, i32* %__result, align 4, !dbg !2778, !tbaa !2759
  %cmp60 = icmp eq i32 %44, 0, !dbg !2780
  br i1 %cmp60, label %if.then.62, label %if.end.78, !dbg !2781

if.then.62:                                       ; preds = %land.lhs.true.59
  %45 = load i8*, i8** %__s1, align 8, !dbg !2782, !tbaa !2620
  %arrayidx63 = getelementptr i8, i8* %45, i64 2, !dbg !2782
  %46 = load i8, i8* %arrayidx63, align 1, !dbg !2782, !tbaa !2756
  %conv64 = zext i8 %46 to i32, !dbg !2782
  %47 = load i8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i64 2), align 1, !dbg !2785, !tbaa !2756
  %conv65 = zext i8 %47 to i32, !dbg !2785
  %sub66 = sub i32 %conv64, %conv65, !dbg !2786
  store i32 %sub66, i32* %__result, align 4, !dbg !2787, !tbaa !2759
  %48 = load i64, i64* %__s2_len, align 8, !dbg !2788, !tbaa !2742
  %cmp67 = icmp ugt i64 %48, 2, !dbg !2790
  br i1 %cmp67, label %land.lhs.true.69, label %if.end.77, !dbg !2791

land.lhs.true.69:                                 ; preds = %if.then.62
  %49 = load i32, i32* %__result, align 4, !dbg !2792, !tbaa !2759
  %cmp70 = icmp eq i32 %49, 0, !dbg !2794
  br i1 %cmp70, label %if.then.72, label %if.end.77, !dbg !2795

if.then.72:                                       ; preds = %land.lhs.true.69
  %50 = load i8*, i8** %__s1, align 8, !dbg !2796, !tbaa !2620
  %arrayidx73 = getelementptr i8, i8* %50, i64 3, !dbg !2796
  %51 = load i8, i8* %arrayidx73, align 1, !dbg !2796, !tbaa !2756
  %conv74 = zext i8 %51 to i32, !dbg !2796
  %52 = load i8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i64 3), align 1, !dbg !2798, !tbaa !2756
  %conv75 = zext i8 %52 to i32, !dbg !2798
  %sub76 = sub i32 %conv74, %conv75, !dbg !2799
  store i32 %sub76, i32* %__result, align 4, !dbg !2800, !tbaa !2759
  br label %if.end.77, !dbg !2801

if.end.77:                                        ; preds = %if.then.72, %land.lhs.true.69, %if.then.62
  br label %if.end.78, !dbg !2802

if.end.78:                                        ; preds = %if.end.77, %land.lhs.true.59, %if.then.52
  br label %if.end.79, !dbg !2806

if.end.79:                                        ; preds = %if.end.78, %land.lhs.true.49, %cond.true
  %53 = load i32, i32* %__result, align 4, !dbg !2810, !tbaa !2759
  store i32 %53, i32* %tmp80, !dbg !2814, !tbaa !2759
  %54 = bitcast i32* %__result to i8*, !dbg !2815
  call void @llvm.lifetime.end(i64 4, i8* %54) #1, !dbg !2815
  %55 = bitcast i8** %__s1 to i8*, !dbg !2815
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !2815
  %56 = load i32, i32* %tmp80, !dbg !2816, !tbaa !2759
  br label %cond.end, !dbg !2745

cond.false:                                       ; preds = %land.lhs.true, %if.then.42
  %57 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2817, !tbaa !2620
  %magic81 = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %57, i32 0, i32 0, !dbg !2820
  %58 = load i8*, i8** %magic81, align 8, !dbg !2820, !tbaa !2751
  %call82 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)) #1, !dbg !2821
  br label %cond.end, !dbg !2745

cond.end:                                         ; preds = %cond.false, %if.end.79
  %cond = phi i32 [ %56, %if.end.79 ], [ %call82, %cond.false ], !dbg !2745
  store i32 %cond, i32* %tmp, !dbg !2822, !tbaa !2759
  %59 = bitcast i64* %__s2_len to i8*, !dbg !2825
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !2825
  %60 = bitcast i64* %__s1_len to i8*, !dbg !2825
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !2825
  %61 = load i32, i32* %tmp, !dbg !2826, !tbaa !2759
  %cmp83 = icmp ne i32 %61, 0, !dbg !2827
  br i1 %cmp83, label %if.then.97, label %lor.lhs.false, !dbg !2828

lor.lhs.false:                                    ; preds = %cond.end
  %62 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2829, !tbaa !2620
  %size = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %62, i32 0, i32 1, !dbg !2830
  %63 = load i32, i32* %size, align 4, !dbg !2830, !tbaa !2831
  %conv85 = sext i32 %63 to i64, !dbg !2829
  %cmp86 = icmp ult i64 %conv85, 168, !dbg !2832
  br i1 %cmp86, label %if.then.97, label %lor.lhs.false.88, !dbg !2833

lor.lhs.false.88:                                 ; preds = %lor.lhs.false
  %64 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2834, !tbaa !2620
  %MAJOR_VERSION = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %64, i32 0, i32 2, !dbg !2835
  %65 = load i32, i32* %MAJOR_VERSION, align 4, !dbg !2835, !tbaa !2836
  %cmp89 = icmp ne i32 %65, 2, !dbg !2837
  br i1 %cmp89, label %if.then.97, label %lor.lhs.false.91, !dbg !2838

lor.lhs.false.91:                                 ; preds = %lor.lhs.false.88
  %66 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2839, !tbaa !2620
  %MINOR_VERSION = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %66, i32 0, i32 3, !dbg !2840
  %67 = load i32, i32* %MINOR_VERSION, align 4, !dbg !2840, !tbaa !2841
  %cmp92 = icmp ne i32 %67, 1, !dbg !2842
  br i1 %cmp92, label %if.then.97, label %lor.lhs.false.94, !dbg !2843

lor.lhs.false.94:                                 ; preds = %lor.lhs.false.91
  %68 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !2844, !tbaa !2620
  %MICRO_VERSION = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %68, i32 0, i32 4, !dbg !2845
  %69 = load i32, i32* %MICRO_VERSION, align 4, !dbg !2845, !tbaa !2846
  %cmp95 = icmp ne i32 %69, 0, !dbg !2847
  br i1 %cmp95, label %if.then.97, label %if.end.98, !dbg !2848

if.then.97:                                       ; preds = %lor.lhs.false.94, %lor.lhs.false.91, %lor.lhs.false.88, %lor.lhs.false, %cond.end
  %70 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !2849, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %70, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i32 0, i32 0)), !dbg !2851
  store %struct._object* null, %struct._object** %retval, !dbg !2852
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2852

if.end.98:                                        ; preds = %lor.lhs.false.94
  br label %if.end.100, !dbg !2853

if.else.99:                                       ; preds = %if.end.39
  store %struct._object* null, %struct._object** %retval, !dbg !2854
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2854

if.end.100:                                       ; preds = %if.end.98
  %71 = load %struct._object*, %struct._object** @PyExc_SyntaxError, align 8, !dbg !2856, !tbaa !2620
  %call101 = call %struct._object* @PyErr_NewException(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i32 0, i32 0), %struct._object* %71, %struct._object* null), !dbg !2857
  %72 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2858, !tbaa !2620
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %72, i32 0, i32 0, !dbg !2859
  store %struct._object* %call101, %struct._object** %parseerror_obj, align 8, !dbg !2860, !tbaa !2861
  %73 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2862, !tbaa !2620
  %parseerror_obj102 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %73, i32 0, i32 0, !dbg !2863
  %74 = load %struct._object*, %struct._object** %parseerror_obj102, align 8, !dbg !2863, !tbaa !2861
  %ob_refcnt103 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !2864
  %75 = load i64, i64* %ob_refcnt103, align 8, !dbg !2865, !tbaa !2631
  %inc104 = add i64 %75, 1, !dbg !2865
  store i64 %inc104, i64* %ob_refcnt103, align 8, !dbg !2865, !tbaa !2631
  %76 = load %struct._object*, %struct._object** %m, align 8, !dbg !2866, !tbaa !2620
  %77 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2867, !tbaa !2620
  %parseerror_obj105 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %77, i32 0, i32 0, !dbg !2868
  %78 = load %struct._object*, %struct._object** %parseerror_obj105, align 8, !dbg !2868, !tbaa !2861
  %call106 = call i32 @PyModule_AddObject(%struct._object* %76, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), %struct._object* %78), !dbg !2869
  %79 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2870, !tbaa !2631
  %inc107 = add i64 %79, 1, !dbg !2870
  store i64 %inc107, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2870, !tbaa !2631
  %80 = load %struct._object*, %struct._object** %m, align 8, !dbg !2871, !tbaa !2620
  %call108 = call i32 @PyModule_AddObject(%struct._object* %80, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0)), !dbg !2872
  %81 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TreeBuilder_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2873, !tbaa !2631
  %inc109 = add i64 %81, 1, !dbg !2873
  store i64 %inc109, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TreeBuilder_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2873, !tbaa !2631
  %82 = load %struct._object*, %struct._object** %m, align 8, !dbg !2874, !tbaa !2620
  %call110 = call i32 @PyModule_AddObject(%struct._object* %82, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @TreeBuilder_Type, i32 0, i32 0, i32 0)), !dbg !2875
  %83 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @XMLParser_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2876, !tbaa !2631
  %inc111 = add i64 %83, 1, !dbg !2876
  store i64 %inc111, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @XMLParser_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2876, !tbaa !2631
  %84 = load %struct._object*, %struct._object** %m, align 8, !dbg !2877, !tbaa !2620
  %call112 = call i32 @PyModule_AddObject(%struct._object* %84, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @XMLParser_Type, i32 0, i32 0, i32 0)), !dbg !2878
  %85 = load %struct._object*, %struct._object** %m, align 8, !dbg !2879, !tbaa !2620
  store %struct._object* %85, %struct._object** %retval, !dbg !2880
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2880

cleanup:                                          ; preds = %if.end.100, %if.else.99, %if.then.97, %if.then.38, %if.then.23, %if.then.18, %if.then.14, %if.then.10, %if.then.6, %if.then.2, %if.then
  %86 = bitcast %struct.elementtreestate** %st to i8*, !dbg !2881
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !2881
  %87 = bitcast %struct._object** %temp to i8*, !dbg !2881
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !2881
  %88 = bitcast %struct._object** %m to i8*, !dbg !2881
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !2881
  %89 = load %struct._object*, %struct._object** %retval, !dbg !2881
  ret %struct._object* %89, !dbg !2881
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct._object* @PyState_FindModule(%struct.PyModuleDef*) #3

declare i32 @PyType_Ready(%struct._typeobject*) #3

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i8* @PyModule_GetState(%struct._object*) #3

declare %struct._object* @PyImport_ImportModule(i8*) #3

declare %struct._object* @PyObject_GetAttrString(%struct._object*, i8*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare i8* @PyCapsule_Import(i8*, i32) #3

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #4

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare %struct._object* @PyErr_NewException(i8*, %struct._object*, %struct._object*) #3

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @elementtree_traverse(%struct._object* %m, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca %struct._object*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret9 = alloca i32, align 4
  %vret24 = alloca i32, align 4
  store %struct._object* %m, %struct._object** %m.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %m.addr, metadata !687, metadata !2613), !dbg !2882
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !688, metadata !2613), !dbg !2883
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !689, metadata !2613), !dbg !2884
  %0 = bitcast %struct.elementtreestate** %st to i8*, !dbg !2885
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2885
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !690, metadata !2613), !dbg !2886
  %1 = load %struct._object*, %struct._object** %m.addr, align 8, !dbg !2887, !tbaa !2620
  %call = call i8* @PyModule_GetState(%struct._object* %1), !dbg !2888
  %2 = bitcast i8* %call to %struct.elementtreestate*, !dbg !2889
  store %struct.elementtreestate* %2, %struct.elementtreestate** %st, align 8, !dbg !2886, !tbaa !2620
  br label %do.body, !dbg !2890

do.body:                                          ; preds = %entry
  %3 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2891, !tbaa !2620
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %3, i32 0, i32 0, !dbg !2893
  %4 = load %struct._object*, %struct._object** %parseerror_obj, align 8, !dbg !2893, !tbaa !2861
  %tobool = icmp ne %struct._object* %4, null, !dbg !2894
  br i1 %tobool, label %if.then, label %if.end.5, !dbg !2895

if.then:                                          ; preds = %do.body
  %5 = bitcast i32* %vret to i8*, !dbg !2896
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !2896
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !691, metadata !2613), !dbg !2898
  %6 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2899, !tbaa !2620
  %7 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2900, !tbaa !2620
  %parseerror_obj1 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %7, i32 0, i32 0, !dbg !2901
  %8 = load %struct._object*, %struct._object** %parseerror_obj1, align 8, !dbg !2901, !tbaa !2861
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !2902, !tbaa !2620
  %call2 = call i32 %6(%struct._object* %8, i8* %9), !dbg !2899
  store i32 %call2, i32* %vret, align 4, !dbg !2898, !tbaa !2759
  %10 = load i32, i32* %vret, align 4, !dbg !2903, !tbaa !2759
  %tobool3 = icmp ne i32 %10, 0, !dbg !2903
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !2905

if.then.4:                                        ; preds = %if.then
  %11 = load i32, i32* %vret, align 4, !dbg !2906, !tbaa !2759
  store i32 %11, i32* %retval, !dbg !2908
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2908

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !2909
  br label %cleanup, !dbg !2909

cleanup:                                          ; preds = %if.end, %if.then.4
  %12 = bitcast i32* %vret to i8*, !dbg !2911
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !2911
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.36 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.5, !dbg !2914

if.end.5:                                         ; preds = %cleanup.cont, %do.body
  br label %do.cond, !dbg !2915

do.cond:                                          ; preds = %if.end.5
  br label %do.end, !dbg !2918

do.end:                                           ; preds = %do.cond
  br label %do.body.6, !dbg !2920

do.body.6:                                        ; preds = %do.end
  %13 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2921, !tbaa !2620
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %13, i32 0, i32 1, !dbg !2923
  %14 = load %struct._object*, %struct._object** %deepcopy_obj, align 8, !dbg !2923, !tbaa !2676
  %tobool7 = icmp ne %struct._object* %14, null, !dbg !2924
  br i1 %tobool7, label %if.then.8, label %if.end.18, !dbg !2925

if.then.8:                                        ; preds = %do.body.6
  %15 = bitcast i32* %vret9 to i8*, !dbg !2926
  call void @llvm.lifetime.start(i64 4, i8* %15) #1, !dbg !2926
  call void @llvm.dbg.declare(metadata i32* %vret9, metadata !695, metadata !2613), !dbg !2928
  %16 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2929, !tbaa !2620
  %17 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2930, !tbaa !2620
  %deepcopy_obj10 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %17, i32 0, i32 1, !dbg !2931
  %18 = load %struct._object*, %struct._object** %deepcopy_obj10, align 8, !dbg !2931, !tbaa !2676
  %19 = load i8*, i8** %arg.addr, align 8, !dbg !2932, !tbaa !2620
  %call11 = call i32 %16(%struct._object* %18, i8* %19), !dbg !2929
  store i32 %call11, i32* %vret9, align 4, !dbg !2928, !tbaa !2759
  %20 = load i32, i32* %vret9, align 4, !dbg !2933, !tbaa !2759
  %tobool12 = icmp ne i32 %20, 0, !dbg !2933
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !2935

if.then.13:                                       ; preds = %if.then.8
  %21 = load i32, i32* %vret9, align 4, !dbg !2936, !tbaa !2759
  store i32 %21, i32* %retval, !dbg !2938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.15, !dbg !2938

if.end.14:                                        ; preds = %if.then.8
  store i32 0, i32* %cleanup.dest.slot, !dbg !2939
  br label %cleanup.15, !dbg !2939

cleanup.15:                                       ; preds = %if.end.14, %if.then.13
  %22 = bitcast i32* %vret9 to i8*, !dbg !2941
  call void @llvm.lifetime.end(i64 4, i8* %22) #1, !dbg !2941
  %cleanup.dest.16 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.16, label %cleanup.36 [
    i32 0, label %cleanup.cont.17
  ]

cleanup.cont.17:                                  ; preds = %cleanup.15
  br label %if.end.18, !dbg !2944

if.end.18:                                        ; preds = %cleanup.cont.17, %do.body.6
  br label %do.cond.19, !dbg !2945

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !2948

do.end.20:                                        ; preds = %do.cond.19
  br label %do.body.21, !dbg !2950

do.body.21:                                       ; preds = %do.end.20
  %23 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2951, !tbaa !2620
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %23, i32 0, i32 2, !dbg !2953
  %24 = load %struct._object*, %struct._object** %elementpath_obj, align 8, !dbg !2953, !tbaa !2729
  %tobool22 = icmp ne %struct._object* %24, null, !dbg !2954
  br i1 %tobool22, label %if.then.23, label %if.end.33, !dbg !2955

if.then.23:                                       ; preds = %do.body.21
  %25 = bitcast i32* %vret24 to i8*, !dbg !2956
  call void @llvm.lifetime.start(i64 4, i8* %25) #1, !dbg !2956
  call void @llvm.dbg.declare(metadata i32* %vret24, metadata !699, metadata !2613), !dbg !2958
  %26 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2959, !tbaa !2620
  %27 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2960, !tbaa !2620
  %elementpath_obj25 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %27, i32 0, i32 2, !dbg !2961
  %28 = load %struct._object*, %struct._object** %elementpath_obj25, align 8, !dbg !2961, !tbaa !2729
  %29 = load i8*, i8** %arg.addr, align 8, !dbg !2962, !tbaa !2620
  %call26 = call i32 %26(%struct._object* %28, i8* %29), !dbg !2959
  store i32 %call26, i32* %vret24, align 4, !dbg !2958, !tbaa !2759
  %30 = load i32, i32* %vret24, align 4, !dbg !2963, !tbaa !2759
  %tobool27 = icmp ne i32 %30, 0, !dbg !2963
  br i1 %tobool27, label %if.then.28, label %if.end.29, !dbg !2965

if.then.28:                                       ; preds = %if.then.23
  %31 = load i32, i32* %vret24, align 4, !dbg !2966, !tbaa !2759
  store i32 %31, i32* %retval, !dbg !2968
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.30, !dbg !2968

if.end.29:                                        ; preds = %if.then.23
  store i32 0, i32* %cleanup.dest.slot, !dbg !2969
  br label %cleanup.30, !dbg !2969

cleanup.30:                                       ; preds = %if.end.29, %if.then.28
  %32 = bitcast i32* %vret24 to i8*, !dbg !2971
  call void @llvm.lifetime.end(i64 4, i8* %32) #1, !dbg !2971
  %cleanup.dest.31 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.31, label %cleanup.36 [
    i32 0, label %cleanup.cont.32
  ]

cleanup.cont.32:                                  ; preds = %cleanup.30
  br label %if.end.33, !dbg !2974

if.end.33:                                        ; preds = %cleanup.cont.32, %do.body.21
  br label %do.cond.34, !dbg !2975

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !2978

do.end.35:                                        ; preds = %do.cond.34
  store i32 0, i32* %retval, !dbg !2980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !2980

cleanup.36:                                       ; preds = %do.end.35, %cleanup.30, %cleanup.15, %cleanup
  %33 = bitcast %struct.elementtreestate** %st to i8*, !dbg !2981
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !2981
  %34 = load i32, i32* %retval, !dbg !2981
  ret i32 %34, !dbg !2981
}

; Function Attrs: nounwind uwtable
define internal i32 @elementtree_clear(%struct._object* %m) #0 {
entry:
  %m.addr = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct._object* %m, %struct._object** %m.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %m.addr, metadata !705, metadata !2613), !dbg !2982
  %0 = bitcast %struct.elementtreestate** %st to i8*, !dbg !2983
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2983
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !706, metadata !2613), !dbg !2984
  %1 = load %struct._object*, %struct._object** %m.addr, align 8, !dbg !2985, !tbaa !2620
  %call = call i8* @PyModule_GetState(%struct._object* %1), !dbg !2986
  %2 = bitcast i8* %call to %struct.elementtreestate*, !dbg !2987
  store %struct.elementtreestate* %2, %struct.elementtreestate** %st, align 8, !dbg !2984, !tbaa !2620
  br label %do.body, !dbg !2988

do.body:                                          ; preds = %entry
  %3 = bitcast %struct._object** %_py_tmp to i8*, !dbg !2989
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2989
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !707, metadata !2613), !dbg !2991
  %4 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2992, !tbaa !2620
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %4, i32 0, i32 0, !dbg !2993
  %5 = load %struct._object*, %struct._object** %parseerror_obj, align 8, !dbg !2993, !tbaa !2861
  store %struct._object* %5, %struct._object** %_py_tmp, align 8, !dbg !2991, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !2994, !tbaa !2620
  %cmp = icmp ne %struct._object* %6, null, !dbg !2995
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !2996

if.then:                                          ; preds = %do.body
  %7 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !2997, !tbaa !2620
  %parseerror_obj1 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %7, i32 0, i32 0, !dbg !2999
  store %struct._object* null, %struct._object** %parseerror_obj1, align 8, !dbg !3000, !tbaa !2861
  br label %do.body.2, !dbg !3001

do.body.2:                                        ; preds = %if.then
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3002
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !3002
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !709, metadata !2613), !dbg !3004
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3005, !tbaa !2620
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !3004, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3006, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !3008
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !3009, !tbaa !2631
  %dec = add i64 %11, -1, !dbg !3009
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3009, !tbaa !2631
  %cmp3 = icmp ne i64 %dec, 0, !dbg !3010
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !3011

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !3012

if.else:                                          ; preds = %do.body.2
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3014, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !3016
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3016, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !3017
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3017, !tbaa !2705
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3018, !tbaa !2620
  call void %14(%struct._object* %15), !dbg !3019
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3020
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !3020
  br label %do.cond, !dbg !3022

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3023

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !3025

if.end.5:                                         ; preds = %do.end, %do.body
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3027
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !3027
  br label %do.cond.6, !dbg !3030

do.cond.6:                                        ; preds = %if.end.5
  br label %do.end.7, !dbg !3031

do.end.7:                                         ; preds = %do.cond.6
  br label %do.body.8, !dbg !3033

do.body.8:                                        ; preds = %do.end.7
  %18 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !3034
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !3034
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !713, metadata !2613), !dbg !3036
  %19 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !3037, !tbaa !2620
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %19, i32 0, i32 1, !dbg !3038
  %20 = load %struct._object*, %struct._object** %deepcopy_obj, align 8, !dbg !3038, !tbaa !2676
  store %struct._object* %20, %struct._object** %_py_tmp9, align 8, !dbg !3036, !tbaa !2620
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !3039, !tbaa !2620
  %cmp10 = icmp ne %struct._object* %21, null, !dbg !3040
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !3041

if.then.11:                                       ; preds = %do.body.8
  %22 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !3042, !tbaa !2620
  %deepcopy_obj12 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %22, i32 0, i32 1, !dbg !3044
  store %struct._object* null, %struct._object** %deepcopy_obj12, align 8, !dbg !3045, !tbaa !2676
  br label %do.body.13, !dbg !3046

do.body.13:                                       ; preds = %if.then.11
  %23 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !3047
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !3047
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !715, metadata !2613), !dbg !3049
  %24 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !3050, !tbaa !2620
  store %struct._object* %24, %struct._object** %_py_decref_tmp14, align 8, !dbg !3049, !tbaa !2620
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3051, !tbaa !2620
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !3053
  %26 = load i64, i64* %ob_refcnt15, align 8, !dbg !3054, !tbaa !2631
  %dec16 = add i64 %26, -1, !dbg !3054
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !3054, !tbaa !2631
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !3055
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !3056

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !3057

if.else.19:                                       ; preds = %do.body.13
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3059, !tbaa !2620
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !3061
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !3061, !tbaa !2703
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !3062
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !3062, !tbaa !2705
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3063, !tbaa !2620
  call void %29(%struct._object* %30), !dbg !3064
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %31 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !3065
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !3065
  br label %do.cond.23, !dbg !3067

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !3068

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !3070

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %32 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !3072
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !3072
  br label %do.cond.26, !dbg !3073

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !3074

do.end.27:                                        ; preds = %do.cond.26
  br label %do.body.28, !dbg !3076

do.body.28:                                       ; preds = %do.end.27
  %33 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !3077
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !3077
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !719, metadata !2613), !dbg !3079
  %34 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !3080, !tbaa !2620
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %34, i32 0, i32 2, !dbg !3081
  %35 = load %struct._object*, %struct._object** %elementpath_obj, align 8, !dbg !3081, !tbaa !2729
  store %struct._object* %35, %struct._object** %_py_tmp29, align 8, !dbg !3079, !tbaa !2620
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !3082, !tbaa !2620
  %cmp30 = icmp ne %struct._object* %36, null, !dbg !3083
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !3084

if.then.31:                                       ; preds = %do.body.28
  %37 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !3085, !tbaa !2620
  %elementpath_obj32 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %37, i32 0, i32 2, !dbg !3087
  store %struct._object* null, %struct._object** %elementpath_obj32, align 8, !dbg !3088, !tbaa !2729
  br label %do.body.33, !dbg !3089

do.body.33:                                       ; preds = %if.then.31
  %38 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !3090
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !3090
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !721, metadata !2613), !dbg !3092
  %39 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !3093, !tbaa !2620
  store %struct._object* %39, %struct._object** %_py_decref_tmp34, align 8, !dbg !3092, !tbaa !2620
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !3094, !tbaa !2620
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !3096
  %41 = load i64, i64* %ob_refcnt35, align 8, !dbg !3097, !tbaa !2631
  %dec36 = add i64 %41, -1, !dbg !3097
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !3097, !tbaa !2631
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !3098
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !3099

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !3100

if.else.39:                                       ; preds = %do.body.33
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !3102, !tbaa !2620
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !3104
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !3104, !tbaa !2703
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !3105
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !3105, !tbaa !2705
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !3106, !tbaa !2620
  call void %44(%struct._object* %45), !dbg !3107
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %46 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !3108
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !3108
  br label %do.cond.43, !dbg !3110

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !3111

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !3113

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %47 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !3115
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !3115
  br label %do.cond.46, !dbg !3116

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !3117

do.end.47:                                        ; preds = %do.cond.46
  %48 = bitcast %struct.elementtreestate** %st to i8*, !dbg !3119
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !3119
  ret i32 0, !dbg !3120
}

; Function Attrs: nounwind uwtable
define internal void @elementtree_free(i8* %m) #0 {
entry:
  %m.addr = alloca i8*, align 8
  store i8* %m, i8** %m.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %m.addr, metadata !727, metadata !2613), !dbg !3121
  %0 = load i8*, i8** %m.addr, align 8, !dbg !3122, !tbaa !2620
  %1 = bitcast i8* %0 to %struct._object*, !dbg !3123
  %call = call i32 @elementtree_clear(%struct._object* %1), !dbg !3124
  ret void, !dbg !3125
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @subelement(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %elem = alloca %struct._object*, align 8
  %parent = alloca %struct.ElementObject*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !627, metadata !2613), !dbg !3126
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !628, metadata !2613), !dbg !3127
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !629, metadata !2613), !dbg !3128
  %0 = bitcast %struct._object** %elem to i8*, !dbg !3129
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3129
  call void @llvm.dbg.declare(metadata %struct._object** %elem, metadata !630, metadata !2613), !dbg !3130
  %1 = bitcast %struct.ElementObject** %parent to i8*, !dbg !3131
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3131
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %parent, metadata !631, metadata !2613), !dbg !3132
  %2 = bitcast %struct._object** %tag to i8*, !dbg !3133
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3133
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !632, metadata !2613), !dbg !3134
  %3 = bitcast %struct._object** %attrib to i8*, !dbg !3135
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3135
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !633, metadata !2613), !dbg !3136
  store %struct._object* null, %struct._object** %attrib, align 8, !dbg !3136, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3137, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0), %struct._typeobject* @Element_Type, %struct.ElementObject** %parent, %struct._object** %tag, %struct._typeobject* @PyDict_Type, %struct._object** %attrib), !dbg !3139
  %tobool = icmp ne i32 %call, 0, !dbg !3139
  br i1 %tobool, label %if.end, label %if.then, !dbg !3140

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3141
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3141

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3143, !tbaa !2620
  %tobool1 = icmp ne %struct._object* %5, null, !dbg !3143
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !3145

if.then.2:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3146, !tbaa !2620
  %call3 = call %struct._object* @PyDict_Copy(%struct._object* %6), !dbg !3148
  store %struct._object* %call3, %struct._object** %attrib, align 8, !dbg !3149, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3150, !tbaa !2620
  %tobool4 = icmp ne %struct._object* %7, null, !dbg !3150
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !3152

if.then.5:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !3153
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3153

if.end.6:                                         ; preds = %if.then.2
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3154, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %8, null, !dbg !3154
  br i1 %tobool7, label %if.then.8, label %if.end.12, !dbg !3156

if.then.8:                                        ; preds = %if.end.6
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3157, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3160, !tbaa !2620
  %call9 = call i32 @PyDict_Update(%struct._object* %9, %struct._object* %10), !dbg !3161
  %cmp = icmp slt i32 %call9, 0, !dbg !3162
  br i1 %cmp, label %if.then.10, label %if.end.11, !dbg !3163

if.then.10:                                       ; preds = %if.then.8
  store %struct._object* null, %struct._object** %retval, !dbg !3164
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3164

if.end.11:                                        ; preds = %if.then.8
  br label %if.end.12, !dbg !3166

if.end.12:                                        ; preds = %if.end.11, %if.end.6
  br label %if.end.21, !dbg !3167

if.else:                                          ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3168, !tbaa !2620
  %tobool13 = icmp ne %struct._object* %11, null, !dbg !3168
  br i1 %tobool13, label %if.then.14, label %if.else.19, !dbg !3170

if.then.14:                                       ; preds = %if.else
  %12 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3171, !tbaa !2620
  %call15 = call %struct._object* @get_attrib_from_keywords(%struct._object* %12), !dbg !3173
  store %struct._object* %call15, %struct._object** %attrib, align 8, !dbg !3174, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3175, !tbaa !2620
  %tobool16 = icmp ne %struct._object* %13, null, !dbg !3175
  br i1 %tobool16, label %if.end.18, label %if.then.17, !dbg !3177

if.then.17:                                       ; preds = %if.then.14
  store %struct._object* null, %struct._object** %retval, !dbg !3178
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3178

if.end.18:                                        ; preds = %if.then.14
  br label %if.end.20, !dbg !3179

if.else.19:                                       ; preds = %if.else
  %14 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3180, !tbaa !2631
  %inc = add i64 %14, 1, !dbg !3180
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3180, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib, align 8, !dbg !3182, !tbaa !2620
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.19, %if.end.18
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20, %if.end.12
  %15 = load %struct._object*, %struct._object** %tag, align 8, !dbg !3183, !tbaa !2620
  %16 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3184, !tbaa !2620
  %call22 = call %struct._object* @create_new_element(%struct._object* %15, %struct._object* %16), !dbg !3185
  store %struct._object* %call22, %struct._object** %elem, align 8, !dbg !3186, !tbaa !2620
  br label %do.body, !dbg !3187

do.body:                                          ; preds = %if.end.21
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3188
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !3188
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !634, metadata !2613), !dbg !3190
  %18 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3191, !tbaa !2620
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !3190, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3192, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !3194
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !3195, !tbaa !2631
  %dec = add i64 %20, -1, !dbg !3195
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3195, !tbaa !2631
  %cmp23 = icmp ne i64 %dec, 0, !dbg !3196
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !3197

if.then.24:                                       ; preds = %do.body
  br label %if.end.26, !dbg !3198

if.else.25:                                       ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3200, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !3202
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3202, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !3203
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3203, !tbaa !2705
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3204, !tbaa !2620
  call void %23(%struct._object* %24), !dbg !3205
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.25, %if.then.24
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3206
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !3206
  br label %do.cond, !dbg !3208

do.cond:                                          ; preds = %if.end.26
  br label %do.end, !dbg !3209

do.end:                                           ; preds = %do.cond
  %26 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3211, !tbaa !2620
  %cmp27 = icmp eq %struct._object* %26, null, !dbg !3213
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !3214

if.then.28:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !3215
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3215

if.end.29:                                        ; preds = %do.end
  %27 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8, !dbg !3216, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3217, !tbaa !2620
  %call30 = call i32 @element_add_subelement(%struct.ElementObject* %27, %struct._object* %28), !dbg !3218
  %cmp31 = icmp slt i32 %call30, 0, !dbg !3219
  br i1 %cmp31, label %if.then.32, label %if.end.45, !dbg !3220

if.then.32:                                       ; preds = %if.end.29
  br label %do.body.33, !dbg !3221

do.body.33:                                       ; preds = %if.then.32
  %29 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !3222
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !3222
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !636, metadata !2613), !dbg !3224
  %30 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3225, !tbaa !2620
  store %struct._object* %30, %struct._object** %_py_decref_tmp34, align 8, !dbg !3224, !tbaa !2620
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !3226, !tbaa !2620
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !3228
  %32 = load i64, i64* %ob_refcnt35, align 8, !dbg !3229, !tbaa !2631
  %dec36 = add i64 %32, -1, !dbg !3229
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !3229, !tbaa !2631
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !3230
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !3231

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !3232

if.else.39:                                       ; preds = %do.body.33
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !3234, !tbaa !2620
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !3236
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !3236, !tbaa !2703
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !3237
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !3237, !tbaa !2705
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !3238, !tbaa !2620
  call void %35(%struct._object* %36), !dbg !3239
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %37 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !3240
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !3240
  br label %do.cond.43, !dbg !3242

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !3243

do.end.44:                                        ; preds = %do.cond.43
  store %struct._object* null, %struct._object** %retval, !dbg !3245
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3245

if.end.45:                                        ; preds = %if.end.29
  %38 = load %struct._object*, %struct._object** %elem, align 8, !dbg !3246, !tbaa !2620
  store %struct._object* %38, %struct._object** %retval, !dbg !3247
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3247

cleanup:                                          ; preds = %if.end.45, %do.end.44, %if.then.28, %if.then.17, %if.then.10, %if.then.5, %if.then
  %39 = bitcast %struct._object** %attrib to i8*, !dbg !3248
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !3248
  %40 = bitcast %struct._object** %tag to i8*, !dbg !3248
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !3248
  %41 = bitcast %struct.ElementObject** %parent to i8*, !dbg !3248
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !3248
  %42 = bitcast %struct._object** %elem to i8*, !dbg !3248
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !3248
  %43 = load %struct._object*, %struct._object** %retval, !dbg !3248
  ret %struct._object* %43, !dbg !3248
}

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #3

declare %struct._object* @PyDict_Copy(%struct._object*) #3

declare i32 @PyDict_Update(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_attrib_from_keywords(%struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %attrib_str = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !642, metadata !2613), !dbg !3249
  %0 = bitcast %struct._object** %attrib_str to i8*, !dbg !3250
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3250
  call void @llvm.dbg.declare(metadata %struct._object** %attrib_str, metadata !643, metadata !2613), !dbg !3251
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0)), !dbg !3252
  store %struct._object* %call, %struct._object** %attrib_str, align 8, !dbg !3251, !tbaa !2620
  %1 = bitcast %struct._object** %attrib to i8*, !dbg !3253
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3253
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !644, metadata !2613), !dbg !3254
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3255, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %attrib_str, align 8, !dbg !3256, !tbaa !2620
  %call1 = call %struct._object* @PyDict_GetItem(%struct._object* %2, %struct._object* %3), !dbg !3257
  store %struct._object* %call1, %struct._object** %attrib, align 8, !dbg !3254, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3258, !tbaa !2620
  %tobool = icmp ne %struct._object* %4, null, !dbg !3258
  br i1 %tobool, label %if.then, label %if.else.11, !dbg !3259

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3260, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !3261
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3261, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !3262
  %7 = load i64, i64* %tp_flags, align 8, !dbg !3262, !tbaa !3263
  %and = and i64 %7, 536870912, !dbg !3264
  %cmp = icmp ne i64 %and, 0, !dbg !3265
  br i1 %cmp, label %if.end.8, label %if.then.2, !dbg !3266

if.then.2:                                        ; preds = %if.then
  br label %do.body, !dbg !3267

do.body:                                          ; preds = %if.then.2
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3268
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !3268
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !645, metadata !2613), !dbg !3270
  %9 = load %struct._object*, %struct._object** %attrib_str, align 8, !dbg !3271, !tbaa !2620
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !3270, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3272, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !3274
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !3275, !tbaa !2631
  %dec = add i64 %11, -1, !dbg !3275
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3275, !tbaa !2631
  %cmp3 = icmp ne i64 %dec, 0, !dbg !3276
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !3277

if.then.4:                                        ; preds = %do.body
  br label %if.end, !dbg !3278

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3280, !tbaa !2620
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !3282
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !3282, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !3283
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3283, !tbaa !2705
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3284, !tbaa !2620
  call void %14(%struct._object* %15), !dbg !3285
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3286
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !3286
  br label %do.cond, !dbg !3288

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3289

do.end:                                           ; preds = %do.cond
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3291, !tbaa !2620
  %18 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3292, !tbaa !2620
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !3293
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !3293, !tbaa !2703
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 1, !dbg !3294
  %20 = load i8*, i8** %tp_name, align 8, !dbg !3294, !tbaa !3295
  %call7 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i32 0, i32 0), i8* %20), !dbg !3296
  store %struct._object* null, %struct._object** %retval, !dbg !3297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3297

if.end.8:                                         ; preds = %if.then
  %21 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3298, !tbaa !2620
  %call9 = call %struct._object* @PyDict_Copy(%struct._object* %21), !dbg !3299
  store %struct._object* %call9, %struct._object** %attrib, align 8, !dbg !3300, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3301, !tbaa !2620
  %23 = load %struct._object*, %struct._object** %attrib_str, align 8, !dbg !3302, !tbaa !2620
  %call10 = call i32 @PyDict_DelItem(%struct._object* %22, %struct._object* %23), !dbg !3303
  br label %if.end.13, !dbg !3304

if.else.11:                                       ; preds = %entry
  %call12 = call %struct._object* @PyDict_New(), !dbg !3305
  store %struct._object* %call12, %struct._object** %attrib, align 8, !dbg !3307, !tbaa !2620
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.11, %if.end.8
  br label %do.body.14, !dbg !3308

do.body.14:                                       ; preds = %if.end.13
  %24 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !3309
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !3309
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !651, metadata !2613), !dbg !3311
  %25 = load %struct._object*, %struct._object** %attrib_str, align 8, !dbg !3312, !tbaa !2620
  store %struct._object* %25, %struct._object** %_py_decref_tmp15, align 8, !dbg !3311, !tbaa !2620
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !3313, !tbaa !2620
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !3315
  %27 = load i64, i64* %ob_refcnt16, align 8, !dbg !3316, !tbaa !2631
  %dec17 = add i64 %27, -1, !dbg !3316
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !3316, !tbaa !2631
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !3317
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !3318

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !3319

if.else.20:                                       ; preds = %do.body.14
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !3321, !tbaa !2620
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !3323
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !3323, !tbaa !2703
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !3324
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !3324, !tbaa !2705
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !3325, !tbaa !2620
  call void %30(%struct._object* %31), !dbg !3326
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %32 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !3327
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !3327
  br label %do.cond.24, !dbg !3329

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !3330

do.end.25:                                        ; preds = %do.cond.24
  %33 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3332, !tbaa !2620
  %tobool26 = icmp ne %struct._object* %33, null, !dbg !3332
  br i1 %tobool26, label %if.then.27, label %if.end.32, !dbg !3334

if.then.27:                                       ; preds = %do.end.25
  %34 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3335, !tbaa !2620
  %35 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3337, !tbaa !2620
  %call28 = call i32 @PyDict_Update(%struct._object* %34, %struct._object* %35), !dbg !3338
  %cmp29 = icmp slt i32 %call28, 0, !dbg !3339
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !3340

if.then.30:                                       ; preds = %if.then.27
  store %struct._object* null, %struct._object** %retval, !dbg !3341
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3341

if.end.31:                                        ; preds = %if.then.27
  br label %if.end.32, !dbg !3342

if.end.32:                                        ; preds = %if.end.31, %do.end.25
  %36 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !3344, !tbaa !2620
  store %struct._object* %36, %struct._object** %retval, !dbg !3345
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3345

cleanup:                                          ; preds = %if.end.32, %if.then.30, %do.end
  %37 = bitcast %struct._object** %attrib to i8*, !dbg !3346
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !3346
  %38 = bitcast %struct._object** %attrib_str to i8*, !dbg !3346
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !3346
  %39 = load %struct._object*, %struct._object** %retval, !dbg !3346
  ret %struct._object* %39, !dbg !3346
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @create_new_element(%struct._object* %tag, %struct._object* %attrib) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %tag.addr, metadata !655, metadata !2613), !dbg !3347
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %attrib.addr, metadata !656, metadata !2613), !dbg !3348
  %0 = bitcast %struct.ElementObject** %self to i8*, !dbg !3349
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3349
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self, metadata !657, metadata !2613), !dbg !3350
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @Element_Type), !dbg !3351
  %1 = bitcast %struct._object* %call to %struct.ElementObject*, !dbg !3352
  store %struct.ElementObject* %1, %struct.ElementObject** %self, align 8, !dbg !3353, !tbaa !2620
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3354, !tbaa !2620
  %cmp = icmp eq %struct.ElementObject* %2, null, !dbg !3356
  br i1 %cmp, label %if.then, label %if.end, !dbg !3357

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3358
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3358

if.end:                                           ; preds = %entry
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3359, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4, !dbg !3360
  store %struct.ElementObjectExtra* null, %struct.ElementObjectExtra** %extra, align 8, !dbg !3361, !tbaa !3362
  %4 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !3364, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !3365
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !3366, !tbaa !2631
  %inc = add i64 %5, 1, !dbg !3366
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3366, !tbaa !2631
  %6 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !3367, !tbaa !2620
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3368, !tbaa !2620
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 1, !dbg !3369
  store %struct._object* %6, %struct._object** %tag1, align 8, !dbg !3370, !tbaa !3371
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3372, !tbaa !2631
  %inc2 = add i64 %8, 1, !dbg !3372
  store i64 %inc2, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3372, !tbaa !2631
  %9 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3373, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %9, i32 0, i32 2, !dbg !3374
  store %struct._object* @_Py_NoneStruct, %struct._object** %text, align 8, !dbg !3375, !tbaa !3376
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3377, !tbaa !2631
  %inc3 = add i64 %10, 1, !dbg !3377
  store i64 %inc3, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3377, !tbaa !2631
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3378, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 3, !dbg !3379
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail, align 8, !dbg !3380, !tbaa !3381
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3382, !tbaa !2620
  %weakreflist = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 5, !dbg !3383
  store %struct._object* null, %struct._object** %weakreflist, align 8, !dbg !3384, !tbaa !3385
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3386, !tbaa !2620
  %14 = bitcast %struct.ElementObject* %13 to i8*, !dbg !3386
  call void @PyObject_GC_Track(i8* %14), !dbg !3387
  %15 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !3388, !tbaa !2620
  %cmp4 = icmp ne %struct._object* %15, @_Py_NoneStruct, !dbg !3389
  br i1 %cmp4, label %land.lhs.true, label %if.end.15, !dbg !3390

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !3391, !tbaa !2620
  %call5 = call i32 @is_empty_dict(%struct._object* %16), !dbg !3393
  %tobool = icmp ne i32 %call5, 0, !dbg !3393
  br i1 %tobool, label %if.end.15, label %if.then.6, !dbg !3394

if.then.6:                                        ; preds = %land.lhs.true
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3395, !tbaa !2620
  %18 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !3396, !tbaa !2620
  %call7 = call i32 @create_extra(%struct.ElementObject* %17, %struct._object* %18), !dbg !3397
  %cmp8 = icmp slt i32 %call7, 0, !dbg !3398
  br i1 %cmp8, label %if.then.9, label %if.end.14, !dbg !3399

if.then.9:                                        ; preds = %if.then.6
  br label %do.body, !dbg !3400

do.body:                                          ; preds = %if.then.9
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3401
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !3401
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !658, metadata !2613), !dbg !3403
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3404, !tbaa !2620
  %21 = bitcast %struct.ElementObject* %20 to %struct._object*, !dbg !3405
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !3403, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3406, !tbaa !2620
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !3408
  %23 = load i64, i64* %ob_refcnt10, align 8, !dbg !3409, !tbaa !2631
  %dec = add i64 %23, -1, !dbg !3409
  store i64 %dec, i64* %ob_refcnt10, align 8, !dbg !3409, !tbaa !2631
  %cmp11 = icmp ne i64 %dec, 0, !dbg !3410
  br i1 %cmp11, label %if.then.12, label %if.else, !dbg !3411

if.then.12:                                       ; preds = %do.body
  br label %if.end.13, !dbg !3412

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3414, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !3416
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3416, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !3417
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3417, !tbaa !2705
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3418, !tbaa !2620
  call void %26(%struct._object* %27), !dbg !3419
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3420
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !3420
  br label %do.cond, !dbg !3422

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !3423

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !3425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3425

if.end.14:                                        ; preds = %if.then.6
  br label %if.end.15, !dbg !3426

if.end.15:                                        ; preds = %if.end.14, %land.lhs.true, %if.end
  %29 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !3427, !tbaa !2620
  %30 = bitcast %struct.ElementObject* %29 to %struct._object*, !dbg !3428
  store %struct._object* %30, %struct._object** %retval, !dbg !3429
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3429

cleanup:                                          ; preds = %if.end.15, %do.end, %if.then
  %31 = bitcast %struct.ElementObject** %self to i8*, !dbg !3430
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !3430
  %32 = load %struct._object*, %struct._object** %retval, !dbg !3430
  ret %struct._object* %32, !dbg !3430
}

; Function Attrs: nounwind uwtable
define internal i32 @element_add_subelement(%struct.ElementObject* %self, %struct._object* %element) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %element.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !675, metadata !2613), !dbg !3431
  store %struct._object* %element, %struct._object** %element.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %element.addr, metadata !676, metadata !2613), !dbg !3432
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3433, !tbaa !2620
  %call = call i32 @element_resize(%struct.ElementObject* %0, i32 1), !dbg !3435
  %cmp = icmp slt i32 %call, 0, !dbg !3436
  br i1 %cmp, label %if.then, label %if.end, !dbg !3437

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3438
  br label %return, !dbg !3438

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !3439, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0, !dbg !3440
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !3441, !tbaa !2631
  %inc = add i64 %2, 1, !dbg !3441
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3441, !tbaa !2631
  %3 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !3442, !tbaa !2620
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3443, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4, !dbg !3444
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !3444, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %5, i32 0, i32 1, !dbg !3445
  %6 = load i32, i32* %length, align 4, !dbg !3445, !tbaa !3446
  %idxprom = sext i32 %6 to i64, !dbg !3448
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3448, !tbaa !2620
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4, !dbg !3449
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8, !dbg !3449, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 3, !dbg !3450
  %9 = load %struct._object**, %struct._object*** %children, align 8, !dbg !3450, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %9, i64 %idxprom, !dbg !3448
  store %struct._object* %3, %struct._object** %arrayidx, align 8, !dbg !3452, !tbaa !2620
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3453, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4, !dbg !3454
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !3454, !tbaa !3362
  %length3 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 1, !dbg !3455
  %12 = load i32, i32* %length3, align 4, !dbg !3456, !tbaa !3446
  %inc4 = add i32 %12, 1, !dbg !3456
  store i32 %inc4, i32* %length3, align 4, !dbg !3456, !tbaa !3446
  store i32 0, i32* %retval, !dbg !3457
  br label %return, !dbg !3457

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, !dbg !3458
  ret i32 %13, !dbg !3458
}

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare %struct._object* @PyDict_GetItem(%struct._object*, %struct._object*) #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare i32 @PyDict_DelItem(%struct._object*, %struct._object*) #3

declare %struct._object* @PyDict_New() #3

declare %struct._object* @_PyObject_GC_New(%struct._typeobject*) #3

declare void @PyObject_GC_Track(i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @is_empty_dict(%struct._object* %obj) #0 {
entry:
  %obj.addr = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !666, metadata !2613), !dbg !3459
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !3460, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !3461
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3461, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %1, @PyDict_Type, !dbg !3462
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3463

land.rhs:                                         ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !3464, !tbaa !2620
  %call = call i64 @PyDict_Size(%struct._object* %2), !dbg !3466
  %cmp1 = icmp eq i64 %call, 0, !dbg !3467
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32, !dbg !3468
  ret i32 %land.ext, !dbg !3470
}

; Function Attrs: nounwind uwtable
define internal i32 @create_extra(%struct.ElementObject* %self, %struct._object* %attrib) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !671, metadata !2613), !dbg !3471
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %attrib.addr, metadata !672, metadata !2613), !dbg !3472
  %call = call i8* @PyObject_Malloc(i64 56), !dbg !3473
  %0 = bitcast i8* %call to %struct.ElementObjectExtra*, !dbg !3473
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3474, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4, !dbg !3475
  store %struct.ElementObjectExtra* %0, %struct.ElementObjectExtra** %extra, align 8, !dbg !3476, !tbaa !3362
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3477, !tbaa !2620
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4, !dbg !3479
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8, !dbg !3479, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %3, null, !dbg !3477
  br i1 %tobool, label %if.end, label %if.then, !dbg !3480

if.then:                                          ; preds = %entry
  %call2 = call %struct._object* @PyErr_NoMemory(), !dbg !3481
  store i32 -1, i32* %retval, !dbg !3483
  br label %return, !dbg !3483

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !3484, !tbaa !2620
  %tobool3 = icmp ne %struct._object* %4, null, !dbg !3484
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !3486

if.then.4:                                        ; preds = %if.end
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib.addr, align 8, !dbg !3487, !tbaa !2620
  br label %if.end.5, !dbg !3488

if.end.5:                                         ; preds = %if.then.4, %if.end
  %5 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !3489, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !3490
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !3491, !tbaa !2631
  %inc = add i64 %6, 1, !dbg !3491
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3491, !tbaa !2631
  %7 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !3492, !tbaa !2620
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3493, !tbaa !2620
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 4, !dbg !3494
  %9 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8, !dbg !3494, !tbaa !3362
  %attrib7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %9, i32 0, i32 0, !dbg !3495
  store %struct._object* %7, %struct._object** %attrib7, align 8, !dbg !3496, !tbaa !3497
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3498, !tbaa !2620
  %extra8 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4, !dbg !3499
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra8, align 8, !dbg !3499, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 1, !dbg !3500
  store i32 0, i32* %length, align 4, !dbg !3501, !tbaa !3446
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3502, !tbaa !2620
  %extra9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 4, !dbg !3503
  %13 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra9, align 8, !dbg !3503, !tbaa !3362
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %13, i32 0, i32 2, !dbg !3504
  store i32 4, i32* %allocated, align 4, !dbg !3505, !tbaa !3506
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3507, !tbaa !2620
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 4, !dbg !3508
  %15 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8, !dbg !3508, !tbaa !3362
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %15, i32 0, i32 4, !dbg !3509
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0, !dbg !3507
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3510, !tbaa !2620
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 4, !dbg !3511
  %17 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8, !dbg !3511, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %17, i32 0, i32 3, !dbg !3512
  store %struct._object** %arraydecay, %struct._object*** %children, align 8, !dbg !3513, !tbaa !3451
  store i32 0, i32* %retval, !dbg !3514
  br label %return, !dbg !3514

return:                                           ; preds = %if.end.5, %if.then
  %18 = load i32, i32* %retval, !dbg !3515
  ret i32 %18, !dbg !3515
}

declare i64 @PyDict_Size(%struct._object*) #3

declare i8* @PyObject_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

; Function Attrs: nounwind uwtable
define internal i32 @element_resize(%struct.ElementObject* %self, i32 %extra) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %extra.addr = alloca i32, align 4
  %size = alloca i32, align 4
  %children = alloca %struct._object**, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !681, metadata !2613), !dbg !3516
  store i32 %extra, i32* %extra.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %extra.addr, metadata !682, metadata !2613), !dbg !3517
  %0 = bitcast i32* %size to i8*, !dbg !3518
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !3518
  call void @llvm.dbg.declare(metadata i32* %size, metadata !683, metadata !2613), !dbg !3519
  %1 = bitcast %struct._object*** %children to i8*, !dbg !3520
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3520
  call void @llvm.dbg.declare(metadata %struct._object*** %children, metadata !684, metadata !2613), !dbg !3521
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3522, !tbaa !2620
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4, !dbg !3524
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8, !dbg !3524, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %3, null, !dbg !3522
  br i1 %tobool, label %if.end.3, label %if.then, !dbg !3525

if.then:                                          ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3526, !tbaa !2620
  %call = call i32 @create_extra(%struct.ElementObject* %4, %struct._object* null), !dbg !3529
  %cmp = icmp slt i32 %call, 0, !dbg !3530
  br i1 %cmp, label %if.then.2, label %if.end, !dbg !3531

if.then.2:                                        ; preds = %if.then
  store i32 -1, i32* %retval, !dbg !3532
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3532

if.end:                                           ; preds = %if.then
  br label %if.end.3, !dbg !3533

if.end.3:                                         ; preds = %if.end, %entry
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3534, !tbaa !2620
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4, !dbg !3535
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8, !dbg !3535, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %6, i32 0, i32 1, !dbg !3536
  %7 = load i32, i32* %length, align 4, !dbg !3536, !tbaa !3446
  %8 = load i32, i32* %extra.addr, align 4, !dbg !3537, !tbaa !2759
  %add = add i32 %7, %8, !dbg !3538
  store i32 %add, i32* %size, align 4, !dbg !3539, !tbaa !2759
  %9 = load i32, i32* %size, align 4, !dbg !3540, !tbaa !2759
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3542, !tbaa !2620
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4, !dbg !3543
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8, !dbg !3543, !tbaa !3362
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 2, !dbg !3544
  %12 = load i32, i32* %allocated, align 4, !dbg !3544, !tbaa !3506
  %cmp6 = icmp sgt i32 %9, %12, !dbg !3545
  br i1 %cmp6, label %if.then.7, label %if.end.41, !dbg !3546

if.then.7:                                        ; preds = %if.end.3
  %13 = load i32, i32* %size, align 4, !dbg !3547, !tbaa !2759
  %shr = ashr i32 %13, 3, !dbg !3549
  %14 = load i32, i32* %size, align 4, !dbg !3550, !tbaa !2759
  %cmp8 = icmp slt i32 %14, 9, !dbg !3551
  %cond = select i1 %cmp8, i32 3, i32 6, !dbg !3550
  %add9 = add i32 %shr, %cond, !dbg !3552
  %15 = load i32, i32* %size, align 4, !dbg !3553, !tbaa !2759
  %add10 = add i32 %add9, %15, !dbg !3554
  store i32 %add10, i32* %size, align 4, !dbg !3555, !tbaa !2759
  %16 = load i32, i32* %size, align 4, !dbg !3556, !tbaa !2759
  %tobool11 = icmp ne i32 %16, 0, !dbg !3556
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !3556

cond.true:                                        ; preds = %if.then.7
  %17 = load i32, i32* %size, align 4, !dbg !3557, !tbaa !2759
  br label %cond.end, !dbg !3556

cond.false:                                       ; preds = %if.then.7
  br label %cond.end, !dbg !3559

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond12 = phi i32 [ %17, %cond.true ], [ 1, %cond.false ], !dbg !3556
  store i32 %cond12, i32* %size, align 4, !dbg !3561, !tbaa !2759
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3564, !tbaa !2620
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %18, i32 0, i32 4, !dbg !3566
  %19 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8, !dbg !3566, !tbaa !3362
  %children14 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %19, i32 0, i32 3, !dbg !3567
  %20 = load %struct._object**, %struct._object*** %children14, align 8, !dbg !3567, !tbaa !3451
  %21 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3568, !tbaa !2620
  %extra15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %21, i32 0, i32 4, !dbg !3569
  %22 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra15, align 8, !dbg !3569, !tbaa !3362
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %22, i32 0, i32 4, !dbg !3570
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0, !dbg !3568
  %cmp16 = icmp ne %struct._object** %20, %arraydecay, !dbg !3571
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !3572

if.then.17:                                       ; preds = %cond.end
  %23 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3573, !tbaa !2620
  %extra18 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %23, i32 0, i32 4, !dbg !3575
  %24 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra18, align 8, !dbg !3575, !tbaa !3362
  %children19 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %24, i32 0, i32 3, !dbg !3576
  %25 = load %struct._object**, %struct._object*** %children19, align 8, !dbg !3576, !tbaa !3451
  %26 = bitcast %struct._object** %25 to i8*, !dbg !3573
  %27 = load i32, i32* %size, align 4, !dbg !3577, !tbaa !2759
  %conv = sext i32 %27 to i64, !dbg !3577
  %mul = mul i64 %conv, 8, !dbg !3578
  %call20 = call i8* @PyObject_Realloc(i8* %26, i64 %mul), !dbg !3579
  %28 = bitcast i8* %call20 to %struct._object**, !dbg !3579
  store %struct._object** %28, %struct._object*** %children, align 8, !dbg !3580, !tbaa !2620
  %29 = load %struct._object**, %struct._object*** %children, align 8, !dbg !3581, !tbaa !2620
  %tobool21 = icmp ne %struct._object** %29, null, !dbg !3581
  br i1 %tobool21, label %if.end.23, label %if.then.22, !dbg !3583

if.then.22:                                       ; preds = %if.then.17
  br label %nomemory, !dbg !3584

if.end.23:                                        ; preds = %if.then.17
  br label %if.end.36, !dbg !3585

if.else:                                          ; preds = %cond.end
  %30 = load i32, i32* %size, align 4, !dbg !3586, !tbaa !2759
  %conv24 = sext i32 %30 to i64, !dbg !3586
  %mul25 = mul i64 %conv24, 8, !dbg !3588
  %call26 = call i8* @PyObject_Malloc(i64 %mul25), !dbg !3589
  %31 = bitcast i8* %call26 to %struct._object**, !dbg !3589
  store %struct._object** %31, %struct._object*** %children, align 8, !dbg !3590, !tbaa !2620
  %32 = load %struct._object**, %struct._object*** %children, align 8, !dbg !3591, !tbaa !2620
  %tobool27 = icmp ne %struct._object** %32, null, !dbg !3591
  br i1 %tobool27, label %if.end.29, label %if.then.28, !dbg !3593

if.then.28:                                       ; preds = %if.else
  br label %nomemory, !dbg !3594

if.end.29:                                        ; preds = %if.else
  %33 = load %struct._object**, %struct._object*** %children, align 8, !dbg !3595, !tbaa !2620
  %34 = bitcast %struct._object** %33 to i8*, !dbg !3596
  %35 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3597, !tbaa !2620
  %extra30 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %35, i32 0, i32 4, !dbg !3598
  %36 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra30, align 8, !dbg !3598, !tbaa !3362
  %children31 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %36, i32 0, i32 3, !dbg !3599
  %37 = load %struct._object**, %struct._object*** %children31, align 8, !dbg !3599, !tbaa !3451
  %38 = bitcast %struct._object** %37 to i8*, !dbg !3596
  %39 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3600, !tbaa !2620
  %extra32 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %39, i32 0, i32 4, !dbg !3601
  %40 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra32, align 8, !dbg !3601, !tbaa !3362
  %length33 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %40, i32 0, i32 1, !dbg !3602
  %41 = load i32, i32* %length33, align 4, !dbg !3602, !tbaa !3446
  %conv34 = sext i32 %41 to i64, !dbg !3600
  %mul35 = mul i64 %conv34, 8, !dbg !3603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %38, i64 %mul35, i32 8, i1 false), !dbg !3596
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.29, %if.end.23
  %42 = load %struct._object**, %struct._object*** %children, align 8, !dbg !3604, !tbaa !2620
  %43 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3605, !tbaa !2620
  %extra37 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %43, i32 0, i32 4, !dbg !3606
  %44 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra37, align 8, !dbg !3606, !tbaa !3362
  %children38 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %44, i32 0, i32 3, !dbg !3607
  store %struct._object** %42, %struct._object*** %children38, align 8, !dbg !3608, !tbaa !3451
  %45 = load i32, i32* %size, align 4, !dbg !3609, !tbaa !2759
  %46 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !3610, !tbaa !2620
  %extra39 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %46, i32 0, i32 4, !dbg !3611
  %47 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra39, align 8, !dbg !3611, !tbaa !3362
  %allocated40 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %47, i32 0, i32 2, !dbg !3612
  store i32 %45, i32* %allocated40, align 4, !dbg !3613, !tbaa !3506
  br label %if.end.41, !dbg !3614

if.end.41:                                        ; preds = %if.end.36, %if.end.3
  store i32 0, i32* %retval, !dbg !3615
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3615

nomemory:                                         ; preds = %if.then.28, %if.then.22
  %call42 = call %struct._object* @PyErr_NoMemory(), !dbg !3616
  store i32 -1, i32* %retval, !dbg !3617
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3617

cleanup:                                          ; preds = %nomemory, %if.end.41, %if.then.2
  %48 = bitcast %struct._object*** %children to i8*, !dbg !3618
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !3618
  %49 = bitcast i32* %size to i8*, !dbg !3618
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !3618
  %50 = load i32, i32* %retval, !dbg !3618
  ret i32 %50, !dbg !3618
}

declare i8* @PyObject_Realloc(i8*, i64) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define internal void @elementiter_dealloc(%struct.ElementIterObject* %it) #0 {
entry:
  %it.addr = alloca %struct.ElementIterObject*, align 8
  %p = alloca %struct.ParentLocator_t*, align 8
  %temp = alloca %struct.ParentLocator_t*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_xdecref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  store %struct.ElementIterObject* %it, %struct.ElementIterObject** %it.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementIterObject** %it.addr, metadata !732, metadata !2613), !dbg !3619
  %0 = bitcast %struct.ParentLocator_t** %p to i8*, !dbg !3620
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3620
  call void @llvm.dbg.declare(metadata %struct.ParentLocator_t** %p, metadata !733, metadata !2613), !dbg !3621
  %1 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3622, !tbaa !2620
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %1, i32 0, i32 1, !dbg !3623
  %2 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack, align 8, !dbg !3623, !tbaa !3624
  store %struct.ParentLocator_t* %2, %struct.ParentLocator_t** %p, align 8, !dbg !3621, !tbaa !2620
  br label %while.cond, !dbg !3626

while.cond:                                       ; preds = %do.end.6, %entry
  %3 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3627, !tbaa !2620
  %tobool = icmp ne %struct.ParentLocator_t* %3, null, !dbg !3626
  br i1 %tobool, label %while.body, label %while.end, !dbg !3626

while.body:                                       ; preds = %while.cond
  %4 = bitcast %struct.ParentLocator_t** %temp to i8*, !dbg !3630
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3630
  call void @llvm.dbg.declare(metadata %struct.ParentLocator_t** %temp, metadata !734, metadata !2613), !dbg !3631
  %5 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3632, !tbaa !2620
  store %struct.ParentLocator_t* %5, %struct.ParentLocator_t** %temp, align 8, !dbg !3631, !tbaa !2620
  br label %do.body, !dbg !3633

do.body:                                          ; preds = %while.body
  %6 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3634
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !3634
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !736, metadata !2613), !dbg !3636
  %7 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3637, !tbaa !2620
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %7, i32 0, i32 0, !dbg !3638
  %8 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8, !dbg !3638, !tbaa !3639
  %9 = bitcast %struct.ElementObject* %8 to %struct._object*, !dbg !3641
  store %struct._object* %9, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3636, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3642, !tbaa !2620
  %cmp = icmp ne %struct._object* %10, null, !dbg !3643
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !3644

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !3645

do.body.1:                                        ; preds = %if.then
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3647
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !3647
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !738, metadata !2613), !dbg !3649
  %12 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3650, !tbaa !2620
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !3649, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3651, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !3653
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !3654, !tbaa !2631
  %dec = add i64 %14, -1, !dbg !3654
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3654, !tbaa !2631
  %cmp2 = icmp ne i64 %dec, 0, !dbg !3655
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !3656

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !3657

if.else:                                          ; preds = %do.body.1
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3659, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !3661
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3661, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !3662
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3662, !tbaa !2705
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3663, !tbaa !2620
  call void %17(%struct._object* %18), !dbg !3664
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3665
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !3665
  br label %do.cond, !dbg !3667

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3668

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !3670

if.end.4:                                         ; preds = %do.end, %do.body
  %20 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3672
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !3672
  br label %do.cond.5, !dbg !3675

do.cond.5:                                        ; preds = %if.end.4
  br label %do.end.6, !dbg !3676

do.end.6:                                         ; preds = %do.cond.5
  %21 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3678, !tbaa !2620
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %21, i32 0, i32 2, !dbg !3679
  %22 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next, align 8, !dbg !3679, !tbaa !3680
  store %struct.ParentLocator_t* %22, %struct.ParentLocator_t** %p, align 8, !dbg !3681, !tbaa !2620
  %23 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %temp, align 8, !dbg !3682, !tbaa !2620
  %24 = bitcast %struct.ParentLocator_t* %23 to i8*, !dbg !3682
  call void @PyObject_Free(i8* %24), !dbg !3683
  %25 = bitcast %struct.ParentLocator_t** %temp to i8*, !dbg !3684
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !3684
  br label %while.cond, !dbg !3626

while.end:                                        ; preds = %while.cond
  br label %do.body.7, !dbg !3685

do.body.7:                                        ; preds = %while.end
  %26 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !3686
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !3686
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !741, metadata !2613), !dbg !3688
  %27 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3689, !tbaa !2620
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %27, i32 0, i32 3, !dbg !3690
  %28 = load %struct._object*, %struct._object** %sought_tag, align 8, !dbg !3690, !tbaa !3691
  store %struct._object* %28, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !3688, !tbaa !2620
  %29 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !3692, !tbaa !2620
  %cmp9 = icmp ne %struct._object* %29, null, !dbg !3693
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !3694

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !3695

do.body.11:                                       ; preds = %if.then.10
  %30 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !3697
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !3697
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !743, metadata !2613), !dbg !3699
  %31 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !3700, !tbaa !2620
  store %struct._object* %31, %struct._object** %_py_decref_tmp12, align 8, !dbg !3699, !tbaa !2620
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !3701, !tbaa !2620
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !3703
  %33 = load i64, i64* %ob_refcnt13, align 8, !dbg !3704, !tbaa !2631
  %dec14 = add i64 %33, -1, !dbg !3704
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !3704, !tbaa !2631
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !3705
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !3706

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !3707

if.else.17:                                       ; preds = %do.body.11
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !3709, !tbaa !2620
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !3711
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !3711, !tbaa !2703
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !3712
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !3712, !tbaa !2705
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !3713, !tbaa !2620
  call void %36(%struct._object* %37), !dbg !3714
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %38 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !3715
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !3715
  br label %do.cond.21, !dbg !3717

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !3718

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !3720

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %39 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !3722
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !3722
  br label %do.cond.24, !dbg !3725

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !3726

do.end.25:                                        ; preds = %do.cond.24
  br label %do.body.26, !dbg !3728

do.body.26:                                       ; preds = %do.end.25
  %40 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !3729
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !3729
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp27, metadata !746, metadata !2613), !dbg !3731
  %41 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3732, !tbaa !2620
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %41, i32 0, i32 2, !dbg !3733
  %42 = load %struct.ElementObject*, %struct.ElementObject** %root_element, align 8, !dbg !3733, !tbaa !3734
  %43 = bitcast %struct.ElementObject* %42 to %struct._object*, !dbg !3735
  store %struct._object* %43, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !3731, !tbaa !2620
  %44 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !3736, !tbaa !2620
  %cmp28 = icmp ne %struct._object* %44, null, !dbg !3737
  br i1 %cmp28, label %if.then.29, label %if.end.42, !dbg !3738

if.then.29:                                       ; preds = %do.body.26
  br label %do.body.30, !dbg !3739

do.body.30:                                       ; preds = %if.then.29
  %45 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !3741
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !3741
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !748, metadata !2613), !dbg !3743
  %46 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !3744, !tbaa !2620
  store %struct._object* %46, %struct._object** %_py_decref_tmp31, align 8, !dbg !3743, !tbaa !2620
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !3745, !tbaa !2620
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !3747
  %48 = load i64, i64* %ob_refcnt32, align 8, !dbg !3748, !tbaa !2631
  %dec33 = add i64 %48, -1, !dbg !3748
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !3748, !tbaa !2631
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !3749
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !3750

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !3751

if.else.36:                                       ; preds = %do.body.30
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !3753, !tbaa !2620
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !3755
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !3755, !tbaa !2703
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4, !dbg !3756
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !3756, !tbaa !2705
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !3757, !tbaa !2620
  call void %51(%struct._object* %52), !dbg !3758
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %53 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !3759
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !3759
  br label %do.cond.40, !dbg !3761

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !3762

do.end.41:                                        ; preds = %do.cond.40
  br label %if.end.42, !dbg !3764

if.end.42:                                        ; preds = %do.end.41, %do.body.26
  %54 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !3766
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !3766
  br label %do.cond.43, !dbg !3767

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !3768

do.end.44:                                        ; preds = %do.cond.43
  %55 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3770, !tbaa !2620
  %56 = bitcast %struct.ElementIterObject* %55 to i8*, !dbg !3770
  call void @PyObject_GC_UnTrack(i8* %56), !dbg !3771
  %57 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3772, !tbaa !2620
  %58 = bitcast %struct.ElementIterObject* %57 to i8*, !dbg !3772
  call void @PyObject_GC_Del(i8* %58), !dbg !3773
  %59 = bitcast %struct.ParentLocator_t** %p to i8*, !dbg !3774
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !3774
  ret void, !dbg !3774
}

; Function Attrs: nounwind uwtable
define internal i32 @elementiter_traverse(%struct.ElementIterObject* %it, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %it.addr = alloca %struct.ElementIterObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca %struct.ParentLocator_t*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret9 = alloca i32, align 4
  %vret24 = alloca i32, align 4
  store %struct.ElementIterObject* %it, %struct.ElementIterObject** %it.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementIterObject** %it.addr, metadata !755, metadata !2613), !dbg !3775
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !756, metadata !2613), !dbg !3776
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !757, metadata !2613), !dbg !3777
  %0 = bitcast %struct.ParentLocator_t** %p to i8*, !dbg !3778
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3778
  call void @llvm.dbg.declare(metadata %struct.ParentLocator_t** %p, metadata !758, metadata !2613), !dbg !3779
  %1 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3780, !tbaa !2620
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %1, i32 0, i32 1, !dbg !3781
  %2 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack, align 8, !dbg !3781, !tbaa !3624
  store %struct.ParentLocator_t* %2, %struct.ParentLocator_t** %p, align 8, !dbg !3779, !tbaa !2620
  br label %while.cond, !dbg !3782

while.cond:                                       ; preds = %do.end, %entry
  %3 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3783, !tbaa !2620
  %tobool = icmp ne %struct.ParentLocator_t* %3, null, !dbg !3782
  br i1 %tobool, label %while.body, label %while.end, !dbg !3782

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !3786

do.body:                                          ; preds = %while.body
  %4 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3787, !tbaa !2620
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %4, i32 0, i32 0, !dbg !3789
  %5 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8, !dbg !3789, !tbaa !3639
  %tobool1 = icmp ne %struct.ElementObject* %5, null, !dbg !3790
  br i1 %tobool1, label %if.then, label %if.end.5, !dbg !3791

if.then:                                          ; preds = %do.body
  %6 = bitcast i32* %vret to i8*, !dbg !3792
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !3792
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !759, metadata !2613), !dbg !3794
  %7 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !3795, !tbaa !2620
  %8 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3796, !tbaa !2620
  %parent2 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %8, i32 0, i32 0, !dbg !3797
  %9 = load %struct.ElementObject*, %struct.ElementObject** %parent2, align 8, !dbg !3797, !tbaa !3639
  %10 = bitcast %struct.ElementObject* %9 to %struct._object*, !dbg !3798
  %11 = load i8*, i8** %arg.addr, align 8, !dbg !3799, !tbaa !2620
  %call = call i32 %7(%struct._object* %10, i8* %11), !dbg !3795
  store i32 %call, i32* %vret, align 4, !dbg !3794, !tbaa !2759
  %12 = load i32, i32* %vret, align 4, !dbg !3800, !tbaa !2759
  %tobool3 = icmp ne i32 %12, 0, !dbg !3800
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !3802

if.then.4:                                        ; preds = %if.then
  %13 = load i32, i32* %vret, align 4, !dbg !3803, !tbaa !2759
  store i32 %13, i32* %retval, !dbg !3805
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3805

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !3806
  br label %cleanup, !dbg !3806

cleanup:                                          ; preds = %if.end, %if.then.4
  %14 = bitcast i32* %vret to i8*, !dbg !3808
  call void @llvm.lifetime.end(i64 4, i8* %14) #1, !dbg !3808
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.36 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.5, !dbg !3811

if.end.5:                                         ; preds = %cleanup.cont, %do.body
  br label %do.cond, !dbg !3812

do.cond:                                          ; preds = %if.end.5
  br label %do.end, !dbg !3815

do.end:                                           ; preds = %do.cond
  %15 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %p, align 8, !dbg !3817, !tbaa !2620
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %15, i32 0, i32 2, !dbg !3818
  %16 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next, align 8, !dbg !3818, !tbaa !3680
  store %struct.ParentLocator_t* %16, %struct.ParentLocator_t** %p, align 8, !dbg !3819, !tbaa !2620
  br label %while.cond, !dbg !3782

while.end:                                        ; preds = %while.cond
  br label %do.body.6, !dbg !3820

do.body.6:                                        ; preds = %while.end
  %17 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3821, !tbaa !2620
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %17, i32 0, i32 2, !dbg !3823
  %18 = load %struct.ElementObject*, %struct.ElementObject** %root_element, align 8, !dbg !3823, !tbaa !3734
  %tobool7 = icmp ne %struct.ElementObject* %18, null, !dbg !3824
  br i1 %tobool7, label %if.then.8, label %if.end.18, !dbg !3825

if.then.8:                                        ; preds = %do.body.6
  %19 = bitcast i32* %vret9 to i8*, !dbg !3826
  call void @llvm.lifetime.start(i64 4, i8* %19) #1, !dbg !3826
  call void @llvm.dbg.declare(metadata i32* %vret9, metadata !764, metadata !2613), !dbg !3828
  %20 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !3829, !tbaa !2620
  %21 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3830, !tbaa !2620
  %root_element10 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %21, i32 0, i32 2, !dbg !3831
  %22 = load %struct.ElementObject*, %struct.ElementObject** %root_element10, align 8, !dbg !3831, !tbaa !3734
  %23 = bitcast %struct.ElementObject* %22 to %struct._object*, !dbg !3832
  %24 = load i8*, i8** %arg.addr, align 8, !dbg !3833, !tbaa !2620
  %call11 = call i32 %20(%struct._object* %23, i8* %24), !dbg !3829
  store i32 %call11, i32* %vret9, align 4, !dbg !3828, !tbaa !2759
  %25 = load i32, i32* %vret9, align 4, !dbg !3834, !tbaa !2759
  %tobool12 = icmp ne i32 %25, 0, !dbg !3834
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !3836

if.then.13:                                       ; preds = %if.then.8
  %26 = load i32, i32* %vret9, align 4, !dbg !3837, !tbaa !2759
  store i32 %26, i32* %retval, !dbg !3839
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.15, !dbg !3839

if.end.14:                                        ; preds = %if.then.8
  store i32 0, i32* %cleanup.dest.slot, !dbg !3840
  br label %cleanup.15, !dbg !3840

cleanup.15:                                       ; preds = %if.end.14, %if.then.13
  %27 = bitcast i32* %vret9 to i8*, !dbg !3842
  call void @llvm.lifetime.end(i64 4, i8* %27) #1, !dbg !3842
  %cleanup.dest.16 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.16, label %cleanup.36 [
    i32 0, label %cleanup.cont.17
  ]

cleanup.cont.17:                                  ; preds = %cleanup.15
  br label %if.end.18, !dbg !3845

if.end.18:                                        ; preds = %cleanup.cont.17, %do.body.6
  br label %do.cond.19, !dbg !3846

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !3849

do.end.20:                                        ; preds = %do.cond.19
  br label %do.body.21, !dbg !3851

do.body.21:                                       ; preds = %do.end.20
  %28 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3852, !tbaa !2620
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %28, i32 0, i32 3, !dbg !3854
  %29 = load %struct._object*, %struct._object** %sought_tag, align 8, !dbg !3854, !tbaa !3691
  %tobool22 = icmp ne %struct._object* %29, null, !dbg !3855
  br i1 %tobool22, label %if.then.23, label %if.end.33, !dbg !3856

if.then.23:                                       ; preds = %do.body.21
  %30 = bitcast i32* %vret24 to i8*, !dbg !3857
  call void @llvm.lifetime.start(i64 4, i8* %30) #1, !dbg !3857
  call void @llvm.dbg.declare(metadata i32* %vret24, metadata !768, metadata !2613), !dbg !3859
  %31 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !3860, !tbaa !2620
  %32 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3861, !tbaa !2620
  %sought_tag25 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %32, i32 0, i32 3, !dbg !3862
  %33 = load %struct._object*, %struct._object** %sought_tag25, align 8, !dbg !3862, !tbaa !3691
  %34 = load i8*, i8** %arg.addr, align 8, !dbg !3863, !tbaa !2620
  %call26 = call i32 %31(%struct._object* %33, i8* %34), !dbg !3860
  store i32 %call26, i32* %vret24, align 4, !dbg !3859, !tbaa !2759
  %35 = load i32, i32* %vret24, align 4, !dbg !3864, !tbaa !2759
  %tobool27 = icmp ne i32 %35, 0, !dbg !3864
  br i1 %tobool27, label %if.then.28, label %if.end.29, !dbg !3866

if.then.28:                                       ; preds = %if.then.23
  %36 = load i32, i32* %vret24, align 4, !dbg !3867, !tbaa !2759
  store i32 %36, i32* %retval, !dbg !3869
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.30, !dbg !3869

if.end.29:                                        ; preds = %if.then.23
  store i32 0, i32* %cleanup.dest.slot, !dbg !3870
  br label %cleanup.30, !dbg !3870

cleanup.30:                                       ; preds = %if.end.29, %if.then.28
  %37 = bitcast i32* %vret24 to i8*, !dbg !3872
  call void @llvm.lifetime.end(i64 4, i8* %37) #1, !dbg !3872
  %cleanup.dest.31 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.31, label %cleanup.36 [
    i32 0, label %cleanup.cont.32
  ]

cleanup.cont.32:                                  ; preds = %cleanup.30
  br label %if.end.33, !dbg !3875

if.end.33:                                        ; preds = %cleanup.cont.32, %do.body.21
  br label %do.cond.34, !dbg !3876

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !3879

do.end.35:                                        ; preds = %do.cond.34
  store i32 0, i32* %retval, !dbg !3881
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !3881

cleanup.36:                                       ; preds = %do.end.35, %cleanup.30, %cleanup.15, %cleanup
  %38 = bitcast %struct.ParentLocator_t** %p to i8*, !dbg !3882
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !3882
  %39 = load i32, i32* %retval, !dbg !3882
  ret i32 %39, !dbg !3882
}

declare %struct._object* @PyObject_SelfIter(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @elementiter_next(%struct.ElementIterObject* %it) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %it.addr = alloca %struct.ElementIterObject*, align 8
  %cur_parent = alloca %struct.ElementObject*, align 8
  %child_index = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %text = alloca %struct._object*, align 8
  %child = alloca %struct.ElementObject*, align 8
  %text59 = alloca %struct._object*, align 8
  %tail = alloca %struct._object*, align 8
  %next = alloca %struct.ParentLocator_t*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementIterObject* %it, %struct.ElementIterObject** %it.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementIterObject** %it.addr, metadata !776, metadata !2613), !dbg !3883
  %0 = bitcast %struct.ElementObject** %cur_parent to i8*, !dbg !3884
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3884
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %cur_parent, metadata !777, metadata !2613), !dbg !3885
  %1 = bitcast i64* %child_index to i8*, !dbg !3886
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3886
  call void @llvm.dbg.declare(metadata i64* %child_index, metadata !778, metadata !2613), !dbg !3887
  br label %while.cond, !dbg !3888

while.cond:                                       ; preds = %if.end.134, %cleanup.88, %entry
  br label %while.body, !dbg !3889

while.body:                                       ; preds = %while.cond
  %2 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3892, !tbaa !2620
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %2, i32 0, i32 1, !dbg !3893
  %3 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack, align 8, !dbg !3893, !tbaa !3624
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %3, i32 0, i32 0, !dbg !3894
  %4 = load %struct.ElementObject*, %struct.ElementObject** %parent, align 8, !dbg !3894, !tbaa !3639
  %tobool = icmp ne %struct.ElementObject* %4, null, !dbg !3892
  br i1 %tobool, label %if.end.34, label %if.then, !dbg !3895

if.then:                                          ; preds = %while.body
  %5 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3896, !tbaa !2620
  %root_done = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %5, i32 0, i32 4, !dbg !3897
  %6 = load i32, i32* %root_done, align 4, !dbg !3897, !tbaa !3898
  %tobool1 = icmp ne i32 %6, 0, !dbg !3896
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !3899

if.then.2:                                        ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_StopIteration, align 8, !dbg !3900, !tbaa !2620
  call void @PyErr_SetNone(%struct._object* %7), !dbg !3902
  store %struct._object* null, %struct._object** %retval, !dbg !3903
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135, !dbg !3903

if.else:                                          ; preds = %if.then
  %8 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3904, !tbaa !2620
  %parent_stack3 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %8, i32 0, i32 1, !dbg !3905
  %9 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack3, align 8, !dbg !3905, !tbaa !3624
  %10 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3906, !tbaa !2620
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %10, i32 0, i32 2, !dbg !3907
  %11 = load %struct.ElementObject*, %struct.ElementObject** %root_element, align 8, !dbg !3907, !tbaa !3734
  %call = call %struct.ParentLocator_t* @parent_stack_push_new(%struct.ParentLocator_t* %9, %struct.ElementObject* %11), !dbg !3908
  %12 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3909, !tbaa !2620
  %parent_stack4 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %12, i32 0, i32 1, !dbg !3910
  store %struct.ParentLocator_t* %call, %struct.ParentLocator_t** %parent_stack4, align 8, !dbg !3911, !tbaa !3624
  %13 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3912, !tbaa !2620
  %parent_stack5 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %13, i32 0, i32 1, !dbg !3914
  %14 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack5, align 8, !dbg !3914, !tbaa !3624
  %tobool6 = icmp ne %struct.ParentLocator_t* %14, null, !dbg !3912
  br i1 %tobool6, label %if.end, label %if.then.7, !dbg !3915

if.then.7:                                        ; preds = %if.else
  %call8 = call %struct._object* @PyErr_NoMemory(), !dbg !3916
  store %struct._object* null, %struct._object** %retval, !dbg !3918
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135, !dbg !3918

if.end:                                           ; preds = %if.else
  %15 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3919, !tbaa !2620
  %root_done9 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %15, i32 0, i32 4, !dbg !3920
  store i32 1, i32* %root_done9, align 4, !dbg !3921, !tbaa !3898
  %16 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3922, !tbaa !2620
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %16, i32 0, i32 3, !dbg !3923
  %17 = load %struct._object*, %struct._object** %sought_tag, align 8, !dbg !3923, !tbaa !3691
  %cmp = icmp eq %struct._object* %17, @_Py_NoneStruct, !dbg !3924
  br i1 %cmp, label %if.then.14, label %lor.lhs.false, !dbg !3925

lor.lhs.false:                                    ; preds = %if.end
  %18 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3926, !tbaa !2620
  %root_element10 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %18, i32 0, i32 2, !dbg !3927
  %19 = load %struct.ElementObject*, %struct.ElementObject** %root_element10, align 8, !dbg !3927, !tbaa !3734
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %19, i32 0, i32 1, !dbg !3928
  %20 = load %struct._object*, %struct._object** %tag, align 8, !dbg !3928, !tbaa !3371
  %21 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3929, !tbaa !2620
  %sought_tag11 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %21, i32 0, i32 3, !dbg !3930
  %22 = load %struct._object*, %struct._object** %sought_tag11, align 8, !dbg !3930, !tbaa !3691
  %call12 = call i32 @PyObject_RichCompareBool(%struct._object* %20, %struct._object* %22, i32 2), !dbg !3931
  %cmp13 = icmp eq i32 %call12, 1, !dbg !3932
  br i1 %cmp13, label %if.then.14, label %if.end.32, !dbg !3933

if.then.14:                                       ; preds = %lor.lhs.false, %if.end
  %23 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3934, !tbaa !2620
  %gettext = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %23, i32 0, i32 5, !dbg !3935
  %24 = load i32, i32* %gettext, align 4, !dbg !3935, !tbaa !3936
  %tobool15 = icmp ne i32 %24, 0, !dbg !3934
  br i1 %tobool15, label %if.then.16, label %if.else.26, !dbg !3937

if.then.16:                                       ; preds = %if.then.14
  %25 = bitcast %struct._object** %text to i8*, !dbg !3938
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !3938
  call void @llvm.dbg.declare(metadata %struct._object** %text, metadata !779, metadata !2613), !dbg !3939
  %26 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3940, !tbaa !2620
  %root_element17 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %26, i32 0, i32 2, !dbg !3941
  %27 = load %struct.ElementObject*, %struct.ElementObject** %root_element17, align 8, !dbg !3941, !tbaa !3734
  %call18 = call %struct._object* @element_get_text(%struct.ElementObject* %27), !dbg !3942
  store %struct._object* %call18, %struct._object** %text, align 8, !dbg !3939, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %text, align 8, !dbg !3943, !tbaa !2620
  %tobool19 = icmp ne %struct._object* %28, null, !dbg !3943
  br i1 %tobool19, label %if.end.21, label %if.then.20, !dbg !3945

if.then.20:                                       ; preds = %if.then.16
  store %struct._object* null, %struct._object** %retval, !dbg !3946
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3946

if.end.21:                                        ; preds = %if.then.16
  %29 = load %struct._object*, %struct._object** %text, align 8, !dbg !3947, !tbaa !2620
  %call22 = call i32 @PyObject_IsTrue(%struct._object* %29), !dbg !3949
  %tobool23 = icmp ne i32 %call22, 0, !dbg !3949
  br i1 %tobool23, label %if.then.24, label %if.end.25, !dbg !3950

if.then.24:                                       ; preds = %if.end.21
  %30 = load %struct._object*, %struct._object** %text, align 8, !dbg !3951, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !3953
  %31 = load i64, i64* %ob_refcnt, align 8, !dbg !3954, !tbaa !2631
  %inc = add i64 %31, 1, !dbg !3954
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3954, !tbaa !2631
  %32 = load %struct._object*, %struct._object** %text, align 8, !dbg !3955, !tbaa !2620
  store %struct._object* %32, %struct._object** %retval, !dbg !3956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3956

if.end.25:                                        ; preds = %if.end.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !3957
  br label %cleanup, !dbg !3957

cleanup:                                          ; preds = %if.end.25, %if.then.24, %if.then.20
  %33 = bitcast %struct._object** %text to i8*, !dbg !3958
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !3958
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.135 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.31, !dbg !3960

if.else.26:                                       ; preds = %if.then.14
  %34 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3961, !tbaa !2620
  %root_element27 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %34, i32 0, i32 2, !dbg !3963
  %35 = load %struct.ElementObject*, %struct.ElementObject** %root_element27, align 8, !dbg !3963, !tbaa !3734
  %36 = bitcast %struct.ElementObject* %35 to %struct._object*, !dbg !3964
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !3965
  %37 = load i64, i64* %ob_refcnt28, align 8, !dbg !3966, !tbaa !2631
  %inc29 = add i64 %37, 1, !dbg !3966
  store i64 %inc29, i64* %ob_refcnt28, align 8, !dbg !3966, !tbaa !2631
  %38 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3967, !tbaa !2620
  %root_element30 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %38, i32 0, i32 2, !dbg !3968
  %39 = load %struct.ElementObject*, %struct.ElementObject** %root_element30, align 8, !dbg !3968, !tbaa !3734
  %40 = bitcast %struct.ElementObject* %39 to %struct._object*, !dbg !3969
  store %struct._object* %40, %struct._object** %retval, !dbg !3970
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.135, !dbg !3970

if.end.31:                                        ; preds = %cleanup.cont
  br label %if.end.32, !dbg !3971

if.end.32:                                        ; preds = %if.end.31, %lor.lhs.false
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32
  br label %if.end.34, !dbg !3972

if.end.34:                                        ; preds = %if.end.33, %while.body
  %41 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3973, !tbaa !2620
  %parent_stack35 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %41, i32 0, i32 1, !dbg !3974
  %42 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack35, align 8, !dbg !3974, !tbaa !3624
  %parent36 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %42, i32 0, i32 0, !dbg !3975
  %43 = load %struct.ElementObject*, %struct.ElementObject** %parent36, align 8, !dbg !3975, !tbaa !3639
  store %struct.ElementObject* %43, %struct.ElementObject** %cur_parent, align 8, !dbg !3976, !tbaa !2620
  %44 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3977, !tbaa !2620
  %parent_stack37 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %44, i32 0, i32 1, !dbg !3978
  %45 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack37, align 8, !dbg !3978, !tbaa !3624
  %child_index38 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %45, i32 0, i32 1, !dbg !3979
  %46 = load i64, i64* %child_index38, align 8, !dbg !3979, !tbaa !3980
  store i64 %46, i64* %child_index, align 8, !dbg !3981, !tbaa !2742
  %47 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8, !dbg !3982, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %47, i32 0, i32 4, !dbg !3983
  %48 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !3983, !tbaa !3362
  %tobool39 = icmp ne %struct.ElementObjectExtra* %48, null, !dbg !3982
  br i1 %tobool39, label %land.lhs.true, label %if.else.91, !dbg !3984

land.lhs.true:                                    ; preds = %if.end.34
  %49 = load i64, i64* %child_index, align 8, !dbg !3985, !tbaa !2742
  %50 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8, !dbg !3987, !tbaa !2620
  %extra40 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %50, i32 0, i32 4, !dbg !3988
  %51 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra40, align 8, !dbg !3988, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %51, i32 0, i32 1, !dbg !3989
  %52 = load i32, i32* %length, align 4, !dbg !3989, !tbaa !3446
  %conv = sext i32 %52 to i64, !dbg !3987
  %cmp41 = icmp slt i64 %49, %conv, !dbg !3990
  br i1 %cmp41, label %if.then.43, label %if.else.91, !dbg !3991

if.then.43:                                       ; preds = %land.lhs.true
  %53 = bitcast %struct.ElementObject** %child to i8*, !dbg !3992
  call void @llvm.lifetime.start(i64 8, i8* %53) #1, !dbg !3992
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %child, metadata !789, metadata !2613), !dbg !3993
  %54 = load i64, i64* %child_index, align 8, !dbg !3994, !tbaa !2742
  %55 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8, !dbg !3995, !tbaa !2620
  %extra44 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %55, i32 0, i32 4, !dbg !3996
  %56 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra44, align 8, !dbg !3996, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %56, i32 0, i32 3, !dbg !3997
  %57 = load %struct._object**, %struct._object*** %children, align 8, !dbg !3997, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %57, i64 %54, !dbg !3995
  %58 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !3995, !tbaa !2620
  %59 = bitcast %struct._object* %58 to %struct.ElementObject*, !dbg !3998
  store %struct.ElementObject* %59, %struct.ElementObject** %child, align 8, !dbg !3993, !tbaa !2620
  %60 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !3999, !tbaa !2620
  %parent_stack45 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %60, i32 0, i32 1, !dbg !4000
  %61 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack45, align 8, !dbg !4000, !tbaa !3624
  %child_index46 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %61, i32 0, i32 1, !dbg !4001
  %62 = load i64, i64* %child_index46, align 8, !dbg !4002, !tbaa !3980
  %inc47 = add i64 %62, 1, !dbg !4002
  store i64 %inc47, i64* %child_index46, align 8, !dbg !4002, !tbaa !3980
  %63 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4003, !tbaa !2620
  %parent_stack48 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %63, i32 0, i32 1, !dbg !4004
  %64 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack48, align 8, !dbg !4004, !tbaa !3624
  %65 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8, !dbg !4005, !tbaa !2620
  %call49 = call %struct.ParentLocator_t* @parent_stack_push_new(%struct.ParentLocator_t* %64, %struct.ElementObject* %65), !dbg !4006
  %66 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4007, !tbaa !2620
  %parent_stack50 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %66, i32 0, i32 1, !dbg !4008
  store %struct.ParentLocator_t* %call49, %struct.ParentLocator_t** %parent_stack50, align 8, !dbg !4009, !tbaa !3624
  %67 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4010, !tbaa !2620
  %parent_stack51 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %67, i32 0, i32 1, !dbg !4012
  %68 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack51, align 8, !dbg !4012, !tbaa !3624
  %tobool52 = icmp ne %struct.ParentLocator_t* %68, null, !dbg !4010
  br i1 %tobool52, label %if.end.55, label %if.then.53, !dbg !4013

if.then.53:                                       ; preds = %if.then.43
  %call54 = call %struct._object* @PyErr_NoMemory(), !dbg !4014
  store %struct._object* null, %struct._object** %retval, !dbg !4016
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !4016

if.end.55:                                        ; preds = %if.then.43
  %69 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4017, !tbaa !2620
  %gettext56 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %69, i32 0, i32 5, !dbg !4018
  %70 = load i32, i32* %gettext56, align 4, !dbg !4018, !tbaa !3936
  %tobool57 = icmp ne i32 %70, 0, !dbg !4017
  br i1 %tobool57, label %if.then.58, label %if.else.73, !dbg !4019

if.then.58:                                       ; preds = %if.end.55
  %71 = bitcast %struct._object** %text59 to i8*, !dbg !4020
  call void @llvm.lifetime.start(i64 8, i8* %71) #1, !dbg !4020
  call void @llvm.dbg.declare(metadata %struct._object** %text59, metadata !792, metadata !2613), !dbg !4021
  %72 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8, !dbg !4022, !tbaa !2620
  %call60 = call %struct._object* @element_get_text(%struct.ElementObject* %72), !dbg !4023
  store %struct._object* %call60, %struct._object** %text59, align 8, !dbg !4021, !tbaa !2620
  %73 = load %struct._object*, %struct._object** %text59, align 8, !dbg !4024, !tbaa !2620
  %tobool61 = icmp ne %struct._object* %73, null, !dbg !4024
  br i1 %tobool61, label %if.end.63, label %if.then.62, !dbg !4026

if.then.62:                                       ; preds = %if.then.58
  store %struct._object* null, %struct._object** %retval, !dbg !4027
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !4027

if.end.63:                                        ; preds = %if.then.58
  %74 = load %struct._object*, %struct._object** %text59, align 8, !dbg !4028, !tbaa !2620
  %call64 = call i32 @PyObject_IsTrue(%struct._object* %74), !dbg !4030
  %tobool65 = icmp ne i32 %call64, 0, !dbg !4030
  br i1 %tobool65, label %if.then.66, label %if.end.69, !dbg !4031

if.then.66:                                       ; preds = %if.end.63
  %75 = load %struct._object*, %struct._object** %text59, align 8, !dbg !4032, !tbaa !2620
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0, !dbg !4034
  %76 = load i64, i64* %ob_refcnt67, align 8, !dbg !4035, !tbaa !2631
  %inc68 = add i64 %76, 1, !dbg !4035
  store i64 %inc68, i64* %ob_refcnt67, align 8, !dbg !4035, !tbaa !2631
  %77 = load %struct._object*, %struct._object** %text59, align 8, !dbg !4036, !tbaa !2620
  store %struct._object* %77, %struct._object** %retval, !dbg !4037
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !4037

if.end.69:                                        ; preds = %if.end.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !4038
  br label %cleanup.70, !dbg !4038

cleanup.70:                                       ; preds = %if.end.69, %if.then.66, %if.then.62
  %78 = bitcast %struct._object** %text59 to i8*, !dbg !4039
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !4039
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.71, label %cleanup.88 [
    i32 0, label %cleanup.cont.72
  ]

cleanup.cont.72:                                  ; preds = %cleanup.70
  br label %if.end.87, !dbg !4041

if.else.73:                                       ; preds = %if.end.55
  %79 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4042, !tbaa !2620
  %sought_tag74 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %79, i32 0, i32 3, !dbg !4044
  %80 = load %struct._object*, %struct._object** %sought_tag74, align 8, !dbg !4044, !tbaa !3691
  %cmp75 = icmp eq %struct._object* %80, @_Py_NoneStruct, !dbg !4045
  br i1 %cmp75, label %if.then.83, label %lor.lhs.false.77, !dbg !4046

lor.lhs.false.77:                                 ; preds = %if.else.73
  %81 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8, !dbg !4047, !tbaa !2620
  %tag78 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %81, i32 0, i32 1, !dbg !4048
  %82 = load %struct._object*, %struct._object** %tag78, align 8, !dbg !4048, !tbaa !3371
  %83 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4049, !tbaa !2620
  %sought_tag79 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %83, i32 0, i32 3, !dbg !4050
  %84 = load %struct._object*, %struct._object** %sought_tag79, align 8, !dbg !4050, !tbaa !3691
  %call80 = call i32 @PyObject_RichCompareBool(%struct._object* %82, %struct._object* %84, i32 2), !dbg !4051
  %cmp81 = icmp eq i32 %call80, 1, !dbg !4052
  br i1 %cmp81, label %if.then.83, label %if.else.86, !dbg !4053

if.then.83:                                       ; preds = %lor.lhs.false.77, %if.else.73
  %85 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8, !dbg !4054, !tbaa !2620
  %86 = bitcast %struct.ElementObject* %85 to %struct._object*, !dbg !4056
  %ob_refcnt84 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !4057
  %87 = load i64, i64* %ob_refcnt84, align 8, !dbg !4058, !tbaa !2631
  %inc85 = add i64 %87, 1, !dbg !4058
  store i64 %inc85, i64* %ob_refcnt84, align 8, !dbg !4058, !tbaa !2631
  %88 = load %struct.ElementObject*, %struct.ElementObject** %child, align 8, !dbg !4059, !tbaa !2620
  %89 = bitcast %struct.ElementObject* %88 to %struct._object*, !dbg !4060
  store %struct._object* %89, %struct._object** %retval, !dbg !4061
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !4061

if.else.86:                                       ; preds = %lor.lhs.false.77
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !4062

if.end.87:                                        ; preds = %cleanup.cont.72
  store i32 0, i32* %cleanup.dest.slot, !dbg !4063
  br label %cleanup.88, !dbg !4063

cleanup.88:                                       ; preds = %if.end.87, %if.else.86, %if.then.83, %cleanup.70, %if.then.53
  %90 = bitcast %struct.ElementObject** %child to i8*, !dbg !4064
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !4064
  %cleanup.dest.89 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.89, label %cleanup.135 [
    i32 0, label %cleanup.cont.90
    i32 2, label %while.cond
  ]

cleanup.cont.90:                                  ; preds = %cleanup.88
  br label %if.end.134, !dbg !4065

if.else.91:                                       ; preds = %land.lhs.true, %if.end.34
  %91 = bitcast %struct._object** %tail to i8*, !dbg !4066
  call void @llvm.lifetime.start(i64 8, i8* %91) #1, !dbg !4066
  call void @llvm.dbg.declare(metadata %struct._object** %tail, metadata !795, metadata !2613), !dbg !4067
  %92 = bitcast %struct.ParentLocator_t** %next to i8*, !dbg !4068
  call void @llvm.lifetime.start(i64 8, i8* %92) #1, !dbg !4068
  call void @llvm.dbg.declare(metadata %struct.ParentLocator_t** %next, metadata !797, metadata !2613), !dbg !4069
  %93 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4070, !tbaa !2620
  %parent_stack92 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %93, i32 0, i32 1, !dbg !4071
  %94 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack92, align 8, !dbg !4071, !tbaa !3624
  %next93 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %94, i32 0, i32 2, !dbg !4072
  %95 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next93, align 8, !dbg !4072, !tbaa !3680
  store %struct.ParentLocator_t* %95, %struct.ParentLocator_t** %next, align 8, !dbg !4069, !tbaa !2620
  %96 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4073, !tbaa !2620
  %gettext94 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %96, i32 0, i32 5, !dbg !4075
  %97 = load i32, i32* %gettext94, align 4, !dbg !4075, !tbaa !3936
  %tobool95 = icmp ne i32 %97, 0, !dbg !4073
  br i1 %tobool95, label %if.then.96, label %if.else.101, !dbg !4076

if.then.96:                                       ; preds = %if.else.91
  %98 = load %struct.ElementObject*, %struct.ElementObject** %cur_parent, align 8, !dbg !4077, !tbaa !2620
  %call97 = call %struct._object* @element_get_tail(%struct.ElementObject* %98), !dbg !4079
  store %struct._object* %call97, %struct._object** %tail, align 8, !dbg !4080, !tbaa !2620
  %99 = load %struct._object*, %struct._object** %tail, align 8, !dbg !4081, !tbaa !2620
  %tobool98 = icmp ne %struct._object* %99, null, !dbg !4081
  br i1 %tobool98, label %if.end.100, label %if.then.99, !dbg !4083

if.then.99:                                       ; preds = %if.then.96
  store %struct._object* null, %struct._object** %retval, !dbg !4084
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.130, !dbg !4084

if.end.100:                                       ; preds = %if.then.96
  br label %if.end.102, !dbg !4085

if.else.101:                                      ; preds = %if.else.91
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail, align 8, !dbg !4086, !tbaa !2620
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.101, %if.end.100
  br label %do.body, !dbg !4087

do.body:                                          ; preds = %if.end.102
  %100 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4088
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !4088
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !798, metadata !2613), !dbg !4090
  %101 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4091, !tbaa !2620
  %parent_stack103 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %101, i32 0, i32 1, !dbg !4092
  %102 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack103, align 8, !dbg !4092, !tbaa !3624
  %parent104 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %102, i32 0, i32 0, !dbg !4093
  %103 = load %struct.ElementObject*, %struct.ElementObject** %parent104, align 8, !dbg !4093, !tbaa !3639
  %104 = bitcast %struct.ElementObject* %103 to %struct._object*, !dbg !4094
  store %struct._object* %104, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4090, !tbaa !2620
  %105 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4095, !tbaa !2620
  %cmp105 = icmp ne %struct._object* %105, null, !dbg !4096
  br i1 %cmp105, label %if.then.107, label %if.end.115, !dbg !4097

if.then.107:                                      ; preds = %do.body
  br label %do.body.108, !dbg !4098

do.body.108:                                      ; preds = %if.then.107
  %106 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4100
  call void @llvm.lifetime.start(i64 8, i8* %106) #1, !dbg !4100
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !800, metadata !2613), !dbg !4102
  %107 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4103, !tbaa !2620
  store %struct._object* %107, %struct._object** %_py_decref_tmp, align 8, !dbg !4102, !tbaa !2620
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4104, !tbaa !2620
  %ob_refcnt109 = getelementptr inbounds %struct._object, %struct._object* %108, i32 0, i32 0, !dbg !4106
  %109 = load i64, i64* %ob_refcnt109, align 8, !dbg !4107, !tbaa !2631
  %dec = add i64 %109, -1, !dbg !4107
  store i64 %dec, i64* %ob_refcnt109, align 8, !dbg !4107, !tbaa !2631
  %cmp110 = icmp ne i64 %dec, 0, !dbg !4108
  br i1 %cmp110, label %if.then.112, label %if.else.113, !dbg !4109

if.then.112:                                      ; preds = %do.body.108
  br label %if.end.114, !dbg !4110

if.else.113:                                      ; preds = %do.body.108
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4112, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 1, !dbg !4114
  %111 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4114, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %111, i32 0, i32 4, !dbg !4115
  %112 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4115, !tbaa !2705
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4116, !tbaa !2620
  call void %112(%struct._object* %113), !dbg !4117
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.113, %if.then.112
  %114 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4118
  call void @llvm.lifetime.end(i64 8, i8* %114) #1, !dbg !4118
  br label %do.cond, !dbg !4120

do.cond:                                          ; preds = %if.end.114
  br label %do.end, !dbg !4121

do.end:                                           ; preds = %do.cond
  br label %if.end.115, !dbg !4123

if.end.115:                                       ; preds = %do.end, %do.body
  %115 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4125
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !4125
  br label %do.cond.116, !dbg !4128

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !4129

do.end.117:                                       ; preds = %do.cond.116
  %116 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4131, !tbaa !2620
  %parent_stack118 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %116, i32 0, i32 1, !dbg !4132
  %117 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack118, align 8, !dbg !4132, !tbaa !3624
  %118 = bitcast %struct.ParentLocator_t* %117 to i8*, !dbg !4131
  call void @PyObject_Free(i8* %118), !dbg !4133
  %119 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %next, align 8, !dbg !4134, !tbaa !2620
  %120 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4135, !tbaa !2620
  %parent_stack119 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %120, i32 0, i32 1, !dbg !4136
  store %struct.ParentLocator_t* %119, %struct.ParentLocator_t** %parent_stack119, align 8, !dbg !4137, !tbaa !3624
  %121 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it.addr, align 8, !dbg !4138, !tbaa !2620
  %parent_stack120 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %121, i32 0, i32 1, !dbg !4140
  %122 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack120, align 8, !dbg !4140, !tbaa !3624
  %parent121 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %122, i32 0, i32 0, !dbg !4141
  %123 = load %struct.ElementObject*, %struct.ElementObject** %parent121, align 8, !dbg !4141, !tbaa !3639
  %tobool122 = icmp ne %struct.ElementObject* %123, null, !dbg !4138
  br i1 %tobool122, label %land.lhs.true.123, label %if.end.129, !dbg !4142

land.lhs.true.123:                                ; preds = %do.end.117
  %124 = load %struct._object*, %struct._object** %tail, align 8, !dbg !4143, !tbaa !2620
  %call124 = call i32 @PyObject_IsTrue(%struct._object* %124), !dbg !4145
  %tobool125 = icmp ne i32 %call124, 0, !dbg !4145
  br i1 %tobool125, label %if.then.126, label %if.end.129, !dbg !4146

if.then.126:                                      ; preds = %land.lhs.true.123
  %125 = load %struct._object*, %struct._object** %tail, align 8, !dbg !4147, !tbaa !2620
  %ob_refcnt127 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0, !dbg !4149
  %126 = load i64, i64* %ob_refcnt127, align 8, !dbg !4150, !tbaa !2631
  %inc128 = add i64 %126, 1, !dbg !4150
  store i64 %inc128, i64* %ob_refcnt127, align 8, !dbg !4150, !tbaa !2631
  %127 = load %struct._object*, %struct._object** %tail, align 8, !dbg !4151, !tbaa !2620
  store %struct._object* %127, %struct._object** %retval, !dbg !4152
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.130, !dbg !4152

if.end.129:                                       ; preds = %land.lhs.true.123, %do.end.117
  store i32 0, i32* %cleanup.dest.slot, !dbg !4153
  br label %cleanup.130, !dbg !4153

cleanup.130:                                      ; preds = %if.end.129, %if.then.126, %if.then.99
  %128 = bitcast %struct.ParentLocator_t** %next to i8*, !dbg !4154
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !4154
  %129 = bitcast %struct._object** %tail to i8*, !dbg !4154
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !4154
  %cleanup.dest.132 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.132, label %cleanup.135 [
    i32 0, label %cleanup.cont.133
  ]

cleanup.cont.133:                                 ; preds = %cleanup.130
  br label %if.end.134

if.end.134:                                       ; preds = %cleanup.cont.133, %cleanup.cont.90
  br label %while.cond, !dbg !3888

cleanup.135:                                      ; preds = %cleanup.130, %cleanup.88, %if.else.26, %cleanup, %if.then.7, %if.then.2
  %130 = bitcast i64* %child_index to i8*, !dbg !4155
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !4155
  %131 = bitcast %struct.ElementObject** %cur_parent to i8*, !dbg !4155
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !4155
  %132 = load %struct._object*, %struct._object** %retval, !dbg !4155
  ret %struct._object* %132, !dbg !4155
}

declare void @PyObject_Free(i8*) #3

declare void @PyObject_GC_UnTrack(i8*) #3

declare void @PyObject_GC_Del(i8*) #3

declare void @PyErr_SetNone(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct.ParentLocator_t* @parent_stack_push_new(%struct.ParentLocator_t* %stack, %struct.ElementObject* %parent) #0 {
entry:
  %stack.addr = alloca %struct.ParentLocator_t*, align 8
  %parent.addr = alloca %struct.ElementObject*, align 8
  %new_node = alloca %struct.ParentLocator_t*, align 8
  store %struct.ParentLocator_t* %stack, %struct.ParentLocator_t** %stack.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ParentLocator_t** %stack.addr, metadata !807, metadata !2613), !dbg !4156
  store %struct.ElementObject* %parent, %struct.ElementObject** %parent.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %parent.addr, metadata !808, metadata !2613), !dbg !4157
  %0 = bitcast %struct.ParentLocator_t** %new_node to i8*, !dbg !4158
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4158
  call void @llvm.dbg.declare(metadata %struct.ParentLocator_t** %new_node, metadata !809, metadata !2613), !dbg !4159
  %call = call i8* @PyObject_Malloc(i64 24), !dbg !4160
  %1 = bitcast i8* %call to %struct.ParentLocator_t*, !dbg !4160
  store %struct.ParentLocator_t* %1, %struct.ParentLocator_t** %new_node, align 8, !dbg !4159, !tbaa !2620
  %2 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8, !dbg !4161, !tbaa !2620
  %tobool = icmp ne %struct.ParentLocator_t* %2, null, !dbg !4161
  br i1 %tobool, label %if.then, label %if.end, !dbg !4163

if.then:                                          ; preds = %entry
  %3 = load %struct.ElementObject*, %struct.ElementObject** %parent.addr, align 8, !dbg !4164, !tbaa !2620
  %4 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8, !dbg !4166, !tbaa !2620
  %parent1 = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %4, i32 0, i32 0, !dbg !4167
  store %struct.ElementObject* %3, %struct.ElementObject** %parent1, align 8, !dbg !4168, !tbaa !3639
  %5 = load %struct.ElementObject*, %struct.ElementObject** %parent.addr, align 8, !dbg !4169, !tbaa !2620
  %6 = bitcast %struct.ElementObject* %5 to %struct._object*, !dbg !4170
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !4171
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !4172, !tbaa !2631
  %inc = add i64 %7, 1, !dbg !4172
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4172, !tbaa !2631
  %8 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8, !dbg !4173, !tbaa !2620
  %child_index = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %8, i32 0, i32 1, !dbg !4174
  store i64 0, i64* %child_index, align 8, !dbg !4175, !tbaa !3980
  %9 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %stack.addr, align 8, !dbg !4176, !tbaa !2620
  %10 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8, !dbg !4177, !tbaa !2620
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %10, i32 0, i32 2, !dbg !4178
  store %struct.ParentLocator_t* %9, %struct.ParentLocator_t** %next, align 8, !dbg !4179, !tbaa !3680
  br label %if.end, !dbg !4180

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %new_node, align 8, !dbg !4181, !tbaa !2620
  %12 = bitcast %struct.ParentLocator_t** %new_node to i8*, !dbg !4182
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !4182
  ret %struct.ParentLocator_t* %11, !dbg !4183
}

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get_text(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !814, metadata !2613), !dbg !4184
  %0 = bitcast %struct._object** %res to i8*, !dbg !4185
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4185
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !815, metadata !2613), !dbg !4186
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !4187, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 2, !dbg !4188
  %2 = load %struct._object*, %struct._object** %text, align 8, !dbg !4188, !tbaa !3376
  store %struct._object* %2, %struct._object** %res, align 8, !dbg !4186, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %res, align 8, !dbg !4189, !tbaa !2620
  %4 = ptrtoint %struct._object* %3 to i64, !dbg !4191
  %and = and i64 %4, 1, !dbg !4192
  %tobool = icmp ne i64 %and, 0, !dbg !4192
  br i1 %tobool, label %if.then, label %if.end.7, !dbg !4193

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** %res, align 8, !dbg !4194, !tbaa !2620
  %6 = ptrtoint %struct._object* %5 to i64, !dbg !4196
  %and1 = and i64 %6, -2, !dbg !4197
  %7 = inttoptr i64 %and1 to %struct._object*, !dbg !4198
  store %struct._object* %7, %struct._object** %res, align 8, !dbg !4199, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %res, align 8, !dbg !4200, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !4202
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4202, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %9, @PyList_Type, !dbg !4203
  br i1 %cmp, label %if.then.2, label %if.end.6, !dbg !4204

if.then.2:                                        ; preds = %if.then
  %10 = load %struct._object*, %struct._object** %res, align 8, !dbg !4205, !tbaa !2620
  %call = call %struct._object* @list_join(%struct._object* %10), !dbg !4207
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !4208, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !4209, !tbaa !2620
  %tobool3 = icmp ne %struct._object* %11, null, !dbg !4209
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !4211

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !4212
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4212

if.end:                                           ; preds = %if.then.2
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !4213, !tbaa !2620
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !4214, !tbaa !2620
  %text5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 2, !dbg !4215
  store %struct._object* %12, %struct._object** %text5, align 8, !dbg !4216, !tbaa !3376
  br label %if.end.6, !dbg !4217

if.end.6:                                         ; preds = %if.end, %if.then
  br label %if.end.7, !dbg !4218

if.end.7:                                         ; preds = %if.end.6, %entry
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !4219, !tbaa !2620
  store %struct._object* %14, %struct._object** %retval, !dbg !4220
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4220

cleanup:                                          ; preds = %if.end.7, %if.then.4
  %15 = bitcast %struct._object** %res to i8*, !dbg !4221
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !4221
  %16 = load %struct._object*, %struct._object** %retval, !dbg !4221
  ret %struct._object* %16, !dbg !4221
}

declare i32 @PyObject_IsTrue(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get_tail(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !828, metadata !2613), !dbg !4222
  %0 = bitcast %struct._object** %res to i8*, !dbg !4223
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4223
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !829, metadata !2613), !dbg !4224
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !4225, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 3, !dbg !4226
  %2 = load %struct._object*, %struct._object** %tail, align 8, !dbg !4226, !tbaa !3381
  store %struct._object* %2, %struct._object** %res, align 8, !dbg !4224, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %res, align 8, !dbg !4227, !tbaa !2620
  %4 = ptrtoint %struct._object* %3 to i64, !dbg !4229
  %and = and i64 %4, 1, !dbg !4230
  %tobool = icmp ne i64 %and, 0, !dbg !4230
  br i1 %tobool, label %if.then, label %if.end.7, !dbg !4231

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** %res, align 8, !dbg !4232, !tbaa !2620
  %6 = ptrtoint %struct._object* %5 to i64, !dbg !4234
  %and1 = and i64 %6, -2, !dbg !4235
  %7 = inttoptr i64 %and1 to %struct._object*, !dbg !4236
  store %struct._object* %7, %struct._object** %res, align 8, !dbg !4237, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %res, align 8, !dbg !4238, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !4240
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4240, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %9, @PyList_Type, !dbg !4241
  br i1 %cmp, label %if.then.2, label %if.end.6, !dbg !4242

if.then.2:                                        ; preds = %if.then
  %10 = load %struct._object*, %struct._object** %res, align 8, !dbg !4243, !tbaa !2620
  %call = call %struct._object* @list_join(%struct._object* %10), !dbg !4245
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !4246, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !4247, !tbaa !2620
  %tobool3 = icmp ne %struct._object* %11, null, !dbg !4247
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !4249

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !4250
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4250

if.end:                                           ; preds = %if.then.2
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !4251, !tbaa !2620
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !4252, !tbaa !2620
  %tail5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 3, !dbg !4253
  store %struct._object* %12, %struct._object** %tail5, align 8, !dbg !4254, !tbaa !3381
  br label %if.end.6, !dbg !4255

if.end.6:                                         ; preds = %if.end, %if.then
  br label %if.end.7, !dbg !4256

if.end.7:                                         ; preds = %if.end.6, %entry
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !4257, !tbaa !2620
  store %struct._object* %14, %struct._object** %retval, !dbg !4258
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4258

cleanup:                                          ; preds = %if.end.7, %if.then.4
  %15 = bitcast %struct._object** %res to i8*, !dbg !4259
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !4259
  %16 = load %struct._object*, %struct._object** %retval, !dbg !4259
  ret %struct._object* %16, !dbg !4259
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @list_join(%struct._object* %list) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %list.addr = alloca %struct._object*, align 8
  %joiner = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp7 = alloca %struct._object*, align 8
  store %struct._object* %list, %struct._object** %list.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %list.addr, metadata !818, metadata !2613), !dbg !4260
  %0 = bitcast %struct._object** %joiner to i8*, !dbg !4261
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4261
  call void @llvm.dbg.declare(metadata %struct._object** %joiner, metadata !819, metadata !2613), !dbg !4262
  %1 = bitcast %struct._object** %result to i8*, !dbg !4263
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4263
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !820, metadata !2613), !dbg !4264
  %call = call %struct._object* @PyUnicode_FromStringAndSize(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i64 0), !dbg !4265
  store %struct._object* %call, %struct._object** %joiner, align 8, !dbg !4266, !tbaa !2620
  %2 = load %struct._object*, %struct._object** %joiner, align 8, !dbg !4267, !tbaa !2620
  %tobool = icmp ne %struct._object* %2, null, !dbg !4267
  br i1 %tobool, label %if.end, label %if.then, !dbg !4269

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4270
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4270

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %joiner, align 8, !dbg !4271, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %list.addr, align 8, !dbg !4272, !tbaa !2620
  %call1 = call %struct._object* @PyUnicode_Join(%struct._object* %3, %struct._object* %4), !dbg !4273
  store %struct._object* %call1, %struct._object** %result, align 8, !dbg !4274, !tbaa !2620
  br label %do.body, !dbg !4275

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4276
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4276
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !821, metadata !2613), !dbg !4278
  %6 = load %struct._object*, %struct._object** %joiner, align 8, !dbg !4279, !tbaa !2620
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !4278, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4280, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !4282
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !4283, !tbaa !2631
  %dec = add i64 %8, -1, !dbg !4283
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4283, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !4284
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !4285

if.then.2:                                        ; preds = %do.body
  br label %if.end.3, !dbg !4286

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4288, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !4290
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4290, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !4291
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4291, !tbaa !2705
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4292, !tbaa !2620
  call void %11(%struct._object* %12), !dbg !4293
  br label %if.end.3

if.end.3:                                         ; preds = %if.else, %if.then.2
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4294
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !4294
  br label %do.cond, !dbg !4296

do.cond:                                          ; preds = %if.end.3
  br label %do.end, !dbg !4297

do.end:                                           ; preds = %do.cond
  %14 = load %struct._object*, %struct._object** %result, align 8, !dbg !4299, !tbaa !2620
  %tobool4 = icmp ne %struct._object* %14, null, !dbg !4299
  br i1 %tobool4, label %if.then.5, label %if.end.18, !dbg !4300

if.then.5:                                        ; preds = %do.end
  br label %do.body.6, !dbg !4301

do.body.6:                                        ; preds = %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp7 to i8*, !dbg !4302
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !4302
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp7, metadata !823, metadata !2613), !dbg !4304
  %16 = load %struct._object*, %struct._object** %list.addr, align 8, !dbg !4305, !tbaa !2620
  store %struct._object* %16, %struct._object** %_py_decref_tmp7, align 8, !dbg !4304, !tbaa !2620
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !4306, !tbaa !2620
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !4308
  %18 = load i64, i64* %ob_refcnt8, align 8, !dbg !4309, !tbaa !2631
  %dec9 = add i64 %18, -1, !dbg !4309
  store i64 %dec9, i64* %ob_refcnt8, align 8, !dbg !4309, !tbaa !2631
  %cmp10 = icmp ne i64 %dec9, 0, !dbg !4310
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !4311

if.then.11:                                       ; preds = %do.body.6
  br label %if.end.15, !dbg !4312

if.else.12:                                       ; preds = %do.body.6
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !4314, !tbaa !2620
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !4316
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !4316, !tbaa !2703
  %tp_dealloc14 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !4317
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc14, align 8, !dbg !4317, !tbaa !2705
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !4318, !tbaa !2620
  call void %21(%struct._object* %22), !dbg !4319
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.12, %if.then.11
  %23 = bitcast %struct._object** %_py_decref_tmp7 to i8*, !dbg !4320
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !4320
  br label %do.cond.16, !dbg !4322

do.cond.16:                                       ; preds = %if.end.15
  br label %do.end.17, !dbg !4323

do.end.17:                                        ; preds = %do.cond.16
  br label %if.end.18, !dbg !4325

if.end.18:                                        ; preds = %do.end.17, %do.end
  %24 = load %struct._object*, %struct._object** %result, align 8, !dbg !4327, !tbaa !2620
  store %struct._object* %24, %struct._object** %retval, !dbg !4328
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4328

cleanup:                                          ; preds = %if.end.18, %if.then
  %25 = bitcast %struct._object** %result to i8*, !dbg !4329
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !4329
  %26 = bitcast %struct._object** %joiner to i8*, !dbg !4329
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !4329
  %27 = load %struct._object*, %struct._object** %retval, !dbg !4329
  ret %struct._object* %27, !dbg !4329
}

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #3

declare %struct._object* @PyUnicode_Join(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @treebuilder_dealloc(%struct.TreeBuilderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !834, metadata !2613), !dbg !4330
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4331, !tbaa !2620
  %1 = bitcast %struct.TreeBuilderObject* %0 to i8*, !dbg !4331
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !4332
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4333, !tbaa !2620
  %call = call i32 @treebuilder_gc_clear(%struct.TreeBuilderObject* %2), !dbg !4334
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4335, !tbaa !2620
  %4 = bitcast %struct.TreeBuilderObject* %3 to %struct._object*, !dbg !4336
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !4337
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4337, !tbaa !2703
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 38, !dbg !4338
  %6 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4338, !tbaa !4339
  %7 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4340, !tbaa !2620
  %8 = bitcast %struct.TreeBuilderObject* %7 to %struct._object*, !dbg !4341
  %9 = bitcast %struct._object* %8 to i8*, !dbg !4341
  call void %6(i8* %9), !dbg !4342
  ret void, !dbg !4343
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_gc_traverse(%struct.TreeBuilderObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  %vret64 = alloca i32, align 4
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !839, metadata !2613), !dbg !4344
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !840, metadata !2613), !dbg !4345
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !841, metadata !2613), !dbg !4346
  br label %do.body, !dbg !4347

do.body:                                          ; preds = %entry
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4348, !tbaa !2620
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 1, !dbg !4350
  %1 = load %struct._object*, %struct._object** %root, align 8, !dbg !4350, !tbaa !4351
  %tobool = icmp ne %struct._object* %1, null, !dbg !4353
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !4354

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !4355
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !4355
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !842, metadata !2613), !dbg !4357
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4358, !tbaa !2620
  %4 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4359, !tbaa !2620
  %root1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %4, i32 0, i32 1, !dbg !4360
  %5 = load %struct._object*, %struct._object** %root1, align 8, !dbg !4360, !tbaa !4351
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !4361, !tbaa !2620
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !4358
  store i32 %call, i32* %vret, align 4, !dbg !4357, !tbaa !2759
  %7 = load i32, i32* %vret, align 4, !dbg !4362, !tbaa !2759
  %tobool2 = icmp ne i32 %7, 0, !dbg !4362
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !4364

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !4365, !tbaa !2759
  store i32 %8, i32* %retval, !dbg !4367
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4367

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !4368
  br label %cleanup, !dbg !4368

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !4370
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !4370
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.4, !dbg !4373

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4374

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !4377

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4378, !tbaa !2620
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 2, !dbg !4380
  %11 = load %struct._object*, %struct._object** %this, align 8, !dbg !4380, !tbaa !4381
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !4382
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !4383

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !4384
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !4384
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !846, metadata !2613), !dbg !4386
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4387, !tbaa !2620
  %14 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4388, !tbaa !2620
  %this9 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %14, i32 0, i32 2, !dbg !4389
  %15 = load %struct._object*, %struct._object** %this9, align 8, !dbg !4389, !tbaa !4381
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !4390, !tbaa !2620
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !4387
  store i32 %call10, i32* %vret8, align 4, !dbg !4386, !tbaa !2759
  %17 = load i32, i32* %vret8, align 4, !dbg !4391, !tbaa !2759
  %tobool11 = icmp ne i32 %17, 0, !dbg !4391
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !4393

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !4394, !tbaa !2759
  store i32 %18, i32* %retval, !dbg !4396
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !4396

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !4397
  br label %cleanup.14, !dbg !4397

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !4399
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !4399
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.15, label %unreachable [
    i32 0, label %cleanup.cont.16
    i32 1, label %return
  ]

cleanup.cont.16:                                  ; preds = %cleanup.14
  br label %if.end.17, !dbg !4402

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !4403

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !4406

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4407, !tbaa !2620
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %20, i32 0, i32 3, !dbg !4409
  %21 = load %struct._object*, %struct._object** %last, align 8, !dbg !4409, !tbaa !4410
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !4411
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !4412

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !4413
  call void @llvm.lifetime.start(i64 4, i8* %22) #1, !dbg !4413
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !850, metadata !2613), !dbg !4415
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4416, !tbaa !2620
  %24 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4417, !tbaa !2620
  %last23 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %24, i32 0, i32 3, !dbg !4418
  %25 = load %struct._object*, %struct._object** %last23, align 8, !dbg !4418, !tbaa !4410
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !4419, !tbaa !2620
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !4416
  store i32 %call24, i32* %vret22, align 4, !dbg !4415, !tbaa !2759
  %27 = load i32, i32* %vret22, align 4, !dbg !4420, !tbaa !2759
  %tobool25 = icmp ne i32 %27, 0, !dbg !4420
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !4422

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !4423, !tbaa !2759
  store i32 %28, i32* %retval, !dbg !4425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !4425

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !4426
  br label %cleanup.28, !dbg !4426

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !4428
  call void @llvm.lifetime.end(i64 4, i8* %29) #1, !dbg !4428
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.29, label %unreachable [
    i32 0, label %cleanup.cont.30
    i32 1, label %return
  ]

cleanup.cont.30:                                  ; preds = %cleanup.28
  br label %if.end.31, !dbg !4431

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !4432

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !4435

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4436, !tbaa !2620
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %30, i32 0, i32 4, !dbg !4438
  %31 = load %struct._object*, %struct._object** %data, align 8, !dbg !4438, !tbaa !4439
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !4440
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !4441

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !4442
  call void @llvm.lifetime.start(i64 4, i8* %32) #1, !dbg !4442
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !854, metadata !2613), !dbg !4444
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4445, !tbaa !2620
  %34 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4446, !tbaa !2620
  %data37 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %34, i32 0, i32 4, !dbg !4447
  %35 = load %struct._object*, %struct._object** %data37, align 8, !dbg !4447, !tbaa !4439
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !4448, !tbaa !2620
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !4445
  store i32 %call38, i32* %vret36, align 4, !dbg !4444, !tbaa !2759
  %37 = load i32, i32* %vret36, align 4, !dbg !4449, !tbaa !2759
  %tobool39 = icmp ne i32 %37, 0, !dbg !4449
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !4451

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !4452, !tbaa !2759
  store i32 %38, i32* %retval, !dbg !4454
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !4454

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !4455
  br label %cleanup.42, !dbg !4455

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !4457
  call void @llvm.lifetime.end(i64 4, i8* %39) #1, !dbg !4457
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.43, label %unreachable [
    i32 0, label %cleanup.cont.44
    i32 1, label %return
  ]

cleanup.cont.44:                                  ; preds = %cleanup.42
  br label %if.end.45, !dbg !4460

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !4461

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !4464

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4465, !tbaa !2620
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %40, i32 0, i32 5, !dbg !4467
  %41 = load %struct._object*, %struct._object** %stack, align 8, !dbg !4467, !tbaa !4468
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !4469
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !4470

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !4471
  call void @llvm.lifetime.start(i64 4, i8* %42) #1, !dbg !4471
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !858, metadata !2613), !dbg !4473
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4474, !tbaa !2620
  %44 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4475, !tbaa !2620
  %stack51 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %44, i32 0, i32 5, !dbg !4476
  %45 = load %struct._object*, %struct._object** %stack51, align 8, !dbg !4476, !tbaa !4468
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !4477, !tbaa !2620
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !4474
  store i32 %call52, i32* %vret50, align 4, !dbg !4473, !tbaa !2759
  %47 = load i32, i32* %vret50, align 4, !dbg !4478, !tbaa !2759
  %tobool53 = icmp ne i32 %47, 0, !dbg !4478
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !4480

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !4481, !tbaa !2759
  store i32 %48, i32* %retval, !dbg !4483
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !4483

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !4484
  br label %cleanup.56, !dbg !4484

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !4486
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !4486
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.57, label %unreachable [
    i32 0, label %cleanup.cont.58
    i32 1, label %return
  ]

cleanup.cont.58:                                  ; preds = %cleanup.56
  br label %if.end.59, !dbg !4489

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !4490

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61, !dbg !4493

do.body.61:                                       ; preds = %do.end.60
  %50 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4494, !tbaa !2620
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %50, i32 0, i32 7, !dbg !4496
  %51 = load %struct._object*, %struct._object** %element_factory, align 8, !dbg !4496, !tbaa !4497
  %tobool62 = icmp ne %struct._object* %51, null, !dbg !4498
  br i1 %tobool62, label %if.then.63, label %if.end.73, !dbg !4499

if.then.63:                                       ; preds = %do.body.61
  %52 = bitcast i32* %vret64 to i8*, !dbg !4500
  call void @llvm.lifetime.start(i64 4, i8* %52) #1, !dbg !4500
  call void @llvm.dbg.declare(metadata i32* %vret64, metadata !862, metadata !2613), !dbg !4502
  %53 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4503, !tbaa !2620
  %54 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4504, !tbaa !2620
  %element_factory65 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %54, i32 0, i32 7, !dbg !4505
  %55 = load %struct._object*, %struct._object** %element_factory65, align 8, !dbg !4505, !tbaa !4497
  %56 = load i8*, i8** %arg.addr, align 8, !dbg !4506, !tbaa !2620
  %call66 = call i32 %53(%struct._object* %55, i8* %56), !dbg !4503
  store i32 %call66, i32* %vret64, align 4, !dbg !4502, !tbaa !2759
  %57 = load i32, i32* %vret64, align 4, !dbg !4507, !tbaa !2759
  %tobool67 = icmp ne i32 %57, 0, !dbg !4507
  br i1 %tobool67, label %if.then.68, label %if.end.69, !dbg !4509

if.then.68:                                       ; preds = %if.then.63
  %58 = load i32, i32* %vret64, align 4, !dbg !4510, !tbaa !2759
  store i32 %58, i32* %retval, !dbg !4512
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !4512

if.end.69:                                        ; preds = %if.then.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !4513
  br label %cleanup.70, !dbg !4513

cleanup.70:                                       ; preds = %if.end.69, %if.then.68
  %59 = bitcast i32* %vret64 to i8*, !dbg !4515
  call void @llvm.lifetime.end(i64 4, i8* %59) #1, !dbg !4515
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.71, label %unreachable [
    i32 0, label %cleanup.cont.72
    i32 1, label %return
  ]

cleanup.cont.72:                                  ; preds = %cleanup.70
  br label %if.end.73, !dbg !4518

if.end.73:                                        ; preds = %cleanup.cont.72, %do.body.61
  br label %do.end.74, !dbg !4519

do.end.74:                                        ; preds = %if.end.73
  store i32 0, i32* %retval, !dbg !4522
  br label %return, !dbg !4522

return:                                           ; preds = %do.end.74, %cleanup.70, %cleanup.56, %cleanup.42, %cleanup.28, %cleanup.14, %cleanup
  %60 = load i32, i32* %retval, !dbg !4523
  ret i32 %60, !dbg !4523

unreachable:                                      ; preds = %cleanup.70, %cleanup.56, %cleanup.42, %cleanup.28, %cleanup.14, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_gc_clear(%struct.TreeBuilderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_tmp129 = alloca %struct._object*, align 8
  %_py_decref_tmp134 = alloca %struct._object*, align 8
  %_py_tmp149 = alloca %struct._object*, align 8
  %_py_decref_tmp154 = alloca %struct._object*, align 8
  %_py_tmp169 = alloca %struct._object*, align 8
  %_py_decref_tmp174 = alloca %struct._object*, align 8
  %_py_tmp189 = alloca %struct._object*, align 8
  %_py_decref_tmp194 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !870, metadata !2613), !dbg !4524
  br label %do.body, !dbg !4525

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4526
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4526
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !871, metadata !2613), !dbg !4528
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4529, !tbaa !2620
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %1, i32 0, i32 12, !dbg !4530
  %2 = load %struct._object*, %struct._object** %end_ns_event_obj, align 8, !dbg !4530, !tbaa !4531
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !4528, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4532, !tbaa !2620
  %cmp = icmp ne %struct._object* %3, null, !dbg !4533
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !4534

if.then:                                          ; preds = %do.body
  %4 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4535, !tbaa !2620
  %end_ns_event_obj1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %4, i32 0, i32 12, !dbg !4537
  store %struct._object* null, %struct._object** %end_ns_event_obj1, align 8, !dbg !4538, !tbaa !4531
  br label %do.body.2, !dbg !4539

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4540
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4540
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !873, metadata !2613), !dbg !4542
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4543, !tbaa !2620
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !4542, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4544, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !4546
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !4547, !tbaa !2631
  %dec = add i64 %8, -1, !dbg !4547
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4547, !tbaa !2631
  %cmp3 = icmp ne i64 %dec, 0, !dbg !4548
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !4549

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !4550

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4552, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !4554
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4554, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !4555
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4555, !tbaa !2705
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4556, !tbaa !2620
  call void %11(%struct._object* %12), !dbg !4557
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4558
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !4558
  br label %do.cond, !dbg !4560

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !4561

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !4563

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4565
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !4565
  br label %do.end.7, !dbg !4568

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !4569

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !4570
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !4570
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !877, metadata !2613), !dbg !4572
  %16 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4573, !tbaa !2620
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %16, i32 0, i32 11, !dbg !4574
  %17 = load %struct._object*, %struct._object** %start_ns_event_obj, align 8, !dbg !4574, !tbaa !4575
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !4572, !tbaa !2620
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !4576, !tbaa !2620
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !4577
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !4578

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4579, !tbaa !2620
  %start_ns_event_obj12 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %19, i32 0, i32 11, !dbg !4581
  store %struct._object* null, %struct._object** %start_ns_event_obj12, align 8, !dbg !4582, !tbaa !4575
  br label %do.body.13, !dbg !4583

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !4584
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !4584
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !879, metadata !2613), !dbg !4586
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !4587, !tbaa !2620
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !4586, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !4588, !tbaa !2620
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !4590
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !4591, !tbaa !2631
  %dec16 = add i64 %23, -1, !dbg !4591
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !4591, !tbaa !2631
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !4592
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !4593

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !4594

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !4596, !tbaa !2620
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !4598
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !4598, !tbaa !2703
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !4599
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !4599, !tbaa !2705
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !4600, !tbaa !2620
  call void %26(%struct._object* %27), !dbg !4601
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !4602
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !4602
  br label %do.cond.23, !dbg !4604

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !4605

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !4607

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !4609
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !4609
  br label %do.end.27, !dbg !4610

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !4611

do.body.28:                                       ; preds = %do.end.27
  %30 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !4612
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !4612
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !883, metadata !2613), !dbg !4614
  %31 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4615, !tbaa !2620
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %31, i32 0, i32 10, !dbg !4616
  %32 = load %struct._object*, %struct._object** %end_event_obj, align 8, !dbg !4616, !tbaa !4617
  store %struct._object* %32, %struct._object** %_py_tmp29, align 8, !dbg !4614, !tbaa !2620
  %33 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !4618, !tbaa !2620
  %cmp30 = icmp ne %struct._object* %33, null, !dbg !4619
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !4620

if.then.31:                                       ; preds = %do.body.28
  %34 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4621, !tbaa !2620
  %end_event_obj32 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %34, i32 0, i32 10, !dbg !4623
  store %struct._object* null, %struct._object** %end_event_obj32, align 8, !dbg !4624, !tbaa !4617
  br label %do.body.33, !dbg !4625

do.body.33:                                       ; preds = %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !4626
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !4626
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !885, metadata !2613), !dbg !4628
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !4629, !tbaa !2620
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !4628, !tbaa !2620
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !4630, !tbaa !2620
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !4632
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !4633, !tbaa !2631
  %dec36 = add i64 %38, -1, !dbg !4633
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !4633, !tbaa !2631
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !4634
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !4635

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !4636

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !4638, !tbaa !2620
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !4640
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !4640, !tbaa !2703
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !4641
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !4641, !tbaa !2705
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !4642, !tbaa !2620
  call void %41(%struct._object* %42), !dbg !4643
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !4644
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !4644
  br label %do.cond.43, !dbg !4646

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !4647

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !4649

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %44 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !4651
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !4651
  br label %do.end.47, !dbg !4652

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !4653

do.body.48:                                       ; preds = %do.end.47
  %45 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !4654
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !4654
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !889, metadata !2613), !dbg !4656
  %46 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4657, !tbaa !2620
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %46, i32 0, i32 9, !dbg !4658
  %47 = load %struct._object*, %struct._object** %start_event_obj, align 8, !dbg !4658, !tbaa !4659
  store %struct._object* %47, %struct._object** %_py_tmp49, align 8, !dbg !4656, !tbaa !2620
  %48 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !4660, !tbaa !2620
  %cmp50 = icmp ne %struct._object* %48, null, !dbg !4661
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !4662

if.then.51:                                       ; preds = %do.body.48
  %49 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4663, !tbaa !2620
  %start_event_obj52 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %49, i32 0, i32 9, !dbg !4665
  store %struct._object* null, %struct._object** %start_event_obj52, align 8, !dbg !4666, !tbaa !4659
  br label %do.body.53, !dbg !4667

do.body.53:                                       ; preds = %if.then.51
  %50 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !4668
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !4668
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !891, metadata !2613), !dbg !4670
  %51 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !4671, !tbaa !2620
  store %struct._object* %51, %struct._object** %_py_decref_tmp54, align 8, !dbg !4670, !tbaa !2620
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !4672, !tbaa !2620
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !4674
  %53 = load i64, i64* %ob_refcnt55, align 8, !dbg !4675, !tbaa !2631
  %dec56 = add i64 %53, -1, !dbg !4675
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !4675, !tbaa !2631
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !4676
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !4677

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !4678

if.else.59:                                       ; preds = %do.body.53
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !4680, !tbaa !2620
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !4682
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !4682, !tbaa !2703
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !4683
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !4683, !tbaa !2705
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !4684, !tbaa !2620
  call void %56(%struct._object* %57), !dbg !4685
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %58 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !4686
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !4686
  br label %do.cond.63, !dbg !4688

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !4689

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !4691

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %59 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !4693
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !4693
  br label %do.end.67, !dbg !4694

do.end.67:                                        ; preds = %if.end.65
  br label %do.body.68, !dbg !4695

do.body.68:                                       ; preds = %do.end.67
  %60 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !4696
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !4696
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp69, metadata !895, metadata !2613), !dbg !4698
  %61 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4699, !tbaa !2620
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %61, i32 0, i32 8, !dbg !4700
  %62 = load %struct._object*, %struct._object** %events, align 8, !dbg !4700, !tbaa !4701
  store %struct._object* %62, %struct._object** %_py_tmp69, align 8, !dbg !4698, !tbaa !2620
  %63 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !4702, !tbaa !2620
  %cmp70 = icmp ne %struct._object* %63, null, !dbg !4703
  br i1 %cmp70, label %if.then.71, label %if.end.85, !dbg !4704

if.then.71:                                       ; preds = %do.body.68
  %64 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4705, !tbaa !2620
  %events72 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %64, i32 0, i32 8, !dbg !4707
  store %struct._object* null, %struct._object** %events72, align 8, !dbg !4708, !tbaa !4701
  br label %do.body.73, !dbg !4709

do.body.73:                                       ; preds = %if.then.71
  %65 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !4710
  call void @llvm.lifetime.start(i64 8, i8* %65) #1, !dbg !4710
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !897, metadata !2613), !dbg !4712
  %66 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !4713, !tbaa !2620
  store %struct._object* %66, %struct._object** %_py_decref_tmp74, align 8, !dbg !4712, !tbaa !2620
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !4714, !tbaa !2620
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0, !dbg !4716
  %68 = load i64, i64* %ob_refcnt75, align 8, !dbg !4717, !tbaa !2631
  %dec76 = add i64 %68, -1, !dbg !4717
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !4717, !tbaa !2631
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !4718
  br i1 %cmp77, label %if.then.78, label %if.else.79, !dbg !4719

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82, !dbg !4720

if.else.79:                                       ; preds = %do.body.73
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !4722, !tbaa !2620
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !4724
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !4724, !tbaa !2703
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4, !dbg !4725
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !4725, !tbaa !2705
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !4726, !tbaa !2620
  call void %71(%struct._object* %72), !dbg !4727
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  %73 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !4728
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !4728
  br label %do.cond.83, !dbg !4730

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !4731

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !4733

if.end.85:                                        ; preds = %do.end.84, %do.body.68
  %74 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !4735
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !4735
  br label %do.end.87, !dbg !4736

do.end.87:                                        ; preds = %if.end.85
  br label %do.body.88, !dbg !4737

do.body.88:                                       ; preds = %do.end.87
  %75 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !4738
  call void @llvm.lifetime.start(i64 8, i8* %75) #1, !dbg !4738
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp89, metadata !901, metadata !2613), !dbg !4740
  %76 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4741, !tbaa !2620
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %76, i32 0, i32 5, !dbg !4742
  %77 = load %struct._object*, %struct._object** %stack, align 8, !dbg !4742, !tbaa !4468
  store %struct._object* %77, %struct._object** %_py_tmp89, align 8, !dbg !4740, !tbaa !2620
  %78 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !4743, !tbaa !2620
  %cmp90 = icmp ne %struct._object* %78, null, !dbg !4744
  br i1 %cmp90, label %if.then.91, label %if.end.105, !dbg !4745

if.then.91:                                       ; preds = %do.body.88
  %79 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4746, !tbaa !2620
  %stack92 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %79, i32 0, i32 5, !dbg !4748
  store %struct._object* null, %struct._object** %stack92, align 8, !dbg !4749, !tbaa !4468
  br label %do.body.93, !dbg !4750

do.body.93:                                       ; preds = %if.then.91
  %80 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !4751
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !4751
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !903, metadata !2613), !dbg !4753
  %81 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !4754, !tbaa !2620
  store %struct._object* %81, %struct._object** %_py_decref_tmp94, align 8, !dbg !4753, !tbaa !2620
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !4755, !tbaa !2620
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !4757
  %83 = load i64, i64* %ob_refcnt95, align 8, !dbg !4758, !tbaa !2631
  %dec96 = add i64 %83, -1, !dbg !4758
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !4758, !tbaa !2631
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !4759
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !4760

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !4761

if.else.99:                                       ; preds = %do.body.93
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !4763, !tbaa !2620
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !4765
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !4765, !tbaa !2703
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !4766
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !4766, !tbaa !2705
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !4767, !tbaa !2620
  call void %86(%struct._object* %87), !dbg !4768
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %88 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !4769
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !4769
  br label %do.cond.103, !dbg !4771

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !4772

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105, !dbg !4774

if.end.105:                                       ; preds = %do.end.104, %do.body.88
  %89 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !4776
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !4776
  br label %do.end.107, !dbg !4777

do.end.107:                                       ; preds = %if.end.105
  br label %do.body.108, !dbg !4778

do.body.108:                                      ; preds = %do.end.107
  %90 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !4779
  call void @llvm.lifetime.start(i64 8, i8* %90) #1, !dbg !4779
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp109, metadata !907, metadata !2613), !dbg !4781
  %91 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4782, !tbaa !2620
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %91, i32 0, i32 4, !dbg !4783
  %92 = load %struct._object*, %struct._object** %data, align 8, !dbg !4783, !tbaa !4439
  store %struct._object* %92, %struct._object** %_py_tmp109, align 8, !dbg !4781, !tbaa !2620
  %93 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !4784, !tbaa !2620
  %cmp110 = icmp ne %struct._object* %93, null, !dbg !4785
  br i1 %cmp110, label %if.then.111, label %if.end.125, !dbg !4786

if.then.111:                                      ; preds = %do.body.108
  %94 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4787, !tbaa !2620
  %data112 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %94, i32 0, i32 4, !dbg !4789
  store %struct._object* null, %struct._object** %data112, align 8, !dbg !4790, !tbaa !4439
  br label %do.body.113, !dbg !4791

do.body.113:                                      ; preds = %if.then.111
  %95 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !4792
  call void @llvm.lifetime.start(i64 8, i8* %95) #1, !dbg !4792
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !909, metadata !2613), !dbg !4794
  %96 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !4795, !tbaa !2620
  store %struct._object* %96, %struct._object** %_py_decref_tmp114, align 8, !dbg !4794, !tbaa !2620
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !4796, !tbaa !2620
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !4798
  %98 = load i64, i64* %ob_refcnt115, align 8, !dbg !4799, !tbaa !2631
  %dec116 = add i64 %98, -1, !dbg !4799
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !4799, !tbaa !2631
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !4800
  br i1 %cmp117, label %if.then.118, label %if.else.119, !dbg !4801

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122, !dbg !4802

if.else.119:                                      ; preds = %do.body.113
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !4804, !tbaa !2620
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !4806
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !4806, !tbaa !2703
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !4807
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !4807, !tbaa !2705
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !4808, !tbaa !2620
  call void %101(%struct._object* %102), !dbg !4809
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %103 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !4810
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !4810
  br label %do.cond.123, !dbg !4812

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !4813

do.end.124:                                       ; preds = %do.cond.123
  br label %if.end.125, !dbg !4815

if.end.125:                                       ; preds = %do.end.124, %do.body.108
  %104 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !4817
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !4817
  br label %do.end.127, !dbg !4818

do.end.127:                                       ; preds = %if.end.125
  br label %do.body.128, !dbg !4819

do.body.128:                                      ; preds = %do.end.127
  %105 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !4820
  call void @llvm.lifetime.start(i64 8, i8* %105) #1, !dbg !4820
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp129, metadata !913, metadata !2613), !dbg !4822
  %106 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4823, !tbaa !2620
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %106, i32 0, i32 3, !dbg !4824
  %107 = load %struct._object*, %struct._object** %last, align 8, !dbg !4824, !tbaa !4410
  store %struct._object* %107, %struct._object** %_py_tmp129, align 8, !dbg !4822, !tbaa !2620
  %108 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !4825, !tbaa !2620
  %cmp130 = icmp ne %struct._object* %108, null, !dbg !4826
  br i1 %cmp130, label %if.then.131, label %if.end.145, !dbg !4827

if.then.131:                                      ; preds = %do.body.128
  %109 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4828, !tbaa !2620
  %last132 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %109, i32 0, i32 3, !dbg !4830
  store %struct._object* null, %struct._object** %last132, align 8, !dbg !4831, !tbaa !4410
  br label %do.body.133, !dbg !4832

do.body.133:                                      ; preds = %if.then.131
  %110 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !4833
  call void @llvm.lifetime.start(i64 8, i8* %110) #1, !dbg !4833
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp134, metadata !915, metadata !2613), !dbg !4835
  %111 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !4836, !tbaa !2620
  store %struct._object* %111, %struct._object** %_py_decref_tmp134, align 8, !dbg !4835, !tbaa !2620
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !4837, !tbaa !2620
  %ob_refcnt135 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !4839
  %113 = load i64, i64* %ob_refcnt135, align 8, !dbg !4840, !tbaa !2631
  %dec136 = add i64 %113, -1, !dbg !4840
  store i64 %dec136, i64* %ob_refcnt135, align 8, !dbg !4840, !tbaa !2631
  %cmp137 = icmp ne i64 %dec136, 0, !dbg !4841
  br i1 %cmp137, label %if.then.138, label %if.else.139, !dbg !4842

if.then.138:                                      ; preds = %do.body.133
  br label %if.end.142, !dbg !4843

if.else.139:                                      ; preds = %do.body.133
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !4845, !tbaa !2620
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !4847
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !4847, !tbaa !2703
  %tp_dealloc141 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 4, !dbg !4848
  %116 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc141, align 8, !dbg !4848, !tbaa !2705
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !4849, !tbaa !2620
  call void %116(%struct._object* %117), !dbg !4850
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.139, %if.then.138
  %118 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !4851
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !4851
  br label %do.cond.143, !dbg !4853

do.cond.143:                                      ; preds = %if.end.142
  br label %do.end.144, !dbg !4854

do.end.144:                                       ; preds = %do.cond.143
  br label %if.end.145, !dbg !4856

if.end.145:                                       ; preds = %do.end.144, %do.body.128
  %119 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !4858
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !4858
  br label %do.end.147, !dbg !4859

do.end.147:                                       ; preds = %if.end.145
  br label %do.body.148, !dbg !4860

do.body.148:                                      ; preds = %do.end.147
  %120 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !4861
  call void @llvm.lifetime.start(i64 8, i8* %120) #1, !dbg !4861
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp149, metadata !919, metadata !2613), !dbg !4863
  %121 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4864, !tbaa !2620
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %121, i32 0, i32 2, !dbg !4865
  %122 = load %struct._object*, %struct._object** %this, align 8, !dbg !4865, !tbaa !4381
  store %struct._object* %122, %struct._object** %_py_tmp149, align 8, !dbg !4863, !tbaa !2620
  %123 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !4866, !tbaa !2620
  %cmp150 = icmp ne %struct._object* %123, null, !dbg !4867
  br i1 %cmp150, label %if.then.151, label %if.end.165, !dbg !4868

if.then.151:                                      ; preds = %do.body.148
  %124 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4869, !tbaa !2620
  %this152 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %124, i32 0, i32 2, !dbg !4871
  store %struct._object* null, %struct._object** %this152, align 8, !dbg !4872, !tbaa !4381
  br label %do.body.153, !dbg !4873

do.body.153:                                      ; preds = %if.then.151
  %125 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !4874
  call void @llvm.lifetime.start(i64 8, i8* %125) #1, !dbg !4874
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp154, metadata !921, metadata !2613), !dbg !4876
  %126 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !4877, !tbaa !2620
  store %struct._object* %126, %struct._object** %_py_decref_tmp154, align 8, !dbg !4876, !tbaa !2620
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !4878, !tbaa !2620
  %ob_refcnt155 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 0, !dbg !4880
  %128 = load i64, i64* %ob_refcnt155, align 8, !dbg !4881, !tbaa !2631
  %dec156 = add i64 %128, -1, !dbg !4881
  store i64 %dec156, i64* %ob_refcnt155, align 8, !dbg !4881, !tbaa !2631
  %cmp157 = icmp ne i64 %dec156, 0, !dbg !4882
  br i1 %cmp157, label %if.then.158, label %if.else.159, !dbg !4883

if.then.158:                                      ; preds = %do.body.153
  br label %if.end.162, !dbg !4884

if.else.159:                                      ; preds = %do.body.153
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !4886, !tbaa !2620
  %ob_type160 = getelementptr inbounds %struct._object, %struct._object* %129, i32 0, i32 1, !dbg !4888
  %130 = load %struct._typeobject*, %struct._typeobject** %ob_type160, align 8, !dbg !4888, !tbaa !2703
  %tp_dealloc161 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %130, i32 0, i32 4, !dbg !4889
  %131 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc161, align 8, !dbg !4889, !tbaa !2705
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !4890, !tbaa !2620
  call void %131(%struct._object* %132), !dbg !4891
  br label %if.end.162

if.end.162:                                       ; preds = %if.else.159, %if.then.158
  %133 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !4892
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !4892
  br label %do.cond.163, !dbg !4894

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !4895

do.end.164:                                       ; preds = %do.cond.163
  br label %if.end.165, !dbg !4897

if.end.165:                                       ; preds = %do.end.164, %do.body.148
  %134 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !4899
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !4899
  br label %do.end.167, !dbg !4900

do.end.167:                                       ; preds = %if.end.165
  br label %do.body.168, !dbg !4901

do.body.168:                                      ; preds = %do.end.167
  %135 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !4902
  call void @llvm.lifetime.start(i64 8, i8* %135) #1, !dbg !4902
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp169, metadata !925, metadata !2613), !dbg !4904
  %136 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4905, !tbaa !2620
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %136, i32 0, i32 7, !dbg !4906
  %137 = load %struct._object*, %struct._object** %element_factory, align 8, !dbg !4906, !tbaa !4497
  store %struct._object* %137, %struct._object** %_py_tmp169, align 8, !dbg !4904, !tbaa !2620
  %138 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !4907, !tbaa !2620
  %cmp170 = icmp ne %struct._object* %138, null, !dbg !4908
  br i1 %cmp170, label %if.then.171, label %if.end.185, !dbg !4909

if.then.171:                                      ; preds = %do.body.168
  %139 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4910, !tbaa !2620
  %element_factory172 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %139, i32 0, i32 7, !dbg !4912
  store %struct._object* null, %struct._object** %element_factory172, align 8, !dbg !4913, !tbaa !4497
  br label %do.body.173, !dbg !4914

do.body.173:                                      ; preds = %if.then.171
  %140 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !4915
  call void @llvm.lifetime.start(i64 8, i8* %140) #1, !dbg !4915
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp174, metadata !927, metadata !2613), !dbg !4917
  %141 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !4918, !tbaa !2620
  store %struct._object* %141, %struct._object** %_py_decref_tmp174, align 8, !dbg !4917, !tbaa !2620
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !4919, !tbaa !2620
  %ob_refcnt175 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 0, !dbg !4921
  %143 = load i64, i64* %ob_refcnt175, align 8, !dbg !4922, !tbaa !2631
  %dec176 = add i64 %143, -1, !dbg !4922
  store i64 %dec176, i64* %ob_refcnt175, align 8, !dbg !4922, !tbaa !2631
  %cmp177 = icmp ne i64 %dec176, 0, !dbg !4923
  br i1 %cmp177, label %if.then.178, label %if.else.179, !dbg !4924

if.then.178:                                      ; preds = %do.body.173
  br label %if.end.182, !dbg !4925

if.else.179:                                      ; preds = %do.body.173
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !4927, !tbaa !2620
  %ob_type180 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 1, !dbg !4929
  %145 = load %struct._typeobject*, %struct._typeobject** %ob_type180, align 8, !dbg !4929, !tbaa !2703
  %tp_dealloc181 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %145, i32 0, i32 4, !dbg !4930
  %146 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc181, align 8, !dbg !4930, !tbaa !2705
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !4931, !tbaa !2620
  call void %146(%struct._object* %147), !dbg !4932
  br label %if.end.182

if.end.182:                                       ; preds = %if.else.179, %if.then.178
  %148 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !4933
  call void @llvm.lifetime.end(i64 8, i8* %148) #1, !dbg !4933
  br label %do.cond.183, !dbg !4935

do.cond.183:                                      ; preds = %if.end.182
  br label %do.end.184, !dbg !4936

do.end.184:                                       ; preds = %do.cond.183
  br label %if.end.185, !dbg !4938

if.end.185:                                       ; preds = %do.end.184, %do.body.168
  %149 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !4940
  call void @llvm.lifetime.end(i64 8, i8* %149) #1, !dbg !4940
  br label %do.end.187, !dbg !4941

do.end.187:                                       ; preds = %if.end.185
  br label %do.body.188, !dbg !4942

do.body.188:                                      ; preds = %do.end.187
  %150 = bitcast %struct._object** %_py_tmp189 to i8*, !dbg !4943
  call void @llvm.lifetime.start(i64 8, i8* %150) #1, !dbg !4943
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp189, metadata !931, metadata !2613), !dbg !4945
  %151 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4946, !tbaa !2620
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %151, i32 0, i32 1, !dbg !4947
  %152 = load %struct._object*, %struct._object** %root, align 8, !dbg !4947, !tbaa !4351
  store %struct._object* %152, %struct._object** %_py_tmp189, align 8, !dbg !4945, !tbaa !2620
  %153 = load %struct._object*, %struct._object** %_py_tmp189, align 8, !dbg !4948, !tbaa !2620
  %cmp190 = icmp ne %struct._object* %153, null, !dbg !4949
  br i1 %cmp190, label %if.then.191, label %if.end.205, !dbg !4950

if.then.191:                                      ; preds = %do.body.188
  %154 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !4951, !tbaa !2620
  %root192 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %154, i32 0, i32 1, !dbg !4953
  store %struct._object* null, %struct._object** %root192, align 8, !dbg !4954, !tbaa !4351
  br label %do.body.193, !dbg !4955

do.body.193:                                      ; preds = %if.then.191
  %155 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !4956
  call void @llvm.lifetime.start(i64 8, i8* %155) #1, !dbg !4956
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp194, metadata !933, metadata !2613), !dbg !4958
  %156 = load %struct._object*, %struct._object** %_py_tmp189, align 8, !dbg !4959, !tbaa !2620
  store %struct._object* %156, %struct._object** %_py_decref_tmp194, align 8, !dbg !4958, !tbaa !2620
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !4960, !tbaa !2620
  %ob_refcnt195 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 0, !dbg !4962
  %158 = load i64, i64* %ob_refcnt195, align 8, !dbg !4963, !tbaa !2631
  %dec196 = add i64 %158, -1, !dbg !4963
  store i64 %dec196, i64* %ob_refcnt195, align 8, !dbg !4963, !tbaa !2631
  %cmp197 = icmp ne i64 %dec196, 0, !dbg !4964
  br i1 %cmp197, label %if.then.198, label %if.else.199, !dbg !4965

if.then.198:                                      ; preds = %do.body.193
  br label %if.end.202, !dbg !4966

if.else.199:                                      ; preds = %do.body.193
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !4968, !tbaa !2620
  %ob_type200 = getelementptr inbounds %struct._object, %struct._object* %159, i32 0, i32 1, !dbg !4970
  %160 = load %struct._typeobject*, %struct._typeobject** %ob_type200, align 8, !dbg !4970, !tbaa !2703
  %tp_dealloc201 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %160, i32 0, i32 4, !dbg !4971
  %161 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc201, align 8, !dbg !4971, !tbaa !2705
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !4972, !tbaa !2620
  call void %161(%struct._object* %162), !dbg !4973
  br label %if.end.202

if.end.202:                                       ; preds = %if.else.199, %if.then.198
  %163 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !4974
  call void @llvm.lifetime.end(i64 8, i8* %163) #1, !dbg !4974
  br label %do.cond.203, !dbg !4976

do.cond.203:                                      ; preds = %if.end.202
  br label %do.end.204, !dbg !4977

do.end.204:                                       ; preds = %do.cond.203
  br label %if.end.205, !dbg !4979

if.end.205:                                       ; preds = %do.end.204, %do.body.188
  %164 = bitcast %struct._object** %_py_tmp189 to i8*, !dbg !4981
  call void @llvm.lifetime.end(i64 8, i8* %164) #1, !dbg !4981
  br label %do.end.207, !dbg !4982

do.end.207:                                       ; preds = %if.end.205
  ret i32 0, !dbg !4983
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %element_factory = alloca %struct._object*, align 8
  %self_tb = alloca %struct.TreeBuilderObject*, align 8
  %tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1063, metadata !2613), !dbg !4984
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1064, metadata !2613), !dbg !4985
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1065, metadata !2613), !dbg !4986
  %0 = bitcast %struct._object** %element_factory to i8*, !dbg !4987
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4987
  call void @llvm.dbg.declare(metadata %struct._object** %element_factory, metadata !1066, metadata !2613), !dbg !4988
  store %struct._object* null, %struct._object** %element_factory, align 8, !dbg !4988, !tbaa !2620
  %1 = bitcast %struct.TreeBuilderObject** %self_tb to i8*, !dbg !4989
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4989
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self_tb, metadata !1067, metadata !2613), !dbg !4990
  %2 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !4991, !tbaa !2620
  %3 = bitcast %struct._object* %2 to %struct.TreeBuilderObject*, !dbg !4992
  store %struct.TreeBuilderObject* %3, %struct.TreeBuilderObject** %self_tb, align 8, !dbg !4990, !tbaa !2620
  %4 = bitcast %struct._object** %tmp to i8*, !dbg !4993
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4993
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1068, metadata !2613), !dbg !4994
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4995, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4997, !tbaa !2620
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %5, %struct._object* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @treebuilder_init.kwlist, i32 0, i32 0), %struct._object** %element_factory), !dbg !4998
  %tobool = icmp ne i32 %call, 0, !dbg !4998
  br i1 %tobool, label %if.end, label %if.then, !dbg !4999

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !5000
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5000

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %element_factory, align 8, !dbg !5002, !tbaa !2620
  %tobool1 = icmp ne %struct._object* %7, null, !dbg !5002
  br i1 %tobool1, label %if.then.2, label %if.end.16, !dbg !5003

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %element_factory, align 8, !dbg !5004, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !5005
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !5006, !tbaa !2631
  %inc = add i64 %9, 1, !dbg !5006
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5006, !tbaa !2631
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self_tb, align 8, !dbg !5007, !tbaa !2620
  %element_factory3 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 7, !dbg !5008
  %11 = load %struct._object*, %struct._object** %element_factory3, align 8, !dbg !5008, !tbaa !4497
  store %struct._object* %11, %struct._object** %tmp, align 8, !dbg !5009, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %element_factory, align 8, !dbg !5010, !tbaa !2620
  %13 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self_tb, align 8, !dbg !5011, !tbaa !2620
  %element_factory4 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %13, i32 0, i32 7, !dbg !5012
  store %struct._object* %12, %struct._object** %element_factory4, align 8, !dbg !5013, !tbaa !4497
  br label %do.body, !dbg !5014

do.body:                                          ; preds = %if.then.2
  %14 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5015
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !5015
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1069, metadata !2613), !dbg !5017
  %15 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !5018, !tbaa !2620
  store %struct._object* %15, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5017, !tbaa !2620
  %16 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5019, !tbaa !2620
  %cmp = icmp ne %struct._object* %16, null, !dbg !5020
  br i1 %cmp, label %if.then.6, label %if.end.13, !dbg !5021

if.then.6:                                        ; preds = %do.body
  br label %do.body.7, !dbg !5022

do.body.7:                                        ; preds = %if.then.6
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5024
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !5024
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1073, metadata !2613), !dbg !5026
  %18 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5027, !tbaa !2620
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !5026, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5028, !tbaa !2620
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !5030
  %20 = load i64, i64* %ob_refcnt9, align 8, !dbg !5031, !tbaa !2631
  %dec = add i64 %20, -1, !dbg !5031
  store i64 %dec, i64* %ob_refcnt9, align 8, !dbg !5031, !tbaa !2631
  %cmp10 = icmp ne i64 %dec, 0, !dbg !5032
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !5033

if.then.11:                                       ; preds = %do.body.7
  br label %if.end.12, !dbg !5034

if.else:                                          ; preds = %do.body.7
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5036, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !5038
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5038, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !5039
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5039, !tbaa !2705
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5040, !tbaa !2620
  call void %23(%struct._object* %24), !dbg !5041
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5042
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !5042
  br label %do.cond, !dbg !5044

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !5045

do.end:                                           ; preds = %do.cond
  br label %if.end.13, !dbg !5047

if.end.13:                                        ; preds = %do.end, %do.body
  %26 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5049
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !5049
  br label %do.cond.14, !dbg !5052

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !5053

do.end.15:                                        ; preds = %do.cond.14
  br label %if.end.16, !dbg !5055

if.end.16:                                        ; preds = %do.end.15, %if.end
  store i32 0, i32* %retval, !dbg !5056
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5056

cleanup:                                          ; preds = %if.end.16, %if.then
  %27 = bitcast %struct._object** %tmp to i8*, !dbg !5057
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !5057
  %28 = bitcast %struct.TreeBuilderObject** %self_tb to i8*, !dbg !5057
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5057
  %29 = bitcast %struct._object** %element_factory to i8*, !dbg !5057
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !5057
  %30 = load i32, i32* %retval, !dbg !5057
  ret i32 %30, !dbg !5057
}

declare %struct._object* @PyType_GenericAlloc(%struct._typeobject*, i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %t = alloca %struct.TreeBuilderObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1082, metadata !2613), !dbg !5058
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1083, metadata !2613), !dbg !5059
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1084, metadata !2613), !dbg !5060
  %0 = bitcast %struct.TreeBuilderObject** %t to i8*, !dbg !5061
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5061
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %t, metadata !1085, metadata !2613), !dbg !5062
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5063, !tbaa !2620
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 36, !dbg !5064
  %2 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5064, !tbaa !5065
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !5066, !tbaa !2620
  %call = call %struct._object* %2(%struct._typeobject* %3, i64 0), !dbg !5063
  %4 = bitcast %struct._object* %call to %struct.TreeBuilderObject*, !dbg !5067
  store %struct.TreeBuilderObject* %4, %struct.TreeBuilderObject** %t, align 8, !dbg !5062, !tbaa !2620
  %5 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5068, !tbaa !2620
  %cmp = icmp ne %struct.TreeBuilderObject* %5, null, !dbg !5069
  br i1 %cmp, label %if.then, label %if.end.34, !dbg !5070

if.then:                                          ; preds = %entry
  %6 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5071, !tbaa !2620
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %6, i32 0, i32 1, !dbg !5072
  store %struct._object* null, %struct._object** %root, align 8, !dbg !5073, !tbaa !4351
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5074, !tbaa !2631
  %inc = add i64 %7, 1, !dbg !5074
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5074, !tbaa !2631
  %8 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5075, !tbaa !2620
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %8, i32 0, i32 2, !dbg !5076
  store %struct._object* @_Py_NoneStruct, %struct._object** %this, align 8, !dbg !5077, !tbaa !4381
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5078, !tbaa !2631
  %inc1 = add i64 %9, 1, !dbg !5078
  store i64 %inc1, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5078, !tbaa !2631
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5079, !tbaa !2620
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 3, !dbg !5080
  store %struct._object* @_Py_NoneStruct, %struct._object** %last, align 8, !dbg !5081, !tbaa !4410
  %11 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5082, !tbaa !2620
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %11, i32 0, i32 4, !dbg !5083
  store %struct._object* null, %struct._object** %data, align 8, !dbg !5084, !tbaa !4439
  %12 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5085, !tbaa !2620
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %12, i32 0, i32 7, !dbg !5086
  store %struct._object* null, %struct._object** %element_factory, align 8, !dbg !5087, !tbaa !4497
  %call2 = call %struct._object* @PyList_New(i64 20), !dbg !5088
  %13 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5089, !tbaa !2620
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %13, i32 0, i32 5, !dbg !5090
  store %struct._object* %call2, %struct._object** %stack, align 8, !dbg !5091, !tbaa !4468
  %14 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5092, !tbaa !2620
  %stack3 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %14, i32 0, i32 5, !dbg !5093
  %15 = load %struct._object*, %struct._object** %stack3, align 8, !dbg !5093, !tbaa !4468
  %tobool = icmp ne %struct._object* %15, null, !dbg !5092
  br i1 %tobool, label %if.end.33, label %if.then.4, !dbg !5094

if.then.4:                                        ; preds = %if.then
  br label %do.body, !dbg !5095

do.body:                                          ; preds = %if.then.4
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5096
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !5096
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1086, metadata !2613), !dbg !5098
  %17 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5099, !tbaa !2620
  %this5 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %17, i32 0, i32 2, !dbg !5100
  %18 = load %struct._object*, %struct._object** %this5, align 8, !dbg !5100, !tbaa !4381
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !5098, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5101, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !5103
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !5104, !tbaa !2631
  %dec = add i64 %20, -1, !dbg !5104
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5104, !tbaa !2631
  %cmp6 = icmp ne i64 %dec, 0, !dbg !5105
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !5106

if.then.7:                                        ; preds = %do.body
  br label %if.end, !dbg !5107

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5109, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !5111
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5111, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !5112
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5112, !tbaa !2705
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5113, !tbaa !2620
  call void %23(%struct._object* %24), !dbg !5114
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.7
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5115
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !5115
  br label %do.cond, !dbg !5117

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5118

do.end:                                           ; preds = %do.cond
  br label %do.body.8, !dbg !5120

do.body.8:                                        ; preds = %do.end
  %26 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !5121
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !5121
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp9, metadata !1092, metadata !2613), !dbg !5123
  %27 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5124, !tbaa !2620
  %last10 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %27, i32 0, i32 3, !dbg !5125
  %28 = load %struct._object*, %struct._object** %last10, align 8, !dbg !5125, !tbaa !4410
  store %struct._object* %28, %struct._object** %_py_decref_tmp9, align 8, !dbg !5123, !tbaa !2620
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !5126, !tbaa !2620
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !5128
  %30 = load i64, i64* %ob_refcnt11, align 8, !dbg !5129, !tbaa !2631
  %dec12 = add i64 %30, -1, !dbg !5129
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !5129, !tbaa !2631
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !5130
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !5131

if.then.14:                                       ; preds = %do.body.8
  br label %if.end.18, !dbg !5132

if.else.15:                                       ; preds = %do.body.8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !5134, !tbaa !2620
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !5136
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !5136, !tbaa !2703
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !5137
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !5137, !tbaa !2705
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !5138, !tbaa !2620
  call void %33(%struct._object* %34), !dbg !5139
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %35 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !5140
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !5140
  br label %do.cond.19, !dbg !5141

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !5142

do.end.20:                                        ; preds = %do.cond.19
  br label %do.body.21, !dbg !5144

do.body.21:                                       ; preds = %do.end.20
  %36 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !5145
  call void @llvm.lifetime.start(i64 8, i8* %36) #1, !dbg !5145
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !1094, metadata !2613), !dbg !5147
  %37 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5148, !tbaa !2620
  %38 = bitcast %struct.TreeBuilderObject* %37 to %struct._object*, !dbg !5149
  store %struct._object* %38, %struct._object** %_py_decref_tmp22, align 8, !dbg !5147, !tbaa !2620
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !5150, !tbaa !2620
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !5152
  %40 = load i64, i64* %ob_refcnt23, align 8, !dbg !5153, !tbaa !2631
  %dec24 = add i64 %40, -1, !dbg !5153
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !5153, !tbaa !2631
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !5154
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !5155

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !5156

if.else.27:                                       ; preds = %do.body.21
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !5158, !tbaa !2620
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !5160
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !5160, !tbaa !2703
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !5161
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !5161, !tbaa !2705
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !5162, !tbaa !2620
  call void %43(%struct._object* %44), !dbg !5163
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %45 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !5164
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !5164
  br label %do.cond.31, !dbg !5165

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !5166

do.end.32:                                        ; preds = %do.cond.31
  store %struct._object* null, %struct._object** %retval, !dbg !5168
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5168

if.end.33:                                        ; preds = %if.then
  %46 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5169, !tbaa !2620
  %index = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %46, i32 0, i32 6, !dbg !5170
  store i64 0, i64* %index, align 8, !dbg !5171, !tbaa !5172
  %47 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5173, !tbaa !2620
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %47, i32 0, i32 8, !dbg !5174
  store %struct._object* null, %struct._object** %events, align 8, !dbg !5175, !tbaa !4701
  %48 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5176, !tbaa !2620
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %48, i32 0, i32 10, !dbg !5177
  store %struct._object* null, %struct._object** %end_event_obj, align 8, !dbg !5178, !tbaa !4617
  %49 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5179, !tbaa !2620
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %49, i32 0, i32 9, !dbg !5180
  store %struct._object* null, %struct._object** %start_event_obj, align 8, !dbg !5181, !tbaa !4659
  %50 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5182, !tbaa !2620
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %50, i32 0, i32 12, !dbg !5183
  store %struct._object* null, %struct._object** %end_ns_event_obj, align 8, !dbg !5184, !tbaa !4531
  %51 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5185, !tbaa !2620
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %51, i32 0, i32 11, !dbg !5186
  store %struct._object* null, %struct._object** %start_ns_event_obj, align 8, !dbg !5187, !tbaa !4575
  br label %if.end.34, !dbg !5188

if.end.34:                                        ; preds = %if.end.33, %entry
  %52 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %t, align 8, !dbg !5189, !tbaa !2620
  %53 = bitcast %struct.TreeBuilderObject* %52 to %struct._object*, !dbg !5190
  store %struct._object* %53, %struct._object** %retval, !dbg !5191
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5191

cleanup:                                          ; preds = %if.end.34, %do.end.32
  %54 = bitcast %struct.TreeBuilderObject** %t to i8*, !dbg !5192
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !5192
  %55 = load %struct._object*, %struct._object** %retval, !dbg !5192
  ret %struct._object* %55, !dbg !5192
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_data(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %data = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !941, metadata !2613), !dbg !5193
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !942, metadata !2613), !dbg !5194
  %0 = bitcast %struct._object** %data to i8*, !dbg !5195
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5195
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !943, metadata !2613), !dbg !5196
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5197, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), %struct._object** %data), !dbg !5199
  %tobool = icmp ne i32 %call, 0, !dbg !5199
  br i1 %tobool, label %if.end, label %if.then, !dbg !5200

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5201
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5201

if.end:                                           ; preds = %entry
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5202, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %data, align 8, !dbg !5203, !tbaa !2620
  %call1 = call %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %2, %struct._object* %3), !dbg !5204
  store %struct._object* %call1, %struct._object** %retval, !dbg !5205
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5205

cleanup:                                          ; preds = %if.end, %if.then
  %4 = bitcast %struct._object** %data to i8*, !dbg !5206
  call void @llvm.lifetime.end(i64 8, i8* %4) #1, !dbg !5206
  %5 = load %struct._object*, %struct._object** %retval, !dbg !5206
  ret %struct._object* %5, !dbg !5206
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_start(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !958, metadata !2613), !dbg !5207
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !959, metadata !2613), !dbg !5208
  %0 = bitcast %struct._object** %tag to i8*, !dbg !5209
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5209
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !960, metadata !2613), !dbg !5210
  %1 = bitcast %struct._object** %attrib to i8*, !dbg !5211
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5211
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !961, metadata !2613), !dbg !5212
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib, align 8, !dbg !5212, !tbaa !2620
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5213, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), %struct._object** %tag, %struct._object** %attrib), !dbg !5215
  %tobool = icmp ne i32 %call, 0, !dbg !5215
  br i1 %tobool, label %if.end, label %if.then, !dbg !5216

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5217
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5217

if.end:                                           ; preds = %entry
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5218, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %tag, align 8, !dbg !5219, !tbaa !2620
  %5 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !5220, !tbaa !2620
  %call1 = call %struct._object* @treebuilder_handle_start(%struct.TreeBuilderObject* %3, %struct._object* %4, %struct._object* %5), !dbg !5221
  store %struct._object* %call1, %struct._object** %retval, !dbg !5222
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5222

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast %struct._object** %attrib to i8*, !dbg !5223
  call void @llvm.lifetime.end(i64 8, i8* %6) #1, !dbg !5223
  %7 = bitcast %struct._object** %tag to i8*, !dbg !5223
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !5223
  %8 = load %struct._object*, %struct._object** %retval, !dbg !5223
  ret %struct._object* %8, !dbg !5223
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_end(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !1032, metadata !2613), !dbg !5224
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1033, metadata !2613), !dbg !5225
  %0 = bitcast %struct._object** %tag to i8*, !dbg !5226
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5226
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1034, metadata !2613), !dbg !5227
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5228, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %struct._object** %tag), !dbg !5230
  %tobool = icmp ne i32 %call, 0, !dbg !5230
  br i1 %tobool, label %if.end, label %if.then, !dbg !5231

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5232
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5232

if.end:                                           ; preds = %entry
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5233, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %tag, align 8, !dbg !5234, !tbaa !2620
  %call1 = call %struct._object* @treebuilder_handle_end(%struct.TreeBuilderObject* %2, %struct._object* %3), !dbg !5235
  store %struct._object* %call1, %struct._object** %retval, !dbg !5236
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5236

cleanup:                                          ; preds = %if.end, %if.then
  %4 = bitcast %struct._object** %tag to i8*, !dbg !5237
  call void @llvm.lifetime.end(i64 8, i8* %4) #1, !dbg !5237
  %5 = load %struct._object*, %struct._object** %retval, !dbg !5237
  ret %struct._object* %5, !dbg !5237
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_close(%struct.TreeBuilderObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !1053, metadata !2613), !dbg !5238
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1054, metadata !2613), !dbg !5239
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5240, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0)), !dbg !5242
  %tobool = icmp ne i32 %call, 0, !dbg !5242
  br i1 %tobool, label %if.end, label %if.then, !dbg !5243

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5244
  br label %return, !dbg !5244

if.end:                                           ; preds = %entry
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5245, !tbaa !2620
  %call1 = call %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %1), !dbg !5246
  store %struct._object* %call1, %struct._object** %retval, !dbg !5247
  br label %return, !dbg !5247

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval, !dbg !5248
  ret %struct._object* %2, !dbg !5248
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %self, %struct._object* %data) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %data.addr = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %list = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !946, metadata !2613), !dbg !5249
  store %struct._object* %data, %struct._object** %data.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %data.addr, metadata !947, metadata !2613), !dbg !5250
  %0 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5251, !tbaa !2620
  %data1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %0, i32 0, i32 4, !dbg !5252
  %1 = load %struct._object*, %struct._object** %data1, align 8, !dbg !5252, !tbaa !4439
  %tobool = icmp ne %struct._object* %1, null, !dbg !5251
  br i1 %tobool, label %if.else, label %if.then, !dbg !5253

if.then:                                          ; preds = %entry
  %2 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5254, !tbaa !2620
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %2, i32 0, i32 3, !dbg !5257
  %3 = load %struct._object*, %struct._object** %last, align 8, !dbg !5257, !tbaa !4410
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct, !dbg !5258
  br i1 %cmp, label %if.then.2, label %if.end, !dbg !5259

if.then.2:                                        ; preds = %if.then
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5260, !tbaa !2631
  %inc = add i64 %4, 1, !dbg !5260
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5260, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5262
  br label %return, !dbg !5262

if.end:                                           ; preds = %if.then
  %5 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5263, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !5264
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !5265, !tbaa !2631
  %inc3 = add i64 %6, 1, !dbg !5265
  store i64 %inc3, i64* %ob_refcnt, align 8, !dbg !5265, !tbaa !2631
  %7 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5266, !tbaa !2620
  %8 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5267, !tbaa !2620
  %data4 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %8, i32 0, i32 4, !dbg !5268
  store %struct._object* %7, %struct._object** %data4, align 8, !dbg !5269, !tbaa !4439
  br label %if.end.53, !dbg !5270

if.else:                                          ; preds = %entry
  %9 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5271, !tbaa !2620
  %data5 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %9, i32 0, i32 4, !dbg !5272
  %10 = load %struct._object*, %struct._object** %data5, align 8, !dbg !5272, !tbaa !4439
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !5273
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5273, !tbaa !2703
  %cmp6 = icmp eq %struct._typeobject* %11, @PyBytes_Type, !dbg !5274
  br i1 %cmp6, label %land.lhs.true, label %if.else.26, !dbg !5275

land.lhs.true:                                    ; preds = %if.else
  %12 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5276, !tbaa !2620
  %data7 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %12, i32 0, i32 4, !dbg !5278
  %13 = load %struct._object*, %struct._object** %data7, align 8, !dbg !5278, !tbaa !4439
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !5279
  %14 = load i64, i64* %ob_refcnt8, align 8, !dbg !5279, !tbaa !2631
  %cmp9 = icmp eq i64 %14, 1, !dbg !5280
  br i1 %cmp9, label %land.lhs.true.10, label %if.else.26, !dbg !5281

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %15 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5282, !tbaa !2620
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !5283
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !5283, !tbaa !2703
  %cmp12 = icmp eq %struct._typeobject* %16, @PyBytes_Type, !dbg !5284
  br i1 %cmp12, label %land.lhs.true.13, label %if.else.26, !dbg !5285

land.lhs.true.13:                                 ; preds = %land.lhs.true.10
  %17 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5286, !tbaa !2620
  %18 = bitcast %struct._object* %17 to %struct.PyVarObject*, !dbg !5287
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %18, i32 0, i32 1, !dbg !5288
  %19 = load i64, i64* %ob_size, align 8, !dbg !5288, !tbaa !5289
  %cmp14 = icmp eq i64 %19, 1, !dbg !5290
  br i1 %cmp14, label %if.then.15, label %if.else.26, !dbg !5291

if.then.15:                                       ; preds = %land.lhs.true.13
  %20 = bitcast i64* %size to i8*, !dbg !5292
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !5292
  call void @llvm.dbg.declare(metadata i64* %size, metadata !948, metadata !2613), !dbg !5293
  %21 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5294, !tbaa !2620
  %data16 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %21, i32 0, i32 4, !dbg !5295
  %22 = load %struct._object*, %struct._object** %data16, align 8, !dbg !5295, !tbaa !4439
  %23 = bitcast %struct._object* %22 to %struct.PyVarObject*, !dbg !5296
  %ob_size17 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %23, i32 0, i32 1, !dbg !5297
  %24 = load i64, i64* %ob_size17, align 8, !dbg !5297, !tbaa !5289
  store i64 %24, i64* %size, align 8, !dbg !5293, !tbaa !2742
  %25 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5298, !tbaa !2620
  %data18 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %25, i32 0, i32 4, !dbg !5300
  %26 = load i64, i64* %size, align 8, !dbg !5301, !tbaa !2742
  %add = add i64 %26, 1, !dbg !5302
  %call = call i32 @_PyBytes_Resize(%struct._object** %data18, i64 %add), !dbg !5303
  %cmp19 = icmp slt i32 %call, 0, !dbg !5304
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !5305

if.then.20:                                       ; preds = %if.then.15
  store %struct._object* null, %struct._object** %retval, !dbg !5306
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5306

if.end.21:                                        ; preds = %if.then.15
  %27 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5307, !tbaa !2620
  %28 = bitcast %struct._object* %27 to %struct.PyBytesObject*, !dbg !5308
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %28, i32 0, i32 2, !dbg !5309
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !5310
  %arrayidx = getelementptr i8, i8* %arraydecay, i64 0, !dbg !5311
  %29 = load i8, i8* %arrayidx, align 1, !dbg !5311, !tbaa !2756
  %30 = load i64, i64* %size, align 8, !dbg !5312, !tbaa !2742
  %31 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5313, !tbaa !2620
  %data22 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %31, i32 0, i32 4, !dbg !5314
  %32 = load %struct._object*, %struct._object** %data22, align 8, !dbg !5314, !tbaa !4439
  %33 = bitcast %struct._object* %32 to %struct.PyBytesObject*, !dbg !5315
  %ob_sval23 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %33, i32 0, i32 2, !dbg !5316
  %arraydecay24 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval23, i32 0, i32 0, !dbg !5317
  %arrayidx25 = getelementptr i8, i8* %arraydecay24, i64 %30, !dbg !5318
  store i8 %29, i8* %arrayidx25, align 1, !dbg !5319, !tbaa !2756
  store i32 0, i32* %cleanup.dest.slot, !dbg !5320
  br label %cleanup, !dbg !5320

cleanup:                                          ; preds = %if.end.21, %if.then.20
  %34 = bitcast i64* %size to i8*, !dbg !5321
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !5321
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.52, !dbg !5322

if.else.26:                                       ; preds = %land.lhs.true.13, %land.lhs.true.10, %land.lhs.true, %if.else
  %35 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5323, !tbaa !2620
  %data27 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %35, i32 0, i32 4, !dbg !5324
  %36 = load %struct._object*, %struct._object** %data27, align 8, !dbg !5324, !tbaa !4439
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !5325
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !5325, !tbaa !2703
  %cmp29 = icmp eq %struct._typeobject* %37, @PyList_Type, !dbg !5326
  br i1 %cmp29, label %if.then.30, label %if.else.36, !dbg !5327

if.then.30:                                       ; preds = %if.else.26
  %38 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5328, !tbaa !2620
  %data31 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %38, i32 0, i32 4, !dbg !5331
  %39 = load %struct._object*, %struct._object** %data31, align 8, !dbg !5331, !tbaa !4439
  %40 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5332, !tbaa !2620
  %call32 = call i32 @PyList_Append(%struct._object* %39, %struct._object* %40), !dbg !5333
  %cmp33 = icmp slt i32 %call32, 0, !dbg !5334
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !5335

if.then.34:                                       ; preds = %if.then.30
  store %struct._object* null, %struct._object** %retval, !dbg !5336
  br label %return, !dbg !5336

if.end.35:                                        ; preds = %if.then.30
  br label %if.end.51, !dbg !5337

if.else.36:                                       ; preds = %if.else.26
  %41 = bitcast %struct._object** %list to i8*, !dbg !5338
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !5338
  call void @llvm.dbg.declare(metadata %struct._object** %list, metadata !953, metadata !2613), !dbg !5339
  %call37 = call %struct._object* @PyList_New(i64 2), !dbg !5340
  store %struct._object* %call37, %struct._object** %list, align 8, !dbg !5339, !tbaa !2620
  %42 = load %struct._object*, %struct._object** %list, align 8, !dbg !5341, !tbaa !2620
  %tobool38 = icmp ne %struct._object* %42, null, !dbg !5341
  br i1 %tobool38, label %if.end.40, label %if.then.39, !dbg !5343

if.then.39:                                       ; preds = %if.else.36
  store %struct._object* null, %struct._object** %retval, !dbg !5344
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.48, !dbg !5344

if.end.40:                                        ; preds = %if.else.36
  %43 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5345, !tbaa !2620
  %data41 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %43, i32 0, i32 4, !dbg !5346
  %44 = load %struct._object*, %struct._object** %data41, align 8, !dbg !5346, !tbaa !4439
  %45 = load %struct._object*, %struct._object** %list, align 8, !dbg !5347, !tbaa !2620
  %46 = bitcast %struct._object* %45 to %struct.PyListObject*, !dbg !5348
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %46, i32 0, i32 1, !dbg !5349
  %47 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !5349, !tbaa !5350
  %arrayidx42 = getelementptr %struct._object*, %struct._object** %47, i64 0, !dbg !5352
  store %struct._object* %44, %struct._object** %arrayidx42, align 8, !dbg !5353, !tbaa !2620
  %48 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5354, !tbaa !2620
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !5355
  %49 = load i64, i64* %ob_refcnt43, align 8, !dbg !5356, !tbaa !2631
  %inc44 = add i64 %49, 1, !dbg !5356
  store i64 %inc44, i64* %ob_refcnt43, align 8, !dbg !5356, !tbaa !2631
  %50 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5357, !tbaa !2620
  %51 = load %struct._object*, %struct._object** %list, align 8, !dbg !5358, !tbaa !2620
  %52 = bitcast %struct._object* %51 to %struct.PyListObject*, !dbg !5359
  %ob_item45 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %52, i32 0, i32 1, !dbg !5360
  %53 = load %struct._object**, %struct._object*** %ob_item45, align 8, !dbg !5360, !tbaa !5350
  %arrayidx46 = getelementptr %struct._object*, %struct._object** %53, i64 1, !dbg !5361
  store %struct._object* %50, %struct._object** %arrayidx46, align 8, !dbg !5362, !tbaa !2620
  %54 = load %struct._object*, %struct._object** %list, align 8, !dbg !5363, !tbaa !2620
  %55 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5364, !tbaa !2620
  %data47 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %55, i32 0, i32 4, !dbg !5365
  store %struct._object* %54, %struct._object** %data47, align 8, !dbg !5366, !tbaa !4439
  store i32 0, i32* %cleanup.dest.slot, !dbg !5367
  br label %cleanup.48, !dbg !5367

cleanup.48:                                       ; preds = %if.end.40, %if.then.39
  %56 = bitcast %struct._object** %list to i8*, !dbg !5368
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !5368
  %cleanup.dest.49 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.49, label %unreachable [
    i32 0, label %cleanup.cont.50
    i32 1, label %return
  ]

cleanup.cont.50:                                  ; preds = %cleanup.48
  br label %if.end.51

if.end.51:                                        ; preds = %cleanup.cont.50, %if.end.35
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51, %cleanup.cont
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.end
  %57 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5370, !tbaa !2631
  %inc54 = add i64 %57, 1, !dbg !5370
  store i64 %inc54, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5370, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5371
  br label %return, !dbg !5371

return:                                           ; preds = %if.end.53, %cleanup.48, %if.then.34, %cleanup, %if.then.2
  %58 = load %struct._object*, %struct._object** %retval, !dbg !5372
  ret %struct._object* %58, !dbg !5372

unreachable:                                      ; preds = %cleanup.48, %cleanup
  unreachable
}

declare i32 @_PyBytes_Resize(%struct._object**, i64) #3

declare i32 @PyList_Append(%struct._object*, %struct._object*) #3

declare %struct._object* @PyList_New(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_handle_start(%struct.TreeBuilderObject* %self, %struct._object* %tag, %struct._object* %attrib) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  %node = alloca %struct._object*, align 8
  %this = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %action = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_decref_tmp109 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !966, metadata !2613), !dbg !5373
  store %struct._object* %tag, %struct._object** %tag.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %tag.addr, metadata !967, metadata !2613), !dbg !5374
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %attrib.addr, metadata !968, metadata !2613), !dbg !5375
  %0 = bitcast %struct._object** %node to i8*, !dbg !5376
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5376
  call void @llvm.dbg.declare(metadata %struct._object** %node, metadata !969, metadata !2613), !dbg !5377
  %1 = bitcast %struct._object** %this to i8*, !dbg !5378
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5378
  call void @llvm.dbg.declare(metadata %struct._object** %this, metadata !970, metadata !2613), !dbg !5379
  %2 = bitcast %struct.elementtreestate** %st to i8*, !dbg !5380
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5380
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !971, metadata !2613), !dbg !5381
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !5382
  %call1 = call i8* @PyModule_GetState(%struct._object* %call), !dbg !5383
  %3 = bitcast i8* %call1 to %struct.elementtreestate*, !dbg !5384
  store %struct.elementtreestate* %3, %struct.elementtreestate** %st, align 8, !dbg !5381, !tbaa !2620
  %4 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5385, !tbaa !2620
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %4, i32 0, i32 4, !dbg !5387
  %5 = load %struct._object*, %struct._object** %data, align 8, !dbg !5387, !tbaa !4439
  %tobool = icmp ne %struct._object* %5, null, !dbg !5385
  br i1 %tobool, label %if.then, label %if.end.17, !dbg !5388

if.then:                                          ; preds = %entry
  %6 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5389, !tbaa !2620
  %this2 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %6, i32 0, i32 2, !dbg !5392
  %7 = load %struct._object*, %struct._object** %this2, align 8, !dbg !5392, !tbaa !4381
  %8 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5393, !tbaa !2620
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %8, i32 0, i32 3, !dbg !5394
  %9 = load %struct._object*, %struct._object** %last, align 8, !dbg !5394, !tbaa !4410
  %cmp = icmp eq %struct._object* %7, %9, !dbg !5395
  br i1 %cmp, label %if.then.3, label %if.else, !dbg !5396

if.then.3:                                        ; preds = %if.then
  %10 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5397, !tbaa !2620
  %last4 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %10, i32 0, i32 3, !dbg !5400
  %11 = load %struct._object*, %struct._object** %last4, align 8, !dbg !5400, !tbaa !4410
  %12 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5401, !tbaa !2620
  %data5 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %12, i32 0, i32 4, !dbg !5402
  %13 = load %struct._object*, %struct._object** %data5, align 8, !dbg !5402, !tbaa !4439
  %call6 = call i32 @treebuilder_set_element_text(%struct._object* %11, %struct._object* %13), !dbg !5403
  %tobool7 = icmp ne i32 %call6, 0, !dbg !5403
  br i1 %tobool7, label %if.then.8, label %if.end, !dbg !5404

if.then.8:                                        ; preds = %if.then.3
  store %struct._object* null, %struct._object** %retval, !dbg !5405
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5405

if.end:                                           ; preds = %if.then.3
  br label %if.end.15, !dbg !5406

if.else:                                          ; preds = %if.then
  %14 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5407, !tbaa !2620
  %last9 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %14, i32 0, i32 3, !dbg !5410
  %15 = load %struct._object*, %struct._object** %last9, align 8, !dbg !5410, !tbaa !4410
  %16 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5411, !tbaa !2620
  %data10 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %16, i32 0, i32 4, !dbg !5412
  %17 = load %struct._object*, %struct._object** %data10, align 8, !dbg !5412, !tbaa !4439
  %call11 = call i32 @treebuilder_set_element_tail(%struct._object* %15, %struct._object* %17), !dbg !5413
  %tobool12 = icmp ne i32 %call11, 0, !dbg !5413
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !5414

if.then.13:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !5415
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5415

if.end.14:                                        ; preds = %if.else
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %18 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5416, !tbaa !2620
  %data16 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %18, i32 0, i32 4, !dbg !5417
  store %struct._object* null, %struct._object** %data16, align 8, !dbg !5418, !tbaa !4439
  br label %if.end.17, !dbg !5419

if.end.17:                                        ; preds = %if.end.15, %entry
  %19 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5420, !tbaa !2620
  %element_factory = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %19, i32 0, i32 7, !dbg !5422
  %20 = load %struct._object*, %struct._object** %element_factory, align 8, !dbg !5422, !tbaa !4497
  %tobool18 = icmp ne %struct._object* %20, null, !dbg !5420
  br i1 %tobool18, label %land.lhs.true, label %if.else.24, !dbg !5423

land.lhs.true:                                    ; preds = %if.end.17
  %21 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5424, !tbaa !2620
  %element_factory19 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %21, i32 0, i32 7, !dbg !5426
  %22 = load %struct._object*, %struct._object** %element_factory19, align 8, !dbg !5426, !tbaa !4497
  %cmp20 = icmp ne %struct._object* %22, @_Py_NoneStruct, !dbg !5427
  br i1 %cmp20, label %if.then.21, label %if.else.24, !dbg !5428

if.then.21:                                       ; preds = %land.lhs.true
  %23 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5429, !tbaa !2620
  %element_factory22 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %23, i32 0, i32 7, !dbg !5431
  %24 = load %struct._object*, %struct._object** %element_factory22, align 8, !dbg !5431, !tbaa !4497
  %25 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !5432, !tbaa !2620
  %26 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !5433, !tbaa !2620
  %call23 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %25, %struct._object* %26), !dbg !5434
  store %struct._object* %call23, %struct._object** %node, align 8, !dbg !5435, !tbaa !2620
  br label %if.end.26, !dbg !5436

if.else.24:                                       ; preds = %land.lhs.true, %if.end.17
  %27 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !5437, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !5439, !tbaa !2620
  %call25 = call %struct._object* @create_new_element(%struct._object* %27, %struct._object* %28), !dbg !5440
  store %struct._object* %call25, %struct._object** %node, align 8, !dbg !5441, !tbaa !2620
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.24, %if.then.21
  %29 = load %struct._object*, %struct._object** %node, align 8, !dbg !5442, !tbaa !2620
  %tobool27 = icmp ne %struct._object* %29, null, !dbg !5442
  br i1 %tobool27, label %if.end.29, label %if.then.28, !dbg !5444

if.then.28:                                       ; preds = %if.end.26
  store %struct._object* null, %struct._object** %retval, !dbg !5445
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5445

if.end.29:                                        ; preds = %if.end.26
  %30 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5447, !tbaa !2620
  %this30 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %30, i32 0, i32 2, !dbg !5448
  %31 = load %struct._object*, %struct._object** %this30, align 8, !dbg !5448, !tbaa !4381
  store %struct._object* %31, %struct._object** %this, align 8, !dbg !5449, !tbaa !2620
  %32 = load %struct._object*, %struct._object** %this, align 8, !dbg !5450, !tbaa !2620
  %cmp31 = icmp ne %struct._object* %32, @_Py_NoneStruct, !dbg !5452
  br i1 %cmp31, label %if.then.32, label %if.else.37, !dbg !5453

if.then.32:                                       ; preds = %if.end.29
  %33 = load %struct._object*, %struct._object** %this, align 8, !dbg !5454, !tbaa !2620
  %34 = load %struct._object*, %struct._object** %node, align 8, !dbg !5457, !tbaa !2620
  %call33 = call i32 @treebuilder_add_subelement(%struct._object* %33, %struct._object* %34), !dbg !5458
  %cmp34 = icmp slt i32 %call33, 0, !dbg !5459
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !5460

if.then.35:                                       ; preds = %if.then.32
  br label %error, !dbg !5461

if.end.36:                                        ; preds = %if.then.32
  br label %if.end.42, !dbg !5462

if.else.37:                                       ; preds = %if.end.29
  %35 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5463, !tbaa !2620
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %35, i32 0, i32 1, !dbg !5466
  %36 = load %struct._object*, %struct._object** %root, align 8, !dbg !5466, !tbaa !4351
  %tobool38 = icmp ne %struct._object* %36, null, !dbg !5463
  br i1 %tobool38, label %if.then.39, label %if.end.40, !dbg !5467

if.then.39:                                       ; preds = %if.else.37
  %37 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !5468, !tbaa !2620
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %37, i32 0, i32 0, !dbg !5470
  %38 = load %struct._object*, %struct._object** %parseerror_obj, align 8, !dbg !5470, !tbaa !2861
  call void @PyErr_SetString(%struct._object* %38, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i32 0, i32 0)), !dbg !5471
  br label %error, !dbg !5472

if.end.40:                                        ; preds = %if.else.37
  %39 = load %struct._object*, %struct._object** %node, align 8, !dbg !5473, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !5474
  %40 = load i64, i64* %ob_refcnt, align 8, !dbg !5475, !tbaa !2631
  %inc = add i64 %40, 1, !dbg !5475
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5475, !tbaa !2631
  %41 = load %struct._object*, %struct._object** %node, align 8, !dbg !5476, !tbaa !2620
  %42 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5477, !tbaa !2620
  %root41 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %42, i32 0, i32 1, !dbg !5478
  store %struct._object* %41, %struct._object** %root41, align 8, !dbg !5479, !tbaa !4351
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.40, %if.end.36
  %43 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5480, !tbaa !2620
  %index = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %43, i32 0, i32 6, !dbg !5482
  %44 = load i64, i64* %index, align 8, !dbg !5482, !tbaa !5172
  %45 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5483, !tbaa !2620
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %45, i32 0, i32 5, !dbg !5484
  %46 = load %struct._object*, %struct._object** %stack, align 8, !dbg !5484, !tbaa !4468
  %47 = bitcast %struct._object* %46 to %struct.PyVarObject*, !dbg !5485
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %47, i32 0, i32 1, !dbg !5486
  %48 = load i64, i64* %ob_size, align 8, !dbg !5486, !tbaa !5289
  %cmp43 = icmp slt i64 %44, %48, !dbg !5487
  br i1 %cmp43, label %if.then.44, label %if.else.53, !dbg !5488

if.then.44:                                       ; preds = %if.end.42
  %49 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5489, !tbaa !2620
  %stack45 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %49, i32 0, i32 5, !dbg !5492
  %50 = load %struct._object*, %struct._object** %stack45, align 8, !dbg !5492, !tbaa !4468
  %51 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5493, !tbaa !2620
  %index46 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %51, i32 0, i32 6, !dbg !5494
  %52 = load i64, i64* %index46, align 8, !dbg !5494, !tbaa !5172
  %53 = load %struct._object*, %struct._object** %this, align 8, !dbg !5495, !tbaa !2620
  %call47 = call i32 @PyList_SetItem(%struct._object* %50, i64 %52, %struct._object* %53), !dbg !5496
  %cmp48 = icmp slt i32 %call47, 0, !dbg !5497
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !5498

if.then.49:                                       ; preds = %if.then.44
  br label %error, !dbg !5499

if.end.50:                                        ; preds = %if.then.44
  %54 = load %struct._object*, %struct._object** %this, align 8, !dbg !5500, !tbaa !2620
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !5501
  %55 = load i64, i64* %ob_refcnt51, align 8, !dbg !5502, !tbaa !2631
  %inc52 = add i64 %55, 1, !dbg !5502
  store i64 %inc52, i64* %ob_refcnt51, align 8, !dbg !5502, !tbaa !2631
  br label %if.end.59, !dbg !5503

if.else.53:                                       ; preds = %if.end.42
  %56 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5504, !tbaa !2620
  %stack54 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %56, i32 0, i32 5, !dbg !5507
  %57 = load %struct._object*, %struct._object** %stack54, align 8, !dbg !5507, !tbaa !4468
  %58 = load %struct._object*, %struct._object** %this, align 8, !dbg !5508, !tbaa !2620
  %call55 = call i32 @PyList_Append(%struct._object* %57, %struct._object* %58), !dbg !5509
  %cmp56 = icmp slt i32 %call55, 0, !dbg !5510
  br i1 %cmp56, label %if.then.57, label %if.end.58, !dbg !5511

if.then.57:                                       ; preds = %if.else.53
  br label %error, !dbg !5512

if.end.58:                                        ; preds = %if.else.53
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %if.end.50
  %59 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5513, !tbaa !2620
  %index60 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %59, i32 0, i32 6, !dbg !5514
  %60 = load i64, i64* %index60, align 8, !dbg !5515, !tbaa !5172
  %inc61 = add i64 %60, 1, !dbg !5515
  store i64 %inc61, i64* %index60, align 8, !dbg !5515, !tbaa !5172
  br label %do.body, !dbg !5516

do.body:                                          ; preds = %if.end.59
  %61 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5517
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !5517
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !972, metadata !2613), !dbg !5519
  %62 = load %struct._object*, %struct._object** %this, align 8, !dbg !5520, !tbaa !2620
  store %struct._object* %62, %struct._object** %_py_decref_tmp, align 8, !dbg !5519, !tbaa !2620
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5521, !tbaa !2620
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !5523
  %64 = load i64, i64* %ob_refcnt62, align 8, !dbg !5524, !tbaa !2631
  %dec = add i64 %64, -1, !dbg !5524
  store i64 %dec, i64* %ob_refcnt62, align 8, !dbg !5524, !tbaa !2631
  %cmp63 = icmp ne i64 %dec, 0, !dbg !5525
  br i1 %cmp63, label %if.then.64, label %if.else.65, !dbg !5526

if.then.64:                                       ; preds = %do.body
  br label %if.end.66, !dbg !5527

if.else.65:                                       ; preds = %do.body
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5529, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !5531
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5531, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !5532
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5532, !tbaa !2705
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5533, !tbaa !2620
  call void %67(%struct._object* %68), !dbg !5534
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.65, %if.then.64
  %69 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5535
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !5535
  br label %do.cond, !dbg !5537

do.cond:                                          ; preds = %if.end.66
  br label %do.end, !dbg !5538

do.end:                                           ; preds = %do.cond
  %70 = load %struct._object*, %struct._object** %node, align 8, !dbg !5540, !tbaa !2620
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !5541
  %71 = load i64, i64* %ob_refcnt67, align 8, !dbg !5542, !tbaa !2631
  %inc68 = add i64 %71, 1, !dbg !5542
  store i64 %inc68, i64* %ob_refcnt67, align 8, !dbg !5542, !tbaa !2631
  %72 = load %struct._object*, %struct._object** %node, align 8, !dbg !5543, !tbaa !2620
  %73 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5544, !tbaa !2620
  %this69 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %73, i32 0, i32 2, !dbg !5545
  store %struct._object* %72, %struct._object** %this69, align 8, !dbg !5546, !tbaa !4381
  br label %do.body.70, !dbg !5547

do.body.70:                                       ; preds = %do.end
  %74 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !5548
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !5548
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp71, metadata !974, metadata !2613), !dbg !5550
  %75 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5551, !tbaa !2620
  %last72 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %75, i32 0, i32 3, !dbg !5552
  %76 = load %struct._object*, %struct._object** %last72, align 8, !dbg !5552, !tbaa !4410
  store %struct._object* %76, %struct._object** %_py_decref_tmp71, align 8, !dbg !5550, !tbaa !2620
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !5553, !tbaa !2620
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 0, !dbg !5555
  %78 = load i64, i64* %ob_refcnt73, align 8, !dbg !5556, !tbaa !2631
  %dec74 = add i64 %78, -1, !dbg !5556
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !5556, !tbaa !2631
  %cmp75 = icmp ne i64 %dec74, 0, !dbg !5557
  br i1 %cmp75, label %if.then.76, label %if.else.77, !dbg !5558

if.then.76:                                       ; preds = %do.body.70
  br label %if.end.80, !dbg !5559

if.else.77:                                       ; preds = %do.body.70
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !5561, !tbaa !2620
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 1, !dbg !5563
  %80 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !5563, !tbaa !2703
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %80, i32 0, i32 4, !dbg !5564
  %81 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !5564, !tbaa !2705
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !5565, !tbaa !2620
  call void %81(%struct._object* %82), !dbg !5566
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  %83 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !5567
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !5567
  br label %do.cond.81, !dbg !5568

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !5569

do.end.82:                                        ; preds = %do.cond.81
  %84 = load %struct._object*, %struct._object** %node, align 8, !dbg !5571, !tbaa !2620
  %ob_refcnt83 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 0, !dbg !5572
  %85 = load i64, i64* %ob_refcnt83, align 8, !dbg !5573, !tbaa !2631
  %inc84 = add i64 %85, 1, !dbg !5573
  store i64 %inc84, i64* %ob_refcnt83, align 8, !dbg !5573, !tbaa !2631
  %86 = load %struct._object*, %struct._object** %node, align 8, !dbg !5574, !tbaa !2620
  %87 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5575, !tbaa !2620
  %last85 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %87, i32 0, i32 3, !dbg !5576
  store %struct._object* %86, %struct._object** %last85, align 8, !dbg !5577, !tbaa !4410
  %88 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5578, !tbaa !2620
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %88, i32 0, i32 9, !dbg !5579
  %89 = load %struct._object*, %struct._object** %start_event_obj, align 8, !dbg !5579, !tbaa !4659
  %tobool86 = icmp ne %struct._object* %89, null, !dbg !5578
  br i1 %tobool86, label %if.then.87, label %if.end.107, !dbg !5580

if.then.87:                                       ; preds = %do.end.82
  %90 = bitcast %struct._object** %res to i8*, !dbg !5581
  call void @llvm.lifetime.start(i64 8, i8* %90) #1, !dbg !5581
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !976, metadata !2613), !dbg !5582
  %91 = bitcast %struct._object** %action to i8*, !dbg !5583
  call void @llvm.lifetime.start(i64 8, i8* %91) #1, !dbg !5583
  call void @llvm.dbg.declare(metadata %struct._object** %action, metadata !979, metadata !2613), !dbg !5584
  %92 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5585, !tbaa !2620
  %start_event_obj88 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %92, i32 0, i32 9, !dbg !5586
  %93 = load %struct._object*, %struct._object** %start_event_obj88, align 8, !dbg !5586, !tbaa !4659
  store %struct._object* %93, %struct._object** %action, align 8, !dbg !5584, !tbaa !2620
  %94 = load %struct._object*, %struct._object** %action, align 8, !dbg !5587, !tbaa !2620
  %95 = load %struct._object*, %struct._object** %node, align 8, !dbg !5588, !tbaa !2620
  %call89 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %94, %struct._object* %95), !dbg !5589
  store %struct._object* %call89, %struct._object** %res, align 8, !dbg !5590, !tbaa !2620
  %96 = load %struct._object*, %struct._object** %res, align 8, !dbg !5591, !tbaa !2620
  %tobool90 = icmp ne %struct._object* %96, null, !dbg !5591
  br i1 %tobool90, label %if.then.91, label %if.else.105, !dbg !5592

if.then.91:                                       ; preds = %if.then.87
  %97 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5593, !tbaa !2620
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %97, i32 0, i32 8, !dbg !5594
  %98 = load %struct._object*, %struct._object** %events, align 8, !dbg !5594, !tbaa !4701
  %99 = load %struct._object*, %struct._object** %res, align 8, !dbg !5595, !tbaa !2620
  %call92 = call i32 @PyList_Append(%struct._object* %98, %struct._object* %99), !dbg !5596
  br label %do.body.93, !dbg !5597

do.body.93:                                       ; preds = %if.then.91
  %100 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !5598
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !5598
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !980, metadata !2613), !dbg !5600
  %101 = load %struct._object*, %struct._object** %res, align 8, !dbg !5601, !tbaa !2620
  store %struct._object* %101, %struct._object** %_py_decref_tmp94, align 8, !dbg !5600, !tbaa !2620
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !5602, !tbaa !2620
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !5604
  %103 = load i64, i64* %ob_refcnt95, align 8, !dbg !5605, !tbaa !2631
  %dec96 = add i64 %103, -1, !dbg !5605
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !5605, !tbaa !2631
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !5606
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !5607

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !5608

if.else.99:                                       ; preds = %do.body.93
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !5610, !tbaa !2620
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !5612
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !5612, !tbaa !2703
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !5613
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !5613, !tbaa !2705
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !5614, !tbaa !2620
  call void %106(%struct._object* %107), !dbg !5615
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %108 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !5616
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !5616
  br label %do.cond.103, !dbg !5618

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !5619

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.106, !dbg !5621

if.else.105:                                      ; preds = %if.then.87
  call void @PyErr_Clear(), !dbg !5622
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.105, %do.end.104
  %109 = bitcast %struct._object** %action to i8*, !dbg !5623
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !5623
  %110 = bitcast %struct._object** %res to i8*, !dbg !5623
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !5623
  br label %if.end.107, !dbg !5624

if.end.107:                                       ; preds = %if.end.106, %do.end.82
  %111 = load %struct._object*, %struct._object** %node, align 8, !dbg !5625, !tbaa !2620
  store %struct._object* %111, %struct._object** %retval, !dbg !5626
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5626

error:                                            ; preds = %if.then.57, %if.then.49, %if.then.39, %if.then.35
  br label %do.body.108, !dbg !5627

do.body.108:                                      ; preds = %error
  %112 = bitcast %struct._object** %_py_decref_tmp109 to i8*, !dbg !5628
  call void @llvm.lifetime.start(i64 8, i8* %112) #1, !dbg !5628
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp109, metadata !984, metadata !2613), !dbg !5630
  %113 = load %struct._object*, %struct._object** %node, align 8, !dbg !5631, !tbaa !2620
  store %struct._object* %113, %struct._object** %_py_decref_tmp109, align 8, !dbg !5630, !tbaa !2620
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !5632, !tbaa !2620
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 0, !dbg !5634
  %115 = load i64, i64* %ob_refcnt110, align 8, !dbg !5635, !tbaa !2631
  %dec111 = add i64 %115, -1, !dbg !5635
  store i64 %dec111, i64* %ob_refcnt110, align 8, !dbg !5635, !tbaa !2631
  %cmp112 = icmp ne i64 %dec111, 0, !dbg !5636
  br i1 %cmp112, label %if.then.113, label %if.else.114, !dbg !5637

if.then.113:                                      ; preds = %do.body.108
  br label %if.end.117, !dbg !5638

if.else.114:                                      ; preds = %do.body.108
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !5640, !tbaa !2620
  %ob_type115 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 1, !dbg !5642
  %117 = load %struct._typeobject*, %struct._typeobject** %ob_type115, align 8, !dbg !5642, !tbaa !2703
  %tp_dealloc116 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %117, i32 0, i32 4, !dbg !5643
  %118 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc116, align 8, !dbg !5643, !tbaa !2705
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8, !dbg !5644, !tbaa !2620
  call void %118(%struct._object* %119), !dbg !5645
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.114, %if.then.113
  %120 = bitcast %struct._object** %_py_decref_tmp109 to i8*, !dbg !5646
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !5646
  br label %do.cond.118, !dbg !5647

do.cond.118:                                      ; preds = %if.end.117
  br label %do.end.119, !dbg !5648

do.end.119:                                       ; preds = %do.cond.118
  store %struct._object* null, %struct._object** %retval, !dbg !5650
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5650

cleanup:                                          ; preds = %do.end.119, %if.end.107, %if.then.28, %if.then.13, %if.then.8
  %121 = bitcast %struct.elementtreestate** %st to i8*, !dbg !5651
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !5651
  %122 = bitcast %struct._object** %this to i8*, !dbg !5651
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !5651
  %123 = bitcast %struct._object** %node to i8*, !dbg !5651
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !5651
  %124 = load %struct._object*, %struct._object** %retval, !dbg !5651
  ret %struct._object* %124, !dbg !5651
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_set_element_text(%struct._object* %element, %struct._object* %data) #0 {
entry:
  %element.addr = alloca %struct._object*, align 8
  %data.addr = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %element.addr, metadata !988, metadata !2613), !dbg !5652
  store %struct._object* %data, %struct._object** %data.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %data.addr, metadata !989, metadata !2613), !dbg !5653
  %0 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5654, !tbaa !2620
  %1 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5655, !tbaa !2620
  %2 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5656, !tbaa !2620
  %3 = bitcast %struct._object* %2 to %struct.ElementObject*, !dbg !5657
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 2, !dbg !5658
  %call = call i32 @treebuilder_set_element_text_or_tail(%struct._object* %0, %struct._object* %1, %struct._object** %text, %struct._Py_Identifier* @treebuilder_set_element_text.PyId_text), !dbg !5659
  ret i32 %call, !dbg !5660
}

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_set_element_tail(%struct._object* %element, %struct._object* %data) #0 {
entry:
  %element.addr = alloca %struct._object*, align 8
  %data.addr = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %element.addr, metadata !1017, metadata !2613), !dbg !5661
  store %struct._object* %data, %struct._object** %data.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %data.addr, metadata !1018, metadata !2613), !dbg !5662
  %0 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5663, !tbaa !2620
  %1 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5664, !tbaa !2620
  %2 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5665, !tbaa !2620
  %3 = bitcast %struct._object* %2 to %struct.ElementObject*, !dbg !5666
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 3, !dbg !5667
  %call = call i32 @treebuilder_set_element_text_or_tail(%struct._object* %0, %struct._object* %1, %struct._object** %tail, %struct._Py_Identifier* @treebuilder_set_element_tail.PyId_tail), !dbg !5668
  ret i32 %call, !dbg !5669
}

declare %struct._object* @PyObject_CallFunction(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_add_subelement(%struct._object* %element, %struct._object* %child) #0 {
entry:
  %retval = alloca i32, align 4
  %element.addr = alloca %struct._object*, align 8
  %child.addr = alloca %struct._object*, align 8
  %elem = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %element.addr, metadata !1021, metadata !2613), !dbg !5670
  store %struct._object* %child, %struct._object** %child.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %child.addr, metadata !1022, metadata !2613), !dbg !5671
  %0 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5672, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !5673
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5673, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %1, @Element_Type, !dbg !5674
  br i1 %cmp, label %if.then, label %if.else, !dbg !5675

if.then:                                          ; preds = %entry
  %2 = bitcast %struct.ElementObject** %elem to i8*, !dbg !5676
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5676
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %elem, metadata !1023, metadata !2613), !dbg !5677
  %3 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5678, !tbaa !2620
  %4 = bitcast %struct._object* %3 to %struct.ElementObject*, !dbg !5679
  store %struct.ElementObject* %4, %struct.ElementObject** %elem, align 8, !dbg !5677, !tbaa !2620
  %5 = load %struct.ElementObject*, %struct.ElementObject** %elem, align 8, !dbg !5680, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %child.addr, align 8, !dbg !5681, !tbaa !2620
  %call = call i32 @element_add_subelement(%struct.ElementObject* %5, %struct._object* %6), !dbg !5682
  store i32 %call, i32* %retval, !dbg !5683
  %7 = bitcast %struct.ElementObject** %elem to i8*, !dbg !5684
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !5684
  br label %return

if.else:                                          ; preds = %entry
  %8 = bitcast %struct._object** %res to i8*, !dbg !5685
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !5685
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1026, metadata !2613), !dbg !5686
  %9 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5687, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %child.addr, align 8, !dbg !5688, !tbaa !2620
  %call1 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %9, %struct._Py_Identifier* @treebuilder_add_subelement.PyId_append, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %10), !dbg !5689
  store %struct._object* %call1, %struct._object** %res, align 8, !dbg !5690, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !5691, !tbaa !2620
  %cmp2 = icmp eq %struct._object* %11, null, !dbg !5693
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !5694

if.then.3:                                        ; preds = %if.else
  store i32 -1, i32* %retval, !dbg !5695
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5695

if.end:                                           ; preds = %if.else
  br label %do.body, !dbg !5696

do.body:                                          ; preds = %if.end
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5697
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !5697
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1028, metadata !2613), !dbg !5699
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !5700, !tbaa !2620
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !5699, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5701, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !5703
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !5704, !tbaa !2631
  %dec = add i64 %15, -1, !dbg !5704
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5704, !tbaa !2631
  %cmp4 = icmp ne i64 %dec, 0, !dbg !5705
  br i1 %cmp4, label %if.then.5, label %if.else.6, !dbg !5706

if.then.5:                                        ; preds = %do.body
  br label %if.end.8, !dbg !5707

if.else.6:                                        ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5709, !tbaa !2620
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !5711
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !5711, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !5712
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5712, !tbaa !2705
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5713, !tbaa !2620
  call void %18(%struct._object* %19), !dbg !5714
  br label %if.end.8

if.end.8:                                         ; preds = %if.else.6, %if.then.5
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5715
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !5715
  br label %do.cond, !dbg !5717

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !5718

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !5720
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5720

cleanup:                                          ; preds = %do.end, %if.then.3
  %21 = bitcast %struct._object** %res to i8*, !dbg !5721
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !5721
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %22 = load i32, i32* %retval, !dbg !5722
  ret i32 %22, !dbg !5722
}

declare i32 @PyList_SetItem(%struct._object*, i64, %struct._object*) #3

declare %struct._object* @PyTuple_Pack(i64, ...) #3

declare void @PyErr_Clear() #3

; Function Attrs: nounwind uwtable
define internal i32 @treebuilder_set_element_text_or_tail(%struct._object* %element, %struct._object* %data, %struct._object** %dest, %struct._Py_Identifier* %name) #0 {
entry:
  %retval = alloca i32, align 4
  %element.addr = alloca %struct._object*, align 8
  %data.addr = alloca %struct._object*, align 8
  %dest.addr = alloca %struct._object**, align 8
  %name.addr = alloca %struct._Py_Identifier*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %joined = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  store %struct._object* %element, %struct._object** %element.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %element.addr, metadata !1002, metadata !2613), !dbg !5723
  store %struct._object* %data, %struct._object** %data.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %data.addr, metadata !1003, metadata !2613), !dbg !5724
  store %struct._object** %dest, %struct._object*** %dest.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object*** %dest.addr, metadata !1004, metadata !2613), !dbg !5725
  store %struct._Py_Identifier* %name, %struct._Py_Identifier** %name.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._Py_Identifier** %name.addr, metadata !1005, metadata !2613), !dbg !5726
  %0 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5727, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !5728
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5728, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %1, @Element_Type, !dbg !5729
  br i1 %cmp, label %if.then, label %if.else.8, !dbg !5730

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5731

do.body:                                          ; preds = %if.then
  %2 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5732
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5732
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1006, metadata !2613), !dbg !5734
  %3 = load %struct._object**, %struct._object*** %dest.addr, align 8, !dbg !5735, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !5736, !tbaa !2620
  %5 = ptrtoint %struct._object* %4 to i64, !dbg !5737
  %and = and i64 %5, -2, !dbg !5738
  %6 = inttoptr i64 %and to %struct._object*, !dbg !5739
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !5734, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5740, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !5742
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !5743, !tbaa !2631
  %dec = add i64 %8, -1, !dbg !5743
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5743, !tbaa !2631
  %cmp1 = icmp ne i64 %dec, 0, !dbg !5744
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !5745

if.then.2:                                        ; preds = %do.body
  br label %if.end, !dbg !5746

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5748, !tbaa !2620
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !5750
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !5750, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !5751
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5751, !tbaa !2705
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5752, !tbaa !2620
  call void %11(%struct._object* %12), !dbg !5753
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5754
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !5754
  br label %do.end, !dbg !5756

do.end:                                           ; preds = %if.end
  %14 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5757, !tbaa !2620
  %15 = ptrtoint %struct._object* %14 to i64, !dbg !5758
  %and4 = and i64 %15, -2, !dbg !5759
  %16 = inttoptr i64 %and4 to %struct._object*, !dbg !5760
  %17 = ptrtoint %struct._object* %16 to i64, !dbg !5761
  %18 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5762, !tbaa !2620
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !5763
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !5763, !tbaa !2703
  %cmp6 = icmp eq %struct._typeobject* %19, @PyList_Type, !dbg !5764
  %conv = zext i1 %cmp6 to i32, !dbg !5764
  %conv7 = sext i32 %conv to i64, !dbg !5765
  %or = or i64 %17, %conv7, !dbg !5766
  %20 = inttoptr i64 %or to i8*, !dbg !5767
  %21 = bitcast i8* %20 to %struct._object*, !dbg !5768
  %22 = load %struct._object**, %struct._object*** %dest.addr, align 8, !dbg !5769, !tbaa !2620
  store %struct._object* %21, %struct._object** %22, align 8, !dbg !5770, !tbaa !2620
  store i32 0, i32* %retval, !dbg !5771
  br label %return, !dbg !5771

if.else.8:                                        ; preds = %entry
  %23 = bitcast %struct._object** %joined to i8*, !dbg !5772
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !5772
  call void @llvm.dbg.declare(metadata %struct._object** %joined, metadata !1010, metadata !2613), !dbg !5773
  %24 = load %struct._object*, %struct._object** %data.addr, align 8, !dbg !5774, !tbaa !2620
  %call = call %struct._object* @list_join(%struct._object* %24), !dbg !5775
  store %struct._object* %call, %struct._object** %joined, align 8, !dbg !5773, !tbaa !2620
  %25 = bitcast i32* %r to i8*, !dbg !5776
  call void @llvm.lifetime.start(i64 4, i8* %25) #1, !dbg !5776
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1012, metadata !2613), !dbg !5777
  %26 = load %struct._object*, %struct._object** %joined, align 8, !dbg !5778, !tbaa !2620
  %cmp9 = icmp eq %struct._object* %26, null, !dbg !5780
  br i1 %cmp9, label %if.then.11, label %if.end.12, !dbg !5781

if.then.11:                                       ; preds = %if.else.8
  store i32 -1, i32* %retval, !dbg !5782
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5782

if.end.12:                                        ; preds = %if.else.8
  %27 = load %struct._object*, %struct._object** %element.addr, align 8, !dbg !5783, !tbaa !2620
  %28 = load %struct._Py_Identifier*, %struct._Py_Identifier** %name.addr, align 8, !dbg !5784, !tbaa !2620
  %29 = load %struct._object*, %struct._object** %joined, align 8, !dbg !5785, !tbaa !2620
  %call13 = call i32 @_PyObject_SetAttrId(%struct._object* %27, %struct._Py_Identifier* %28, %struct._object* %29), !dbg !5786
  store i32 %call13, i32* %r, align 4, !dbg !5787, !tbaa !2759
  br label %do.body.14, !dbg !5788

do.body.14:                                       ; preds = %if.end.12
  %30 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !5789
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !5789
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1013, metadata !2613), !dbg !5791
  %31 = load %struct._object*, %struct._object** %joined, align 8, !dbg !5792, !tbaa !2620
  store %struct._object* %31, %struct._object** %_py_decref_tmp15, align 8, !dbg !5791, !tbaa !2620
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5793, !tbaa !2620
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !5795
  %33 = load i64, i64* %ob_refcnt16, align 8, !dbg !5796, !tbaa !2631
  %dec17 = add i64 %33, -1, !dbg !5796
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !5796, !tbaa !2631
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !5797
  br i1 %cmp18, label %if.then.20, label %if.else.21, !dbg !5798

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24, !dbg !5799

if.else.21:                                       ; preds = %do.body.14
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5801, !tbaa !2620
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !5803
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !5803, !tbaa !2703
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !5804
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !5804, !tbaa !2705
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !5805, !tbaa !2620
  call void %36(%struct._object* %37), !dbg !5806
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %38 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !5807
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !5807
  br label %do.cond, !dbg !5809

do.cond:                                          ; preds = %if.end.24
  br label %do.end.25, !dbg !5810

do.end.25:                                        ; preds = %do.cond
  %39 = load i32, i32* %r, align 4, !dbg !5812, !tbaa !2759
  store i32 %39, i32* %retval, !dbg !5813
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5813

cleanup:                                          ; preds = %do.end.25, %if.then.11
  %40 = bitcast i32* %r to i8*, !dbg !5814
  call void @llvm.lifetime.end(i64 4, i8* %40) #1, !dbg !5814
  %41 = bitcast %struct._object** %joined to i8*, !dbg !5814
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !5814
  br label %return

return:                                           ; preds = %cleanup, %do.end
  %42 = load i32, i32* %retval, !dbg !5815
  ret i32 %42, !dbg !5815
}

declare i32 @_PyObject_SetAttrId(%struct._object*, %struct._Py_Identifier*, %struct._object*) #3

declare %struct._object* @_PyObject_CallMethodId(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_handle_end(%struct.TreeBuilderObject* %self, %struct._object* %tag) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %action = alloca %struct._object*, align 8
  %node = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !1037, metadata !2613), !dbg !5816
  store %struct._object* %tag, %struct._object** %tag.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %tag.addr, metadata !1038, metadata !2613), !dbg !5817
  %0 = bitcast %struct._object** %item to i8*, !dbg !5818
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5818
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1039, metadata !2613), !dbg !5819
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5820, !tbaa !2620
  %data = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %1, i32 0, i32 4, !dbg !5822
  %2 = load %struct._object*, %struct._object** %data, align 8, !dbg !5822, !tbaa !4439
  %tobool = icmp ne %struct._object* %2, null, !dbg !5820
  br i1 %tobool, label %if.then, label %if.end.14, !dbg !5823

if.then:                                          ; preds = %entry
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5824, !tbaa !2620
  %this = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %3, i32 0, i32 2, !dbg !5827
  %4 = load %struct._object*, %struct._object** %this, align 8, !dbg !5827, !tbaa !4381
  %5 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5828, !tbaa !2620
  %last = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %5, i32 0, i32 3, !dbg !5829
  %6 = load %struct._object*, %struct._object** %last, align 8, !dbg !5829, !tbaa !4410
  %cmp = icmp eq %struct._object* %4, %6, !dbg !5830
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !5831

if.then.1:                                        ; preds = %if.then
  %7 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5832, !tbaa !2620
  %last2 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %7, i32 0, i32 3, !dbg !5835
  %8 = load %struct._object*, %struct._object** %last2, align 8, !dbg !5835, !tbaa !4410
  %9 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5836, !tbaa !2620
  %data3 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %9, i32 0, i32 4, !dbg !5837
  %10 = load %struct._object*, %struct._object** %data3, align 8, !dbg !5837, !tbaa !4439
  %call = call i32 @treebuilder_set_element_text(%struct._object* %8, %struct._object* %10), !dbg !5838
  %tobool4 = icmp ne i32 %call, 0, !dbg !5838
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !5839

if.then.5:                                        ; preds = %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !5840
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5840

if.end:                                           ; preds = %if.then.1
  br label %if.end.12, !dbg !5841

if.else:                                          ; preds = %if.then
  %11 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5842, !tbaa !2620
  %last6 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %11, i32 0, i32 3, !dbg !5845
  %12 = load %struct._object*, %struct._object** %last6, align 8, !dbg !5845, !tbaa !4410
  %13 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5846, !tbaa !2620
  %data7 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %13, i32 0, i32 4, !dbg !5847
  %14 = load %struct._object*, %struct._object** %data7, align 8, !dbg !5847, !tbaa !4439
  %call8 = call i32 @treebuilder_set_element_tail(%struct._object* %12, %struct._object* %14), !dbg !5848
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5848
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !5849

if.then.10:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !5850
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5850

if.end.11:                                        ; preds = %if.else
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %if.end
  %15 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5851, !tbaa !2620
  %data13 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %15, i32 0, i32 4, !dbg !5852
  store %struct._object* null, %struct._object** %data13, align 8, !dbg !5853, !tbaa !4439
  br label %if.end.14, !dbg !5854

if.end.14:                                        ; preds = %if.end.12, %entry
  %16 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5855, !tbaa !2620
  %index = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %16, i32 0, i32 6, !dbg !5857
  %17 = load i64, i64* %index, align 8, !dbg !5857, !tbaa !5172
  %cmp15 = icmp eq i64 %17, 0, !dbg !5858
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !5859

if.then.16:                                       ; preds = %if.end.14
  %18 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !5860, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i32 0, i32 0)), !dbg !5862
  store %struct._object* null, %struct._object** %retval, !dbg !5863
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5863

if.end.17:                                        ; preds = %if.end.14
  %19 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5864, !tbaa !2620
  %index18 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %19, i32 0, i32 6, !dbg !5865
  %20 = load i64, i64* %index18, align 8, !dbg !5866, !tbaa !5172
  %dec = add i64 %20, -1, !dbg !5866
  store i64 %dec, i64* %index18, align 8, !dbg !5866, !tbaa !5172
  %21 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5867, !tbaa !2620
  %index19 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %21, i32 0, i32 6, !dbg !5868
  %22 = load i64, i64* %index19, align 8, !dbg !5868, !tbaa !5172
  %23 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5869, !tbaa !2620
  %stack = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %23, i32 0, i32 5, !dbg !5870
  %24 = load %struct._object*, %struct._object** %stack, align 8, !dbg !5870, !tbaa !4468
  %25 = bitcast %struct._object* %24 to %struct.PyListObject*, !dbg !5871
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %25, i32 0, i32 1, !dbg !5872
  %26 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !5872, !tbaa !5350
  %arrayidx = getelementptr %struct._object*, %struct._object** %26, i64 %22, !dbg !5873
  %27 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !5873, !tbaa !2620
  store %struct._object* %27, %struct._object** %item, align 8, !dbg !5874, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %item, align 8, !dbg !5875, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !5876
  %29 = load i64, i64* %ob_refcnt, align 8, !dbg !5877, !tbaa !2631
  %inc = add i64 %29, 1, !dbg !5877
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5877, !tbaa !2631
  br label %do.body, !dbg !5878

do.body:                                          ; preds = %if.end.17
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5879
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !5879
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1040, metadata !2613), !dbg !5881
  %31 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5882, !tbaa !2620
  %last20 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %31, i32 0, i32 3, !dbg !5883
  %32 = load %struct._object*, %struct._object** %last20, align 8, !dbg !5883, !tbaa !4410
  store %struct._object* %32, %struct._object** %_py_decref_tmp, align 8, !dbg !5881, !tbaa !2620
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5884, !tbaa !2620
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !5886
  %34 = load i64, i64* %ob_refcnt21, align 8, !dbg !5887, !tbaa !2631
  %dec22 = add i64 %34, -1, !dbg !5887
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !5887, !tbaa !2631
  %cmp23 = icmp ne i64 %dec22, 0, !dbg !5888
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !5889

if.then.24:                                       ; preds = %do.body
  br label %if.end.26, !dbg !5890

if.else.25:                                       ; preds = %do.body
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5892, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !5894
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5894, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4, !dbg !5895
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5895, !tbaa !2705
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5896, !tbaa !2620
  call void %37(%struct._object* %38), !dbg !5897
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.25, %if.then.24
  %39 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5898
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !5898
  br label %do.cond, !dbg !5900

do.cond:                                          ; preds = %if.end.26
  br label %do.end, !dbg !5901

do.end:                                           ; preds = %do.cond
  %40 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5903, !tbaa !2620
  %this27 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %40, i32 0, i32 2, !dbg !5904
  %41 = load %struct._object*, %struct._object** %this27, align 8, !dbg !5904, !tbaa !4381
  %42 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5905, !tbaa !2620
  %last28 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %42, i32 0, i32 3, !dbg !5906
  store %struct._object* %41, %struct._object** %last28, align 8, !dbg !5907, !tbaa !4410
  %43 = load %struct._object*, %struct._object** %item, align 8, !dbg !5908, !tbaa !2620
  %44 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5909, !tbaa !2620
  %this29 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %44, i32 0, i32 2, !dbg !5910
  store %struct._object* %43, %struct._object** %this29, align 8, !dbg !5911, !tbaa !4381
  %45 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5912, !tbaa !2620
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %45, i32 0, i32 10, !dbg !5913
  %46 = load %struct._object*, %struct._object** %end_event_obj, align 8, !dbg !5913, !tbaa !4617
  %tobool30 = icmp ne %struct._object* %46, null, !dbg !5912
  br i1 %tobool30, label %if.then.31, label %if.end.52, !dbg !5914

if.then.31:                                       ; preds = %do.end
  %47 = bitcast %struct._object** %res to i8*, !dbg !5915
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !5915
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1042, metadata !2613), !dbg !5916
  %48 = bitcast %struct._object** %action to i8*, !dbg !5917
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !5917
  call void @llvm.dbg.declare(metadata %struct._object** %action, metadata !1045, metadata !2613), !dbg !5918
  %49 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5919, !tbaa !2620
  %end_event_obj32 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %49, i32 0, i32 10, !dbg !5920
  %50 = load %struct._object*, %struct._object** %end_event_obj32, align 8, !dbg !5920, !tbaa !4617
  store %struct._object* %50, %struct._object** %action, align 8, !dbg !5918, !tbaa !2620
  %51 = bitcast %struct._object** %node to i8*, !dbg !5921
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !5921
  call void @llvm.dbg.declare(metadata %struct._object** %node, metadata !1046, metadata !2613), !dbg !5922
  %52 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5923, !tbaa !2620
  %last33 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %52, i32 0, i32 3, !dbg !5924
  %53 = load %struct._object*, %struct._object** %last33, align 8, !dbg !5924, !tbaa !4410
  store %struct._object* %53, %struct._object** %node, align 8, !dbg !5922, !tbaa !2620
  %54 = load %struct._object*, %struct._object** %action, align 8, !dbg !5925, !tbaa !2620
  %55 = load %struct._object*, %struct._object** %node, align 8, !dbg !5926, !tbaa !2620
  %call34 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %54, %struct._object* %55), !dbg !5927
  store %struct._object* %call34, %struct._object** %res, align 8, !dbg !5928, !tbaa !2620
  %56 = load %struct._object*, %struct._object** %res, align 8, !dbg !5929, !tbaa !2620
  %tobool35 = icmp ne %struct._object* %56, null, !dbg !5929
  br i1 %tobool35, label %if.then.36, label %if.else.50, !dbg !5930

if.then.36:                                       ; preds = %if.then.31
  %57 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5931, !tbaa !2620
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %57, i32 0, i32 8, !dbg !5932
  %58 = load %struct._object*, %struct._object** %events, align 8, !dbg !5932, !tbaa !4701
  %59 = load %struct._object*, %struct._object** %res, align 8, !dbg !5933, !tbaa !2620
  %call37 = call i32 @PyList_Append(%struct._object* %58, %struct._object* %59), !dbg !5934
  br label %do.body.38, !dbg !5935

do.body.38:                                       ; preds = %if.then.36
  %60 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !5936
  call void @llvm.lifetime.start(i64 8, i8* %60) #1, !dbg !5936
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp39, metadata !1047, metadata !2613), !dbg !5938
  %61 = load %struct._object*, %struct._object** %res, align 8, !dbg !5939, !tbaa !2620
  store %struct._object* %61, %struct._object** %_py_decref_tmp39, align 8, !dbg !5938, !tbaa !2620
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !5940, !tbaa !2620
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !5942
  %63 = load i64, i64* %ob_refcnt40, align 8, !dbg !5943, !tbaa !2631
  %dec41 = add i64 %63, -1, !dbg !5943
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !5943, !tbaa !2631
  %cmp42 = icmp ne i64 %dec41, 0, !dbg !5944
  br i1 %cmp42, label %if.then.43, label %if.else.44, !dbg !5945

if.then.43:                                       ; preds = %do.body.38
  br label %if.end.47, !dbg !5946

if.else.44:                                       ; preds = %do.body.38
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !5948, !tbaa !2620
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !5950
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !5950, !tbaa !2703
  %tp_dealloc46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !5951
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc46, align 8, !dbg !5951, !tbaa !2705
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !5952, !tbaa !2620
  call void %66(%struct._object* %67), !dbg !5953
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.44, %if.then.43
  %68 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !5954
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !5954
  br label %do.cond.48, !dbg !5956

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !5957

do.end.49:                                        ; preds = %do.cond.48
  br label %if.end.51, !dbg !5959

if.else.50:                                       ; preds = %if.then.31
  call void @PyErr_Clear(), !dbg !5960
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.50, %do.end.49
  %69 = bitcast %struct._object** %node to i8*, !dbg !5961
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !5961
  %70 = bitcast %struct._object** %action to i8*, !dbg !5961
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !5961
  %71 = bitcast %struct._object** %res to i8*, !dbg !5961
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !5961
  br label %if.end.52, !dbg !5962

if.end.52:                                        ; preds = %if.end.51, %do.end
  %72 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5963, !tbaa !2620
  %last53 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %72, i32 0, i32 3, !dbg !5964
  %73 = load %struct._object*, %struct._object** %last53, align 8, !dbg !5964, !tbaa !4410
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !5965
  %74 = load i64, i64* %ob_refcnt54, align 8, !dbg !5966, !tbaa !2631
  %inc55 = add i64 %74, 1, !dbg !5966
  store i64 %inc55, i64* %ob_refcnt54, align 8, !dbg !5966, !tbaa !2631
  %75 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5967, !tbaa !2620
  %last56 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %75, i32 0, i32 3, !dbg !5968
  %76 = load %struct._object*, %struct._object** %last56, align 8, !dbg !5968, !tbaa !4410
  store %struct._object* %76, %struct._object** %retval, !dbg !5969
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5969

cleanup:                                          ; preds = %if.end.52, %if.then.16, %if.then.10, %if.then.5
  %77 = bitcast %struct._object** %item to i8*, !dbg !5970
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !5970
  %78 = load %struct._object*, %struct._object** %retval, !dbg !5970
  ret %struct._object* %78, !dbg !5970
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %self) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %res = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !1059, metadata !2613), !dbg !5971
  %0 = bitcast %struct._object** %res to i8*, !dbg !5972
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5972
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1060, metadata !2613), !dbg !5973
  %1 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5974, !tbaa !2620
  %root = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %1, i32 0, i32 1, !dbg !5976
  %2 = load %struct._object*, %struct._object** %root, align 8, !dbg !5976, !tbaa !4351
  %tobool = icmp ne %struct._object* %2, null, !dbg !5974
  br i1 %tobool, label %if.then, label %if.else, !dbg !5977

if.then:                                          ; preds = %entry
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !5978, !tbaa !2620
  %root1 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %3, i32 0, i32 1, !dbg !5979
  %4 = load %struct._object*, %struct._object** %root1, align 8, !dbg !5979, !tbaa !4351
  store %struct._object* %4, %struct._object** %res, align 8, !dbg !5980, !tbaa !2620
  br label %if.end, !dbg !5981

if.else:                                          ; preds = %entry
  store %struct._object* @_Py_NoneStruct, %struct._object** %res, align 8, !dbg !5982, !tbaa !2620
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct._object*, %struct._object** %res, align 8, !dbg !5983, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !5984
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !5985, !tbaa !2631
  %inc = add i64 %6, 1, !dbg !5985
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5985, !tbaa !2631
  %7 = load %struct._object*, %struct._object** %res, align 8, !dbg !5986, !tbaa !2620
  %8 = bitcast %struct._object** %res to i8*, !dbg !5987
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !5987
  ret %struct._object* %7, !dbg !5988
}

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #3

; Function Attrs: nounwind uwtable
define internal void @element_dealloc(%struct.ElementObject* %self) #0 {
entry:
  %self.addr = alloca %struct.ElementObject*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1100, metadata !2613), !dbg !5989
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !5990, !tbaa !2620
  %1 = bitcast %struct.ElementObject* %0 to i8*, !dbg !5990
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !5991
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !5992, !tbaa !2620
  %weakreflist = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 5, !dbg !5994
  %3 = load %struct._object*, %struct._object** %weakreflist, align 8, !dbg !5994, !tbaa !3385
  %cmp = icmp ne %struct._object* %3, null, !dbg !5995
  br i1 %cmp, label %if.then, label %if.end, !dbg !5996

if.then:                                          ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !5997, !tbaa !2620
  %5 = bitcast %struct.ElementObject* %4 to %struct._object*, !dbg !5998
  call void @PyObject_ClearWeakRefs(%struct._object* %5), !dbg !5999
  br label %if.end, !dbg !5999

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6000, !tbaa !2620
  %call = call i32 @element_gc_clear(%struct.ElementObject* %6), !dbg !6001
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6002, !tbaa !2620
  %8 = bitcast %struct.ElementObject* %7 to %struct._object*, !dbg !6003
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !6004
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6004, !tbaa !2703
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 38, !dbg !6005
  %10 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !6005, !tbaa !4339
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6006, !tbaa !2620
  %12 = bitcast %struct.ElementObject* %11 to %struct._object*, !dbg !6007
  %13 = bitcast %struct._object* %12 to i8*, !dbg !6007
  call void %10(i8* %13), !dbg !6008
  ret void, !dbg !6009
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_repr(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1103, metadata !2613), !dbg !6010
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6011, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 1, !dbg !6013
  %1 = load %struct._object*, %struct._object** %tag, align 8, !dbg !6013, !tbaa !3371
  %tobool = icmp ne %struct._object* %1, null, !dbg !6011
  br i1 %tobool, label %if.then, label %if.else, !dbg !6014

if.then:                                          ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6015, !tbaa !2620
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 1, !dbg !6016
  %3 = load %struct._object*, %struct._object** %tag1, align 8, !dbg !6016, !tbaa !3371
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6017, !tbaa !2620
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i32 0, i32 0), %struct._object* %3, %struct.ElementObject* %4), !dbg !6018
  store %struct._object* %call, %struct._object** %retval, !dbg !6019
  br label %return, !dbg !6019

if.else:                                          ; preds = %entry
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6020, !tbaa !2620
  %call2 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), %struct.ElementObject* %5), !dbg !6021
  store %struct._object* %call2, %struct._object** %retval, !dbg !6022
  br label %return, !dbg !6022

return:                                           ; preds = %if.else, %if.then
  %6 = load %struct._object*, %struct._object** %retval, !dbg !6023
  ret %struct._object* %6, !dbg !6023
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getattro(%struct.ElementObject* %self, %struct._object* %nameobj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %nameobj.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp41 = alloca i32, align 4
  %__s1_len47 = alloca i64, align 8
  %__s2_len49 = alloca i64, align 8
  %tmp50 = alloca i32, align 4
  %__s156 = alloca i8*, align 8
  %__result58 = alloca i32, align 4
  %tmp96 = alloca i32, align 4
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %__s1_len118 = alloca i64, align 8
  %__s2_len120 = alloca i64, align 8
  %tmp121 = alloca i32, align 4
  %__s1127 = alloca i8*, align 8
  %__result129 = alloca i32, align 4
  %tmp167 = alloca i32, align 4
  %__s1_len178 = alloca i64, align 8
  %__s2_len180 = alloca i64, align 8
  %tmp181 = alloca i32, align 4
  %__s1187 = alloca i8*, align 8
  %__result189 = alloca i32, align 4
  %tmp227 = alloca i32, align 4
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1213, metadata !2613), !dbg !6024
  store %struct._object* %nameobj, %struct._object** %nameobj.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %nameobj.addr, metadata !1214, metadata !2613), !dbg !6025
  %0 = bitcast %struct._object** %res to i8*, !dbg !6026
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6026
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1215, metadata !2613), !dbg !6027
  %1 = bitcast i8** %name to i8*, !dbg !6028
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6028
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1216, metadata !2613), !dbg !6029
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i8** %name, align 8, !dbg !6029, !tbaa !2620
  %2 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !6030, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !6032
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6032, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19, !dbg !6033
  %4 = load i64, i64* %tp_flags, align 8, !dbg !6033, !tbaa !3263
  %and = and i64 %4, 268435456, !dbg !6034
  %cmp = icmp ne i64 %and, 0, !dbg !6035
  br i1 %cmp, label %if.then, label %if.end, !dbg !6036

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !6037, !tbaa !2620
  %call = call i8* @PyUnicode_AsUTF8(%struct._object* %5), !dbg !6038
  store i8* %call, i8** %name, align 8, !dbg !6039, !tbaa !2620
  br label %if.end, !dbg !6040

if.end:                                           ; preds = %if.then, %entry
  %6 = load i8*, i8** %name, align 8, !dbg !6041, !tbaa !2620
  %cmp1 = icmp eq i8* %6, null, !dbg !6043
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !6044

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6045
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6045

if.end.3:                                         ; preds = %if.end
  %7 = bitcast i64* %__s1_len to i8*, !dbg !6046
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6046
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !1217, metadata !2613), !dbg !6047
  %8 = bitcast i64* %__s2_len to i8*, !dbg !6046
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !6046
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !1220, metadata !2613), !dbg !6048
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 1) to i64), i64 ptrtoint ([4 x i8]* @.str.44 to i64)), i64 1), label %land.lhs.true, label %cond.false, !dbg !6049

land.lhs.true:                                    ; preds = %if.end.3
  store i64 3, i64* %__s2_len, align 8, !dbg !6050, !tbaa !2742
  %9 = load i64, i64* %__s2_len, align 8, !dbg !6052, !tbaa !2742
  %cmp4 = icmp ult i64 %9, 4, !dbg !6053
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !6054

cond.true:                                        ; preds = %land.lhs.true
  %10 = bitcast i8** %__s1 to i8*, !dbg !6055
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !6055
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !1221, metadata !2613), !dbg !6057
  %11 = load i8*, i8** %name, align 8, !dbg !6058, !tbaa !2620
  store i8* %11, i8** %__s1, align 8, !dbg !6057, !tbaa !2620
  %12 = bitcast i32* %__result to i8*, !dbg !6059
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !6059
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !1223, metadata !2613), !dbg !6060
  %13 = load i8*, i8** %__s1, align 8, !dbg !6061, !tbaa !2620
  %arrayidx = getelementptr i8, i8* %13, i64 0, !dbg !6061
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6061, !tbaa !2756
  %conv = zext i8 %14 to i32, !dbg !6061
  %15 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), align 1, !dbg !6062, !tbaa !2756
  %conv7 = zext i8 %15 to i32, !dbg !6062
  %sub = sub i32 %conv, %conv7, !dbg !6063
  store i32 %sub, i32* %__result, align 4, !dbg !6060, !tbaa !2759
  %16 = load i64, i64* %__s2_len, align 8, !dbg !6064, !tbaa !2742
  %cmp8 = icmp ugt i64 %16, 0, !dbg !6066
  br i1 %cmp8, label %land.lhs.true.10, label %if.end.40, !dbg !6067

land.lhs.true.10:                                 ; preds = %cond.true
  %17 = load i32, i32* %__result, align 4, !dbg !6068, !tbaa !2759
  %cmp11 = icmp eq i32 %17, 0, !dbg !6070
  br i1 %cmp11, label %if.then.13, label %if.end.40, !dbg !6071

if.then.13:                                       ; preds = %land.lhs.true.10
  %18 = load i8*, i8** %__s1, align 8, !dbg !6072, !tbaa !2620
  %arrayidx14 = getelementptr i8, i8* %18, i64 1, !dbg !6072
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !6072, !tbaa !2756
  %conv15 = zext i8 %19 to i32, !dbg !6072
  %20 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 1), align 1, !dbg !6075, !tbaa !2756
  %conv16 = zext i8 %20 to i32, !dbg !6075
  %sub17 = sub i32 %conv15, %conv16, !dbg !6076
  store i32 %sub17, i32* %__result, align 4, !dbg !6077, !tbaa !2759
  %21 = load i64, i64* %__s2_len, align 8, !dbg !6078, !tbaa !2742
  %cmp18 = icmp ugt i64 %21, 1, !dbg !6080
  br i1 %cmp18, label %land.lhs.true.20, label %if.end.39, !dbg !6081

land.lhs.true.20:                                 ; preds = %if.then.13
  %22 = load i32, i32* %__result, align 4, !dbg !6082, !tbaa !2759
  %cmp21 = icmp eq i32 %22, 0, !dbg !6084
  br i1 %cmp21, label %if.then.23, label %if.end.39, !dbg !6085

if.then.23:                                       ; preds = %land.lhs.true.20
  %23 = load i8*, i8** %__s1, align 8, !dbg !6086, !tbaa !2620
  %arrayidx24 = getelementptr i8, i8* %23, i64 2, !dbg !6086
  %24 = load i8, i8* %arrayidx24, align 1, !dbg !6086, !tbaa !2756
  %conv25 = zext i8 %24 to i32, !dbg !6086
  %25 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 2), align 1, !dbg !6089, !tbaa !2756
  %conv26 = zext i8 %25 to i32, !dbg !6089
  %sub27 = sub i32 %conv25, %conv26, !dbg !6090
  store i32 %sub27, i32* %__result, align 4, !dbg !6091, !tbaa !2759
  %26 = load i64, i64* %__s2_len, align 8, !dbg !6092, !tbaa !2742
  %cmp28 = icmp ugt i64 %26, 2, !dbg !6094
  br i1 %cmp28, label %land.lhs.true.30, label %if.end.38, !dbg !6095

land.lhs.true.30:                                 ; preds = %if.then.23
  %27 = load i32, i32* %__result, align 4, !dbg !6096, !tbaa !2759
  %cmp31 = icmp eq i32 %27, 0, !dbg !6098
  br i1 %cmp31, label %if.then.33, label %if.end.38, !dbg !6099

if.then.33:                                       ; preds = %land.lhs.true.30
  %28 = load i8*, i8** %__s1, align 8, !dbg !6100, !tbaa !2620
  %arrayidx34 = getelementptr i8, i8* %28, i64 3, !dbg !6100
  %29 = load i8, i8* %arrayidx34, align 1, !dbg !6100, !tbaa !2756
  %conv35 = zext i8 %29 to i32, !dbg !6100
  %30 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 3), align 1, !dbg !6102, !tbaa !2756
  %conv36 = zext i8 %30 to i32, !dbg !6102
  %sub37 = sub i32 %conv35, %conv36, !dbg !6103
  store i32 %sub37, i32* %__result, align 4, !dbg !6104, !tbaa !2759
  br label %if.end.38, !dbg !6105

if.end.38:                                        ; preds = %if.then.33, %land.lhs.true.30, %if.then.23
  br label %if.end.39, !dbg !6106

if.end.39:                                        ; preds = %if.end.38, %land.lhs.true.20, %if.then.13
  br label %if.end.40, !dbg !6110

if.end.40:                                        ; preds = %if.end.39, %land.lhs.true.10, %cond.true
  %31 = load i32, i32* %__result, align 4, !dbg !6114, !tbaa !2759
  store i32 %31, i32* %tmp41, !dbg !6118, !tbaa !2759
  %32 = bitcast i32* %__result to i8*, !dbg !6119
  call void @llvm.lifetime.end(i64 4, i8* %32) #1, !dbg !6119
  %33 = bitcast i8** %__s1 to i8*, !dbg !6119
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !6119
  %34 = load i32, i32* %tmp41, !dbg !6120, !tbaa !2759
  br label %cond.end, !dbg !6054

cond.false:                                       ; preds = %land.lhs.true, %if.end.3
  %35 = load i8*, i8** %name, align 8, !dbg !6121, !tbaa !2620
  %call42 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0)) #1, !dbg !6124
  br label %cond.end, !dbg !6054

cond.end:                                         ; preds = %cond.false, %if.end.40
  %cond = phi i32 [ %34, %if.end.40 ], [ %call42, %cond.false ], !dbg !6054
  store i32 %cond, i32* %tmp, !dbg !6125, !tbaa !2759
  %36 = bitcast i64* %__s2_len to i8*, !dbg !6128
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !6128
  %37 = bitcast i64* %__s1_len to i8*, !dbg !6128
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !6128
  %38 = load i32, i32* %tmp, !dbg !6129, !tbaa !2759
  %cmp43 = icmp eq i32 %38, 0, !dbg !6130
  br i1 %cmp43, label %if.then.45, label %if.else, !dbg !6131

if.then.45:                                       ; preds = %cond.end
  %39 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6132, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %39, i32 0, i32 1, !dbg !6134
  %40 = load %struct._object*, %struct._object** %tag, align 8, !dbg !6134, !tbaa !3371
  store %struct._object* %40, %struct._object** %res, align 8, !dbg !6135, !tbaa !2620
  %41 = load %struct._object*, %struct._object** %res, align 8, !dbg !6136, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !6137
  %42 = load i64, i64* %ob_refcnt, align 8, !dbg !6138, !tbaa !2631
  %inc = add i64 %42, 1, !dbg !6138
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6138, !tbaa !2631
  %43 = load %struct._object*, %struct._object** %res, align 8, !dbg !6139, !tbaa !2620
  store %struct._object* %43, %struct._object** %retval, !dbg !6140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6140

if.else:                                          ; preds = %cond.end
  %44 = bitcast i64* %__s1_len47 to i8*, !dbg !6141
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !6141
  call void @llvm.dbg.declare(metadata i64* %__s1_len47, metadata !1224, metadata !2613), !dbg !6142
  %45 = bitcast i64* %__s2_len49 to i8*, !dbg !6141
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !6141
  call void @llvm.dbg.declare(metadata i64* %__s2_len49, metadata !1227, metadata !2613), !dbg !6143
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 1) to i64), i64 ptrtoint ([5 x i8]* @.str.27 to i64)), i64 1), label %land.lhs.true.51, label %cond.false.97, !dbg !6144

land.lhs.true.51:                                 ; preds = %if.else
  store i64 4, i64* %__s2_len49, align 8, !dbg !6145, !tbaa !2742
  %46 = load i64, i64* %__s2_len49, align 8, !dbg !6147, !tbaa !2742
  %cmp52 = icmp ult i64 %46, 4, !dbg !6148
  br i1 %cmp52, label %cond.true.54, label %cond.false.97, !dbg !6149

cond.true.54:                                     ; preds = %land.lhs.true.51
  %47 = bitcast i8** %__s156 to i8*, !dbg !6150
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !6150
  call void @llvm.dbg.declare(metadata i8** %__s156, metadata !1228, metadata !2613), !dbg !6152
  %48 = load i8*, i8** %name, align 8, !dbg !6153, !tbaa !2620
  store i8* %48, i8** %__s156, align 8, !dbg !6152, !tbaa !2620
  %49 = bitcast i32* %__result58 to i8*, !dbg !6154
  call void @llvm.lifetime.start(i64 4, i8* %49) #1, !dbg !6154
  call void @llvm.dbg.declare(metadata i32* %__result58, metadata !1230, metadata !2613), !dbg !6155
  %50 = load i8*, i8** %__s156, align 8, !dbg !6156, !tbaa !2620
  %arrayidx59 = getelementptr i8, i8* %50, i64 0, !dbg !6156
  %51 = load i8, i8* %arrayidx59, align 1, !dbg !6156, !tbaa !2756
  %conv60 = zext i8 %51 to i32, !dbg !6156
  %52 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), align 1, !dbg !6157, !tbaa !2756
  %conv61 = zext i8 %52 to i32, !dbg !6157
  %sub62 = sub i32 %conv60, %conv61, !dbg !6158
  store i32 %sub62, i32* %__result58, align 4, !dbg !6155, !tbaa !2759
  %53 = load i64, i64* %__s2_len49, align 8, !dbg !6159, !tbaa !2742
  %cmp63 = icmp ugt i64 %53, 0, !dbg !6161
  br i1 %cmp63, label %land.lhs.true.65, label %if.end.95, !dbg !6162

land.lhs.true.65:                                 ; preds = %cond.true.54
  %54 = load i32, i32* %__result58, align 4, !dbg !6163, !tbaa !2759
  %cmp66 = icmp eq i32 %54, 0, !dbg !6165
  br i1 %cmp66, label %if.then.68, label %if.end.95, !dbg !6166

if.then.68:                                       ; preds = %land.lhs.true.65
  %55 = load i8*, i8** %__s156, align 8, !dbg !6167, !tbaa !2620
  %arrayidx69 = getelementptr i8, i8* %55, i64 1, !dbg !6167
  %56 = load i8, i8* %arrayidx69, align 1, !dbg !6167, !tbaa !2756
  %conv70 = zext i8 %56 to i32, !dbg !6167
  %57 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 1), align 1, !dbg !6170, !tbaa !2756
  %conv71 = zext i8 %57 to i32, !dbg !6170
  %sub72 = sub i32 %conv70, %conv71, !dbg !6171
  store i32 %sub72, i32* %__result58, align 4, !dbg !6172, !tbaa !2759
  %58 = load i64, i64* %__s2_len49, align 8, !dbg !6173, !tbaa !2742
  %cmp73 = icmp ugt i64 %58, 1, !dbg !6175
  br i1 %cmp73, label %land.lhs.true.75, label %if.end.94, !dbg !6176

land.lhs.true.75:                                 ; preds = %if.then.68
  %59 = load i32, i32* %__result58, align 4, !dbg !6177, !tbaa !2759
  %cmp76 = icmp eq i32 %59, 0, !dbg !6179
  br i1 %cmp76, label %if.then.78, label %if.end.94, !dbg !6180

if.then.78:                                       ; preds = %land.lhs.true.75
  %60 = load i8*, i8** %__s156, align 8, !dbg !6181, !tbaa !2620
  %arrayidx79 = getelementptr i8, i8* %60, i64 2, !dbg !6181
  %61 = load i8, i8* %arrayidx79, align 1, !dbg !6181, !tbaa !2756
  %conv80 = zext i8 %61 to i32, !dbg !6181
  %62 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 2), align 1, !dbg !6184, !tbaa !2756
  %conv81 = zext i8 %62 to i32, !dbg !6184
  %sub82 = sub i32 %conv80, %conv81, !dbg !6185
  store i32 %sub82, i32* %__result58, align 4, !dbg !6186, !tbaa !2759
  %63 = load i64, i64* %__s2_len49, align 8, !dbg !6187, !tbaa !2742
  %cmp83 = icmp ugt i64 %63, 2, !dbg !6189
  br i1 %cmp83, label %land.lhs.true.85, label %if.end.93, !dbg !6190

land.lhs.true.85:                                 ; preds = %if.then.78
  %64 = load i32, i32* %__result58, align 4, !dbg !6191, !tbaa !2759
  %cmp86 = icmp eq i32 %64, 0, !dbg !6193
  br i1 %cmp86, label %if.then.88, label %if.end.93, !dbg !6194

if.then.88:                                       ; preds = %land.lhs.true.85
  %65 = load i8*, i8** %__s156, align 8, !dbg !6195, !tbaa !2620
  %arrayidx89 = getelementptr i8, i8* %65, i64 3, !dbg !6195
  %66 = load i8, i8* %arrayidx89, align 1, !dbg !6195, !tbaa !2756
  %conv90 = zext i8 %66 to i32, !dbg !6195
  %67 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 3), align 1, !dbg !6197, !tbaa !2756
  %conv91 = zext i8 %67 to i32, !dbg !6197
  %sub92 = sub i32 %conv90, %conv91, !dbg !6198
  store i32 %sub92, i32* %__result58, align 4, !dbg !6199, !tbaa !2759
  br label %if.end.93, !dbg !6200

if.end.93:                                        ; preds = %if.then.88, %land.lhs.true.85, %if.then.78
  br label %if.end.94, !dbg !6201

if.end.94:                                        ; preds = %if.end.93, %land.lhs.true.75, %if.then.68
  br label %if.end.95, !dbg !6205

if.end.95:                                        ; preds = %if.end.94, %land.lhs.true.65, %cond.true.54
  %68 = load i32, i32* %__result58, align 4, !dbg !6209, !tbaa !2759
  store i32 %68, i32* %tmp96, !dbg !6213, !tbaa !2759
  %69 = bitcast i32* %__result58 to i8*, !dbg !6214
  call void @llvm.lifetime.end(i64 4, i8* %69) #1, !dbg !6214
  %70 = bitcast i8** %__s156 to i8*, !dbg !6214
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !6214
  %71 = load i32, i32* %tmp96, !dbg !6215, !tbaa !2759
  br label %cond.end.99, !dbg !6149

cond.false.97:                                    ; preds = %land.lhs.true.51, %if.else
  %72 = load i8*, i8** %name, align 8, !dbg !6216, !tbaa !2620
  %call98 = call i32 @strcmp(i8* %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0)) #1, !dbg !6219
  br label %cond.end.99, !dbg !6149

cond.end.99:                                      ; preds = %cond.false.97, %if.end.95
  %cond100 = phi i32 [ %71, %if.end.95 ], [ %call98, %cond.false.97 ], !dbg !6149
  store i32 %cond100, i32* %tmp50, !dbg !6220, !tbaa !2759
  %73 = bitcast i64* %__s2_len49 to i8*, !dbg !6223
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !6223
  %74 = bitcast i64* %__s1_len47 to i8*, !dbg !6223
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !6223
  %75 = load i32, i32* %tmp50, !dbg !6224, !tbaa !2759
  %cmp101 = icmp eq i32 %75, 0, !dbg !6225
  br i1 %cmp101, label %if.then.103, label %if.end.112, !dbg !6226

if.then.103:                                      ; preds = %cond.end.99
  %76 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6227, !tbaa !2620
  %call104 = call %struct._object* @element_get_text(%struct.ElementObject* %76), !dbg !6228
  store %struct._object* %call104, %struct._object** %res, align 8, !dbg !6229, !tbaa !2620
  br label %do.body, !dbg !6230

do.body:                                          ; preds = %if.then.103
  %77 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !6231
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !6231
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !1231, metadata !2613), !dbg !6233
  %78 = load %struct._object*, %struct._object** %res, align 8, !dbg !6234, !tbaa !2620
  store %struct._object* %78, %struct._object** %_py_xincref_tmp, align 8, !dbg !6233, !tbaa !2620
  %79 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !6235, !tbaa !2620
  %cmp106 = icmp ne %struct._object* %79, null, !dbg !6237
  br i1 %cmp106, label %if.then.108, label %if.end.111, !dbg !6238

if.then.108:                                      ; preds = %do.body
  %80 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !6239, !tbaa !2620
  %ob_refcnt109 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !6241
  %81 = load i64, i64* %ob_refcnt109, align 8, !dbg !6242, !tbaa !2631
  %inc110 = add i64 %81, 1, !dbg !6242
  store i64 %inc110, i64* %ob_refcnt109, align 8, !dbg !6242, !tbaa !2631
  br label %if.end.111, !dbg !6243

if.end.111:                                       ; preds = %if.then.108, %do.body
  %82 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !6244
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !6244
  br label %do.cond, !dbg !6247

do.cond:                                          ; preds = %if.end.111
  br label %do.end, !dbg !6248

do.end:                                           ; preds = %do.cond
  %83 = load %struct._object*, %struct._object** %res, align 8, !dbg !6250, !tbaa !2620
  store %struct._object* %83, %struct._object** %retval, !dbg !6251
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6251

if.end.112:                                       ; preds = %cond.end.99
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112
  %84 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6252, !tbaa !2620
  %85 = bitcast %struct.ElementObject* %84 to %struct._object*, !dbg !6253
  %86 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !6254, !tbaa !2620
  %call114 = call %struct._object* @PyObject_GenericGetAttr(%struct._object* %85, %struct._object* %86), !dbg !6255
  store %struct._object* %call114, %struct._object** %res, align 8, !dbg !6256, !tbaa !2620
  %87 = load %struct._object*, %struct._object** %res, align 8, !dbg !6257, !tbaa !2620
  %tobool = icmp ne %struct._object* %87, null, !dbg !6257
  br i1 %tobool, label %if.then.115, label %if.end.116, !dbg !6259

if.then.115:                                      ; preds = %if.end.113
  %88 = load %struct._object*, %struct._object** %res, align 8, !dbg !6260, !tbaa !2620
  store %struct._object* %88, %struct._object** %retval, !dbg !6261
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6261

if.end.116:                                       ; preds = %if.end.113
  %89 = bitcast i64* %__s1_len118 to i8*, !dbg !6262
  call void @llvm.lifetime.start(i64 8, i8* %89) #1, !dbg !6262
  call void @llvm.dbg.declare(metadata i64* %__s1_len118, metadata !1234, metadata !2613), !dbg !6263
  %90 = bitcast i64* %__s2_len120 to i8*, !dbg !6262
  call void @llvm.lifetime.start(i64 8, i8* %90) #1, !dbg !6262
  call void @llvm.dbg.declare(metadata i64* %__s2_len120, metadata !1237, metadata !2613), !dbg !6264
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 1) to i64), i64 ptrtoint ([5 x i8]* @.str.28 to i64)), i64 1), label %land.lhs.true.122, label %cond.false.168, !dbg !6265

land.lhs.true.122:                                ; preds = %if.end.116
  store i64 4, i64* %__s2_len120, align 8, !dbg !6266, !tbaa !2742
  %91 = load i64, i64* %__s2_len120, align 8, !dbg !6268, !tbaa !2742
  %cmp123 = icmp ult i64 %91, 4, !dbg !6269
  br i1 %cmp123, label %cond.true.125, label %cond.false.168, !dbg !6270

cond.true.125:                                    ; preds = %land.lhs.true.122
  %92 = bitcast i8** %__s1127 to i8*, !dbg !6271
  call void @llvm.lifetime.start(i64 8, i8* %92) #1, !dbg !6271
  call void @llvm.dbg.declare(metadata i8** %__s1127, metadata !1238, metadata !2613), !dbg !6273
  %93 = load i8*, i8** %name, align 8, !dbg !6274, !tbaa !2620
  store i8* %93, i8** %__s1127, align 8, !dbg !6273, !tbaa !2620
  %94 = bitcast i32* %__result129 to i8*, !dbg !6275
  call void @llvm.lifetime.start(i64 4, i8* %94) #1, !dbg !6275
  call void @llvm.dbg.declare(metadata i32* %__result129, metadata !1240, metadata !2613), !dbg !6276
  %95 = load i8*, i8** %__s1127, align 8, !dbg !6277, !tbaa !2620
  %arrayidx130 = getelementptr i8, i8* %95, i64 0, !dbg !6277
  %96 = load i8, i8* %arrayidx130, align 1, !dbg !6277, !tbaa !2756
  %conv131 = zext i8 %96 to i32, !dbg !6277
  %97 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), align 1, !dbg !6278, !tbaa !2756
  %conv132 = zext i8 %97 to i32, !dbg !6278
  %sub133 = sub i32 %conv131, %conv132, !dbg !6279
  store i32 %sub133, i32* %__result129, align 4, !dbg !6276, !tbaa !2759
  %98 = load i64, i64* %__s2_len120, align 8, !dbg !6280, !tbaa !2742
  %cmp134 = icmp ugt i64 %98, 0, !dbg !6282
  br i1 %cmp134, label %land.lhs.true.136, label %if.end.166, !dbg !6283

land.lhs.true.136:                                ; preds = %cond.true.125
  %99 = load i32, i32* %__result129, align 4, !dbg !6284, !tbaa !2759
  %cmp137 = icmp eq i32 %99, 0, !dbg !6286
  br i1 %cmp137, label %if.then.139, label %if.end.166, !dbg !6287

if.then.139:                                      ; preds = %land.lhs.true.136
  %100 = load i8*, i8** %__s1127, align 8, !dbg !6288, !tbaa !2620
  %arrayidx140 = getelementptr i8, i8* %100, i64 1, !dbg !6288
  %101 = load i8, i8* %arrayidx140, align 1, !dbg !6288, !tbaa !2756
  %conv141 = zext i8 %101 to i32, !dbg !6288
  %102 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 1), align 1, !dbg !6291, !tbaa !2756
  %conv142 = zext i8 %102 to i32, !dbg !6291
  %sub143 = sub i32 %conv141, %conv142, !dbg !6292
  store i32 %sub143, i32* %__result129, align 4, !dbg !6293, !tbaa !2759
  %103 = load i64, i64* %__s2_len120, align 8, !dbg !6294, !tbaa !2742
  %cmp144 = icmp ugt i64 %103, 1, !dbg !6296
  br i1 %cmp144, label %land.lhs.true.146, label %if.end.165, !dbg !6297

land.lhs.true.146:                                ; preds = %if.then.139
  %104 = load i32, i32* %__result129, align 4, !dbg !6298, !tbaa !2759
  %cmp147 = icmp eq i32 %104, 0, !dbg !6300
  br i1 %cmp147, label %if.then.149, label %if.end.165, !dbg !6301

if.then.149:                                      ; preds = %land.lhs.true.146
  %105 = load i8*, i8** %__s1127, align 8, !dbg !6302, !tbaa !2620
  %arrayidx150 = getelementptr i8, i8* %105, i64 2, !dbg !6302
  %106 = load i8, i8* %arrayidx150, align 1, !dbg !6302, !tbaa !2756
  %conv151 = zext i8 %106 to i32, !dbg !6302
  %107 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 2), align 1, !dbg !6305, !tbaa !2756
  %conv152 = zext i8 %107 to i32, !dbg !6305
  %sub153 = sub i32 %conv151, %conv152, !dbg !6306
  store i32 %sub153, i32* %__result129, align 4, !dbg !6307, !tbaa !2759
  %108 = load i64, i64* %__s2_len120, align 8, !dbg !6308, !tbaa !2742
  %cmp154 = icmp ugt i64 %108, 2, !dbg !6310
  br i1 %cmp154, label %land.lhs.true.156, label %if.end.164, !dbg !6311

land.lhs.true.156:                                ; preds = %if.then.149
  %109 = load i32, i32* %__result129, align 4, !dbg !6312, !tbaa !2759
  %cmp157 = icmp eq i32 %109, 0, !dbg !6314
  br i1 %cmp157, label %if.then.159, label %if.end.164, !dbg !6315

if.then.159:                                      ; preds = %land.lhs.true.156
  %110 = load i8*, i8** %__s1127, align 8, !dbg !6316, !tbaa !2620
  %arrayidx160 = getelementptr i8, i8* %110, i64 3, !dbg !6316
  %111 = load i8, i8* %arrayidx160, align 1, !dbg !6316, !tbaa !2756
  %conv161 = zext i8 %111 to i32, !dbg !6316
  %112 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 3), align 1, !dbg !6318, !tbaa !2756
  %conv162 = zext i8 %112 to i32, !dbg !6318
  %sub163 = sub i32 %conv161, %conv162, !dbg !6319
  store i32 %sub163, i32* %__result129, align 4, !dbg !6320, !tbaa !2759
  br label %if.end.164, !dbg !6321

if.end.164:                                       ; preds = %if.then.159, %land.lhs.true.156, %if.then.149
  br label %if.end.165, !dbg !6322

if.end.165:                                       ; preds = %if.end.164, %land.lhs.true.146, %if.then.139
  br label %if.end.166, !dbg !6326

if.end.166:                                       ; preds = %if.end.165, %land.lhs.true.136, %cond.true.125
  %113 = load i32, i32* %__result129, align 4, !dbg !6330, !tbaa !2759
  store i32 %113, i32* %tmp167, !dbg !6334, !tbaa !2759
  %114 = bitcast i32* %__result129 to i8*, !dbg !6335
  call void @llvm.lifetime.end(i64 4, i8* %114) #1, !dbg !6335
  %115 = bitcast i8** %__s1127 to i8*, !dbg !6335
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !6335
  %116 = load i32, i32* %tmp167, !dbg !6336, !tbaa !2759
  br label %cond.end.170, !dbg !6270

cond.false.168:                                   ; preds = %land.lhs.true.122, %if.end.116
  %117 = load i8*, i8** %name, align 8, !dbg !6337, !tbaa !2620
  %call169 = call i32 @strcmp(i8* %117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0)) #1, !dbg !6340
  br label %cond.end.170, !dbg !6270

cond.end.170:                                     ; preds = %cond.false.168, %if.end.166
  %cond171 = phi i32 [ %116, %if.end.166 ], [ %call169, %cond.false.168 ], !dbg !6270
  store i32 %cond171, i32* %tmp121, !dbg !6341, !tbaa !2759
  %118 = bitcast i64* %__s2_len120 to i8*, !dbg !6344
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !6344
  %119 = bitcast i64* %__s1_len118 to i8*, !dbg !6344
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !6344
  %120 = load i32, i32* %tmp121, !dbg !6345, !tbaa !2759
  %cmp172 = icmp eq i32 %120, 0, !dbg !6346
  br i1 %cmp172, label %if.then.174, label %if.else.176, !dbg !6347

if.then.174:                                      ; preds = %cond.end.170
  call void @PyErr_Clear(), !dbg !6348
  %121 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6350, !tbaa !2620
  %call175 = call %struct._object* @element_get_tail(%struct.ElementObject* %121), !dbg !6351
  store %struct._object* %call175, %struct._object** %res, align 8, !dbg !6352, !tbaa !2620
  br label %if.end.245, !dbg !6353

if.else.176:                                      ; preds = %cond.end.170
  %122 = bitcast i64* %__s1_len178 to i8*, !dbg !6354
  call void @llvm.lifetime.start(i64 8, i8* %122) #1, !dbg !6354
  call void @llvm.dbg.declare(metadata i64* %__s1_len178, metadata !1241, metadata !2613), !dbg !6355
  %123 = bitcast i64* %__s2_len180 to i8*, !dbg !6354
  call void @llvm.lifetime.start(i64 8, i8* %123) #1, !dbg !6354
  call void @llvm.dbg.declare(metadata i64* %__s2_len180, metadata !1244, metadata !2613), !dbg !6356
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.14 to i64)), i64 1), label %land.lhs.true.182, label %cond.false.228, !dbg !6357

land.lhs.true.182:                                ; preds = %if.else.176
  store i64 6, i64* %__s2_len180, align 8, !dbg !6358, !tbaa !2742
  %124 = load i64, i64* %__s2_len180, align 8, !dbg !6360, !tbaa !2742
  %cmp183 = icmp ult i64 %124, 4, !dbg !6361
  br i1 %cmp183, label %cond.true.185, label %cond.false.228, !dbg !6362

cond.true.185:                                    ; preds = %land.lhs.true.182
  %125 = bitcast i8** %__s1187 to i8*, !dbg !6363
  call void @llvm.lifetime.start(i64 8, i8* %125) #1, !dbg !6363
  call void @llvm.dbg.declare(metadata i8** %__s1187, metadata !1245, metadata !2613), !dbg !6365
  %126 = load i8*, i8** %name, align 8, !dbg !6366, !tbaa !2620
  store i8* %126, i8** %__s1187, align 8, !dbg !6365, !tbaa !2620
  %127 = bitcast i32* %__result189 to i8*, !dbg !6367
  call void @llvm.lifetime.start(i64 4, i8* %127) #1, !dbg !6367
  call void @llvm.dbg.declare(metadata i32* %__result189, metadata !1247, metadata !2613), !dbg !6368
  %128 = load i8*, i8** %__s1187, align 8, !dbg !6369, !tbaa !2620
  %arrayidx190 = getelementptr i8, i8* %128, i64 0, !dbg !6369
  %129 = load i8, i8* %arrayidx190, align 1, !dbg !6369, !tbaa !2756
  %conv191 = zext i8 %129 to i32, !dbg !6369
  %130 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), align 1, !dbg !6370, !tbaa !2756
  %conv192 = zext i8 %130 to i32, !dbg !6370
  %sub193 = sub i32 %conv191, %conv192, !dbg !6371
  store i32 %sub193, i32* %__result189, align 4, !dbg !6368, !tbaa !2759
  %131 = load i64, i64* %__s2_len180, align 8, !dbg !6372, !tbaa !2742
  %cmp194 = icmp ugt i64 %131, 0, !dbg !6374
  br i1 %cmp194, label %land.lhs.true.196, label %if.end.226, !dbg !6375

land.lhs.true.196:                                ; preds = %cond.true.185
  %132 = load i32, i32* %__result189, align 4, !dbg !6376, !tbaa !2759
  %cmp197 = icmp eq i32 %132, 0, !dbg !6378
  br i1 %cmp197, label %if.then.199, label %if.end.226, !dbg !6379

if.then.199:                                      ; preds = %land.lhs.true.196
  %133 = load i8*, i8** %__s1187, align 8, !dbg !6380, !tbaa !2620
  %arrayidx200 = getelementptr i8, i8* %133, i64 1, !dbg !6380
  %134 = load i8, i8* %arrayidx200, align 1, !dbg !6380, !tbaa !2756
  %conv201 = zext i8 %134 to i32, !dbg !6380
  %135 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 1), align 1, !dbg !6383, !tbaa !2756
  %conv202 = zext i8 %135 to i32, !dbg !6383
  %sub203 = sub i32 %conv201, %conv202, !dbg !6384
  store i32 %sub203, i32* %__result189, align 4, !dbg !6385, !tbaa !2759
  %136 = load i64, i64* %__s2_len180, align 8, !dbg !6386, !tbaa !2742
  %cmp204 = icmp ugt i64 %136, 1, !dbg !6388
  br i1 %cmp204, label %land.lhs.true.206, label %if.end.225, !dbg !6389

land.lhs.true.206:                                ; preds = %if.then.199
  %137 = load i32, i32* %__result189, align 4, !dbg !6390, !tbaa !2759
  %cmp207 = icmp eq i32 %137, 0, !dbg !6392
  br i1 %cmp207, label %if.then.209, label %if.end.225, !dbg !6393

if.then.209:                                      ; preds = %land.lhs.true.206
  %138 = load i8*, i8** %__s1187, align 8, !dbg !6394, !tbaa !2620
  %arrayidx210 = getelementptr i8, i8* %138, i64 2, !dbg !6394
  %139 = load i8, i8* %arrayidx210, align 1, !dbg !6394, !tbaa !2756
  %conv211 = zext i8 %139 to i32, !dbg !6394
  %140 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 2), align 1, !dbg !6397, !tbaa !2756
  %conv212 = zext i8 %140 to i32, !dbg !6397
  %sub213 = sub i32 %conv211, %conv212, !dbg !6398
  store i32 %sub213, i32* %__result189, align 4, !dbg !6399, !tbaa !2759
  %141 = load i64, i64* %__s2_len180, align 8, !dbg !6400, !tbaa !2742
  %cmp214 = icmp ugt i64 %141, 2, !dbg !6402
  br i1 %cmp214, label %land.lhs.true.216, label %if.end.224, !dbg !6403

land.lhs.true.216:                                ; preds = %if.then.209
  %142 = load i32, i32* %__result189, align 4, !dbg !6404, !tbaa !2759
  %cmp217 = icmp eq i32 %142, 0, !dbg !6406
  br i1 %cmp217, label %if.then.219, label %if.end.224, !dbg !6407

if.then.219:                                      ; preds = %land.lhs.true.216
  %143 = load i8*, i8** %__s1187, align 8, !dbg !6408, !tbaa !2620
  %arrayidx220 = getelementptr i8, i8* %143, i64 3, !dbg !6408
  %144 = load i8, i8* %arrayidx220, align 1, !dbg !6408, !tbaa !2756
  %conv221 = zext i8 %144 to i32, !dbg !6408
  %145 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 3), align 1, !dbg !6410, !tbaa !2756
  %conv222 = zext i8 %145 to i32, !dbg !6410
  %sub223 = sub i32 %conv221, %conv222, !dbg !6411
  store i32 %sub223, i32* %__result189, align 4, !dbg !6412, !tbaa !2759
  br label %if.end.224, !dbg !6413

if.end.224:                                       ; preds = %if.then.219, %land.lhs.true.216, %if.then.209
  br label %if.end.225, !dbg !6414

if.end.225:                                       ; preds = %if.end.224, %land.lhs.true.206, %if.then.199
  br label %if.end.226, !dbg !6418

if.end.226:                                       ; preds = %if.end.225, %land.lhs.true.196, %cond.true.185
  %146 = load i32, i32* %__result189, align 4, !dbg !6422, !tbaa !2759
  store i32 %146, i32* %tmp227, !dbg !6426, !tbaa !2759
  %147 = bitcast i32* %__result189 to i8*, !dbg !6427
  call void @llvm.lifetime.end(i64 4, i8* %147) #1, !dbg !6427
  %148 = bitcast i8** %__s1187 to i8*, !dbg !6427
  call void @llvm.lifetime.end(i64 8, i8* %148) #1, !dbg !6427
  %149 = load i32, i32* %tmp227, !dbg !6428, !tbaa !2759
  br label %cond.end.230, !dbg !6362

cond.false.228:                                   ; preds = %land.lhs.true.182, %if.else.176
  %150 = load i8*, i8** %name, align 8, !dbg !6429, !tbaa !2620
  %call229 = call i32 @strcmp(i8* %150, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0)) #1, !dbg !6432
  br label %cond.end.230, !dbg !6362

cond.end.230:                                     ; preds = %cond.false.228, %if.end.226
  %cond231 = phi i32 [ %149, %if.end.226 ], [ %call229, %cond.false.228 ], !dbg !6362
  store i32 %cond231, i32* %tmp181, !dbg !6433, !tbaa !2759
  %151 = bitcast i64* %__s2_len180 to i8*, !dbg !6436
  call void @llvm.lifetime.end(i64 8, i8* %151) #1, !dbg !6436
  %152 = bitcast i64* %__s1_len178 to i8*, !dbg !6436
  call void @llvm.lifetime.end(i64 8, i8* %152) #1, !dbg !6436
  %153 = load i32, i32* %tmp181, !dbg !6437, !tbaa !2759
  %cmp232 = icmp eq i32 %153, 0, !dbg !6438
  br i1 %cmp232, label %if.then.234, label %if.end.244, !dbg !6439

if.then.234:                                      ; preds = %cond.end.230
  call void @PyErr_Clear(), !dbg !6440
  %154 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6442, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %154, i32 0, i32 4, !dbg !6444
  %155 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !6444, !tbaa !3362
  %tobool235 = icmp ne %struct.ElementObjectExtra* %155, null, !dbg !6442
  br i1 %tobool235, label %if.end.242, label %if.then.236, !dbg !6445

if.then.236:                                      ; preds = %if.then.234
  %156 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6446, !tbaa !2620
  %call237 = call i32 @create_extra(%struct.ElementObject* %156, %struct._object* null), !dbg !6449
  %cmp238 = icmp slt i32 %call237, 0, !dbg !6450
  br i1 %cmp238, label %if.then.240, label %if.end.241, !dbg !6451

if.then.240:                                      ; preds = %if.then.236
  store %struct._object* null, %struct._object** %retval, !dbg !6452
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6452

if.end.241:                                       ; preds = %if.then.236
  br label %if.end.242, !dbg !6453

if.end.242:                                       ; preds = %if.end.241, %if.then.234
  %157 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6454, !tbaa !2620
  %call243 = call %struct._object* @element_get_attrib(%struct.ElementObject* %157), !dbg !6455
  store %struct._object* %call243, %struct._object** %res, align 8, !dbg !6456, !tbaa !2620
  br label %if.end.244, !dbg !6457

if.end.244:                                       ; preds = %if.end.242, %cond.end.230
  br label %if.end.245

if.end.245:                                       ; preds = %if.end.244, %if.then.174
  %158 = load %struct._object*, %struct._object** %res, align 8, !dbg !6458, !tbaa !2620
  %tobool246 = icmp ne %struct._object* %158, null, !dbg !6458
  br i1 %tobool246, label %if.end.248, label %if.then.247, !dbg !6460

if.then.247:                                      ; preds = %if.end.245
  store %struct._object* null, %struct._object** %retval, !dbg !6461
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6461

if.end.248:                                       ; preds = %if.end.245
  %159 = load %struct._object*, %struct._object** %res, align 8, !dbg !6462, !tbaa !2620
  %ob_refcnt249 = getelementptr inbounds %struct._object, %struct._object* %159, i32 0, i32 0, !dbg !6463
  %160 = load i64, i64* %ob_refcnt249, align 8, !dbg !6464, !tbaa !2631
  %inc250 = add i64 %160, 1, !dbg !6464
  store i64 %inc250, i64* %ob_refcnt249, align 8, !dbg !6464, !tbaa !2631
  %161 = load %struct._object*, %struct._object** %res, align 8, !dbg !6465, !tbaa !2620
  store %struct._object* %161, %struct._object** %retval, !dbg !6466
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6466

cleanup:                                          ; preds = %if.end.248, %if.then.247, %if.then.240, %if.then.115, %do.end, %if.then.45, %if.then.2
  %162 = bitcast i8** %name to i8*, !dbg !6467
  call void @llvm.lifetime.end(i64 8, i8* %162) #1, !dbg !6467
  %163 = bitcast %struct._object** %res to i8*, !dbg !6467
  call void @llvm.lifetime.end(i64 8, i8* %163) #1, !dbg !6467
  %164 = load %struct._object*, %struct._object** %retval, !dbg !6467
  ret %struct._object* %164, !dbg !6467
}

; Function Attrs: nounwind uwtable
define internal i32 @element_setattro(%struct.ElementObject* %self, %struct._object* %nameobj, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %nameobj.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp41 = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %__s1_len57 = alloca i64, align 8
  %__s2_len59 = alloca i64, align 8
  %tmp60 = alloca i32, align 4
  %__s166 = alloca i8*, align 8
  %__result68 = alloca i32, align 4
  %tmp106 = alloca i32, align 4
  %_py_decref_tmp116 = alloca %struct._object*, align 8
  %__s1_len135 = alloca i64, align 8
  %__s2_len137 = alloca i64, align 8
  %tmp138 = alloca i32, align 4
  %__s1144 = alloca i8*, align 8
  %__result146 = alloca i32, align 4
  %tmp184 = alloca i32, align 4
  %_py_decref_tmp194 = alloca %struct._object*, align 8
  %__s1_len213 = alloca i64, align 8
  %__s2_len215 = alloca i64, align 8
  %tmp216 = alloca i32, align 4
  %__s1222 = alloca i8*, align 8
  %__result224 = alloca i32, align 4
  %tmp262 = alloca i32, align 4
  %_py_decref_tmp279 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1260, metadata !2613), !dbg !6468
  store %struct._object* %nameobj, %struct._object** %nameobj.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %nameobj.addr, metadata !1261, metadata !2613), !dbg !6469
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1262, metadata !2613), !dbg !6470
  %0 = bitcast i8** %name to i8*, !dbg !6471
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6471
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1263, metadata !2613), !dbg !6472
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i8** %name, align 8, !dbg !6472, !tbaa !2620
  %1 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !6473, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !6475
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6475, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19, !dbg !6476
  %3 = load i64, i64* %tp_flags, align 8, !dbg !6476, !tbaa !3263
  %and = and i64 %3, 268435456, !dbg !6477
  %cmp = icmp ne i64 %and, 0, !dbg !6478
  br i1 %cmp, label %if.then, label %if.end, !dbg !6479

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !6480, !tbaa !2620
  %call = call i8* @PyUnicode_AsUTF8(%struct._object* %4), !dbg !6481
  store i8* %call, i8** %name, align 8, !dbg !6482, !tbaa !2620
  br label %if.end, !dbg !6483

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %name, align 8, !dbg !6484, !tbaa !2620
  %cmp1 = icmp eq i8* %5, null, !dbg !6486
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !6487

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !6488
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6488

if.end.3:                                         ; preds = %if.end
  %6 = bitcast i64* %__s1_len to i8*, !dbg !6489
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !6489
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !1264, metadata !2613), !dbg !6490
  %7 = bitcast i64* %__s2_len to i8*, !dbg !6489
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !6489
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !1267, metadata !2613), !dbg !6491
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 1) to i64), i64 ptrtoint ([4 x i8]* @.str.44 to i64)), i64 1), label %land.lhs.true, label %cond.false, !dbg !6492

land.lhs.true:                                    ; preds = %if.end.3
  store i64 3, i64* %__s2_len, align 8, !dbg !6493, !tbaa !2742
  %8 = load i64, i64* %__s2_len, align 8, !dbg !6495, !tbaa !2742
  %cmp4 = icmp ult i64 %8, 4, !dbg !6496
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !6497

cond.true:                                        ; preds = %land.lhs.true
  %9 = bitcast i8** %__s1 to i8*, !dbg !6498
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !6498
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !1268, metadata !2613), !dbg !6500
  %10 = load i8*, i8** %name, align 8, !dbg !6501, !tbaa !2620
  store i8* %10, i8** %__s1, align 8, !dbg !6500, !tbaa !2620
  %11 = bitcast i32* %__result to i8*, !dbg !6502
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !6502
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !1270, metadata !2613), !dbg !6503
  %12 = load i8*, i8** %__s1, align 8, !dbg !6504, !tbaa !2620
  %arrayidx = getelementptr i8, i8* %12, i64 0, !dbg !6504
  %13 = load i8, i8* %arrayidx, align 1, !dbg !6504, !tbaa !2756
  %conv = zext i8 %13 to i32, !dbg !6504
  %14 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), align 1, !dbg !6505, !tbaa !2756
  %conv7 = zext i8 %14 to i32, !dbg !6505
  %sub = sub i32 %conv, %conv7, !dbg !6506
  store i32 %sub, i32* %__result, align 4, !dbg !6503, !tbaa !2759
  %15 = load i64, i64* %__s2_len, align 8, !dbg !6507, !tbaa !2742
  %cmp8 = icmp ugt i64 %15, 0, !dbg !6509
  br i1 %cmp8, label %land.lhs.true.10, label %if.end.40, !dbg !6510

land.lhs.true.10:                                 ; preds = %cond.true
  %16 = load i32, i32* %__result, align 4, !dbg !6511, !tbaa !2759
  %cmp11 = icmp eq i32 %16, 0, !dbg !6513
  br i1 %cmp11, label %if.then.13, label %if.end.40, !dbg !6514

if.then.13:                                       ; preds = %land.lhs.true.10
  %17 = load i8*, i8** %__s1, align 8, !dbg !6515, !tbaa !2620
  %arrayidx14 = getelementptr i8, i8* %17, i64 1, !dbg !6515
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !6515, !tbaa !2756
  %conv15 = zext i8 %18 to i32, !dbg !6515
  %19 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 1), align 1, !dbg !6518, !tbaa !2756
  %conv16 = zext i8 %19 to i32, !dbg !6518
  %sub17 = sub i32 %conv15, %conv16, !dbg !6519
  store i32 %sub17, i32* %__result, align 4, !dbg !6520, !tbaa !2759
  %20 = load i64, i64* %__s2_len, align 8, !dbg !6521, !tbaa !2742
  %cmp18 = icmp ugt i64 %20, 1, !dbg !6523
  br i1 %cmp18, label %land.lhs.true.20, label %if.end.39, !dbg !6524

land.lhs.true.20:                                 ; preds = %if.then.13
  %21 = load i32, i32* %__result, align 4, !dbg !6525, !tbaa !2759
  %cmp21 = icmp eq i32 %21, 0, !dbg !6527
  br i1 %cmp21, label %if.then.23, label %if.end.39, !dbg !6528

if.then.23:                                       ; preds = %land.lhs.true.20
  %22 = load i8*, i8** %__s1, align 8, !dbg !6529, !tbaa !2620
  %arrayidx24 = getelementptr i8, i8* %22, i64 2, !dbg !6529
  %23 = load i8, i8* %arrayidx24, align 1, !dbg !6529, !tbaa !2756
  %conv25 = zext i8 %23 to i32, !dbg !6529
  %24 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 2), align 1, !dbg !6532, !tbaa !2756
  %conv26 = zext i8 %24 to i32, !dbg !6532
  %sub27 = sub i32 %conv25, %conv26, !dbg !6533
  store i32 %sub27, i32* %__result, align 4, !dbg !6534, !tbaa !2759
  %25 = load i64, i64* %__s2_len, align 8, !dbg !6535, !tbaa !2742
  %cmp28 = icmp ugt i64 %25, 2, !dbg !6537
  br i1 %cmp28, label %land.lhs.true.30, label %if.end.38, !dbg !6538

land.lhs.true.30:                                 ; preds = %if.then.23
  %26 = load i32, i32* %__result, align 4, !dbg !6539, !tbaa !2759
  %cmp31 = icmp eq i32 %26, 0, !dbg !6541
  br i1 %cmp31, label %if.then.33, label %if.end.38, !dbg !6542

if.then.33:                                       ; preds = %land.lhs.true.30
  %27 = load i8*, i8** %__s1, align 8, !dbg !6543, !tbaa !2620
  %arrayidx34 = getelementptr i8, i8* %27, i64 3, !dbg !6543
  %28 = load i8, i8* %arrayidx34, align 1, !dbg !6543, !tbaa !2756
  %conv35 = zext i8 %28 to i32, !dbg !6543
  %29 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i64 3), align 1, !dbg !6545, !tbaa !2756
  %conv36 = zext i8 %29 to i32, !dbg !6545
  %sub37 = sub i32 %conv35, %conv36, !dbg !6546
  store i32 %sub37, i32* %__result, align 4, !dbg !6547, !tbaa !2759
  br label %if.end.38, !dbg !6548

if.end.38:                                        ; preds = %if.then.33, %land.lhs.true.30, %if.then.23
  br label %if.end.39, !dbg !6549

if.end.39:                                        ; preds = %if.end.38, %land.lhs.true.20, %if.then.13
  br label %if.end.40, !dbg !6553

if.end.40:                                        ; preds = %if.end.39, %land.lhs.true.10, %cond.true
  %30 = load i32, i32* %__result, align 4, !dbg !6557, !tbaa !2759
  store i32 %30, i32* %tmp41, !dbg !6561, !tbaa !2759
  %31 = bitcast i32* %__result to i8*, !dbg !6562
  call void @llvm.lifetime.end(i64 4, i8* %31) #1, !dbg !6562
  %32 = bitcast i8** %__s1 to i8*, !dbg !6562
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !6562
  %33 = load i32, i32* %tmp41, !dbg !6563, !tbaa !2759
  br label %cond.end, !dbg !6497

cond.false:                                       ; preds = %land.lhs.true, %if.end.3
  %34 = load i8*, i8** %name, align 8, !dbg !6564, !tbaa !2620
  %call42 = call i32 @strcmp(i8* %34, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0)) #1, !dbg !6567
  br label %cond.end, !dbg !6497

cond.end:                                         ; preds = %cond.false, %if.end.40
  %cond = phi i32 [ %33, %if.end.40 ], [ %call42, %cond.false ], !dbg !6497
  store i32 %cond, i32* %tmp, !dbg !6568, !tbaa !2759
  %35 = bitcast i64* %__s2_len to i8*, !dbg !6571
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !6571
  %36 = bitcast i64* %__s1_len to i8*, !dbg !6571
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !6571
  %37 = load i32, i32* %tmp, !dbg !6572, !tbaa !2759
  %cmp43 = icmp eq i32 %37, 0, !dbg !6573
  br i1 %cmp43, label %if.then.45, label %if.else.55, !dbg !6574

if.then.45:                                       ; preds = %cond.end
  br label %do.body, !dbg !6575

do.body:                                          ; preds = %if.then.45
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6576
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !6576
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1271, metadata !2613), !dbg !6578
  %39 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6579, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %39, i32 0, i32 1, !dbg !6580
  %40 = load %struct._object*, %struct._object** %tag, align 8, !dbg !6580, !tbaa !3371
  store %struct._object* %40, %struct._object** %_py_decref_tmp, align 8, !dbg !6578, !tbaa !2620
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6581, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !6583
  %42 = load i64, i64* %ob_refcnt, align 8, !dbg !6584, !tbaa !2631
  %dec = add i64 %42, -1, !dbg !6584
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6584, !tbaa !2631
  %cmp47 = icmp ne i64 %dec, 0, !dbg !6585
  br i1 %cmp47, label %if.then.49, label %if.else, !dbg !6586

if.then.49:                                       ; preds = %do.body
  br label %if.end.51, !dbg !6587

if.else:                                          ; preds = %do.body
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6589, !tbaa !2620
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !6591
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !6591, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !6592
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6592, !tbaa !2705
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6593, !tbaa !2620
  call void %45(%struct._object* %46), !dbg !6594
  br label %if.end.51

if.end.51:                                        ; preds = %if.else, %if.then.49
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6595
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !6595
  br label %do.cond, !dbg !6597

do.cond:                                          ; preds = %if.end.51
  br label %do.end, !dbg !6598

do.end:                                           ; preds = %do.cond
  %48 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !6600, !tbaa !2620
  %49 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6601, !tbaa !2620
  %tag52 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %49, i32 0, i32 1, !dbg !6602
  store %struct._object* %48, %struct._object** %tag52, align 8, !dbg !6603, !tbaa !3371
  %50 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6604, !tbaa !2620
  %tag53 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %50, i32 0, i32 1, !dbg !6605
  %51 = load %struct._object*, %struct._object** %tag53, align 8, !dbg !6605, !tbaa !3371
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !6606
  %52 = load i64, i64* %ob_refcnt54, align 8, !dbg !6607, !tbaa !2631
  %inc = add i64 %52, 1, !dbg !6607
  store i64 %inc, i64* %ob_refcnt54, align 8, !dbg !6607, !tbaa !2631
  br label %if.end.302, !dbg !6608

if.else.55:                                       ; preds = %cond.end
  %53 = bitcast i64* %__s1_len57 to i8*, !dbg !6609
  call void @llvm.lifetime.start(i64 8, i8* %53) #1, !dbg !6609
  call void @llvm.dbg.declare(metadata i64* %__s1_len57, metadata !1274, metadata !2613), !dbg !6610
  %54 = bitcast i64* %__s2_len59 to i8*, !dbg !6609
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !6609
  call void @llvm.dbg.declare(metadata i64* %__s2_len59, metadata !1277, metadata !2613), !dbg !6611
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 1) to i64), i64 ptrtoint ([5 x i8]* @.str.27 to i64)), i64 1), label %land.lhs.true.61, label %cond.false.107, !dbg !6612

land.lhs.true.61:                                 ; preds = %if.else.55
  store i64 4, i64* %__s2_len59, align 8, !dbg !6613, !tbaa !2742
  %55 = load i64, i64* %__s2_len59, align 8, !dbg !6615, !tbaa !2742
  %cmp62 = icmp ult i64 %55, 4, !dbg !6616
  br i1 %cmp62, label %cond.true.64, label %cond.false.107, !dbg !6617

cond.true.64:                                     ; preds = %land.lhs.true.61
  %56 = bitcast i8** %__s166 to i8*, !dbg !6618
  call void @llvm.lifetime.start(i64 8, i8* %56) #1, !dbg !6618
  call void @llvm.dbg.declare(metadata i8** %__s166, metadata !1278, metadata !2613), !dbg !6620
  %57 = load i8*, i8** %name, align 8, !dbg !6621, !tbaa !2620
  store i8* %57, i8** %__s166, align 8, !dbg !6620, !tbaa !2620
  %58 = bitcast i32* %__result68 to i8*, !dbg !6622
  call void @llvm.lifetime.start(i64 4, i8* %58) #1, !dbg !6622
  call void @llvm.dbg.declare(metadata i32* %__result68, metadata !1280, metadata !2613), !dbg !6623
  %59 = load i8*, i8** %__s166, align 8, !dbg !6624, !tbaa !2620
  %arrayidx69 = getelementptr i8, i8* %59, i64 0, !dbg !6624
  %60 = load i8, i8* %arrayidx69, align 1, !dbg !6624, !tbaa !2756
  %conv70 = zext i8 %60 to i32, !dbg !6624
  %61 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), align 1, !dbg !6625, !tbaa !2756
  %conv71 = zext i8 %61 to i32, !dbg !6625
  %sub72 = sub i32 %conv70, %conv71, !dbg !6626
  store i32 %sub72, i32* %__result68, align 4, !dbg !6623, !tbaa !2759
  %62 = load i64, i64* %__s2_len59, align 8, !dbg !6627, !tbaa !2742
  %cmp73 = icmp ugt i64 %62, 0, !dbg !6629
  br i1 %cmp73, label %land.lhs.true.75, label %if.end.105, !dbg !6630

land.lhs.true.75:                                 ; preds = %cond.true.64
  %63 = load i32, i32* %__result68, align 4, !dbg !6631, !tbaa !2759
  %cmp76 = icmp eq i32 %63, 0, !dbg !6633
  br i1 %cmp76, label %if.then.78, label %if.end.105, !dbg !6634

if.then.78:                                       ; preds = %land.lhs.true.75
  %64 = load i8*, i8** %__s166, align 8, !dbg !6635, !tbaa !2620
  %arrayidx79 = getelementptr i8, i8* %64, i64 1, !dbg !6635
  %65 = load i8, i8* %arrayidx79, align 1, !dbg !6635, !tbaa !2756
  %conv80 = zext i8 %65 to i32, !dbg !6635
  %66 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 1), align 1, !dbg !6638, !tbaa !2756
  %conv81 = zext i8 %66 to i32, !dbg !6638
  %sub82 = sub i32 %conv80, %conv81, !dbg !6639
  store i32 %sub82, i32* %__result68, align 4, !dbg !6640, !tbaa !2759
  %67 = load i64, i64* %__s2_len59, align 8, !dbg !6641, !tbaa !2742
  %cmp83 = icmp ugt i64 %67, 1, !dbg !6643
  br i1 %cmp83, label %land.lhs.true.85, label %if.end.104, !dbg !6644

land.lhs.true.85:                                 ; preds = %if.then.78
  %68 = load i32, i32* %__result68, align 4, !dbg !6645, !tbaa !2759
  %cmp86 = icmp eq i32 %68, 0, !dbg !6647
  br i1 %cmp86, label %if.then.88, label %if.end.104, !dbg !6648

if.then.88:                                       ; preds = %land.lhs.true.85
  %69 = load i8*, i8** %__s166, align 8, !dbg !6649, !tbaa !2620
  %arrayidx89 = getelementptr i8, i8* %69, i64 2, !dbg !6649
  %70 = load i8, i8* %arrayidx89, align 1, !dbg !6649, !tbaa !2756
  %conv90 = zext i8 %70 to i32, !dbg !6649
  %71 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 2), align 1, !dbg !6652, !tbaa !2756
  %conv91 = zext i8 %71 to i32, !dbg !6652
  %sub92 = sub i32 %conv90, %conv91, !dbg !6653
  store i32 %sub92, i32* %__result68, align 4, !dbg !6654, !tbaa !2759
  %72 = load i64, i64* %__s2_len59, align 8, !dbg !6655, !tbaa !2742
  %cmp93 = icmp ugt i64 %72, 2, !dbg !6657
  br i1 %cmp93, label %land.lhs.true.95, label %if.end.103, !dbg !6658

land.lhs.true.95:                                 ; preds = %if.then.88
  %73 = load i32, i32* %__result68, align 4, !dbg !6659, !tbaa !2759
  %cmp96 = icmp eq i32 %73, 0, !dbg !6661
  br i1 %cmp96, label %if.then.98, label %if.end.103, !dbg !6662

if.then.98:                                       ; preds = %land.lhs.true.95
  %74 = load i8*, i8** %__s166, align 8, !dbg !6663, !tbaa !2620
  %arrayidx99 = getelementptr i8, i8* %74, i64 3, !dbg !6663
  %75 = load i8, i8* %arrayidx99, align 1, !dbg !6663, !tbaa !2756
  %conv100 = zext i8 %75 to i32, !dbg !6663
  %76 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i64 3), align 1, !dbg !6665, !tbaa !2756
  %conv101 = zext i8 %76 to i32, !dbg !6665
  %sub102 = sub i32 %conv100, %conv101, !dbg !6666
  store i32 %sub102, i32* %__result68, align 4, !dbg !6667, !tbaa !2759
  br label %if.end.103, !dbg !6668

if.end.103:                                       ; preds = %if.then.98, %land.lhs.true.95, %if.then.88
  br label %if.end.104, !dbg !6669

if.end.104:                                       ; preds = %if.end.103, %land.lhs.true.85, %if.then.78
  br label %if.end.105, !dbg !6673

if.end.105:                                       ; preds = %if.end.104, %land.lhs.true.75, %cond.true.64
  %77 = load i32, i32* %__result68, align 4, !dbg !6677, !tbaa !2759
  store i32 %77, i32* %tmp106, !dbg !6681, !tbaa !2759
  %78 = bitcast i32* %__result68 to i8*, !dbg !6682
  call void @llvm.lifetime.end(i64 4, i8* %78) #1, !dbg !6682
  %79 = bitcast i8** %__s166 to i8*, !dbg !6682
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !6682
  %80 = load i32, i32* %tmp106, !dbg !6683, !tbaa !2759
  br label %cond.end.109, !dbg !6617

cond.false.107:                                   ; preds = %land.lhs.true.61, %if.else.55
  %81 = load i8*, i8** %name, align 8, !dbg !6684, !tbaa !2620
  %call108 = call i32 @strcmp(i8* %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0)) #1, !dbg !6687
  br label %cond.end.109, !dbg !6617

cond.end.109:                                     ; preds = %cond.false.107, %if.end.105
  %cond110 = phi i32 [ %80, %if.end.105 ], [ %call108, %cond.false.107 ], !dbg !6617
  store i32 %cond110, i32* %tmp60, !dbg !6688, !tbaa !2759
  %82 = bitcast i64* %__s2_len59 to i8*, !dbg !6691
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !6691
  %83 = bitcast i64* %__s1_len57 to i8*, !dbg !6691
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !6691
  %84 = load i32, i32* %tmp60, !dbg !6692, !tbaa !2759
  %cmp111 = icmp eq i32 %84, 0, !dbg !6693
  br i1 %cmp111, label %if.then.113, label %if.else.133, !dbg !6694

if.then.113:                                      ; preds = %cond.end.109
  br label %do.body.114, !dbg !6695

do.body.114:                                      ; preds = %if.then.113
  %85 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !6696
  call void @llvm.lifetime.start(i64 8, i8* %85) #1, !dbg !6696
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp116, metadata !1281, metadata !2613), !dbg !6698
  %86 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6699, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %86, i32 0, i32 2, !dbg !6700
  %87 = load %struct._object*, %struct._object** %text, align 8, !dbg !6700, !tbaa !3376
  %88 = ptrtoint %struct._object* %87 to i64, !dbg !6701
  %and117 = and i64 %88, -2, !dbg !6702
  %89 = inttoptr i64 %and117 to %struct._object*, !dbg !6703
  store %struct._object* %89, %struct._object** %_py_decref_tmp116, align 8, !dbg !6698, !tbaa !2620
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !6704, !tbaa !2620
  %ob_refcnt118 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 0, !dbg !6706
  %91 = load i64, i64* %ob_refcnt118, align 8, !dbg !6707, !tbaa !2631
  %dec119 = add i64 %91, -1, !dbg !6707
  store i64 %dec119, i64* %ob_refcnt118, align 8, !dbg !6707, !tbaa !2631
  %cmp120 = icmp ne i64 %dec119, 0, !dbg !6708
  br i1 %cmp120, label %if.then.122, label %if.else.123, !dbg !6709

if.then.122:                                      ; preds = %do.body.114
  br label %if.end.126, !dbg !6710

if.else.123:                                      ; preds = %do.body.114
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !6712, !tbaa !2620
  %ob_type124 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 1, !dbg !6714
  %93 = load %struct._typeobject*, %struct._typeobject** %ob_type124, align 8, !dbg !6714, !tbaa !2703
  %tp_dealloc125 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %93, i32 0, i32 4, !dbg !6715
  %94 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc125, align 8, !dbg !6715, !tbaa !2705
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !6716, !tbaa !2620
  call void %94(%struct._object* %95), !dbg !6717
  br label %if.end.126

if.end.126:                                       ; preds = %if.else.123, %if.then.122
  %96 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !6718
  call void @llvm.lifetime.end(i64 8, i8* %96) #1, !dbg !6718
  br label %do.cond.127, !dbg !6720

do.cond.127:                                      ; preds = %if.end.126
  br label %do.end.128, !dbg !6721

do.end.128:                                       ; preds = %do.cond.127
  %97 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !6723, !tbaa !2620
  %98 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6724, !tbaa !2620
  %text129 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %98, i32 0, i32 2, !dbg !6725
  store %struct._object* %97, %struct._object** %text129, align 8, !dbg !6726, !tbaa !3376
  %99 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6727, !tbaa !2620
  %text130 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %99, i32 0, i32 2, !dbg !6728
  %100 = load %struct._object*, %struct._object** %text130, align 8, !dbg !6728, !tbaa !3376
  %ob_refcnt131 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 0, !dbg !6729
  %101 = load i64, i64* %ob_refcnt131, align 8, !dbg !6730, !tbaa !2631
  %inc132 = add i64 %101, 1, !dbg !6730
  store i64 %inc132, i64* %ob_refcnt131, align 8, !dbg !6730, !tbaa !2631
  br label %if.end.301, !dbg !6731

if.else.133:                                      ; preds = %cond.end.109
  %102 = bitcast i64* %__s1_len135 to i8*, !dbg !6732
  call void @llvm.lifetime.start(i64 8, i8* %102) #1, !dbg !6732
  call void @llvm.dbg.declare(metadata i64* %__s1_len135, metadata !1284, metadata !2613), !dbg !6733
  %103 = bitcast i64* %__s2_len137 to i8*, !dbg !6732
  call void @llvm.lifetime.start(i64 8, i8* %103) #1, !dbg !6732
  call void @llvm.dbg.declare(metadata i64* %__s2_len137, metadata !1287, metadata !2613), !dbg !6734
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 1) to i64), i64 ptrtoint ([5 x i8]* @.str.28 to i64)), i64 1), label %land.lhs.true.139, label %cond.false.185, !dbg !6735

land.lhs.true.139:                                ; preds = %if.else.133
  store i64 4, i64* %__s2_len137, align 8, !dbg !6736, !tbaa !2742
  %104 = load i64, i64* %__s2_len137, align 8, !dbg !6738, !tbaa !2742
  %cmp140 = icmp ult i64 %104, 4, !dbg !6739
  br i1 %cmp140, label %cond.true.142, label %cond.false.185, !dbg !6740

cond.true.142:                                    ; preds = %land.lhs.true.139
  %105 = bitcast i8** %__s1144 to i8*, !dbg !6741
  call void @llvm.lifetime.start(i64 8, i8* %105) #1, !dbg !6741
  call void @llvm.dbg.declare(metadata i8** %__s1144, metadata !1288, metadata !2613), !dbg !6743
  %106 = load i8*, i8** %name, align 8, !dbg !6744, !tbaa !2620
  store i8* %106, i8** %__s1144, align 8, !dbg !6743, !tbaa !2620
  %107 = bitcast i32* %__result146 to i8*, !dbg !6745
  call void @llvm.lifetime.start(i64 4, i8* %107) #1, !dbg !6745
  call void @llvm.dbg.declare(metadata i32* %__result146, metadata !1290, metadata !2613), !dbg !6746
  %108 = load i8*, i8** %__s1144, align 8, !dbg !6747, !tbaa !2620
  %arrayidx147 = getelementptr i8, i8* %108, i64 0, !dbg !6747
  %109 = load i8, i8* %arrayidx147, align 1, !dbg !6747, !tbaa !2756
  %conv148 = zext i8 %109 to i32, !dbg !6747
  %110 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), align 1, !dbg !6748, !tbaa !2756
  %conv149 = zext i8 %110 to i32, !dbg !6748
  %sub150 = sub i32 %conv148, %conv149, !dbg !6749
  store i32 %sub150, i32* %__result146, align 4, !dbg !6746, !tbaa !2759
  %111 = load i64, i64* %__s2_len137, align 8, !dbg !6750, !tbaa !2742
  %cmp151 = icmp ugt i64 %111, 0, !dbg !6752
  br i1 %cmp151, label %land.lhs.true.153, label %if.end.183, !dbg !6753

land.lhs.true.153:                                ; preds = %cond.true.142
  %112 = load i32, i32* %__result146, align 4, !dbg !6754, !tbaa !2759
  %cmp154 = icmp eq i32 %112, 0, !dbg !6756
  br i1 %cmp154, label %if.then.156, label %if.end.183, !dbg !6757

if.then.156:                                      ; preds = %land.lhs.true.153
  %113 = load i8*, i8** %__s1144, align 8, !dbg !6758, !tbaa !2620
  %arrayidx157 = getelementptr i8, i8* %113, i64 1, !dbg !6758
  %114 = load i8, i8* %arrayidx157, align 1, !dbg !6758, !tbaa !2756
  %conv158 = zext i8 %114 to i32, !dbg !6758
  %115 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 1), align 1, !dbg !6761, !tbaa !2756
  %conv159 = zext i8 %115 to i32, !dbg !6761
  %sub160 = sub i32 %conv158, %conv159, !dbg !6762
  store i32 %sub160, i32* %__result146, align 4, !dbg !6763, !tbaa !2759
  %116 = load i64, i64* %__s2_len137, align 8, !dbg !6764, !tbaa !2742
  %cmp161 = icmp ugt i64 %116, 1, !dbg !6766
  br i1 %cmp161, label %land.lhs.true.163, label %if.end.182, !dbg !6767

land.lhs.true.163:                                ; preds = %if.then.156
  %117 = load i32, i32* %__result146, align 4, !dbg !6768, !tbaa !2759
  %cmp164 = icmp eq i32 %117, 0, !dbg !6770
  br i1 %cmp164, label %if.then.166, label %if.end.182, !dbg !6771

if.then.166:                                      ; preds = %land.lhs.true.163
  %118 = load i8*, i8** %__s1144, align 8, !dbg !6772, !tbaa !2620
  %arrayidx167 = getelementptr i8, i8* %118, i64 2, !dbg !6772
  %119 = load i8, i8* %arrayidx167, align 1, !dbg !6772, !tbaa !2756
  %conv168 = zext i8 %119 to i32, !dbg !6772
  %120 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 2), align 1, !dbg !6775, !tbaa !2756
  %conv169 = zext i8 %120 to i32, !dbg !6775
  %sub170 = sub i32 %conv168, %conv169, !dbg !6776
  store i32 %sub170, i32* %__result146, align 4, !dbg !6777, !tbaa !2759
  %121 = load i64, i64* %__s2_len137, align 8, !dbg !6778, !tbaa !2742
  %cmp171 = icmp ugt i64 %121, 2, !dbg !6780
  br i1 %cmp171, label %land.lhs.true.173, label %if.end.181, !dbg !6781

land.lhs.true.173:                                ; preds = %if.then.166
  %122 = load i32, i32* %__result146, align 4, !dbg !6782, !tbaa !2759
  %cmp174 = icmp eq i32 %122, 0, !dbg !6784
  br i1 %cmp174, label %if.then.176, label %if.end.181, !dbg !6785

if.then.176:                                      ; preds = %land.lhs.true.173
  %123 = load i8*, i8** %__s1144, align 8, !dbg !6786, !tbaa !2620
  %arrayidx177 = getelementptr i8, i8* %123, i64 3, !dbg !6786
  %124 = load i8, i8* %arrayidx177, align 1, !dbg !6786, !tbaa !2756
  %conv178 = zext i8 %124 to i32, !dbg !6786
  %125 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i64 3), align 1, !dbg !6788, !tbaa !2756
  %conv179 = zext i8 %125 to i32, !dbg !6788
  %sub180 = sub i32 %conv178, %conv179, !dbg !6789
  store i32 %sub180, i32* %__result146, align 4, !dbg !6790, !tbaa !2759
  br label %if.end.181, !dbg !6791

if.end.181:                                       ; preds = %if.then.176, %land.lhs.true.173, %if.then.166
  br label %if.end.182, !dbg !6792

if.end.182:                                       ; preds = %if.end.181, %land.lhs.true.163, %if.then.156
  br label %if.end.183, !dbg !6796

if.end.183:                                       ; preds = %if.end.182, %land.lhs.true.153, %cond.true.142
  %126 = load i32, i32* %__result146, align 4, !dbg !6800, !tbaa !2759
  store i32 %126, i32* %tmp184, !dbg !6804, !tbaa !2759
  %127 = bitcast i32* %__result146 to i8*, !dbg !6805
  call void @llvm.lifetime.end(i64 4, i8* %127) #1, !dbg !6805
  %128 = bitcast i8** %__s1144 to i8*, !dbg !6805
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !6805
  %129 = load i32, i32* %tmp184, !dbg !6806, !tbaa !2759
  br label %cond.end.187, !dbg !6740

cond.false.185:                                   ; preds = %land.lhs.true.139, %if.else.133
  %130 = load i8*, i8** %name, align 8, !dbg !6807, !tbaa !2620
  %call186 = call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0)) #1, !dbg !6810
  br label %cond.end.187, !dbg !6740

cond.end.187:                                     ; preds = %cond.false.185, %if.end.183
  %cond188 = phi i32 [ %129, %if.end.183 ], [ %call186, %cond.false.185 ], !dbg !6740
  store i32 %cond188, i32* %tmp138, !dbg !6811, !tbaa !2759
  %131 = bitcast i64* %__s2_len137 to i8*, !dbg !6814
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !6814
  %132 = bitcast i64* %__s1_len135 to i8*, !dbg !6814
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !6814
  %133 = load i32, i32* %tmp138, !dbg !6815, !tbaa !2759
  %cmp189 = icmp eq i32 %133, 0, !dbg !6816
  br i1 %cmp189, label %if.then.191, label %if.else.211, !dbg !6817

if.then.191:                                      ; preds = %cond.end.187
  br label %do.body.192, !dbg !6818

do.body.192:                                      ; preds = %if.then.191
  %134 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !6819
  call void @llvm.lifetime.start(i64 8, i8* %134) #1, !dbg !6819
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp194, metadata !1291, metadata !2613), !dbg !6821
  %135 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6822, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %135, i32 0, i32 3, !dbg !6823
  %136 = load %struct._object*, %struct._object** %tail, align 8, !dbg !6823, !tbaa !3381
  %137 = ptrtoint %struct._object* %136 to i64, !dbg !6824
  %and195 = and i64 %137, -2, !dbg !6825
  %138 = inttoptr i64 %and195 to %struct._object*, !dbg !6826
  store %struct._object* %138, %struct._object** %_py_decref_tmp194, align 8, !dbg !6821, !tbaa !2620
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !6827, !tbaa !2620
  %ob_refcnt196 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 0, !dbg !6829
  %140 = load i64, i64* %ob_refcnt196, align 8, !dbg !6830, !tbaa !2631
  %dec197 = add i64 %140, -1, !dbg !6830
  store i64 %dec197, i64* %ob_refcnt196, align 8, !dbg !6830, !tbaa !2631
  %cmp198 = icmp ne i64 %dec197, 0, !dbg !6831
  br i1 %cmp198, label %if.then.200, label %if.else.201, !dbg !6832

if.then.200:                                      ; preds = %do.body.192
  br label %if.end.204, !dbg !6833

if.else.201:                                      ; preds = %do.body.192
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !6835, !tbaa !2620
  %ob_type202 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 1, !dbg !6837
  %142 = load %struct._typeobject*, %struct._typeobject** %ob_type202, align 8, !dbg !6837, !tbaa !2703
  %tp_dealloc203 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %142, i32 0, i32 4, !dbg !6838
  %143 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc203, align 8, !dbg !6838, !tbaa !2705
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !6839, !tbaa !2620
  call void %143(%struct._object* %144), !dbg !6840
  br label %if.end.204

if.end.204:                                       ; preds = %if.else.201, %if.then.200
  %145 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !6841
  call void @llvm.lifetime.end(i64 8, i8* %145) #1, !dbg !6841
  br label %do.cond.205, !dbg !6843

do.cond.205:                                      ; preds = %if.end.204
  br label %do.end.206, !dbg !6844

do.end.206:                                       ; preds = %do.cond.205
  %146 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !6846, !tbaa !2620
  %147 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6847, !tbaa !2620
  %tail207 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %147, i32 0, i32 3, !dbg !6848
  store %struct._object* %146, %struct._object** %tail207, align 8, !dbg !6849, !tbaa !3381
  %148 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6850, !tbaa !2620
  %tail208 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %148, i32 0, i32 3, !dbg !6851
  %149 = load %struct._object*, %struct._object** %tail208, align 8, !dbg !6851, !tbaa !3381
  %ob_refcnt209 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0, !dbg !6852
  %150 = load i64, i64* %ob_refcnt209, align 8, !dbg !6853, !tbaa !2631
  %inc210 = add i64 %150, 1, !dbg !6853
  store i64 %inc210, i64* %ob_refcnt209, align 8, !dbg !6853, !tbaa !2631
  br label %if.end.300, !dbg !6854

if.else.211:                                      ; preds = %cond.end.187
  %151 = bitcast i64* %__s1_len213 to i8*, !dbg !6855
  call void @llvm.lifetime.start(i64 8, i8* %151) #1, !dbg !6855
  call void @llvm.dbg.declare(metadata i64* %__s1_len213, metadata !1294, metadata !2613), !dbg !6856
  %152 = bitcast i64* %__s2_len215 to i8*, !dbg !6855
  call void @llvm.lifetime.start(i64 8, i8* %152) #1, !dbg !6855
  call void @llvm.dbg.declare(metadata i64* %__s2_len215, metadata !1297, metadata !2613), !dbg !6857
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.14 to i64)), i64 1), label %land.lhs.true.217, label %cond.false.263, !dbg !6858

land.lhs.true.217:                                ; preds = %if.else.211
  store i64 6, i64* %__s2_len215, align 8, !dbg !6859, !tbaa !2742
  %153 = load i64, i64* %__s2_len215, align 8, !dbg !6861, !tbaa !2742
  %cmp218 = icmp ult i64 %153, 4, !dbg !6862
  br i1 %cmp218, label %cond.true.220, label %cond.false.263, !dbg !6863

cond.true.220:                                    ; preds = %land.lhs.true.217
  %154 = bitcast i8** %__s1222 to i8*, !dbg !6864
  call void @llvm.lifetime.start(i64 8, i8* %154) #1, !dbg !6864
  call void @llvm.dbg.declare(metadata i8** %__s1222, metadata !1298, metadata !2613), !dbg !6866
  %155 = load i8*, i8** %name, align 8, !dbg !6867, !tbaa !2620
  store i8* %155, i8** %__s1222, align 8, !dbg !6866, !tbaa !2620
  %156 = bitcast i32* %__result224 to i8*, !dbg !6868
  call void @llvm.lifetime.start(i64 4, i8* %156) #1, !dbg !6868
  call void @llvm.dbg.declare(metadata i32* %__result224, metadata !1300, metadata !2613), !dbg !6869
  %157 = load i8*, i8** %__s1222, align 8, !dbg !6870, !tbaa !2620
  %arrayidx225 = getelementptr i8, i8* %157, i64 0, !dbg !6870
  %158 = load i8, i8* %arrayidx225, align 1, !dbg !6870, !tbaa !2756
  %conv226 = zext i8 %158 to i32, !dbg !6870
  %159 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), align 1, !dbg !6871, !tbaa !2756
  %conv227 = zext i8 %159 to i32, !dbg !6871
  %sub228 = sub i32 %conv226, %conv227, !dbg !6872
  store i32 %sub228, i32* %__result224, align 4, !dbg !6869, !tbaa !2759
  %160 = load i64, i64* %__s2_len215, align 8, !dbg !6873, !tbaa !2742
  %cmp229 = icmp ugt i64 %160, 0, !dbg !6875
  br i1 %cmp229, label %land.lhs.true.231, label %if.end.261, !dbg !6876

land.lhs.true.231:                                ; preds = %cond.true.220
  %161 = load i32, i32* %__result224, align 4, !dbg !6877, !tbaa !2759
  %cmp232 = icmp eq i32 %161, 0, !dbg !6879
  br i1 %cmp232, label %if.then.234, label %if.end.261, !dbg !6880

if.then.234:                                      ; preds = %land.lhs.true.231
  %162 = load i8*, i8** %__s1222, align 8, !dbg !6881, !tbaa !2620
  %arrayidx235 = getelementptr i8, i8* %162, i64 1, !dbg !6881
  %163 = load i8, i8* %arrayidx235, align 1, !dbg !6881, !tbaa !2756
  %conv236 = zext i8 %163 to i32, !dbg !6881
  %164 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 1), align 1, !dbg !6884, !tbaa !2756
  %conv237 = zext i8 %164 to i32, !dbg !6884
  %sub238 = sub i32 %conv236, %conv237, !dbg !6885
  store i32 %sub238, i32* %__result224, align 4, !dbg !6886, !tbaa !2759
  %165 = load i64, i64* %__s2_len215, align 8, !dbg !6887, !tbaa !2742
  %cmp239 = icmp ugt i64 %165, 1, !dbg !6889
  br i1 %cmp239, label %land.lhs.true.241, label %if.end.260, !dbg !6890

land.lhs.true.241:                                ; preds = %if.then.234
  %166 = load i32, i32* %__result224, align 4, !dbg !6891, !tbaa !2759
  %cmp242 = icmp eq i32 %166, 0, !dbg !6893
  br i1 %cmp242, label %if.then.244, label %if.end.260, !dbg !6894

if.then.244:                                      ; preds = %land.lhs.true.241
  %167 = load i8*, i8** %__s1222, align 8, !dbg !6895, !tbaa !2620
  %arrayidx245 = getelementptr i8, i8* %167, i64 2, !dbg !6895
  %168 = load i8, i8* %arrayidx245, align 1, !dbg !6895, !tbaa !2756
  %conv246 = zext i8 %168 to i32, !dbg !6895
  %169 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 2), align 1, !dbg !6898, !tbaa !2756
  %conv247 = zext i8 %169 to i32, !dbg !6898
  %sub248 = sub i32 %conv246, %conv247, !dbg !6899
  store i32 %sub248, i32* %__result224, align 4, !dbg !6900, !tbaa !2759
  %170 = load i64, i64* %__s2_len215, align 8, !dbg !6901, !tbaa !2742
  %cmp249 = icmp ugt i64 %170, 2, !dbg !6903
  br i1 %cmp249, label %land.lhs.true.251, label %if.end.259, !dbg !6904

land.lhs.true.251:                                ; preds = %if.then.244
  %171 = load i32, i32* %__result224, align 4, !dbg !6905, !tbaa !2759
  %cmp252 = icmp eq i32 %171, 0, !dbg !6907
  br i1 %cmp252, label %if.then.254, label %if.end.259, !dbg !6908

if.then.254:                                      ; preds = %land.lhs.true.251
  %172 = load i8*, i8** %__s1222, align 8, !dbg !6909, !tbaa !2620
  %arrayidx255 = getelementptr i8, i8* %172, i64 3, !dbg !6909
  %173 = load i8, i8* %arrayidx255, align 1, !dbg !6909, !tbaa !2756
  %conv256 = zext i8 %173 to i32, !dbg !6909
  %174 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i64 3), align 1, !dbg !6911, !tbaa !2756
  %conv257 = zext i8 %174 to i32, !dbg !6911
  %sub258 = sub i32 %conv256, %conv257, !dbg !6912
  store i32 %sub258, i32* %__result224, align 4, !dbg !6913, !tbaa !2759
  br label %if.end.259, !dbg !6914

if.end.259:                                       ; preds = %if.then.254, %land.lhs.true.251, %if.then.244
  br label %if.end.260, !dbg !6915

if.end.260:                                       ; preds = %if.end.259, %land.lhs.true.241, %if.then.234
  br label %if.end.261, !dbg !6919

if.end.261:                                       ; preds = %if.end.260, %land.lhs.true.231, %cond.true.220
  %175 = load i32, i32* %__result224, align 4, !dbg !6923, !tbaa !2759
  store i32 %175, i32* %tmp262, !dbg !6927, !tbaa !2759
  %176 = bitcast i32* %__result224 to i8*, !dbg !6928
  call void @llvm.lifetime.end(i64 4, i8* %176) #1, !dbg !6928
  %177 = bitcast i8** %__s1222 to i8*, !dbg !6928
  call void @llvm.lifetime.end(i64 8, i8* %177) #1, !dbg !6928
  %178 = load i32, i32* %tmp262, !dbg !6929, !tbaa !2759
  br label %cond.end.265, !dbg !6863

cond.false.263:                                   ; preds = %land.lhs.true.217, %if.else.211
  %179 = load i8*, i8** %name, align 8, !dbg !6930, !tbaa !2620
  %call264 = call i32 @strcmp(i8* %179, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0)) #1, !dbg !6933
  br label %cond.end.265, !dbg !6863

cond.end.265:                                     ; preds = %cond.false.263, %if.end.261
  %cond266 = phi i32 [ %178, %if.end.261 ], [ %call264, %cond.false.263 ], !dbg !6863
  store i32 %cond266, i32* %tmp216, !dbg !6934, !tbaa !2759
  %180 = bitcast i64* %__s2_len215 to i8*, !dbg !6937
  call void @llvm.lifetime.end(i64 8, i8* %180) #1, !dbg !6937
  %181 = bitcast i64* %__s1_len213 to i8*, !dbg !6937
  call void @llvm.lifetime.end(i64 8, i8* %181) #1, !dbg !6937
  %182 = load i32, i32* %tmp216, !dbg !6938, !tbaa !2759
  %cmp267 = icmp eq i32 %182, 0, !dbg !6939
  br i1 %cmp267, label %if.then.269, label %if.else.298, !dbg !6940

if.then.269:                                      ; preds = %cond.end.265
  %183 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6941, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %183, i32 0, i32 4, !dbg !6943
  %184 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !6943, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %184, null, !dbg !6941
  br i1 %tobool, label %if.end.276, label %if.then.270, !dbg !6944

if.then.270:                                      ; preds = %if.then.269
  %185 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6945, !tbaa !2620
  %call271 = call i32 @create_extra(%struct.ElementObject* %185, %struct._object* null), !dbg !6948
  %cmp272 = icmp slt i32 %call271, 0, !dbg !6949
  br i1 %cmp272, label %if.then.274, label %if.end.275, !dbg !6950

if.then.274:                                      ; preds = %if.then.270
  store i32 -1, i32* %retval, !dbg !6951
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6951

if.end.275:                                       ; preds = %if.then.270
  br label %if.end.276, !dbg !6952

if.end.276:                                       ; preds = %if.end.275, %if.then.269
  br label %do.body.277, !dbg !6953

do.body.277:                                      ; preds = %if.end.276
  %186 = bitcast %struct._object** %_py_decref_tmp279 to i8*, !dbg !6954
  call void @llvm.lifetime.start(i64 8, i8* %186) #1, !dbg !6954
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp279, metadata !1301, metadata !2613), !dbg !6956
  %187 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6957, !tbaa !2620
  %extra280 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %187, i32 0, i32 4, !dbg !6958
  %188 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra280, align 8, !dbg !6958, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %188, i32 0, i32 0, !dbg !6959
  %189 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !6959, !tbaa !3497
  store %struct._object* %189, %struct._object** %_py_decref_tmp279, align 8, !dbg !6956, !tbaa !2620
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8, !dbg !6960, !tbaa !2620
  %ob_refcnt281 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 0, !dbg !6962
  %191 = load i64, i64* %ob_refcnt281, align 8, !dbg !6963, !tbaa !2631
  %dec282 = add i64 %191, -1, !dbg !6963
  store i64 %dec282, i64* %ob_refcnt281, align 8, !dbg !6963, !tbaa !2631
  %cmp283 = icmp ne i64 %dec282, 0, !dbg !6964
  br i1 %cmp283, label %if.then.285, label %if.else.286, !dbg !6965

if.then.285:                                      ; preds = %do.body.277
  br label %if.end.289, !dbg !6966

if.else.286:                                      ; preds = %do.body.277
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8, !dbg !6968, !tbaa !2620
  %ob_type287 = getelementptr inbounds %struct._object, %struct._object* %192, i32 0, i32 1, !dbg !6970
  %193 = load %struct._typeobject*, %struct._typeobject** %ob_type287, align 8, !dbg !6970, !tbaa !2703
  %tp_dealloc288 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %193, i32 0, i32 4, !dbg !6971
  %194 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc288, align 8, !dbg !6971, !tbaa !2705
  %195 = load %struct._object*, %struct._object** %_py_decref_tmp279, align 8, !dbg !6972, !tbaa !2620
  call void %194(%struct._object* %195), !dbg !6973
  br label %if.end.289

if.end.289:                                       ; preds = %if.else.286, %if.then.285
  %196 = bitcast %struct._object** %_py_decref_tmp279 to i8*, !dbg !6974
  call void @llvm.lifetime.end(i64 8, i8* %196) #1, !dbg !6974
  br label %do.cond.290, !dbg !6976

do.cond.290:                                      ; preds = %if.end.289
  br label %do.end.291, !dbg !6977

do.end.291:                                       ; preds = %do.cond.290
  %197 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !6979, !tbaa !2620
  %198 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6980, !tbaa !2620
  %extra292 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %198, i32 0, i32 4, !dbg !6981
  %199 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra292, align 8, !dbg !6981, !tbaa !3362
  %attrib293 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %199, i32 0, i32 0, !dbg !6982
  store %struct._object* %197, %struct._object** %attrib293, align 8, !dbg !6983, !tbaa !3497
  %200 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !6984, !tbaa !2620
  %extra294 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %200, i32 0, i32 4, !dbg !6985
  %201 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra294, align 8, !dbg !6985, !tbaa !3362
  %attrib295 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %201, i32 0, i32 0, !dbg !6986
  %202 = load %struct._object*, %struct._object** %attrib295, align 8, !dbg !6986, !tbaa !3497
  %ob_refcnt296 = getelementptr inbounds %struct._object, %struct._object* %202, i32 0, i32 0, !dbg !6987
  %203 = load i64, i64* %ob_refcnt296, align 8, !dbg !6988, !tbaa !2631
  %inc297 = add i64 %203, 1, !dbg !6988
  store i64 %inc297, i64* %ob_refcnt296, align 8, !dbg !6988, !tbaa !2631
  br label %if.end.299, !dbg !6989

if.else.298:                                      ; preds = %cond.end.265
  %204 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !6990, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %204, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.45, i32 0, i32 0)), !dbg !6992
  store i32 -1, i32* %retval, !dbg !6993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6993

if.end.299:                                       ; preds = %do.end.291
  br label %if.end.300

if.end.300:                                       ; preds = %if.end.299, %do.end.206
  br label %if.end.301

if.end.301:                                       ; preds = %if.end.300, %do.end.128
  br label %if.end.302

if.end.302:                                       ; preds = %if.end.301, %do.end
  store i32 0, i32* %retval, !dbg !6994
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6994

cleanup:                                          ; preds = %if.end.302, %if.else.298, %if.then.274, %if.then.2
  %205 = bitcast i8** %name to i8*, !dbg !6995
  call void @llvm.lifetime.end(i64 8, i8* %205) #1, !dbg !6995
  %206 = load i32, i32* %retval, !dbg !6995
  ret i32 %206, !dbg !6995
}

; Function Attrs: nounwind uwtable
define internal i32 @element_gc_traverse(%struct.ElementObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.ElementObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret24 = alloca i32, align 4
  %i = alloca i32, align 4
  %vret42 = alloca i32, align 4
  %vret59 = alloca i32, align 4
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1308, metadata !2613), !dbg !6996
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1309, metadata !2613), !dbg !6997
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1310, metadata !2613), !dbg !6998
  br label %do.body, !dbg !6999

do.body:                                          ; preds = %entry
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7000, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 1, !dbg !7002
  %1 = load %struct._object*, %struct._object** %tag, align 8, !dbg !7002, !tbaa !3371
  %tobool = icmp ne %struct._object* %1, null, !dbg !7003
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7004

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !7005
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !7005
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1311, metadata !2613), !dbg !7007
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7008, !tbaa !2620
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7009, !tbaa !2620
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 1, !dbg !7010
  %5 = load %struct._object*, %struct._object** %tag1, align 8, !dbg !7010, !tbaa !3371
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7011, !tbaa !2620
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !7008
  store i32 %call, i32* %vret, align 4, !dbg !7007, !tbaa !2759
  %7 = load i32, i32* %vret, align 4, !dbg !7012, !tbaa !2759
  %tobool2 = icmp ne i32 %7, 0, !dbg !7012
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7014

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !7015, !tbaa !2759
  store i32 %8, i32* %retval, !dbg !7017
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7017

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !7018
  br label %cleanup, !dbg !7018

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !7020
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !7020
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.4, !dbg !7023

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !7024

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !7027

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7028, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 2, !dbg !7030
  %11 = load %struct._object*, %struct._object** %text, align 8, !dbg !7030, !tbaa !3376
  %12 = ptrtoint %struct._object* %11 to i64, !dbg !7031
  %and = and i64 %12, -2, !dbg !7032
  %13 = inttoptr i64 %and to %struct._object*, !dbg !7033
  %tobool6 = icmp ne %struct._object* %13, null, !dbg !7033
  br i1 %tobool6, label %if.then.7, label %if.end.18, !dbg !7034

if.then.7:                                        ; preds = %do.body.5
  %14 = bitcast i32* %vret8 to i8*, !dbg !7035
  call void @llvm.lifetime.start(i64 4, i8* %14) #1, !dbg !7035
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1315, metadata !2613), !dbg !7037
  %15 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7038, !tbaa !2620
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7039, !tbaa !2620
  %text9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 2, !dbg !7040
  %17 = load %struct._object*, %struct._object** %text9, align 8, !dbg !7040, !tbaa !3376
  %18 = ptrtoint %struct._object* %17 to i64, !dbg !7041
  %and10 = and i64 %18, -2, !dbg !7042
  %19 = inttoptr i64 %and10 to %struct._object*, !dbg !7043
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !7044, !tbaa !2620
  %call11 = call i32 %15(%struct._object* %19, i8* %20), !dbg !7038
  store i32 %call11, i32* %vret8, align 4, !dbg !7037, !tbaa !2759
  %21 = load i32, i32* %vret8, align 4, !dbg !7045, !tbaa !2759
  %tobool12 = icmp ne i32 %21, 0, !dbg !7045
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !7047

if.then.13:                                       ; preds = %if.then.7
  %22 = load i32, i32* %vret8, align 4, !dbg !7048, !tbaa !2759
  store i32 %22, i32* %retval, !dbg !7050
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.15, !dbg !7050

if.end.14:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !7051
  br label %cleanup.15, !dbg !7051

cleanup.15:                                       ; preds = %if.end.14, %if.then.13
  %23 = bitcast i32* %vret8 to i8*, !dbg !7053
  call void @llvm.lifetime.end(i64 4, i8* %23) #1, !dbg !7053
  %cleanup.dest.16 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.16, label %unreachable [
    i32 0, label %cleanup.cont.17
    i32 1, label %return
  ]

cleanup.cont.17:                                  ; preds = %cleanup.15
  br label %if.end.18, !dbg !7056

if.end.18:                                        ; preds = %cleanup.cont.17, %do.body.5
  br label %do.end.19, !dbg !7057

do.end.19:                                        ; preds = %if.end.18
  br label %do.body.20, !dbg !7060

do.body.20:                                       ; preds = %do.end.19
  %24 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7061, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %24, i32 0, i32 3, !dbg !7063
  %25 = load %struct._object*, %struct._object** %tail, align 8, !dbg !7063, !tbaa !3381
  %26 = ptrtoint %struct._object* %25 to i64, !dbg !7064
  %and21 = and i64 %26, -2, !dbg !7065
  %27 = inttoptr i64 %and21 to %struct._object*, !dbg !7066
  %tobool22 = icmp ne %struct._object* %27, null, !dbg !7066
  br i1 %tobool22, label %if.then.23, label %if.end.34, !dbg !7067

if.then.23:                                       ; preds = %do.body.20
  %28 = bitcast i32* %vret24 to i8*, !dbg !7068
  call void @llvm.lifetime.start(i64 4, i8* %28) #1, !dbg !7068
  call void @llvm.dbg.declare(metadata i32* %vret24, metadata !1319, metadata !2613), !dbg !7070
  %29 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7071, !tbaa !2620
  %30 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7072, !tbaa !2620
  %tail25 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %30, i32 0, i32 3, !dbg !7073
  %31 = load %struct._object*, %struct._object** %tail25, align 8, !dbg !7073, !tbaa !3381
  %32 = ptrtoint %struct._object* %31 to i64, !dbg !7074
  %and26 = and i64 %32, -2, !dbg !7075
  %33 = inttoptr i64 %and26 to %struct._object*, !dbg !7076
  %34 = load i8*, i8** %arg.addr, align 8, !dbg !7077, !tbaa !2620
  %call27 = call i32 %29(%struct._object* %33, i8* %34), !dbg !7071
  store i32 %call27, i32* %vret24, align 4, !dbg !7070, !tbaa !2759
  %35 = load i32, i32* %vret24, align 4, !dbg !7078, !tbaa !2759
  %tobool28 = icmp ne i32 %35, 0, !dbg !7078
  br i1 %tobool28, label %if.then.29, label %if.end.30, !dbg !7080

if.then.29:                                       ; preds = %if.then.23
  %36 = load i32, i32* %vret24, align 4, !dbg !7081, !tbaa !2759
  store i32 %36, i32* %retval, !dbg !7083
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.31, !dbg !7083

if.end.30:                                        ; preds = %if.then.23
  store i32 0, i32* %cleanup.dest.slot, !dbg !7084
  br label %cleanup.31, !dbg !7084

cleanup.31:                                       ; preds = %if.end.30, %if.then.29
  %37 = bitcast i32* %vret24 to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 4, i8* %37) #1, !dbg !7086
  %cleanup.dest.32 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.32, label %unreachable [
    i32 0, label %cleanup.cont.33
    i32 1, label %return
  ]

cleanup.cont.33:                                  ; preds = %cleanup.31
  br label %if.end.34, !dbg !7089

if.end.34:                                        ; preds = %cleanup.cont.33, %do.body.20
  br label %do.end.35, !dbg !7090

do.end.35:                                        ; preds = %if.end.34
  %38 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7093, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %38, i32 0, i32 4, !dbg !7094
  %39 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !7094, !tbaa !3362
  %tobool36 = icmp ne %struct.ElementObjectExtra* %39, null, !dbg !7093
  br i1 %tobool36, label %if.then.37, label %if.end.77, !dbg !7095

if.then.37:                                       ; preds = %do.end.35
  %40 = bitcast i32* %i to i8*, !dbg !7096
  call void @llvm.lifetime.start(i64 4, i8* %40) #1, !dbg !7096
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1323, metadata !2613), !dbg !7097
  br label %do.body.38, !dbg !7098

do.body.38:                                       ; preds = %if.then.37
  %41 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7099, !tbaa !2620
  %extra39 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %41, i32 0, i32 4, !dbg !7101
  %42 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra39, align 8, !dbg !7101, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %42, i32 0, i32 0, !dbg !7102
  %43 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7102, !tbaa !3497
  %tobool40 = icmp ne %struct._object* %43, null, !dbg !7103
  br i1 %tobool40, label %if.then.41, label %if.end.52, !dbg !7104

if.then.41:                                       ; preds = %do.body.38
  %44 = bitcast i32* %vret42 to i8*, !dbg !7105
  call void @llvm.lifetime.start(i64 4, i8* %44) #1, !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %vret42, metadata !1326, metadata !2613), !dbg !7107
  %45 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7108, !tbaa !2620
  %46 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7109, !tbaa !2620
  %extra43 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %46, i32 0, i32 4, !dbg !7110
  %47 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra43, align 8, !dbg !7110, !tbaa !3362
  %attrib44 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %47, i32 0, i32 0, !dbg !7111
  %48 = load %struct._object*, %struct._object** %attrib44, align 8, !dbg !7111, !tbaa !3497
  %49 = load i8*, i8** %arg.addr, align 8, !dbg !7112, !tbaa !2620
  %call45 = call i32 %45(%struct._object* %48, i8* %49), !dbg !7108
  store i32 %call45, i32* %vret42, align 4, !dbg !7107, !tbaa !2759
  %50 = load i32, i32* %vret42, align 4, !dbg !7113, !tbaa !2759
  %tobool46 = icmp ne i32 %50, 0, !dbg !7113
  br i1 %tobool46, label %if.then.47, label %if.end.48, !dbg !7115

if.then.47:                                       ; preds = %if.then.41
  %51 = load i32, i32* %vret42, align 4, !dbg !7116, !tbaa !2759
  store i32 %51, i32* %retval, !dbg !7118
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !7118

if.end.48:                                        ; preds = %if.then.41
  store i32 0, i32* %cleanup.dest.slot, !dbg !7119
  br label %cleanup.49, !dbg !7119

cleanup.49:                                       ; preds = %if.end.48, %if.then.47
  %52 = bitcast i32* %vret42 to i8*, !dbg !7121
  call void @llvm.lifetime.end(i64 4, i8* %52) #1, !dbg !7121
  %cleanup.dest.50 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.50, label %cleanup.74 [
    i32 0, label %cleanup.cont.51
  ]

cleanup.cont.51:                                  ; preds = %cleanup.49
  br label %if.end.52, !dbg !7124

if.end.52:                                        ; preds = %cleanup.cont.51, %do.body.38
  br label %do.cond, !dbg !7125

do.cond:                                          ; preds = %if.end.52
  br label %do.end.53, !dbg !7128

do.end.53:                                        ; preds = %do.cond
  store i32 0, i32* %i, align 4, !dbg !7130, !tbaa !2759
  br label %for.cond, !dbg !7131

for.cond:                                         ; preds = %for.inc, %do.end.53
  %53 = load i32, i32* %i, align 4, !dbg !7132, !tbaa !2759
  %54 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7135, !tbaa !2620
  %extra54 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %54, i32 0, i32 4, !dbg !7136
  %55 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra54, align 8, !dbg !7136, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %55, i32 0, i32 1, !dbg !7137
  %56 = load i32, i32* %length, align 4, !dbg !7137, !tbaa !3446
  %cmp = icmp slt i32 %53, %56, !dbg !7138
  br i1 %cmp, label %for.body, label %for.end, !dbg !7139

for.body:                                         ; preds = %for.cond
  br label %do.body.55, !dbg !7140

do.body.55:                                       ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !7141, !tbaa !2759
  %idxprom = sext i32 %57 to i64, !dbg !7143
  %58 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7143, !tbaa !2620
  %extra56 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %58, i32 0, i32 4, !dbg !7144
  %59 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra56, align 8, !dbg !7144, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %59, i32 0, i32 3, !dbg !7145
  %60 = load %struct._object**, %struct._object*** %children, align 8, !dbg !7145, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %60, i64 %idxprom, !dbg !7143
  %61 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7143, !tbaa !2620
  %tobool57 = icmp ne %struct._object* %61, null, !dbg !7143
  br i1 %tobool57, label %if.then.58, label %if.end.71, !dbg !7146

if.then.58:                                       ; preds = %do.body.55
  %62 = bitcast i32* %vret59 to i8*, !dbg !7147
  call void @llvm.lifetime.start(i64 4, i8* %62) #1, !dbg !7147
  call void @llvm.dbg.declare(metadata i32* %vret59, metadata !1330, metadata !2613), !dbg !7149
  %63 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !7150, !tbaa !2620
  %64 = load i32, i32* %i, align 4, !dbg !7151, !tbaa !2759
  %idxprom60 = sext i32 %64 to i64, !dbg !7152
  %65 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7152, !tbaa !2620
  %extra61 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %65, i32 0, i32 4, !dbg !7153
  %66 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra61, align 8, !dbg !7153, !tbaa !3362
  %children62 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %66, i32 0, i32 3, !dbg !7154
  %67 = load %struct._object**, %struct._object*** %children62, align 8, !dbg !7154, !tbaa !3451
  %arrayidx63 = getelementptr %struct._object*, %struct._object** %67, i64 %idxprom60, !dbg !7152
  %68 = load %struct._object*, %struct._object** %arrayidx63, align 8, !dbg !7152, !tbaa !2620
  %69 = load i8*, i8** %arg.addr, align 8, !dbg !7155, !tbaa !2620
  %call64 = call i32 %63(%struct._object* %68, i8* %69), !dbg !7150
  store i32 %call64, i32* %vret59, align 4, !dbg !7149, !tbaa !2759
  %70 = load i32, i32* %vret59, align 4, !dbg !7156, !tbaa !2759
  %tobool65 = icmp ne i32 %70, 0, !dbg !7156
  br i1 %tobool65, label %if.then.66, label %if.end.67, !dbg !7158

if.then.66:                                       ; preds = %if.then.58
  %71 = load i32, i32* %vret59, align 4, !dbg !7159, !tbaa !2759
  store i32 %71, i32* %retval, !dbg !7161
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.68, !dbg !7161

if.end.67:                                        ; preds = %if.then.58
  store i32 0, i32* %cleanup.dest.slot, !dbg !7162
  br label %cleanup.68, !dbg !7162

cleanup.68:                                       ; preds = %if.end.67, %if.then.66
  %72 = bitcast i32* %vret59 to i8*, !dbg !7164
  call void @llvm.lifetime.end(i64 4, i8* %72) #1, !dbg !7164
  %cleanup.dest.69 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.69, label %cleanup.74 [
    i32 0, label %cleanup.cont.70
  ]

cleanup.cont.70:                                  ; preds = %cleanup.68
  br label %if.end.71, !dbg !7167

if.end.71:                                        ; preds = %cleanup.cont.70, %do.body.55
  br label %do.cond.72, !dbg !7168

do.cond.72:                                       ; preds = %if.end.71
  br label %do.end.73, !dbg !7171

do.end.73:                                        ; preds = %do.cond.72
  br label %for.inc, !dbg !7173

for.inc:                                          ; preds = %do.end.73
  %73 = load i32, i32* %i, align 4, !dbg !7175, !tbaa !2759
  %inc = add i32 %73, 1, !dbg !7175
  store i32 %inc, i32* %i, align 4, !dbg !7175, !tbaa !2759
  br label %for.cond, !dbg !7176

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !7177
  br label %cleanup.74, !dbg !7177

cleanup.74:                                       ; preds = %for.end, %cleanup.68, %cleanup.49
  %74 = bitcast i32* %i to i8*, !dbg !7178
  call void @llvm.lifetime.end(i64 4, i8* %74) #1, !dbg !7178
  %cleanup.dest.75 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.75, label %unreachable [
    i32 0, label %cleanup.cont.76
    i32 1, label %return
  ]

cleanup.cont.76:                                  ; preds = %cleanup.74
  br label %if.end.77, !dbg !7180

if.end.77:                                        ; preds = %cleanup.cont.76, %do.end.35
  store i32 0, i32* %retval, !dbg !7181
  br label %return, !dbg !7181

return:                                           ; preds = %if.end.77, %cleanup.74, %cleanup.31, %cleanup.15, %cleanup
  %75 = load i32, i32* %retval, !dbg !7182
  ret i32 %75, !dbg !7182

unreachable:                                      ; preds = %cleanup.74, %cleanup.31, %cleanup.15, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @element_gc_clear(%struct.ElementObject* %self) #0 {
entry:
  %self.addr = alloca %struct.ElementObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1340, metadata !2613), !dbg !7183
  br label %do.body, !dbg !7184

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7185
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7185
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1341, metadata !2613), !dbg !7187
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7188, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 1, !dbg !7189
  %2 = load %struct._object*, %struct._object** %tag, align 8, !dbg !7189, !tbaa !3371
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !7187, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7190, !tbaa !2620
  %cmp = icmp ne %struct._object* %3, null, !dbg !7191
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !7192

if.then:                                          ; preds = %do.body
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7193, !tbaa !2620
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 1, !dbg !7195
  store %struct._object* null, %struct._object** %tag1, align 8, !dbg !7196, !tbaa !3371
  br label %do.body.2, !dbg !7197

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7198
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !7198
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1343, metadata !2613), !dbg !7200
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7201, !tbaa !2620
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !7200, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7202, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !7204
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !7205, !tbaa !2631
  %dec = add i64 %8, -1, !dbg !7205
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7205, !tbaa !2631
  %cmp3 = icmp ne i64 %dec, 0, !dbg !7206
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !7207

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !7208

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7210, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !7212
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7212, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !7213
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7213, !tbaa !2705
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7214, !tbaa !2620
  call void %11(%struct._object* %12), !dbg !7215
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7216
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !7216
  br label %do.cond, !dbg !7218

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7219

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !7221

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7223
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !7223
  br label %do.end.7, !dbg !7226

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7227, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 2, !dbg !7228
  call void @_clear_joined_ptr(%struct._object** %text), !dbg !7229
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7230, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 3, !dbg !7231
  call void @_clear_joined_ptr(%struct._object** %tail), !dbg !7232
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7233, !tbaa !2620
  call void @dealloc_extra(%struct.ElementObject* %17), !dbg !7234
  ret i32 0, !dbg !7235
}

; Function Attrs: nounwind uwtable
define internal i32 @element_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %self_elem = alloca %struct.ElementObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp75 = alloca %struct._object*, align 8
  %_py_decref_tmp90 = alloca %struct._object*, align 8
  %_py_decref_tmp105 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1703, metadata !2613), !dbg !7236
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1704, metadata !2613), !dbg !7237
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1705, metadata !2613), !dbg !7238
  %0 = bitcast %struct._object** %tag to i8*, !dbg !7239
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7239
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1706, metadata !2613), !dbg !7240
  %1 = bitcast %struct._object** %tmp to i8*, !dbg !7241
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7241
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1707, metadata !2613), !dbg !7242
  %2 = bitcast %struct._object** %attrib to i8*, !dbg !7243
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7243
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !1708, metadata !2613), !dbg !7244
  store %struct._object* null, %struct._object** %attrib, align 8, !dbg !7244, !tbaa !2620
  %3 = bitcast %struct.ElementObject** %self_elem to i8*, !dbg !7245
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7245
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self_elem, metadata !1709, metadata !2613), !dbg !7246
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7247, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), %struct._object** %tag, %struct._typeobject* @PyDict_Type, %struct._object** %attrib), !dbg !7249
  %tobool = icmp ne i32 %call, 0, !dbg !7249
  br i1 %tobool, label %if.end, label %if.then, !dbg !7250

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !7251
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7251

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7252, !tbaa !2620
  %tobool3 = icmp ne %struct._object* %5, null, !dbg !7252
  br i1 %tobool3, label %if.then.4, label %if.else.19, !dbg !7253

if.then.4:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7254, !tbaa !2620
  %call5 = call %struct._object* @PyDict_Copy(%struct._object* %6), !dbg !7255
  store %struct._object* %call5, %struct._object** %attrib, align 8, !dbg !7256, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7257, !tbaa !2620
  %tobool6 = icmp ne %struct._object* %7, null, !dbg !7257
  br i1 %tobool6, label %if.end.8, label %if.then.7, !dbg !7259

if.then.7:                                        ; preds = %if.then.4
  store i32 -1, i32* %retval, !dbg !7260
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7260

if.end.8:                                         ; preds = %if.then.4
  %8 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7261, !tbaa !2620
  %tobool9 = icmp ne %struct._object* %8, null, !dbg !7261
  br i1 %tobool9, label %if.then.10, label %if.end.18, !dbg !7262

if.then.10:                                       ; preds = %if.end.8
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7263, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7264, !tbaa !2620
  %call11 = call i32 @PyDict_Update(%struct._object* %9, %struct._object* %10), !dbg !7265
  %cmp = icmp slt i32 %call11, 0, !dbg !7266
  br i1 %cmp, label %if.then.12, label %if.end.17, !dbg !7267

if.then.12:                                       ; preds = %if.then.10
  br label %do.body, !dbg !7268

do.body:                                          ; preds = %if.then.12
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7269
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !7269
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1710, metadata !2613), !dbg !7271
  %12 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7272, !tbaa !2620
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !7271, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7273, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !7275
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !7276, !tbaa !2631
  %dec = add i64 %14, -1, !dbg !7276
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7276, !tbaa !2631
  %cmp14 = icmp ne i64 %dec, 0, !dbg !7277
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !7278

if.then.15:                                       ; preds = %do.body
  br label %if.end.16, !dbg !7279

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7281, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !7283
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7283, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !7284
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7284, !tbaa !2705
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7285, !tbaa !2620
  call void %17(%struct._object* %18), !dbg !7286
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7287
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !7287
  br label %do.cond, !dbg !7289

do.cond:                                          ; preds = %if.end.16
  br label %do.end, !dbg !7290

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !7292
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7292

if.end.17:                                        ; preds = %if.then.10
  br label %if.end.18, !dbg !7293

if.end.18:                                        ; preds = %if.end.17, %if.end.8
  br label %if.end.27, !dbg !7294

if.else.19:                                       ; preds = %if.end
  %20 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7295, !tbaa !2620
  %tobool20 = icmp ne %struct._object* %20, null, !dbg !7295
  br i1 %tobool20, label %if.then.21, label %if.end.26, !dbg !7297

if.then.21:                                       ; preds = %if.else.19
  %21 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !7298, !tbaa !2620
  %call22 = call %struct._object* @get_attrib_from_keywords(%struct._object* %21), !dbg !7300
  store %struct._object* %call22, %struct._object** %attrib, align 8, !dbg !7301, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7302, !tbaa !2620
  %tobool23 = icmp ne %struct._object* %22, null, !dbg !7302
  br i1 %tobool23, label %if.end.25, label %if.then.24, !dbg !7304

if.then.24:                                       ; preds = %if.then.21
  store i32 -1, i32* %retval, !dbg !7305
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7305

if.end.25:                                        ; preds = %if.then.21
  br label %if.end.26, !dbg !7306

if.end.26:                                        ; preds = %if.end.25, %if.else.19
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.end.18
  %23 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7307, !tbaa !2620
  %24 = bitcast %struct._object* %23 to %struct.ElementObject*, !dbg !7308
  store %struct.ElementObject* %24, %struct.ElementObject** %self_elem, align 8, !dbg !7309, !tbaa !2620
  %25 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7310, !tbaa !2620
  %cmp28 = icmp ne %struct._object* %25, null, !dbg !7311
  br i1 %cmp28, label %land.lhs.true, label %if.end.49, !dbg !7312

land.lhs.true:                                    ; preds = %if.end.27
  %26 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7313, !tbaa !2620
  %call29 = call i32 @is_empty_dict(%struct._object* %26), !dbg !7315
  %tobool30 = icmp ne i32 %call29, 0, !dbg !7315
  br i1 %tobool30, label %if.end.49, label %if.then.31, !dbg !7316

if.then.31:                                       ; preds = %land.lhs.true
  %27 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8, !dbg !7317, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7318, !tbaa !2620
  %call32 = call i32 @create_extra(%struct.ElementObject* %27, %struct._object* %28), !dbg !7319
  %cmp33 = icmp slt i32 %call32, 0, !dbg !7320
  br i1 %cmp33, label %if.then.34, label %if.end.48, !dbg !7321

if.then.34:                                       ; preds = %if.then.31
  br label %do.body.35, !dbg !7322

do.body.35:                                       ; preds = %if.then.34
  %29 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !7323
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !7323
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !1718, metadata !2613), !dbg !7325
  %30 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7326, !tbaa !2620
  store %struct._object* %30, %struct._object** %_py_decref_tmp37, align 8, !dbg !7325, !tbaa !2620
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !7327, !tbaa !2620
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !7329
  %32 = load i64, i64* %ob_refcnt38, align 8, !dbg !7330, !tbaa !2631
  %dec39 = add i64 %32, -1, !dbg !7330
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !7330, !tbaa !2631
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !7331
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !7332

if.then.41:                                       ; preds = %do.body.35
  br label %if.end.45, !dbg !7333

if.else.42:                                       ; preds = %do.body.35
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !7335, !tbaa !2620
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !7337
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !7337, !tbaa !2703
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !7338
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !7338, !tbaa !2705
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !7339, !tbaa !2620
  call void %35(%struct._object* %36), !dbg !7340
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %37 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !7341
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !7341
  br label %do.cond.46, !dbg !7343

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !7344

do.end.47:                                        ; preds = %do.cond.46
  store i32 -1, i32* %retval, !dbg !7346
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7346

if.end.48:                                        ; preds = %if.then.31
  br label %if.end.49, !dbg !7347

if.end.49:                                        ; preds = %if.end.48, %land.lhs.true, %if.end.27
  br label %do.body.50, !dbg !7348

do.body.50:                                       ; preds = %if.end.49
  %38 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7349
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !7349
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1724, metadata !2613), !dbg !7351
  %39 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !7352, !tbaa !2620
  store %struct._object* %39, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7351, !tbaa !2620
  %40 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7353, !tbaa !2620
  %cmp52 = icmp ne %struct._object* %40, null, !dbg !7354
  br i1 %cmp52, label %if.then.53, label %if.end.67, !dbg !7355

if.then.53:                                       ; preds = %do.body.50
  br label %do.body.54, !dbg !7356

do.body.54:                                       ; preds = %if.then.53
  %41 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7358
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !7358
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !1726, metadata !2613), !dbg !7360
  %42 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7361, !tbaa !2620
  store %struct._object* %42, %struct._object** %_py_decref_tmp56, align 8, !dbg !7360, !tbaa !2620
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7362, !tbaa !2620
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !7364
  %44 = load i64, i64* %ob_refcnt57, align 8, !dbg !7365, !tbaa !2631
  %dec58 = add i64 %44, -1, !dbg !7365
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !7365, !tbaa !2631
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !7366
  br i1 %cmp59, label %if.then.60, label %if.else.61, !dbg !7367

if.then.60:                                       ; preds = %do.body.54
  br label %if.end.64, !dbg !7368

if.else.61:                                       ; preds = %do.body.54
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7370, !tbaa !2620
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !7372
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !7372, !tbaa !2703
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !7373
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !7373, !tbaa !2705
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7374, !tbaa !2620
  call void %47(%struct._object* %48), !dbg !7375
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %49 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7376
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !7376
  br label %do.cond.65, !dbg !7378

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !7379

do.end.66:                                        ; preds = %do.cond.65
  br label %if.end.67, !dbg !7381

if.end.67:                                        ; preds = %do.end.66, %do.body.50
  %50 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7383
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !7383
  br label %do.cond.68, !dbg !7386

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !7387

do.end.69:                                        ; preds = %do.cond.68
  %51 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8, !dbg !7389, !tbaa !2620
  %tag70 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %51, i32 0, i32 1, !dbg !7390
  %52 = load %struct._object*, %struct._object** %tag70, align 8, !dbg !7390, !tbaa !3371
  store %struct._object* %52, %struct._object** %tmp, align 8, !dbg !7391, !tbaa !2620
  %53 = load %struct._object*, %struct._object** %tag, align 8, !dbg !7392, !tbaa !2620
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !7393
  %54 = load i64, i64* %ob_refcnt71, align 8, !dbg !7394, !tbaa !2631
  %inc = add i64 %54, 1, !dbg !7394
  store i64 %inc, i64* %ob_refcnt71, align 8, !dbg !7394, !tbaa !2631
  %55 = load %struct._object*, %struct._object** %tag, align 8, !dbg !7395, !tbaa !2620
  %56 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8, !dbg !7396, !tbaa !2620
  %tag72 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %56, i32 0, i32 1, !dbg !7397
  store %struct._object* %55, %struct._object** %tag72, align 8, !dbg !7398, !tbaa !3371
  br label %do.body.73, !dbg !7399

do.body.73:                                       ; preds = %do.end.69
  %57 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !7400
  call void @llvm.lifetime.start(i64 8, i8* %57) #1, !dbg !7400
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp75, metadata !1729, metadata !2613), !dbg !7402
  %58 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7403, !tbaa !2620
  store %struct._object* %58, %struct._object** %_py_decref_tmp75, align 8, !dbg !7402, !tbaa !2620
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !7404, !tbaa !2620
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0, !dbg !7406
  %60 = load i64, i64* %ob_refcnt76, align 8, !dbg !7407, !tbaa !2631
  %dec77 = add i64 %60, -1, !dbg !7407
  store i64 %dec77, i64* %ob_refcnt76, align 8, !dbg !7407, !tbaa !2631
  %cmp78 = icmp ne i64 %dec77, 0, !dbg !7408
  br i1 %cmp78, label %if.then.79, label %if.else.80, !dbg !7409

if.then.79:                                       ; preds = %do.body.73
  br label %if.end.83, !dbg !7410

if.else.80:                                       ; preds = %do.body.73
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !7412, !tbaa !2620
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1, !dbg !7414
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !7414, !tbaa !2703
  %tp_dealloc82 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 4, !dbg !7415
  %63 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc82, align 8, !dbg !7415, !tbaa !2705
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !7416, !tbaa !2620
  call void %63(%struct._object* %64), !dbg !7417
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.80, %if.then.79
  %65 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !7418
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !7418
  br label %do.cond.84, !dbg !7420

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !7421

do.end.85:                                        ; preds = %do.cond.84
  %66 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8, !dbg !7423, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %66, i32 0, i32 2, !dbg !7424
  %67 = load %struct._object*, %struct._object** %text, align 8, !dbg !7424, !tbaa !3376
  store %struct._object* %67, %struct._object** %tmp, align 8, !dbg !7425, !tbaa !2620
  %68 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7426, !tbaa !2631
  %inc86 = add i64 %68, 1, !dbg !7426
  store i64 %inc86, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7426, !tbaa !2631
  %69 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8, !dbg !7427, !tbaa !2620
  %text87 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %69, i32 0, i32 2, !dbg !7428
  store %struct._object* @_Py_NoneStruct, %struct._object** %text87, align 8, !dbg !7429, !tbaa !3376
  br label %do.body.88, !dbg !7430

do.body.88:                                       ; preds = %do.end.85
  %70 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !7431
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !7431
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp90, metadata !1731, metadata !2613), !dbg !7433
  %71 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7434, !tbaa !2620
  %72 = ptrtoint %struct._object* %71 to i64, !dbg !7435
  %and = and i64 %72, -2, !dbg !7436
  %73 = inttoptr i64 %and to %struct._object*, !dbg !7437
  store %struct._object* %73, %struct._object** %_py_decref_tmp90, align 8, !dbg !7433, !tbaa !2620
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !7438, !tbaa !2620
  %ob_refcnt91 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !7440
  %75 = load i64, i64* %ob_refcnt91, align 8, !dbg !7441, !tbaa !2631
  %dec92 = add i64 %75, -1, !dbg !7441
  store i64 %dec92, i64* %ob_refcnt91, align 8, !dbg !7441, !tbaa !2631
  %cmp93 = icmp ne i64 %dec92, 0, !dbg !7442
  br i1 %cmp93, label %if.then.94, label %if.else.95, !dbg !7443

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98, !dbg !7444

if.else.95:                                       ; preds = %do.body.88
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !7446, !tbaa !2620
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !7448
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8, !dbg !7448, !tbaa !2703
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !7449
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8, !dbg !7449, !tbaa !2705
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !7450, !tbaa !2620
  call void %78(%struct._object* %79), !dbg !7451
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  %80 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !7452
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !7452
  br label %do.cond.99, !dbg !7453

do.cond.99:                                       ; preds = %if.end.98
  br label %do.end.100, !dbg !7454

do.end.100:                                       ; preds = %do.cond.99
  %81 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8, !dbg !7456, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %81, i32 0, i32 3, !dbg !7457
  %82 = load %struct._object*, %struct._object** %tail, align 8, !dbg !7457, !tbaa !3381
  store %struct._object* %82, %struct._object** %tmp, align 8, !dbg !7458, !tbaa !2620
  %83 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7459, !tbaa !2631
  %inc101 = add i64 %83, 1, !dbg !7459
  store i64 %inc101, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7459, !tbaa !2631
  %84 = load %struct.ElementObject*, %struct.ElementObject** %self_elem, align 8, !dbg !7460, !tbaa !2620
  %tail102 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %84, i32 0, i32 3, !dbg !7461
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail102, align 8, !dbg !7462, !tbaa !3381
  br label %do.body.103, !dbg !7463

do.body.103:                                      ; preds = %do.end.100
  %85 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !7464
  call void @llvm.lifetime.start(i64 8, i8* %85) #1, !dbg !7464
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp105, metadata !1733, metadata !2613), !dbg !7466
  %86 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7467, !tbaa !2620
  %87 = ptrtoint %struct._object* %86 to i64, !dbg !7468
  %and106 = and i64 %87, -2, !dbg !7469
  %88 = inttoptr i64 %and106 to %struct._object*, !dbg !7470
  store %struct._object* %88, %struct._object** %_py_decref_tmp105, align 8, !dbg !7466, !tbaa !2620
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !7471, !tbaa !2620
  %ob_refcnt107 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 0, !dbg !7473
  %90 = load i64, i64* %ob_refcnt107, align 8, !dbg !7474, !tbaa !2631
  %dec108 = add i64 %90, -1, !dbg !7474
  store i64 %dec108, i64* %ob_refcnt107, align 8, !dbg !7474, !tbaa !2631
  %cmp109 = icmp ne i64 %dec108, 0, !dbg !7475
  br i1 %cmp109, label %if.then.110, label %if.else.111, !dbg !7476

if.then.110:                                      ; preds = %do.body.103
  br label %if.end.114, !dbg !7477

if.else.111:                                      ; preds = %do.body.103
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !7479, !tbaa !2620
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 1, !dbg !7481
  %92 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !7481, !tbaa !2703
  %tp_dealloc113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %92, i32 0, i32 4, !dbg !7482
  %93 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc113, align 8, !dbg !7482, !tbaa !2705
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !7483, !tbaa !2620
  call void %93(%struct._object* %94), !dbg !7484
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.111, %if.then.110
  %95 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !7485
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !7485
  br label %do.cond.115, !dbg !7486

do.cond.115:                                      ; preds = %if.end.114
  br label %do.end.116, !dbg !7487

do.end.116:                                       ; preds = %do.cond.115
  store i32 0, i32* %retval, !dbg !7489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7489

cleanup:                                          ; preds = %do.end.116, %do.end.47, %if.then.24, %do.end, %if.then.7, %if.then
  %96 = bitcast %struct.ElementObject** %self_elem to i8*, !dbg !7490
  call void @llvm.lifetime.end(i64 8, i8* %96) #1, !dbg !7490
  %97 = bitcast %struct._object** %attrib to i8*, !dbg !7490
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !7490
  %98 = bitcast %struct._object** %tmp to i8*, !dbg !7490
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !7490
  %99 = bitcast %struct._object** %tag to i8*, !dbg !7490
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !7490
  %100 = load i32, i32* %retval, !dbg !7490
  ret i32 %100, !dbg !7490
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %e = alloca %struct.ElementObject*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1737, metadata !2613), !dbg !7491
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1738, metadata !2613), !dbg !7492
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1739, metadata !2613), !dbg !7493
  %0 = bitcast %struct.ElementObject** %e to i8*, !dbg !7494
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7494
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %e, metadata !1740, metadata !2613), !dbg !7495
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7496, !tbaa !2620
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 36, !dbg !7497
  %2 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !7497, !tbaa !5065
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7498, !tbaa !2620
  %call = call %struct._object* %2(%struct._typeobject* %3, i64 0), !dbg !7496
  %4 = bitcast %struct._object* %call to %struct.ElementObject*, !dbg !7499
  store %struct.ElementObject* %4, %struct.ElementObject** %e, align 8, !dbg !7495, !tbaa !2620
  %5 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8, !dbg !7500, !tbaa !2620
  %cmp = icmp ne %struct.ElementObject* %5, null, !dbg !7502
  br i1 %cmp, label %if.then, label %if.end, !dbg !7503

if.then:                                          ; preds = %entry
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7504, !tbaa !2631
  %inc = add i64 %6, 1, !dbg !7504
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7504, !tbaa !2631
  %7 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8, !dbg !7506, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 1, !dbg !7507
  store %struct._object* @_Py_NoneStruct, %struct._object** %tag, align 8, !dbg !7508, !tbaa !3371
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7509, !tbaa !2631
  %inc1 = add i64 %8, 1, !dbg !7509
  store i64 %inc1, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7509, !tbaa !2631
  %9 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8, !dbg !7510, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %9, i32 0, i32 2, !dbg !7511
  store %struct._object* @_Py_NoneStruct, %struct._object** %text, align 8, !dbg !7512, !tbaa !3376
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7513, !tbaa !2631
  %inc2 = add i64 %10, 1, !dbg !7513
  store i64 %inc2, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7513, !tbaa !2631
  %11 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8, !dbg !7514, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 3, !dbg !7515
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail, align 8, !dbg !7516, !tbaa !3381
  %12 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8, !dbg !7517, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 4, !dbg !7518
  store %struct.ElementObjectExtra* null, %struct.ElementObjectExtra** %extra, align 8, !dbg !7519, !tbaa !3362
  %13 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8, !dbg !7520, !tbaa !2620
  %weakreflist = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 5, !dbg !7521
  store %struct._object* null, %struct._object** %weakreflist, align 8, !dbg !7522, !tbaa !3385
  br label %if.end, !dbg !7523

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.ElementObject*, %struct.ElementObject** %e, align 8, !dbg !7524, !tbaa !2620
  %15 = bitcast %struct.ElementObject* %14 to %struct._object*, !dbg !7525
  %16 = bitcast %struct.ElementObject** %e to i8*, !dbg !7526
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !7526
  ret %struct._object* %15, !dbg !7527
}

declare void @PyObject_ClearWeakRefs(%struct._object*) #3

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i64 @element_length(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1108, metadata !2613), !dbg !7528
  %0 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7529, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %0, i32 0, i32 4, !dbg !7531
  %1 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !7531, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %1, null, !dbg !7529
  br i1 %tobool, label %if.end, label %if.then, !dbg !7532

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, !dbg !7533
  br label %return, !dbg !7533

if.end:                                           ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !7534, !tbaa !2620
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4, !dbg !7535
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8, !dbg !7535, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %3, i32 0, i32 1, !dbg !7536
  %4 = load i32, i32* %length, align 4, !dbg !7536, !tbaa !3446
  %conv = sext i32 %4 to i64, !dbg !7534
  store i64 %conv, i64* %retval, !dbg !7537
  br label %return, !dbg !7537

return:                                           ; preds = %if.end, %if.then
  %5 = load i64, i64* %retval, !dbg !7538
  ret i64 %5, !dbg !7538
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getitem(%struct._object* %self_, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self_.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %self = alloca %struct.ElementObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self_, %struct._object** %self_.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self_.addr, metadata !1111, metadata !2613), !dbg !7539
  store i64 %index, i64* %index.addr, align 8, !tbaa !2742
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !1112, metadata !2613), !dbg !7540
  %0 = bitcast %struct.ElementObject** %self to i8*, !dbg !7541
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7541
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self, metadata !1113, metadata !2613), !dbg !7542
  %1 = load %struct._object*, %struct._object** %self_.addr, align 8, !dbg !7543, !tbaa !2620
  %2 = bitcast %struct._object* %1 to %struct.ElementObject*, !dbg !7544
  store %struct.ElementObject* %2, %struct.ElementObject** %self, align 8, !dbg !7542, !tbaa !2620
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7545, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4, !dbg !7547
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !7547, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %4, null, !dbg !7545
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7548

lor.lhs.false:                                    ; preds = %entry
  %5 = load i64, i64* %index.addr, align 8, !dbg !7549, !tbaa !2742
  %cmp = icmp slt i64 %5, 0, !dbg !7551
  br i1 %cmp, label %if.then, label %lor.lhs.false.1, !dbg !7552

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %6 = load i64, i64* %index.addr, align 8, !dbg !7553, !tbaa !2742
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7555, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4, !dbg !7556
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !7556, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 1, !dbg !7557
  %9 = load i32, i32* %length, align 4, !dbg !7557, !tbaa !3446
  %conv = sext i32 %9 to i64, !dbg !7555
  %cmp3 = icmp sge i64 %6, %conv, !dbg !7558
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7559

if.then:                                          ; preds = %lor.lhs.false.1, %lor.lhs.false, %entry
  %10 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !7560, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i32 0, i32 0)), !dbg !7562
  store %struct._object* null, %struct._object** %retval, !dbg !7563
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7563

if.end:                                           ; preds = %lor.lhs.false.1
  %11 = load i64, i64* %index.addr, align 8, !dbg !7564, !tbaa !2742
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7565, !tbaa !2620
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 4, !dbg !7566
  %13 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8, !dbg !7566, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %13, i32 0, i32 3, !dbg !7567
  %14 = load %struct._object**, %struct._object*** %children, align 8, !dbg !7567, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %14, i64 %11, !dbg !7565
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7565, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !7568
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !7569, !tbaa !2631
  %inc = add i64 %16, 1, !dbg !7569
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7569, !tbaa !2631
  %17 = load i64, i64* %index.addr, align 8, !dbg !7570, !tbaa !2742
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7571, !tbaa !2620
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %18, i32 0, i32 4, !dbg !7572
  %19 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8, !dbg !7572, !tbaa !3362
  %children7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %19, i32 0, i32 3, !dbg !7573
  %20 = load %struct._object**, %struct._object*** %children7, align 8, !dbg !7573, !tbaa !3451
  %arrayidx8 = getelementptr %struct._object*, %struct._object** %20, i64 %17, !dbg !7571
  %21 = load %struct._object*, %struct._object** %arrayidx8, align 8, !dbg !7571, !tbaa !2620
  store %struct._object* %21, %struct._object** %retval, !dbg !7574
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7574

cleanup:                                          ; preds = %if.end, %if.then
  %22 = bitcast %struct.ElementObject** %self to i8*, !dbg !7575
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !7575
  %23 = load %struct._object*, %struct._object** %retval, !dbg !7575
  ret %struct._object* %23, !dbg !7575
}

; Function Attrs: nounwind uwtable
define internal i32 @element_setitem(%struct._object* %self_, i64 %index, %struct._object* %item) #0 {
entry:
  %retval = alloca i32, align 4
  %self_.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %item.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %i = alloca i32, align 4
  %old = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self_, %struct._object** %self_.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self_.addr, metadata !1116, metadata !2613), !dbg !7576
  store i64 %index, i64* %index.addr, align 8, !tbaa !2742
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !1117, metadata !2613), !dbg !7577
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !1118, metadata !2613), !dbg !7578
  %0 = bitcast %struct.ElementObject** %self to i8*, !dbg !7579
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7579
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self, metadata !1119, metadata !2613), !dbg !7580
  %1 = load %struct._object*, %struct._object** %self_.addr, align 8, !dbg !7581, !tbaa !2620
  %2 = bitcast %struct._object* %1 to %struct.ElementObject*, !dbg !7582
  store %struct.ElementObject* %2, %struct.ElementObject** %self, align 8, !dbg !7580, !tbaa !2620
  %3 = bitcast i32* %i to i8*, !dbg !7583
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !7583
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1120, metadata !2613), !dbg !7584
  %4 = bitcast %struct._object** %old to i8*, !dbg !7585
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !7585
  call void @llvm.dbg.declare(metadata %struct._object** %old, metadata !1121, metadata !2613), !dbg !7586
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7587, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4, !dbg !7589
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !7589, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %6, null, !dbg !7587
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7590

lor.lhs.false:                                    ; preds = %entry
  %7 = load i64, i64* %index.addr, align 8, !dbg !7591, !tbaa !2742
  %cmp = icmp slt i64 %7, 0, !dbg !7593
  br i1 %cmp, label %if.then, label %lor.lhs.false.1, !dbg !7594

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %8 = load i64, i64* %index.addr, align 8, !dbg !7595, !tbaa !2742
  %9 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7597, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %9, i32 0, i32 4, !dbg !7598
  %10 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !7598, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %10, i32 0, i32 1, !dbg !7599
  %11 = load i32, i32* %length, align 4, !dbg !7599, !tbaa !3446
  %conv = sext i32 %11 to i64, !dbg !7597
  %cmp3 = icmp sge i64 %8, %conv, !dbg !7600
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7601

if.then:                                          ; preds = %lor.lhs.false.1, %lor.lhs.false, %entry
  %12 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !7602, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.40, i32 0, i32 0)), !dbg !7604
  store i32 -1, i32* %retval, !dbg !7605
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7605

if.end:                                           ; preds = %lor.lhs.false.1
  %13 = load i64, i64* %index.addr, align 8, !dbg !7606, !tbaa !2742
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7607, !tbaa !2620
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 4, !dbg !7608
  %15 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8, !dbg !7608, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %15, i32 0, i32 3, !dbg !7609
  %16 = load %struct._object**, %struct._object*** %children, align 8, !dbg !7609, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %16, i64 %13, !dbg !7607
  %17 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7607, !tbaa !2620
  store %struct._object* %17, %struct._object** %old, align 8, !dbg !7610, !tbaa !2620
  %18 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7611, !tbaa !2620
  %tobool6 = icmp ne %struct._object* %18, null, !dbg !7611
  br i1 %tobool6, label %if.then.7, label %if.else, !dbg !7613

if.then.7:                                        ; preds = %if.end
  %19 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7614, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !7616
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !7617, !tbaa !2631
  %inc = add i64 %20, 1, !dbg !7617
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7617, !tbaa !2631
  %21 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7618, !tbaa !2620
  %22 = load i64, i64* %index.addr, align 8, !dbg !7619, !tbaa !2742
  %23 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7620, !tbaa !2620
  %extra8 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %23, i32 0, i32 4, !dbg !7621
  %24 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra8, align 8, !dbg !7621, !tbaa !3362
  %children9 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %24, i32 0, i32 3, !dbg !7622
  %25 = load %struct._object**, %struct._object*** %children9, align 8, !dbg !7622, !tbaa !3451
  %arrayidx10 = getelementptr %struct._object*, %struct._object** %25, i64 %22, !dbg !7620
  store %struct._object* %21, %struct._object** %arrayidx10, align 8, !dbg !7623, !tbaa !2620
  br label %if.end.26, !dbg !7624

if.else:                                          ; preds = %if.end
  %26 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7625, !tbaa !2620
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %26, i32 0, i32 4, !dbg !7627
  %27 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8, !dbg !7627, !tbaa !3362
  %length12 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %27, i32 0, i32 1, !dbg !7628
  %28 = load i32, i32* %length12, align 4, !dbg !7629, !tbaa !3446
  %dec = add i32 %28, -1, !dbg !7629
  store i32 %dec, i32* %length12, align 4, !dbg !7629, !tbaa !3446
  %29 = load i64, i64* %index.addr, align 8, !dbg !7630, !tbaa !2742
  %conv13 = trunc i64 %29 to i32, !dbg !7630
  store i32 %conv13, i32* %i, align 4, !dbg !7632, !tbaa !2759
  br label %for.cond, !dbg !7633

for.cond:                                         ; preds = %for.inc, %if.else
  %30 = load i32, i32* %i, align 4, !dbg !7634, !tbaa !2759
  %31 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7638, !tbaa !2620
  %extra14 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %31, i32 0, i32 4, !dbg !7639
  %32 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra14, align 8, !dbg !7639, !tbaa !3362
  %length15 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %32, i32 0, i32 1, !dbg !7640
  %33 = load i32, i32* %length15, align 4, !dbg !7640, !tbaa !3446
  %cmp16 = icmp slt i32 %30, %33, !dbg !7641
  br i1 %cmp16, label %for.body, label %for.end, !dbg !7642

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %i, align 4, !dbg !7643, !tbaa !2759
  %add = add i32 %34, 1, !dbg !7644
  %idxprom = sext i32 %add to i64, !dbg !7645
  %35 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7645, !tbaa !2620
  %extra18 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %35, i32 0, i32 4, !dbg !7646
  %36 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra18, align 8, !dbg !7646, !tbaa !3362
  %children19 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %36, i32 0, i32 3, !dbg !7647
  %37 = load %struct._object**, %struct._object*** %children19, align 8, !dbg !7647, !tbaa !3451
  %arrayidx20 = getelementptr %struct._object*, %struct._object** %37, i64 %idxprom, !dbg !7645
  %38 = load %struct._object*, %struct._object** %arrayidx20, align 8, !dbg !7645, !tbaa !2620
  %39 = load i32, i32* %i, align 4, !dbg !7648, !tbaa !2759
  %idxprom21 = sext i32 %39 to i64, !dbg !7649
  %40 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7649, !tbaa !2620
  %extra22 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %40, i32 0, i32 4, !dbg !7650
  %41 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra22, align 8, !dbg !7650, !tbaa !3362
  %children23 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %41, i32 0, i32 3, !dbg !7651
  %42 = load %struct._object**, %struct._object*** %children23, align 8, !dbg !7651, !tbaa !3451
  %arrayidx24 = getelementptr %struct._object*, %struct._object** %42, i64 %idxprom21, !dbg !7649
  store %struct._object* %38, %struct._object** %arrayidx24, align 8, !dbg !7652, !tbaa !2620
  br label %for.inc, !dbg !7649

for.inc:                                          ; preds = %for.body
  %43 = load i32, i32* %i, align 4, !dbg !7653, !tbaa !2759
  %inc25 = add i32 %43, 1, !dbg !7653
  store i32 %inc25, i32* %i, align 4, !dbg !7653, !tbaa !2759
  br label %for.cond, !dbg !7654

for.end:                                          ; preds = %for.cond
  br label %if.end.26

if.end.26:                                        ; preds = %for.end, %if.then.7
  br label %do.body, !dbg !7655

do.body:                                          ; preds = %if.end.26
  %44 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7656
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !7656
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1122, metadata !2613), !dbg !7658
  %45 = load %struct._object*, %struct._object** %old, align 8, !dbg !7659, !tbaa !2620
  store %struct._object* %45, %struct._object** %_py_decref_tmp, align 8, !dbg !7658, !tbaa !2620
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7660, !tbaa !2620
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !7662
  %47 = load i64, i64* %ob_refcnt27, align 8, !dbg !7663, !tbaa !2631
  %dec28 = add i64 %47, -1, !dbg !7663
  store i64 %dec28, i64* %ob_refcnt27, align 8, !dbg !7663, !tbaa !2631
  %cmp29 = icmp ne i64 %dec28, 0, !dbg !7664
  br i1 %cmp29, label %if.then.31, label %if.else.32, !dbg !7665

if.then.31:                                       ; preds = %do.body
  br label %if.end.33, !dbg !7666

if.else.32:                                       ; preds = %do.body
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7668, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !7670
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7670, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !7671
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7671, !tbaa !2705
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7672, !tbaa !2620
  call void %50(%struct._object* %51), !dbg !7673
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.32, %if.then.31
  %52 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7674
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !7674
  br label %do.cond, !dbg !7676

do.cond:                                          ; preds = %if.end.33
  br label %do.end, !dbg !7677

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !7679
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7679

cleanup:                                          ; preds = %do.end, %if.then
  %53 = bitcast %struct._object** %old to i8*, !dbg !7680
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !7680
  %54 = bitcast i32* %i to i8*, !dbg !7680
  call void @llvm.lifetime.end(i64 4, i8* %54) #1, !dbg !7680
  %55 = bitcast %struct.ElementObject** %self to i8*, !dbg !7680
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !7680
  %56 = load i32, i32* %retval, !dbg !7680
  ret i32 %56, !dbg !7680
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_subscr(%struct._object* %self_, %struct._object* %item) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self_.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelen = alloca i64, align 8
  %cur = alloca i64, align 8
  %i19 = alloca i64, align 8
  %list = alloca %struct._object*, align 8
  %item44 = alloca %struct._object*, align 8
  store %struct._object* %self_, %struct._object** %self_.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self_.addr, metadata !1126, metadata !2613), !dbg !7681
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !1127, metadata !2613), !dbg !7682
  %0 = bitcast %struct.ElementObject** %self to i8*, !dbg !7683
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7683
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self, metadata !1128, metadata !2613), !dbg !7684
  %1 = load %struct._object*, %struct._object** %self_.addr, align 8, !dbg !7685, !tbaa !2620
  %2 = bitcast %struct._object* %1 to %struct.ElementObject*, !dbg !7686
  store %struct.ElementObject* %2, %struct.ElementObject** %self, align 8, !dbg !7684, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7687, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !7688
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7688, !tbaa !2703
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 10, !dbg !7689
  %5 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !7689, !tbaa !7690
  %cmp = icmp ne %struct.PyNumberMethods* %5, null, !dbg !7691
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7692

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7693, !tbaa !2620
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !7695
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !7695, !tbaa !2703
  %tp_as_number2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 10, !dbg !7696
  %8 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number2, align 8, !dbg !7696, !tbaa !7690
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %8, i32 0, i32 33, !dbg !7697
  %9 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !7697, !tbaa !7698
  %cmp3 = icmp ne %struct._object* (%struct._object*)* %9, null, !dbg !7700
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7701

if.then:                                          ; preds = %land.lhs.true
  %10 = bitcast i64* %i to i8*, !dbg !7702
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !7702
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1129, metadata !2613), !dbg !7703
  %11 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7704, !tbaa !2620
  %12 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !7705, !tbaa !2620
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %11, %struct._object* %12), !dbg !7706
  store i64 %call, i64* %i, align 8, !dbg !7703, !tbaa !2742
  %13 = load i64, i64* %i, align 8, !dbg !7707, !tbaa !2742
  %cmp4 = icmp eq i64 %13, -1, !dbg !7709
  br i1 %cmp4, label %land.lhs.true.5, label %if.end, !dbg !7710

land.lhs.true.5:                                  ; preds = %if.then
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !7711
  %tobool = icmp ne %struct._object* %call6, null, !dbg !7711
  br i1 %tobool, label %if.then.7, label %if.end, !dbg !7713

if.then.7:                                        ; preds = %land.lhs.true.5
  store %struct._object* null, %struct._object** %retval, !dbg !7714
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7714

if.end:                                           ; preds = %land.lhs.true.5, %if.then
  %14 = load i64, i64* %i, align 8, !dbg !7716, !tbaa !2742
  %cmp8 = icmp slt i64 %14, 0, !dbg !7718
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.13, !dbg !7719

land.lhs.true.9:                                  ; preds = %if.end
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7720, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4, !dbg !7722
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !7722, !tbaa !3362
  %tobool10 = icmp ne %struct.ElementObjectExtra* %16, null, !dbg !7723
  br i1 %tobool10, label %if.then.11, label %if.end.13, !dbg !7724

if.then.11:                                       ; preds = %land.lhs.true.9
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7725, !tbaa !2620
  %extra12 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %17, i32 0, i32 4, !dbg !7726
  %18 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra12, align 8, !dbg !7726, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %18, i32 0, i32 1, !dbg !7727
  %19 = load i32, i32* %length, align 4, !dbg !7727, !tbaa !3446
  %conv = sext i32 %19 to i64, !dbg !7725
  %20 = load i64, i64* %i, align 8, !dbg !7728, !tbaa !2742
  %add = add i64 %20, %conv, !dbg !7728
  store i64 %add, i64* %i, align 8, !dbg !7728, !tbaa !2742
  br label %if.end.13, !dbg !7729

if.end.13:                                        ; preds = %if.then.11, %land.lhs.true.9, %if.end
  %21 = load %struct._object*, %struct._object** %self_.addr, align 8, !dbg !7730, !tbaa !2620
  %22 = load i64, i64* %i, align 8, !dbg !7731, !tbaa !2742
  %call14 = call %struct._object* @element_getitem(%struct._object* %21, i64 %22), !dbg !7732
  store %struct._object* %call14, %struct._object** %retval, !dbg !7733
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7733

cleanup:                                          ; preds = %if.end.13, %if.then.7
  %23 = bitcast i64* %i to i8*, !dbg !7734
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !7734
  br label %cleanup.57

if.else:                                          ; preds = %land.lhs.true, %entry
  %24 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7735, !tbaa !2620
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7736
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !7736, !tbaa !2703
  %cmp16 = icmp eq %struct._typeobject* %25, @PySlice_Type, !dbg !7737
  br i1 %cmp16, label %if.then.18, label %if.else.56, !dbg !7738

if.then.18:                                       ; preds = %if.else
  %26 = bitcast i64* %start to i8*, !dbg !7739
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !7739
  call void @llvm.dbg.declare(metadata i64* %start, metadata !1132, metadata !2613), !dbg !7740
  %27 = bitcast i64* %stop to i8*, !dbg !7739
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !7739
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !1135, metadata !2613), !dbg !7741
  %28 = bitcast i64* %step to i8*, !dbg !7739
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !7739
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1136, metadata !2613), !dbg !7742
  %29 = bitcast i64* %slicelen to i8*, !dbg !7739
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !7739
  call void @llvm.dbg.declare(metadata i64* %slicelen, metadata !1137, metadata !2613), !dbg !7743
  %30 = bitcast i64* %cur to i8*, !dbg !7739
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !7739
  call void @llvm.dbg.declare(metadata i64* %cur, metadata !1138, metadata !2613), !dbg !7744
  %31 = bitcast i64* %i19 to i8*, !dbg !7739
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !7739
  call void @llvm.dbg.declare(metadata i64* %i19, metadata !1139, metadata !2613), !dbg !7745
  %32 = bitcast %struct._object** %list to i8*, !dbg !7746
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !7746
  call void @llvm.dbg.declare(metadata %struct._object** %list, metadata !1140, metadata !2613), !dbg !7747
  %33 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7748, !tbaa !2620
  %extra20 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %33, i32 0, i32 4, !dbg !7750
  %34 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra20, align 8, !dbg !7750, !tbaa !3362
  %tobool21 = icmp ne %struct.ElementObjectExtra* %34, null, !dbg !7748
  br i1 %tobool21, label %if.end.24, label %if.then.22, !dbg !7751

if.then.22:                                       ; preds = %if.then.18
  %call23 = call %struct._object* @PyList_New(i64 0), !dbg !7752
  store %struct._object* %call23, %struct._object** %retval, !dbg !7753
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !7753

if.end.24:                                        ; preds = %if.then.18
  %35 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7754, !tbaa !2620
  %36 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7756, !tbaa !2620
  %extra25 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %36, i32 0, i32 4, !dbg !7757
  %37 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra25, align 8, !dbg !7757, !tbaa !3362
  %length26 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %37, i32 0, i32 1, !dbg !7758
  %38 = load i32, i32* %length26, align 4, !dbg !7758, !tbaa !3446
  %conv27 = sext i32 %38 to i64, !dbg !7756
  %call28 = call i32 @PySlice_GetIndicesEx(%struct._object* %35, i64 %conv27, i64* %start, i64* %stop, i64* %step, i64* %slicelen), !dbg !7759
  %cmp29 = icmp slt i32 %call28, 0, !dbg !7760
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !7761

if.then.31:                                       ; preds = %if.end.24
  store %struct._object* null, %struct._object** %retval, !dbg !7762
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !7762

if.end.32:                                        ; preds = %if.end.24
  %39 = load i64, i64* %slicelen, align 8, !dbg !7764, !tbaa !2742
  %cmp33 = icmp sle i64 %39, 0, !dbg !7765
  br i1 %cmp33, label %if.then.35, label %if.else.37, !dbg !7766

if.then.35:                                       ; preds = %if.end.32
  %call36 = call %struct._object* @PyList_New(i64 0), !dbg !7767
  store %struct._object* %call36, %struct._object** %retval, !dbg !7768
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !7768

if.else.37:                                       ; preds = %if.end.32
  %40 = load i64, i64* %slicelen, align 8, !dbg !7769, !tbaa !2742
  %call38 = call %struct._object* @PyList_New(i64 %40), !dbg !7770
  store %struct._object* %call38, %struct._object** %list, align 8, !dbg !7771, !tbaa !2620
  %41 = load %struct._object*, %struct._object** %list, align 8, !dbg !7772, !tbaa !2620
  %tobool39 = icmp ne %struct._object* %41, null, !dbg !7772
  br i1 %tobool39, label %if.end.41, label %if.then.40, !dbg !7774

if.then.40:                                       ; preds = %if.else.37
  store %struct._object* null, %struct._object** %retval, !dbg !7775
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !7775

if.end.41:                                        ; preds = %if.else.37
  %42 = load i64, i64* %start, align 8, !dbg !7776, !tbaa !2742
  store i64 %42, i64* %cur, align 8, !dbg !7777, !tbaa !2742
  store i64 0, i64* %i19, align 8, !dbg !7778, !tbaa !2742
  br label %for.cond, !dbg !7779

for.cond:                                         ; preds = %for.inc, %if.end.41
  %43 = load i64, i64* %i19, align 8, !dbg !7780, !tbaa !2742
  %44 = load i64, i64* %slicelen, align 8, !dbg !7783, !tbaa !2742
  %cmp42 = icmp slt i64 %43, %44, !dbg !7784
  br i1 %cmp42, label %for.body, label %for.end, !dbg !7785

for.body:                                         ; preds = %for.cond
  %45 = bitcast %struct._object** %item44 to i8*, !dbg !7786
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !7786
  call void @llvm.dbg.declare(metadata %struct._object** %item44, metadata !1141, metadata !2613), !dbg !7787
  %46 = load i64, i64* %cur, align 8, !dbg !7788, !tbaa !2742
  %47 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7789, !tbaa !2620
  %extra45 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %47, i32 0, i32 4, !dbg !7790
  %48 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra45, align 8, !dbg !7790, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %48, i32 0, i32 3, !dbg !7791
  %49 = load %struct._object**, %struct._object*** %children, align 8, !dbg !7791, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %49, i64 %46, !dbg !7789
  %50 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7789, !tbaa !2620
  store %struct._object* %50, %struct._object** %item44, align 8, !dbg !7787, !tbaa !2620
  %51 = load %struct._object*, %struct._object** %item44, align 8, !dbg !7792, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !7793
  %52 = load i64, i64* %ob_refcnt, align 8, !dbg !7794, !tbaa !2631
  %inc = add i64 %52, 1, !dbg !7794
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7794, !tbaa !2631
  %53 = load %struct._object*, %struct._object** %item44, align 8, !dbg !7795, !tbaa !2620
  %54 = load i64, i64* %i19, align 8, !dbg !7796, !tbaa !2742
  %55 = load %struct._object*, %struct._object** %list, align 8, !dbg !7797, !tbaa !2620
  %56 = bitcast %struct._object* %55 to %struct.PyListObject*, !dbg !7798
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %56, i32 0, i32 1, !dbg !7799
  %57 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !7799, !tbaa !5350
  %arrayidx46 = getelementptr %struct._object*, %struct._object** %57, i64 %54, !dbg !7800
  store %struct._object* %53, %struct._object** %arrayidx46, align 8, !dbg !7801, !tbaa !2620
  %58 = bitcast %struct._object** %item44 to i8*, !dbg !7802
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !7802
  br label %for.inc, !dbg !7803

for.inc:                                          ; preds = %for.body
  %59 = load i64, i64* %step, align 8, !dbg !7804, !tbaa !2742
  %60 = load i64, i64* %cur, align 8, !dbg !7805, !tbaa !2742
  %add47 = add i64 %60, %59, !dbg !7805
  store i64 %add47, i64* %cur, align 8, !dbg !7805, !tbaa !2742
  %61 = load i64, i64* %i19, align 8, !dbg !7806, !tbaa !2742
  %inc48 = add i64 %61, 1, !dbg !7806
  store i64 %inc48, i64* %i19, align 8, !dbg !7806, !tbaa !2742
  br label %for.cond, !dbg !7807

for.end:                                          ; preds = %for.cond
  %62 = load %struct._object*, %struct._object** %list, align 8, !dbg !7808, !tbaa !2620
  store %struct._object* %62, %struct._object** %retval, !dbg !7809
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.49, !dbg !7809

cleanup.49:                                       ; preds = %for.end, %if.then.40, %if.then.35, %if.then.31, %if.then.22
  %63 = bitcast %struct._object** %list to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !7810
  %64 = bitcast i64* %i19 to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !7810
  %65 = bitcast i64* %cur to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !7810
  %66 = bitcast i64* %slicelen to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !7810
  %67 = bitcast i64* %step to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !7810
  %68 = bitcast i64* %stop to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !7810
  %69 = bitcast i64* %start to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !7810
  br label %cleanup.57

if.else.56:                                       ; preds = %if.else
  %70 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7811, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %70, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i32 0, i32 0)), !dbg !7813
  store %struct._object* null, %struct._object** %retval, !dbg !7814
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.57, !dbg !7814

cleanup.57:                                       ; preds = %if.else.56, %cleanup.49, %cleanup
  %71 = bitcast %struct.ElementObject** %self to i8*, !dbg !7815
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !7815
  %72 = load %struct._object*, %struct._object** %retval, !dbg !7815
  ret %struct._object* %72, !dbg !7815
}

; Function Attrs: nounwind uwtable
define internal i32 @element_ass_subscr(%struct._object* %self_, %struct._object* %item, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self_.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelen = alloca i64, align 8
  %newlen = alloca i64, align 8
  %cur = alloca i64, align 8
  %i19 = alloca i64, align 8
  %recycle = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %cur40 = alloca i64, align 8
  %i41 = alloca i64, align 8
  %num_moved = alloca i64, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  %_py_decref_tmp181 = alloca %struct._object*, align 8
  %element = alloca %struct._object*, align 8
  %_py_decref_tmp284 = alloca %struct._object*, align 8
  %_py_xdecref_tmp298 = alloca %struct._object*, align 8
  %_py_decref_tmp303 = alloca %struct._object*, align 8
  store %struct._object* %self_, %struct._object** %self_.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self_.addr, metadata !1149, metadata !2613), !dbg !7816
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !1150, metadata !2613), !dbg !7817
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1151, metadata !2613), !dbg !7818
  %0 = bitcast %struct.ElementObject** %self to i8*, !dbg !7819
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7819
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self, metadata !1152, metadata !2613), !dbg !7820
  %1 = load %struct._object*, %struct._object** %self_.addr, align 8, !dbg !7821, !tbaa !2620
  %2 = bitcast %struct._object* %1 to %struct.ElementObject*, !dbg !7822
  store %struct.ElementObject* %2, %struct.ElementObject** %self, align 8, !dbg !7820, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7823, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !7824
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7824, !tbaa !2703
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 10, !dbg !7825
  %5 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !7825, !tbaa !7690
  %cmp = icmp ne %struct.PyNumberMethods* %5, null, !dbg !7826
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7827

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7828, !tbaa !2620
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !7830
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !7830, !tbaa !2703
  %tp_as_number2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 10, !dbg !7831
  %8 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number2, align 8, !dbg !7831, !tbaa !7690
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %8, i32 0, i32 33, !dbg !7832
  %9 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !7832, !tbaa !7698
  %cmp3 = icmp ne %struct._object* (%struct._object*)* %9, null, !dbg !7833
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7834

if.then:                                          ; preds = %land.lhs.true
  %10 = bitcast i64* %i to i8*, !dbg !7835
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !7835
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1153, metadata !2613), !dbg !7836
  %11 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7837, !tbaa !2620
  %12 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !7838, !tbaa !2620
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %11, %struct._object* %12), !dbg !7839
  store i64 %call, i64* %i, align 8, !dbg !7836, !tbaa !2742
  %13 = load i64, i64* %i, align 8, !dbg !7840, !tbaa !2742
  %cmp4 = icmp eq i64 %13, -1, !dbg !7842
  br i1 %cmp4, label %land.lhs.true.5, label %if.end, !dbg !7843

land.lhs.true.5:                                  ; preds = %if.then
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !7844
  %tobool = icmp ne %struct._object* %call6, null, !dbg !7844
  br i1 %tobool, label %if.then.7, label %if.end, !dbg !7846

if.then.7:                                        ; preds = %land.lhs.true.5
  store i32 -1, i32* %retval, !dbg !7847
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7847

if.end:                                           ; preds = %land.lhs.true.5, %if.then
  %14 = load i64, i64* %i, align 8, !dbg !7849, !tbaa !2742
  %cmp8 = icmp slt i64 %14, 0, !dbg !7851
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.13, !dbg !7852

land.lhs.true.9:                                  ; preds = %if.end
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7853, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4, !dbg !7855
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !7855, !tbaa !3362
  %tobool10 = icmp ne %struct.ElementObjectExtra* %16, null, !dbg !7856
  br i1 %tobool10, label %if.then.11, label %if.end.13, !dbg !7857

if.then.11:                                       ; preds = %land.lhs.true.9
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7858, !tbaa !2620
  %extra12 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %17, i32 0, i32 4, !dbg !7859
  %18 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra12, align 8, !dbg !7859, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %18, i32 0, i32 1, !dbg !7860
  %19 = load i32, i32* %length, align 4, !dbg !7860, !tbaa !3446
  %conv = sext i32 %19 to i64, !dbg !7858
  %20 = load i64, i64* %i, align 8, !dbg !7861, !tbaa !2742
  %add = add i64 %20, %conv, !dbg !7861
  store i64 %add, i64* %i, align 8, !dbg !7861, !tbaa !2742
  br label %if.end.13, !dbg !7862

if.end.13:                                        ; preds = %if.then.11, %land.lhs.true.9, %if.end
  %21 = load %struct._object*, %struct._object** %self_.addr, align 8, !dbg !7863, !tbaa !2620
  %22 = load i64, i64* %i, align 8, !dbg !7864, !tbaa !2742
  %23 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7865, !tbaa !2620
  %call14 = call i32 @element_setitem(%struct._object* %21, i64 %22, %struct._object* %23), !dbg !7866
  store i32 %call14, i32* %retval, !dbg !7867
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7867

cleanup:                                          ; preds = %if.end.13, %if.then.7
  %24 = bitcast i64* %i to i8*, !dbg !7868
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !7868
  br label %cleanup.328

if.else:                                          ; preds = %land.lhs.true, %entry
  %25 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7869, !tbaa !2620
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !7870
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !7870, !tbaa !2703
  %cmp16 = icmp eq %struct._typeobject* %26, @PySlice_Type, !dbg !7871
  br i1 %cmp16, label %if.then.18, label %if.else.327, !dbg !7872

if.then.18:                                       ; preds = %if.else
  %27 = bitcast i64* %start to i8*, !dbg !7873
  call void @llvm.lifetime.start(i64 8, i8* %27) #1, !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %start, metadata !1156, metadata !2613), !dbg !7874
  %28 = bitcast i64* %stop to i8*, !dbg !7873
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !1159, metadata !2613), !dbg !7875
  %29 = bitcast i64* %step to i8*, !dbg !7873
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1160, metadata !2613), !dbg !7876
  %30 = bitcast i64* %slicelen to i8*, !dbg !7873
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %slicelen, metadata !1161, metadata !2613), !dbg !7877
  %31 = bitcast i64* %newlen to i8*, !dbg !7873
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %newlen, metadata !1162, metadata !2613), !dbg !7878
  %32 = bitcast i64* %cur to i8*, !dbg !7873
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %cur, metadata !1163, metadata !2613), !dbg !7879
  %33 = bitcast i64* %i19 to i8*, !dbg !7873
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %i19, metadata !1164, metadata !2613), !dbg !7880
  %34 = bitcast %struct._object** %recycle to i8*, !dbg !7881
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !7881
  call void @llvm.dbg.declare(metadata %struct._object** %recycle, metadata !1165, metadata !2613), !dbg !7882
  store %struct._object* null, %struct._object** %recycle, align 8, !dbg !7882, !tbaa !2620
  %35 = bitcast %struct._object** %seq to i8*, !dbg !7883
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !7883
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !1166, metadata !2613), !dbg !7884
  store %struct._object* null, %struct._object** %seq, align 8, !dbg !7884, !tbaa !2620
  %36 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7885, !tbaa !2620
  %extra20 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %36, i32 0, i32 4, !dbg !7887
  %37 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra20, align 8, !dbg !7887, !tbaa !3362
  %tobool21 = icmp ne %struct.ElementObjectExtra* %37, null, !dbg !7885
  br i1 %tobool21, label %if.end.28, label %if.then.22, !dbg !7888

if.then.22:                                       ; preds = %if.then.18
  %38 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7889, !tbaa !2620
  %call23 = call i32 @create_extra(%struct.ElementObject* %38, %struct._object* null), !dbg !7892
  %cmp24 = icmp slt i32 %call23, 0, !dbg !7893
  br i1 %cmp24, label %if.then.26, label %if.end.27, !dbg !7894

if.then.26:                                       ; preds = %if.then.22
  store i32 -1, i32* %retval, !dbg !7895
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.318, !dbg !7895

if.end.27:                                        ; preds = %if.then.22
  br label %if.end.28, !dbg !7896

if.end.28:                                        ; preds = %if.end.27, %if.then.18
  %39 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !7897, !tbaa !2620
  %40 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7899, !tbaa !2620
  %extra29 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %40, i32 0, i32 4, !dbg !7900
  %41 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra29, align 8, !dbg !7900, !tbaa !3362
  %length30 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %41, i32 0, i32 1, !dbg !7901
  %42 = load i32, i32* %length30, align 4, !dbg !7901, !tbaa !3446
  %conv31 = sext i32 %42 to i64, !dbg !7899
  %call32 = call i32 @PySlice_GetIndicesEx(%struct._object* %39, i64 %conv31, i64* %start, i64* %stop, i64* %step, i64* %slicelen), !dbg !7902
  %cmp33 = icmp slt i32 %call32, 0, !dbg !7903
  br i1 %cmp33, label %if.then.35, label %if.end.36, !dbg !7904

if.then.35:                                       ; preds = %if.end.28
  store i32 -1, i32* %retval, !dbg !7905
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.318, !dbg !7905

if.end.36:                                        ; preds = %if.end.28
  %43 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7907, !tbaa !2620
  %cmp37 = icmp eq %struct._object* %43, null, !dbg !7908
  br i1 %cmp37, label %if.then.39, label %if.else.128, !dbg !7909

if.then.39:                                       ; preds = %if.end.36
  %44 = bitcast i64* %cur40 to i8*, !dbg !7910
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !7910
  call void @llvm.dbg.declare(metadata i64* %cur40, metadata !1167, metadata !2613), !dbg !7911
  %45 = bitcast i64* %i41 to i8*, !dbg !7912
  call void @llvm.lifetime.start(i64 8, i8* %45) #1, !dbg !7912
  call void @llvm.dbg.declare(metadata i64* %i41, metadata !1170, metadata !2613), !dbg !7913
  %46 = load i64, i64* %slicelen, align 8, !dbg !7914, !tbaa !2742
  %cmp42 = icmp sle i64 %46, 0, !dbg !7916
  br i1 %cmp42, label %if.then.44, label %if.end.45, !dbg !7917

if.then.44:                                       ; preds = %if.then.39
  store i32 0, i32* %retval, !dbg !7918
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126, !dbg !7918

if.end.45:                                        ; preds = %if.then.39
  %47 = load i64, i64* %step, align 8, !dbg !7919, !tbaa !2742
  %cmp46 = icmp slt i64 %47, 0, !dbg !7921
  br i1 %cmp46, label %if.then.48, label %if.end.53, !dbg !7922

if.then.48:                                       ; preds = %if.end.45
  %48 = load i64, i64* %start, align 8, !dbg !7923, !tbaa !2742
  %add49 = add i64 %48, 1, !dbg !7925
  store i64 %add49, i64* %stop, align 8, !dbg !7926, !tbaa !2742
  %49 = load i64, i64* %stop, align 8, !dbg !7927, !tbaa !2742
  %50 = load i64, i64* %step, align 8, !dbg !7928, !tbaa !2742
  %51 = load i64, i64* %slicelen, align 8, !dbg !7929, !tbaa !2742
  %sub = sub i64 %51, 1, !dbg !7930
  %mul = mul i64 %50, %sub, !dbg !7931
  %add50 = add i64 %49, %mul, !dbg !7932
  %sub51 = sub i64 %add50, 1, !dbg !7933
  store i64 %sub51, i64* %start, align 8, !dbg !7934, !tbaa !2742
  %52 = load i64, i64* %step, align 8, !dbg !7935, !tbaa !2742
  %sub52 = sub i64 0, %52, !dbg !7936
  store i64 %sub52, i64* %step, align 8, !dbg !7937, !tbaa !2742
  br label %if.end.53, !dbg !7938

if.end.53:                                        ; preds = %if.then.48, %if.end.45
  %53 = load i64, i64* %slicelen, align 8, !dbg !7939, !tbaa !2742
  %call54 = call %struct._object* @PyList_New(i64 %53), !dbg !7941
  store %struct._object* %call54, %struct._object** %recycle, align 8, !dbg !7942, !tbaa !2620
  %tobool55 = icmp ne %struct._object* %call54, null, !dbg !7942
  br i1 %tobool55, label %if.end.58, label %if.then.56, !dbg !7943

if.then.56:                                       ; preds = %if.end.53
  %call57 = call %struct._object* @PyErr_NoMemory(), !dbg !7944
  store i32 -1, i32* %retval, !dbg !7946
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126, !dbg !7946

if.end.58:                                        ; preds = %if.end.53
  %54 = load i64, i64* %start, align 8, !dbg !7947, !tbaa !2742
  store i64 %54, i64* %cur40, align 8, !dbg !7948, !tbaa !2742
  store i64 0, i64* %i41, align 8, !dbg !7949, !tbaa !2742
  br label %for.cond, !dbg !7950

for.cond:                                         ; preds = %for.inc, %if.end.58
  %55 = load i64, i64* %cur40, align 8, !dbg !7951, !tbaa !2742
  %56 = load i64, i64* %stop, align 8, !dbg !7954, !tbaa !2742
  %cmp59 = icmp ult i64 %55, %56, !dbg !7955
  br i1 %cmp59, label %for.body, label %for.end, !dbg !7956

for.body:                                         ; preds = %for.cond
  %57 = bitcast i64* %num_moved to i8*, !dbg !7957
  call void @llvm.lifetime.start(i64 8, i8* %57) #1, !dbg !7957
  call void @llvm.dbg.declare(metadata i64* %num_moved, metadata !1171, metadata !2613), !dbg !7958
  %58 = load i64, i64* %step, align 8, !dbg !7959, !tbaa !2742
  %sub61 = sub i64 %58, 1, !dbg !7960
  store i64 %sub61, i64* %num_moved, align 8, !dbg !7958, !tbaa !2742
  %59 = load i64, i64* %cur40, align 8, !dbg !7961, !tbaa !2742
  %60 = load i64, i64* %step, align 8, !dbg !7963, !tbaa !2742
  %add62 = add i64 %59, %60, !dbg !7964
  %61 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7965, !tbaa !2620
  %extra63 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %61, i32 0, i32 4, !dbg !7966
  %62 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra63, align 8, !dbg !7966, !tbaa !3362
  %length64 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %62, i32 0, i32 1, !dbg !7967
  %63 = load i32, i32* %length64, align 4, !dbg !7967, !tbaa !3446
  %conv65 = sext i32 %63 to i64, !dbg !7968
  %cmp66 = icmp uge i64 %add62, %conv65, !dbg !7969
  br i1 %cmp66, label %if.then.68, label %if.end.74, !dbg !7970

if.then.68:                                       ; preds = %for.body
  %64 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7971, !tbaa !2620
  %extra69 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %64, i32 0, i32 4, !dbg !7973
  %65 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra69, align 8, !dbg !7973, !tbaa !3362
  %length70 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %65, i32 0, i32 1, !dbg !7974
  %66 = load i32, i32* %length70, align 4, !dbg !7974, !tbaa !3446
  %conv71 = sext i32 %66 to i64, !dbg !7971
  %67 = load i64, i64* %cur40, align 8, !dbg !7975, !tbaa !2742
  %sub72 = sub i64 %conv71, %67, !dbg !7976
  %sub73 = sub i64 %sub72, 1, !dbg !7977
  store i64 %sub73, i64* %num_moved, align 8, !dbg !7978, !tbaa !2742
  br label %if.end.74, !dbg !7979

if.end.74:                                        ; preds = %if.then.68, %for.body
  %68 = load i64, i64* %cur40, align 8, !dbg !7980, !tbaa !2742
  %69 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7981, !tbaa !2620
  %extra75 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %69, i32 0, i32 4, !dbg !7982
  %70 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra75, align 8, !dbg !7982, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %70, i32 0, i32 3, !dbg !7983
  %71 = load %struct._object**, %struct._object*** %children, align 8, !dbg !7983, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %71, i64 %68, !dbg !7981
  %72 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7981, !tbaa !2620
  %73 = load i64, i64* %i41, align 8, !dbg !7984, !tbaa !2742
  %74 = load %struct._object*, %struct._object** %recycle, align 8, !dbg !7985, !tbaa !2620
  %75 = bitcast %struct._object* %74 to %struct.PyListObject*, !dbg !7986
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %75, i32 0, i32 1, !dbg !7987
  %76 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !7987, !tbaa !5350
  %arrayidx76 = getelementptr %struct._object*, %struct._object** %76, i64 %73, !dbg !7988
  store %struct._object* %72, %struct._object** %arrayidx76, align 8, !dbg !7989, !tbaa !2620
  %77 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7990, !tbaa !2620
  %extra77 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %77, i32 0, i32 4, !dbg !7991
  %78 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra77, align 8, !dbg !7991, !tbaa !3362
  %children78 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %78, i32 0, i32 3, !dbg !7992
  %79 = load %struct._object**, %struct._object*** %children78, align 8, !dbg !7992, !tbaa !3451
  %80 = load i64, i64* %cur40, align 8, !dbg !7993, !tbaa !2742
  %add.ptr = getelementptr %struct._object*, %struct._object** %79, i64 %80, !dbg !7994
  %81 = load i64, i64* %i41, align 8, !dbg !7995, !tbaa !2742
  %idx.neg = sub i64 0, %81, !dbg !7996
  %add.ptr79 = getelementptr %struct._object*, %struct._object** %add.ptr, i64 %idx.neg, !dbg !7996
  %82 = bitcast %struct._object** %add.ptr79 to i8*, !dbg !7997
  %83 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !7998, !tbaa !2620
  %extra80 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %83, i32 0, i32 4, !dbg !7999
  %84 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra80, align 8, !dbg !7999, !tbaa !3362
  %children81 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %84, i32 0, i32 3, !dbg !8000
  %85 = load %struct._object**, %struct._object*** %children81, align 8, !dbg !8000, !tbaa !3451
  %86 = load i64, i64* %cur40, align 8, !dbg !8001, !tbaa !2742
  %add.ptr82 = getelementptr %struct._object*, %struct._object** %85, i64 %86, !dbg !8002
  %add.ptr83 = getelementptr %struct._object*, %struct._object** %add.ptr82, i64 1, !dbg !8003
  %87 = bitcast %struct._object** %add.ptr83 to i8*, !dbg !7997
  %88 = load i64, i64* %num_moved, align 8, !dbg !8004, !tbaa !2742
  %mul84 = mul i64 %88, 8, !dbg !8005
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %82, i8* %87, i64 %mul84, i32 8, i1 false), !dbg !7997
  %89 = bitcast i64* %num_moved to i8*, !dbg !8006
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !8006
  br label %for.inc, !dbg !8007

for.inc:                                          ; preds = %if.end.74
  %90 = load i64, i64* %step, align 8, !dbg !8008, !tbaa !2742
  %91 = load i64, i64* %cur40, align 8, !dbg !8009, !tbaa !2742
  %add85 = add i64 %91, %90, !dbg !8009
  store i64 %add85, i64* %cur40, align 8, !dbg !8009, !tbaa !2742
  %92 = load i64, i64* %i41, align 8, !dbg !8010, !tbaa !2742
  %inc = add i64 %92, 1, !dbg !8010
  store i64 %inc, i64* %i41, align 8, !dbg !8010, !tbaa !2742
  br label %for.cond, !dbg !8011

for.end:                                          ; preds = %for.cond
  %93 = load i64, i64* %start, align 8, !dbg !8012, !tbaa !2742
  %94 = load i64, i64* %slicelen, align 8, !dbg !8013, !tbaa !2742
  %95 = load i64, i64* %step, align 8, !dbg !8014, !tbaa !2742
  %mul86 = mul i64 %94, %95, !dbg !8015
  %add87 = add i64 %93, %mul86, !dbg !8016
  store i64 %add87, i64* %cur40, align 8, !dbg !8017, !tbaa !2742
  %96 = load i64, i64* %cur40, align 8, !dbg !8018, !tbaa !2742
  %97 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8020, !tbaa !2620
  %extra88 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %97, i32 0, i32 4, !dbg !8021
  %98 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra88, align 8, !dbg !8021, !tbaa !3362
  %length89 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %98, i32 0, i32 1, !dbg !8022
  %99 = load i32, i32* %length89, align 4, !dbg !8022, !tbaa !3446
  %conv90 = sext i32 %99 to i64, !dbg !8023
  %cmp91 = icmp ult i64 %96, %conv90, !dbg !8024
  br i1 %cmp91, label %if.then.93, label %if.end.107, !dbg !8025

if.then.93:                                       ; preds = %for.end
  %100 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8026, !tbaa !2620
  %extra94 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %100, i32 0, i32 4, !dbg !8028
  %101 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra94, align 8, !dbg !8028, !tbaa !3362
  %children95 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %101, i32 0, i32 3, !dbg !8029
  %102 = load %struct._object**, %struct._object*** %children95, align 8, !dbg !8029, !tbaa !3451
  %103 = load i64, i64* %cur40, align 8, !dbg !8030, !tbaa !2742
  %add.ptr96 = getelementptr %struct._object*, %struct._object** %102, i64 %103, !dbg !8031
  %104 = load i64, i64* %slicelen, align 8, !dbg !8032, !tbaa !2742
  %idx.neg97 = sub i64 0, %104, !dbg !8033
  %add.ptr98 = getelementptr %struct._object*, %struct._object** %add.ptr96, i64 %idx.neg97, !dbg !8033
  %105 = bitcast %struct._object** %add.ptr98 to i8*, !dbg !8034
  %106 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8035, !tbaa !2620
  %extra99 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %106, i32 0, i32 4, !dbg !8036
  %107 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra99, align 8, !dbg !8036, !tbaa !3362
  %children100 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %107, i32 0, i32 3, !dbg !8037
  %108 = load %struct._object**, %struct._object*** %children100, align 8, !dbg !8037, !tbaa !3451
  %109 = load i64, i64* %cur40, align 8, !dbg !8038, !tbaa !2742
  %add.ptr101 = getelementptr %struct._object*, %struct._object** %108, i64 %109, !dbg !8039
  %110 = bitcast %struct._object** %add.ptr101 to i8*, !dbg !8034
  %111 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8040, !tbaa !2620
  %extra102 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %111, i32 0, i32 4, !dbg !8041
  %112 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra102, align 8, !dbg !8041, !tbaa !3362
  %length103 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %112, i32 0, i32 1, !dbg !8042
  %113 = load i32, i32* %length103, align 4, !dbg !8042, !tbaa !3446
  %conv104 = sext i32 %113 to i64, !dbg !8040
  %114 = load i64, i64* %cur40, align 8, !dbg !8043, !tbaa !2742
  %sub105 = sub i64 %conv104, %114, !dbg !8044
  %mul106 = mul i64 %sub105, 8, !dbg !8045
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %105, i8* %110, i64 %mul106, i32 8, i1 false), !dbg !8034
  br label %if.end.107, !dbg !8046

if.end.107:                                       ; preds = %if.then.93, %for.end
  %115 = load i64, i64* %slicelen, align 8, !dbg !8047, !tbaa !2742
  %116 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8048, !tbaa !2620
  %extra108 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %116, i32 0, i32 4, !dbg !8049
  %117 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra108, align 8, !dbg !8049, !tbaa !3362
  %length109 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %117, i32 0, i32 1, !dbg !8050
  %118 = load i32, i32* %length109, align 4, !dbg !8051, !tbaa !3446
  %conv110 = sext i32 %118 to i64, !dbg !8051
  %sub111 = sub i64 %conv110, %115, !dbg !8051
  %conv112 = trunc i64 %sub111 to i32, !dbg !8051
  store i32 %conv112, i32* %length109, align 4, !dbg !8051, !tbaa !3446
  br label %do.body, !dbg !8052

do.body:                                          ; preds = %if.end.107
  %119 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8053
  call void @llvm.lifetime.start(i64 8, i8* %119) #1, !dbg !8053
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1175, metadata !2613), !dbg !8055
  %120 = load %struct._object*, %struct._object** %recycle, align 8, !dbg !8056, !tbaa !2620
  store %struct._object* %120, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8055, !tbaa !2620
  %121 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8057, !tbaa !2620
  %cmp113 = icmp ne %struct._object* %121, null, !dbg !8058
  br i1 %cmp113, label %if.then.115, label %if.end.123, !dbg !8059

if.then.115:                                      ; preds = %do.body
  br label %do.body.116, !dbg !8060

do.body.116:                                      ; preds = %if.then.115
  %122 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8062
  call void @llvm.lifetime.start(i64 8, i8* %122) #1, !dbg !8062
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1177, metadata !2613), !dbg !8064
  %123 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8065, !tbaa !2620
  store %struct._object* %123, %struct._object** %_py_decref_tmp, align 8, !dbg !8064, !tbaa !2620
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8066, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 0, !dbg !8068
  %125 = load i64, i64* %ob_refcnt, align 8, !dbg !8069, !tbaa !2631
  %dec = add i64 %125, -1, !dbg !8069
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8069, !tbaa !2631
  %cmp117 = icmp ne i64 %dec, 0, !dbg !8070
  br i1 %cmp117, label %if.then.119, label %if.else.120, !dbg !8071

if.then.119:                                      ; preds = %do.body.116
  br label %if.end.122, !dbg !8072

if.else.120:                                      ; preds = %do.body.116
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8074, !tbaa !2620
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 1, !dbg !8076
  %127 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8, !dbg !8076, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %127, i32 0, i32 4, !dbg !8077
  %128 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8077, !tbaa !2705
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8078, !tbaa !2620
  call void %128(%struct._object* %129), !dbg !8079
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.120, %if.then.119
  %130 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8080
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !8080
  br label %do.cond, !dbg !8082

do.cond:                                          ; preds = %if.end.122
  br label %do.end, !dbg !8083

do.end:                                           ; preds = %do.cond
  br label %if.end.123, !dbg !8085

if.end.123:                                       ; preds = %do.end, %do.body
  %131 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8087
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !8087
  br label %do.cond.124, !dbg !8090

do.cond.124:                                      ; preds = %if.end.123
  br label %do.end.125, !dbg !8091

do.end.125:                                       ; preds = %do.cond.124
  store i32 0, i32* %retval, !dbg !8093
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126, !dbg !8093

cleanup.126:                                      ; preds = %do.end.125, %if.then.56, %if.then.44
  %132 = bitcast i64* %i41 to i8*, !dbg !8094
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !8094
  %133 = bitcast i64* %cur40 to i8*, !dbg !8094
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !8094
  br label %cleanup.318

if.else.128:                                      ; preds = %if.end.36
  %134 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8095, !tbaa !2620
  %call129 = call %struct._object* @PySequence_Fast(%struct._object* %134, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0)), !dbg !8097
  store %struct._object* %call129, %struct._object** %seq, align 8, !dbg !8098, !tbaa !2620
  %135 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8099, !tbaa !2620
  %tobool130 = icmp ne %struct._object* %135, null, !dbg !8099
  br i1 %tobool130, label %if.end.134, label %if.then.131, !dbg !8101

if.then.131:                                      ; preds = %if.else.128
  %136 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8102, !tbaa !2620
  %137 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8104, !tbaa !2620
  %ob_type132 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 1, !dbg !8105
  %138 = load %struct._typeobject*, %struct._typeobject** %ob_type132, align 8, !dbg !8105, !tbaa !2703
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %138, i32 0, i32 1, !dbg !8106
  %139 = load i8*, i8** %tp_name, align 8, !dbg !8106, !tbaa !3295
  %call133 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %136, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i32 0, i32 0), i8* %139), !dbg !8107
  store i32 -1, i32* %retval, !dbg !8108
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.318, !dbg !8108

if.end.134:                                       ; preds = %if.else.128
  %140 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8109, !tbaa !2620
  %call135 = call i64 @PySequence_Size(%struct._object* %140), !dbg !8110
  store i64 %call135, i64* %newlen, align 8, !dbg !8111, !tbaa !2742
  br label %if.end.136

if.end.136:                                       ; preds = %if.end.134
  %141 = load i64, i64* %step, align 8, !dbg !8112, !tbaa !2742
  %cmp137 = icmp ne i64 %141, 1, !dbg !8114
  br i1 %cmp137, label %land.lhs.true.139, label %if.end.144, !dbg !8115

land.lhs.true.139:                                ; preds = %if.end.136
  %142 = load i64, i64* %newlen, align 8, !dbg !8116, !tbaa !2742
  %143 = load i64, i64* %slicelen, align 8, !dbg !8118, !tbaa !2742
  %cmp140 = icmp ne i64 %142, %143, !dbg !8119
  br i1 %cmp140, label %if.then.142, label %if.end.144, !dbg !8120

if.then.142:                                      ; preds = %land.lhs.true.139
  %144 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8121, !tbaa !2620
  %145 = load i64, i64* %newlen, align 8, !dbg !8123, !tbaa !2742
  %146 = load i64, i64* %slicelen, align 8, !dbg !8124, !tbaa !2742
  %call143 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %144, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.43, i32 0, i32 0), i64 %145, i64 %146), !dbg !8125
  store i32 -1, i32* %retval, !dbg !8126
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.318, !dbg !8126

if.end.144:                                       ; preds = %land.lhs.true.139, %if.end.136
  %147 = load i64, i64* %newlen, align 8, !dbg !8127, !tbaa !2742
  %148 = load i64, i64* %slicelen, align 8, !dbg !8128, !tbaa !2742
  %cmp145 = icmp sgt i64 %147, %148, !dbg !8129
  br i1 %cmp145, label %if.then.147, label %if.end.171, !dbg !8130

if.then.147:                                      ; preds = %if.end.144
  %149 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8131, !tbaa !2620
  %150 = load i64, i64* %newlen, align 8, !dbg !8132, !tbaa !2742
  %151 = load i64, i64* %slicelen, align 8, !dbg !8133, !tbaa !2742
  %sub148 = sub i64 %150, %151, !dbg !8134
  %conv149 = trunc i64 %sub148 to i32, !dbg !8132
  %call150 = call i32 @element_resize(%struct.ElementObject* %149, i32 %conv149), !dbg !8135
  %cmp151 = icmp slt i32 %call150, 0, !dbg !8136
  br i1 %cmp151, label %if.then.153, label %if.end.170, !dbg !8137

if.then.153:                                      ; preds = %if.then.147
  %152 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8138, !tbaa !2620
  %tobool154 = icmp ne %struct._object* %152, null, !dbg !8138
  br i1 %tobool154, label %if.then.155, label %if.end.169, !dbg !8139

if.then.155:                                      ; preds = %if.then.153
  br label %do.body.156, !dbg !8140

do.body.156:                                      ; preds = %if.then.155
  %153 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !8141
  call void @llvm.lifetime.start(i64 8, i8* %153) #1, !dbg !8141
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp157, metadata !1180, metadata !2613), !dbg !8143
  %154 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8144, !tbaa !2620
  store %struct._object* %154, %struct._object** %_py_decref_tmp157, align 8, !dbg !8143, !tbaa !2620
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !8145, !tbaa !2620
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0, !dbg !8147
  %156 = load i64, i64* %ob_refcnt158, align 8, !dbg !8148, !tbaa !2631
  %dec159 = add i64 %156, -1, !dbg !8148
  store i64 %dec159, i64* %ob_refcnt158, align 8, !dbg !8148, !tbaa !2631
  %cmp160 = icmp ne i64 %dec159, 0, !dbg !8149
  br i1 %cmp160, label %if.then.162, label %if.else.163, !dbg !8150

if.then.162:                                      ; preds = %do.body.156
  br label %if.end.166, !dbg !8151

if.else.163:                                      ; preds = %do.body.156
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !8153, !tbaa !2620
  %ob_type164 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1, !dbg !8155
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type164, align 8, !dbg !8155, !tbaa !2703
  %tp_dealloc165 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %158, i32 0, i32 4, !dbg !8156
  %159 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc165, align 8, !dbg !8156, !tbaa !2705
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !8157, !tbaa !2620
  call void %159(%struct._object* %160), !dbg !8158
  br label %if.end.166

if.end.166:                                       ; preds = %if.else.163, %if.then.162
  %161 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !8159
  call void @llvm.lifetime.end(i64 8, i8* %161) #1, !dbg !8159
  br label %do.cond.167, !dbg !8161

do.cond.167:                                      ; preds = %if.end.166
  br label %do.end.168, !dbg !8162

do.end.168:                                       ; preds = %do.cond.167
  br label %if.end.169, !dbg !8164

if.end.169:                                       ; preds = %do.end.168, %if.then.153
  store i32 -1, i32* %retval, !dbg !8165
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.318, !dbg !8165

if.end.170:                                       ; preds = %if.then.147
  br label %if.end.171, !dbg !8166

if.end.171:                                       ; preds = %if.end.170, %if.end.144
  %162 = load i64, i64* %slicelen, align 8, !dbg !8167, !tbaa !2742
  %cmp172 = icmp sgt i64 %162, 0, !dbg !8168
  br i1 %cmp172, label %if.then.174, label %if.end.208, !dbg !8169

if.then.174:                                      ; preds = %if.end.171
  %163 = load i64, i64* %slicelen, align 8, !dbg !8170, !tbaa !2742
  %call175 = call %struct._object* @PyList_New(i64 %163), !dbg !8171
  store %struct._object* %call175, %struct._object** %recycle, align 8, !dbg !8172, !tbaa !2620
  %164 = load %struct._object*, %struct._object** %recycle, align 8, !dbg !8173, !tbaa !2620
  %tobool176 = icmp ne %struct._object* %164, null, !dbg !8173
  br i1 %tobool176, label %if.end.194, label %if.then.177, !dbg !8174

if.then.177:                                      ; preds = %if.then.174
  %165 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8175, !tbaa !2620
  %tobool178 = icmp ne %struct._object* %165, null, !dbg !8175
  br i1 %tobool178, label %if.then.179, label %if.end.193, !dbg !8176

if.then.179:                                      ; preds = %if.then.177
  br label %do.body.180, !dbg !8177

do.body.180:                                      ; preds = %if.then.179
  %166 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !8178
  call void @llvm.lifetime.start(i64 8, i8* %166) #1, !dbg !8178
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp181, metadata !1188, metadata !2613), !dbg !8180
  %167 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8181, !tbaa !2620
  store %struct._object* %167, %struct._object** %_py_decref_tmp181, align 8, !dbg !8180, !tbaa !2620
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !8182, !tbaa !2620
  %ob_refcnt182 = getelementptr inbounds %struct._object, %struct._object* %168, i32 0, i32 0, !dbg !8184
  %169 = load i64, i64* %ob_refcnt182, align 8, !dbg !8185, !tbaa !2631
  %dec183 = add i64 %169, -1, !dbg !8185
  store i64 %dec183, i64* %ob_refcnt182, align 8, !dbg !8185, !tbaa !2631
  %cmp184 = icmp ne i64 %dec183, 0, !dbg !8186
  br i1 %cmp184, label %if.then.186, label %if.else.187, !dbg !8187

if.then.186:                                      ; preds = %do.body.180
  br label %if.end.190, !dbg !8188

if.else.187:                                      ; preds = %do.body.180
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !8190, !tbaa !2620
  %ob_type188 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 1, !dbg !8192
  %171 = load %struct._typeobject*, %struct._typeobject** %ob_type188, align 8, !dbg !8192, !tbaa !2703
  %tp_dealloc189 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %171, i32 0, i32 4, !dbg !8193
  %172 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc189, align 8, !dbg !8193, !tbaa !2705
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !8194, !tbaa !2620
  call void %172(%struct._object* %173), !dbg !8195
  br label %if.end.190

if.end.190:                                       ; preds = %if.else.187, %if.then.186
  %174 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !8196
  call void @llvm.lifetime.end(i64 8, i8* %174) #1, !dbg !8196
  br label %do.cond.191, !dbg !8198

do.cond.191:                                      ; preds = %if.end.190
  br label %do.end.192, !dbg !8199

do.end.192:                                       ; preds = %do.cond.191
  br label %if.end.193, !dbg !8201

if.end.193:                                       ; preds = %do.end.192, %if.then.177
  store i32 -1, i32* %retval, !dbg !8202
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.318, !dbg !8202

if.end.194:                                       ; preds = %if.then.174
  %175 = load i64, i64* %start, align 8, !dbg !8203, !tbaa !2742
  store i64 %175, i64* %cur, align 8, !dbg !8205, !tbaa !2742
  store i64 0, i64* %i19, align 8, !dbg !8206, !tbaa !2742
  br label %for.cond.195, !dbg !8207

for.cond.195:                                     ; preds = %for.inc.204, %if.end.194
  %176 = load i64, i64* %i19, align 8, !dbg !8208, !tbaa !2742
  %177 = load i64, i64* %slicelen, align 8, !dbg !8212, !tbaa !2742
  %cmp196 = icmp slt i64 %176, %177, !dbg !8213
  br i1 %cmp196, label %for.body.198, label %for.end.207, !dbg !8214

for.body.198:                                     ; preds = %for.cond.195
  %178 = load i64, i64* %cur, align 8, !dbg !8215, !tbaa !2742
  %179 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8216, !tbaa !2620
  %extra199 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %179, i32 0, i32 4, !dbg !8217
  %180 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra199, align 8, !dbg !8217, !tbaa !3362
  %children200 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %180, i32 0, i32 3, !dbg !8218
  %181 = load %struct._object**, %struct._object*** %children200, align 8, !dbg !8218, !tbaa !3451
  %arrayidx201 = getelementptr %struct._object*, %struct._object** %181, i64 %178, !dbg !8216
  %182 = load %struct._object*, %struct._object** %arrayidx201, align 8, !dbg !8216, !tbaa !2620
  %183 = load i64, i64* %i19, align 8, !dbg !8219, !tbaa !2742
  %184 = load %struct._object*, %struct._object** %recycle, align 8, !dbg !8220, !tbaa !2620
  %185 = bitcast %struct._object* %184 to %struct.PyListObject*, !dbg !8221
  %ob_item202 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %185, i32 0, i32 1, !dbg !8222
  %186 = load %struct._object**, %struct._object*** %ob_item202, align 8, !dbg !8222, !tbaa !5350
  %arrayidx203 = getelementptr %struct._object*, %struct._object** %186, i64 %183, !dbg !8223
  store %struct._object* %182, %struct._object** %arrayidx203, align 8, !dbg !8224, !tbaa !2620
  br label %for.inc.204, !dbg !8225

for.inc.204:                                      ; preds = %for.body.198
  %187 = load i64, i64* %step, align 8, !dbg !8226, !tbaa !2742
  %188 = load i64, i64* %cur, align 8, !dbg !8227, !tbaa !2742
  %add205 = add i64 %188, %187, !dbg !8227
  store i64 %add205, i64* %cur, align 8, !dbg !8227, !tbaa !2742
  %189 = load i64, i64* %i19, align 8, !dbg !8228, !tbaa !2742
  %inc206 = add i64 %189, 1, !dbg !8228
  store i64 %inc206, i64* %i19, align 8, !dbg !8228, !tbaa !2742
  br label %for.cond.195, !dbg !8229

for.end.207:                                      ; preds = %for.cond.195
  br label %if.end.208, !dbg !8230

if.end.208:                                       ; preds = %for.end.207, %if.end.171
  %190 = load i64, i64* %newlen, align 8, !dbg !8231, !tbaa !2742
  %191 = load i64, i64* %slicelen, align 8, !dbg !8233, !tbaa !2742
  %cmp209 = icmp slt i64 %190, %191, !dbg !8234
  br i1 %cmp209, label %if.then.211, label %if.else.230, !dbg !8235

if.then.211:                                      ; preds = %if.end.208
  %192 = load i64, i64* %stop, align 8, !dbg !8236, !tbaa !2742
  store i64 %192, i64* %i19, align 8, !dbg !8239, !tbaa !2742
  br label %for.cond.212, !dbg !8240

for.cond.212:                                     ; preds = %for.inc.227, %if.then.211
  %193 = load i64, i64* %i19, align 8, !dbg !8241, !tbaa !2742
  %194 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8245, !tbaa !2620
  %extra213 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %194, i32 0, i32 4, !dbg !8246
  %195 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra213, align 8, !dbg !8246, !tbaa !3362
  %length214 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %195, i32 0, i32 1, !dbg !8247
  %196 = load i32, i32* %length214, align 4, !dbg !8247, !tbaa !3446
  %conv215 = sext i32 %196 to i64, !dbg !8245
  %cmp216 = icmp slt i64 %193, %conv215, !dbg !8248
  br i1 %cmp216, label %for.body.218, label %for.end.229, !dbg !8249

for.body.218:                                     ; preds = %for.cond.212
  %197 = load i64, i64* %i19, align 8, !dbg !8250, !tbaa !2742
  %198 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8251, !tbaa !2620
  %extra219 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %198, i32 0, i32 4, !dbg !8252
  %199 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra219, align 8, !dbg !8252, !tbaa !3362
  %children220 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %199, i32 0, i32 3, !dbg !8253
  %200 = load %struct._object**, %struct._object*** %children220, align 8, !dbg !8253, !tbaa !3451
  %arrayidx221 = getelementptr %struct._object*, %struct._object** %200, i64 %197, !dbg !8251
  %201 = load %struct._object*, %struct._object** %arrayidx221, align 8, !dbg !8251, !tbaa !2620
  %202 = load i64, i64* %i19, align 8, !dbg !8254, !tbaa !2742
  %203 = load i64, i64* %newlen, align 8, !dbg !8255, !tbaa !2742
  %add222 = add i64 %202, %203, !dbg !8256
  %204 = load i64, i64* %slicelen, align 8, !dbg !8257, !tbaa !2742
  %sub223 = sub i64 %add222, %204, !dbg !8258
  %205 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8259, !tbaa !2620
  %extra224 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %205, i32 0, i32 4, !dbg !8260
  %206 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra224, align 8, !dbg !8260, !tbaa !3362
  %children225 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %206, i32 0, i32 3, !dbg !8261
  %207 = load %struct._object**, %struct._object*** %children225, align 8, !dbg !8261, !tbaa !3451
  %arrayidx226 = getelementptr %struct._object*, %struct._object** %207, i64 %sub223, !dbg !8259
  store %struct._object* %201, %struct._object** %arrayidx226, align 8, !dbg !8262, !tbaa !2620
  br label %for.inc.227, !dbg !8259

for.inc.227:                                      ; preds = %for.body.218
  %208 = load i64, i64* %i19, align 8, !dbg !8263, !tbaa !2742
  %inc228 = add i64 %208, 1, !dbg !8263
  store i64 %inc228, i64* %i19, align 8, !dbg !8263, !tbaa !2742
  br label %for.cond.212, !dbg !8264

for.end.229:                                      ; preds = %for.cond.212
  br label %if.end.254, !dbg !8265

if.else.230:                                      ; preds = %if.end.208
  %209 = load i64, i64* %newlen, align 8, !dbg !8266, !tbaa !2742
  %210 = load i64, i64* %slicelen, align 8, !dbg !8268, !tbaa !2742
  %cmp231 = icmp sgt i64 %209, %210, !dbg !8269
  br i1 %cmp231, label %if.then.233, label %if.end.253, !dbg !8270

if.then.233:                                      ; preds = %if.else.230
  %211 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8271, !tbaa !2620
  %extra234 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %211, i32 0, i32 4, !dbg !8274
  %212 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra234, align 8, !dbg !8274, !tbaa !3362
  %length235 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %212, i32 0, i32 1, !dbg !8275
  %213 = load i32, i32* %length235, align 4, !dbg !8275, !tbaa !3446
  %sub236 = sub i32 %213, 1, !dbg !8276
  %conv237 = sext i32 %sub236 to i64, !dbg !8271
  store i64 %conv237, i64* %i19, align 8, !dbg !8277, !tbaa !2742
  br label %for.cond.238, !dbg !8278

for.cond.238:                                     ; preds = %for.inc.250, %if.then.233
  %214 = load i64, i64* %i19, align 8, !dbg !8279, !tbaa !2742
  %215 = load i64, i64* %stop, align 8, !dbg !8283, !tbaa !2742
  %cmp239 = icmp sge i64 %214, %215, !dbg !8284
  br i1 %cmp239, label %for.body.241, label %for.end.252, !dbg !8285

for.body.241:                                     ; preds = %for.cond.238
  %216 = load i64, i64* %i19, align 8, !dbg !8286, !tbaa !2742
  %217 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8287, !tbaa !2620
  %extra242 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %217, i32 0, i32 4, !dbg !8288
  %218 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra242, align 8, !dbg !8288, !tbaa !3362
  %children243 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %218, i32 0, i32 3, !dbg !8289
  %219 = load %struct._object**, %struct._object*** %children243, align 8, !dbg !8289, !tbaa !3451
  %arrayidx244 = getelementptr %struct._object*, %struct._object** %219, i64 %216, !dbg !8287
  %220 = load %struct._object*, %struct._object** %arrayidx244, align 8, !dbg !8287, !tbaa !2620
  %221 = load i64, i64* %i19, align 8, !dbg !8290, !tbaa !2742
  %222 = load i64, i64* %newlen, align 8, !dbg !8291, !tbaa !2742
  %add245 = add i64 %221, %222, !dbg !8292
  %223 = load i64, i64* %slicelen, align 8, !dbg !8293, !tbaa !2742
  %sub246 = sub i64 %add245, %223, !dbg !8294
  %224 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8295, !tbaa !2620
  %extra247 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %224, i32 0, i32 4, !dbg !8296
  %225 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra247, align 8, !dbg !8296, !tbaa !3362
  %children248 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %225, i32 0, i32 3, !dbg !8297
  %226 = load %struct._object**, %struct._object*** %children248, align 8, !dbg !8297, !tbaa !3451
  %arrayidx249 = getelementptr %struct._object*, %struct._object** %226, i64 %sub246, !dbg !8295
  store %struct._object* %220, %struct._object** %arrayidx249, align 8, !dbg !8298, !tbaa !2620
  br label %for.inc.250, !dbg !8295

for.inc.250:                                      ; preds = %for.body.241
  %227 = load i64, i64* %i19, align 8, !dbg !8299, !tbaa !2742
  %dec251 = add i64 %227, -1, !dbg !8299
  store i64 %dec251, i64* %i19, align 8, !dbg !8299, !tbaa !2742
  br label %for.cond.238, !dbg !8300

for.end.252:                                      ; preds = %for.cond.238
  br label %if.end.253, !dbg !8301

if.end.253:                                       ; preds = %for.end.252, %if.else.230
  br label %if.end.254

if.end.254:                                       ; preds = %if.end.253, %for.end.229
  %228 = load i64, i64* %start, align 8, !dbg !8302, !tbaa !2742
  store i64 %228, i64* %cur, align 8, !dbg !8303, !tbaa !2742
  store i64 0, i64* %i19, align 8, !dbg !8304, !tbaa !2742
  br label %for.cond.255, !dbg !8305

for.cond.255:                                     ; preds = %for.inc.271, %if.end.254
  %229 = load i64, i64* %i19, align 8, !dbg !8306, !tbaa !2742
  %230 = load i64, i64* %newlen, align 8, !dbg !8309, !tbaa !2742
  %cmp256 = icmp slt i64 %229, %230, !dbg !8310
  br i1 %cmp256, label %for.body.258, label %for.end.274, !dbg !8311

for.body.258:                                     ; preds = %for.cond.255
  %231 = bitcast %struct._object** %element to i8*, !dbg !8312
  call void @llvm.lifetime.start(i64 8, i8* %231) #1, !dbg !8312
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !1196, metadata !2613), !dbg !8313
  %232 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8314, !tbaa !2620
  %ob_type259 = getelementptr inbounds %struct._object, %struct._object* %232, i32 0, i32 1, !dbg !8315
  %233 = load %struct._typeobject*, %struct._typeobject** %ob_type259, align 8, !dbg !8315, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %233, i32 0, i32 19, !dbg !8316
  %234 = load i64, i64* %tp_flags, align 8, !dbg !8316, !tbaa !3263
  %and = and i64 %234, 33554432, !dbg !8317
  %cmp260 = icmp ne i64 %and, 0, !dbg !8318
  br i1 %cmp260, label %cond.true, label %cond.false, !dbg !8319

cond.true:                                        ; preds = %for.body.258
  %235 = load i64, i64* %i19, align 8, !dbg !8320, !tbaa !2742
  %236 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8322, !tbaa !2620
  %237 = bitcast %struct._object* %236 to %struct.PyListObject*, !dbg !8323
  %ob_item262 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %237, i32 0, i32 1, !dbg !8324
  %238 = load %struct._object**, %struct._object*** %ob_item262, align 8, !dbg !8324, !tbaa !5350
  %arrayidx263 = getelementptr %struct._object*, %struct._object** %238, i64 %235, !dbg !8325
  %239 = load %struct._object*, %struct._object** %arrayidx263, align 8, !dbg !8325, !tbaa !2620
  br label %cond.end, !dbg !8319

cond.false:                                       ; preds = %for.body.258
  %240 = load i64, i64* %i19, align 8, !dbg !8326, !tbaa !2742
  %241 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8328, !tbaa !2620
  %242 = bitcast %struct._object* %241 to %struct.PyTupleObject*, !dbg !8329
  %ob_item264 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %242, i32 0, i32 1, !dbg !8330
  %arrayidx265 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item264, i32 0, i64 %240, !dbg !8331
  %243 = load %struct._object*, %struct._object** %arrayidx265, align 8, !dbg !8331, !tbaa !2620
  br label %cond.end, !dbg !8319

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %239, %cond.true ], [ %243, %cond.false ], !dbg !8319
  store %struct._object* %cond, %struct._object** %element, align 8, !dbg !8332, !tbaa !2620
  %244 = load %struct._object*, %struct._object** %element, align 8, !dbg !8335, !tbaa !2620
  %ob_refcnt266 = getelementptr inbounds %struct._object, %struct._object* %244, i32 0, i32 0, !dbg !8336
  %245 = load i64, i64* %ob_refcnt266, align 8, !dbg !8337, !tbaa !2631
  %inc267 = add i64 %245, 1, !dbg !8337
  store i64 %inc267, i64* %ob_refcnt266, align 8, !dbg !8337, !tbaa !2631
  %246 = load %struct._object*, %struct._object** %element, align 8, !dbg !8338, !tbaa !2620
  %247 = load i64, i64* %cur, align 8, !dbg !8339, !tbaa !2742
  %248 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8340, !tbaa !2620
  %extra268 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %248, i32 0, i32 4, !dbg !8341
  %249 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra268, align 8, !dbg !8341, !tbaa !3362
  %children269 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %249, i32 0, i32 3, !dbg !8342
  %250 = load %struct._object**, %struct._object*** %children269, align 8, !dbg !8342, !tbaa !3451
  %arrayidx270 = getelementptr %struct._object*, %struct._object** %250, i64 %247, !dbg !8340
  store %struct._object* %246, %struct._object** %arrayidx270, align 8, !dbg !8343, !tbaa !2620
  %251 = bitcast %struct._object** %element to i8*, !dbg !8344
  call void @llvm.lifetime.end(i64 8, i8* %251) #1, !dbg !8344
  br label %for.inc.271, !dbg !8345

for.inc.271:                                      ; preds = %cond.end
  %252 = load i64, i64* %step, align 8, !dbg !8346, !tbaa !2742
  %253 = load i64, i64* %cur, align 8, !dbg !8347, !tbaa !2742
  %add272 = add i64 %253, %252, !dbg !8347
  store i64 %add272, i64* %cur, align 8, !dbg !8347, !tbaa !2742
  %254 = load i64, i64* %i19, align 8, !dbg !8348, !tbaa !2742
  %inc273 = add i64 %254, 1, !dbg !8348
  store i64 %inc273, i64* %i19, align 8, !dbg !8348, !tbaa !2742
  br label %for.cond.255, !dbg !8349

for.end.274:                                      ; preds = %for.cond.255
  %255 = load i64, i64* %newlen, align 8, !dbg !8350, !tbaa !2742
  %256 = load i64, i64* %slicelen, align 8, !dbg !8351, !tbaa !2742
  %sub275 = sub i64 %255, %256, !dbg !8352
  %257 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !8353, !tbaa !2620
  %extra276 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %257, i32 0, i32 4, !dbg !8354
  %258 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra276, align 8, !dbg !8354, !tbaa !3362
  %length277 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %258, i32 0, i32 1, !dbg !8355
  %259 = load i32, i32* %length277, align 4, !dbg !8356, !tbaa !3446
  %conv278 = sext i32 %259 to i64, !dbg !8356
  %add279 = add i64 %conv278, %sub275, !dbg !8356
  %conv280 = trunc i64 %add279 to i32, !dbg !8356
  store i32 %conv280, i32* %length277, align 4, !dbg !8356, !tbaa !3446
  %260 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8357, !tbaa !2620
  %tobool281 = icmp ne %struct._object* %260, null, !dbg !8357
  br i1 %tobool281, label %if.then.282, label %if.end.296, !dbg !8358

if.then.282:                                      ; preds = %for.end.274
  br label %do.body.283, !dbg !8359

do.body.283:                                      ; preds = %if.then.282
  %261 = bitcast %struct._object** %_py_decref_tmp284 to i8*, !dbg !8360
  call void @llvm.lifetime.start(i64 8, i8* %261) #1, !dbg !8360
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp284, metadata !1200, metadata !2613), !dbg !8362
  %262 = load %struct._object*, %struct._object** %seq, align 8, !dbg !8363, !tbaa !2620
  store %struct._object* %262, %struct._object** %_py_decref_tmp284, align 8, !dbg !8362, !tbaa !2620
  %263 = load %struct._object*, %struct._object** %_py_decref_tmp284, align 8, !dbg !8364, !tbaa !2620
  %ob_refcnt285 = getelementptr inbounds %struct._object, %struct._object* %263, i32 0, i32 0, !dbg !8366
  %264 = load i64, i64* %ob_refcnt285, align 8, !dbg !8367, !tbaa !2631
  %dec286 = add i64 %264, -1, !dbg !8367
  store i64 %dec286, i64* %ob_refcnt285, align 8, !dbg !8367, !tbaa !2631
  %cmp287 = icmp ne i64 %dec286, 0, !dbg !8368
  br i1 %cmp287, label %if.then.289, label %if.else.290, !dbg !8369

if.then.289:                                      ; preds = %do.body.283
  br label %if.end.293, !dbg !8370

if.else.290:                                      ; preds = %do.body.283
  %265 = load %struct._object*, %struct._object** %_py_decref_tmp284, align 8, !dbg !8372, !tbaa !2620
  %ob_type291 = getelementptr inbounds %struct._object, %struct._object* %265, i32 0, i32 1, !dbg !8374
  %266 = load %struct._typeobject*, %struct._typeobject** %ob_type291, align 8, !dbg !8374, !tbaa !2703
  %tp_dealloc292 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %266, i32 0, i32 4, !dbg !8375
  %267 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc292, align 8, !dbg !8375, !tbaa !2705
  %268 = load %struct._object*, %struct._object** %_py_decref_tmp284, align 8, !dbg !8376, !tbaa !2620
  call void %267(%struct._object* %268), !dbg !8377
  br label %if.end.293

if.end.293:                                       ; preds = %if.else.290, %if.then.289
  %269 = bitcast %struct._object** %_py_decref_tmp284 to i8*, !dbg !8378
  call void @llvm.lifetime.end(i64 8, i8* %269) #1, !dbg !8378
  br label %do.cond.294, !dbg !8380

do.cond.294:                                      ; preds = %if.end.293
  br label %do.end.295, !dbg !8381

do.end.295:                                       ; preds = %do.cond.294
  br label %if.end.296, !dbg !8383

if.end.296:                                       ; preds = %do.end.295, %for.end.274
  br label %do.body.297, !dbg !8384

do.body.297:                                      ; preds = %if.end.296
  %270 = bitcast %struct._object** %_py_xdecref_tmp298 to i8*, !dbg !8385
  call void @llvm.lifetime.start(i64 8, i8* %270) #1, !dbg !8385
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp298, metadata !1204, metadata !2613), !dbg !8387
  %271 = load %struct._object*, %struct._object** %recycle, align 8, !dbg !8388, !tbaa !2620
  store %struct._object* %271, %struct._object** %_py_xdecref_tmp298, align 8, !dbg !8387, !tbaa !2620
  %272 = load %struct._object*, %struct._object** %_py_xdecref_tmp298, align 8, !dbg !8389, !tbaa !2620
  %cmp299 = icmp ne %struct._object* %272, null, !dbg !8390
  br i1 %cmp299, label %if.then.301, label %if.end.315, !dbg !8391

if.then.301:                                      ; preds = %do.body.297
  br label %do.body.302, !dbg !8392

do.body.302:                                      ; preds = %if.then.301
  %273 = bitcast %struct._object** %_py_decref_tmp303 to i8*, !dbg !8394
  call void @llvm.lifetime.start(i64 8, i8* %273) #1, !dbg !8394
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp303, metadata !1206, metadata !2613), !dbg !8396
  %274 = load %struct._object*, %struct._object** %_py_xdecref_tmp298, align 8, !dbg !8397, !tbaa !2620
  store %struct._object* %274, %struct._object** %_py_decref_tmp303, align 8, !dbg !8396, !tbaa !2620
  %275 = load %struct._object*, %struct._object** %_py_decref_tmp303, align 8, !dbg !8398, !tbaa !2620
  %ob_refcnt304 = getelementptr inbounds %struct._object, %struct._object* %275, i32 0, i32 0, !dbg !8400
  %276 = load i64, i64* %ob_refcnt304, align 8, !dbg !8401, !tbaa !2631
  %dec305 = add i64 %276, -1, !dbg !8401
  store i64 %dec305, i64* %ob_refcnt304, align 8, !dbg !8401, !tbaa !2631
  %cmp306 = icmp ne i64 %dec305, 0, !dbg !8402
  br i1 %cmp306, label %if.then.308, label %if.else.309, !dbg !8403

if.then.308:                                      ; preds = %do.body.302
  br label %if.end.312, !dbg !8404

if.else.309:                                      ; preds = %do.body.302
  %277 = load %struct._object*, %struct._object** %_py_decref_tmp303, align 8, !dbg !8406, !tbaa !2620
  %ob_type310 = getelementptr inbounds %struct._object, %struct._object* %277, i32 0, i32 1, !dbg !8408
  %278 = load %struct._typeobject*, %struct._typeobject** %ob_type310, align 8, !dbg !8408, !tbaa !2703
  %tp_dealloc311 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %278, i32 0, i32 4, !dbg !8409
  %279 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc311, align 8, !dbg !8409, !tbaa !2705
  %280 = load %struct._object*, %struct._object** %_py_decref_tmp303, align 8, !dbg !8410, !tbaa !2620
  call void %279(%struct._object* %280), !dbg !8411
  br label %if.end.312

if.end.312:                                       ; preds = %if.else.309, %if.then.308
  %281 = bitcast %struct._object** %_py_decref_tmp303 to i8*, !dbg !8412
  call void @llvm.lifetime.end(i64 8, i8* %281) #1, !dbg !8412
  br label %do.cond.313, !dbg !8414

do.cond.313:                                      ; preds = %if.end.312
  br label %do.end.314, !dbg !8415

do.end.314:                                       ; preds = %do.cond.313
  br label %if.end.315, !dbg !8417

if.end.315:                                       ; preds = %do.end.314, %do.body.297
  %282 = bitcast %struct._object** %_py_xdecref_tmp298 to i8*, !dbg !8419
  call void @llvm.lifetime.end(i64 8, i8* %282) #1, !dbg !8419
  br label %do.cond.316, !dbg !8422

do.cond.316:                                      ; preds = %if.end.315
  br label %do.end.317, !dbg !8423

do.end.317:                                       ; preds = %do.cond.316
  store i32 0, i32* %retval, !dbg !8425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.318, !dbg !8425

cleanup.318:                                      ; preds = %do.end.317, %if.end.193, %if.end.169, %if.then.142, %if.then.131, %cleanup.126, %if.then.35, %if.then.26
  %283 = bitcast %struct._object** %seq to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %283) #1, !dbg !8426
  %284 = bitcast %struct._object** %recycle to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %284) #1, !dbg !8426
  %285 = bitcast i64* %i19 to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %285) #1, !dbg !8426
  %286 = bitcast i64* %cur to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %286) #1, !dbg !8426
  %287 = bitcast i64* %newlen to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %287) #1, !dbg !8426
  %288 = bitcast i64* %slicelen to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %288) #1, !dbg !8426
  %289 = bitcast i64* %step to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %289) #1, !dbg !8426
  %290 = bitcast i64* %stop to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %290) #1, !dbg !8426
  %291 = bitcast i64* %start to i8*, !dbg !8426
  call void @llvm.lifetime.end(i64 8, i8* %291) #1, !dbg !8426
  br label %cleanup.328

if.else.327:                                      ; preds = %if.else
  %292 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8427, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %292, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i32 0, i32 0)), !dbg !8429
  store i32 -1, i32* %retval, !dbg !8430
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.328, !dbg !8430

cleanup.328:                                      ; preds = %if.else.327, %cleanup.318, %cleanup
  %293 = bitcast %struct.ElementObject** %self to i8*, !dbg !8431
  call void @llvm.lifetime.end(i64 8, i8* %293) #1, !dbg !8431
  %294 = load i32, i32* %retval, !dbg !8431
  ret i32 %294, !dbg !8431
}

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare i32 @PySlice_GetIndicesEx(%struct._object*, i64, i64*, i64*, i64*, i64*) #3

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare %struct._object* @PySequence_Fast(%struct._object*, i8*) #3

declare i64 @PySequence_Size(%struct._object*) #3

declare i8* @PyUnicode_AsUTF8(%struct._object*) #3

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get_attrib(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1250, metadata !2613), !dbg !8432
  %0 = bitcast %struct._object** %res to i8*, !dbg !8433
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8433
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1251, metadata !2613), !dbg !8434
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8435, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4, !dbg !8436
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !8436, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %2, i32 0, i32 0, !dbg !8437
  %3 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !8437, !tbaa !3497
  store %struct._object* %3, %struct._object** %res, align 8, !dbg !8434, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %res, align 8, !dbg !8438, !tbaa !2620
  %cmp = icmp eq %struct._object* %4, @_Py_NoneStruct, !dbg !8439
  br i1 %cmp, label %if.then, label %if.end.7, !dbg !8440

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyDict_New(), !dbg !8441
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !8442, !tbaa !2620
  %5 = load %struct._object*, %struct._object** %res, align 8, !dbg !8443, !tbaa !2620
  %tobool = icmp ne %struct._object* %5, null, !dbg !8443
  br i1 %tobool, label %if.end, label %if.then.1, !dbg !8445

if.then.1:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !8446
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8446

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !8447

do.body:                                          ; preds = %if.end
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8448
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !8448
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1252, metadata !2613), !dbg !8450
  store %struct._object* @_Py_NoneStruct, %struct._object** %_py_decref_tmp, align 8, !dbg !8450, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8451, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !8453
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !8454, !tbaa !2631
  %dec = add i64 %8, -1, !dbg !8454
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8454, !tbaa !2631
  %cmp2 = icmp ne i64 %dec, 0, !dbg !8455
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !8456

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !8457

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8459, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !8461
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8461, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !8462
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8462, !tbaa !2705
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8463, !tbaa !2620
  call void %11(%struct._object* %12), !dbg !8464
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8465
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !8465
  br label %do.cond, !dbg !8467

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !8468

do.end:                                           ; preds = %do.cond
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !8470, !tbaa !2620
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8471, !tbaa !2620
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4, !dbg !8472
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8, !dbg !8472, !tbaa !3362
  %attrib6 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %16, i32 0, i32 0, !dbg !8473
  store %struct._object* %14, %struct._object** %attrib6, align 8, !dbg !8474, !tbaa !3497
  br label %if.end.7, !dbg !8475

if.end.7:                                         ; preds = %do.end, %entry
  %17 = load %struct._object*, %struct._object** %res, align 8, !dbg !8476, !tbaa !2620
  store %struct._object* %17, %struct._object** %retval, !dbg !8477
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8477

cleanup:                                          ; preds = %if.end.7, %if.then.1
  %18 = bitcast %struct._object** %res to i8*, !dbg !8478
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !8478
  %19 = load %struct._object*, %struct._object** %retval, !dbg !8478
  ret %struct._object* %19, !dbg !8478
}

; Function Attrs: nounwind uwtable
define internal void @_clear_joined_ptr(%struct._object** %p) #0 {
entry:
  %p.addr = alloca %struct._object**, align 8
  %tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object** %p, %struct._object*** %p.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object*** %p.addr, metadata !1351, metadata !2613), !dbg !8479
  %0 = load %struct._object**, %struct._object*** %p.addr, align 8, !dbg !8480, !tbaa !2620
  %1 = load %struct._object*, %struct._object** %0, align 8, !dbg !8481, !tbaa !2620
  %tobool = icmp ne %struct._object* %1, null, !dbg !8481
  br i1 %tobool, label %if.then, label %if.end.3, !dbg !8482

if.then:                                          ; preds = %entry
  %2 = bitcast %struct._object** %tmp to i8*, !dbg !8483
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8483
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1352, metadata !2613), !dbg !8484
  %3 = load %struct._object**, %struct._object*** %p.addr, align 8, !dbg !8485, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %3, align 8, !dbg !8486, !tbaa !2620
  %5 = ptrtoint %struct._object* %4 to i64, !dbg !8487
  %and = and i64 %5, -2, !dbg !8488
  %6 = inttoptr i64 %and to %struct._object*, !dbg !8489
  store %struct._object* %6, %struct._object** %tmp, align 8, !dbg !8484, !tbaa !2620
  %7 = load %struct._object**, %struct._object*** %p.addr, align 8, !dbg !8490, !tbaa !2620
  store %struct._object* null, %struct._object** %7, align 8, !dbg !8491, !tbaa !2620
  br label %do.body, !dbg !8492

do.body:                                          ; preds = %if.then
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8493
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !8493
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1355, metadata !2613), !dbg !8495
  %9 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !8496, !tbaa !2620
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !8495, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8497, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !8499
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !8500, !tbaa !2631
  %dec = add i64 %11, -1, !dbg !8500
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8500, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !8501
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !8502

if.then.2:                                        ; preds = %do.body
  br label %if.end, !dbg !8503

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8505, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !8507
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8507, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !8508
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8508, !tbaa !2705
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8509, !tbaa !2620
  call void %14(%struct._object* %15), !dbg !8510
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8511
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !8511
  br label %do.cond, !dbg !8513

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !8514

do.end:                                           ; preds = %do.cond
  %17 = bitcast %struct._object** %tmp to i8*, !dbg !8516
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !8516
  br label %if.end.3, !dbg !8517

if.end.3:                                         ; preds = %do.end, %entry
  ret void, !dbg !8518
}

; Function Attrs: nounwind uwtable
define internal void @dealloc_extra(%struct.ElementObject* %self) #0 {
entry:
  %self.addr = alloca %struct.ElementObject*, align 8
  %myextra = alloca %struct.ElementObjectExtra*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp7 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1359, metadata !2613), !dbg !8519
  %0 = bitcast %struct.ElementObjectExtra** %myextra to i8*, !dbg !8520
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8520
  call void @llvm.dbg.declare(metadata %struct.ElementObjectExtra** %myextra, metadata !1360, metadata !2613), !dbg !8521
  %1 = bitcast i32* %i to i8*, !dbg !8522
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !8522
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1361, metadata !2613), !dbg !8523
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8524, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %2, i32 0, i32 4, !dbg !8526
  %3 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !8526, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %3, null, !dbg !8524
  br i1 %tobool, label %if.end, label %if.then, !dbg !8527

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8528

if.end:                                           ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8529, !tbaa !2620
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4, !dbg !8530
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8, !dbg !8530, !tbaa !3362
  store %struct.ElementObjectExtra* %5, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8531, !tbaa !2620
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8532, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4, !dbg !8533
  store %struct.ElementObjectExtra* null, %struct.ElementObjectExtra** %extra2, align 8, !dbg !8534, !tbaa !3362
  br label %do.body, !dbg !8535

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8536
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !8536
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1362, metadata !2613), !dbg !8538
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8539, !tbaa !2620
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 0, !dbg !8540
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !8540, !tbaa !3497
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !8538, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8541, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !8543
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !8544, !tbaa !2631
  %dec = add i64 %11, -1, !dbg !8544
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8544, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !8545
  br i1 %cmp, label %if.then.3, label %if.else, !dbg !8546

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !8547

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8549, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !8551
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8551, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !8552
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8552, !tbaa !2705
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8553, !tbaa !2620
  call void %14(%struct._object* %15), !dbg !8554
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8555
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !8555
  br label %do.cond, !dbg !8557

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !8558

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %i, align 4, !dbg !8560, !tbaa !2759
  br label %for.cond, !dbg !8561

for.cond:                                         ; preds = %for.inc, %do.end
  %17 = load i32, i32* %i, align 4, !dbg !8562, !tbaa !2759
  %18 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8565, !tbaa !2620
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %18, i32 0, i32 1, !dbg !8566
  %19 = load i32, i32* %length, align 4, !dbg !8566, !tbaa !3446
  %cmp5 = icmp slt i32 %17, %19, !dbg !8567
  br i1 %cmp5, label %for.body, label %for.end, !dbg !8568

for.body:                                         ; preds = %for.cond
  br label %do.body.6, !dbg !8569

do.body.6:                                        ; preds = %for.body
  %20 = bitcast %struct._object** %_py_decref_tmp7 to i8*, !dbg !8570
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !8570
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp7, metadata !1364, metadata !2613), !dbg !8572
  %21 = load i32, i32* %i, align 4, !dbg !8573, !tbaa !2759
  %idxprom = sext i32 %21 to i64, !dbg !8574
  %22 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8574, !tbaa !2620
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %22, i32 0, i32 3, !dbg !8575
  %23 = load %struct._object**, %struct._object*** %children, align 8, !dbg !8575, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %23, i64 %idxprom, !dbg !8574
  %24 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !8574, !tbaa !2620
  store %struct._object* %24, %struct._object** %_py_decref_tmp7, align 8, !dbg !8572, !tbaa !2620
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !8576, !tbaa !2620
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !8578
  %26 = load i64, i64* %ob_refcnt8, align 8, !dbg !8579, !tbaa !2631
  %dec9 = add i64 %26, -1, !dbg !8579
  store i64 %dec9, i64* %ob_refcnt8, align 8, !dbg !8579, !tbaa !2631
  %cmp10 = icmp ne i64 %dec9, 0, !dbg !8580
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !8581

if.then.11:                                       ; preds = %do.body.6
  br label %if.end.15, !dbg !8582

if.else.12:                                       ; preds = %do.body.6
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !8584, !tbaa !2620
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !8586
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !8586, !tbaa !2703
  %tp_dealloc14 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !8587
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc14, align 8, !dbg !8587, !tbaa !2705
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !8588, !tbaa !2620
  call void %29(%struct._object* %30), !dbg !8589
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.12, %if.then.11
  %31 = bitcast %struct._object** %_py_decref_tmp7 to i8*, !dbg !8590
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !8590
  br label %do.cond.16, !dbg !8592

do.cond.16:                                       ; preds = %if.end.15
  br label %do.end.17, !dbg !8593

do.end.17:                                        ; preds = %do.cond.16
  br label %for.inc, !dbg !8595

for.inc:                                          ; preds = %do.end.17
  %32 = load i32, i32* %i, align 4, !dbg !8597, !tbaa !2759
  %inc = add i32 %32, 1, !dbg !8597
  store i32 %inc, i32* %i, align 4, !dbg !8597, !tbaa !2759
  br label %for.cond, !dbg !8598

for.end:                                          ; preds = %for.cond
  %33 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8599, !tbaa !2620
  %children18 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %33, i32 0, i32 3, !dbg !8601
  %34 = load %struct._object**, %struct._object*** %children18, align 8, !dbg !8601, !tbaa !3451
  %35 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8602, !tbaa !2620
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %35, i32 0, i32 4, !dbg !8603
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0, !dbg !8602
  %cmp19 = icmp ne %struct._object** %34, %arraydecay, !dbg !8604
  br i1 %cmp19, label %if.then.20, label %if.end.22, !dbg !8605

if.then.20:                                       ; preds = %for.end
  %36 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8606, !tbaa !2620
  %children21 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %36, i32 0, i32 3, !dbg !8607
  %37 = load %struct._object**, %struct._object*** %children21, align 8, !dbg !8607, !tbaa !3451
  %38 = bitcast %struct._object** %37 to i8*, !dbg !8606
  call void @PyObject_Free(i8* %38), !dbg !8608
  br label %if.end.22, !dbg !8608

if.end.22:                                        ; preds = %if.then.20, %for.end
  %39 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %myextra, align 8, !dbg !8609, !tbaa !2620
  %40 = bitcast %struct.ElementObjectExtra* %39 to i8*, !dbg !8609
  call void @PyObject_Free(i8* %40), !dbg !8610
  store i32 0, i32* %cleanup.dest.slot, !dbg !8611
  br label %cleanup, !dbg !8611

cleanup:                                          ; preds = %if.end.22, %if.then
  %41 = bitcast i32* %i to i8*, !dbg !8612
  call void @llvm.lifetime.end(i64 4, i8* %41) #1, !dbg !8612
  %42 = bitcast %struct.ElementObjectExtra** %myextra to i8*, !dbg !8612
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !8612
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !8611

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_clearmethod(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp6 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1370, metadata !2613), !dbg !8614
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1371, metadata !2613), !dbg !8615
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8616, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0)), !dbg !8618
  %tobool = icmp ne i32 %call, 0, !dbg !8618
  br i1 %tobool, label %if.end, label %if.then, !dbg !8619

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8620
  br label %return, !dbg !8620

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8621, !tbaa !2620
  call void @dealloc_extra(%struct.ElementObject* %1), !dbg !8622
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8623, !tbaa !2631
  %inc = add i64 %2, 1, !dbg !8623
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8623, !tbaa !2631
  br label %do.body, !dbg !8624

do.body:                                          ; preds = %if.end
  %3 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8625
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8625
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1372, metadata !2613), !dbg !8627
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8628, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 2, !dbg !8629
  %5 = load %struct._object*, %struct._object** %text, align 8, !dbg !8629, !tbaa !3376
  %6 = ptrtoint %struct._object* %5 to i64, !dbg !8630
  %and = and i64 %6, -2, !dbg !8631
  %7 = inttoptr i64 %and to %struct._object*, !dbg !8632
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !8627, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8633, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !8635
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !8636, !tbaa !2631
  %dec = add i64 %9, -1, !dbg !8636
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8636, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !8637
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !8638

if.then.1:                                        ; preds = %do.body
  br label %if.end.2, !dbg !8639

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8641, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !8643
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8643, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !8644
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8644, !tbaa !2705
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8645, !tbaa !2620
  call void %12(%struct._object* %13), !dbg !8646
  br label %if.end.2

if.end.2:                                         ; preds = %if.else, %if.then.1
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8647
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !8647
  br label %do.end, !dbg !8649

do.end:                                           ; preds = %if.end.2
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8650, !tbaa !2620
  %text3 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 2, !dbg !8651
  store %struct._object* @_Py_NoneStruct, %struct._object** %text3, align 8, !dbg !8652, !tbaa !3376
  %16 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8653, !tbaa !2631
  %inc4 = add i64 %16, 1, !dbg !8653
  store i64 %inc4, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8653, !tbaa !2631
  br label %do.body.5, !dbg !8654

do.body.5:                                        ; preds = %do.end
  %17 = bitcast %struct._object** %_py_decref_tmp6 to i8*, !dbg !8655
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !8655
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp6, metadata !1374, metadata !2613), !dbg !8657
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8658, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %18, i32 0, i32 3, !dbg !8659
  %19 = load %struct._object*, %struct._object** %tail, align 8, !dbg !8659, !tbaa !3381
  %20 = ptrtoint %struct._object* %19 to i64, !dbg !8660
  %and7 = and i64 %20, -2, !dbg !8661
  %21 = inttoptr i64 %and7 to %struct._object*, !dbg !8662
  store %struct._object* %21, %struct._object** %_py_decref_tmp6, align 8, !dbg !8657, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp6, align 8, !dbg !8663, !tbaa !2620
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !8665
  %23 = load i64, i64* %ob_refcnt8, align 8, !dbg !8666, !tbaa !2631
  %dec9 = add i64 %23, -1, !dbg !8666
  store i64 %dec9, i64* %ob_refcnt8, align 8, !dbg !8666, !tbaa !2631
  %cmp10 = icmp ne i64 %dec9, 0, !dbg !8667
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !8668

if.then.11:                                       ; preds = %do.body.5
  br label %if.end.15, !dbg !8669

if.else.12:                                       ; preds = %do.body.5
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp6, align 8, !dbg !8671, !tbaa !2620
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !8673
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !8673, !tbaa !2703
  %tp_dealloc14 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !8674
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc14, align 8, !dbg !8674, !tbaa !2705
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp6, align 8, !dbg !8675, !tbaa !2620
  call void %26(%struct._object* %27), !dbg !8676
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.12, %if.then.11
  %28 = bitcast %struct._object** %_py_decref_tmp6 to i8*, !dbg !8677
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !8677
  br label %do.end.16, !dbg !8678

do.end.16:                                        ; preds = %if.end.15
  %29 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8679, !tbaa !2620
  %tail17 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %29, i32 0, i32 3, !dbg !8680
  store %struct._object* @_Py_NoneStruct, %struct._object** %tail17, align 8, !dbg !8681, !tbaa !3381
  %30 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8682, !tbaa !2631
  %inc18 = add i64 %30, 1, !dbg !8682
  store i64 %inc18, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8682, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8683
  br label %return, !dbg !8683

return:                                           ; preds = %do.end.16, %if.then
  %31 = load %struct._object*, %struct._object** %retval, !dbg !8684
  ret %struct._object* %31, !dbg !8684
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_get(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %key = alloca %struct._object*, align 8
  %default_value = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1380, metadata !2613), !dbg !8685
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1381, metadata !2613), !dbg !8686
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1382, metadata !2613), !dbg !8687
  %0 = bitcast %struct._object** %value to i8*, !dbg !8688
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8688
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !1383, metadata !2613), !dbg !8689
  %1 = bitcast %struct._object** %key to i8*, !dbg !8690
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8690
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !1384, metadata !2613), !dbg !8691
  %2 = bitcast %struct._object** %default_value to i8*, !dbg !8692
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8692
  call void @llvm.dbg.declare(metadata %struct._object** %default_value, metadata !1385, metadata !2613), !dbg !8693
  store %struct._object* @_Py_NoneStruct, %struct._object** %default_value, align 8, !dbg !8693, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8694, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8696, !tbaa !2620
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_get.kwlist, i32 0, i32 0), %struct._object** %key, %struct._object** %default_value), !dbg !8697
  %tobool = icmp ne i32 %call, 0, !dbg !8697
  br i1 %tobool, label %if.end, label %if.then, !dbg !8698

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8699
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8699

if.end:                                           ; preds = %entry
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8700, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4, !dbg !8702
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !8702, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %6, null, !dbg !8700
  br i1 %tobool1, label %lor.lhs.false, label %if.then.3, !dbg !8703

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8704, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4, !dbg !8706
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !8706, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 0, !dbg !8707
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !8707, !tbaa !3497
  %cmp = icmp eq %struct._object* %9, @_Py_NoneStruct, !dbg !8708
  br i1 %cmp, label %if.then.3, label %if.else, !dbg !8709

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %10 = load %struct._object*, %struct._object** %default_value, align 8, !dbg !8710, !tbaa !2620
  store %struct._object* %10, %struct._object** %value, align 8, !dbg !8711, !tbaa !2620
  br label %if.end.10, !dbg !8712

if.else:                                          ; preds = %lor.lhs.false
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8713, !tbaa !2620
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4, !dbg !8715
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8, !dbg !8715, !tbaa !3362
  %attrib5 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %12, i32 0, i32 0, !dbg !8716
  %13 = load %struct._object*, %struct._object** %attrib5, align 8, !dbg !8716, !tbaa !3497
  %14 = load %struct._object*, %struct._object** %key, align 8, !dbg !8717, !tbaa !2620
  %call6 = call %struct._object* @PyDict_GetItem(%struct._object* %13, %struct._object* %14), !dbg !8718
  store %struct._object* %call6, %struct._object** %value, align 8, !dbg !8719, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %value, align 8, !dbg !8720, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %15, null, !dbg !8720
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !8722

if.then.8:                                        ; preds = %if.else
  %16 = load %struct._object*, %struct._object** %default_value, align 8, !dbg !8723, !tbaa !2620
  store %struct._object* %16, %struct._object** %value, align 8, !dbg !8724, !tbaa !2620
  br label %if.end.9, !dbg !8725

if.end.9:                                         ; preds = %if.then.8, %if.else
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.3
  %17 = load %struct._object*, %struct._object** %value, align 8, !dbg !8726, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !8727
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !8728, !tbaa !2631
  %inc = add i64 %18, 1, !dbg !8728
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8728, !tbaa !2631
  %19 = load %struct._object*, %struct._object** %value, align 8, !dbg !8729, !tbaa !2620
  store %struct._object* %19, %struct._object** %retval, !dbg !8730
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8730

cleanup:                                          ; preds = %if.end.10, %if.then
  %20 = bitcast %struct._object** %default_value to i8*, !dbg !8731
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !8731
  %21 = bitcast %struct._object** %key to i8*, !dbg !8731
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !8731
  %22 = bitcast %struct._object** %value to i8*, !dbg !8731
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !8731
  %23 = load %struct._object*, %struct._object** %retval, !dbg !8731
  ret %struct._object* %23, !dbg !8731
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_set(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1388, metadata !2613), !dbg !8732
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1389, metadata !2613), !dbg !8733
  %0 = bitcast %struct._object** %attrib to i8*, !dbg !8734
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8734
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !1390, metadata !2613), !dbg !8735
  %1 = bitcast %struct._object** %key to i8*, !dbg !8736
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8736
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !1391, metadata !2613), !dbg !8737
  %2 = bitcast %struct._object** %value to i8*, !dbg !8738
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8738
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !1392, metadata !2613), !dbg !8739
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8740, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), %struct._object** %key, %struct._object** %value), !dbg !8742
  %tobool = icmp ne i32 %call, 0, !dbg !8742
  br i1 %tobool, label %if.end, label %if.then, !dbg !8743

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8744
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8744

if.end:                                           ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8745, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4, !dbg !8747
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !8747, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %5, null, !dbg !8745
  br i1 %tobool1, label %if.end.6, label %if.then.2, !dbg !8748

if.then.2:                                        ; preds = %if.end
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8749, !tbaa !2620
  %call3 = call i32 @create_extra(%struct.ElementObject* %6, %struct._object* null), !dbg !8752
  %cmp = icmp slt i32 %call3, 0, !dbg !8753
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !8754

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !8755
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8755

if.end.5:                                         ; preds = %if.then.2
  br label %if.end.6, !dbg !8756

if.end.6:                                         ; preds = %if.end.5, %if.end
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8757, !tbaa !2620
  %call7 = call %struct._object* @element_get_attrib(%struct.ElementObject* %7), !dbg !8758
  store %struct._object* %call7, %struct._object** %attrib, align 8, !dbg !8759, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !8760, !tbaa !2620
  %tobool8 = icmp ne %struct._object* %8, null, !dbg !8760
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !8762

if.then.9:                                        ; preds = %if.end.6
  store %struct._object* null, %struct._object** %retval, !dbg !8763
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8763

if.end.10:                                        ; preds = %if.end.6
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !8764, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %key, align 8, !dbg !8766, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %value, align 8, !dbg !8767, !tbaa !2620
  %call11 = call i32 @PyDict_SetItem(%struct._object* %9, %struct._object* %10, %struct._object* %11), !dbg !8768
  %cmp12 = icmp slt i32 %call11, 0, !dbg !8769
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !8770

if.then.13:                                       ; preds = %if.end.10
  store %struct._object* null, %struct._object** %retval, !dbg !8771
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8771

if.end.14:                                        ; preds = %if.end.10
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8772, !tbaa !2631
  %inc = add i64 %12, 1, !dbg !8772
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8772, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8773
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8773

cleanup:                                          ; preds = %if.end.14, %if.then.13, %if.then.9, %if.then.4, %if.then
  %13 = bitcast %struct._object** %value to i8*, !dbg !8774
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !8774
  %14 = bitcast %struct._object** %key to i8*, !dbg !8774
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !8774
  %15 = bitcast %struct._object** %attrib to i8*, !dbg !8774
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !8774
  %16 = load %struct._object*, %struct._object** %retval, !dbg !8774
  ret %struct._object* %16, !dbg !8774
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_find(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %tag = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  %item = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1395, metadata !2613), !dbg !8775
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1396, metadata !2613), !dbg !8776
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1397, metadata !2613), !dbg !8777
  %0 = bitcast i32* %i to i8*, !dbg !8778
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8778
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1398, metadata !2613), !dbg !8779
  %1 = bitcast %struct._object** %tag to i8*, !dbg !8780
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8780
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1399, metadata !2613), !dbg !8781
  %2 = bitcast %struct._object** %namespaces to i8*, !dbg !8782
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8782
  call void @llvm.dbg.declare(metadata %struct._object** %namespaces, metadata !1400, metadata !2613), !dbg !8783
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8, !dbg !8783, !tbaa !2620
  %3 = bitcast %struct.elementtreestate** %st to i8*, !dbg !8784
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8784
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !1401, metadata !2613), !dbg !8785
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !8786
  %call1 = call i8* @PyModule_GetState(%struct._object* %call), !dbg !8787
  %4 = bitcast i8* %call1 to %struct.elementtreestate*, !dbg !8788
  store %struct.elementtreestate* %4, %struct.elementtreestate** %st, align 8, !dbg !8785, !tbaa !2620
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8789, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8791, !tbaa !2620
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %5, %struct._object* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_find.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %namespaces), !dbg !8792
  %tobool = icmp ne i32 %call2, 0, !dbg !8792
  br i1 %tobool, label %if.end, label %if.then, !dbg !8793

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8794
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.23, !dbg !8794

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %tag, align 8, !dbg !8795, !tbaa !2620
  %call3 = call i32 @checkpath(%struct._object* %7), !dbg !8797
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8797
  br i1 %tobool4, label %if.then.5, label %lor.lhs.false, !dbg !8798

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %namespaces, align 8, !dbg !8799, !tbaa !2620
  %cmp = icmp ne %struct._object* %8, @_Py_NoneStruct, !dbg !8801
  br i1 %cmp, label %if.then.5, label %if.end.7, !dbg !8802

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !8803, !tbaa !2620
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %9, i32 0, i32 2, !dbg !8805
  %10 = load %struct._object*, %struct._object** %elementpath_obj, align 8, !dbg !8805, !tbaa !2729
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8806, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %tag, align 8, !dbg !8807, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %namespaces, align 8, !dbg !8808, !tbaa !2620
  %call6 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %10, %struct._Py_Identifier* @element_find.PyId_find, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.ElementObject* %11, %struct._object* %12, %struct._object* %13), !dbg !8809
  store %struct._object* %call6, %struct._object** %retval, !dbg !8810
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.23, !dbg !8810

if.end.7:                                         ; preds = %lor.lhs.false
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8811, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 4, !dbg !8813
  %15 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !8813, !tbaa !3362
  %tobool8 = icmp ne %struct.ElementObjectExtra* %15, null, !dbg !8811
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !8814

if.then.9:                                        ; preds = %if.end.7
  %16 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8815, !tbaa !2631
  %inc = add i64 %16, 1, !dbg !8815
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8815, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8816
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.23, !dbg !8816

if.end.10:                                        ; preds = %if.end.7
  store i32 0, i32* %i, align 4, !dbg !8817, !tbaa !2759
  br label %for.cond, !dbg !8818

for.cond:                                         ; preds = %for.inc, %if.end.10
  %17 = load i32, i32* %i, align 4, !dbg !8819, !tbaa !2759
  %18 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8822, !tbaa !2620
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %18, i32 0, i32 4, !dbg !8823
  %19 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8, !dbg !8823, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %19, i32 0, i32 1, !dbg !8824
  %20 = load i32, i32* %length, align 4, !dbg !8824, !tbaa !3446
  %cmp12 = icmp slt i32 %17, %20, !dbg !8825
  br i1 %cmp12, label %for.body, label %for.end, !dbg !8826

for.body:                                         ; preds = %for.cond
  %21 = bitcast %struct._object** %item to i8*, !dbg !8827
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !8827
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1402, metadata !2613), !dbg !8828
  %22 = load i32, i32* %i, align 4, !dbg !8829, !tbaa !2759
  %idxprom = sext i32 %22 to i64, !dbg !8830
  %23 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8830, !tbaa !2620
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %23, i32 0, i32 4, !dbg !8831
  %24 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8, !dbg !8831, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %24, i32 0, i32 3, !dbg !8832
  %25 = load %struct._object**, %struct._object*** %children, align 8, !dbg !8832, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %25, i64 %idxprom, !dbg !8830
  %26 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !8830, !tbaa !2620
  store %struct._object* %26, %struct._object** %item, align 8, !dbg !8828, !tbaa !2620
  %27 = load %struct._object*, %struct._object** %item, align 8, !dbg !8833, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !8835
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8835, !tbaa !2703
  %cmp14 = icmp eq %struct._typeobject* %28, @Element_Type, !dbg !8836
  br i1 %cmp14, label %land.lhs.true, label %if.end.20, !dbg !8837

land.lhs.true:                                    ; preds = %for.body
  %29 = load %struct._object*, %struct._object** %item, align 8, !dbg !8838, !tbaa !2620
  %30 = bitcast %struct._object* %29 to %struct.ElementObject*, !dbg !8839
  %tag15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %30, i32 0, i32 1, !dbg !8840
  %31 = load %struct._object*, %struct._object** %tag15, align 8, !dbg !8840, !tbaa !3371
  %32 = load %struct._object*, %struct._object** %tag, align 8, !dbg !8841, !tbaa !2620
  %call16 = call i32 @PyObject_RichCompareBool(%struct._object* %31, %struct._object* %32, i32 2), !dbg !8842
  %cmp17 = icmp eq i32 %call16, 1, !dbg !8843
  br i1 %cmp17, label %if.then.18, label %if.end.20, !dbg !8844

if.then.18:                                       ; preds = %land.lhs.true
  %33 = load %struct._object*, %struct._object** %item, align 8, !dbg !8845, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !8847
  %34 = load i64, i64* %ob_refcnt, align 8, !dbg !8848, !tbaa !2631
  %inc19 = add i64 %34, 1, !dbg !8848
  store i64 %inc19, i64* %ob_refcnt, align 8, !dbg !8848, !tbaa !2631
  %35 = load %struct._object*, %struct._object** %item, align 8, !dbg !8849, !tbaa !2620
  store %struct._object* %35, %struct._object** %retval, !dbg !8850
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8850

if.end.20:                                        ; preds = %land.lhs.true, %for.body
  store i32 0, i32* %cleanup.dest.slot, !dbg !8851
  br label %cleanup, !dbg !8851

cleanup:                                          ; preds = %if.end.20, %if.then.18
  %36 = bitcast %struct._object** %item to i8*, !dbg !8852
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !8852
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.23 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !8853

for.inc:                                          ; preds = %cleanup.cont
  %37 = load i32, i32* %i, align 4, !dbg !8854, !tbaa !2759
  %inc21 = add i32 %37, 1, !dbg !8854
  store i32 %inc21, i32* %i, align 4, !dbg !8854, !tbaa !2759
  br label %for.cond, !dbg !8855

for.end:                                          ; preds = %for.cond
  %38 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8856, !tbaa !2631
  %inc22 = add i64 %38, 1, !dbg !8856
  store i64 %inc22, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8856, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8857
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.23, !dbg !8857

cleanup.23:                                       ; preds = %for.end, %cleanup, %if.then.9, %if.then.5, %if.then
  %39 = bitcast %struct.elementtreestate** %st to i8*, !dbg !8858
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !8858
  %40 = bitcast %struct._object** %namespaces to i8*, !dbg !8858
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !8858
  %41 = bitcast %struct._object** %tag to i8*, !dbg !8858
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !8858
  %42 = bitcast i32* %i to i8*, !dbg !8858
  call void @llvm.lifetime.end(i64 4, i8* %42) #1, !dbg !8858
  %43 = load %struct._object*, %struct._object** %retval, !dbg !8858
  ret %struct._object* %43, !dbg !8858
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_findtext(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %tag = alloca %struct._object*, align 8
  %default_value = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  %item = alloca %struct.ElementObject*, align 8
  %text = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1426, metadata !2613), !dbg !8859
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1427, metadata !2613), !dbg !8860
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1428, metadata !2613), !dbg !8861
  %0 = bitcast i32* %i to i8*, !dbg !8862
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8862
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1429, metadata !2613), !dbg !8863
  %1 = bitcast %struct._object** %tag to i8*, !dbg !8864
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8864
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1430, metadata !2613), !dbg !8865
  %2 = bitcast %struct._object** %default_value to i8*, !dbg !8866
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8866
  call void @llvm.dbg.declare(metadata %struct._object** %default_value, metadata !1431, metadata !2613), !dbg !8867
  store %struct._object* @_Py_NoneStruct, %struct._object** %default_value, align 8, !dbg !8867, !tbaa !2620
  %3 = bitcast %struct._object** %namespaces to i8*, !dbg !8868
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8868
  call void @llvm.dbg.declare(metadata %struct._object** %namespaces, metadata !1432, metadata !2613), !dbg !8869
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8, !dbg !8869, !tbaa !2620
  %4 = bitcast %struct.elementtreestate** %st to i8*, !dbg !8870
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8870
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !1433, metadata !2613), !dbg !8871
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !8872
  %call1 = call i8* @PyModule_GetState(%struct._object* %call), !dbg !8873
  %5 = bitcast i8* %call1 to %struct.elementtreestate*, !dbg !8874
  store %struct.elementtreestate* %5, %struct.elementtreestate** %st, align 8, !dbg !8871, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8875, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8877, !tbaa !2620
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @element_findtext.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %default_value, %struct._object** %namespaces), !dbg !8878
  %tobool = icmp ne i32 %call2, 0, !dbg !8878
  br i1 %tobool, label %if.end, label %if.then, !dbg !8879

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8880
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !8880

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %tag, align 8, !dbg !8881, !tbaa !2620
  %call3 = call i32 @checkpath(%struct._object* %8), !dbg !8883
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8883
  br i1 %tobool4, label %if.then.5, label %lor.lhs.false, !dbg !8884

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %namespaces, align 8, !dbg !8885, !tbaa !2620
  %cmp = icmp ne %struct._object* %9, @_Py_NoneStruct, !dbg !8887
  br i1 %cmp, label %if.then.5, label %if.end.7, !dbg !8888

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !8889, !tbaa !2620
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %10, i32 0, i32 2, !dbg !8890
  %11 = load %struct._object*, %struct._object** %elementpath_obj, align 8, !dbg !8890, !tbaa !2729
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8891, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %tag, align 8, !dbg !8892, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %default_value, align 8, !dbg !8893, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %namespaces, align 8, !dbg !8894, !tbaa !2620
  %call6 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %11, %struct._Py_Identifier* @element_findtext.PyId_findtext, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), %struct.ElementObject* %12, %struct._object* %13, %struct._object* %14, %struct._object* %15), !dbg !8895
  store %struct._object* %call6, %struct._object** %retval, !dbg !8896
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !8896

if.end.7:                                         ; preds = %lor.lhs.false
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8897, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 4, !dbg !8899
  %17 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !8899, !tbaa !3362
  %tobool8 = icmp ne %struct.ElementObjectExtra* %17, null, !dbg !8897
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !8900

if.then.9:                                        ; preds = %if.end.7
  %18 = load %struct._object*, %struct._object** %default_value, align 8, !dbg !8901, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !8903
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !8904, !tbaa !2631
  %inc = add i64 %19, 1, !dbg !8904
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8904, !tbaa !2631
  %20 = load %struct._object*, %struct._object** %default_value, align 8, !dbg !8905, !tbaa !2620
  store %struct._object* %20, %struct._object** %retval, !dbg !8906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !8906

if.end.10:                                        ; preds = %if.end.7
  store i32 0, i32* %i, align 4, !dbg !8907, !tbaa !2759
  br label %for.cond, !dbg !8908

for.cond:                                         ; preds = %for.inc, %if.end.10
  %21 = load i32, i32* %i, align 4, !dbg !8909, !tbaa !2759
  %22 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8912, !tbaa !2620
  %extra11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %22, i32 0, i32 4, !dbg !8913
  %23 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra11, align 8, !dbg !8913, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %23, i32 0, i32 1, !dbg !8914
  %24 = load i32, i32* %length, align 4, !dbg !8914, !tbaa !3446
  %cmp12 = icmp slt i32 %21, %24, !dbg !8915
  br i1 %cmp12, label %for.body, label %for.end, !dbg !8916

for.body:                                         ; preds = %for.cond
  %25 = bitcast %struct.ElementObject** %item to i8*, !dbg !8917
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !8917
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %item, metadata !1434, metadata !2613), !dbg !8918
  %26 = load i32, i32* %i, align 4, !dbg !8919, !tbaa !2759
  %idxprom = sext i32 %26 to i64, !dbg !8920
  %27 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !8920, !tbaa !2620
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %27, i32 0, i32 4, !dbg !8921
  %28 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8, !dbg !8921, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %28, i32 0, i32 3, !dbg !8922
  %29 = load %struct._object**, %struct._object*** %children, align 8, !dbg !8922, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %29, i64 %idxprom, !dbg !8920
  %30 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !8920, !tbaa !2620
  %31 = bitcast %struct._object* %30 to %struct.ElementObject*, !dbg !8923
  store %struct.ElementObject* %31, %struct.ElementObject** %item, align 8, !dbg !8918, !tbaa !2620
  %32 = load %struct.ElementObject*, %struct.ElementObject** %item, align 8, !dbg !8924, !tbaa !2620
  %33 = bitcast %struct.ElementObject* %32 to %struct._object*, !dbg !8925
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !8926
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8926, !tbaa !2703
  %cmp14 = icmp eq %struct._typeobject* %34, @Element_Type, !dbg !8927
  br i1 %cmp14, label %land.lhs.true, label %if.end.29, !dbg !8928

land.lhs.true:                                    ; preds = %for.body
  %35 = load %struct.ElementObject*, %struct.ElementObject** %item, align 8, !dbg !8929, !tbaa !2620
  %tag15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %35, i32 0, i32 1, !dbg !8930
  %36 = load %struct._object*, %struct._object** %tag15, align 8, !dbg !8930, !tbaa !3371
  %37 = load %struct._object*, %struct._object** %tag, align 8, !dbg !8931, !tbaa !2620
  %call16 = call i32 @PyObject_RichCompareBool(%struct._object* %36, %struct._object* %37, i32 2), !dbg !8932
  %cmp17 = icmp eq i32 %call16, 1, !dbg !8933
  br i1 %cmp17, label %if.then.18, label %if.end.29, !dbg !8934

if.then.18:                                       ; preds = %land.lhs.true
  %38 = bitcast %struct._object** %text to i8*, !dbg !8935
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !8935
  call void @llvm.dbg.declare(metadata %struct._object** %text, metadata !1438, metadata !2613), !dbg !8936
  %39 = load %struct.ElementObject*, %struct.ElementObject** %item, align 8, !dbg !8937, !tbaa !2620
  %call19 = call %struct._object* @element_get_text(%struct.ElementObject* %39), !dbg !8938
  store %struct._object* %call19, %struct._object** %text, align 8, !dbg !8936, !tbaa !2620
  %40 = load %struct._object*, %struct._object** %text, align 8, !dbg !8939, !tbaa !2620
  %cmp20 = icmp eq %struct._object* %40, @_Py_NoneStruct, !dbg !8941
  br i1 %cmp20, label %if.then.21, label %if.end.23, !dbg !8942

if.then.21:                                       ; preds = %if.then.18
  %call22 = call %struct._object* @PyUnicode_New(i64 0, i32 0), !dbg !8943
  store %struct._object* %call22, %struct._object** %retval, !dbg !8944
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8944

if.end.23:                                        ; preds = %if.then.18
  br label %do.body, !dbg !8945

do.body:                                          ; preds = %if.end.23
  %41 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !8946
  call void @llvm.lifetime.start(i64 8, i8* %41) #1, !dbg !8946
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !1441, metadata !2613), !dbg !8948
  %42 = load %struct._object*, %struct._object** %text, align 8, !dbg !8949, !tbaa !2620
  store %struct._object* %42, %struct._object** %_py_xincref_tmp, align 8, !dbg !8948, !tbaa !2620
  %43 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !8950, !tbaa !2620
  %cmp24 = icmp ne %struct._object* %43, null, !dbg !8952
  br i1 %cmp24, label %if.then.25, label %if.end.28, !dbg !8953

if.then.25:                                       ; preds = %do.body
  %44 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !8954, !tbaa !2620
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !8956
  %45 = load i64, i64* %ob_refcnt26, align 8, !dbg !8957, !tbaa !2631
  %inc27 = add i64 %45, 1, !dbg !8957
  store i64 %inc27, i64* %ob_refcnt26, align 8, !dbg !8957, !tbaa !2631
  br label %if.end.28, !dbg !8958

if.end.28:                                        ; preds = %if.then.25, %do.body
  %46 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !8959
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !8959
  br label %do.cond, !dbg !8962

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !8963

do.end:                                           ; preds = %do.cond
  %47 = load %struct._object*, %struct._object** %text, align 8, !dbg !8965, !tbaa !2620
  store %struct._object* %47, %struct._object** %retval, !dbg !8966
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8966

cleanup:                                          ; preds = %do.end, %if.then.21
  %48 = bitcast %struct._object** %text to i8*, !dbg !8967
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !8967
  br label %cleanup.30

if.end.29:                                        ; preds = %land.lhs.true, %for.body
  store i32 0, i32* %cleanup.dest.slot, !dbg !8968
  br label %cleanup.30, !dbg !8968

cleanup.30:                                       ; preds = %if.end.29, %cleanup
  %49 = bitcast %struct.ElementObject** %item to i8*, !dbg !8969
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !8969
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.34 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup.30
  br label %for.inc, !dbg !8970

for.inc:                                          ; preds = %cleanup.cont
  %50 = load i32, i32* %i, align 4, !dbg !8971, !tbaa !2759
  %inc31 = add i32 %50, 1, !dbg !8971
  store i32 %inc31, i32* %i, align 4, !dbg !8971, !tbaa !2759
  br label %for.cond, !dbg !8972

for.end:                                          ; preds = %for.cond
  %51 = load %struct._object*, %struct._object** %default_value, align 8, !dbg !8973, !tbaa !2620
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !8974
  %52 = load i64, i64* %ob_refcnt32, align 8, !dbg !8975, !tbaa !2631
  %inc33 = add i64 %52, 1, !dbg !8975
  store i64 %inc33, i64* %ob_refcnt32, align 8, !dbg !8975, !tbaa !2631
  %53 = load %struct._object*, %struct._object** %default_value, align 8, !dbg !8976, !tbaa !2620
  store %struct._object* %53, %struct._object** %retval, !dbg !8977
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.34, !dbg !8977

cleanup.34:                                       ; preds = %for.end, %cleanup.30, %if.then.9, %if.then.5, %if.then
  %54 = bitcast %struct.elementtreestate** %st to i8*, !dbg !8978
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !8978
  %55 = bitcast %struct._object** %namespaces to i8*, !dbg !8978
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !8978
  %56 = bitcast %struct._object** %default_value to i8*, !dbg !8978
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !8978
  %57 = bitcast %struct._object** %tag to i8*, !dbg !8978
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !8978
  %58 = bitcast i32* %i to i8*, !dbg !8978
  call void @llvm.lifetime.end(i64 4, i8* %58) #1, !dbg !8978
  %59 = load %struct._object*, %struct._object** %retval, !dbg !8978
  ret %struct._object* %59, !dbg !8978
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_findall(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %out = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  %item = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1445, metadata !2613), !dbg !8979
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1446, metadata !2613), !dbg !8980
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1447, metadata !2613), !dbg !8981
  %0 = bitcast i32* %i to i8*, !dbg !8982
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !8982
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1448, metadata !2613), !dbg !8983
  %1 = bitcast %struct._object** %out to i8*, !dbg !8984
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8984
  call void @llvm.dbg.declare(metadata %struct._object** %out, metadata !1449, metadata !2613), !dbg !8985
  %2 = bitcast %struct._object** %tag to i8*, !dbg !8986
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8986
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1450, metadata !2613), !dbg !8987
  %3 = bitcast %struct._object** %namespaces to i8*, !dbg !8988
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8988
  call void @llvm.dbg.declare(metadata %struct._object** %namespaces, metadata !1451, metadata !2613), !dbg !8989
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8, !dbg !8989, !tbaa !2620
  %4 = bitcast %struct.elementtreestate** %st to i8*, !dbg !8990
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !8990
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !1452, metadata !2613), !dbg !8991
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !8992
  %call1 = call i8* @PyModule_GetState(%struct._object* %call), !dbg !8993
  %5 = bitcast i8* %call1 to %struct.elementtreestate*, !dbg !8994
  store %struct.elementtreestate* %5, %struct.elementtreestate** %st, align 8, !dbg !8991, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8995, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8997, !tbaa !2620
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_findall.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %namespaces), !dbg !8998
  %tobool = icmp ne i32 %call2, 0, !dbg !8998
  br i1 %tobool, label %if.end, label %if.then, !dbg !8999

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9000
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.32, !dbg !9000

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9001, !tbaa !2620
  %call3 = call i32 @checkpath(%struct._object* %8), !dbg !9003
  %tobool4 = icmp ne i32 %call3, 0, !dbg !9003
  br i1 %tobool4, label %if.then.5, label %lor.lhs.false, !dbg !9004

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %namespaces, align 8, !dbg !9005, !tbaa !2620
  %cmp = icmp ne %struct._object* %9, @_Py_NoneStruct, !dbg !9007
  br i1 %cmp, label %if.then.5, label %if.end.7, !dbg !9008

if.then.5:                                        ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !9009, !tbaa !2620
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %10, i32 0, i32 2, !dbg !9011
  %11 = load %struct._object*, %struct._object** %elementpath_obj, align 8, !dbg !9011, !tbaa !2729
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9012, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9013, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %namespaces, align 8, !dbg !9014, !tbaa !2620
  %call6 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %11, %struct._Py_Identifier* @element_findall.PyId_findall, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.ElementObject* %12, %struct._object* %13, %struct._object* %14), !dbg !9015
  store %struct._object* %call6, %struct._object** %retval, !dbg !9016
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.32, !dbg !9016

if.end.7:                                         ; preds = %lor.lhs.false
  %call8 = call %struct._object* @PyList_New(i64 0), !dbg !9017
  store %struct._object* %call8, %struct._object** %out, align 8, !dbg !9018, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %out, align 8, !dbg !9019, !tbaa !2620
  %tobool9 = icmp ne %struct._object* %15, null, !dbg !9019
  br i1 %tobool9, label %if.end.11, label %if.then.10, !dbg !9021

if.then.10:                                       ; preds = %if.end.7
  store %struct._object* null, %struct._object** %retval, !dbg !9022
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.32, !dbg !9022

if.end.11:                                        ; preds = %if.end.7
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9023, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 4, !dbg !9025
  %17 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9025, !tbaa !3362
  %tobool12 = icmp ne %struct.ElementObjectExtra* %17, null, !dbg !9023
  br i1 %tobool12, label %if.end.14, label %if.then.13, !dbg !9026

if.then.13:                                       ; preds = %if.end.11
  %18 = load %struct._object*, %struct._object** %out, align 8, !dbg !9027, !tbaa !2620
  store %struct._object* %18, %struct._object** %retval, !dbg !9028
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.32, !dbg !9028

if.end.14:                                        ; preds = %if.end.11
  store i32 0, i32* %i, align 4, !dbg !9029, !tbaa !2759
  br label %for.cond, !dbg !9030

for.cond:                                         ; preds = %for.inc, %if.end.14
  %19 = load i32, i32* %i, align 4, !dbg !9031, !tbaa !2759
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9034, !tbaa !2620
  %extra15 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %20, i32 0, i32 4, !dbg !9035
  %21 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra15, align 8, !dbg !9035, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %21, i32 0, i32 1, !dbg !9036
  %22 = load i32, i32* %length, align 4, !dbg !9036, !tbaa !3446
  %cmp16 = icmp slt i32 %19, %22, !dbg !9037
  br i1 %cmp16, label %for.body, label %for.end, !dbg !9038

for.body:                                         ; preds = %for.cond
  %23 = bitcast %struct._object** %item to i8*, !dbg !9039
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !9039
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1453, metadata !2613), !dbg !9040
  %24 = load i32, i32* %i, align 4, !dbg !9041, !tbaa !2759
  %idxprom = sext i32 %24 to i64, !dbg !9042
  %25 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9042, !tbaa !2620
  %extra17 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %25, i32 0, i32 4, !dbg !9043
  %26 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra17, align 8, !dbg !9043, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %26, i32 0, i32 3, !dbg !9044
  %27 = load %struct._object**, %struct._object*** %children, align 8, !dbg !9044, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %27, i64 %idxprom, !dbg !9042
  %28 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9042, !tbaa !2620
  store %struct._object* %28, %struct._object** %item, align 8, !dbg !9040, !tbaa !2620
  %29 = load %struct._object*, %struct._object** %item, align 8, !dbg !9045, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !9046
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9046, !tbaa !2703
  %cmp18 = icmp eq %struct._typeobject* %30, @Element_Type, !dbg !9047
  br i1 %cmp18, label %land.lhs.true, label %if.end.31, !dbg !9048

land.lhs.true:                                    ; preds = %for.body
  %31 = load %struct._object*, %struct._object** %item, align 8, !dbg !9049, !tbaa !2620
  %32 = bitcast %struct._object* %31 to %struct.ElementObject*, !dbg !9050
  %tag19 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %32, i32 0, i32 1, !dbg !9051
  %33 = load %struct._object*, %struct._object** %tag19, align 8, !dbg !9051, !tbaa !3371
  %34 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9052, !tbaa !2620
  %call20 = call i32 @PyObject_RichCompareBool(%struct._object* %33, %struct._object* %34, i32 2), !dbg !9053
  %cmp21 = icmp eq i32 %call20, 1, !dbg !9054
  br i1 %cmp21, label %if.then.22, label %if.end.31, !dbg !9055

if.then.22:                                       ; preds = %land.lhs.true
  %35 = load %struct._object*, %struct._object** %out, align 8, !dbg !9056, !tbaa !2620
  %36 = load %struct._object*, %struct._object** %item, align 8, !dbg !9057, !tbaa !2620
  %call23 = call i32 @PyList_Append(%struct._object* %35, %struct._object* %36), !dbg !9058
  %cmp24 = icmp slt i32 %call23, 0, !dbg !9059
  br i1 %cmp24, label %if.then.25, label %if.end.30, !dbg !9060

if.then.25:                                       ; preds = %if.then.22
  br label %do.body, !dbg !9061

do.body:                                          ; preds = %if.then.25
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9062
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !9062
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1457, metadata !2613), !dbg !9064
  %38 = load %struct._object*, %struct._object** %out, align 8, !dbg !9065, !tbaa !2620
  store %struct._object* %38, %struct._object** %_py_decref_tmp, align 8, !dbg !9064, !tbaa !2620
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9066, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !9068
  %40 = load i64, i64* %ob_refcnt, align 8, !dbg !9069, !tbaa !2631
  %dec = add i64 %40, -1, !dbg !9069
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9069, !tbaa !2631
  %cmp26 = icmp ne i64 %dec, 0, !dbg !9070
  br i1 %cmp26, label %if.then.27, label %if.else, !dbg !9071

if.then.27:                                       ; preds = %do.body
  br label %if.end.29, !dbg !9072

if.else:                                          ; preds = %do.body
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9074, !tbaa !2620
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !9076
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !9076, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !9077
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9077, !tbaa !2705
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9078, !tbaa !2620
  call void %43(%struct._object* %44), !dbg !9079
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.27
  %45 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9080
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !9080
  br label %do.cond, !dbg !9082

do.cond:                                          ; preds = %if.end.29
  br label %do.end, !dbg !9083

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !9085
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9085

if.end.30:                                        ; preds = %if.then.22
  br label %if.end.31, !dbg !9086

if.end.31:                                        ; preds = %if.end.30, %land.lhs.true, %for.body
  store i32 0, i32* %cleanup.dest.slot, !dbg !9087
  br label %cleanup, !dbg !9087

cleanup:                                          ; preds = %if.end.31, %do.end
  %46 = bitcast %struct._object** %item to i8*, !dbg !9088
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !9088
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.32 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !9089

for.inc:                                          ; preds = %cleanup.cont
  %47 = load i32, i32* %i, align 4, !dbg !9090, !tbaa !2759
  %inc = add i32 %47, 1, !dbg !9090
  store i32 %inc, i32* %i, align 4, !dbg !9090, !tbaa !2759
  br label %for.cond, !dbg !9091

for.end:                                          ; preds = %for.cond
  %48 = load %struct._object*, %struct._object** %out, align 8, !dbg !9092, !tbaa !2620
  store %struct._object* %48, %struct._object** %retval, !dbg !9093
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.32, !dbg !9093

cleanup.32:                                       ; preds = %for.end, %cleanup, %if.then.13, %if.then.10, %if.then.5, %if.then
  %49 = bitcast %struct.elementtreestate** %st to i8*, !dbg !9094
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !9094
  %50 = bitcast %struct._object** %namespaces to i8*, !dbg !9094
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !9094
  %51 = bitcast %struct._object** %tag to i8*, !dbg !9094
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !9094
  %52 = bitcast %struct._object** %out to i8*, !dbg !9094
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !9094
  %53 = bitcast i32* %i to i8*, !dbg !9094
  call void @llvm.lifetime.end(i64 4, i8* %53) #1, !dbg !9094
  %54 = load %struct._object*, %struct._object** %retval, !dbg !9094
  ret %struct._object* %54, !dbg !9094
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_append(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %element = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1465, metadata !2613), !dbg !9095
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1466, metadata !2613), !dbg !9096
  %0 = bitcast %struct._object** %element to i8*, !dbg !9097
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9097
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !1467, metadata !2613), !dbg !9098
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9099, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), %struct._typeobject* @Element_Type, %struct._object** %element), !dbg !9101
  %tobool = icmp ne i32 %call, 0, !dbg !9101
  br i1 %tobool, label %if.end, label %if.then, !dbg !9102

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9103
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9103

if.end:                                           ; preds = %entry
  %2 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9104, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %element, align 8, !dbg !9106, !tbaa !2620
  %call1 = call i32 @element_add_subelement(%struct.ElementObject* %2, %struct._object* %3), !dbg !9107
  %cmp = icmp slt i32 %call1, 0, !dbg !9108
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !9109

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !9110
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9110

if.end.3:                                         ; preds = %if.end
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9111, !tbaa !2631
  %inc = add i64 %4, 1, !dbg !9111
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9111, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !9112
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9112

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %5 = bitcast %struct._object** %element to i8*, !dbg !9113
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !9113
  %6 = load %struct._object*, %struct._object** %retval, !dbg !9113
  ret %struct._object* %6, !dbg !9113
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_extend(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %seqlen = alloca i64, align 8
  %seq_in = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %element = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1470, metadata !2613), !dbg !9114
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1471, metadata !2613), !dbg !9115
  %0 = bitcast %struct._object** %seq to i8*, !dbg !9116
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9116
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !1472, metadata !2613), !dbg !9117
  %1 = bitcast i64* %i to i8*, !dbg !9118
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9118
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1473, metadata !2613), !dbg !9119
  %2 = bitcast i64* %seqlen to i8*, !dbg !9118
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9118
  call void @llvm.dbg.declare(metadata i64* %seqlen, metadata !1474, metadata !2613), !dbg !9120
  store i64 0, i64* %seqlen, align 8, !dbg !9120, !tbaa !2742
  %3 = bitcast %struct._object** %seq_in to i8*, !dbg !9121
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !9121
  call void @llvm.dbg.declare(metadata %struct._object** %seq_in, metadata !1475, metadata !2613), !dbg !9122
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9123, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), %struct._object** %seq_in), !dbg !9125
  %tobool = icmp ne i32 %call, 0, !dbg !9125
  br i1 %tobool, label %if.end, label %if.then, !dbg !9126

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9127
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.51, !dbg !9127

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %seq_in, align 8, !dbg !9128, !tbaa !2620
  %call1 = call %struct._object* @PySequence_Fast(%struct._object* %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0)), !dbg !9129
  store %struct._object* %call1, %struct._object** %seq, align 8, !dbg !9130, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9131, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %6, null, !dbg !9131
  br i1 %tobool2, label %if.end.5, label %if.then.3, !dbg !9133

if.then.3:                                        ; preds = %if.end
  %7 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9134, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %seq_in, align 8, !dbg !9136, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !9137
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9137, !tbaa !2703
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 1, !dbg !9138
  %10 = load i8*, i8** %tp_name, align 8, !dbg !9138, !tbaa !3295
  %call4 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i32 0, i32 0), i8* %10), !dbg !9139
  store %struct._object* null, %struct._object** %retval, !dbg !9140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.51, !dbg !9140

if.end.5:                                         ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9141, !tbaa !2620
  %call6 = call i64 @PySequence_Size(%struct._object* %11), !dbg !9142
  store i64 %call6, i64* %seqlen, align 8, !dbg !9143, !tbaa !2742
  store i64 0, i64* %i, align 8, !dbg !9144, !tbaa !2742
  br label %for.cond, !dbg !9145

for.cond:                                         ; preds = %for.inc, %if.end.5
  %12 = load i64, i64* %i, align 8, !dbg !9146, !tbaa !2742
  %13 = load i64, i64* %seqlen, align 8, !dbg !9149, !tbaa !2742
  %cmp = icmp slt i64 %12, %13, !dbg !9150
  br i1 %cmp, label %for.body, label %for.end, !dbg !9151

for.body:                                         ; preds = %for.cond
  %14 = bitcast %struct._object** %element to i8*, !dbg !9152
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !9152
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !1476, metadata !2613), !dbg !9153
  %15 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9154, !tbaa !2620
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !9155
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !9155, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 19, !dbg !9156
  %17 = load i64, i64* %tp_flags, align 8, !dbg !9156, !tbaa !3263
  %and = and i64 %17, 33554432, !dbg !9157
  %cmp8 = icmp ne i64 %and, 0, !dbg !9158
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !9159

cond.true:                                        ; preds = %for.body
  %18 = load i64, i64* %i, align 8, !dbg !9160, !tbaa !2742
  %19 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9162, !tbaa !2620
  %20 = bitcast %struct._object* %19 to %struct.PyListObject*, !dbg !9163
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %20, i32 0, i32 1, !dbg !9164
  %21 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !9164, !tbaa !5350
  %arrayidx = getelementptr %struct._object*, %struct._object** %21, i64 %18, !dbg !9165
  %22 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9165, !tbaa !2620
  br label %cond.end, !dbg !9159

cond.false:                                       ; preds = %for.body
  %23 = load i64, i64* %i, align 8, !dbg !9166, !tbaa !2742
  %24 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9168, !tbaa !2620
  %25 = bitcast %struct._object* %24 to %struct.PyTupleObject*, !dbg !9169
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %25, i32 0, i32 1, !dbg !9170
  %arrayidx10 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item9, i32 0, i64 %23, !dbg !9171
  %26 = load %struct._object*, %struct._object** %arrayidx10, align 8, !dbg !9171, !tbaa !2620
  br label %cond.end, !dbg !9159

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %22, %cond.true ], [ %26, %cond.false ], !dbg !9159
  store %struct._object* %cond, %struct._object** %element, align 8, !dbg !9172, !tbaa !2620
  %27 = load %struct._object*, %struct._object** %element, align 8, !dbg !9175, !tbaa !2620
  %call11 = call i32 @PyObject_IsInstance(%struct._object* %27, %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Element_Type, i32 0, i32 0, i32 0)), !dbg !9176
  %tobool12 = icmp ne i32 %call11, 0, !dbg !9176
  br i1 %tobool12, label %if.end.21, label %if.then.13, !dbg !9177

if.then.13:                                       ; preds = %cond.end
  br label %do.body, !dbg !9178

do.body:                                          ; preds = %if.then.13
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9179
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !9179
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1480, metadata !2613), !dbg !9181
  %29 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9182, !tbaa !2620
  store %struct._object* %29, %struct._object** %_py_decref_tmp, align 8, !dbg !9181, !tbaa !2620
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9183, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !9185
  %31 = load i64, i64* %ob_refcnt, align 8, !dbg !9186, !tbaa !2631
  %dec = add i64 %31, -1, !dbg !9186
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9186, !tbaa !2631
  %cmp14 = icmp ne i64 %dec, 0, !dbg !9187
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !9188

if.then.15:                                       ; preds = %do.body
  br label %if.end.17, !dbg !9189

if.else:                                          ; preds = %do.body
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9191, !tbaa !2620
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !9193
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !9193, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !9194
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9194, !tbaa !2705
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9195, !tbaa !2620
  call void %34(%struct._object* %35), !dbg !9196
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.15
  %36 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9197
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !9197
  br label %do.cond, !dbg !9199

do.cond:                                          ; preds = %if.end.17
  br label %do.end, !dbg !9200

do.end:                                           ; preds = %do.cond
  %37 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9202, !tbaa !2620
  %38 = load %struct._object*, %struct._object** %element, align 8, !dbg !9203, !tbaa !2620
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !9204
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !9204, !tbaa !2703
  %tp_name19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 1, !dbg !9205
  %40 = load i8*, i8** %tp_name19, align 8, !dbg !9205, !tbaa !3295
  %call20 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %37, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.82, i32 0, i32 0), i8* %40), !dbg !9206
  store %struct._object* null, %struct._object** %retval, !dbg !9207
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9207

if.end.21:                                        ; preds = %cond.end
  %41 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9208, !tbaa !2620
  %42 = load %struct._object*, %struct._object** %element, align 8, !dbg !9209, !tbaa !2620
  %call22 = call i32 @element_add_subelement(%struct.ElementObject* %41, %struct._object* %42), !dbg !9210
  %cmp23 = icmp slt i32 %call22, 0, !dbg !9211
  br i1 %cmp23, label %if.then.24, label %if.end.37, !dbg !9212

if.then.24:                                       ; preds = %if.end.21
  br label %do.body.25, !dbg !9213

do.body.25:                                       ; preds = %if.then.24
  %43 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !9214
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !9214
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp26, metadata !1484, metadata !2613), !dbg !9216
  %44 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9217, !tbaa !2620
  store %struct._object* %44, %struct._object** %_py_decref_tmp26, align 8, !dbg !9216, !tbaa !2620
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !9218, !tbaa !2620
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !9220
  %46 = load i64, i64* %ob_refcnt27, align 8, !dbg !9221, !tbaa !2631
  %dec28 = add i64 %46, -1, !dbg !9221
  store i64 %dec28, i64* %ob_refcnt27, align 8, !dbg !9221, !tbaa !2631
  %cmp29 = icmp ne i64 %dec28, 0, !dbg !9222
  br i1 %cmp29, label %if.then.30, label %if.else.31, !dbg !9223

if.then.30:                                       ; preds = %do.body.25
  br label %if.end.34, !dbg !9224

if.else.31:                                       ; preds = %do.body.25
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !9226, !tbaa !2620
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !9228
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !9228, !tbaa !2703
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !9229
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8, !dbg !9229, !tbaa !2705
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !9230, !tbaa !2620
  call void %49(%struct._object* %50), !dbg !9231
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.30
  %51 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !9232
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !9232
  br label %do.cond.35, !dbg !9234

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !9235

do.end.36:                                        ; preds = %do.cond.35
  store %struct._object* null, %struct._object** %retval, !dbg !9237
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9237

if.end.37:                                        ; preds = %if.end.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !9238
  br label %cleanup, !dbg !9238

cleanup:                                          ; preds = %if.end.37, %do.end.36, %do.end
  %52 = bitcast %struct._object** %element to i8*, !dbg !9239
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !9239
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.51 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !9240

for.inc:                                          ; preds = %cleanup.cont
  %53 = load i64, i64* %i, align 8, !dbg !9241, !tbaa !2742
  %inc = add i64 %53, 1, !dbg !9241
  store i64 %inc, i64* %i, align 8, !dbg !9241, !tbaa !2742
  br label %for.cond, !dbg !9242

for.end:                                          ; preds = %for.cond
  br label %do.body.38, !dbg !9243

do.body.38:                                       ; preds = %for.end
  %54 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !9244
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !9244
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp39, metadata !1488, metadata !2613), !dbg !9246
  %55 = load %struct._object*, %struct._object** %seq, align 8, !dbg !9247, !tbaa !2620
  store %struct._object* %55, %struct._object** %_py_decref_tmp39, align 8, !dbg !9246, !tbaa !2620
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !9248, !tbaa !2620
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !9250
  %57 = load i64, i64* %ob_refcnt40, align 8, !dbg !9251, !tbaa !2631
  %dec41 = add i64 %57, -1, !dbg !9251
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !9251, !tbaa !2631
  %cmp42 = icmp ne i64 %dec41, 0, !dbg !9252
  br i1 %cmp42, label %if.then.43, label %if.else.44, !dbg !9253

if.then.43:                                       ; preds = %do.body.38
  br label %if.end.47, !dbg !9254

if.else.44:                                       ; preds = %do.body.38
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !9256, !tbaa !2620
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !9258
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !9258, !tbaa !2703
  %tp_dealloc46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !9259
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc46, align 8, !dbg !9259, !tbaa !2705
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !9260, !tbaa !2620
  call void %60(%struct._object* %61), !dbg !9261
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.44, %if.then.43
  %62 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !9262
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !9262
  br label %do.cond.48, !dbg !9264

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !9265

do.end.49:                                        ; preds = %do.cond.48
  %63 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9267, !tbaa !2631
  %inc50 = add i64 %63, 1, !dbg !9267
  store i64 %inc50, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9267, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !9268
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.51, !dbg !9268

cleanup.51:                                       ; preds = %do.end.49, %cleanup, %if.then.3, %if.then
  %64 = bitcast %struct._object** %seq_in to i8*, !dbg !9269
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !9269
  %65 = bitcast i64* %seqlen to i8*, !dbg !9269
  call void @llvm.lifetime.end(i64 8, i8* %65) #1, !dbg !9269
  %66 = bitcast i64* %i to i8*, !dbg !9269
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !9269
  %67 = bitcast %struct._object** %seq to i8*, !dbg !9269
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !9269
  %68 = load %struct._object*, %struct._object** %retval, !dbg !9269
  ret %struct._object* %68, !dbg !9269
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_insert(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %element = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1492, metadata !2613), !dbg !9270
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1493, metadata !2613), !dbg !9271
  %0 = bitcast i32* %i to i8*, !dbg !9272
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9272
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1494, metadata !2613), !dbg !9273
  %1 = bitcast i32* %index to i8*, !dbg !9274
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !9274
  call void @llvm.dbg.declare(metadata i32* %index, metadata !1495, metadata !2613), !dbg !9275
  %2 = bitcast %struct._object** %element to i8*, !dbg !9276
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9276
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !1496, metadata !2613), !dbg !9277
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9278, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i32 0, i32 0), i32* %index, %struct._typeobject* @Element_Type, %struct._object** %element), !dbg !9280
  %tobool = icmp ne i32 %call, 0, !dbg !9280
  br i1 %tobool, label %if.end, label %if.then, !dbg !9281

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9282
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9282

if.end:                                           ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9283, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4, !dbg !9285
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9285, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %5, null, !dbg !9283
  br i1 %tobool1, label %if.end.6, label %if.then.2, !dbg !9286

if.then.2:                                        ; preds = %if.end
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9287, !tbaa !2620
  %call3 = call i32 @create_extra(%struct.ElementObject* %6, %struct._object* null), !dbg !9290
  %cmp = icmp slt i32 %call3, 0, !dbg !9291
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !9292

if.then.4:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !9293
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9293

if.end.5:                                         ; preds = %if.then.2
  br label %if.end.6, !dbg !9294

if.end.6:                                         ; preds = %if.end.5, %if.end
  %7 = load i32, i32* %index, align 4, !dbg !9295, !tbaa !2759
  %cmp7 = icmp slt i32 %7, 0, !dbg !9297
  br i1 %cmp7, label %if.then.8, label %if.end.13, !dbg !9298

if.then.8:                                        ; preds = %if.end.6
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9299, !tbaa !2620
  %extra9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 4, !dbg !9301
  %9 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra9, align 8, !dbg !9301, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %9, i32 0, i32 1, !dbg !9302
  %10 = load i32, i32* %length, align 4, !dbg !9302, !tbaa !3446
  %11 = load i32, i32* %index, align 4, !dbg !9303, !tbaa !2759
  %add = add i32 %11, %10, !dbg !9303
  store i32 %add, i32* %index, align 4, !dbg !9303, !tbaa !2759
  %12 = load i32, i32* %index, align 4, !dbg !9304, !tbaa !2759
  %cmp10 = icmp slt i32 %12, 0, !dbg !9306
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !9307

if.then.11:                                       ; preds = %if.then.8
  store i32 0, i32* %index, align 4, !dbg !9308, !tbaa !2759
  br label %if.end.12, !dbg !9309

if.end.12:                                        ; preds = %if.then.11, %if.then.8
  br label %if.end.13, !dbg !9310

if.end.13:                                        ; preds = %if.end.12, %if.end.6
  %13 = load i32, i32* %index, align 4, !dbg !9311, !tbaa !2759
  %14 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9313, !tbaa !2620
  %extra14 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %14, i32 0, i32 4, !dbg !9314
  %15 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra14, align 8, !dbg !9314, !tbaa !3362
  %length15 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %15, i32 0, i32 1, !dbg !9315
  %16 = load i32, i32* %length15, align 4, !dbg !9315, !tbaa !3446
  %cmp16 = icmp sgt i32 %13, %16, !dbg !9316
  br i1 %cmp16, label %if.then.17, label %if.end.20, !dbg !9317

if.then.17:                                       ; preds = %if.end.13
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9318, !tbaa !2620
  %extra18 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %17, i32 0, i32 4, !dbg !9319
  %18 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra18, align 8, !dbg !9319, !tbaa !3362
  %length19 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %18, i32 0, i32 1, !dbg !9320
  %19 = load i32, i32* %length19, align 4, !dbg !9320, !tbaa !3446
  store i32 %19, i32* %index, align 4, !dbg !9321, !tbaa !2759
  br label %if.end.20, !dbg !9322

if.end.20:                                        ; preds = %if.then.17, %if.end.13
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9323, !tbaa !2620
  %call21 = call i32 @element_resize(%struct.ElementObject* %20, i32 1), !dbg !9325
  %cmp22 = icmp slt i32 %call21, 0, !dbg !9326
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !9327

if.then.23:                                       ; preds = %if.end.20
  store %struct._object* null, %struct._object** %retval, !dbg !9328
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9328

if.end.24:                                        ; preds = %if.end.20
  %21 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9329, !tbaa !2620
  %extra25 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %21, i32 0, i32 4, !dbg !9331
  %22 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra25, align 8, !dbg !9331, !tbaa !3362
  %length26 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %22, i32 0, i32 1, !dbg !9332
  %23 = load i32, i32* %length26, align 4, !dbg !9332, !tbaa !3446
  store i32 %23, i32* %i, align 4, !dbg !9333, !tbaa !2759
  br label %for.cond, !dbg !9334

for.cond:                                         ; preds = %for.inc, %if.end.24
  %24 = load i32, i32* %i, align 4, !dbg !9335, !tbaa !2759
  %25 = load i32, i32* %index, align 4, !dbg !9339, !tbaa !2759
  %cmp27 = icmp sgt i32 %24, %25, !dbg !9340
  br i1 %cmp27, label %for.body, label %for.end, !dbg !9341

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* %i, align 4, !dbg !9342, !tbaa !2759
  %sub = sub i32 %26, 1, !dbg !9343
  %idxprom = sext i32 %sub to i64, !dbg !9344
  %27 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9344, !tbaa !2620
  %extra28 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %27, i32 0, i32 4, !dbg !9345
  %28 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra28, align 8, !dbg !9345, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %28, i32 0, i32 3, !dbg !9346
  %29 = load %struct._object**, %struct._object*** %children, align 8, !dbg !9346, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %29, i64 %idxprom, !dbg !9344
  %30 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9344, !tbaa !2620
  %31 = load i32, i32* %i, align 4, !dbg !9347, !tbaa !2759
  %idxprom29 = sext i32 %31 to i64, !dbg !9348
  %32 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9348, !tbaa !2620
  %extra30 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %32, i32 0, i32 4, !dbg !9349
  %33 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra30, align 8, !dbg !9349, !tbaa !3362
  %children31 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %33, i32 0, i32 3, !dbg !9350
  %34 = load %struct._object**, %struct._object*** %children31, align 8, !dbg !9350, !tbaa !3451
  %arrayidx32 = getelementptr %struct._object*, %struct._object** %34, i64 %idxprom29, !dbg !9348
  store %struct._object* %30, %struct._object** %arrayidx32, align 8, !dbg !9351, !tbaa !2620
  br label %for.inc, !dbg !9348

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %i, align 4, !dbg !9352, !tbaa !2759
  %dec = add i32 %35, -1, !dbg !9352
  store i32 %dec, i32* %i, align 4, !dbg !9352, !tbaa !2759
  br label %for.cond, !dbg !9353

for.end:                                          ; preds = %for.cond
  %36 = load %struct._object*, %struct._object** %element, align 8, !dbg !9354, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !9355
  %37 = load i64, i64* %ob_refcnt, align 8, !dbg !9356, !tbaa !2631
  %inc = add i64 %37, 1, !dbg !9356
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9356, !tbaa !2631
  %38 = load %struct._object*, %struct._object** %element, align 8, !dbg !9357, !tbaa !2620
  %39 = load i32, i32* %index, align 4, !dbg !9358, !tbaa !2759
  %idxprom33 = sext i32 %39 to i64, !dbg !9359
  %40 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9359, !tbaa !2620
  %extra34 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %40, i32 0, i32 4, !dbg !9360
  %41 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra34, align 8, !dbg !9360, !tbaa !3362
  %children35 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %41, i32 0, i32 3, !dbg !9361
  %42 = load %struct._object**, %struct._object*** %children35, align 8, !dbg !9361, !tbaa !3451
  %arrayidx36 = getelementptr %struct._object*, %struct._object** %42, i64 %idxprom33, !dbg !9359
  store %struct._object* %38, %struct._object** %arrayidx36, align 8, !dbg !9362, !tbaa !2620
  %43 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9363, !tbaa !2620
  %extra37 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %43, i32 0, i32 4, !dbg !9364
  %44 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra37, align 8, !dbg !9364, !tbaa !3362
  %length38 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %44, i32 0, i32 1, !dbg !9365
  %45 = load i32, i32* %length38, align 4, !dbg !9366, !tbaa !3446
  %inc39 = add i32 %45, 1, !dbg !9366
  store i32 %inc39, i32* %length38, align 4, !dbg !9366, !tbaa !3446
  %46 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9367, !tbaa !2631
  %inc40 = add i64 %46, 1, !dbg !9367
  store i64 %inc40, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9367, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !9368
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9368

cleanup:                                          ; preds = %for.end, %if.then.23, %if.then.4, %if.then
  %47 = bitcast %struct._object** %element to i8*, !dbg !9369
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !9369
  %48 = bitcast i32* %index to i8*, !dbg !9369
  call void @llvm.lifetime.end(i64 4, i8* %48) #1, !dbg !9369
  %49 = bitcast i32* %i to i8*, !dbg !9369
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !9369
  %50 = load %struct._object*, %struct._object** %retval, !dbg !9369
  ret %struct._object* %50, !dbg !9369
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_remove(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1499, metadata !2613), !dbg !9370
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1500, metadata !2613), !dbg !9371
  %0 = bitcast i32* %i to i8*, !dbg !9372
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9372
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1501, metadata !2613), !dbg !9373
  %1 = bitcast %struct._object** %element to i8*, !dbg !9374
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9374
  call void @llvm.dbg.declare(metadata %struct._object** %element, metadata !1502, metadata !2613), !dbg !9375
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9376, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), %struct._typeobject* @Element_Type, %struct._object** %element), !dbg !9378
  %tobool = icmp ne i32 %call, 0, !dbg !9378
  br i1 %tobool, label %if.end, label %if.then, !dbg !9379

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9380
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9380

if.end:                                           ; preds = %entry
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9381, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4, !dbg !9383
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9383, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %4, null, !dbg !9381
  br i1 %tobool1, label %if.end.3, label %if.then.2, !dbg !9384

if.then.2:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9385, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.85, i32 0, i32 0)), !dbg !9387
  store %struct._object* null, %struct._object** %retval, !dbg !9388
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9388

if.end.3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9389, !tbaa !2759
  br label %for.cond, !dbg !9391

for.cond:                                         ; preds = %for.inc, %if.end.3
  %6 = load i32, i32* %i, align 4, !dbg !9392, !tbaa !2759
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9396, !tbaa !2620
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4, !dbg !9397
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8, !dbg !9397, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 1, !dbg !9398
  %9 = load i32, i32* %length, align 4, !dbg !9398, !tbaa !3446
  %cmp = icmp slt i32 %6, %9, !dbg !9399
  br i1 %cmp, label %for.body, label %for.end, !dbg !9400

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !9401, !tbaa !2759
  %idxprom = sext i32 %10 to i64, !dbg !9404
  %11 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9404, !tbaa !2620
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %11, i32 0, i32 4, !dbg !9405
  %12 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8, !dbg !9405, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %12, i32 0, i32 3, !dbg !9406
  %13 = load %struct._object**, %struct._object*** %children, align 8, !dbg !9406, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %13, i64 %idxprom, !dbg !9404
  %14 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9404, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %element, align 8, !dbg !9407, !tbaa !2620
  %cmp6 = icmp eq %struct._object* %14, %15, !dbg !9408
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !9409

if.then.7:                                        ; preds = %for.body
  br label %for.end, !dbg !9410

if.end.8:                                         ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !9411, !tbaa !2759
  %idxprom9 = sext i32 %16 to i64, !dbg !9413
  %17 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9413, !tbaa !2620
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %17, i32 0, i32 4, !dbg !9414
  %18 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8, !dbg !9414, !tbaa !3362
  %children11 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %18, i32 0, i32 3, !dbg !9415
  %19 = load %struct._object**, %struct._object*** %children11, align 8, !dbg !9415, !tbaa !3451
  %arrayidx12 = getelementptr %struct._object*, %struct._object** %19, i64 %idxprom9, !dbg !9413
  %20 = load %struct._object*, %struct._object** %arrayidx12, align 8, !dbg !9413, !tbaa !2620
  %21 = load %struct._object*, %struct._object** %element, align 8, !dbg !9416, !tbaa !2620
  %call13 = call i32 @PyObject_RichCompareBool(%struct._object* %20, %struct._object* %21, i32 2), !dbg !9417
  %cmp14 = icmp eq i32 %call13, 1, !dbg !9418
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !9419

if.then.15:                                       ; preds = %if.end.8
  br label %for.end, !dbg !9420

if.end.16:                                        ; preds = %if.end.8
  br label %for.inc, !dbg !9421

for.inc:                                          ; preds = %if.end.16
  %22 = load i32, i32* %i, align 4, !dbg !9422, !tbaa !2759
  %inc = add i32 %22, 1, !dbg !9422
  store i32 %inc, i32* %i, align 4, !dbg !9422, !tbaa !2759
  br label %for.cond, !dbg !9423

for.end:                                          ; preds = %if.then.15, %if.then.7, %for.cond
  %23 = load i32, i32* %i, align 4, !dbg !9424, !tbaa !2759
  %24 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9426, !tbaa !2620
  %extra17 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %24, i32 0, i32 4, !dbg !9427
  %25 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra17, align 8, !dbg !9427, !tbaa !3362
  %length18 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %25, i32 0, i32 1, !dbg !9428
  %26 = load i32, i32* %length18, align 4, !dbg !9428, !tbaa !3446
  %cmp19 = icmp eq i32 %23, %26, !dbg !9429
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !9430

if.then.20:                                       ; preds = %for.end
  %27 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9431, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.85, i32 0, i32 0)), !dbg !9433
  store %struct._object* null, %struct._object** %retval, !dbg !9434
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9434

if.end.21:                                        ; preds = %for.end
  br label %do.body, !dbg !9435

do.body:                                          ; preds = %if.end.21
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9436
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !9436
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1503, metadata !2613), !dbg !9438
  %29 = load i32, i32* %i, align 4, !dbg !9439, !tbaa !2759
  %idxprom22 = sext i32 %29 to i64, !dbg !9440
  %30 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9440, !tbaa !2620
  %extra23 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %30, i32 0, i32 4, !dbg !9441
  %31 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra23, align 8, !dbg !9441, !tbaa !3362
  %children24 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %31, i32 0, i32 3, !dbg !9442
  %32 = load %struct._object**, %struct._object*** %children24, align 8, !dbg !9442, !tbaa !3451
  %arrayidx25 = getelementptr %struct._object*, %struct._object** %32, i64 %idxprom22, !dbg !9440
  %33 = load %struct._object*, %struct._object** %arrayidx25, align 8, !dbg !9440, !tbaa !2620
  store %struct._object* %33, %struct._object** %_py_decref_tmp, align 8, !dbg !9438, !tbaa !2620
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9443, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !9445
  %35 = load i64, i64* %ob_refcnt, align 8, !dbg !9446, !tbaa !2631
  %dec = add i64 %35, -1, !dbg !9446
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9446, !tbaa !2631
  %cmp26 = icmp ne i64 %dec, 0, !dbg !9447
  br i1 %cmp26, label %if.then.27, label %if.else, !dbg !9448

if.then.27:                                       ; preds = %do.body
  br label %if.end.28, !dbg !9449

if.else:                                          ; preds = %do.body
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9451, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !9453
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9453, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !9454
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9454, !tbaa !2705
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9455, !tbaa !2620
  call void %38(%struct._object* %39), !dbg !9456
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.27
  %40 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9457
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !9457
  br label %do.cond, !dbg !9459

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !9460

do.end:                                           ; preds = %do.cond
  %41 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9462, !tbaa !2620
  %extra29 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %41, i32 0, i32 4, !dbg !9463
  %42 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra29, align 8, !dbg !9463, !tbaa !3362
  %length30 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %42, i32 0, i32 1, !dbg !9464
  %43 = load i32, i32* %length30, align 4, !dbg !9465, !tbaa !3446
  %dec31 = add i32 %43, -1, !dbg !9465
  store i32 %dec31, i32* %length30, align 4, !dbg !9465, !tbaa !3446
  br label %for.cond.32, !dbg !9466

for.cond.32:                                      ; preds = %for.inc.45, %do.end
  %44 = load i32, i32* %i, align 4, !dbg !9467, !tbaa !2759
  %45 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9472, !tbaa !2620
  %extra33 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %45, i32 0, i32 4, !dbg !9473
  %46 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra33, align 8, !dbg !9473, !tbaa !3362
  %length34 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %46, i32 0, i32 1, !dbg !9474
  %47 = load i32, i32* %length34, align 4, !dbg !9474, !tbaa !3446
  %cmp35 = icmp slt i32 %44, %47, !dbg !9475
  br i1 %cmp35, label %for.body.36, label %for.end.47, !dbg !9476

for.body.36:                                      ; preds = %for.cond.32
  %48 = load i32, i32* %i, align 4, !dbg !9477, !tbaa !2759
  %add = add i32 %48, 1, !dbg !9478
  %idxprom37 = sext i32 %add to i64, !dbg !9479
  %49 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9479, !tbaa !2620
  %extra38 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %49, i32 0, i32 4, !dbg !9480
  %50 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra38, align 8, !dbg !9480, !tbaa !3362
  %children39 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %50, i32 0, i32 3, !dbg !9481
  %51 = load %struct._object**, %struct._object*** %children39, align 8, !dbg !9481, !tbaa !3451
  %arrayidx40 = getelementptr %struct._object*, %struct._object** %51, i64 %idxprom37, !dbg !9479
  %52 = load %struct._object*, %struct._object** %arrayidx40, align 8, !dbg !9479, !tbaa !2620
  %53 = load i32, i32* %i, align 4, !dbg !9482, !tbaa !2759
  %idxprom41 = sext i32 %53 to i64, !dbg !9483
  %54 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9483, !tbaa !2620
  %extra42 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %54, i32 0, i32 4, !dbg !9484
  %55 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra42, align 8, !dbg !9484, !tbaa !3362
  %children43 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %55, i32 0, i32 3, !dbg !9485
  %56 = load %struct._object**, %struct._object*** %children43, align 8, !dbg !9485, !tbaa !3451
  %arrayidx44 = getelementptr %struct._object*, %struct._object** %56, i64 %idxprom41, !dbg !9483
  store %struct._object* %52, %struct._object** %arrayidx44, align 8, !dbg !9486, !tbaa !2620
  br label %for.inc.45, !dbg !9483

for.inc.45:                                       ; preds = %for.body.36
  %57 = load i32, i32* %i, align 4, !dbg !9487, !tbaa !2759
  %inc46 = add i32 %57, 1, !dbg !9487
  store i32 %inc46, i32* %i, align 4, !dbg !9487, !tbaa !2759
  br label %for.cond.32, !dbg !9488

for.end.47:                                       ; preds = %for.cond.32
  %58 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9489, !tbaa !2631
  %inc48 = add i64 %58, 1, !dbg !9489
  store i64 %inc48, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9489, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !9490
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9490

cleanup:                                          ; preds = %for.end.47, %if.then.20, %if.then.2, %if.then
  %59 = bitcast %struct._object** %element to i8*, !dbg !9491
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !9491
  %60 = bitcast i32* %i to i8*, !dbg !9491
  call void @llvm.lifetime.end(i64 4, i8* %60) #1, !dbg !9491
  %61 = load %struct._object*, %struct._object** %retval, !dbg !9491
  ret %struct._object* %61, !dbg !9491
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_iter(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1507, metadata !2613), !dbg !9492
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1508, metadata !2613), !dbg !9493
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1509, metadata !2613), !dbg !9494
  %0 = bitcast %struct._object** %tag to i8*, !dbg !9495
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9495
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1510, metadata !2613), !dbg !9496
  store %struct._object* @_Py_NoneStruct, %struct._object** %tag, align 8, !dbg !9496, !tbaa !2620
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9497, !tbaa !2620
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9499, !tbaa !2620
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %1, %struct._object* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @element_iter.kwlist, i32 0, i32 0), %struct._object** %tag), !dbg !9500
  %tobool = icmp ne i32 %call, 0, !dbg !9500
  br i1 %tobool, label %if.end, label %if.then, !dbg !9501

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9502
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9502

if.end:                                           ; preds = %entry
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9503, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9504, !tbaa !2620
  %call1 = call %struct._object* @create_elementiter(%struct.ElementObject* %3, %struct._object* %4, i32 0), !dbg !9505
  store %struct._object* %call1, %struct._object** %retval, !dbg !9506
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9506

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast %struct._object** %tag to i8*, !dbg !9507
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !9507
  %6 = load %struct._object*, %struct._object** %retval, !dbg !9507
  ret %struct._object* %6, !dbg !9507
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_itertext(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1531, metadata !2613), !dbg !9508
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1532, metadata !2613), !dbg !9509
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9510, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i32 0, i32 0)), !dbg !9512
  %tobool = icmp ne i32 %call, 0, !dbg !9512
  br i1 %tobool, label %if.end, label %if.then, !dbg !9513

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9514
  br label %return, !dbg !9514

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9515, !tbaa !2620
  %call1 = call %struct._object* @create_elementiter(%struct.ElementObject* %1, %struct._object* @_Py_NoneStruct, i32 1), !dbg !9516
  store %struct._object* %call1, %struct._object** %retval, !dbg !9517
  br label %return, !dbg !9517

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval, !dbg !9518
  ret %struct._object* %2, !dbg !9518
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_iterfind(%struct.ElementObject* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %namespaces = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1535, metadata !2613), !dbg !9519
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1536, metadata !2613), !dbg !9520
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1537, metadata !2613), !dbg !9521
  %0 = bitcast %struct._object** %tag to i8*, !dbg !9522
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9522
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1538, metadata !2613), !dbg !9523
  %1 = bitcast %struct._object** %namespaces to i8*, !dbg !9524
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9524
  call void @llvm.dbg.declare(metadata %struct._object** %namespaces, metadata !1539, metadata !2613), !dbg !9525
  store %struct._object* @_Py_NoneStruct, %struct._object** %namespaces, align 8, !dbg !9525, !tbaa !2620
  %2 = bitcast %struct.elementtreestate** %st to i8*, !dbg !9526
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9526
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !1540, metadata !2613), !dbg !9527
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !9528
  %call1 = call i8* @PyModule_GetState(%struct._object* %call), !dbg !9529
  %3 = bitcast i8* %call1 to %struct.elementtreestate*, !dbg !9530
  store %struct.elementtreestate* %3, %struct.elementtreestate** %st, align 8, !dbg !9527, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9531, !tbaa !2620
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9533, !tbaa !2620
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @element_iterfind.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %namespaces), !dbg !9534
  %tobool = icmp ne i32 %call2, 0, !dbg !9534
  br i1 %tobool, label %if.end, label %if.then, !dbg !9535

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9536
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9536

if.end:                                           ; preds = %entry
  %6 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !9538, !tbaa !2620
  %elementpath_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %6, i32 0, i32 2, !dbg !9539
  %7 = load %struct._object*, %struct._object** %elementpath_obj, align 8, !dbg !9539, !tbaa !2729
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9540, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9541, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %namespaces, align 8, !dbg !9542, !tbaa !2620
  %call3 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId(%struct._object* %7, %struct._Py_Identifier* @element_iterfind.PyId_iterfind, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct.ElementObject* %8, %struct._object* %9, %struct._object* %10), !dbg !9543
  store %struct._object* %call3, %struct._object** %retval, !dbg !9544
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9544

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast %struct.elementtreestate** %st to i8*, !dbg !9545
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !9545
  %12 = bitcast %struct._object** %namespaces to i8*, !dbg !9545
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !9545
  %13 = bitcast %struct._object** %tag to i8*, !dbg !9545
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !9545
  %14 = load %struct._object*, %struct._object** %retval, !dbg !9545
  ret %struct._object* %14, !dbg !9545
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getchildren(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %list = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %item = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1543, metadata !2613), !dbg !9546
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1544, metadata !2613), !dbg !9547
  %0 = bitcast i32* %i to i8*, !dbg !9548
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9548
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1545, metadata !2613), !dbg !9549
  %1 = bitcast %struct._object** %list to i8*, !dbg !9550
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9550
  call void @llvm.dbg.declare(metadata %struct._object** %list, metadata !1546, metadata !2613), !dbg !9551
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9552, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0)), !dbg !9554
  %tobool = icmp ne i32 %call, 0, !dbg !9554
  br i1 %tobool, label %if.end, label %if.then, !dbg !9555

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9556
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9556

if.end:                                           ; preds = %entry
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9557, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4, !dbg !9559
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9559, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %4, null, !dbg !9557
  br i1 %tobool1, label %if.end.4, label %if.then.2, !dbg !9560

if.then.2:                                        ; preds = %if.end
  %call3 = call %struct._object* @PyList_New(i64 0), !dbg !9561
  store %struct._object* %call3, %struct._object** %retval, !dbg !9562
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9562

if.end.4:                                         ; preds = %if.end
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9563, !tbaa !2620
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4, !dbg !9564
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8, !dbg !9564, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %6, i32 0, i32 1, !dbg !9565
  %7 = load i32, i32* %length, align 4, !dbg !9565, !tbaa !3446
  %conv = sext i32 %7 to i64, !dbg !9563
  %call6 = call %struct._object* @PyList_New(i64 %conv), !dbg !9566
  store %struct._object* %call6, %struct._object** %list, align 8, !dbg !9567, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %list, align 8, !dbg !9568, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %8, null, !dbg !9568
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !9570

if.then.8:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !9571
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9571

if.end.9:                                         ; preds = %if.end.4
  store i32 0, i32* %i, align 4, !dbg !9572, !tbaa !2759
  br label %for.cond, !dbg !9573

for.cond:                                         ; preds = %for.inc, %if.end.9
  %9 = load i32, i32* %i, align 4, !dbg !9574, !tbaa !2759
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9577, !tbaa !2620
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4, !dbg !9578
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8, !dbg !9578, !tbaa !3362
  %length11 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 1, !dbg !9579
  %12 = load i32, i32* %length11, align 4, !dbg !9579, !tbaa !3446
  %cmp = icmp slt i32 %9, %12, !dbg !9580
  br i1 %cmp, label %for.body, label %for.end, !dbg !9581

for.body:                                         ; preds = %for.cond
  %13 = bitcast %struct._object** %item to i8*, !dbg !9582
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !9582
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1547, metadata !2613), !dbg !9583
  %14 = load i32, i32* %i, align 4, !dbg !9584, !tbaa !2759
  %idxprom = sext i32 %14 to i64, !dbg !9585
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9585, !tbaa !2620
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4, !dbg !9586
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8, !dbg !9586, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %16, i32 0, i32 3, !dbg !9587
  %17 = load %struct._object**, %struct._object*** %children, align 8, !dbg !9587, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %17, i64 %idxprom, !dbg !9585
  %18 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9585, !tbaa !2620
  store %struct._object* %18, %struct._object** %item, align 8, !dbg !9583, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %item, align 8, !dbg !9588, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !9589
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !9590, !tbaa !2631
  %inc = add i64 %20, 1, !dbg !9590
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9590, !tbaa !2631
  %21 = load %struct._object*, %struct._object** %item, align 8, !dbg !9591, !tbaa !2620
  %22 = load i32, i32* %i, align 4, !dbg !9592, !tbaa !2759
  %idxprom14 = sext i32 %22 to i64, !dbg !9593
  %23 = load %struct._object*, %struct._object** %list, align 8, !dbg !9594, !tbaa !2620
  %24 = bitcast %struct._object* %23 to %struct.PyListObject*, !dbg !9595
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %24, i32 0, i32 1, !dbg !9596
  %25 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !9596, !tbaa !5350
  %arrayidx15 = getelementptr %struct._object*, %struct._object** %25, i64 %idxprom14, !dbg !9593
  store %struct._object* %21, %struct._object** %arrayidx15, align 8, !dbg !9597, !tbaa !2620
  %26 = bitcast %struct._object** %item to i8*, !dbg !9598
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !9598
  br label %for.inc, !dbg !9599

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !9600, !tbaa !2759
  %inc16 = add i32 %27, 1, !dbg !9600
  store i32 %inc16, i32* %i, align 4, !dbg !9600, !tbaa !2759
  br label %for.cond, !dbg !9601

for.end:                                          ; preds = %for.cond
  %28 = load %struct._object*, %struct._object** %list, align 8, !dbg !9602, !tbaa !2620
  store %struct._object* %28, %struct._object** %retval, !dbg !9603
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9603

cleanup:                                          ; preds = %for.end, %if.then.8, %if.then.2, %if.then
  %29 = bitcast %struct._object** %list to i8*, !dbg !9604
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !9604
  %30 = bitcast i32* %i to i8*, !dbg !9604
  call void @llvm.lifetime.end(i64 4, i8* %30) #1, !dbg !9604
  %31 = load %struct._object*, %struct._object** %retval, !dbg !9604
  ret %struct._object* %31, !dbg !9604
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_items(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1553, metadata !2613), !dbg !9605
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1554, metadata !2613), !dbg !9606
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9607, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0)), !dbg !9609
  %tobool = icmp ne i32 %call, 0, !dbg !9609
  br i1 %tobool, label %if.end, label %if.then, !dbg !9610

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9611
  br label %return, !dbg !9611

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9612, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4, !dbg !9614
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9614, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null, !dbg !9612
  br i1 %tobool1, label %lor.lhs.false, label %if.then.3, !dbg !9615

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9616, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4, !dbg !9618
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !9618, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %4, i32 0, i32 0, !dbg !9619
  %5 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9619, !tbaa !3497
  %cmp = icmp eq %struct._object* %5, @_Py_NoneStruct, !dbg !9620
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !9621

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %call4 = call %struct._object* @PyList_New(i64 0), !dbg !9622
  store %struct._object* %call4, %struct._object** %retval, !dbg !9623
  br label %return, !dbg !9623

if.end.5:                                         ; preds = %lor.lhs.false
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9624, !tbaa !2620
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4, !dbg !9625
  %7 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8, !dbg !9625, !tbaa !3362
  %attrib7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %7, i32 0, i32 0, !dbg !9626
  %8 = load %struct._object*, %struct._object** %attrib7, align 8, !dbg !9626, !tbaa !3497
  %call8 = call %struct._object* @PyDict_Items(%struct._object* %8), !dbg !9627
  store %struct._object* %call8, %struct._object** %retval, !dbg !9628
  br label %return, !dbg !9628

return:                                           ; preds = %if.end.5, %if.then.3, %if.then
  %9 = load %struct._object*, %struct._object** %retval, !dbg !9629
  ret %struct._object* %9, !dbg !9629
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_keys(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1557, metadata !2613), !dbg !9630
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1558, metadata !2613), !dbg !9631
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9632, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0)), !dbg !9634
  %tobool = icmp ne i32 %call, 0, !dbg !9634
  br i1 %tobool, label %if.end, label %if.then, !dbg !9635

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9636
  br label %return, !dbg !9636

if.end:                                           ; preds = %entry
  %1 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9637, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %1, i32 0, i32 4, !dbg !9639
  %2 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9639, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %2, null, !dbg !9637
  br i1 %tobool1, label %lor.lhs.false, label %if.then.3, !dbg !9640

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9641, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 4, !dbg !9643
  %4 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !9643, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %4, i32 0, i32 0, !dbg !9644
  %5 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9644, !tbaa !3497
  %cmp = icmp eq %struct._object* %5, @_Py_NoneStruct, !dbg !9645
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !9646

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %call4 = call %struct._object* @PyList_New(i64 0), !dbg !9647
  store %struct._object* %call4, %struct._object** %retval, !dbg !9648
  br label %return, !dbg !9648

if.end.5:                                         ; preds = %lor.lhs.false
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9649, !tbaa !2620
  %extra6 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4, !dbg !9650
  %7 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra6, align 8, !dbg !9650, !tbaa !3362
  %attrib7 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %7, i32 0, i32 0, !dbg !9651
  %8 = load %struct._object*, %struct._object** %attrib7, align 8, !dbg !9651, !tbaa !3497
  %call8 = call %struct._object* @PyDict_Keys(%struct._object* %8), !dbg !9652
  store %struct._object* %call8, %struct._object** %retval, !dbg !9653
  br label %return, !dbg !9653

return:                                           ; preds = %if.end.5, %if.then.3, %if.then
  %9 = load %struct._object*, %struct._object** %retval, !dbg !9654
  ret %struct._object* %9, !dbg !9654
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_makeelement(%struct._object* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %elem = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1561, metadata !2613), !dbg !9655
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1562, metadata !2613), !dbg !9656
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !1563, metadata !2613), !dbg !9657
  %0 = bitcast %struct._object** %elem to i8*, !dbg !9658
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !9658
  call void @llvm.dbg.declare(metadata %struct._object** %elem, metadata !1564, metadata !2613), !dbg !9659
  %1 = bitcast %struct._object** %tag to i8*, !dbg !9660
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9660
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1565, metadata !2613), !dbg !9661
  %2 = bitcast %struct._object** %attrib to i8*, !dbg !9662
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9662
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !1566, metadata !2613), !dbg !9663
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9664, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i32 0, i32 0), %struct._object** %tag, %struct._object** %attrib), !dbg !9666
  %tobool = icmp ne i32 %call, 0, !dbg !9666
  br i1 %tobool, label %if.end, label %if.then, !dbg !9667

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9668
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9668

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9669, !tbaa !2620
  %call1 = call %struct._object* @PyDict_Copy(%struct._object* %4), !dbg !9670
  store %struct._object* %call1, %struct._object** %attrib, align 8, !dbg !9671, !tbaa !2620
  %5 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9672, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %5, null, !dbg !9672
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !9674

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !9675
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9675

if.end.4:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9676, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9677, !tbaa !2620
  %call5 = call %struct._object* @create_new_element(%struct._object* %6, %struct._object* %7), !dbg !9678
  store %struct._object* %call5, %struct._object** %elem, align 8, !dbg !9679, !tbaa !2620
  br label %do.body, !dbg !9680

do.body:                                          ; preds = %if.end.4
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9681
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !9681
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1567, metadata !2613), !dbg !9683
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9684, !tbaa !2620
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !9683, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9685, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !9687
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !9688, !tbaa !2631
  %dec = add i64 %11, -1, !dbg !9688
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9688, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !9689
  br i1 %cmp, label %if.then.6, label %if.else, !dbg !9690

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !9691

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9693, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !9695
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9695, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !9696
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9696, !tbaa !2705
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9697, !tbaa !2620
  call void %14(%struct._object* %15), !dbg !9698
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9699
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !9699
  br label %do.cond, !dbg !9701

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !9702

do.end:                                           ; preds = %do.cond
  %17 = load %struct._object*, %struct._object** %elem, align 8, !dbg !9704, !tbaa !2620
  store %struct._object* %17, %struct._object** %retval, !dbg !9705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9705

cleanup:                                          ; preds = %do.end, %if.then.3, %if.then
  %18 = bitcast %struct._object** %attrib to i8*, !dbg !9706
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !9706
  %19 = bitcast %struct._object** %tag to i8*, !dbg !9706
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !9706
  %20 = bitcast %struct._object** %elem to i8*, !dbg !9706
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !9706
  %21 = load %struct._object*, %struct._object** %retval, !dbg !9706
  ret %struct._object* %21, !dbg !9706
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_copy(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct.ElementObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp41 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1571, metadata !2613), !dbg !9707
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1572, metadata !2613), !dbg !9708
  %0 = bitcast i32* %i to i8*, !dbg !9709
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9709
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1573, metadata !2613), !dbg !9710
  %1 = bitcast %struct.ElementObject** %element to i8*, !dbg !9711
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9711
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %element, metadata !1574, metadata !2613), !dbg !9712
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9713, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i32 0, i32 0)), !dbg !9715
  %tobool = icmp ne i32 %call, 0, !dbg !9715
  br i1 %tobool, label %if.end, label %if.then, !dbg !9716

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9717

if.end:                                           ; preds = %entry
  %3 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9718, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %3, i32 0, i32 1, !dbg !9719
  %4 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9719, !tbaa !3371
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9720, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 4, !dbg !9721
  %6 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9721, !tbaa !3362
  %tobool1 = icmp ne %struct.ElementObjectExtra* %6, null, !dbg !9722
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !9722

cond.true:                                        ; preds = %if.end
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9723, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4, !dbg !9725
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !9725, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 0, !dbg !9726
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9726, !tbaa !3497
  br label %cond.end, !dbg !9722

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !9727

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %9, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !9722
  %call3 = call %struct._object* @create_new_element(%struct._object* %4, %struct._object* %cond), !dbg !9729
  %10 = bitcast %struct._object* %call3 to %struct.ElementObject*, !dbg !9730
  store %struct.ElementObject* %10, %struct.ElementObject** %element, align 8, !dbg !9731, !tbaa !2620
  %11 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9732, !tbaa !2620
  %tobool4 = icmp ne %struct.ElementObject* %11, null, !dbg !9732
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !9734

if.then.5:                                        ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !9735
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9735

if.end.6:                                         ; preds = %cond.end
  br label %do.body, !dbg !9736

do.body:                                          ; preds = %if.end.6
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9737
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !9737
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1575, metadata !2613), !dbg !9739
  %13 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9740, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 2, !dbg !9741
  %14 = load %struct._object*, %struct._object** %text, align 8, !dbg !9741, !tbaa !3376
  %15 = ptrtoint %struct._object* %14 to i64, !dbg !9742
  %and = and i64 %15, -2, !dbg !9743
  %16 = inttoptr i64 %and to %struct._object*, !dbg !9744
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !9739, !tbaa !2620
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9745, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !9747
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !9748, !tbaa !2631
  %dec = add i64 %18, -1, !dbg !9748
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9748, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !9749
  br i1 %cmp, label %if.then.7, label %if.else, !dbg !9750

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !9751

if.else:                                          ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9753, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !9755
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9755, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !9756
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9756, !tbaa !2705
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9757, !tbaa !2620
  call void %21(%struct._object* %22), !dbg !9758
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9759
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !9759
  br label %do.cond, !dbg !9761

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !9762

do.end:                                           ; preds = %do.cond
  %24 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9764, !tbaa !2620
  %text9 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %24, i32 0, i32 2, !dbg !9765
  %25 = load %struct._object*, %struct._object** %text9, align 8, !dbg !9765, !tbaa !3376
  %26 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9766, !tbaa !2620
  %text10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %26, i32 0, i32 2, !dbg !9767
  store %struct._object* %25, %struct._object** %text10, align 8, !dbg !9768, !tbaa !3376
  %27 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9769, !tbaa !2620
  %text11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %27, i32 0, i32 2, !dbg !9770
  %28 = load %struct._object*, %struct._object** %text11, align 8, !dbg !9770, !tbaa !3376
  %29 = ptrtoint %struct._object* %28 to i64, !dbg !9771
  %and12 = and i64 %29, -2, !dbg !9772
  %30 = inttoptr i64 %and12 to %struct._object*, !dbg !9773
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !9774
  %31 = load i64, i64* %ob_refcnt13, align 8, !dbg !9775, !tbaa !2631
  %inc = add i64 %31, 1, !dbg !9775
  store i64 %inc, i64* %ob_refcnt13, align 8, !dbg !9775, !tbaa !2631
  br label %do.body.14, !dbg !9776

do.body.14:                                       ; preds = %do.end
  %32 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !9777
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !9777
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1577, metadata !2613), !dbg !9779
  %33 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9780, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %33, i32 0, i32 3, !dbg !9781
  %34 = load %struct._object*, %struct._object** %tail, align 8, !dbg !9781, !tbaa !3381
  %35 = ptrtoint %struct._object* %34 to i64, !dbg !9782
  %and16 = and i64 %35, -2, !dbg !9783
  %36 = inttoptr i64 %and16 to %struct._object*, !dbg !9784
  store %struct._object* %36, %struct._object** %_py_decref_tmp15, align 8, !dbg !9779, !tbaa !2620
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !9785, !tbaa !2620
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !9787
  %38 = load i64, i64* %ob_refcnt17, align 8, !dbg !9788, !tbaa !2631
  %dec18 = add i64 %38, -1, !dbg !9788
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !9788, !tbaa !2631
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !9789
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !9790

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24, !dbg !9791

if.else.21:                                       ; preds = %do.body.14
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !9793, !tbaa !2620
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !9795
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !9795, !tbaa !2703
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !9796
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !9796, !tbaa !2705
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !9797, !tbaa !2620
  call void %41(%struct._object* %42), !dbg !9798
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %43 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !9799
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !9799
  br label %do.cond.25, !dbg !9800

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !9801

do.end.26:                                        ; preds = %do.cond.25
  %44 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9803, !tbaa !2620
  %tail27 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %44, i32 0, i32 3, !dbg !9804
  %45 = load %struct._object*, %struct._object** %tail27, align 8, !dbg !9804, !tbaa !3381
  %46 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9805, !tbaa !2620
  %tail28 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %46, i32 0, i32 3, !dbg !9806
  store %struct._object* %45, %struct._object** %tail28, align 8, !dbg !9807, !tbaa !3381
  %47 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9808, !tbaa !2620
  %tail29 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %47, i32 0, i32 3, !dbg !9809
  %48 = load %struct._object*, %struct._object** %tail29, align 8, !dbg !9809, !tbaa !3381
  %49 = ptrtoint %struct._object* %48 to i64, !dbg !9810
  %and30 = and i64 %49, -2, !dbg !9811
  %50 = inttoptr i64 %and30 to %struct._object*, !dbg !9812
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !9813
  %51 = load i64, i64* %ob_refcnt31, align 8, !dbg !9814, !tbaa !2631
  %inc32 = add i64 %51, 1, !dbg !9814
  store i64 %inc32, i64* %ob_refcnt31, align 8, !dbg !9814, !tbaa !2631
  %52 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9815, !tbaa !2620
  %extra33 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %52, i32 0, i32 4, !dbg !9816
  %53 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra33, align 8, !dbg !9816, !tbaa !3362
  %tobool34 = icmp ne %struct.ElementObjectExtra* %53, null, !dbg !9815
  br i1 %tobool34, label %if.then.35, label %if.end.72, !dbg !9817

if.then.35:                                       ; preds = %do.end.26
  %54 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9818, !tbaa !2620
  %55 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9819, !tbaa !2620
  %extra36 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %55, i32 0, i32 4, !dbg !9820
  %56 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra36, align 8, !dbg !9820, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %56, i32 0, i32 1, !dbg !9821
  %57 = load i32, i32* %length, align 4, !dbg !9821, !tbaa !3446
  %call37 = call i32 @element_resize(%struct.ElementObject* %54, i32 %57), !dbg !9822
  %cmp38 = icmp slt i32 %call37, 0, !dbg !9823
  br i1 %cmp38, label %if.then.39, label %if.end.52, !dbg !9824

if.then.39:                                       ; preds = %if.then.35
  br label %do.body.40, !dbg !9825

do.body.40:                                       ; preds = %if.then.39
  %58 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !9826
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !9826
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp41, metadata !1579, metadata !2613), !dbg !9828
  %59 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9829, !tbaa !2620
  %60 = bitcast %struct.ElementObject* %59 to %struct._object*, !dbg !9830
  store %struct._object* %60, %struct._object** %_py_decref_tmp41, align 8, !dbg !9828, !tbaa !2620
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !9831, !tbaa !2620
  %ob_refcnt42 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !9833
  %62 = load i64, i64* %ob_refcnt42, align 8, !dbg !9834, !tbaa !2631
  %dec43 = add i64 %62, -1, !dbg !9834
  store i64 %dec43, i64* %ob_refcnt42, align 8, !dbg !9834, !tbaa !2631
  %cmp44 = icmp ne i64 %dec43, 0, !dbg !9835
  br i1 %cmp44, label %if.then.45, label %if.else.46, !dbg !9836

if.then.45:                                       ; preds = %do.body.40
  br label %if.end.49, !dbg !9837

if.else.46:                                       ; preds = %do.body.40
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !9839, !tbaa !2620
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !9841
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !9841, !tbaa !2703
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !9842
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8, !dbg !9842, !tbaa !2705
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !9843, !tbaa !2620
  call void %65(%struct._object* %66), !dbg !9844
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.46, %if.then.45
  %67 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !9845
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !9845
  br label %do.cond.50, !dbg !9847

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !9848

do.end.51:                                        ; preds = %do.cond.50
  store %struct._object* null, %struct._object** %retval, !dbg !9850
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9850

if.end.52:                                        ; preds = %if.then.35
  store i32 0, i32* %i, align 4, !dbg !9851, !tbaa !2759
  br label %for.cond, !dbg !9853

for.cond:                                         ; preds = %for.inc, %if.end.52
  %68 = load i32, i32* %i, align 4, !dbg !9854, !tbaa !2759
  %69 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9858, !tbaa !2620
  %extra53 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %69, i32 0, i32 4, !dbg !9859
  %70 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra53, align 8, !dbg !9859, !tbaa !3362
  %length54 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %70, i32 0, i32 1, !dbg !9860
  %71 = load i32, i32* %length54, align 4, !dbg !9860, !tbaa !3446
  %cmp55 = icmp slt i32 %68, %71, !dbg !9861
  br i1 %cmp55, label %for.body, label %for.end, !dbg !9862

for.body:                                         ; preds = %for.cond
  %72 = load i32, i32* %i, align 4, !dbg !9863, !tbaa !2759
  %idxprom = sext i32 %72 to i64, !dbg !9865
  %73 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9865, !tbaa !2620
  %extra56 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %73, i32 0, i32 4, !dbg !9866
  %74 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra56, align 8, !dbg !9866, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %74, i32 0, i32 3, !dbg !9867
  %75 = load %struct._object**, %struct._object*** %children, align 8, !dbg !9867, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %75, i64 %idxprom, !dbg !9865
  %76 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9865, !tbaa !2620
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !9868
  %77 = load i64, i64* %ob_refcnt57, align 8, !dbg !9869, !tbaa !2631
  %inc58 = add i64 %77, 1, !dbg !9869
  store i64 %inc58, i64* %ob_refcnt57, align 8, !dbg !9869, !tbaa !2631
  %78 = load i32, i32* %i, align 4, !dbg !9870, !tbaa !2759
  %idxprom59 = sext i32 %78 to i64, !dbg !9871
  %79 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9871, !tbaa !2620
  %extra60 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %79, i32 0, i32 4, !dbg !9872
  %80 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra60, align 8, !dbg !9872, !tbaa !3362
  %children61 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %80, i32 0, i32 3, !dbg !9873
  %81 = load %struct._object**, %struct._object*** %children61, align 8, !dbg !9873, !tbaa !3451
  %arrayidx62 = getelementptr %struct._object*, %struct._object** %81, i64 %idxprom59, !dbg !9871
  %82 = load %struct._object*, %struct._object** %arrayidx62, align 8, !dbg !9871, !tbaa !2620
  %83 = load i32, i32* %i, align 4, !dbg !9874, !tbaa !2759
  %idxprom63 = sext i32 %83 to i64, !dbg !9875
  %84 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9875, !tbaa !2620
  %extra64 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %84, i32 0, i32 4, !dbg !9876
  %85 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra64, align 8, !dbg !9876, !tbaa !3362
  %children65 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %85, i32 0, i32 3, !dbg !9877
  %86 = load %struct._object**, %struct._object*** %children65, align 8, !dbg !9877, !tbaa !3451
  %arrayidx66 = getelementptr %struct._object*, %struct._object** %86, i64 %idxprom63, !dbg !9875
  store %struct._object* %82, %struct._object** %arrayidx66, align 8, !dbg !9878, !tbaa !2620
  br label %for.inc, !dbg !9879

for.inc:                                          ; preds = %for.body
  %87 = load i32, i32* %i, align 4, !dbg !9880, !tbaa !2759
  %inc67 = add i32 %87, 1, !dbg !9880
  store i32 %inc67, i32* %i, align 4, !dbg !9880, !tbaa !2759
  br label %for.cond, !dbg !9881

for.end:                                          ; preds = %for.cond
  %88 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9882, !tbaa !2620
  %extra68 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %88, i32 0, i32 4, !dbg !9883
  %89 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra68, align 8, !dbg !9883, !tbaa !3362
  %length69 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %89, i32 0, i32 1, !dbg !9884
  %90 = load i32, i32* %length69, align 4, !dbg !9884, !tbaa !3446
  %91 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9885, !tbaa !2620
  %extra70 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %91, i32 0, i32 4, !dbg !9886
  %92 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra70, align 8, !dbg !9886, !tbaa !3362
  %length71 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %92, i32 0, i32 1, !dbg !9887
  store i32 %90, i32* %length71, align 4, !dbg !9888, !tbaa !3446
  br label %if.end.72, !dbg !9889

if.end.72:                                        ; preds = %for.end, %do.end.26
  %93 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !9890, !tbaa !2620
  %94 = bitcast %struct.ElementObject* %93 to %struct._object*, !dbg !9891
  store %struct._object* %94, %struct._object** %retval, !dbg !9892
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9892

cleanup:                                          ; preds = %if.end.72, %do.end.51, %if.then.5, %if.then
  %95 = bitcast %struct.ElementObject** %element to i8*, !dbg !9893
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !9893
  %96 = bitcast i32* %i to i8*, !dbg !9893
  call void @llvm.lifetime.end(i64 4, i8* %96) #1, !dbg !9893
  %97 = load %struct._object*, %struct._object** %retval, !dbg !9893
  ret %struct._object* %97, !dbg !9893
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_deepcopy(%struct.ElementObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct.ElementObject*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %text = alloca %struct._object*, align 8
  %tail = alloca %struct._object*, align 8
  %id = alloca %struct._object*, align 8
  %memo = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_decref_tmp75 = alloca %struct._object*, align 8
  %child = alloca %struct._object*, align 8
  %_py_decref_tmp126 = alloca %struct._object*, align 8
  %_py_decref_tmp141 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1587, metadata !2613), !dbg !9894
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1588, metadata !2613), !dbg !9895
  %0 = bitcast i32* %i to i8*, !dbg !9896
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !9896
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1589, metadata !2613), !dbg !9897
  %1 = bitcast %struct.ElementObject** %element to i8*, !dbg !9898
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !9898
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %element, metadata !1590, metadata !2613), !dbg !9899
  %2 = bitcast %struct._object** %tag to i8*, !dbg !9900
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !9900
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1591, metadata !2613), !dbg !9901
  %3 = bitcast %struct._object** %attrib to i8*, !dbg !9902
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !9902
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !1592, metadata !2613), !dbg !9903
  %4 = bitcast %struct._object** %text to i8*, !dbg !9904
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !9904
  call void @llvm.dbg.declare(metadata %struct._object** %text, metadata !1593, metadata !2613), !dbg !9905
  %5 = bitcast %struct._object** %tail to i8*, !dbg !9906
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !9906
  call void @llvm.dbg.declare(metadata %struct._object** %tail, metadata !1594, metadata !2613), !dbg !9907
  %6 = bitcast %struct._object** %id to i8*, !dbg !9908
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !9908
  call void @llvm.dbg.declare(metadata %struct._object** %id, metadata !1595, metadata !2613), !dbg !9909
  %7 = bitcast %struct._object** %memo to i8*, !dbg !9910
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !9910
  call void @llvm.dbg.declare(metadata %struct._object** %memo, metadata !1596, metadata !2613), !dbg !9911
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9912, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i32 0, i32 0), %struct._object** %memo), !dbg !9914
  %tobool = icmp ne i32 %call, 0, !dbg !9914
  br i1 %tobool, label %if.end, label %if.then, !dbg !9915

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !9916

if.end:                                           ; preds = %entry
  %9 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9917, !tbaa !2620
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %9, i32 0, i32 1, !dbg !9918
  %10 = load %struct._object*, %struct._object** %tag1, align 8, !dbg !9918, !tbaa !3371
  %11 = load %struct._object*, %struct._object** %memo, align 8, !dbg !9919, !tbaa !2620
  %call2 = call %struct._object* @deepcopy(%struct._object* %10, %struct._object* %11), !dbg !9920
  store %struct._object* %call2, %struct._object** %tag, align 8, !dbg !9921, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9922, !tbaa !2620
  %tobool3 = icmp ne %struct._object* %12, null, !dbg !9922
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !9924

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !9925
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !9925

if.end.5:                                         ; preds = %if.end
  %13 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9926, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %13, i32 0, i32 4, !dbg !9927
  %14 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !9927, !tbaa !3362
  %tobool6 = icmp ne %struct.ElementObjectExtra* %14, null, !dbg !9926
  br i1 %tobool6, label %if.then.7, label %if.else.16, !dbg !9928

if.then.7:                                        ; preds = %if.end.5
  %15 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !9929, !tbaa !2620
  %extra8 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %15, i32 0, i32 4, !dbg !9930
  %16 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra8, align 8, !dbg !9930, !tbaa !3362
  %attrib9 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %16, i32 0, i32 0, !dbg !9931
  %17 = load %struct._object*, %struct._object** %attrib9, align 8, !dbg !9931, !tbaa !3497
  %18 = load %struct._object*, %struct._object** %memo, align 8, !dbg !9932, !tbaa !2620
  %call10 = call %struct._object* @deepcopy(%struct._object* %17, %struct._object* %18), !dbg !9933
  store %struct._object* %call10, %struct._object** %attrib, align 8, !dbg !9934, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9935, !tbaa !2620
  %tobool11 = icmp ne %struct._object* %19, null, !dbg !9935
  br i1 %tobool11, label %if.end.15, label %if.then.12, !dbg !9936

if.then.12:                                       ; preds = %if.then.7
  br label %do.body, !dbg !9937

do.body:                                          ; preds = %if.then.12
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9938
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !9938
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1597, metadata !2613), !dbg !9940
  %21 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9941, !tbaa !2620
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !9940, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9942, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !9944
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !9945, !tbaa !2631
  %dec = add i64 %23, -1, !dbg !9945
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9945, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !9946
  br i1 %cmp, label %if.then.13, label %if.else, !dbg !9947

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !9948

if.else:                                          ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9950, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !9952
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9952, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !9953
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9953, !tbaa !2705
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9954, !tbaa !2620
  call void %26(%struct._object* %27), !dbg !9955
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9956
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !9956
  br label %do.cond, !dbg !9958

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !9959

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !9961
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !9961

if.end.15:                                        ; preds = %if.then.7
  br label %if.end.17, !dbg !9962

if.else.16:                                       ; preds = %if.end.5
  %29 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9963, !tbaa !2631
  %inc = add i64 %29, 1, !dbg !9963
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9963, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %attrib, align 8, !dbg !9965, !tbaa !2620
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.16, %if.end.15
  %30 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9966, !tbaa !2620
  %31 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9967, !tbaa !2620
  %call18 = call %struct._object* @create_new_element(%struct._object* %30, %struct._object* %31), !dbg !9968
  %32 = bitcast %struct._object* %call18 to %struct.ElementObject*, !dbg !9969
  store %struct.ElementObject* %32, %struct.ElementObject** %element, align 8, !dbg !9970, !tbaa !2620
  br label %do.body.19, !dbg !9971

do.body.19:                                       ; preds = %if.end.17
  %33 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !9972
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !9972
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp20, metadata !1603, metadata !2613), !dbg !9974
  %34 = load %struct._object*, %struct._object** %tag, align 8, !dbg !9975, !tbaa !2620
  store %struct._object* %34, %struct._object** %_py_decref_tmp20, align 8, !dbg !9974, !tbaa !2620
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !9976, !tbaa !2620
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !9978
  %36 = load i64, i64* %ob_refcnt21, align 8, !dbg !9979, !tbaa !2631
  %dec22 = add i64 %36, -1, !dbg !9979
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !9979, !tbaa !2631
  %cmp23 = icmp ne i64 %dec22, 0, !dbg !9980
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !9981

if.then.24:                                       ; preds = %do.body.19
  br label %if.end.28, !dbg !9982

if.else.25:                                       ; preds = %do.body.19
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !9984, !tbaa !2620
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !9986
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !9986, !tbaa !2703
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !9987
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8, !dbg !9987, !tbaa !2705
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !9988, !tbaa !2620
  call void %39(%struct._object* %40), !dbg !9989
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  %41 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !9990
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !9990
  br label %do.cond.29, !dbg !9992

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !9993

do.end.30:                                        ; preds = %do.cond.29
  br label %do.body.31, !dbg !9995

do.body.31:                                       ; preds = %do.end.30
  %42 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !9996
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !9996
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !1605, metadata !2613), !dbg !9998
  %43 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !9999, !tbaa !2620
  store %struct._object* %43, %struct._object** %_py_decref_tmp32, align 8, !dbg !9998, !tbaa !2620
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !10000, !tbaa !2620
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !10002
  %45 = load i64, i64* %ob_refcnt33, align 8, !dbg !10003, !tbaa !2631
  %dec34 = add i64 %45, -1, !dbg !10003
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !10003, !tbaa !2631
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !10004
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !10005

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !10006

if.else.37:                                       ; preds = %do.body.31
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !10008, !tbaa !2620
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !10010
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !10010, !tbaa !2703
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !10011
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !10011, !tbaa !2705
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !10012, !tbaa !2620
  call void %48(%struct._object* %49), !dbg !10013
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %50 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !10014
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !10014
  br label %do.cond.41, !dbg !10015

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !10016

do.end.42:                                        ; preds = %do.cond.41
  %51 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10018, !tbaa !2620
  %tobool43 = icmp ne %struct.ElementObject* %51, null, !dbg !10018
  br i1 %tobool43, label %if.end.45, label %if.then.44, !dbg !10020

if.then.44:                                       ; preds = %do.end.42
  store %struct._object* null, %struct._object** %retval, !dbg !10021
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !10021

if.end.45:                                        ; preds = %do.end.42
  %52 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10022, !tbaa !2620
  %text46 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %52, i32 0, i32 2, !dbg !10023
  %53 = load %struct._object*, %struct._object** %text46, align 8, !dbg !10023, !tbaa !3376
  %54 = ptrtoint %struct._object* %53 to i64, !dbg !10024
  %and = and i64 %54, -2, !dbg !10025
  %55 = inttoptr i64 %and to %struct._object*, !dbg !10026
  %56 = load %struct._object*, %struct._object** %memo, align 8, !dbg !10027, !tbaa !2620
  %call47 = call %struct._object* @deepcopy(%struct._object* %55, %struct._object* %56), !dbg !10028
  store %struct._object* %call47, %struct._object** %text, align 8, !dbg !10029, !tbaa !2620
  %57 = load %struct._object*, %struct._object** %text, align 8, !dbg !10030, !tbaa !2620
  %tobool48 = icmp ne %struct._object* %57, null, !dbg !10030
  br i1 %tobool48, label %if.end.50, label %if.then.49, !dbg !10032

if.then.49:                                       ; preds = %if.end.45
  br label %error, !dbg !10033

if.end.50:                                        ; preds = %if.end.45
  br label %do.body.51, !dbg !10034

do.body.51:                                       ; preds = %if.end.50
  %58 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !10035
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !10035
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !1607, metadata !2613), !dbg !10037
  %59 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10038, !tbaa !2620
  %text53 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %59, i32 0, i32 2, !dbg !10039
  %60 = load %struct._object*, %struct._object** %text53, align 8, !dbg !10039, !tbaa !3376
  store %struct._object* %60, %struct._object** %_py_decref_tmp52, align 8, !dbg !10037, !tbaa !2620
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !10040, !tbaa !2620
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !10042
  %62 = load i64, i64* %ob_refcnt54, align 8, !dbg !10043, !tbaa !2631
  %dec55 = add i64 %62, -1, !dbg !10043
  store i64 %dec55, i64* %ob_refcnt54, align 8, !dbg !10043, !tbaa !2631
  %cmp56 = icmp ne i64 %dec55, 0, !dbg !10044
  br i1 %cmp56, label %if.then.57, label %if.else.58, !dbg !10045

if.then.57:                                       ; preds = %do.body.51
  br label %if.end.61, !dbg !10046

if.else.58:                                       ; preds = %do.body.51
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !10048, !tbaa !2620
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !10050
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !10050, !tbaa !2703
  %tp_dealloc60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !10051
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc60, align 8, !dbg !10051, !tbaa !2705
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !10052, !tbaa !2620
  call void %65(%struct._object* %66), !dbg !10053
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.58, %if.then.57
  %67 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !10054
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !10054
  br label %do.cond.62, !dbg !10055

do.cond.62:                                       ; preds = %if.end.61
  br label %do.end.63, !dbg !10056

do.end.63:                                        ; preds = %do.cond.62
  %68 = load %struct._object*, %struct._object** %text, align 8, !dbg !10058, !tbaa !2620
  %69 = ptrtoint %struct._object* %68 to i64, !dbg !10059
  %and64 = and i64 %69, -2, !dbg !10060
  %70 = inttoptr i64 %and64 to %struct._object*, !dbg !10061
  %71 = ptrtoint %struct._object* %70 to i64, !dbg !10062
  %72 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10063, !tbaa !2620
  %text65 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %72, i32 0, i32 2, !dbg !10064
  %73 = load %struct._object*, %struct._object** %text65, align 8, !dbg !10064, !tbaa !3376
  %74 = ptrtoint %struct._object* %73 to i64, !dbg !10065
  %and66 = and i64 %74, 1, !dbg !10066
  %or = or i64 %71, %and66, !dbg !10067
  %75 = inttoptr i64 %or to i8*, !dbg !10068
  %76 = bitcast i8* %75 to %struct._object*, !dbg !10069
  %77 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10070, !tbaa !2620
  %text67 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %77, i32 0, i32 2, !dbg !10071
  store %struct._object* %76, %struct._object** %text67, align 8, !dbg !10072, !tbaa !3376
  %78 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10073, !tbaa !2620
  %tail68 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %78, i32 0, i32 3, !dbg !10074
  %79 = load %struct._object*, %struct._object** %tail68, align 8, !dbg !10074, !tbaa !3381
  %80 = ptrtoint %struct._object* %79 to i64, !dbg !10075
  %and69 = and i64 %80, -2, !dbg !10076
  %81 = inttoptr i64 %and69 to %struct._object*, !dbg !10077
  %82 = load %struct._object*, %struct._object** %memo, align 8, !dbg !10078, !tbaa !2620
  %call70 = call %struct._object* @deepcopy(%struct._object* %81, %struct._object* %82), !dbg !10079
  store %struct._object* %call70, %struct._object** %tail, align 8, !dbg !10080, !tbaa !2620
  %83 = load %struct._object*, %struct._object** %tail, align 8, !dbg !10081, !tbaa !2620
  %tobool71 = icmp ne %struct._object* %83, null, !dbg !10081
  br i1 %tobool71, label %if.end.73, label %if.then.72, !dbg !10083

if.then.72:                                       ; preds = %do.end.63
  br label %error, !dbg !10084

if.end.73:                                        ; preds = %do.end.63
  br label %do.body.74, !dbg !10085

do.body.74:                                       ; preds = %if.end.73
  %84 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !10086
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !10086
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp75, metadata !1609, metadata !2613), !dbg !10088
  %85 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10089, !tbaa !2620
  %tail76 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %85, i32 0, i32 3, !dbg !10090
  %86 = load %struct._object*, %struct._object** %tail76, align 8, !dbg !10090, !tbaa !3381
  store %struct._object* %86, %struct._object** %_py_decref_tmp75, align 8, !dbg !10088, !tbaa !2620
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !10091, !tbaa !2620
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !10093
  %88 = load i64, i64* %ob_refcnt77, align 8, !dbg !10094, !tbaa !2631
  %dec78 = add i64 %88, -1, !dbg !10094
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !10094, !tbaa !2631
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !10095
  br i1 %cmp79, label %if.then.80, label %if.else.81, !dbg !10096

if.then.80:                                       ; preds = %do.body.74
  br label %if.end.84, !dbg !10097

if.else.81:                                       ; preds = %do.body.74
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !10099, !tbaa !2620
  %ob_type82 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !10101
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type82, align 8, !dbg !10101, !tbaa !2703
  %tp_dealloc83 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !10102
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc83, align 8, !dbg !10102, !tbaa !2705
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !10103, !tbaa !2620
  call void %91(%struct._object* %92), !dbg !10104
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.80
  %93 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !10105
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !10105
  br label %do.cond.85, !dbg !10106

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !10107

do.end.86:                                        ; preds = %do.cond.85
  %94 = load %struct._object*, %struct._object** %tail, align 8, !dbg !10109, !tbaa !2620
  %95 = ptrtoint %struct._object* %94 to i64, !dbg !10110
  %and87 = and i64 %95, -2, !dbg !10111
  %96 = inttoptr i64 %and87 to %struct._object*, !dbg !10112
  %97 = ptrtoint %struct._object* %96 to i64, !dbg !10113
  %98 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10114, !tbaa !2620
  %tail88 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %98, i32 0, i32 3, !dbg !10115
  %99 = load %struct._object*, %struct._object** %tail88, align 8, !dbg !10115, !tbaa !3381
  %100 = ptrtoint %struct._object* %99 to i64, !dbg !10116
  %and89 = and i64 %100, 1, !dbg !10117
  %or90 = or i64 %97, %and89, !dbg !10118
  %101 = inttoptr i64 %or90 to i8*, !dbg !10119
  %102 = bitcast i8* %101 to %struct._object*, !dbg !10120
  %103 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10121, !tbaa !2620
  %tail91 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %103, i32 0, i32 3, !dbg !10122
  store %struct._object* %102, %struct._object** %tail91, align 8, !dbg !10123, !tbaa !3381
  %104 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10124, !tbaa !2620
  %extra92 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %104, i32 0, i32 4, !dbg !10125
  %105 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra92, align 8, !dbg !10125, !tbaa !3362
  %tobool93 = icmp ne %struct.ElementObjectExtra* %105, null, !dbg !10124
  br i1 %tobool93, label %if.then.94, label %if.end.119, !dbg !10126

if.then.94:                                       ; preds = %do.end.86
  %106 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10127, !tbaa !2620
  %107 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10129, !tbaa !2620
  %extra95 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %107, i32 0, i32 4, !dbg !10130
  %108 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra95, align 8, !dbg !10130, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %108, i32 0, i32 1, !dbg !10131
  %109 = load i32, i32* %length, align 4, !dbg !10131, !tbaa !3446
  %call96 = call i32 @element_resize(%struct.ElementObject* %106, i32 %109), !dbg !10132
  %cmp97 = icmp slt i32 %call96, 0, !dbg !10133
  br i1 %cmp97, label %if.then.98, label %if.end.99, !dbg !10134

if.then.98:                                       ; preds = %if.then.94
  br label %error, !dbg !10135

if.end.99:                                        ; preds = %if.then.94
  store i32 0, i32* %i, align 4, !dbg !10136, !tbaa !2759
  br label %for.cond, !dbg !10137

for.cond:                                         ; preds = %for.inc, %if.end.99
  %110 = load i32, i32* %i, align 4, !dbg !10138, !tbaa !2759
  %111 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10141, !tbaa !2620
  %extra100 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %111, i32 0, i32 4, !dbg !10142
  %112 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra100, align 8, !dbg !10142, !tbaa !3362
  %length101 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %112, i32 0, i32 1, !dbg !10143
  %113 = load i32, i32* %length101, align 4, !dbg !10143, !tbaa !3446
  %cmp102 = icmp slt i32 %110, %113, !dbg !10144
  br i1 %cmp102, label %for.body, label %for.end, !dbg !10145

for.body:                                         ; preds = %for.cond
  %114 = bitcast %struct._object** %child to i8*, !dbg !10146
  call void @llvm.lifetime.start(i64 8, i8* %114) #1, !dbg !10146
  call void @llvm.dbg.declare(metadata %struct._object** %child, metadata !1611, metadata !2613), !dbg !10147
  %115 = load i32, i32* %i, align 4, !dbg !10148, !tbaa !2759
  %idxprom = sext i32 %115 to i64, !dbg !10149
  %116 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10149, !tbaa !2620
  %extra103 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %116, i32 0, i32 4, !dbg !10150
  %117 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra103, align 8, !dbg !10150, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %117, i32 0, i32 3, !dbg !10151
  %118 = load %struct._object**, %struct._object*** %children, align 8, !dbg !10151, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %118, i64 %idxprom, !dbg !10149
  %119 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !10149, !tbaa !2620
  %120 = load %struct._object*, %struct._object** %memo, align 8, !dbg !10152, !tbaa !2620
  %call104 = call %struct._object* @deepcopy(%struct._object* %119, %struct._object* %120), !dbg !10153
  store %struct._object* %call104, %struct._object** %child, align 8, !dbg !10147, !tbaa !2620
  %121 = load %struct._object*, %struct._object** %child, align 8, !dbg !10154, !tbaa !2620
  %tobool105 = icmp ne %struct._object* %121, null, !dbg !10154
  br i1 %tobool105, label %if.end.109, label %if.then.106, !dbg !10156

if.then.106:                                      ; preds = %for.body
  %122 = load i32, i32* %i, align 4, !dbg !10157, !tbaa !2759
  %123 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10159, !tbaa !2620
  %extra107 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %123, i32 0, i32 4, !dbg !10160
  %124 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra107, align 8, !dbg !10160, !tbaa !3362
  %length108 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %124, i32 0, i32 1, !dbg !10161
  store i32 %122, i32* %length108, align 4, !dbg !10162, !tbaa !3446
  store i32 8, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10163

if.end.109:                                       ; preds = %for.body
  %125 = load %struct._object*, %struct._object** %child, align 8, !dbg !10164, !tbaa !2620
  %126 = load i32, i32* %i, align 4, !dbg !10165, !tbaa !2759
  %idxprom110 = sext i32 %126 to i64, !dbg !10166
  %127 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10166, !tbaa !2620
  %extra111 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %127, i32 0, i32 4, !dbg !10167
  %128 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra111, align 8, !dbg !10167, !tbaa !3362
  %children112 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %128, i32 0, i32 3, !dbg !10168
  %129 = load %struct._object**, %struct._object*** %children112, align 8, !dbg !10168, !tbaa !3451
  %arrayidx113 = getelementptr %struct._object*, %struct._object** %129, i64 %idxprom110, !dbg !10166
  store %struct._object* %125, %struct._object** %arrayidx113, align 8, !dbg !10169, !tbaa !2620
  store i32 0, i32* %cleanup.dest.slot, !dbg !10170
  br label %cleanup, !dbg !10170

cleanup:                                          ; preds = %if.then.106, %if.end.109
  %130 = bitcast %struct._object** %child to i8*, !dbg !10171
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !10171
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.152 [
    i32 0, label %cleanup.cont
    i32 8, label %error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !10172

for.inc:                                          ; preds = %cleanup.cont
  %131 = load i32, i32* %i, align 4, !dbg !10173, !tbaa !2759
  %inc114 = add i32 %131, 1, !dbg !10173
  store i32 %inc114, i32* %i, align 4, !dbg !10173, !tbaa !2759
  br label %for.cond, !dbg !10174

for.end:                                          ; preds = %for.cond
  %132 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10175, !tbaa !2620
  %extra115 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %132, i32 0, i32 4, !dbg !10176
  %133 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra115, align 8, !dbg !10176, !tbaa !3362
  %length116 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %133, i32 0, i32 1, !dbg !10177
  %134 = load i32, i32* %length116, align 4, !dbg !10177, !tbaa !3446
  %135 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10178, !tbaa !2620
  %extra117 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %135, i32 0, i32 4, !dbg !10179
  %136 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra117, align 8, !dbg !10179, !tbaa !3362
  %length118 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %136, i32 0, i32 1, !dbg !10180
  store i32 %134, i32* %length118, align 4, !dbg !10181, !tbaa !3446
  br label %if.end.119, !dbg !10182

if.end.119:                                       ; preds = %for.end, %do.end.86
  %137 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10183, !tbaa !2620
  %138 = ptrtoint %struct.ElementObject* %137 to i64, !dbg !10184
  %call120 = call %struct._object* @PyLong_FromSsize_t(i64 %138), !dbg !10185
  store %struct._object* %call120, %struct._object** %id, align 8, !dbg !10186, !tbaa !2620
  %139 = load %struct._object*, %struct._object** %id, align 8, !dbg !10187, !tbaa !2620
  %tobool121 = icmp ne %struct._object* %139, null, !dbg !10187
  br i1 %tobool121, label %if.end.123, label %if.then.122, !dbg !10189

if.then.122:                                      ; preds = %if.end.119
  br label %error, !dbg !10190

if.end.123:                                       ; preds = %if.end.119
  %140 = load %struct._object*, %struct._object** %memo, align 8, !dbg !10191, !tbaa !2620
  %141 = load %struct._object*, %struct._object** %id, align 8, !dbg !10192, !tbaa !2620
  %142 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10193, !tbaa !2620
  %143 = bitcast %struct.ElementObject* %142 to %struct._object*, !dbg !10194
  %call124 = call i32 @PyDict_SetItem(%struct._object* %140, %struct._object* %141, %struct._object* %143), !dbg !10195
  store i32 %call124, i32* %i, align 4, !dbg !10196, !tbaa !2759
  br label %do.body.125, !dbg !10197

do.body.125:                                      ; preds = %if.end.123
  %144 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !10198
  call void @llvm.lifetime.start(i64 8, i8* %144) #1, !dbg !10198
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp126, metadata !1617, metadata !2613), !dbg !10200
  %145 = load %struct._object*, %struct._object** %id, align 8, !dbg !10201, !tbaa !2620
  store %struct._object* %145, %struct._object** %_py_decref_tmp126, align 8, !dbg !10200, !tbaa !2620
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10202, !tbaa !2620
  %ob_refcnt127 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 0, !dbg !10204
  %147 = load i64, i64* %ob_refcnt127, align 8, !dbg !10205, !tbaa !2631
  %dec128 = add i64 %147, -1, !dbg !10205
  store i64 %dec128, i64* %ob_refcnt127, align 8, !dbg !10205, !tbaa !2631
  %cmp129 = icmp ne i64 %dec128, 0, !dbg !10206
  br i1 %cmp129, label %if.then.130, label %if.else.131, !dbg !10207

if.then.130:                                      ; preds = %do.body.125
  br label %if.end.134, !dbg !10208

if.else.131:                                      ; preds = %do.body.125
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10210, !tbaa !2620
  %ob_type132 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 1, !dbg !10212
  %149 = load %struct._typeobject*, %struct._typeobject** %ob_type132, align 8, !dbg !10212, !tbaa !2703
  %tp_dealloc133 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %149, i32 0, i32 4, !dbg !10213
  %150 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc133, align 8, !dbg !10213, !tbaa !2705
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10214, !tbaa !2620
  call void %150(%struct._object* %151), !dbg !10215
  br label %if.end.134

if.end.134:                                       ; preds = %if.else.131, %if.then.130
  %152 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !10216
  call void @llvm.lifetime.end(i64 8, i8* %152) #1, !dbg !10216
  br label %do.cond.135, !dbg !10217

do.cond.135:                                      ; preds = %if.end.134
  br label %do.end.136, !dbg !10218

do.end.136:                                       ; preds = %do.cond.135
  %153 = load i32, i32* %i, align 4, !dbg !10220, !tbaa !2759
  %cmp137 = icmp slt i32 %153, 0, !dbg !10222
  br i1 %cmp137, label %if.then.138, label %if.end.139, !dbg !10223

if.then.138:                                      ; preds = %do.end.136
  br label %error, !dbg !10224

if.end.139:                                       ; preds = %do.end.136
  %154 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10225, !tbaa !2620
  %155 = bitcast %struct.ElementObject* %154 to %struct._object*, !dbg !10226
  store %struct._object* %155, %struct._object** %retval, !dbg !10227
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !10227

error:                                            ; preds = %cleanup, %if.then.138, %if.then.122, %if.then.98, %if.then.72, %if.then.49
  br label %do.body.140, !dbg !10228

do.body.140:                                      ; preds = %error
  %156 = bitcast %struct._object** %_py_decref_tmp141 to i8*, !dbg !10229
  call void @llvm.lifetime.start(i64 8, i8* %156) #1, !dbg !10229
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp141, metadata !1619, metadata !2613), !dbg !10231
  %157 = load %struct.ElementObject*, %struct.ElementObject** %element, align 8, !dbg !10232, !tbaa !2620
  %158 = bitcast %struct.ElementObject* %157 to %struct._object*, !dbg !10233
  store %struct._object* %158, %struct._object** %_py_decref_tmp141, align 8, !dbg !10231, !tbaa !2620
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !10234, !tbaa !2620
  %ob_refcnt142 = getelementptr inbounds %struct._object, %struct._object* %159, i32 0, i32 0, !dbg !10236
  %160 = load i64, i64* %ob_refcnt142, align 8, !dbg !10237, !tbaa !2631
  %dec143 = add i64 %160, -1, !dbg !10237
  store i64 %dec143, i64* %ob_refcnt142, align 8, !dbg !10237, !tbaa !2631
  %cmp144 = icmp ne i64 %dec143, 0, !dbg !10238
  br i1 %cmp144, label %if.then.145, label %if.else.146, !dbg !10239

if.then.145:                                      ; preds = %do.body.140
  br label %if.end.149, !dbg !10240

if.else.146:                                      ; preds = %do.body.140
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !10242, !tbaa !2620
  %ob_type147 = getelementptr inbounds %struct._object, %struct._object* %161, i32 0, i32 1, !dbg !10244
  %162 = load %struct._typeobject*, %struct._typeobject** %ob_type147, align 8, !dbg !10244, !tbaa !2703
  %tp_dealloc148 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %162, i32 0, i32 4, !dbg !10245
  %163 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc148, align 8, !dbg !10245, !tbaa !2705
  %164 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !10246, !tbaa !2620
  call void %163(%struct._object* %164), !dbg !10247
  br label %if.end.149

if.end.149:                                       ; preds = %if.else.146, %if.then.145
  %165 = bitcast %struct._object** %_py_decref_tmp141 to i8*, !dbg !10248
  call void @llvm.lifetime.end(i64 8, i8* %165) #1, !dbg !10248
  br label %do.cond.150, !dbg !10249

do.cond.150:                                      ; preds = %if.end.149
  br label %do.end.151, !dbg !10250

do.end.151:                                       ; preds = %do.cond.150
  store %struct._object* null, %struct._object** %retval, !dbg !10252
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.152, !dbg !10252

cleanup.152:                                      ; preds = %do.end.151, %if.end.139, %cleanup, %if.then.44, %do.end, %if.then.4, %if.then
  %166 = bitcast %struct._object** %memo to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %166) #1, !dbg !10253
  %167 = bitcast %struct._object** %id to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %167) #1, !dbg !10253
  %168 = bitcast %struct._object** %tail to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %168) #1, !dbg !10253
  %169 = bitcast %struct._object** %text to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %169) #1, !dbg !10253
  %170 = bitcast %struct._object** %attrib to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %170) #1, !dbg !10253
  %171 = bitcast %struct._object** %tag to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %171) #1, !dbg !10253
  %172 = bitcast %struct.ElementObject** %element to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %172) #1, !dbg !10253
  %173 = bitcast i32* %i to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 4, i8* %173) #1, !dbg !10253
  %174 = load %struct._object*, %struct._object** %retval, !dbg !10253
  ret %struct._object* %174, !dbg !10253
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_sizeof(%struct._object* %myself, %struct._object* %args) #0 {
entry:
  %myself.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %self = alloca %struct.ElementObject*, align 8
  %result = alloca i64, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !1632, metadata !2613), !dbg !10254
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1633, metadata !2613), !dbg !10255
  %0 = bitcast %struct.ElementObject** %self to i8*, !dbg !10256
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10256
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self, metadata !1634, metadata !2613), !dbg !10257
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !10258, !tbaa !2620
  %2 = bitcast %struct._object* %1 to %struct.ElementObject*, !dbg !10259
  store %struct.ElementObject* %2, %struct.ElementObject** %self, align 8, !dbg !10257, !tbaa !2620
  %3 = bitcast i64* %result to i8*, !dbg !10260
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10260
  call void @llvm.dbg.declare(metadata i64* %result, metadata !1635, metadata !2613), !dbg !10261
  store i64 56, i64* %result, align 8, !dbg !10261, !tbaa !2742
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !10262, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4, !dbg !10264
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !10264, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %5, null, !dbg !10262
  br i1 %tobool, label %if.then, label %if.end.6, !dbg !10265

if.then:                                          ; preds = %entry
  %6 = load i64, i64* %result, align 8, !dbg !10266, !tbaa !2742
  %add = add i64 %6, 56, !dbg !10266
  store i64 %add, i64* %result, align 8, !dbg !10266, !tbaa !2742
  %7 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !10268, !tbaa !2620
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %7, i32 0, i32 4, !dbg !10270
  %8 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8, !dbg !10270, !tbaa !3362
  %children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %8, i32 0, i32 3, !dbg !10271
  %9 = load %struct._object**, %struct._object*** %children, align 8, !dbg !10271, !tbaa !3451
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !10272, !tbaa !2620
  %extra2 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %10, i32 0, i32 4, !dbg !10273
  %11 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra2, align 8, !dbg !10273, !tbaa !3362
  %_children = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %11, i32 0, i32 4, !dbg !10274
  %arraydecay = getelementptr inbounds [4 x %struct._object*], [4 x %struct._object*]* %_children, i32 0, i32 0, !dbg !10272
  %cmp = icmp ne %struct._object** %9, %arraydecay, !dbg !10275
  br i1 %cmp, label %if.then.3, label %if.end, !dbg !10276

if.then.3:                                        ; preds = %if.then
  %12 = load %struct.ElementObject*, %struct.ElementObject** %self, align 8, !dbg !10277, !tbaa !2620
  %extra4 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %12, i32 0, i32 4, !dbg !10278
  %13 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra4, align 8, !dbg !10278, !tbaa !3362
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %13, i32 0, i32 2, !dbg !10279
  %14 = load i32, i32* %allocated, align 4, !dbg !10279, !tbaa !3506
  %conv = sext i32 %14 to i64, !dbg !10277
  %mul = mul i64 8, %conv, !dbg !10280
  %15 = load i64, i64* %result, align 8, !dbg !10281, !tbaa !2742
  %add5 = add i64 %15, %mul, !dbg !10281
  store i64 %add5, i64* %result, align 8, !dbg !10281, !tbaa !2742
  br label %if.end, !dbg !10282

if.end:                                           ; preds = %if.then.3, %if.then
  br label %if.end.6, !dbg !10283

if.end.6:                                         ; preds = %if.end, %entry
  %16 = load i64, i64* %result, align 8, !dbg !10284, !tbaa !2742
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %16), !dbg !10285
  %17 = bitcast i64* %result to i8*, !dbg !10286
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !10286
  %18 = bitcast %struct.ElementObject** %self to i8*, !dbg !10286
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !10286
  ret %struct._object* %call, !dbg !10287
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_getstate(%struct.ElementObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %i = alloca i32, align 4
  %noattrib = alloca i32, align 4
  %instancedict = alloca %struct._object*, align 8
  %children = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %child = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1638, metadata !2613), !dbg !10288
  %0 = bitcast i32* %i to i8*, !dbg !10289
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !10289
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1639, metadata !2613), !dbg !10290
  %1 = bitcast i32* %noattrib to i8*, !dbg !10289
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !10289
  call void @llvm.dbg.declare(metadata i32* %noattrib, metadata !1640, metadata !2613), !dbg !10291
  %2 = bitcast %struct._object** %instancedict to i8*, !dbg !10292
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10292
  call void @llvm.dbg.declare(metadata %struct._object** %instancedict, metadata !1641, metadata !2613), !dbg !10293
  store %struct._object* null, %struct._object** %instancedict, align 8, !dbg !10293, !tbaa !2620
  %3 = bitcast %struct._object** %children to i8*, !dbg !10292
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10292
  call void @llvm.dbg.declare(metadata %struct._object** %children, metadata !1642, metadata !2613), !dbg !10294
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10295, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %4, i32 0, i32 4, !dbg !10296
  %5 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !10296, !tbaa !3362
  %tobool = icmp ne %struct.ElementObjectExtra* %5, null, !dbg !10295
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10295

cond.true:                                        ; preds = %entry
  %6 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10297, !tbaa !2620
  %extra1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %6, i32 0, i32 4, !dbg !10299
  %7 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra1, align 8, !dbg !10299, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %7, i32 0, i32 1, !dbg !10300
  %8 = load i32, i32* %length, align 4, !dbg !10300, !tbaa !3446
  br label %cond.end, !dbg !10295

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !10295
  %conv = sext i32 %cond to i64, !dbg !10303
  %call = call %struct._object* @PyList_New(i64 %conv), !dbg !10306
  store %struct._object* %call, %struct._object** %children, align 8, !dbg !10307, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %children, align 8, !dbg !10308, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !10308
  br i1 %tobool2, label %if.end, label %if.then, !dbg !10310

if.then:                                          ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !10311
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10311

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !10312, !tbaa !2759
  br label %for.cond, !dbg !10313

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !10314, !tbaa !2759
  %conv3 = sext i32 %10 to i64, !dbg !10314
  %11 = load %struct._object*, %struct._object** %children, align 8, !dbg !10317, !tbaa !2620
  %12 = bitcast %struct._object* %11 to %struct.PyVarObject*, !dbg !10318
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1, !dbg !10319
  %13 = load i64, i64* %ob_size, align 8, !dbg !10319, !tbaa !5289
  %cmp = icmp slt i64 %conv3, %13, !dbg !10320
  br i1 %cmp, label %for.body, label %for.end, !dbg !10321

for.body:                                         ; preds = %for.cond
  %14 = bitcast %struct._object** %child to i8*, !dbg !10322
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !10322
  call void @llvm.dbg.declare(metadata %struct._object** %child, metadata !1643, metadata !2613), !dbg !10323
  %15 = load i32, i32* %i, align 4, !dbg !10324, !tbaa !2759
  %idxprom = sext i32 %15 to i64, !dbg !10325
  %16 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10325, !tbaa !2620
  %extra5 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %16, i32 0, i32 4, !dbg !10326
  %17 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra5, align 8, !dbg !10326, !tbaa !3362
  %children6 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %17, i32 0, i32 3, !dbg !10327
  %18 = load %struct._object**, %struct._object*** %children6, align 8, !dbg !10327, !tbaa !3451
  %arrayidx = getelementptr %struct._object*, %struct._object** %18, i64 %idxprom, !dbg !10325
  %19 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !10325, !tbaa !2620
  store %struct._object* %19, %struct._object** %child, align 8, !dbg !10323, !tbaa !2620
  %20 = load %struct._object*, %struct._object** %child, align 8, !dbg !10328, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !10329
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !10330, !tbaa !2631
  %inc = add i64 %21, 1, !dbg !10330
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !10330, !tbaa !2631
  %22 = load %struct._object*, %struct._object** %child, align 8, !dbg !10331, !tbaa !2620
  %23 = load i32, i32* %i, align 4, !dbg !10332, !tbaa !2759
  %idxprom7 = sext i32 %23 to i64, !dbg !10333
  %24 = load %struct._object*, %struct._object** %children, align 8, !dbg !10334, !tbaa !2620
  %25 = bitcast %struct._object* %24 to %struct.PyListObject*, !dbg !10335
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %25, i32 0, i32 1, !dbg !10336
  %26 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !10336, !tbaa !5350
  %arrayidx8 = getelementptr %struct._object*, %struct._object** %26, i64 %idxprom7, !dbg !10333
  store %struct._object* %22, %struct._object** %arrayidx8, align 8, !dbg !10337, !tbaa !2620
  %27 = bitcast %struct._object** %child to i8*, !dbg !10338
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !10338
  br label %for.inc, !dbg !10339

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !10340, !tbaa !2759
  %inc9 = add i32 %28, 1, !dbg !10340
  store i32 %inc9, i32* %i, align 4, !dbg !10340, !tbaa !2759
  br label %for.cond, !dbg !10341

for.end:                                          ; preds = %for.cond
  %29 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10342, !tbaa !2620
  %extra10 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %29, i32 0, i32 4, !dbg !10343
  %30 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra10, align 8, !dbg !10343, !tbaa !3362
  %cmp11 = icmp eq %struct.ElementObjectExtra* %30, null, !dbg !10344
  br i1 %cmp11, label %lor.end, label %lor.rhs, !dbg !10345

lor.rhs:                                          ; preds = %for.end
  %31 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10346, !tbaa !2620
  %extra13 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %31, i32 0, i32 4, !dbg !10347
  %32 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra13, align 8, !dbg !10347, !tbaa !3362
  %attrib = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %32, i32 0, i32 0, !dbg !10348
  %33 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !10348, !tbaa !3497
  %cmp14 = icmp eq %struct._object* %33, @_Py_NoneStruct, !dbg !10349
  br label %lor.end, !dbg !10345

lor.end:                                          ; preds = %lor.rhs, %for.end
  %34 = phi i1 [ true, %for.end ], [ %cmp14, %lor.rhs ]
  %lor.ext = zext i1 %34 to i32, !dbg !10350
  store i32 %lor.ext, i32* %noattrib, align 4, !dbg !10352, !tbaa !2759
  %35 = load i32, i32* %noattrib, align 4, !dbg !10353, !tbaa !2759
  %tobool16 = icmp ne i32 %35, 0, !dbg !10353
  br i1 %tobool16, label %if.then.17, label %if.else, !dbg !10355

if.then.17:                                       ; preds = %lor.end
  %36 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10356, !tbaa !2620
  %tag = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %36, i32 0, i32 1, !dbg !10357
  %37 = load %struct._object*, %struct._object** %tag, align 8, !dbg !10357, !tbaa !3371
  %38 = load %struct._object*, %struct._object** %children, align 8, !dbg !10358, !tbaa !2620
  %39 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10359, !tbaa !2620
  %text = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %39, i32 0, i32 2, !dbg !10360
  %40 = load %struct._object*, %struct._object** %text, align 8, !dbg !10360, !tbaa !3376
  %41 = ptrtoint %struct._object* %40 to i64, !dbg !10361
  %and = and i64 %41, -2, !dbg !10362
  %42 = inttoptr i64 %and to %struct._object*, !dbg !10363
  %43 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10364, !tbaa !2620
  %tail = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %43, i32 0, i32 3, !dbg !10365
  %44 = load %struct._object*, %struct._object** %tail, align 8, !dbg !10365, !tbaa !3381
  %45 = ptrtoint %struct._object* %44 to i64, !dbg !10366
  %and18 = and i64 %45, -2, !dbg !10367
  %46 = inttoptr i64 %and18 to %struct._object*, !dbg !10368
  %call19 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), %struct._object* %37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), %struct._object* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), %struct._object* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct._object* %46), !dbg !10369
  store %struct._object* %call19, %struct._object** %instancedict, align 8, !dbg !10370, !tbaa !2620
  br label %if.end.28, !dbg !10371

if.else:                                          ; preds = %lor.end
  %47 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10372, !tbaa !2620
  %tag20 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %47, i32 0, i32 1, !dbg !10373
  %48 = load %struct._object*, %struct._object** %tag20, align 8, !dbg !10373, !tbaa !3371
  %49 = load %struct._object*, %struct._object** %children, align 8, !dbg !10374, !tbaa !2620
  %50 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10375, !tbaa !2620
  %extra21 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %50, i32 0, i32 4, !dbg !10376
  %51 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra21, align 8, !dbg !10376, !tbaa !3362
  %attrib22 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %51, i32 0, i32 0, !dbg !10377
  %52 = load %struct._object*, %struct._object** %attrib22, align 8, !dbg !10377, !tbaa !3497
  %53 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10378, !tbaa !2620
  %text23 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %53, i32 0, i32 2, !dbg !10379
  %54 = load %struct._object*, %struct._object** %text23, align 8, !dbg !10379, !tbaa !3376
  %55 = ptrtoint %struct._object* %54 to i64, !dbg !10380
  %and24 = and i64 %55, -2, !dbg !10381
  %56 = inttoptr i64 %and24 to %struct._object*, !dbg !10382
  %57 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10383, !tbaa !2620
  %tail25 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %57, i32 0, i32 3, !dbg !10384
  %58 = load %struct._object*, %struct._object** %tail25, align 8, !dbg !10384, !tbaa !3381
  %59 = ptrtoint %struct._object* %58 to i64, !dbg !10385
  %and26 = and i64 %59, -2, !dbg !10386
  %60 = inttoptr i64 %and26 to %struct._object*, !dbg !10387
  %call27 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), %struct._object* %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), %struct._object* %49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), %struct._object* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), %struct._object* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct._object* %60), !dbg !10388
  store %struct._object* %call27, %struct._object** %instancedict, align 8, !dbg !10389, !tbaa !2620
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.17
  %61 = load %struct._object*, %struct._object** %instancedict, align 8, !dbg !10390, !tbaa !2620
  %tobool29 = icmp ne %struct._object* %61, null, !dbg !10390
  br i1 %tobool29, label %if.then.30, label %if.else.37, !dbg !10391

if.then.30:                                       ; preds = %if.end.28
  br label %do.body, !dbg !10392

do.body:                                          ; preds = %if.then.30
  %62 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10393
  call void @llvm.lifetime.start(i64 8, i8* %62) #1, !dbg !10393
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1647, metadata !2613), !dbg !10395
  %63 = load %struct._object*, %struct._object** %children, align 8, !dbg !10396, !tbaa !2620
  store %struct._object* %63, %struct._object** %_py_decref_tmp, align 8, !dbg !10395, !tbaa !2620
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10397, !tbaa !2620
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0, !dbg !10399
  %65 = load i64, i64* %ob_refcnt31, align 8, !dbg !10400, !tbaa !2631
  %dec = add i64 %65, -1, !dbg !10400
  store i64 %dec, i64* %ob_refcnt31, align 8, !dbg !10400, !tbaa !2631
  %cmp32 = icmp ne i64 %dec, 0, !dbg !10401
  br i1 %cmp32, label %if.then.34, label %if.else.35, !dbg !10402

if.then.34:                                       ; preds = %do.body
  br label %if.end.36, !dbg !10403

if.else.35:                                       ; preds = %do.body
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10405, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1, !dbg !10407
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10407, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4, !dbg !10408
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10408, !tbaa !2705
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10409, !tbaa !2620
  call void %68(%struct._object* %69), !dbg !10410
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.35, %if.then.34
  %70 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10411
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !10411
  br label %do.cond, !dbg !10413

do.cond:                                          ; preds = %if.end.36
  br label %do.end, !dbg !10414

do.end:                                           ; preds = %do.cond
  %71 = load %struct._object*, %struct._object** %instancedict, align 8, !dbg !10416, !tbaa !2620
  store %struct._object* %71, %struct._object** %retval, !dbg !10417
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10417

if.else.37:                                       ; preds = %if.end.28
  store i32 0, i32* %i, align 4, !dbg !10418, !tbaa !2759
  br label %for.cond.38, !dbg !10419

for.cond.38:                                      ; preds = %for.inc.60, %if.else.37
  %72 = load i32, i32* %i, align 4, !dbg !10420, !tbaa !2759
  %conv39 = sext i32 %72 to i64, !dbg !10420
  %73 = load %struct._object*, %struct._object** %children, align 8, !dbg !10423, !tbaa !2620
  %74 = bitcast %struct._object* %73 to %struct.PyVarObject*, !dbg !10424
  %ob_size40 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %74, i32 0, i32 1, !dbg !10425
  %75 = load i64, i64* %ob_size40, align 8, !dbg !10425, !tbaa !5289
  %cmp41 = icmp slt i64 %conv39, %75, !dbg !10426
  br i1 %cmp41, label %for.body.43, label %for.end.62, !dbg !10427

for.body.43:                                      ; preds = %for.cond.38
  br label %do.body.44, !dbg !10428

do.body.44:                                       ; preds = %for.body.43
  %76 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !10429
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !10429
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp45, metadata !1651, metadata !2613), !dbg !10431
  %77 = load i32, i32* %i, align 4, !dbg !10432, !tbaa !2759
  %idxprom46 = sext i32 %77 to i64, !dbg !10433
  %78 = load %struct._object*, %struct._object** %children, align 8, !dbg !10434, !tbaa !2620
  %79 = bitcast %struct._object* %78 to %struct.PyListObject*, !dbg !10435
  %ob_item47 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %79, i32 0, i32 1, !dbg !10436
  %80 = load %struct._object**, %struct._object*** %ob_item47, align 8, !dbg !10436, !tbaa !5350
  %arrayidx48 = getelementptr %struct._object*, %struct._object** %80, i64 %idxprom46, !dbg !10433
  %81 = load %struct._object*, %struct._object** %arrayidx48, align 8, !dbg !10433, !tbaa !2620
  store %struct._object* %81, %struct._object** %_py_decref_tmp45, align 8, !dbg !10431, !tbaa !2620
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !10437, !tbaa !2620
  %ob_refcnt49 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !10439
  %83 = load i64, i64* %ob_refcnt49, align 8, !dbg !10440, !tbaa !2631
  %dec50 = add i64 %83, -1, !dbg !10440
  store i64 %dec50, i64* %ob_refcnt49, align 8, !dbg !10440, !tbaa !2631
  %cmp51 = icmp ne i64 %dec50, 0, !dbg !10441
  br i1 %cmp51, label %if.then.53, label %if.else.54, !dbg !10442

if.then.53:                                       ; preds = %do.body.44
  br label %if.end.57, !dbg !10443

if.else.54:                                       ; preds = %do.body.44
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !10445, !tbaa !2620
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !10447
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !10447, !tbaa !2703
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !10448
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8, !dbg !10448, !tbaa !2705
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !10449, !tbaa !2620
  call void %86(%struct._object* %87), !dbg !10450
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  %88 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !10451
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !10451
  br label %do.cond.58, !dbg !10453

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !10454

do.end.59:                                        ; preds = %do.cond.58
  br label %for.inc.60, !dbg !10456

for.inc.60:                                       ; preds = %do.end.59
  %89 = load i32, i32* %i, align 4, !dbg !10458, !tbaa !2759
  %inc61 = add i32 %89, 1, !dbg !10458
  store i32 %inc61, i32* %i, align 4, !dbg !10458, !tbaa !2759
  br label %for.cond.38, !dbg !10459

for.end.62:                                       ; preds = %for.cond.38
  br label %do.body.63, !dbg !10460

do.body.63:                                       ; preds = %for.end.62
  %90 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !10461
  call void @llvm.lifetime.start(i64 8, i8* %90) #1, !dbg !10461
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp64, metadata !1656, metadata !2613), !dbg !10463
  %91 = load %struct._object*, %struct._object** %children, align 8, !dbg !10464, !tbaa !2620
  store %struct._object* %91, %struct._object** %_py_decref_tmp64, align 8, !dbg !10463, !tbaa !2620
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10465, !tbaa !2620
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0, !dbg !10467
  %93 = load i64, i64* %ob_refcnt65, align 8, !dbg !10468, !tbaa !2631
  %dec66 = add i64 %93, -1, !dbg !10468
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !10468, !tbaa !2631
  %cmp67 = icmp ne i64 %dec66, 0, !dbg !10469
  br i1 %cmp67, label %if.then.69, label %if.else.70, !dbg !10470

if.then.69:                                       ; preds = %do.body.63
  br label %if.end.73, !dbg !10471

if.else.70:                                       ; preds = %do.body.63
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10473, !tbaa !2620
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1, !dbg !10475
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !10475, !tbaa !2703
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4, !dbg !10476
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !10476, !tbaa !2705
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10477, !tbaa !2620
  call void %96(%struct._object* %97), !dbg !10478
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.70, %if.then.69
  %98 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !10479
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !10479
  br label %do.cond.74, !dbg !10481

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !10482

do.end.75:                                        ; preds = %do.cond.74
  store %struct._object* null, %struct._object** %retval, !dbg !10484
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10484

cleanup:                                          ; preds = %do.end.75, %do.end, %if.then
  %99 = bitcast %struct._object** %children to i8*, !dbg !10485
  call void @llvm.lifetime.end(i64 8, i8* %99) #1, !dbg !10485
  %100 = bitcast %struct._object** %instancedict to i8*, !dbg !10485
  call void @llvm.lifetime.end(i64 8, i8* %100) #1, !dbg !10485
  %101 = bitcast i32* %noattrib to i8*, !dbg !10485
  call void @llvm.lifetime.end(i64 4, i8* %101) #1, !dbg !10485
  %102 = bitcast i32* %i to i8*, !dbg !10485
  call void @llvm.lifetime.end(i64 4, i8* %102) #1, !dbg !10485
  %103 = load %struct._object*, %struct._object** %retval, !dbg !10485
  ret %struct._object* %103, !dbg !10485
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_setstate(%struct.ElementObject* %self, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %state.addr = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1660, metadata !2613), !dbg !10486
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1661, metadata !2613), !dbg !10487
  %0 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !10488, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !10490
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10490, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %1, @PyDict_Type, !dbg !10491
  br i1 %cmp, label %if.else, label %if.then, !dbg !10492

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10493, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !10495, !tbaa !2620
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.100, i32 0, i32 0), %struct._object* %3), !dbg !10496
  store %struct._object* null, %struct._object** %retval, !dbg !10497
  br label %return, !dbg !10497

if.else:                                          ; preds = %entry
  %4 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10498, !tbaa !2620
  %5 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !10499, !tbaa !2620
  %call1 = call %struct._object* @element_setstate_from_Python(%struct.ElementObject* %4, %struct._object* %5), !dbg !10500
  store %struct._object* %call1, %struct._object** %retval, !dbg !10501
  br label %return, !dbg !10501

return:                                           ; preds = %if.else, %if.then
  %6 = load %struct._object*, %struct._object** %retval, !dbg !10502
  ret %struct._object* %6, !dbg !10502
}

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @checkpath(%struct._object* %tag) #0 {
entry:
  %retval = alloca i32, align 4
  %tag.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %check = alloca i32, align 4
  %len = alloca i64, align 8
  %data = alloca i8*, align 8
  %kind = alloca i32, align 4
  %ch = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %p = alloca i8*, align 8
  store %struct._object* %tag, %struct._object** %tag.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %tag.addr, metadata !1408, metadata !2613), !dbg !10503
  %0 = bitcast i64* %i to i8*, !dbg !10504
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10504
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1409, metadata !2613), !dbg !10505
  %1 = bitcast i32* %check to i8*, !dbg !10506
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !10506
  call void @llvm.dbg.declare(metadata i32* %check, metadata !1410, metadata !2613), !dbg !10507
  store i32 1, i32* %check, align 4, !dbg !10507, !tbaa !2759
  %2 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10508, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !10509
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10509, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19, !dbg !10510
  %4 = load i64, i64* %tp_flags, align 8, !dbg !10510, !tbaa !3263
  %and = and i64 %4, 268435456, !dbg !10511
  %cmp = icmp ne i64 %and, 0, !dbg !10512
  br i1 %cmp, label %if.then, label %if.end.58, !dbg !10513

if.then:                                          ; preds = %entry
  %5 = bitcast i64* %len to i8*, !dbg !10514
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10514
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1411, metadata !2613), !dbg !10515
  %6 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10516, !tbaa !2620
  %7 = bitcast %struct._object* %6 to %struct.PyASCIIObject*, !dbg !10517
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %7, i32 0, i32 1, !dbg !10518
  %8 = load i64, i64* %length, align 8, !dbg !10518, !tbaa !10519
  store i64 %8, i64* %len, align 8, !dbg !10515, !tbaa !2742
  %9 = bitcast i8** %data to i8*, !dbg !10522
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !10522
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1415, metadata !2613), !dbg !10523
  %10 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10524, !tbaa !2620
  %11 = bitcast %struct._object* %10 to %struct.PyASCIIObject*, !dbg !10525
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %11, i32 0, i32 3, !dbg !10526
  %12 = bitcast %struct.anon* %state to i32*, !dbg !10527
  %bf.load = load i32, i32* %12, align 4, !dbg !10527
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !10527
  %bf.clear = and i32 %bf.lshr, 1, !dbg !10527
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !10528
  br i1 %tobool, label %cond.true, label %cond.false.8, !dbg !10528

cond.true:                                        ; preds = %if.then
  %13 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10529, !tbaa !2620
  %14 = bitcast %struct._object* %13 to %struct.PyASCIIObject*, !dbg !10531
  %state1 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %14, i32 0, i32 3, !dbg !10532
  %15 = bitcast %struct.anon* %state1 to i32*, !dbg !10533
  %bf.load2 = load i32, i32* %15, align 4, !dbg !10533
  %bf.lshr3 = lshr i32 %bf.load2, 6, !dbg !10533
  %bf.clear4 = and i32 %bf.lshr3, 1, !dbg !10533
  %tobool5 = icmp ne i32 %bf.clear4, 0, !dbg !10534
  br i1 %tobool5, label %cond.true.6, label %cond.false, !dbg !10534

cond.true.6:                                      ; preds = %cond.true
  %16 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10535, !tbaa !2620
  %17 = bitcast %struct._object* %16 to %struct.PyASCIIObject*, !dbg !10537
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %17, i64 1, !dbg !10538
  %18 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !10539
  br label %cond.end, !dbg !10534

cond.false:                                       ; preds = %cond.true
  %19 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10540, !tbaa !2620
  %20 = bitcast %struct._object* %19 to %struct.PyCompactUnicodeObject*, !dbg !10542
  %add.ptr7 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %20, i64 1, !dbg !10543
  %21 = bitcast %struct.PyCompactUnicodeObject* %add.ptr7 to i8*, !dbg !10544
  br label %cond.end, !dbg !10534

cond.end:                                         ; preds = %cond.false, %cond.true.6
  %cond = phi i8* [ %18, %cond.true.6 ], [ %21, %cond.false ], !dbg !10534
  br label %cond.end.10, !dbg !10545

cond.false.8:                                     ; preds = %if.then
  %22 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10548, !tbaa !2620
  %23 = bitcast %struct._object* %22 to %struct.PyUnicodeObject*, !dbg !10550
  %data9 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %23, i32 0, i32 1, !dbg !10551
  %any = bitcast %union.anon* %data9 to i8**, !dbg !10552
  %24 = load i8*, i8** %any, align 8, !dbg !10552, !tbaa !2620
  br label %cond.end.10, !dbg !10528

cond.end.10:                                      ; preds = %cond.false.8, %cond.end
  %cond11 = phi i8* [ %cond, %cond.end ], [ %24, %cond.false.8 ], !dbg !10528
  store i8* %cond11, i8** %data, align 8, !dbg !10553, !tbaa !2620
  %25 = bitcast i32* %kind to i8*, !dbg !10556
  call void @llvm.lifetime.start(i64 4, i8* %25) #1, !dbg !10556
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !1416, metadata !2613), !dbg !10557
  %26 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10558, !tbaa !2620
  %27 = bitcast %struct._object* %26 to %struct.PyASCIIObject*, !dbg !10559
  %state12 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %27, i32 0, i32 3, !dbg !10560
  %28 = bitcast %struct.anon* %state12 to i32*, !dbg !10561
  %bf.load13 = load i32, i32* %28, align 4, !dbg !10561
  %bf.lshr14 = lshr i32 %bf.load13, 2, !dbg !10561
  %bf.clear15 = and i32 %bf.lshr14, 7, !dbg !10561
  store i32 %bf.clear15, i32* %kind, align 4, !dbg !10557, !tbaa !2759
  store i64 0, i64* %i, align 8, !dbg !10562, !tbaa !2742
  br label %for.cond, !dbg !10563

for.cond:                                         ; preds = %for.inc, %cond.end.10
  %29 = load i64, i64* %i, align 8, !dbg !10564, !tbaa !2742
  %30 = load i64, i64* %len, align 8, !dbg !10567, !tbaa !2742
  %cmp16 = icmp slt i64 %29, %30, !dbg !10568
  br i1 %cmp16, label %for.body, label %for.end, !dbg !10569

for.body:                                         ; preds = %for.cond
  %31 = bitcast i32* %ch to i8*, !dbg !10570
  call void @llvm.lifetime.start(i64 4, i8* %31) #1, !dbg !10570
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !1417, metadata !2613), !dbg !10571
  %32 = load i32, i32* %kind, align 4, !dbg !10572, !tbaa !2759
  %cmp17 = icmp eq i32 %32, 1, !dbg !10573
  br i1 %cmp17, label %cond.true.18, label %cond.false.19, !dbg !10574

cond.true.18:                                     ; preds = %for.body
  %33 = load i64, i64* %i, align 8, !dbg !10575, !tbaa !2742
  %34 = load i8*, i8** %data, align 8, !dbg !10577, !tbaa !2620
  %arrayidx = getelementptr i8, i8* %34, i64 %33, !dbg !10578
  %35 = load i8, i8* %arrayidx, align 1, !dbg !10578, !tbaa !2756
  %conv = zext i8 %35 to i32, !dbg !10578
  br label %cond.end.29, !dbg !10574

cond.false.19:                                    ; preds = %for.body
  %36 = load i32, i32* %kind, align 4, !dbg !10579, !tbaa !2759
  %cmp20 = icmp eq i32 %36, 2, !dbg !10581
  br i1 %cmp20, label %cond.true.22, label %cond.false.25, !dbg !10582

cond.true.22:                                     ; preds = %cond.false.19
  %37 = load i64, i64* %i, align 8, !dbg !10583, !tbaa !2742
  %38 = load i8*, i8** %data, align 8, !dbg !10585, !tbaa !2620
  %39 = bitcast i8* %38 to i16*, !dbg !10586
  %arrayidx23 = getelementptr i16, i16* %39, i64 %37, !dbg !10587
  %40 = load i16, i16* %arrayidx23, align 2, !dbg !10587, !tbaa !10588
  %conv24 = zext i16 %40 to i32, !dbg !10587
  br label %cond.end.27, !dbg !10582

cond.false.25:                                    ; preds = %cond.false.19
  %41 = load i64, i64* %i, align 8, !dbg !10590, !tbaa !2742
  %42 = load i8*, i8** %data, align 8, !dbg !10592, !tbaa !2620
  %43 = bitcast i8* %42 to i32*, !dbg !10593
  %arrayidx26 = getelementptr i32, i32* %43, i64 %41, !dbg !10594
  %44 = load i32, i32* %arrayidx26, align 4, !dbg !10594, !tbaa !2759
  br label %cond.end.27, !dbg !10582

cond.end.27:                                      ; preds = %cond.false.25, %cond.true.22
  %cond28 = phi i32 [ %conv24, %cond.true.22 ], [ %44, %cond.false.25 ], !dbg !10582
  br label %cond.end.29, !dbg !10595

cond.end.29:                                      ; preds = %cond.end.27, %cond.true.18
  %cond30 = phi i32 [ %conv, %cond.true.18 ], [ %cond28, %cond.end.27 ], !dbg !10574
  store i32 %cond30, i32* %ch, align 4, !dbg !10598, !tbaa !2759
  %45 = load i32, i32* %ch, align 4, !dbg !10601, !tbaa !2759
  %cmp31 = icmp eq i32 %45, 123, !dbg !10603
  br i1 %cmp31, label %if.then.33, label %if.else, !dbg !10604

if.then.33:                                       ; preds = %cond.end.29
  store i32 0, i32* %check, align 4, !dbg !10605, !tbaa !2759
  br label %if.end.54, !dbg !10606

if.else:                                          ; preds = %cond.end.29
  %46 = load i32, i32* %ch, align 4, !dbg !10607, !tbaa !2759
  %cmp34 = icmp eq i32 %46, 125, !dbg !10609
  br i1 %cmp34, label %if.then.36, label %if.else.37, !dbg !10610

if.then.36:                                       ; preds = %if.else
  store i32 1, i32* %check, align 4, !dbg !10611, !tbaa !2759
  br label %if.end.53, !dbg !10612

if.else.37:                                       ; preds = %if.else
  %47 = load i32, i32* %check, align 4, !dbg !10613, !tbaa !2759
  %tobool38 = icmp ne i32 %47, 0, !dbg !10613
  br i1 %tobool38, label %land.lhs.true, label %if.end, !dbg !10615

land.lhs.true:                                    ; preds = %if.else.37
  %48 = load i32, i32* %ch, align 4, !dbg !10616, !tbaa !2759
  %cmp39 = icmp eq i32 %48, 47, !dbg !10618
  br i1 %cmp39, label %if.then.52, label %lor.lhs.false, !dbg !10619

lor.lhs.false:                                    ; preds = %land.lhs.true
  %49 = load i32, i32* %ch, align 4, !dbg !10620, !tbaa !2759
  %cmp41 = icmp eq i32 %49, 42, !dbg !10622
  br i1 %cmp41, label %if.then.52, label %lor.lhs.false.43, !dbg !10623

lor.lhs.false.43:                                 ; preds = %lor.lhs.false
  %50 = load i32, i32* %ch, align 4, !dbg !10624, !tbaa !2759
  %cmp44 = icmp eq i32 %50, 91, !dbg !10626
  br i1 %cmp44, label %if.then.52, label %lor.lhs.false.46, !dbg !10627

lor.lhs.false.46:                                 ; preds = %lor.lhs.false.43
  %51 = load i32, i32* %ch, align 4, !dbg !10628, !tbaa !2759
  %cmp47 = icmp eq i32 %51, 64, !dbg !10630
  br i1 %cmp47, label %if.then.52, label %lor.lhs.false.49, !dbg !10631

lor.lhs.false.49:                                 ; preds = %lor.lhs.false.46
  %52 = load i32, i32* %ch, align 4, !dbg !10632, !tbaa !2759
  %cmp50 = icmp eq i32 %52, 46, !dbg !10634
  br i1 %cmp50, label %if.then.52, label %if.end, !dbg !10635

if.then.52:                                       ; preds = %lor.lhs.false.49, %lor.lhs.false.46, %lor.lhs.false.43, %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %retval, !dbg !10636
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10636

if.end:                                           ; preds = %lor.lhs.false.49, %if.else.37
  br label %if.end.53

if.end.53:                                        ; preds = %if.end, %if.then.36
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53, %if.then.33
  store i32 0, i32* %cleanup.dest.slot, !dbg !10637
  br label %cleanup, !dbg !10637

cleanup:                                          ; preds = %if.end.54, %if.then.52
  %53 = bitcast i32* %ch to i8*, !dbg !10638
  call void @llvm.lifetime.end(i64 4, i8* %53) #1, !dbg !10638
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.55 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !10639

for.inc:                                          ; preds = %cleanup.cont
  %54 = load i64, i64* %i, align 8, !dbg !10640, !tbaa !2742
  %inc = add i64 %54, 1, !dbg !10640
  store i64 %inc, i64* %i, align 8, !dbg !10640, !tbaa !2742
  br label %for.cond, !dbg !10641

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, !dbg !10642
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !10642

cleanup.55:                                       ; preds = %for.end, %cleanup
  %55 = bitcast i32* %kind to i8*, !dbg !10643
  call void @llvm.lifetime.end(i64 4, i8* %55) #1, !dbg !10643
  %56 = bitcast i8** %data to i8*, !dbg !10643
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !10643
  %57 = bitcast i64* %len to i8*, !dbg !10643
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !10643
  br label %cleanup.116

if.end.58:                                        ; preds = %entry
  %58 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10644, !tbaa !2620
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !10645
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !10645, !tbaa !2703
  %tp_flags60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 19, !dbg !10646
  %60 = load i64, i64* %tp_flags60, align 8, !dbg !10646, !tbaa !3263
  %and61 = and i64 %60, 134217728, !dbg !10647
  %cmp62 = icmp ne i64 %and61, 0, !dbg !10648
  br i1 %cmp62, label %if.then.64, label %if.end.115, !dbg !10649

if.then.64:                                       ; preds = %if.end.58
  %61 = bitcast i8** %p to i8*, !dbg !10650
  call void @llvm.lifetime.start(i64 8, i8* %61) #1, !dbg !10650
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1421, metadata !2613), !dbg !10651
  %62 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10652, !tbaa !2620
  %63 = bitcast %struct._object* %62 to %struct.PyBytesObject*, !dbg !10653
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %63, i32 0, i32 2, !dbg !10654
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !10655
  store i8* %arraydecay, i8** %p, align 8, !dbg !10651, !tbaa !2620
  store i64 0, i64* %i, align 8, !dbg !10656, !tbaa !2742
  br label %for.cond.65, !dbg !10658

for.cond.65:                                      ; preds = %for.inc.111, %if.then.64
  %64 = load i64, i64* %i, align 8, !dbg !10659, !tbaa !2742
  %65 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10663, !tbaa !2620
  %66 = bitcast %struct._object* %65 to %struct.PyVarObject*, !dbg !10664
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %66, i32 0, i32 1, !dbg !10665
  %67 = load i64, i64* %ob_size, align 8, !dbg !10665, !tbaa !5289
  %cmp66 = icmp slt i64 %64, %67, !dbg !10666
  br i1 %cmp66, label %for.body.68, label %for.end.113, !dbg !10667

for.body.68:                                      ; preds = %for.cond.65
  %68 = load i64, i64* %i, align 8, !dbg !10668, !tbaa !2742
  %69 = load i8*, i8** %p, align 8, !dbg !10671, !tbaa !2620
  %arrayidx69 = getelementptr i8, i8* %69, i64 %68, !dbg !10671
  %70 = load i8, i8* %arrayidx69, align 1, !dbg !10671, !tbaa !2756
  %conv70 = sext i8 %70 to i32, !dbg !10671
  %cmp71 = icmp eq i32 %conv70, 123, !dbg !10672
  br i1 %cmp71, label %if.then.73, label %if.else.74, !dbg !10673

if.then.73:                                       ; preds = %for.body.68
  store i32 0, i32* %check, align 4, !dbg !10674, !tbaa !2759
  br label %if.end.110, !dbg !10675

if.else.74:                                       ; preds = %for.body.68
  %71 = load i64, i64* %i, align 8, !dbg !10676, !tbaa !2742
  %72 = load i8*, i8** %p, align 8, !dbg !10678, !tbaa !2620
  %arrayidx75 = getelementptr i8, i8* %72, i64 %71, !dbg !10678
  %73 = load i8, i8* %arrayidx75, align 1, !dbg !10678, !tbaa !2756
  %conv76 = sext i8 %73 to i32, !dbg !10678
  %cmp77 = icmp eq i32 %conv76, 125, !dbg !10679
  br i1 %cmp77, label %if.then.79, label %if.else.80, !dbg !10680

if.then.79:                                       ; preds = %if.else.74
  store i32 1, i32* %check, align 4, !dbg !10681, !tbaa !2759
  br label %if.end.109, !dbg !10682

if.else.80:                                       ; preds = %if.else.74
  %74 = load i32, i32* %check, align 4, !dbg !10683, !tbaa !2759
  %tobool81 = icmp ne i32 %74, 0, !dbg !10683
  br i1 %tobool81, label %land.lhs.true.82, label %if.end.108, !dbg !10685

land.lhs.true.82:                                 ; preds = %if.else.80
  %75 = load i64, i64* %i, align 8, !dbg !10686, !tbaa !2742
  %76 = load i8*, i8** %p, align 8, !dbg !10688, !tbaa !2620
  %arrayidx83 = getelementptr i8, i8* %76, i64 %75, !dbg !10688
  %77 = load i8, i8* %arrayidx83, align 1, !dbg !10688, !tbaa !2756
  %conv84 = sext i8 %77 to i32, !dbg !10688
  %cmp85 = icmp eq i32 %conv84, 47, !dbg !10689
  br i1 %cmp85, label %if.then.107, label %lor.lhs.false.87, !dbg !10690

lor.lhs.false.87:                                 ; preds = %land.lhs.true.82
  %78 = load i64, i64* %i, align 8, !dbg !10691, !tbaa !2742
  %79 = load i8*, i8** %p, align 8, !dbg !10693, !tbaa !2620
  %arrayidx88 = getelementptr i8, i8* %79, i64 %78, !dbg !10693
  %80 = load i8, i8* %arrayidx88, align 1, !dbg !10693, !tbaa !2756
  %conv89 = sext i8 %80 to i32, !dbg !10693
  %cmp90 = icmp eq i32 %conv89, 42, !dbg !10694
  br i1 %cmp90, label %if.then.107, label %lor.lhs.false.92, !dbg !10695

lor.lhs.false.92:                                 ; preds = %lor.lhs.false.87
  %81 = load i64, i64* %i, align 8, !dbg !10696, !tbaa !2742
  %82 = load i8*, i8** %p, align 8, !dbg !10698, !tbaa !2620
  %arrayidx93 = getelementptr i8, i8* %82, i64 %81, !dbg !10698
  %83 = load i8, i8* %arrayidx93, align 1, !dbg !10698, !tbaa !2756
  %conv94 = sext i8 %83 to i32, !dbg !10698
  %cmp95 = icmp eq i32 %conv94, 91, !dbg !10699
  br i1 %cmp95, label %if.then.107, label %lor.lhs.false.97, !dbg !10700

lor.lhs.false.97:                                 ; preds = %lor.lhs.false.92
  %84 = load i64, i64* %i, align 8, !dbg !10701, !tbaa !2742
  %85 = load i8*, i8** %p, align 8, !dbg !10703, !tbaa !2620
  %arrayidx98 = getelementptr i8, i8* %85, i64 %84, !dbg !10703
  %86 = load i8, i8* %arrayidx98, align 1, !dbg !10703, !tbaa !2756
  %conv99 = sext i8 %86 to i32, !dbg !10703
  %cmp100 = icmp eq i32 %conv99, 64, !dbg !10704
  br i1 %cmp100, label %if.then.107, label %lor.lhs.false.102, !dbg !10705

lor.lhs.false.102:                                ; preds = %lor.lhs.false.97
  %87 = load i64, i64* %i, align 8, !dbg !10706, !tbaa !2742
  %88 = load i8*, i8** %p, align 8, !dbg !10708, !tbaa !2620
  %arrayidx103 = getelementptr i8, i8* %88, i64 %87, !dbg !10708
  %89 = load i8, i8* %arrayidx103, align 1, !dbg !10708, !tbaa !2756
  %conv104 = sext i8 %89 to i32, !dbg !10708
  %cmp105 = icmp eq i32 %conv104, 46, !dbg !10709
  br i1 %cmp105, label %if.then.107, label %if.end.108, !dbg !10710

if.then.107:                                      ; preds = %lor.lhs.false.102, %lor.lhs.false.97, %lor.lhs.false.92, %lor.lhs.false.87, %land.lhs.true.82
  store i32 1, i32* %retval, !dbg !10711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.114, !dbg !10711

if.end.108:                                       ; preds = %lor.lhs.false.102, %if.else.80
  br label %if.end.109

if.end.109:                                       ; preds = %if.end.108, %if.then.79
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.then.73
  br label %for.inc.111, !dbg !10712

for.inc.111:                                      ; preds = %if.end.110
  %90 = load i64, i64* %i, align 8, !dbg !10713, !tbaa !2742
  %inc112 = add i64 %90, 1, !dbg !10713
  store i64 %inc112, i64* %i, align 8, !dbg !10713, !tbaa !2742
  br label %for.cond.65, !dbg !10714

for.end.113:                                      ; preds = %for.cond.65
  store i32 0, i32* %retval, !dbg !10715
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.114, !dbg !10715

cleanup.114:                                      ; preds = %for.end.113, %if.then.107
  %91 = bitcast i8** %p to i8*, !dbg !10716
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !10716
  br label %cleanup.116

if.end.115:                                       ; preds = %if.end.58
  store i32 1, i32* %retval, !dbg !10717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.116, !dbg !10717

cleanup.116:                                      ; preds = %if.end.115, %cleanup.114, %cleanup.55
  %92 = bitcast i32* %check to i8*, !dbg !10718
  call void @llvm.lifetime.end(i64 4, i8* %92) #1, !dbg !10718
  %93 = bitcast i64* %i to i8*, !dbg !10718
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !10718
  %94 = load i32, i32* %retval, !dbg !10718
  ret i32 %94, !dbg !10718
}

declare %struct._object* @PyUnicode_New(i64, i32) #3

declare i32 @PyObject_IsInstance(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @create_elementiter(%struct.ElementObject* %self, %struct._object* %tag, i32 %gettext) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %gettext.addr = alloca i32, align 4
  %it = alloca %struct.ElementIterObject*, align 8
  %star = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1515, metadata !2613), !dbg !10719
  store %struct._object* %tag, %struct._object** %tag.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %tag.addr, metadata !1516, metadata !2613), !dbg !10720
  store i32 %gettext, i32* %gettext.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %gettext.addr, metadata !1517, metadata !2613), !dbg !10721
  %0 = bitcast %struct.ElementIterObject** %it to i8*, !dbg !10722
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10722
  call void @llvm.dbg.declare(metadata %struct.ElementIterObject** %it, metadata !1518, metadata !2613), !dbg !10723
  %1 = bitcast %struct._object** %star to i8*, !dbg !10724
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10724
  call void @llvm.dbg.declare(metadata %struct._object** %star, metadata !1519, metadata !2613), !dbg !10725
  store %struct._object* null, %struct._object** %star, align 8, !dbg !10725, !tbaa !2620
  %call = call %struct._object* @_PyObject_GC_New(%struct._typeobject* @ElementIter_Type), !dbg !10726
  %2 = bitcast %struct._object* %call to %struct.ElementIterObject*, !dbg !10727
  store %struct.ElementIterObject* %2, %struct.ElementIterObject** %it, align 8, !dbg !10728, !tbaa !2620
  %3 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10729, !tbaa !2620
  %tobool = icmp ne %struct.ElementIterObject* %3, null, !dbg !10729
  br i1 %tobool, label %if.end, label %if.then, !dbg !10731

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !10732
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10732

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10733, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !10735
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10735, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19, !dbg !10736
  %6 = load i64, i64* %tp_flags, align 8, !dbg !10736, !tbaa !3263
  %and = and i64 %6, 268435456, !dbg !10737
  %cmp = icmp ne i64 %and, 0, !dbg !10738
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !10739

if.then.1:                                        ; preds = %if.end
  %call2 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87, i32 0, i32 0)), !dbg !10740
  store %struct._object* %call2, %struct._object** %star, align 8, !dbg !10741, !tbaa !2620
  br label %if.end.10, !dbg !10742

if.else:                                          ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10743, !tbaa !2620
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !10745
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !10745, !tbaa !2703
  %tp_flags4 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !10746
  %9 = load i64, i64* %tp_flags4, align 8, !dbg !10746, !tbaa !3263
  %and5 = and i64 %9, 134217728, !dbg !10747
  %cmp6 = icmp ne i64 %and5, 0, !dbg !10748
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !10749

if.then.7:                                        ; preds = %if.else
  %call8 = call %struct._object* @PyBytes_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87, i32 0, i32 0)), !dbg !10750
  store %struct._object* %call8, %struct._object** %star, align 8, !dbg !10751, !tbaa !2620
  br label %if.end.9, !dbg !10752

if.end.9:                                         ; preds = %if.then.7, %if.else
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.1
  %10 = load %struct._object*, %struct._object** %star, align 8, !dbg !10753, !tbaa !2620
  %tobool11 = icmp ne %struct._object* %10, null, !dbg !10753
  br i1 %tobool11, label %land.lhs.true, label %if.end.15, !dbg !10755

land.lhs.true:                                    ; preds = %if.end.10
  %11 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10756, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %star, align 8, !dbg !10758, !tbaa !2620
  %call12 = call i32 @PyObject_RichCompareBool(%struct._object* %11, %struct._object* %12, i32 2), !dbg !10759
  %cmp13 = icmp eq i32 %call12, 1, !dbg !10760
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !10761

if.then.14:                                       ; preds = %land.lhs.true
  store %struct._object* @_Py_NoneStruct, %struct._object** %tag.addr, align 8, !dbg !10762, !tbaa !2620
  br label %if.end.15, !dbg !10763

if.end.15:                                        ; preds = %if.then.14, %land.lhs.true, %if.end.10
  br label %do.body, !dbg !10764

do.body:                                          ; preds = %if.end.15
  %13 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10765
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !10765
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1520, metadata !2613), !dbg !10767
  %14 = load %struct._object*, %struct._object** %star, align 8, !dbg !10768, !tbaa !2620
  store %struct._object* %14, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10767, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10769, !tbaa !2620
  %cmp16 = icmp ne %struct._object* %15, null, !dbg !10770
  br i1 %cmp16, label %if.then.17, label %if.end.24, !dbg !10771

if.then.17:                                       ; preds = %do.body
  br label %do.body.18, !dbg !10772

do.body.18:                                       ; preds = %if.then.17
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10774
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !10774
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1522, metadata !2613), !dbg !10776
  %17 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10777, !tbaa !2620
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !10776, !tbaa !2620
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10778, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !10780
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !10781, !tbaa !2631
  %dec = add i64 %19, -1, !dbg !10781
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10781, !tbaa !2631
  %cmp19 = icmp ne i64 %dec, 0, !dbg !10782
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !10783

if.then.20:                                       ; preds = %do.body.18
  br label %if.end.23, !dbg !10784

if.else.21:                                       ; preds = %do.body.18
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10786, !tbaa !2620
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !10788
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !10788, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !10789
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10789, !tbaa !2705
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10790, !tbaa !2620
  call void %22(%struct._object* %23), !dbg !10791
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.21, %if.then.20
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10792
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !10792
  br label %do.cond, !dbg !10794

do.cond:                                          ; preds = %if.end.23
  br label %do.end, !dbg !10795

do.end:                                           ; preds = %do.cond
  br label %if.end.24, !dbg !10797

if.end.24:                                        ; preds = %do.end, %do.body
  %25 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10799
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !10799
  br label %do.cond.25, !dbg !10802

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !10803

do.end.26:                                        ; preds = %do.cond.25
  %26 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10805, !tbaa !2620
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !10806
  %27 = load i64, i64* %ob_refcnt27, align 8, !dbg !10807, !tbaa !2631
  %inc = add i64 %27, 1, !dbg !10807
  store i64 %inc, i64* %ob_refcnt27, align 8, !dbg !10807, !tbaa !2631
  %28 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !10808, !tbaa !2620
  %29 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10809, !tbaa !2620
  %sought_tag = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %29, i32 0, i32 3, !dbg !10810
  store %struct._object* %28, %struct._object** %sought_tag, align 8, !dbg !10811, !tbaa !3691
  %30 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10812, !tbaa !2620
  %root_done = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %30, i32 0, i32 4, !dbg !10813
  store i32 0, i32* %root_done, align 4, !dbg !10814, !tbaa !3898
  %31 = load i32, i32* %gettext.addr, align 4, !dbg !10815, !tbaa !2759
  %32 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10816, !tbaa !2620
  %gettext28 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %32, i32 0, i32 5, !dbg !10817
  store i32 %31, i32* %gettext28, align 4, !dbg !10818, !tbaa !3936
  %33 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10819, !tbaa !2620
  %34 = bitcast %struct.ElementObject* %33 to %struct._object*, !dbg !10820
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !10821
  %35 = load i64, i64* %ob_refcnt29, align 8, !dbg !10822, !tbaa !2631
  %inc30 = add i64 %35, 1, !dbg !10822
  store i64 %inc30, i64* %ob_refcnt29, align 8, !dbg !10822, !tbaa !2631
  %36 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10823, !tbaa !2620
  %37 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10824, !tbaa !2620
  %root_element = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %37, i32 0, i32 2, !dbg !10825
  store %struct.ElementObject* %36, %struct.ElementObject** %root_element, align 8, !dbg !10826, !tbaa !3734
  %38 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10827, !tbaa !2620
  %39 = bitcast %struct.ElementIterObject* %38 to i8*, !dbg !10827
  call void @PyObject_GC_Track(i8* %39), !dbg !10828
  %call31 = call i8* @PyObject_Malloc(i64 24), !dbg !10829
  %40 = bitcast i8* %call31 to %struct.ParentLocator_t*, !dbg !10829
  %41 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10830, !tbaa !2620
  %parent_stack = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %41, i32 0, i32 1, !dbg !10831
  store %struct.ParentLocator_t* %40, %struct.ParentLocator_t** %parent_stack, align 8, !dbg !10832, !tbaa !3624
  %42 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10833, !tbaa !2620
  %parent_stack32 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %42, i32 0, i32 1, !dbg !10834
  %43 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack32, align 8, !dbg !10834, !tbaa !3624
  %cmp33 = icmp eq %struct.ParentLocator_t* %43, null, !dbg !10835
  br i1 %cmp33, label %if.then.34, label %if.end.48, !dbg !10836

if.then.34:                                       ; preds = %do.end.26
  br label %do.body.35, !dbg !10837

do.body.35:                                       ; preds = %if.then.34
  %44 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !10838
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !10838
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !1525, metadata !2613), !dbg !10840
  %45 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10841, !tbaa !2620
  %46 = bitcast %struct.ElementIterObject* %45 to %struct._object*, !dbg !10842
  store %struct._object* %46, %struct._object** %_py_decref_tmp36, align 8, !dbg !10840, !tbaa !2620
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !10843, !tbaa !2620
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !10845
  %48 = load i64, i64* %ob_refcnt37, align 8, !dbg !10846, !tbaa !2631
  %dec38 = add i64 %48, -1, !dbg !10846
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !10846, !tbaa !2631
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !10847
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !10848

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !10849

if.else.41:                                       ; preds = %do.body.35
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !10851, !tbaa !2620
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !10853
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !10853, !tbaa !2703
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4, !dbg !10854
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !10854, !tbaa !2705
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !10855, !tbaa !2620
  call void %51(%struct._object* %52), !dbg !10856
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %53 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !10857
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !10857
  br label %do.cond.45, !dbg !10859

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !10860

do.end.46:                                        ; preds = %do.cond.45
  %call47 = call %struct._object* @PyErr_NoMemory(), !dbg !10862
  store %struct._object* null, %struct._object** %retval, !dbg !10863
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10863

if.end.48:                                        ; preds = %do.end.26
  %54 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10864, !tbaa !2620
  %parent_stack49 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %54, i32 0, i32 1, !dbg !10865
  %55 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack49, align 8, !dbg !10865, !tbaa !3624
  %parent = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %55, i32 0, i32 0, !dbg !10866
  store %struct.ElementObject* null, %struct.ElementObject** %parent, align 8, !dbg !10867, !tbaa !3639
  %56 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10868, !tbaa !2620
  %parent_stack50 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %56, i32 0, i32 1, !dbg !10869
  %57 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack50, align 8, !dbg !10869, !tbaa !3624
  %child_index = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %57, i32 0, i32 1, !dbg !10870
  store i64 0, i64* %child_index, align 8, !dbg !10871, !tbaa !3980
  %58 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10872, !tbaa !2620
  %parent_stack51 = getelementptr inbounds %struct.ElementIterObject, %struct.ElementIterObject* %58, i32 0, i32 1, !dbg !10873
  %59 = load %struct.ParentLocator_t*, %struct.ParentLocator_t** %parent_stack51, align 8, !dbg !10873, !tbaa !3624
  %next = getelementptr inbounds %struct.ParentLocator_t, %struct.ParentLocator_t* %59, i32 0, i32 2, !dbg !10874
  store %struct.ParentLocator_t* null, %struct.ParentLocator_t** %next, align 8, !dbg !10875, !tbaa !3680
  %60 = load %struct.ElementIterObject*, %struct.ElementIterObject** %it, align 8, !dbg !10876, !tbaa !2620
  %61 = bitcast %struct.ElementIterObject* %60 to %struct._object*, !dbg !10877
  store %struct._object* %61, %struct._object** %retval, !dbg !10878
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10878

cleanup:                                          ; preds = %if.end.48, %do.end.46, %if.then
  %62 = bitcast %struct._object** %star to i8*, !dbg !10879
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !10879
  %63 = bitcast %struct.ElementIterObject** %it to i8*, !dbg !10879
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !10879
  %64 = load %struct._object*, %struct._object** %retval, !dbg !10879
  ret %struct._object* %64, !dbg !10879
}

declare %struct._object* @PyBytes_FromString(i8*) #3

declare %struct._object* @PyDict_Items(%struct._object*) #3

declare %struct._object* @PyDict_Keys(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @deepcopy(%struct._object* %object, %struct._object* %memo) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %object.addr = alloca %struct._object*, align 8
  %memo.addr = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %object, %struct._object** %object.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %object.addr, metadata !1623, metadata !2613), !dbg !10880
  store %struct._object* %memo, %struct._object** %memo.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %memo.addr, metadata !1624, metadata !2613), !dbg !10881
  %0 = bitcast %struct._object** %args to i8*, !dbg !10882
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10882
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1625, metadata !2613), !dbg !10883
  %1 = bitcast %struct._object** %result to i8*, !dbg !10884
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10884
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1626, metadata !2613), !dbg !10885
  %2 = bitcast %struct.elementtreestate** %st to i8*, !dbg !10886
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10886
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !1627, metadata !2613), !dbg !10887
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !10888
  %call1 = call i8* @PyModule_GetState(%struct._object* %call), !dbg !10889
  %3 = bitcast i8* %call1 to %struct.elementtreestate*, !dbg !10890
  store %struct.elementtreestate* %3, %struct.elementtreestate** %st, align 8, !dbg !10887, !tbaa !2620
  %4 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !10891, !tbaa !2620
  %deepcopy_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %4, i32 0, i32 1, !dbg !10893
  %5 = load %struct._object*, %struct._object** %deepcopy_obj, align 8, !dbg !10893, !tbaa !2676
  %tobool = icmp ne %struct._object* %5, null, !dbg !10891
  br i1 %tobool, label %if.end, label %if.then, !dbg !10894

if.then:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !10895, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i32 0, i32 0)), !dbg !10897
  store %struct._object* null, %struct._object** %retval, !dbg !10898
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10898

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %object.addr, align 8, !dbg !10899, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %memo.addr, align 8, !dbg !10900, !tbaa !2620
  %call2 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %7, %struct._object* %8), !dbg !10901
  store %struct._object* %call2, %struct._object** %args, align 8, !dbg !10902, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %args, align 8, !dbg !10903, !tbaa !2620
  %tobool3 = icmp ne %struct._object* %9, null, !dbg !10903
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !10905

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !10906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10906

if.end.5:                                         ; preds = %if.end
  %10 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !10907, !tbaa !2620
  %deepcopy_obj6 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %10, i32 0, i32 1, !dbg !10908
  %11 = load %struct._object*, %struct._object** %deepcopy_obj6, align 8, !dbg !10908, !tbaa !2676
  %12 = load %struct._object*, %struct._object** %args, align 8, !dbg !10909, !tbaa !2620
  %call7 = call %struct._object* @PyObject_CallObject(%struct._object* %11, %struct._object* %12), !dbg !10910
  store %struct._object* %call7, %struct._object** %result, align 8, !dbg !10911, !tbaa !2620
  br label %do.body, !dbg !10912

do.body:                                          ; preds = %if.end.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10913
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !10913
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1628, metadata !2613), !dbg !10915
  %14 = load %struct._object*, %struct._object** %args, align 8, !dbg !10916, !tbaa !2620
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !10915, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10917, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !10919
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !10920, !tbaa !2631
  %dec = add i64 %16, -1, !dbg !10920
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10920, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !10921
  br i1 %cmp, label %if.then.8, label %if.else, !dbg !10922

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !10923

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10925, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !10927
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10927, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !10928
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10928, !tbaa !2705
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10929, !tbaa !2620
  call void %19(%struct._object* %20), !dbg !10930
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10931
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !10931
  br label %do.cond, !dbg !10933

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !10934

do.end:                                           ; preds = %do.cond
  %22 = load %struct._object*, %struct._object** %result, align 8, !dbg !10936, !tbaa !2620
  store %struct._object* %22, %struct._object** %retval, !dbg !10937
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10937

cleanup:                                          ; preds = %do.end, %if.then.4, %if.then
  %23 = bitcast %struct.elementtreestate** %st to i8*, !dbg !10938
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !10938
  %24 = bitcast %struct._object** %result to i8*, !dbg !10938
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !10938
  %25 = bitcast %struct._object** %args to i8*, !dbg !10938
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !10938
  %26 = load %struct._object*, %struct._object** %retval, !dbg !10938
  ret %struct._object* %26, !dbg !10938
}

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

declare %struct._object* @Py_BuildValue(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_setstate_from_Python(%struct.ElementObject* %self, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %state.addr = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %text = alloca %struct._object*, align 8
  %tail = alloca %struct._object*, align 8
  %children = alloca %struct._object*, align 8
  %retval1 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1664, metadata !2613), !dbg !10939
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1665, metadata !2613), !dbg !10940
  %0 = bitcast %struct._object** %args to i8*, !dbg !10941
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !10941
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1666, metadata !2613), !dbg !10942
  %1 = bitcast %struct._object** %tag to i8*, !dbg !10943
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !10943
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !1667, metadata !2613), !dbg !10944
  %2 = bitcast %struct._object** %attrib to i8*, !dbg !10943
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !10943
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !1668, metadata !2613), !dbg !10945
  %3 = bitcast %struct._object** %text to i8*, !dbg !10943
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !10943
  call void @llvm.dbg.declare(metadata %struct._object** %text, metadata !1669, metadata !2613), !dbg !10946
  %4 = bitcast %struct._object** %tail to i8*, !dbg !10943
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !10943
  call void @llvm.dbg.declare(metadata %struct._object** %tail, metadata !1670, metadata !2613), !dbg !10947
  %5 = bitcast %struct._object** %children to i8*, !dbg !10943
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !10943
  call void @llvm.dbg.declare(metadata %struct._object** %children, metadata !1671, metadata !2613), !dbg !10948
  %6 = bitcast %struct._object** %retval1 to i8*, !dbg !10949
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !10949
  call void @llvm.dbg.declare(metadata %struct._object** %retval1, metadata !1672, metadata !2613), !dbg !10950
  store %struct._object* null, %struct._object** %children, align 8, !dbg !10951, !tbaa !2620
  store %struct._object* null, %struct._object** %tail, align 8, !dbg !10952, !tbaa !2620
  store %struct._object* null, %struct._object** %text, align 8, !dbg !10953, !tbaa !2620
  store %struct._object* null, %struct._object** %attrib, align 8, !dbg !10954, !tbaa !2620
  store %struct._object* null, %struct._object** %tag, align 8, !dbg !10955, !tbaa !2620
  %call = call %struct._object* @PyTuple_New(i64 0), !dbg !10956
  store %struct._object* %call, %struct._object** %args, align 8, !dbg !10957, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %args, align 8, !dbg !10958, !tbaa !2620
  %tobool = icmp ne %struct._object* %7, null, !dbg !10958
  br i1 %tobool, label %if.end, label %if.then, !dbg !10960

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !10961
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10961

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %args, align 8, !dbg !10962, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !10964, !tbaa !2620
  %call2 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %8, %struct._object* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i32 0, i32 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @element_setstate_from_Python.kwlist, i32 0, i32 0), %struct._object** %tag, %struct._object** %attrib, %struct._object** %text, %struct._object** %tail, %struct._object** %children), !dbg !10965
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10965
  br i1 %tobool3, label %if.then.4, label %if.else, !dbg !10966

if.then.4:                                        ; preds = %if.end
  %10 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !10967, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %tag, align 8, !dbg !10968, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !10969, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %text, align 8, !dbg !10970, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %tail, align 8, !dbg !10971, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %children, align 8, !dbg !10972, !tbaa !2620
  %call5 = call %struct._object* @element_setstate_from_attributes(%struct.ElementObject* %10, %struct._object* %11, %struct._object* %12, %struct._object* %13, %struct._object* %14, %struct._object* %15), !dbg !10973
  store %struct._object* %call5, %struct._object** %retval1, align 8, !dbg !10974, !tbaa !2620
  br label %if.end.6, !dbg !10975

if.else:                                          ; preds = %if.end
  store %struct._object* null, %struct._object** %retval1, align 8, !dbg !10976, !tbaa !2620
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.4
  br label %do.body, !dbg !10977

do.body:                                          ; preds = %if.end.6
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10978
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !10978
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1673, metadata !2613), !dbg !10980
  %17 = load %struct._object*, %struct._object** %args, align 8, !dbg !10981, !tbaa !2620
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !10980, !tbaa !2620
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10982, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !10984
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !10985, !tbaa !2631
  %dec = add i64 %19, -1, !dbg !10985
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10985, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !10986
  br i1 %cmp, label %if.then.7, label %if.else.8, !dbg !10987

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !10988

if.else.8:                                        ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10990, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !10992
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10992, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !10993
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10993, !tbaa !2705
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10994, !tbaa !2620
  call void %22(%struct._object* %23), !dbg !10995
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10996
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !10996
  br label %do.cond, !dbg !10998

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !10999

do.end:                                           ; preds = %do.cond
  %25 = load %struct._object*, %struct._object** %retval1, align 8, !dbg !11001, !tbaa !2620
  store %struct._object* %25, %struct._object** %retval, !dbg !11002
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11002

cleanup:                                          ; preds = %do.end, %if.then
  %26 = bitcast %struct._object** %retval1 to i8*, !dbg !11003
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !11003
  %27 = bitcast %struct._object** %children to i8*, !dbg !11003
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !11003
  %28 = bitcast %struct._object** %tail to i8*, !dbg !11003
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !11003
  %29 = bitcast %struct._object** %text to i8*, !dbg !11003
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !11003
  %30 = bitcast %struct._object** %attrib to i8*, !dbg !11003
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !11003
  %31 = bitcast %struct._object** %tag to i8*, !dbg !11003
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !11003
  %32 = bitcast %struct._object** %args to i8*, !dbg !11003
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !11003
  %33 = load %struct._object*, %struct._object** %retval, !dbg !11003
  ret %struct._object* %33, !dbg !11003
}

declare %struct._object* @PyTuple_New(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @element_setstate_from_attributes(%struct.ElementObject* %self, %struct._object* %tag, %struct._object* %attrib, %struct._object* %text, %struct._object* %tail, %struct._object* %children) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.ElementObject*, align 8
  %tag.addr = alloca %struct._object*, align 8
  %attrib.addr = alloca %struct._object*, align 8
  %text.addr = alloca %struct._object*, align 8
  %tail.addr = alloca %struct._object*, align 8
  %children.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %nchildren = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp78 = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  store %struct.ElementObject* %self, %struct.ElementObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.ElementObject** %self.addr, metadata !1679, metadata !2613), !dbg !11004
  store %struct._object* %tag, %struct._object** %tag.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %tag.addr, metadata !1680, metadata !2613), !dbg !11005
  store %struct._object* %attrib, %struct._object** %attrib.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %attrib.addr, metadata !1681, metadata !2613), !dbg !11006
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1682, metadata !2613), !dbg !11007
  store %struct._object* %tail, %struct._object** %tail.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %tail.addr, metadata !1683, metadata !2613), !dbg !11008
  store %struct._object* %children, %struct._object** %children.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %children.addr, metadata !1684, metadata !2613), !dbg !11009
  %0 = bitcast i64* %i to i8*, !dbg !11010
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !11010
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1685, metadata !2613), !dbg !11011
  %1 = bitcast i64* %nchildren to i8*, !dbg !11010
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !11010
  call void @llvm.dbg.declare(metadata i64* %nchildren, metadata !1686, metadata !2613), !dbg !11012
  %2 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !11013, !tbaa !2620
  %tobool = icmp ne %struct._object* %2, null, !dbg !11013
  br i1 %tobool, label %if.end, label %if.then, !dbg !11015

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11016, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i32 0, i32 0)), !dbg !11018
  store %struct._object* null, %struct._object** %retval, !dbg !11019
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11019

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !11020

do.body:                                          ; preds = %if.end
  %4 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11021
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !11021
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1687, metadata !2613), !dbg !11023
  %5 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11024, !tbaa !2620
  %tag1 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %5, i32 0, i32 1, !dbg !11025
  %6 = load %struct._object*, %struct._object** %tag1, align 8, !dbg !11025, !tbaa !3371
  store %struct._object* %6, %struct._object** %_py_tmp, align 8, !dbg !11023, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11026, !tbaa !2620
  %cmp = icmp ne %struct._object* %7, null, !dbg !11027
  br i1 %cmp, label %if.then.2, label %if.end.8, !dbg !11028

if.then.2:                                        ; preds = %do.body
  %8 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11029, !tbaa !2620
  %tag3 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %8, i32 0, i32 1, !dbg !11031
  store %struct._object* null, %struct._object** %tag3, align 8, !dbg !11032, !tbaa !3371
  br label %do.body.4, !dbg !11033

do.body.4:                                        ; preds = %if.then.2
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11034
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !11034
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1689, metadata !2613), !dbg !11036
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11037, !tbaa !2620
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !11036, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11038, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !11040
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !11041, !tbaa !2631
  %dec = add i64 %12, -1, !dbg !11041
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11041, !tbaa !2631
  %cmp5 = icmp ne i64 %dec, 0, !dbg !11042
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !11043

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !11044

if.else:                                          ; preds = %do.body.4
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11046, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !11048
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11048, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !11049
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11049, !tbaa !2705
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11050, !tbaa !2620
  call void %15(%struct._object* %16), !dbg !11051
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11052
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !11052
  br label %do.cond, !dbg !11054

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !11055

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !11057

if.end.8:                                         ; preds = %do.end, %do.body
  %18 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11059
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !11059
  br label %do.cond.9, !dbg !11062

do.cond.9:                                        ; preds = %if.end.8
  br label %do.end.10, !dbg !11063

do.end.10:                                        ; preds = %do.cond.9
  %19 = load %struct._object*, %struct._object** %tag.addr, align 8, !dbg !11065, !tbaa !2620
  %20 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11066, !tbaa !2620
  %tag11 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %20, i32 0, i32 1, !dbg !11067
  store %struct._object* %19, %struct._object** %tag11, align 8, !dbg !11068, !tbaa !3371
  %21 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11069, !tbaa !2620
  %tag12 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %21, i32 0, i32 1, !dbg !11070
  %22 = load %struct._object*, %struct._object** %tag12, align 8, !dbg !11070, !tbaa !3371
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !11071
  %23 = load i64, i64* %ob_refcnt13, align 8, !dbg !11072, !tbaa !2631
  %inc = add i64 %23, 1, !dbg !11072
  store i64 %inc, i64* %ob_refcnt13, align 8, !dbg !11072, !tbaa !2631
  %24 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11073, !tbaa !2620
  %text14 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %24, i32 0, i32 2, !dbg !11074
  call void @_clear_joined_ptr(%struct._object** %text14), !dbg !11075
  %25 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !11076, !tbaa !2620
  %tobool15 = icmp ne %struct._object* %25, null, !dbg !11076
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !11076

cond.true:                                        ; preds = %do.end.10
  %26 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !11077, !tbaa !2620
  %27 = ptrtoint %struct._object* %26 to i64, !dbg !11079
  %and = and i64 %27, -2, !dbg !11080
  %28 = inttoptr i64 %and to %struct._object*, !dbg !11081
  %29 = ptrtoint %struct._object* %28 to i64, !dbg !11082
  %30 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !11083, !tbaa !2620
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !11084
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !11084, !tbaa !2703
  %cmp17 = icmp eq %struct._typeobject* %31, @PyList_Type, !dbg !11085
  %conv = zext i1 %cmp17 to i32, !dbg !11085
  %conv18 = sext i32 %conv to i64, !dbg !11086
  %or = or i64 %29, %conv18, !dbg !11087
  %32 = inttoptr i64 %or to i8*, !dbg !11088
  br label %cond.end, !dbg !11076

cond.false:                                       ; preds = %do.end.10
  br label %cond.end, !dbg !11089

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %32, %cond.true ], [ bitcast (%struct._object* @_Py_NoneStruct to i8*), %cond.false ], !dbg !11076
  %33 = bitcast i8* %cond to %struct._object*, !dbg !11091
  %34 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11093, !tbaa !2620
  %text19 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %34, i32 0, i32 2, !dbg !11094
  store %struct._object* %33, %struct._object** %text19, align 8, !dbg !11095, !tbaa !3376
  %35 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11096, !tbaa !2620
  %text20 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %35, i32 0, i32 2, !dbg !11097
  %36 = load %struct._object*, %struct._object** %text20, align 8, !dbg !11097, !tbaa !3376
  %37 = ptrtoint %struct._object* %36 to i64, !dbg !11098
  %and21 = and i64 %37, -2, !dbg !11099
  %38 = inttoptr i64 %and21 to %struct._object*, !dbg !11100
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !11101
  %39 = load i64, i64* %ob_refcnt22, align 8, !dbg !11102, !tbaa !2631
  %inc23 = add i64 %39, 1, !dbg !11102
  store i64 %inc23, i64* %ob_refcnt22, align 8, !dbg !11102, !tbaa !2631
  %40 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11103, !tbaa !2620
  %tail24 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %40, i32 0, i32 3, !dbg !11104
  call void @_clear_joined_ptr(%struct._object** %tail24), !dbg !11105
  %41 = load %struct._object*, %struct._object** %tail.addr, align 8, !dbg !11106, !tbaa !2620
  %tobool25 = icmp ne %struct._object* %41, null, !dbg !11106
  br i1 %tobool25, label %cond.true.26, label %cond.false.33, !dbg !11106

cond.true.26:                                     ; preds = %cond.end
  %42 = load %struct._object*, %struct._object** %tail.addr, align 8, !dbg !11107, !tbaa !2620
  %43 = ptrtoint %struct._object* %42 to i64, !dbg !11108
  %and27 = and i64 %43, -2, !dbg !11109
  %44 = inttoptr i64 %and27 to %struct._object*, !dbg !11110
  %45 = ptrtoint %struct._object* %44 to i64, !dbg !11111
  %46 = load %struct._object*, %struct._object** %tail.addr, align 8, !dbg !11112, !tbaa !2620
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !11113
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !11113, !tbaa !2703
  %cmp29 = icmp eq %struct._typeobject* %47, @PyList_Type, !dbg !11114
  %conv30 = zext i1 %cmp29 to i32, !dbg !11114
  %conv31 = sext i32 %conv30 to i64, !dbg !11115
  %or32 = or i64 %45, %conv31, !dbg !11116
  %48 = inttoptr i64 %or32 to i8*, !dbg !11117
  br label %cond.end.34, !dbg !11106

cond.false.33:                                    ; preds = %cond.end
  br label %cond.end.34, !dbg !11118

cond.end.34:                                      ; preds = %cond.false.33, %cond.true.26
  %cond35 = phi i8* [ %48, %cond.true.26 ], [ bitcast (%struct._object* @_Py_NoneStruct to i8*), %cond.false.33 ], !dbg !11106
  %49 = bitcast i8* %cond35 to %struct._object*, !dbg !11119
  %50 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11120, !tbaa !2620
  %tail36 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %50, i32 0, i32 3, !dbg !11121
  store %struct._object* %49, %struct._object** %tail36, align 8, !dbg !11122, !tbaa !3381
  %51 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11123, !tbaa !2620
  %tail37 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %51, i32 0, i32 3, !dbg !11124
  %52 = load %struct._object*, %struct._object** %tail37, align 8, !dbg !11124, !tbaa !3381
  %53 = ptrtoint %struct._object* %52 to i64, !dbg !11125
  %and38 = and i64 %53, -2, !dbg !11126
  %54 = inttoptr i64 %and38 to %struct._object*, !dbg !11127
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !11128
  %55 = load i64, i64* %ob_refcnt39, align 8, !dbg !11129, !tbaa !2631
  %inc40 = add i64 %55, 1, !dbg !11129
  store i64 %inc40, i64* %ob_refcnt39, align 8, !dbg !11129, !tbaa !2631
  %56 = load %struct._object*, %struct._object** %children.addr, align 8, !dbg !11130, !tbaa !2620
  %tobool41 = icmp ne %struct._object* %56, null, !dbg !11130
  br i1 %tobool41, label %if.end.45, label %land.lhs.true, !dbg !11132

land.lhs.true:                                    ; preds = %cond.end.34
  %57 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !11133, !tbaa !2620
  %tobool42 = icmp ne %struct._object* %57, null, !dbg !11133
  br i1 %tobool42, label %if.end.45, label %if.then.43, !dbg !11135

if.then.43:                                       ; preds = %land.lhs.true
  %58 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11136, !tbaa !2631
  %inc44 = add i64 %58, 1, !dbg !11136
  store i64 %inc44, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11136, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !11137
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11137

if.end.45:                                        ; preds = %land.lhs.true, %cond.end.34
  %59 = load %struct._object*, %struct._object** %children.addr, align 8, !dbg !11138, !tbaa !2620
  %tobool46 = icmp ne %struct._object* %59, null, !dbg !11138
  br i1 %tobool46, label %if.then.47, label %if.else.54, !dbg !11140

if.then.47:                                       ; preds = %if.end.45
  %60 = load %struct._object*, %struct._object** %children.addr, align 8, !dbg !11141, !tbaa !2620
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1, !dbg !11144
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !11144, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 19, !dbg !11145
  %62 = load i64, i64* %tp_flags, align 8, !dbg !11145, !tbaa !3263
  %and49 = and i64 %62, 33554432, !dbg !11146
  %cmp50 = icmp ne i64 %and49, 0, !dbg !11147
  br i1 %cmp50, label %if.end.53, label %if.then.52, !dbg !11148

if.then.52:                                       ; preds = %if.then.47
  %63 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11149, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %63, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.103, i32 0, i32 0)), !dbg !11151
  store %struct._object* null, %struct._object** %retval, !dbg !11152
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11152

if.end.53:                                        ; preds = %if.then.47
  %64 = load %struct._object*, %struct._object** %children.addr, align 8, !dbg !11153, !tbaa !2620
  %call = call i64 @PyList_Size(%struct._object* %64), !dbg !11154
  store i64 %call, i64* %nchildren, align 8, !dbg !11155, !tbaa !2742
  br label %if.end.55, !dbg !11156

if.else.54:                                       ; preds = %if.end.45
  store i64 0, i64* %nchildren, align 8, !dbg !11157, !tbaa !2742
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.54, %if.end.53
  %65 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11159, !tbaa !2620
  %66 = load i64, i64* %nchildren, align 8, !dbg !11161, !tbaa !2742
  %conv56 = trunc i64 %66 to i32, !dbg !11161
  %call57 = call i32 @element_resize(%struct.ElementObject* %65, i32 %conv56), !dbg !11162
  %tobool58 = icmp ne i32 %call57, 0, !dbg !11162
  br i1 %tobool58, label %if.then.59, label %if.end.60, !dbg !11163

if.then.59:                                       ; preds = %if.end.55
  store %struct._object* null, %struct._object** %retval, !dbg !11164
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11164

if.end.60:                                        ; preds = %if.end.55
  store i64 0, i64* %i, align 8, !dbg !11166, !tbaa !2742
  br label %for.cond, !dbg !11168

for.cond:                                         ; preds = %for.inc, %if.end.60
  %67 = load i64, i64* %i, align 8, !dbg !11169, !tbaa !2742
  %68 = load i64, i64* %nchildren, align 8, !dbg !11173, !tbaa !2742
  %cmp61 = icmp slt i64 %67, %68, !dbg !11174
  br i1 %cmp61, label %for.body, label %for.end, !dbg !11175

for.body:                                         ; preds = %for.cond
  %69 = load i64, i64* %i, align 8, !dbg !11176, !tbaa !2742
  %70 = load %struct._object*, %struct._object** %children.addr, align 8, !dbg !11178, !tbaa !2620
  %71 = bitcast %struct._object* %70 to %struct.PyListObject*, !dbg !11179
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %71, i32 0, i32 1, !dbg !11180
  %72 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !11180, !tbaa !5350
  %arrayidx = getelementptr %struct._object*, %struct._object** %72, i64 %69, !dbg !11181
  %73 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11181, !tbaa !2620
  %74 = load i64, i64* %i, align 8, !dbg !11182, !tbaa !2742
  %75 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11183, !tbaa !2620
  %extra = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %75, i32 0, i32 4, !dbg !11184
  %76 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra, align 8, !dbg !11184, !tbaa !3362
  %children63 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %76, i32 0, i32 3, !dbg !11185
  %77 = load %struct._object**, %struct._object*** %children63, align 8, !dbg !11185, !tbaa !3451
  %arrayidx64 = getelementptr %struct._object*, %struct._object** %77, i64 %74, !dbg !11183
  store %struct._object* %73, %struct._object** %arrayidx64, align 8, !dbg !11186, !tbaa !2620
  %78 = load i64, i64* %i, align 8, !dbg !11187, !tbaa !2742
  %79 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11188, !tbaa !2620
  %extra65 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %79, i32 0, i32 4, !dbg !11189
  %80 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra65, align 8, !dbg !11189, !tbaa !3362
  %children66 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %80, i32 0, i32 3, !dbg !11190
  %81 = load %struct._object**, %struct._object*** %children66, align 8, !dbg !11190, !tbaa !3451
  %arrayidx67 = getelementptr %struct._object*, %struct._object** %81, i64 %78, !dbg !11188
  %82 = load %struct._object*, %struct._object** %arrayidx67, align 8, !dbg !11188, !tbaa !2620
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !11191
  %83 = load i64, i64* %ob_refcnt68, align 8, !dbg !11192, !tbaa !2631
  %inc69 = add i64 %83, 1, !dbg !11192
  store i64 %inc69, i64* %ob_refcnt68, align 8, !dbg !11192, !tbaa !2631
  br label %for.inc, !dbg !11193

for.inc:                                          ; preds = %for.body
  %84 = load i64, i64* %i, align 8, !dbg !11194, !tbaa !2742
  %inc70 = add i64 %84, 1, !dbg !11194
  store i64 %inc70, i64* %i, align 8, !dbg !11194, !tbaa !2742
  br label %for.cond, !dbg !11195

for.end:                                          ; preds = %for.cond
  %85 = load i64, i64* %nchildren, align 8, !dbg !11196, !tbaa !2742
  %conv71 = trunc i64 %85 to i32, !dbg !11196
  %86 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11197, !tbaa !2620
  %extra72 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %86, i32 0, i32 4, !dbg !11198
  %87 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra72, align 8, !dbg !11198, !tbaa !3362
  %length = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %87, i32 0, i32 1, !dbg !11199
  store i32 %conv71, i32* %length, align 4, !dbg !11200, !tbaa !3446
  %88 = load i64, i64* %nchildren, align 8, !dbg !11201, !tbaa !2742
  %conv73 = trunc i64 %88 to i32, !dbg !11201
  %89 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11202, !tbaa !2620
  %extra74 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %89, i32 0, i32 4, !dbg !11203
  %90 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra74, align 8, !dbg !11203, !tbaa !3362
  %allocated = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %90, i32 0, i32 2, !dbg !11204
  store i32 %conv73, i32* %allocated, align 4, !dbg !11205, !tbaa !3506
  %91 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !11206, !tbaa !2620
  %tobool75 = icmp ne %struct._object* %91, null, !dbg !11206
  br i1 %tobool75, label %if.then.76, label %if.end.106, !dbg !11207

if.then.76:                                       ; preds = %for.end
  br label %do.body.77, !dbg !11208

do.body.77:                                       ; preds = %if.then.76
  %92 = bitcast %struct._object** %_py_tmp78 to i8*, !dbg !11209
  call void @llvm.lifetime.start(i64 8, i8* %92) #1, !dbg !11209
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp78, metadata !1693, metadata !2613), !dbg !11211
  %93 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11212, !tbaa !2620
  %extra79 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %93, i32 0, i32 4, !dbg !11213
  %94 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra79, align 8, !dbg !11213, !tbaa !3362
  %attrib80 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %94, i32 0, i32 0, !dbg !11214
  %95 = load %struct._object*, %struct._object** %attrib80, align 8, !dbg !11214, !tbaa !3497
  store %struct._object* %95, %struct._object** %_py_tmp78, align 8, !dbg !11211, !tbaa !2620
  %96 = load %struct._object*, %struct._object** %_py_tmp78, align 8, !dbg !11215, !tbaa !2620
  %cmp81 = icmp ne %struct._object* %96, null, !dbg !11216
  br i1 %cmp81, label %if.then.83, label %if.end.99, !dbg !11217

if.then.83:                                       ; preds = %do.body.77
  %97 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11218, !tbaa !2620
  %extra84 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %97, i32 0, i32 4, !dbg !11220
  %98 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra84, align 8, !dbg !11220, !tbaa !3362
  %attrib85 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %98, i32 0, i32 0, !dbg !11221
  store %struct._object* null, %struct._object** %attrib85, align 8, !dbg !11222, !tbaa !3497
  br label %do.body.86, !dbg !11223

do.body.86:                                       ; preds = %if.then.83
  %99 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !11224
  call void @llvm.lifetime.start(i64 8, i8* %99) #1, !dbg !11224
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp87, metadata !1697, metadata !2613), !dbg !11226
  %100 = load %struct._object*, %struct._object** %_py_tmp78, align 8, !dbg !11227, !tbaa !2620
  store %struct._object* %100, %struct._object** %_py_decref_tmp87, align 8, !dbg !11226, !tbaa !2620
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !11228, !tbaa !2620
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 0, !dbg !11230
  %102 = load i64, i64* %ob_refcnt88, align 8, !dbg !11231, !tbaa !2631
  %dec89 = add i64 %102, -1, !dbg !11231
  store i64 %dec89, i64* %ob_refcnt88, align 8, !dbg !11231, !tbaa !2631
  %cmp90 = icmp ne i64 %dec89, 0, !dbg !11232
  br i1 %cmp90, label %if.then.92, label %if.else.93, !dbg !11233

if.then.92:                                       ; preds = %do.body.86
  br label %if.end.96, !dbg !11234

if.else.93:                                       ; preds = %do.body.86
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !11236, !tbaa !2620
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !11238
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !11238, !tbaa !2703
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %104, i32 0, i32 4, !dbg !11239
  %105 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !11239, !tbaa !2705
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !11240, !tbaa !2620
  call void %105(%struct._object* %106), !dbg !11241
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %107 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !11242
  call void @llvm.lifetime.end(i64 8, i8* %107) #1, !dbg !11242
  br label %do.cond.97, !dbg !11244

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !11245

do.end.98:                                        ; preds = %do.cond.97
  br label %if.end.99, !dbg !11247

if.end.99:                                        ; preds = %do.end.98, %do.body.77
  %108 = bitcast %struct._object** %_py_tmp78 to i8*, !dbg !11249
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !11249
  br label %do.cond.100, !dbg !11252

do.cond.100:                                      ; preds = %if.end.99
  br label %do.end.101, !dbg !11253

do.end.101:                                       ; preds = %do.cond.100
  %109 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !11255, !tbaa !2620
  %110 = load %struct.ElementObject*, %struct.ElementObject** %self.addr, align 8, !dbg !11256, !tbaa !2620
  %extra102 = getelementptr inbounds %struct.ElementObject, %struct.ElementObject* %110, i32 0, i32 4, !dbg !11257
  %111 = load %struct.ElementObjectExtra*, %struct.ElementObjectExtra** %extra102, align 8, !dbg !11257, !tbaa !3362
  %attrib103 = getelementptr inbounds %struct.ElementObjectExtra, %struct.ElementObjectExtra* %111, i32 0, i32 0, !dbg !11258
  store %struct._object* %109, %struct._object** %attrib103, align 8, !dbg !11259, !tbaa !3497
  %112 = load %struct._object*, %struct._object** %attrib.addr, align 8, !dbg !11260, !tbaa !2620
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !11261
  %113 = load i64, i64* %ob_refcnt104, align 8, !dbg !11262, !tbaa !2631
  %inc105 = add i64 %113, 1, !dbg !11262
  store i64 %inc105, i64* %ob_refcnt104, align 8, !dbg !11262, !tbaa !2631
  br label %if.end.106, !dbg !11263

if.end.106:                                       ; preds = %do.end.101, %for.end
  %114 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11264, !tbaa !2631
  %inc107 = add i64 %114, 1, !dbg !11264
  store i64 %inc107, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11264, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !11265
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11265

cleanup:                                          ; preds = %if.end.106, %if.then.59, %if.then.52, %if.then.43, %if.then
  %115 = bitcast i64* %nchildren to i8*, !dbg !11266
  call void @llvm.lifetime.end(i64 8, i8* %115) #1, !dbg !11266
  %116 = bitcast i64* %i to i8*, !dbg !11266
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !11266
  %117 = load %struct._object*, %struct._object** %retval, !dbg !11266
  ret %struct._object* %117, !dbg !11266
}

declare i64 @PyList_Size(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @xmlparser_dealloc(%struct.XMLParserObject* %self) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1745, metadata !2613), !dbg !11267
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11268, !tbaa !2620
  %1 = bitcast %struct.XMLParserObject* %0 to i8*, !dbg !11268
  call void @PyObject_GC_UnTrack(i8* %1), !dbg !11269
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11270, !tbaa !2620
  %call = call i32 @xmlparser_gc_clear(%struct.XMLParserObject* %2), !dbg !11271
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11272, !tbaa !2620
  %4 = bitcast %struct.XMLParserObject* %3 to %struct._object*, !dbg !11273
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !11274
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11274, !tbaa !2703
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 38, !dbg !11275
  %6 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !11275, !tbaa !4339
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11276, !tbaa !2620
  %8 = bitcast %struct.XMLParserObject* %7 to %struct._object*, !dbg !11277
  %9 = bitcast %struct._object* %8 to i8*, !dbg !11277
  call void %6(i8* %9), !dbg !11278
  ret void, !dbg !11279
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_getattro(%struct.XMLParserObject* %self, %struct._object* %nameobj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %nameobj.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1750, metadata !2613), !dbg !11280
  store %struct._object* %nameobj, %struct._object** %nameobj.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %nameobj.addr, metadata !1751, metadata !2613), !dbg !11281
  %0 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !11282, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !11283
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11283, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19, !dbg !11284
  %2 = load i64, i64* %tp_flags, align 8, !dbg !11284, !tbaa !3263
  %and = and i64 %2, 268435456, !dbg !11285
  %cmp = icmp ne i64 %and, 0, !dbg !11286
  br i1 %cmp, label %if.then, label %if.end.13, !dbg !11287

if.then:                                          ; preds = %entry
  %3 = bitcast %struct._object** %res to i8*, !dbg !11288
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !11288
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1752, metadata !2613), !dbg !11289
  %4 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !11290, !tbaa !2620
  %call = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i32 0, i32 0)), !dbg !11292
  %cmp1 = icmp eq i32 %call, 0, !dbg !11293
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !11294

if.then.2:                                        ; preds = %if.then
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11295, !tbaa !2620
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 3, !dbg !11296
  %6 = load %struct._object*, %struct._object** %entity, align 8, !dbg !11296, !tbaa !11297
  store %struct._object* %6, %struct._object** %res, align 8, !dbg !11299, !tbaa !2620
  br label %if.end.12, !dbg !11300

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !11301, !tbaa !2620
  %call3 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i32 0, i32 0)), !dbg !11303
  %cmp4 = icmp eq i32 %call3, 0, !dbg !11304
  br i1 %cmp4, label %if.then.5, label %if.else.6, !dbg !11305

if.then.5:                                        ; preds = %if.else
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11306, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 2, !dbg !11307
  %9 = load %struct._object*, %struct._object** %target, align 8, !dbg !11307, !tbaa !11308
  store %struct._object* %9, %struct._object** %res, align 8, !dbg !11309, !tbaa !2620
  br label %if.end, !dbg !11310

if.else.6:                                        ; preds = %if.else
  %10 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !11311, !tbaa !2620
  %call7 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.108, i32 0, i32 0)), !dbg !11313
  %cmp8 = icmp eq i32 %call7, 0, !dbg !11314
  br i1 %cmp8, label %if.then.9, label %if.else.11, !dbg !11315

if.then.9:                                        ; preds = %if.else.6
  %call10 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i32 0, i32 0), i32 2, i32 1, i32 0), !dbg !11316
  store %struct._object* %call10, %struct._object** %retval, !dbg !11318
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11318

if.else.11:                                       ; preds = %if.else.6
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11319

if.end:                                           ; preds = %if.then.5
  br label %if.end.12

if.end.12:                                        ; preds = %if.end, %if.then.2
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !11320, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !11321
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !11322, !tbaa !2631
  %inc = add i64 %12, 1, !dbg !11322
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11322, !tbaa !2631
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !11323, !tbaa !2620
  store %struct._object* %13, %struct._object** %retval, !dbg !11324
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11324

cleanup:                                          ; preds = %if.else.11, %if.end.12, %if.then.9
  %14 = bitcast %struct._object** %res to i8*, !dbg !11325
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !11325
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 1, label %return
    i32 2, label %generic
  ]

if.end.13:                                        ; preds = %entry
  br label %generic, !dbg !11326

generic:                                          ; preds = %if.end.13, %cleanup
  %15 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11328, !tbaa !2620
  %16 = bitcast %struct.XMLParserObject* %15 to %struct._object*, !dbg !11329
  %17 = load %struct._object*, %struct._object** %nameobj.addr, align 8, !dbg !11330, !tbaa !2620
  %call14 = call %struct._object* @PyObject_GenericGetAttr(%struct._object* %16, %struct._object* %17), !dbg !11331
  store %struct._object* %call14, %struct._object** %retval, !dbg !11332
  br label %return, !dbg !11332

return:                                           ; preds = %generic, %cleanup
  %18 = load %struct._object*, %struct._object** %retval, !dbg !11333
  ret %struct._object* %18, !dbg !11333

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlparser_gc_traverse(%struct.XMLParserObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  %vret64 = alloca i32, align 4
  %vret78 = alloca i32, align 4
  %vret92 = alloca i32, align 4
  %vret106 = alloca i32, align 4
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1759, metadata !2613), !dbg !11334
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1760, metadata !2613), !dbg !11335
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1761, metadata !2613), !dbg !11336
  br label %do.body, !dbg !11337

do.body:                                          ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11338, !tbaa !2620
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %0, i32 0, i32 11, !dbg !11340
  %1 = load %struct._object*, %struct._object** %handle_close, align 8, !dbg !11340, !tbaa !11341
  %tobool = icmp ne %struct._object* %1, null, !dbg !11342
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !11343

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !11344
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !11344
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1762, metadata !2613), !dbg !11346
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11347, !tbaa !2620
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11348, !tbaa !2620
  %handle_close1 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %4, i32 0, i32 11, !dbg !11349
  %5 = load %struct._object*, %struct._object** %handle_close1, align 8, !dbg !11349, !tbaa !11341
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !11350, !tbaa !2620
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !11347
  store i32 %call, i32* %vret, align 4, !dbg !11346, !tbaa !2759
  %7 = load i32, i32* %vret, align 4, !dbg !11351, !tbaa !2759
  %tobool2 = icmp ne i32 %7, 0, !dbg !11351
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !11353

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !11354, !tbaa !2759
  store i32 %8, i32* %retval, !dbg !11356
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11356

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !11357
  br label %cleanup, !dbg !11357

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !11359
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !11359
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.4, !dbg !11362

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !11363

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !11366

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11367, !tbaa !2620
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %10, i32 0, i32 9, !dbg !11369
  %11 = load %struct._object*, %struct._object** %handle_pi, align 8, !dbg !11369, !tbaa !11370
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !11371
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !11372

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !11373
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !11373
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1766, metadata !2613), !dbg !11375
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11376, !tbaa !2620
  %14 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11377, !tbaa !2620
  %handle_pi9 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %14, i32 0, i32 9, !dbg !11378
  %15 = load %struct._object*, %struct._object** %handle_pi9, align 8, !dbg !11378, !tbaa !11370
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !11379, !tbaa !2620
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !11376
  store i32 %call10, i32* %vret8, align 4, !dbg !11375, !tbaa !2759
  %17 = load i32, i32* %vret8, align 4, !dbg !11380, !tbaa !2759
  %tobool11 = icmp ne i32 %17, 0, !dbg !11380
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !11382

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !11383, !tbaa !2759
  store i32 %18, i32* %retval, !dbg !11385
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !11385

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !11386
  br label %cleanup.14, !dbg !11386

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !11388
  call void @llvm.lifetime.end(i64 4, i8* %19) #1, !dbg !11388
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.15, label %unreachable [
    i32 0, label %cleanup.cont.16
    i32 1, label %return
  ]

cleanup.cont.16:                                  ; preds = %cleanup.14
  br label %if.end.17, !dbg !11391

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !11392

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !11395

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11396, !tbaa !2620
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %20, i32 0, i32 8, !dbg !11398
  %21 = load %struct._object*, %struct._object** %handle_comment, align 8, !dbg !11398, !tbaa !11399
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !11400
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !11401

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !11402
  call void @llvm.lifetime.start(i64 4, i8* %22) #1, !dbg !11402
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !1770, metadata !2613), !dbg !11404
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11405, !tbaa !2620
  %24 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11406, !tbaa !2620
  %handle_comment23 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %24, i32 0, i32 8, !dbg !11407
  %25 = load %struct._object*, %struct._object** %handle_comment23, align 8, !dbg !11407, !tbaa !11399
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !11408, !tbaa !2620
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !11405
  store i32 %call24, i32* %vret22, align 4, !dbg !11404, !tbaa !2759
  %27 = load i32, i32* %vret22, align 4, !dbg !11409, !tbaa !2759
  %tobool25 = icmp ne i32 %27, 0, !dbg !11409
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !11411

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !11412, !tbaa !2759
  store i32 %28, i32* %retval, !dbg !11414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !11414

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !11415
  br label %cleanup.28, !dbg !11415

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !11417
  call void @llvm.lifetime.end(i64 4, i8* %29) #1, !dbg !11417
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.29, label %unreachable [
    i32 0, label %cleanup.cont.30
    i32 1, label %return
  ]

cleanup.cont.30:                                  ; preds = %cleanup.28
  br label %if.end.31, !dbg !11420

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !11421

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !11424

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11425, !tbaa !2620
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %30, i32 0, i32 7, !dbg !11427
  %31 = load %struct._object*, %struct._object** %handle_end, align 8, !dbg !11427, !tbaa !11428
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !11429
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !11430

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !11431
  call void @llvm.lifetime.start(i64 4, i8* %32) #1, !dbg !11431
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !1774, metadata !2613), !dbg !11433
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11434, !tbaa !2620
  %34 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11435, !tbaa !2620
  %handle_end37 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %34, i32 0, i32 7, !dbg !11436
  %35 = load %struct._object*, %struct._object** %handle_end37, align 8, !dbg !11436, !tbaa !11428
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !11437, !tbaa !2620
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !11434
  store i32 %call38, i32* %vret36, align 4, !dbg !11433, !tbaa !2759
  %37 = load i32, i32* %vret36, align 4, !dbg !11438, !tbaa !2759
  %tobool39 = icmp ne i32 %37, 0, !dbg !11438
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !11440

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !11441, !tbaa !2759
  store i32 %38, i32* %retval, !dbg !11443
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !11443

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !11444
  br label %cleanup.42, !dbg !11444

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !11446
  call void @llvm.lifetime.end(i64 4, i8* %39) #1, !dbg !11446
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.43, label %unreachable [
    i32 0, label %cleanup.cont.44
    i32 1, label %return
  ]

cleanup.cont.44:                                  ; preds = %cleanup.42
  br label %if.end.45, !dbg !11449

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !11450

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !11453

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11454, !tbaa !2620
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %40, i32 0, i32 6, !dbg !11456
  %41 = load %struct._object*, %struct._object** %handle_data, align 8, !dbg !11456, !tbaa !11457
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !11458
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !11459

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !11460
  call void @llvm.lifetime.start(i64 4, i8* %42) #1, !dbg !11460
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !1778, metadata !2613), !dbg !11462
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11463, !tbaa !2620
  %44 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11464, !tbaa !2620
  %handle_data51 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %44, i32 0, i32 6, !dbg !11465
  %45 = load %struct._object*, %struct._object** %handle_data51, align 8, !dbg !11465, !tbaa !11457
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !11466, !tbaa !2620
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !11463
  store i32 %call52, i32* %vret50, align 4, !dbg !11462, !tbaa !2759
  %47 = load i32, i32* %vret50, align 4, !dbg !11467, !tbaa !2759
  %tobool53 = icmp ne i32 %47, 0, !dbg !11467
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !11469

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !11470, !tbaa !2759
  store i32 %48, i32* %retval, !dbg !11472
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !11472

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !11473
  br label %cleanup.56, !dbg !11473

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !11475
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !11475
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.57, label %unreachable [
    i32 0, label %cleanup.cont.58
    i32 1, label %return
  ]

cleanup.cont.58:                                  ; preds = %cleanup.56
  br label %if.end.59, !dbg !11478

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !11479

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61, !dbg !11482

do.body.61:                                       ; preds = %do.end.60
  %50 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11483, !tbaa !2620
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %50, i32 0, i32 5, !dbg !11485
  %51 = load %struct._object*, %struct._object** %handle_start, align 8, !dbg !11485, !tbaa !11486
  %tobool62 = icmp ne %struct._object* %51, null, !dbg !11487
  br i1 %tobool62, label %if.then.63, label %if.end.73, !dbg !11488

if.then.63:                                       ; preds = %do.body.61
  %52 = bitcast i32* %vret64 to i8*, !dbg !11489
  call void @llvm.lifetime.start(i64 4, i8* %52) #1, !dbg !11489
  call void @llvm.dbg.declare(metadata i32* %vret64, metadata !1782, metadata !2613), !dbg !11491
  %53 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11492, !tbaa !2620
  %54 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11493, !tbaa !2620
  %handle_start65 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %54, i32 0, i32 5, !dbg !11494
  %55 = load %struct._object*, %struct._object** %handle_start65, align 8, !dbg !11494, !tbaa !11486
  %56 = load i8*, i8** %arg.addr, align 8, !dbg !11495, !tbaa !2620
  %call66 = call i32 %53(%struct._object* %55, i8* %56), !dbg !11492
  store i32 %call66, i32* %vret64, align 4, !dbg !11491, !tbaa !2759
  %57 = load i32, i32* %vret64, align 4, !dbg !11496, !tbaa !2759
  %tobool67 = icmp ne i32 %57, 0, !dbg !11496
  br i1 %tobool67, label %if.then.68, label %if.end.69, !dbg !11498

if.then.68:                                       ; preds = %if.then.63
  %58 = load i32, i32* %vret64, align 4, !dbg !11499, !tbaa !2759
  store i32 %58, i32* %retval, !dbg !11501
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !11501

if.end.69:                                        ; preds = %if.then.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !11502
  br label %cleanup.70, !dbg !11502

cleanup.70:                                       ; preds = %if.end.69, %if.then.68
  %59 = bitcast i32* %vret64 to i8*, !dbg !11504
  call void @llvm.lifetime.end(i64 4, i8* %59) #1, !dbg !11504
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.71, label %unreachable [
    i32 0, label %cleanup.cont.72
    i32 1, label %return
  ]

cleanup.cont.72:                                  ; preds = %cleanup.70
  br label %if.end.73, !dbg !11507

if.end.73:                                        ; preds = %cleanup.cont.72, %do.body.61
  br label %do.end.74, !dbg !11508

do.end.74:                                        ; preds = %if.end.73
  br label %do.body.75, !dbg !11511

do.body.75:                                       ; preds = %do.end.74
  %60 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11512, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %60, i32 0, i32 2, !dbg !11514
  %61 = load %struct._object*, %struct._object** %target, align 8, !dbg !11514, !tbaa !11308
  %tobool76 = icmp ne %struct._object* %61, null, !dbg !11515
  br i1 %tobool76, label %if.then.77, label %if.end.87, !dbg !11516

if.then.77:                                       ; preds = %do.body.75
  %62 = bitcast i32* %vret78 to i8*, !dbg !11517
  call void @llvm.lifetime.start(i64 4, i8* %62) #1, !dbg !11517
  call void @llvm.dbg.declare(metadata i32* %vret78, metadata !1786, metadata !2613), !dbg !11519
  %63 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11520, !tbaa !2620
  %64 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11521, !tbaa !2620
  %target79 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %64, i32 0, i32 2, !dbg !11522
  %65 = load %struct._object*, %struct._object** %target79, align 8, !dbg !11522, !tbaa !11308
  %66 = load i8*, i8** %arg.addr, align 8, !dbg !11523, !tbaa !2620
  %call80 = call i32 %63(%struct._object* %65, i8* %66), !dbg !11520
  store i32 %call80, i32* %vret78, align 4, !dbg !11519, !tbaa !2759
  %67 = load i32, i32* %vret78, align 4, !dbg !11524, !tbaa !2759
  %tobool81 = icmp ne i32 %67, 0, !dbg !11524
  br i1 %tobool81, label %if.then.82, label %if.end.83, !dbg !11526

if.then.82:                                       ; preds = %if.then.77
  %68 = load i32, i32* %vret78, align 4, !dbg !11527, !tbaa !2759
  store i32 %68, i32* %retval, !dbg !11529
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84, !dbg !11529

if.end.83:                                        ; preds = %if.then.77
  store i32 0, i32* %cleanup.dest.slot, !dbg !11530
  br label %cleanup.84, !dbg !11530

cleanup.84:                                       ; preds = %if.end.83, %if.then.82
  %69 = bitcast i32* %vret78 to i8*, !dbg !11532
  call void @llvm.lifetime.end(i64 4, i8* %69) #1, !dbg !11532
  %cleanup.dest.85 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.85, label %unreachable [
    i32 0, label %cleanup.cont.86
    i32 1, label %return
  ]

cleanup.cont.86:                                  ; preds = %cleanup.84
  br label %if.end.87, !dbg !11535

if.end.87:                                        ; preds = %cleanup.cont.86, %do.body.75
  br label %do.end.88, !dbg !11536

do.end.88:                                        ; preds = %if.end.87
  br label %do.body.89, !dbg !11539

do.body.89:                                       ; preds = %do.end.88
  %70 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11540, !tbaa !2620
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %70, i32 0, i32 3, !dbg !11542
  %71 = load %struct._object*, %struct._object** %entity, align 8, !dbg !11542, !tbaa !11297
  %tobool90 = icmp ne %struct._object* %71, null, !dbg !11543
  br i1 %tobool90, label %if.then.91, label %if.end.101, !dbg !11544

if.then.91:                                       ; preds = %do.body.89
  %72 = bitcast i32* %vret92 to i8*, !dbg !11545
  call void @llvm.lifetime.start(i64 4, i8* %72) #1, !dbg !11545
  call void @llvm.dbg.declare(metadata i32* %vret92, metadata !1790, metadata !2613), !dbg !11547
  %73 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11548, !tbaa !2620
  %74 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11549, !tbaa !2620
  %entity93 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %74, i32 0, i32 3, !dbg !11550
  %75 = load %struct._object*, %struct._object** %entity93, align 8, !dbg !11550, !tbaa !11297
  %76 = load i8*, i8** %arg.addr, align 8, !dbg !11551, !tbaa !2620
  %call94 = call i32 %73(%struct._object* %75, i8* %76), !dbg !11548
  store i32 %call94, i32* %vret92, align 4, !dbg !11547, !tbaa !2759
  %77 = load i32, i32* %vret92, align 4, !dbg !11552, !tbaa !2759
  %tobool95 = icmp ne i32 %77, 0, !dbg !11552
  br i1 %tobool95, label %if.then.96, label %if.end.97, !dbg !11554

if.then.96:                                       ; preds = %if.then.91
  %78 = load i32, i32* %vret92, align 4, !dbg !11555, !tbaa !2759
  store i32 %78, i32* %retval, !dbg !11557
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !11557

if.end.97:                                        ; preds = %if.then.91
  store i32 0, i32* %cleanup.dest.slot, !dbg !11558
  br label %cleanup.98, !dbg !11558

cleanup.98:                                       ; preds = %if.end.97, %if.then.96
  %79 = bitcast i32* %vret92 to i8*, !dbg !11560
  call void @llvm.lifetime.end(i64 4, i8* %79) #1, !dbg !11560
  %cleanup.dest.99 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.99, label %unreachable [
    i32 0, label %cleanup.cont.100
    i32 1, label %return
  ]

cleanup.cont.100:                                 ; preds = %cleanup.98
  br label %if.end.101, !dbg !11563

if.end.101:                                       ; preds = %cleanup.cont.100, %do.body.89
  br label %do.end.102, !dbg !11564

do.end.102:                                       ; preds = %if.end.101
  br label %do.body.103, !dbg !11567

do.body.103:                                      ; preds = %do.end.102
  %80 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11568, !tbaa !2620
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %80, i32 0, i32 4, !dbg !11570
  %81 = load %struct._object*, %struct._object** %names, align 8, !dbg !11570, !tbaa !11571
  %tobool104 = icmp ne %struct._object* %81, null, !dbg !11572
  br i1 %tobool104, label %if.then.105, label %if.end.115, !dbg !11573

if.then.105:                                      ; preds = %do.body.103
  %82 = bitcast i32* %vret106 to i8*, !dbg !11574
  call void @llvm.lifetime.start(i64 4, i8* %82) #1, !dbg !11574
  call void @llvm.dbg.declare(metadata i32* %vret106, metadata !1794, metadata !2613), !dbg !11576
  %83 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !11577, !tbaa !2620
  %84 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11578, !tbaa !2620
  %names107 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %84, i32 0, i32 4, !dbg !11579
  %85 = load %struct._object*, %struct._object** %names107, align 8, !dbg !11579, !tbaa !11571
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !11580, !tbaa !2620
  %call108 = call i32 %83(%struct._object* %85, i8* %86), !dbg !11577
  store i32 %call108, i32* %vret106, align 4, !dbg !11576, !tbaa !2759
  %87 = load i32, i32* %vret106, align 4, !dbg !11581, !tbaa !2759
  %tobool109 = icmp ne i32 %87, 0, !dbg !11581
  br i1 %tobool109, label %if.then.110, label %if.end.111, !dbg !11583

if.then.110:                                      ; preds = %if.then.105
  %88 = load i32, i32* %vret106, align 4, !dbg !11584, !tbaa !2759
  store i32 %88, i32* %retval, !dbg !11586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !11586

if.end.111:                                       ; preds = %if.then.105
  store i32 0, i32* %cleanup.dest.slot, !dbg !11587
  br label %cleanup.112, !dbg !11587

cleanup.112:                                      ; preds = %if.end.111, %if.then.110
  %89 = bitcast i32* %vret106 to i8*, !dbg !11589
  call void @llvm.lifetime.end(i64 4, i8* %89) #1, !dbg !11589
  %cleanup.dest.113 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.113, label %unreachable [
    i32 0, label %cleanup.cont.114
    i32 1, label %return
  ]

cleanup.cont.114:                                 ; preds = %cleanup.112
  br label %if.end.115, !dbg !11592

if.end.115:                                       ; preds = %cleanup.cont.114, %do.body.103
  br label %do.end.116, !dbg !11593

do.end.116:                                       ; preds = %if.end.115
  store i32 0, i32* %retval, !dbg !11596
  br label %return, !dbg !11596

return:                                           ; preds = %do.end.116, %cleanup.112, %cleanup.98, %cleanup.84, %cleanup.70, %cleanup.56, %cleanup.42, %cleanup.28, %cleanup.14, %cleanup
  %90 = load i32, i32* %retval, !dbg !11597
  ret i32 %90, !dbg !11597

unreachable:                                      ; preds = %cleanup.112, %cleanup.98, %cleanup.84, %cleanup.70, %cleanup.56, %cleanup.42, %cleanup.28, %cleanup.14, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlparser_gc_clear(%struct.XMLParserObject* %self) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_tmp129 = alloca %struct._object*, align 8
  %_py_decref_tmp134 = alloca %struct._object*, align 8
  %_py_tmp149 = alloca %struct._object*, align 8
  %_py_decref_tmp154 = alloca %struct._object*, align 8
  %_py_tmp169 = alloca %struct._object*, align 8
  %_py_decref_tmp174 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1802, metadata !2613), !dbg !11598
  %0 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !11599, !tbaa !2620
  %ParserFree = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %0, i32 0, i32 11, !dbg !11600
  %1 = load void (%struct.XML_ParserStruct*)*, void (%struct.XML_ParserStruct*)** %ParserFree, align 8, !dbg !11600, !tbaa !11601
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11602, !tbaa !2620
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %2, i32 0, i32 1, !dbg !11603
  %3 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !11603, !tbaa !11604
  call void %1(%struct.XML_ParserStruct* %3), !dbg !11605
  br label %do.body, !dbg !11606

do.body:                                          ; preds = %entry
  %4 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11607
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !11607
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1803, metadata !2613), !dbg !11609
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11610, !tbaa !2620
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 11, !dbg !11611
  %6 = load %struct._object*, %struct._object** %handle_close, align 8, !dbg !11611, !tbaa !11341
  store %struct._object* %6, %struct._object** %_py_tmp, align 8, !dbg !11609, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11612, !tbaa !2620
  %cmp = icmp ne %struct._object* %7, null, !dbg !11613
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !11614

if.then:                                          ; preds = %do.body
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11615, !tbaa !2620
  %handle_close1 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 11, !dbg !11617
  store %struct._object* null, %struct._object** %handle_close1, align 8, !dbg !11618, !tbaa !11341
  br label %do.body.2, !dbg !11619

do.body.2:                                        ; preds = %if.then
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11620
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !11620
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1805, metadata !2613), !dbg !11622
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11623, !tbaa !2620
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !11622, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11624, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !11626
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !11627, !tbaa !2631
  %dec = add i64 %12, -1, !dbg !11627
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11627, !tbaa !2631
  %cmp3 = icmp ne i64 %dec, 0, !dbg !11628
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !11629

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !11630

if.else:                                          ; preds = %do.body.2
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11632, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !11634
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11634, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !11635
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11635, !tbaa !2705
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11636, !tbaa !2620
  call void %15(%struct._object* %16), !dbg !11637
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11638
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !11638
  br label %do.cond, !dbg !11640

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !11641

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !11643

if.end.5:                                         ; preds = %do.end, %do.body
  %18 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11645
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !11645
  br label %do.end.7, !dbg !11648

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !11649

do.body.8:                                        ; preds = %do.end.7
  %19 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !11650
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !11650
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !1809, metadata !2613), !dbg !11652
  %20 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11653, !tbaa !2620
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %20, i32 0, i32 9, !dbg !11654
  %21 = load %struct._object*, %struct._object** %handle_pi, align 8, !dbg !11654, !tbaa !11370
  store %struct._object* %21, %struct._object** %_py_tmp9, align 8, !dbg !11652, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !11655, !tbaa !2620
  %cmp10 = icmp ne %struct._object* %22, null, !dbg !11656
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !11657

if.then.11:                                       ; preds = %do.body.8
  %23 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11658, !tbaa !2620
  %handle_pi12 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %23, i32 0, i32 9, !dbg !11660
  store %struct._object* null, %struct._object** %handle_pi12, align 8, !dbg !11661, !tbaa !11370
  br label %do.body.13, !dbg !11662

do.body.13:                                       ; preds = %if.then.11
  %24 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !11663
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !11663
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1811, metadata !2613), !dbg !11665
  %25 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !11666, !tbaa !2620
  store %struct._object* %25, %struct._object** %_py_decref_tmp14, align 8, !dbg !11665, !tbaa !2620
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !11667, !tbaa !2620
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !11669
  %27 = load i64, i64* %ob_refcnt15, align 8, !dbg !11670, !tbaa !2631
  %dec16 = add i64 %27, -1, !dbg !11670
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !11670, !tbaa !2631
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !11671
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !11672

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !11673

if.else.19:                                       ; preds = %do.body.13
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !11675, !tbaa !2620
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !11677
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !11677, !tbaa !2703
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !11678
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !11678, !tbaa !2705
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !11679, !tbaa !2620
  call void %30(%struct._object* %31), !dbg !11680
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %32 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !11681
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !11681
  br label %do.cond.23, !dbg !11683

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !11684

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !11686

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %33 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !11688
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !11688
  br label %do.end.27, !dbg !11689

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !11690

do.body.28:                                       ; preds = %do.end.27
  %34 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !11691
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !11691
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1815, metadata !2613), !dbg !11693
  %35 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11694, !tbaa !2620
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %35, i32 0, i32 8, !dbg !11695
  %36 = load %struct._object*, %struct._object** %handle_comment, align 8, !dbg !11695, !tbaa !11399
  store %struct._object* %36, %struct._object** %_py_tmp29, align 8, !dbg !11693, !tbaa !2620
  %37 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !11696, !tbaa !2620
  %cmp30 = icmp ne %struct._object* %37, null, !dbg !11697
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !11698

if.then.31:                                       ; preds = %do.body.28
  %38 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11699, !tbaa !2620
  %handle_comment32 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %38, i32 0, i32 8, !dbg !11701
  store %struct._object* null, %struct._object** %handle_comment32, align 8, !dbg !11702, !tbaa !11399
  br label %do.body.33, !dbg !11703

do.body.33:                                       ; preds = %if.then.31
  %39 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !11704
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !11704
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1817, metadata !2613), !dbg !11706
  %40 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !11707, !tbaa !2620
  store %struct._object* %40, %struct._object** %_py_decref_tmp34, align 8, !dbg !11706, !tbaa !2620
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !11708, !tbaa !2620
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !11710
  %42 = load i64, i64* %ob_refcnt35, align 8, !dbg !11711, !tbaa !2631
  %dec36 = add i64 %42, -1, !dbg !11711
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !11711, !tbaa !2631
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !11712
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !11713

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !11714

if.else.39:                                       ; preds = %do.body.33
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !11716, !tbaa !2620
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !11718
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !11718, !tbaa !2703
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !11719
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !11719, !tbaa !2705
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !11720, !tbaa !2620
  call void %45(%struct._object* %46), !dbg !11721
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %47 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !11722
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !11722
  br label %do.cond.43, !dbg !11724

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !11725

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !11727

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %48 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !11729
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !11729
  br label %do.end.47, !dbg !11730

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !11731

do.body.48:                                       ; preds = %do.end.47
  %49 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !11732
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !11732
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !1821, metadata !2613), !dbg !11734
  %50 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11735, !tbaa !2620
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %50, i32 0, i32 7, !dbg !11736
  %51 = load %struct._object*, %struct._object** %handle_end, align 8, !dbg !11736, !tbaa !11428
  store %struct._object* %51, %struct._object** %_py_tmp49, align 8, !dbg !11734, !tbaa !2620
  %52 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !11737, !tbaa !2620
  %cmp50 = icmp ne %struct._object* %52, null, !dbg !11738
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !11739

if.then.51:                                       ; preds = %do.body.48
  %53 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11740, !tbaa !2620
  %handle_end52 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %53, i32 0, i32 7, !dbg !11742
  store %struct._object* null, %struct._object** %handle_end52, align 8, !dbg !11743, !tbaa !11428
  br label %do.body.53, !dbg !11744

do.body.53:                                       ; preds = %if.then.51
  %54 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !11745
  call void @llvm.lifetime.start(i64 8, i8* %54) #1, !dbg !11745
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1823, metadata !2613), !dbg !11747
  %55 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !11748, !tbaa !2620
  store %struct._object* %55, %struct._object** %_py_decref_tmp54, align 8, !dbg !11747, !tbaa !2620
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !11749, !tbaa !2620
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !11751
  %57 = load i64, i64* %ob_refcnt55, align 8, !dbg !11752, !tbaa !2631
  %dec56 = add i64 %57, -1, !dbg !11752
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !11752, !tbaa !2631
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !11753
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !11754

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !11755

if.else.59:                                       ; preds = %do.body.53
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !11757, !tbaa !2620
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !11759
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !11759, !tbaa !2703
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !11760
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !11760, !tbaa !2705
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !11761, !tbaa !2620
  call void %60(%struct._object* %61), !dbg !11762
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %62 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !11763
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !11763
  br label %do.cond.63, !dbg !11765

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !11766

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !11768

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %63 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !11770
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !11770
  br label %do.end.67, !dbg !11771

do.end.67:                                        ; preds = %if.end.65
  br label %do.body.68, !dbg !11772

do.body.68:                                       ; preds = %do.end.67
  %64 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !11773
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !11773
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp69, metadata !1827, metadata !2613), !dbg !11775
  %65 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11776, !tbaa !2620
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %65, i32 0, i32 6, !dbg !11777
  %66 = load %struct._object*, %struct._object** %handle_data, align 8, !dbg !11777, !tbaa !11457
  store %struct._object* %66, %struct._object** %_py_tmp69, align 8, !dbg !11775, !tbaa !2620
  %67 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !11778, !tbaa !2620
  %cmp70 = icmp ne %struct._object* %67, null, !dbg !11779
  br i1 %cmp70, label %if.then.71, label %if.end.85, !dbg !11780

if.then.71:                                       ; preds = %do.body.68
  %68 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11781, !tbaa !2620
  %handle_data72 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %68, i32 0, i32 6, !dbg !11783
  store %struct._object* null, %struct._object** %handle_data72, align 8, !dbg !11784, !tbaa !11457
  br label %do.body.73, !dbg !11785

do.body.73:                                       ; preds = %if.then.71
  %69 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !11786
  call void @llvm.lifetime.start(i64 8, i8* %69) #1, !dbg !11786
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !1829, metadata !2613), !dbg !11788
  %70 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !11789, !tbaa !2620
  store %struct._object* %70, %struct._object** %_py_decref_tmp74, align 8, !dbg !11788, !tbaa !2620
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !11790, !tbaa !2620
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !11792
  %72 = load i64, i64* %ob_refcnt75, align 8, !dbg !11793, !tbaa !2631
  %dec76 = add i64 %72, -1, !dbg !11793
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !11793, !tbaa !2631
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !11794
  br i1 %cmp77, label %if.then.78, label %if.else.79, !dbg !11795

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82, !dbg !11796

if.else.79:                                       ; preds = %do.body.73
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !11798, !tbaa !2620
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !11800
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !11800, !tbaa !2703
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !11801
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !11801, !tbaa !2705
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !11802, !tbaa !2620
  call void %75(%struct._object* %76), !dbg !11803
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  %77 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !11804
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !11804
  br label %do.cond.83, !dbg !11806

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !11807

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !11809

if.end.85:                                        ; preds = %do.end.84, %do.body.68
  %78 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !11811
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !11811
  br label %do.end.87, !dbg !11812

do.end.87:                                        ; preds = %if.end.85
  br label %do.body.88, !dbg !11813

do.body.88:                                       ; preds = %do.end.87
  %79 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !11814
  call void @llvm.lifetime.start(i64 8, i8* %79) #1, !dbg !11814
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp89, metadata !1833, metadata !2613), !dbg !11816
  %80 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11817, !tbaa !2620
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %80, i32 0, i32 5, !dbg !11818
  %81 = load %struct._object*, %struct._object** %handle_start, align 8, !dbg !11818, !tbaa !11486
  store %struct._object* %81, %struct._object** %_py_tmp89, align 8, !dbg !11816, !tbaa !2620
  %82 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !11819, !tbaa !2620
  %cmp90 = icmp ne %struct._object* %82, null, !dbg !11820
  br i1 %cmp90, label %if.then.91, label %if.end.105, !dbg !11821

if.then.91:                                       ; preds = %do.body.88
  %83 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11822, !tbaa !2620
  %handle_start92 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %83, i32 0, i32 5, !dbg !11824
  store %struct._object* null, %struct._object** %handle_start92, align 8, !dbg !11825, !tbaa !11486
  br label %do.body.93, !dbg !11826

do.body.93:                                       ; preds = %if.then.91
  %84 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !11827
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !11827
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !1835, metadata !2613), !dbg !11829
  %85 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !11830, !tbaa !2620
  store %struct._object* %85, %struct._object** %_py_decref_tmp94, align 8, !dbg !11829, !tbaa !2620
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !11831, !tbaa !2620
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !11833
  %87 = load i64, i64* %ob_refcnt95, align 8, !dbg !11834, !tbaa !2631
  %dec96 = add i64 %87, -1, !dbg !11834
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !11834, !tbaa !2631
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !11835
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !11836

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !11837

if.else.99:                                       ; preds = %do.body.93
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !11839, !tbaa !2620
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !11841
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !11841, !tbaa !2703
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !11842
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !11842, !tbaa !2705
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !11843, !tbaa !2620
  call void %90(%struct._object* %91), !dbg !11844
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %92 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !11845
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !11845
  br label %do.cond.103, !dbg !11847

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !11848

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105, !dbg !11850

if.end.105:                                       ; preds = %do.end.104, %do.body.88
  %93 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !11852
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !11852
  br label %do.end.107, !dbg !11853

do.end.107:                                       ; preds = %if.end.105
  br label %do.body.108, !dbg !11854

do.body.108:                                      ; preds = %do.end.107
  %94 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !11855
  call void @llvm.lifetime.start(i64 8, i8* %94) #1, !dbg !11855
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp109, metadata !1839, metadata !2613), !dbg !11857
  %95 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11858, !tbaa !2620
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %95, i32 0, i32 10, !dbg !11859
  %96 = load %struct._object*, %struct._object** %handle_doctype, align 8, !dbg !11859, !tbaa !11860
  store %struct._object* %96, %struct._object** %_py_tmp109, align 8, !dbg !11857, !tbaa !2620
  %97 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !11861, !tbaa !2620
  %cmp110 = icmp ne %struct._object* %97, null, !dbg !11862
  br i1 %cmp110, label %if.then.111, label %if.end.125, !dbg !11863

if.then.111:                                      ; preds = %do.body.108
  %98 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11864, !tbaa !2620
  %handle_doctype112 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %98, i32 0, i32 10, !dbg !11866
  store %struct._object* null, %struct._object** %handle_doctype112, align 8, !dbg !11867, !tbaa !11860
  br label %do.body.113, !dbg !11868

do.body.113:                                      ; preds = %if.then.111
  %99 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !11869
  call void @llvm.lifetime.start(i64 8, i8* %99) #1, !dbg !11869
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !1841, metadata !2613), !dbg !11871
  %100 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !11872, !tbaa !2620
  store %struct._object* %100, %struct._object** %_py_decref_tmp114, align 8, !dbg !11871, !tbaa !2620
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !11873, !tbaa !2620
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 0, !dbg !11875
  %102 = load i64, i64* %ob_refcnt115, align 8, !dbg !11876, !tbaa !2631
  %dec116 = add i64 %102, -1, !dbg !11876
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !11876, !tbaa !2631
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !11877
  br i1 %cmp117, label %if.then.118, label %if.else.119, !dbg !11878

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122, !dbg !11879

if.else.119:                                      ; preds = %do.body.113
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !11881, !tbaa !2620
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !11883
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !11883, !tbaa !2703
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %104, i32 0, i32 4, !dbg !11884
  %105 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !11884, !tbaa !2705
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !11885, !tbaa !2620
  call void %105(%struct._object* %106), !dbg !11886
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %107 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !11887
  call void @llvm.lifetime.end(i64 8, i8* %107) #1, !dbg !11887
  br label %do.cond.123, !dbg !11889

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !11890

do.end.124:                                       ; preds = %do.cond.123
  br label %if.end.125, !dbg !11892

if.end.125:                                       ; preds = %do.end.124, %do.body.108
  %108 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !11894
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !11894
  br label %do.end.127, !dbg !11895

do.end.127:                                       ; preds = %if.end.125
  br label %do.body.128, !dbg !11896

do.body.128:                                      ; preds = %do.end.127
  %109 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !11897
  call void @llvm.lifetime.start(i64 8, i8* %109) #1, !dbg !11897
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp129, metadata !1845, metadata !2613), !dbg !11899
  %110 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11900, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %110, i32 0, i32 2, !dbg !11901
  %111 = load %struct._object*, %struct._object** %target, align 8, !dbg !11901, !tbaa !11308
  store %struct._object* %111, %struct._object** %_py_tmp129, align 8, !dbg !11899, !tbaa !2620
  %112 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !11902, !tbaa !2620
  %cmp130 = icmp ne %struct._object* %112, null, !dbg !11903
  br i1 %cmp130, label %if.then.131, label %if.end.145, !dbg !11904

if.then.131:                                      ; preds = %do.body.128
  %113 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11905, !tbaa !2620
  %target132 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %113, i32 0, i32 2, !dbg !11907
  store %struct._object* null, %struct._object** %target132, align 8, !dbg !11908, !tbaa !11308
  br label %do.body.133, !dbg !11909

do.body.133:                                      ; preds = %if.then.131
  %114 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !11910
  call void @llvm.lifetime.start(i64 8, i8* %114) #1, !dbg !11910
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp134, metadata !1847, metadata !2613), !dbg !11912
  %115 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !11913, !tbaa !2620
  store %struct._object* %115, %struct._object** %_py_decref_tmp134, align 8, !dbg !11912, !tbaa !2620
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !11914, !tbaa !2620
  %ob_refcnt135 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !11916
  %117 = load i64, i64* %ob_refcnt135, align 8, !dbg !11917, !tbaa !2631
  %dec136 = add i64 %117, -1, !dbg !11917
  store i64 %dec136, i64* %ob_refcnt135, align 8, !dbg !11917, !tbaa !2631
  %cmp137 = icmp ne i64 %dec136, 0, !dbg !11918
  br i1 %cmp137, label %if.then.138, label %if.else.139, !dbg !11919

if.then.138:                                      ; preds = %do.body.133
  br label %if.end.142, !dbg !11920

if.else.139:                                      ; preds = %do.body.133
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !11922, !tbaa !2620
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1, !dbg !11924
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !11924, !tbaa !2703
  %tp_dealloc141 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4, !dbg !11925
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc141, align 8, !dbg !11925, !tbaa !2705
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !11926, !tbaa !2620
  call void %120(%struct._object* %121), !dbg !11927
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.139, %if.then.138
  %122 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !11928
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !11928
  br label %do.cond.143, !dbg !11930

do.cond.143:                                      ; preds = %if.end.142
  br label %do.end.144, !dbg !11931

do.end.144:                                       ; preds = %do.cond.143
  br label %if.end.145, !dbg !11933

if.end.145:                                       ; preds = %do.end.144, %do.body.128
  %123 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !11935
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !11935
  br label %do.end.147, !dbg !11936

do.end.147:                                       ; preds = %if.end.145
  br label %do.body.148, !dbg !11937

do.body.148:                                      ; preds = %do.end.147
  %124 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !11938
  call void @llvm.lifetime.start(i64 8, i8* %124) #1, !dbg !11938
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp149, metadata !1851, metadata !2613), !dbg !11940
  %125 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11941, !tbaa !2620
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %125, i32 0, i32 3, !dbg !11942
  %126 = load %struct._object*, %struct._object** %entity, align 8, !dbg !11942, !tbaa !11297
  store %struct._object* %126, %struct._object** %_py_tmp149, align 8, !dbg !11940, !tbaa !2620
  %127 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !11943, !tbaa !2620
  %cmp150 = icmp ne %struct._object* %127, null, !dbg !11944
  br i1 %cmp150, label %if.then.151, label %if.end.165, !dbg !11945

if.then.151:                                      ; preds = %do.body.148
  %128 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11946, !tbaa !2620
  %entity152 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %128, i32 0, i32 3, !dbg !11948
  store %struct._object* null, %struct._object** %entity152, align 8, !dbg !11949, !tbaa !11297
  br label %do.body.153, !dbg !11950

do.body.153:                                      ; preds = %if.then.151
  %129 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !11951
  call void @llvm.lifetime.start(i64 8, i8* %129) #1, !dbg !11951
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp154, metadata !1853, metadata !2613), !dbg !11953
  %130 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !11954, !tbaa !2620
  store %struct._object* %130, %struct._object** %_py_decref_tmp154, align 8, !dbg !11953, !tbaa !2620
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !11955, !tbaa !2620
  %ob_refcnt155 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 0, !dbg !11957
  %132 = load i64, i64* %ob_refcnt155, align 8, !dbg !11958, !tbaa !2631
  %dec156 = add i64 %132, -1, !dbg !11958
  store i64 %dec156, i64* %ob_refcnt155, align 8, !dbg !11958, !tbaa !2631
  %cmp157 = icmp ne i64 %dec156, 0, !dbg !11959
  br i1 %cmp157, label %if.then.158, label %if.else.159, !dbg !11960

if.then.158:                                      ; preds = %do.body.153
  br label %if.end.162, !dbg !11961

if.else.159:                                      ; preds = %do.body.153
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !11963, !tbaa !2620
  %ob_type160 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 1, !dbg !11965
  %134 = load %struct._typeobject*, %struct._typeobject** %ob_type160, align 8, !dbg !11965, !tbaa !2703
  %tp_dealloc161 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %134, i32 0, i32 4, !dbg !11966
  %135 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc161, align 8, !dbg !11966, !tbaa !2705
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !11967, !tbaa !2620
  call void %135(%struct._object* %136), !dbg !11968
  br label %if.end.162

if.end.162:                                       ; preds = %if.else.159, %if.then.158
  %137 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !11969
  call void @llvm.lifetime.end(i64 8, i8* %137) #1, !dbg !11969
  br label %do.cond.163, !dbg !11971

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !11972

do.end.164:                                       ; preds = %do.cond.163
  br label %if.end.165, !dbg !11974

if.end.165:                                       ; preds = %do.end.164, %do.body.148
  %138 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !11976
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !11976
  br label %do.end.167, !dbg !11977

do.end.167:                                       ; preds = %if.end.165
  br label %do.body.168, !dbg !11978

do.body.168:                                      ; preds = %do.end.167
  %139 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !11979
  call void @llvm.lifetime.start(i64 8, i8* %139) #1, !dbg !11979
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp169, metadata !1857, metadata !2613), !dbg !11981
  %140 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11982, !tbaa !2620
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %140, i32 0, i32 4, !dbg !11983
  %141 = load %struct._object*, %struct._object** %names, align 8, !dbg !11983, !tbaa !11571
  store %struct._object* %141, %struct._object** %_py_tmp169, align 8, !dbg !11981, !tbaa !2620
  %142 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !11984, !tbaa !2620
  %cmp170 = icmp ne %struct._object* %142, null, !dbg !11985
  br i1 %cmp170, label %if.then.171, label %if.end.185, !dbg !11986

if.then.171:                                      ; preds = %do.body.168
  %143 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !11987, !tbaa !2620
  %names172 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %143, i32 0, i32 4, !dbg !11989
  store %struct._object* null, %struct._object** %names172, align 8, !dbg !11990, !tbaa !11571
  br label %do.body.173, !dbg !11991

do.body.173:                                      ; preds = %if.then.171
  %144 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !11992
  call void @llvm.lifetime.start(i64 8, i8* %144) #1, !dbg !11992
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp174, metadata !1859, metadata !2613), !dbg !11994
  %145 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !11995, !tbaa !2620
  store %struct._object* %145, %struct._object** %_py_decref_tmp174, align 8, !dbg !11994, !tbaa !2620
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !11996, !tbaa !2620
  %ob_refcnt175 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 0, !dbg !11998
  %147 = load i64, i64* %ob_refcnt175, align 8, !dbg !11999, !tbaa !2631
  %dec176 = add i64 %147, -1, !dbg !11999
  store i64 %dec176, i64* %ob_refcnt175, align 8, !dbg !11999, !tbaa !2631
  %cmp177 = icmp ne i64 %dec176, 0, !dbg !12000
  br i1 %cmp177, label %if.then.178, label %if.else.179, !dbg !12001

if.then.178:                                      ; preds = %do.body.173
  br label %if.end.182, !dbg !12002

if.else.179:                                      ; preds = %do.body.173
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !12004, !tbaa !2620
  %ob_type180 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 1, !dbg !12006
  %149 = load %struct._typeobject*, %struct._typeobject** %ob_type180, align 8, !dbg !12006, !tbaa !2703
  %tp_dealloc181 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %149, i32 0, i32 4, !dbg !12007
  %150 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc181, align 8, !dbg !12007, !tbaa !2705
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !12008, !tbaa !2620
  call void %150(%struct._object* %151), !dbg !12009
  br label %if.end.182

if.end.182:                                       ; preds = %if.else.179, %if.then.178
  %152 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !12010
  call void @llvm.lifetime.end(i64 8, i8* %152) #1, !dbg !12010
  br label %do.cond.183, !dbg !12012

do.cond.183:                                      ; preds = %if.end.182
  br label %do.end.184, !dbg !12013

do.end.184:                                       ; preds = %do.cond.183
  br label %if.end.185, !dbg !12015

if.end.185:                                       ; preds = %do.end.184, %do.body.168
  %153 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !12017
  call void @llvm.lifetime.end(i64 8, i8* %153) #1, !dbg !12017
  br label %do.end.187, !dbg !12018

do.end.187:                                       ; preds = %if.end.185
  ret i32 0, !dbg !12019
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlparser_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self_xp = alloca %struct.XMLParserObject*, align 8
  %target = alloca %struct._object*, align 8
  %html = alloca %struct._object*, align 8
  %encoding = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp26 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp53 = alloca %struct._object*, align 8
  %_py_tmp77 = alloca %struct._object*, align 8
  %_py_decref_tmp83 = alloca %struct._object*, align 8
  %_py_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp104 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2131, metadata !2613), !dbg !12020
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2132, metadata !2613), !dbg !12021
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2133, metadata !2613), !dbg !12022
  %0 = bitcast %struct.XMLParserObject** %self_xp to i8*, !dbg !12023
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12023
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self_xp, metadata !2134, metadata !2613), !dbg !12024
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !12025, !tbaa !2620
  %2 = bitcast %struct._object* %1 to %struct.XMLParserObject*, !dbg !12026
  store %struct.XMLParserObject* %2, %struct.XMLParserObject** %self_xp, align 8, !dbg !12024, !tbaa !2620
  %3 = bitcast %struct._object** %target to i8*, !dbg !12027
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12027
  call void @llvm.dbg.declare(metadata %struct._object** %target, metadata !2135, metadata !2613), !dbg !12028
  store %struct._object* null, %struct._object** %target, align 8, !dbg !12028, !tbaa !2620
  %4 = bitcast %struct._object** %html to i8*, !dbg !12027
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12027
  call void @llvm.dbg.declare(metadata %struct._object** %html, metadata !2136, metadata !2613), !dbg !12029
  store %struct._object* null, %struct._object** %html, align 8, !dbg !12029, !tbaa !2620
  %5 = bitcast i8** %encoding to i8*, !dbg !12030
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !12030
  call void @llvm.dbg.declare(metadata i8** %encoding, metadata !2137, metadata !2613), !dbg !12031
  store i8* null, i8** %encoding, align 8, !dbg !12031, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12032, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !12034, !tbaa !2620
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.134, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @xmlparser_init.kwlist, i32 0, i32 0), %struct._object** %html, %struct._object** %target, i8** %encoding), !dbg !12035
  %tobool = icmp ne i32 %call, 0, !dbg !12035
  br i1 %tobool, label %if.end, label %if.then, !dbg !12036

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !12037
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12037

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyDict_New(), !dbg !12039
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12040, !tbaa !2620
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 3, !dbg !12041
  store %struct._object* %call1, %struct._object** %entity, align 8, !dbg !12042, !tbaa !11297
  %9 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12043, !tbaa !2620
  %entity2 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %9, i32 0, i32 3, !dbg !12045
  %10 = load %struct._object*, %struct._object** %entity2, align 8, !dbg !12045, !tbaa !11297
  %tobool3 = icmp ne %struct._object* %10, null, !dbg !12043
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !12046

if.then.4:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !12047
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12047

if.end.5:                                         ; preds = %if.end
  %call6 = call %struct._object* @PyDict_New(), !dbg !12048
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12049, !tbaa !2620
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 4, !dbg !12050
  store %struct._object* %call6, %struct._object** %names, align 8, !dbg !12051, !tbaa !11571
  %12 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12052, !tbaa !2620
  %names7 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %12, i32 0, i32 4, !dbg !12053
  %13 = load %struct._object*, %struct._object** %names7, align 8, !dbg !12053, !tbaa !11571
  %tobool8 = icmp ne %struct._object* %13, null, !dbg !12052
  br i1 %tobool8, label %if.end.20, label %if.then.9, !dbg !12054

if.then.9:                                        ; preds = %if.end.5
  br label %do.body, !dbg !12055

do.body:                                          ; preds = %if.then.9
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12056
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !12056
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2138, metadata !2613), !dbg !12058
  %15 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12059, !tbaa !2620
  %entity10 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %15, i32 0, i32 3, !dbg !12060
  %16 = load %struct._object*, %struct._object** %entity10, align 8, !dbg !12060, !tbaa !11297
  store %struct._object* %16, %struct._object** %_py_tmp, align 8, !dbg !12058, !tbaa !2620
  %17 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12061, !tbaa !2620
  %cmp = icmp ne %struct._object* %17, null, !dbg !12062
  br i1 %cmp, label %if.then.11, label %if.end.17, !dbg !12063

if.then.11:                                       ; preds = %do.body
  %18 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12064, !tbaa !2620
  %entity12 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %18, i32 0, i32 3, !dbg !12066
  store %struct._object* null, %struct._object** %entity12, align 8, !dbg !12067, !tbaa !11297
  br label %do.body.13, !dbg !12068

do.body.13:                                       ; preds = %if.then.11
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12069
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !12069
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2142, metadata !2613), !dbg !12071
  %20 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12072, !tbaa !2620
  store %struct._object* %20, %struct._object** %_py_decref_tmp, align 8, !dbg !12071, !tbaa !2620
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12073, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !12075
  %22 = load i64, i64* %ob_refcnt, align 8, !dbg !12076, !tbaa !2631
  %dec = add i64 %22, -1, !dbg !12076
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12076, !tbaa !2631
  %cmp14 = icmp ne i64 %dec, 0, !dbg !12077
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !12078

if.then.15:                                       ; preds = %do.body.13
  br label %if.end.16, !dbg !12079

if.else:                                          ; preds = %do.body.13
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12081, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !12083
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12083, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !12084
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12084, !tbaa !2705
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12085, !tbaa !2620
  call void %25(%struct._object* %26), !dbg !12086
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12087
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !12087
  br label %do.cond, !dbg !12089

do.cond:                                          ; preds = %if.end.16
  br label %do.end, !dbg !12090

do.end:                                           ; preds = %do.cond
  br label %if.end.17, !dbg !12092

if.end.17:                                        ; preds = %do.end, %do.body
  %28 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12094
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !12094
  br label %do.cond.18, !dbg !12097

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !12098

do.end.19:                                        ; preds = %do.cond.18
  store i32 -1, i32* %retval, !dbg !12100
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12100

if.end.20:                                        ; preds = %if.end.5
  %29 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12101, !tbaa !2620
  %ParserCreate_MM = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %29, i32 0, i32 10, !dbg !12102
  %30 = load %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)*, %struct.XML_ParserStruct* (i8*, %struct.XML_Memory_Handling_Suite*, i8*)** %ParserCreate_MM, align 8, !dbg !12102, !tbaa !12103
  %31 = load i8*, i8** %encoding, align 8, !dbg !12104, !tbaa !2620
  %call21 = call %struct.XML_ParserStruct* %30(i8* %31, %struct.XML_Memory_Handling_Suite* @ExpatMemoryHandler, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.135, i32 0, i32 0)), !dbg !12105
  %32 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12106, !tbaa !2620
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %32, i32 0, i32 1, !dbg !12107
  store %struct.XML_ParserStruct* %call21, %struct.XML_ParserStruct** %parser, align 8, !dbg !12108, !tbaa !11604
  %33 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12109, !tbaa !2620
  %parser22 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %33, i32 0, i32 1, !dbg !12110
  %34 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser22, align 8, !dbg !12110, !tbaa !11604
  %tobool23 = icmp ne %struct.XML_ParserStruct* %34, null, !dbg !12109
  br i1 %tobool23, label %if.end.68, label %if.then.24, !dbg !12111

if.then.24:                                       ; preds = %if.end.20
  br label %do.body.25, !dbg !12112

do.body.25:                                       ; preds = %if.then.24
  %35 = bitcast %struct._object** %_py_tmp26 to i8*, !dbg !12113
  call void @llvm.lifetime.start(i64 8, i8* %35) #1, !dbg !12113
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp26, metadata !2146, metadata !2613), !dbg !12115
  %36 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12116, !tbaa !2620
  %entity27 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %36, i32 0, i32 3, !dbg !12117
  %37 = load %struct._object*, %struct._object** %entity27, align 8, !dbg !12117, !tbaa !11297
  store %struct._object* %37, %struct._object** %_py_tmp26, align 8, !dbg !12115, !tbaa !2620
  %38 = load %struct._object*, %struct._object** %_py_tmp26, align 8, !dbg !12118, !tbaa !2620
  %cmp28 = icmp ne %struct._object* %38, null, !dbg !12119
  br i1 %cmp28, label %if.then.29, label %if.end.43, !dbg !12120

if.then.29:                                       ; preds = %do.body.25
  %39 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12121, !tbaa !2620
  %entity30 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %39, i32 0, i32 3, !dbg !12123
  store %struct._object* null, %struct._object** %entity30, align 8, !dbg !12124, !tbaa !11297
  br label %do.body.31, !dbg !12125

do.body.31:                                       ; preds = %if.then.29
  %40 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !12126
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !12126
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !2150, metadata !2613), !dbg !12128
  %41 = load %struct._object*, %struct._object** %_py_tmp26, align 8, !dbg !12129, !tbaa !2620
  store %struct._object* %41, %struct._object** %_py_decref_tmp32, align 8, !dbg !12128, !tbaa !2620
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !12130, !tbaa !2620
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !12132
  %43 = load i64, i64* %ob_refcnt33, align 8, !dbg !12133, !tbaa !2631
  %dec34 = add i64 %43, -1, !dbg !12133
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !12133, !tbaa !2631
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !12134
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !12135

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !12136

if.else.37:                                       ; preds = %do.body.31
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !12138, !tbaa !2620
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !12140
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !12140, !tbaa !2703
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !12141
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !12141, !tbaa !2705
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !12142, !tbaa !2620
  call void %46(%struct._object* %47), !dbg !12143
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %48 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !12144
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !12144
  br label %do.cond.41, !dbg !12146

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !12147

do.end.42:                                        ; preds = %do.cond.41
  br label %if.end.43, !dbg !12149

if.end.43:                                        ; preds = %do.end.42, %do.body.25
  %49 = bitcast %struct._object** %_py_tmp26 to i8*, !dbg !12151
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !12151
  br label %do.cond.44, !dbg !12154

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !12155

do.end.45:                                        ; preds = %do.cond.44
  br label %do.body.46, !dbg !12157

do.body.46:                                       ; preds = %do.end.45
  %50 = bitcast %struct._object** %_py_tmp47 to i8*, !dbg !12158
  call void @llvm.lifetime.start(i64 8, i8* %50) #1, !dbg !12158
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp47, metadata !2154, metadata !2613), !dbg !12160
  %51 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12161, !tbaa !2620
  %names48 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %51, i32 0, i32 4, !dbg !12162
  %52 = load %struct._object*, %struct._object** %names48, align 8, !dbg !12162, !tbaa !11571
  store %struct._object* %52, %struct._object** %_py_tmp47, align 8, !dbg !12160, !tbaa !2620
  %53 = load %struct._object*, %struct._object** %_py_tmp47, align 8, !dbg !12163, !tbaa !2620
  %cmp49 = icmp ne %struct._object* %53, null, !dbg !12164
  br i1 %cmp49, label %if.then.50, label %if.end.64, !dbg !12165

if.then.50:                                       ; preds = %do.body.46
  %54 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12166, !tbaa !2620
  %names51 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %54, i32 0, i32 4, !dbg !12168
  store %struct._object* null, %struct._object** %names51, align 8, !dbg !12169, !tbaa !11571
  br label %do.body.52, !dbg !12170

do.body.52:                                       ; preds = %if.then.50
  %55 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !12171
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !12171
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp53, metadata !2156, metadata !2613), !dbg !12173
  %56 = load %struct._object*, %struct._object** %_py_tmp47, align 8, !dbg !12174, !tbaa !2620
  store %struct._object* %56, %struct._object** %_py_decref_tmp53, align 8, !dbg !12173, !tbaa !2620
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !12175, !tbaa !2620
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !12177
  %58 = load i64, i64* %ob_refcnt54, align 8, !dbg !12178, !tbaa !2631
  %dec55 = add i64 %58, -1, !dbg !12178
  store i64 %dec55, i64* %ob_refcnt54, align 8, !dbg !12178, !tbaa !2631
  %cmp56 = icmp ne i64 %dec55, 0, !dbg !12179
  br i1 %cmp56, label %if.then.57, label %if.else.58, !dbg !12180

if.then.57:                                       ; preds = %do.body.52
  br label %if.end.61, !dbg !12181

if.else.58:                                       ; preds = %do.body.52
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !12183, !tbaa !2620
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !12185
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !12185, !tbaa !2703
  %tp_dealloc60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !12186
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc60, align 8, !dbg !12186, !tbaa !2705
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !12187, !tbaa !2620
  call void %61(%struct._object* %62), !dbg !12188
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.58, %if.then.57
  %63 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !12189
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !12189
  br label %do.cond.62, !dbg !12191

do.cond.62:                                       ; preds = %if.end.61
  br label %do.end.63, !dbg !12192

do.end.63:                                        ; preds = %do.cond.62
  br label %if.end.64, !dbg !12194

if.end.64:                                        ; preds = %do.end.63, %do.body.46
  %64 = bitcast %struct._object** %_py_tmp47 to i8*, !dbg !12196
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !12196
  br label %do.cond.65, !dbg !12197

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !12198

do.end.66:                                        ; preds = %do.cond.65
  %call67 = call %struct._object* @PyErr_NoMemory(), !dbg !12200
  store i32 -1, i32* %retval, !dbg !12201
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12201

if.end.68:                                        ; preds = %if.end.20
  %65 = load %struct._object*, %struct._object** %target, align 8, !dbg !12202, !tbaa !2620
  %tobool69 = icmp ne %struct._object* %65, null, !dbg !12202
  br i1 %tobool69, label %if.then.70, label %if.else.72, !dbg !12203

if.then.70:                                       ; preds = %if.end.68
  %66 = load %struct._object*, %struct._object** %target, align 8, !dbg !12204, !tbaa !2620
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !12206
  %67 = load i64, i64* %ob_refcnt71, align 8, !dbg !12207, !tbaa !2631
  %inc = add i64 %67, 1, !dbg !12207
  store i64 %inc, i64* %ob_refcnt71, align 8, !dbg !12207, !tbaa !2631
  br label %if.end.120, !dbg !12208

if.else.72:                                       ; preds = %if.end.68
  %call73 = call %struct._object* @treebuilder_new(%struct._typeobject* @TreeBuilder_Type, %struct._object* null, %struct._object* null), !dbg !12209
  store %struct._object* %call73, %struct._object** %target, align 8, !dbg !12210, !tbaa !2620
  %68 = load %struct._object*, %struct._object** %target, align 8, !dbg !12211, !tbaa !2620
  %tobool74 = icmp ne %struct._object* %68, null, !dbg !12211
  br i1 %tobool74, label %if.end.119, label %if.then.75, !dbg !12212

if.then.75:                                       ; preds = %if.else.72
  br label %do.body.76, !dbg !12213

do.body.76:                                       ; preds = %if.then.75
  %69 = bitcast %struct._object** %_py_tmp77 to i8*, !dbg !12214
  call void @llvm.lifetime.start(i64 8, i8* %69) #1, !dbg !12214
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp77, metadata !2160, metadata !2613), !dbg !12216
  %70 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12217, !tbaa !2620
  %entity78 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %70, i32 0, i32 3, !dbg !12218
  %71 = load %struct._object*, %struct._object** %entity78, align 8, !dbg !12218, !tbaa !11297
  store %struct._object* %71, %struct._object** %_py_tmp77, align 8, !dbg !12216, !tbaa !2620
  %72 = load %struct._object*, %struct._object** %_py_tmp77, align 8, !dbg !12219, !tbaa !2620
  %cmp79 = icmp ne %struct._object* %72, null, !dbg !12220
  br i1 %cmp79, label %if.then.80, label %if.end.94, !dbg !12221

if.then.80:                                       ; preds = %do.body.76
  %73 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12222, !tbaa !2620
  %entity81 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %73, i32 0, i32 3, !dbg !12224
  store %struct._object* null, %struct._object** %entity81, align 8, !dbg !12225, !tbaa !11297
  br label %do.body.82, !dbg !12226

do.body.82:                                       ; preds = %if.then.80
  %74 = bitcast %struct._object** %_py_decref_tmp83 to i8*, !dbg !12227
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !12227
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp83, metadata !2166, metadata !2613), !dbg !12229
  %75 = load %struct._object*, %struct._object** %_py_tmp77, align 8, !dbg !12230, !tbaa !2620
  store %struct._object* %75, %struct._object** %_py_decref_tmp83, align 8, !dbg !12229, !tbaa !2620
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8, !dbg !12231, !tbaa !2620
  %ob_refcnt84 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !12233
  %77 = load i64, i64* %ob_refcnt84, align 8, !dbg !12234, !tbaa !2631
  %dec85 = add i64 %77, -1, !dbg !12234
  store i64 %dec85, i64* %ob_refcnt84, align 8, !dbg !12234, !tbaa !2631
  %cmp86 = icmp ne i64 %dec85, 0, !dbg !12235
  br i1 %cmp86, label %if.then.87, label %if.else.88, !dbg !12236

if.then.87:                                       ; preds = %do.body.82
  br label %if.end.91, !dbg !12237

if.else.88:                                       ; preds = %do.body.82
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8, !dbg !12239, !tbaa !2620
  %ob_type89 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !12241
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type89, align 8, !dbg !12241, !tbaa !2703
  %tp_dealloc90 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !12242
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc90, align 8, !dbg !12242, !tbaa !2705
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp83, align 8, !dbg !12243, !tbaa !2620
  call void %80(%struct._object* %81), !dbg !12244
  br label %if.end.91

if.end.91:                                        ; preds = %if.else.88, %if.then.87
  %82 = bitcast %struct._object** %_py_decref_tmp83 to i8*, !dbg !12245
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !12245
  br label %do.cond.92, !dbg !12247

do.cond.92:                                       ; preds = %if.end.91
  br label %do.end.93, !dbg !12248

do.end.93:                                        ; preds = %do.cond.92
  br label %if.end.94, !dbg !12250

if.end.94:                                        ; preds = %do.end.93, %do.body.76
  %83 = bitcast %struct._object** %_py_tmp77 to i8*, !dbg !12252
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !12252
  br label %do.cond.95, !dbg !12255

do.cond.95:                                       ; preds = %if.end.94
  br label %do.end.96, !dbg !12256

do.end.96:                                        ; preds = %do.cond.95
  br label %do.body.97, !dbg !12258

do.body.97:                                       ; preds = %do.end.96
  %84 = bitcast %struct._object** %_py_tmp98 to i8*, !dbg !12259
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !12259
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp98, metadata !2170, metadata !2613), !dbg !12261
  %85 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12262, !tbaa !2620
  %names99 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %85, i32 0, i32 4, !dbg !12263
  %86 = load %struct._object*, %struct._object** %names99, align 8, !dbg !12263, !tbaa !11571
  store %struct._object* %86, %struct._object** %_py_tmp98, align 8, !dbg !12261, !tbaa !2620
  %87 = load %struct._object*, %struct._object** %_py_tmp98, align 8, !dbg !12264, !tbaa !2620
  %cmp100 = icmp ne %struct._object* %87, null, !dbg !12265
  br i1 %cmp100, label %if.then.101, label %if.end.115, !dbg !12266

if.then.101:                                      ; preds = %do.body.97
  %88 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12267, !tbaa !2620
  %names102 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %88, i32 0, i32 4, !dbg !12269
  store %struct._object* null, %struct._object** %names102, align 8, !dbg !12270, !tbaa !11571
  br label %do.body.103, !dbg !12271

do.body.103:                                      ; preds = %if.then.101
  %89 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !12272
  call void @llvm.lifetime.start(i64 8, i8* %89) #1, !dbg !12272
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp104, metadata !2172, metadata !2613), !dbg !12274
  %90 = load %struct._object*, %struct._object** %_py_tmp98, align 8, !dbg !12275, !tbaa !2620
  store %struct._object* %90, %struct._object** %_py_decref_tmp104, align 8, !dbg !12274, !tbaa !2620
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !12276, !tbaa !2620
  %ob_refcnt105 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !12278
  %92 = load i64, i64* %ob_refcnt105, align 8, !dbg !12279, !tbaa !2631
  %dec106 = add i64 %92, -1, !dbg !12279
  store i64 %dec106, i64* %ob_refcnt105, align 8, !dbg !12279, !tbaa !2631
  %cmp107 = icmp ne i64 %dec106, 0, !dbg !12280
  br i1 %cmp107, label %if.then.108, label %if.else.109, !dbg !12281

if.then.108:                                      ; preds = %do.body.103
  br label %if.end.112, !dbg !12282

if.else.109:                                      ; preds = %do.body.103
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !12284, !tbaa !2620
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !12286
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !12286, !tbaa !2703
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !12287
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !12287, !tbaa !2705
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !12288, !tbaa !2620
  call void %95(%struct._object* %96), !dbg !12289
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  %97 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !12290
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !12290
  br label %do.cond.113, !dbg !12292

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !12293

do.end.114:                                       ; preds = %do.cond.113
  br label %if.end.115, !dbg !12295

if.end.115:                                       ; preds = %do.end.114, %do.body.97
  %98 = bitcast %struct._object** %_py_tmp98 to i8*, !dbg !12297
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !12297
  br label %do.cond.116, !dbg !12298

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !12299

do.end.117:                                       ; preds = %do.cond.116
  %99 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12301, !tbaa !2620
  %ParserFree = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %99, i32 0, i32 11, !dbg !12302
  %100 = load void (%struct.XML_ParserStruct*)*, void (%struct.XML_ParserStruct*)** %ParserFree, align 8, !dbg !12302, !tbaa !11601
  %101 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12303, !tbaa !2620
  %parser118 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %101, i32 0, i32 1, !dbg !12304
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser118, align 8, !dbg !12304, !tbaa !11604
  call void %100(%struct.XML_ParserStruct* %102), !dbg !12305
  store i32 -1, i32* %retval, !dbg !12306
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12306

if.end.119:                                       ; preds = %if.else.72
  br label %if.end.120

if.end.120:                                       ; preds = %if.end.119, %if.then.70
  %103 = load %struct._object*, %struct._object** %target, align 8, !dbg !12307, !tbaa !2620
  %104 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12308, !tbaa !2620
  %target121 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %104, i32 0, i32 2, !dbg !12309
  store %struct._object* %103, %struct._object** %target121, align 8, !dbg !12310, !tbaa !11308
  %105 = load %struct._object*, %struct._object** %target, align 8, !dbg !12311, !tbaa !2620
  %call122 = call %struct._object* @PyObject_GetAttrString(%struct._object* %105, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0)), !dbg !12312
  %106 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12313, !tbaa !2620
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %106, i32 0, i32 5, !dbg !12314
  store %struct._object* %call122, %struct._object** %handle_start, align 8, !dbg !12315, !tbaa !11486
  %107 = load %struct._object*, %struct._object** %target, align 8, !dbg !12316, !tbaa !2620
  %call123 = call %struct._object* @PyObject_GetAttrString(%struct._object* %107, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0)), !dbg !12317
  %108 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12318, !tbaa !2620
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %108, i32 0, i32 6, !dbg !12319
  store %struct._object* %call123, %struct._object** %handle_data, align 8, !dbg !12320, !tbaa !11457
  %109 = load %struct._object*, %struct._object** %target, align 8, !dbg !12321, !tbaa !2620
  %call124 = call %struct._object* @PyObject_GetAttrString(%struct._object* %109, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0)), !dbg !12322
  %110 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12323, !tbaa !2620
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %110, i32 0, i32 7, !dbg !12324
  store %struct._object* %call124, %struct._object** %handle_end, align 8, !dbg !12325, !tbaa !11428
  %111 = load %struct._object*, %struct._object** %target, align 8, !dbg !12326, !tbaa !2620
  %call125 = call %struct._object* @PyObject_GetAttrString(%struct._object* %111, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.136, i32 0, i32 0)), !dbg !12327
  %112 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12328, !tbaa !2620
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %112, i32 0, i32 8, !dbg !12329
  store %struct._object* %call125, %struct._object** %handle_comment, align 8, !dbg !12330, !tbaa !11399
  %113 = load %struct._object*, %struct._object** %target, align 8, !dbg !12331, !tbaa !2620
  %call126 = call %struct._object* @PyObject_GetAttrString(%struct._object* %113, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0)), !dbg !12332
  %114 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12333, !tbaa !2620
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %114, i32 0, i32 9, !dbg !12334
  store %struct._object* %call126, %struct._object** %handle_pi, align 8, !dbg !12335, !tbaa !11370
  %115 = load %struct._object*, %struct._object** %target, align 8, !dbg !12336, !tbaa !2620
  %call127 = call %struct._object* @PyObject_GetAttrString(%struct._object* %115, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0)), !dbg !12337
  %116 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12338, !tbaa !2620
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %116, i32 0, i32 11, !dbg !12339
  store %struct._object* %call127, %struct._object** %handle_close, align 8, !dbg !12340, !tbaa !11341
  %117 = load %struct._object*, %struct._object** %target, align 8, !dbg !12341, !tbaa !2620
  %call128 = call %struct._object* @PyObject_GetAttrString(%struct._object* %117, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0)), !dbg !12342
  %118 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12343, !tbaa !2620
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %118, i32 0, i32 10, !dbg !12344
  store %struct._object* %call128, %struct._object** %handle_doctype, align 8, !dbg !12345, !tbaa !11860
  call void @PyErr_Clear(), !dbg !12346
  %119 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12347, !tbaa !2620
  %SetUserData = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %119, i32 0, i32 19, !dbg !12348
  %120 = load void (%struct.XML_ParserStruct*, i8*)*, void (%struct.XML_ParserStruct*, i8*)** %SetUserData, align 8, !dbg !12348, !tbaa !12349
  %121 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12350, !tbaa !2620
  %parser129 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %121, i32 0, i32 1, !dbg !12351
  %122 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser129, align 8, !dbg !12351, !tbaa !11604
  %123 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12352, !tbaa !2620
  %124 = bitcast %struct.XMLParserObject* %123 to i8*, !dbg !12352
  call void %120(%struct.XML_ParserStruct* %122, i8* %124), !dbg !12353
  %125 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12354, !tbaa !2620
  %SetElementHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %125, i32 0, i32 15, !dbg !12355
  %126 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*)** %SetElementHandler, align 8, !dbg !12355, !tbaa !12356
  %127 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12357, !tbaa !2620
  %parser130 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %127, i32 0, i32 1, !dbg !12358
  %128 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser130, align 8, !dbg !12358, !tbaa !11604
  call void %126(%struct.XML_ParserStruct* %128, void (i8*, i8*, i8**)* bitcast (void (%struct.XMLParserObject*, i8*, i8**)* @expat_start_handler to void (i8*, i8*, i8**)*), void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_end_handler to void (i8*, i8*)*)), !dbg !12359
  %129 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12360, !tbaa !2620
  %SetDefaultHandlerExpand = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %129, i32 0, i32 14, !dbg !12361
  %130 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)** %SetDefaultHandlerExpand, align 8, !dbg !12361, !tbaa !12362
  %131 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12363, !tbaa !2620
  %parser131 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %131, i32 0, i32 1, !dbg !12364
  %132 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser131, align 8, !dbg !12364, !tbaa !11604
  call void %130(%struct.XML_ParserStruct* %132, void (i8*, i8*, i32)* bitcast (void (%struct.XMLParserObject*, i8*, i32)* @expat_default_handler to void (i8*, i8*, i32)*)), !dbg !12365
  %133 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12366, !tbaa !2620
  %SetCharacterDataHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %133, i32 0, i32 12, !dbg !12367
  %134 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i32)*)** %SetCharacterDataHandler, align 8, !dbg !12367, !tbaa !12368
  %135 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12369, !tbaa !2620
  %parser132 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %135, i32 0, i32 1, !dbg !12370
  %136 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser132, align 8, !dbg !12370, !tbaa !11604
  call void %134(%struct.XML_ParserStruct* %136, void (i8*, i8*, i32)* bitcast (void (%struct.XMLParserObject*, i8*, i32)* @expat_data_handler to void (i8*, i8*, i32)*)), !dbg !12371
  %137 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12372, !tbaa !2620
  %handle_comment133 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %137, i32 0, i32 8, !dbg !12374
  %138 = load %struct._object*, %struct._object** %handle_comment133, align 8, !dbg !12374, !tbaa !11399
  %tobool134 = icmp ne %struct._object* %138, null, !dbg !12372
  br i1 %tobool134, label %if.then.135, label %if.end.137, !dbg !12375

if.then.135:                                      ; preds = %if.end.120
  %139 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12376, !tbaa !2620
  %SetCommentHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %139, i32 0, i32 13, !dbg !12377
  %140 = load void (%struct.XML_ParserStruct*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*)*)** %SetCommentHandler, align 8, !dbg !12377, !tbaa !12378
  %141 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12379, !tbaa !2620
  %parser136 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %141, i32 0, i32 1, !dbg !12380
  %142 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser136, align 8, !dbg !12380, !tbaa !11604
  call void %140(%struct.XML_ParserStruct* %142, void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_comment_handler to void (i8*, i8*)*)), !dbg !12381
  br label %if.end.137, !dbg !12381

if.end.137:                                       ; preds = %if.then.135, %if.end.120
  %143 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12382, !tbaa !2620
  %handle_pi138 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %143, i32 0, i32 9, !dbg !12384
  %144 = load %struct._object*, %struct._object** %handle_pi138, align 8, !dbg !12384, !tbaa !11370
  %tobool139 = icmp ne %struct._object* %144, null, !dbg !12382
  br i1 %tobool139, label %if.then.140, label %if.end.142, !dbg !12385

if.then.140:                                      ; preds = %if.end.137
  %145 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12386, !tbaa !2620
  %SetProcessingInstructionHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %145, i32 0, i32 17, !dbg !12387
  %146 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*)** %SetProcessingInstructionHandler, align 8, !dbg !12387, !tbaa !12388
  %147 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12389, !tbaa !2620
  %parser141 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %147, i32 0, i32 1, !dbg !12390
  %148 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser141, align 8, !dbg !12390, !tbaa !11604
  call void %146(%struct.XML_ParserStruct* %148, void (i8*, i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*, i8*)* @expat_pi_handler to void (i8*, i8*, i8*)*)), !dbg !12391
  br label %if.end.142, !dbg !12391

if.end.142:                                       ; preds = %if.then.140, %if.end.137
  %149 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12392, !tbaa !2620
  %SetStartDoctypeDeclHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %149, i32 0, i32 20, !dbg !12393
  %150 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*, i8*, i32)*)** %SetStartDoctypeDeclHandler, align 8, !dbg !12393, !tbaa !12394
  %151 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12395, !tbaa !2620
  %parser143 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %151, i32 0, i32 1, !dbg !12396
  %152 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser143, align 8, !dbg !12396, !tbaa !11604
  call void %150(%struct.XML_ParserStruct* %152, void (i8*, i8*, i8*, i8*, i32)* bitcast (void (%struct.XMLParserObject*, i8*, i8*, i8*, i32)* @expat_start_doctype_handler to void (i8*, i8*, i8*, i8*, i32)*)), !dbg !12397
  %153 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12398, !tbaa !2620
  %SetUnknownEncodingHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %153, i32 0, i32 18, !dbg !12399
  %154 = load void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)*, void (%struct.XML_ParserStruct*, i32 (i8*, i8*, %struct.XML_Encoding*)*, i8*)** %SetUnknownEncodingHandler, align 8, !dbg !12399, !tbaa !12400
  %155 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self_xp, align 8, !dbg !12401, !tbaa !2620
  %parser144 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %155, i32 0, i32 1, !dbg !12402
  %156 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser144, align 8, !dbg !12402, !tbaa !11604
  %157 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12403, !tbaa !2620
  %DefaultUnknownEncodingHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %157, i32 0, i32 22, !dbg !12404
  %158 = load i32 (i8*, i8*, %struct.XML_Encoding*)*, i32 (i8*, i8*, %struct.XML_Encoding*)** %DefaultUnknownEncodingHandler, align 8, !dbg !12404, !tbaa !12405
  call void %154(%struct.XML_ParserStruct* %156, i32 (i8*, i8*, %struct.XML_Encoding*)* %158, i8* null), !dbg !12406
  store i32 0, i32* %retval, !dbg !12407
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12407

cleanup:                                          ; preds = %if.end.142, %do.end.117, %do.end.66, %do.end.19, %if.then.4, %if.then
  %159 = bitcast i8** %encoding to i8*, !dbg !12408
  call void @llvm.lifetime.end(i64 8, i8* %159) #1, !dbg !12408
  %160 = bitcast %struct._object** %html to i8*, !dbg !12408
  call void @llvm.lifetime.end(i64 8, i8* %160) #1, !dbg !12408
  %161 = bitcast %struct._object** %target to i8*, !dbg !12408
  call void @llvm.lifetime.end(i64 8, i8* %161) #1, !dbg !12408
  %162 = bitcast %struct.XMLParserObject** %self_xp to i8*, !dbg !12408
  call void @llvm.lifetime.end(i64 8, i8* %162) #1, !dbg !12408
  %163 = load i32, i32* %retval, !dbg !12408
  ret i32 %163, !dbg !12408
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.XMLParserObject*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2423, metadata !2613), !dbg !12409
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2424, metadata !2613), !dbg !12410
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2425, metadata !2613), !dbg !12411
  %0 = bitcast %struct.XMLParserObject** %self to i8*, !dbg !12412
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12412
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self, metadata !2426, metadata !2613), !dbg !12413
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !12414, !tbaa !2620
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 36, !dbg !12415
  %2 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !12415, !tbaa !5065
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !12416, !tbaa !2620
  %call = call %struct._object* %2(%struct._typeobject* %3, i64 0), !dbg !12414
  %4 = bitcast %struct._object* %call to %struct.XMLParserObject*, !dbg !12417
  store %struct.XMLParserObject* %4, %struct.XMLParserObject** %self, align 8, !dbg !12413, !tbaa !2620
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12418, !tbaa !2620
  %tobool = icmp ne %struct.XMLParserObject* %5, null, !dbg !12418
  br i1 %tobool, label %if.then, label %if.end, !dbg !12420

if.then:                                          ; preds = %entry
  %6 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12421, !tbaa !2620
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %6, i32 0, i32 1, !dbg !12423
  store %struct.XML_ParserStruct* null, %struct.XML_ParserStruct** %parser, align 8, !dbg !12424, !tbaa !11604
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12425, !tbaa !2620
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 4, !dbg !12426
  store %struct._object* null, %struct._object** %names, align 8, !dbg !12427, !tbaa !11571
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12428, !tbaa !2620
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 3, !dbg !12429
  store %struct._object* null, %struct._object** %entity, align 8, !dbg !12430, !tbaa !11297
  %9 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12431, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %9, i32 0, i32 2, !dbg !12432
  store %struct._object* null, %struct._object** %target, align 8, !dbg !12433, !tbaa !11308
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12434, !tbaa !2620
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %10, i32 0, i32 7, !dbg !12435
  store %struct._object* null, %struct._object** %handle_end, align 8, !dbg !12436, !tbaa !11428
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12437, !tbaa !2620
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 6, !dbg !12438
  store %struct._object* null, %struct._object** %handle_data, align 8, !dbg !12439, !tbaa !11457
  %12 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12440, !tbaa !2620
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %12, i32 0, i32 5, !dbg !12441
  store %struct._object* null, %struct._object** %handle_start, align 8, !dbg !12442, !tbaa !11486
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12443, !tbaa !2620
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %13, i32 0, i32 11, !dbg !12444
  store %struct._object* null, %struct._object** %handle_close, align 8, !dbg !12445, !tbaa !11341
  %14 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12446, !tbaa !2620
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %14, i32 0, i32 9, !dbg !12447
  store %struct._object* null, %struct._object** %handle_pi, align 8, !dbg !12448, !tbaa !11370
  %15 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12449, !tbaa !2620
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %15, i32 0, i32 8, !dbg !12450
  store %struct._object* null, %struct._object** %handle_comment, align 8, !dbg !12451, !tbaa !11399
  %16 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12452, !tbaa !2620
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %16, i32 0, i32 10, !dbg !12453
  store %struct._object* null, %struct._object** %handle_doctype, align 8, !dbg !12454, !tbaa !11860
  br label %if.end, !dbg !12455

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self, align 8, !dbg !12456, !tbaa !2620
  %18 = bitcast %struct.XMLParserObject* %17 to %struct._object*, !dbg !12457
  %19 = bitcast %struct.XMLParserObject** %self to i8*, !dbg !12458
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !12458
  ret %struct._object* %18, !dbg !12459
}

declare i32 @PyUnicode_CompareWithASCIIString(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_feed(%struct.XMLParserObject* %self, %struct._object* %arg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %data_len = alloca i64, align 8
  %data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %view = alloca %struct.bufferinfo, align 8
  %res = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1865, metadata !2613), !dbg !12460
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !1866, metadata !2613), !dbg !12461
  %0 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !12462, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !12463
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12463, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19, !dbg !12464
  %2 = load i64, i64* %tp_flags, align 8, !dbg !12464, !tbaa !3263
  %and = and i64 %2, 268435456, !dbg !12465
  %cmp = icmp ne i64 %and, 0, !dbg !12466
  br i1 %cmp, label %if.then, label %if.else, !dbg !12467

if.then:                                          ; preds = %entry
  %3 = bitcast i64* %data_len to i8*, !dbg !12468
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12468
  call void @llvm.dbg.declare(metadata i64* %data_len, metadata !1867, metadata !2613), !dbg !12469
  %4 = bitcast i8** %data to i8*, !dbg !12470
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12470
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1870, metadata !2613), !dbg !12471
  %5 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !12472, !tbaa !2620
  %call = call i8* @PyUnicode_AsUTF8AndSize(%struct._object* %5, i64* %data_len), !dbg !12473
  store i8* %call, i8** %data, align 8, !dbg !12471, !tbaa !2620
  %6 = load i8*, i8** %data, align 8, !dbg !12474, !tbaa !2620
  %cmp1 = icmp eq i8* %6, null, !dbg !12476
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !12477

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !12478
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12478

if.end:                                           ; preds = %if.then
  %7 = load i64, i64* %data_len, align 8, !dbg !12479, !tbaa !2742
  %cmp3 = icmp sgt i64 %7, 2147483647, !dbg !12481
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !12482

if.then.4:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !12483, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.114, i32 0, i32 0)), !dbg !12485
  store %struct._object* null, %struct._object** %retval, !dbg !12486
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12486

if.end.5:                                         ; preds = %if.end
  %9 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !12487, !tbaa !2620
  %SetEncoding = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %9, i32 0, i32 21, !dbg !12488
  %10 = load i32 (%struct.XML_ParserStruct*, i8*)*, i32 (%struct.XML_ParserStruct*, i8*)** %SetEncoding, align 8, !dbg !12488, !tbaa !12489
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12490, !tbaa !2620
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 1, !dbg !12491
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !12491, !tbaa !11604
  %call6 = call i32 %10(%struct.XML_ParserStruct* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0)), !dbg !12492
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12493, !tbaa !2620
  %14 = load i8*, i8** %data, align 8, !dbg !12494, !tbaa !2620
  %15 = load i64, i64* %data_len, align 8, !dbg !12495, !tbaa !2742
  %conv = trunc i64 %15 to i32, !dbg !12496
  %call7 = call %struct._object* @expat_parse(%struct.XMLParserObject* %13, i8* %14, i32 %conv, i32 0), !dbg !12497
  store %struct._object* %call7, %struct._object** %retval, !dbg !12498
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12498

cleanup:                                          ; preds = %if.end.5, %if.then.4, %if.then.2
  %16 = bitcast i8** %data to i8*, !dbg !12499
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !12499
  %17 = bitcast i64* %data_len to i8*, !dbg !12499
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !12499
  br label %return

if.else:                                          ; preds = %entry
  %18 = bitcast %struct.bufferinfo* %view to i8*, !dbg !12500
  call void @llvm.lifetime.start(i64 80, i8* %18) #1, !dbg !12500
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %view, metadata !1871, metadata !2613), !dbg !12501
  %19 = bitcast %struct._object** %res to i8*, !dbg !12502
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !12502
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1873, metadata !2613), !dbg !12503
  %20 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !12504, !tbaa !2620
  %call9 = call i32 @PyObject_GetBuffer(%struct._object* %20, %struct.bufferinfo* %view, i32 0), !dbg !12506
  %cmp10 = icmp slt i32 %call9, 0, !dbg !12507
  br i1 %cmp10, label %if.then.12, label %if.end.13, !dbg !12508

if.then.12:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !12509
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.21, !dbg !12509

if.end.13:                                        ; preds = %if.else
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2, !dbg !12510
  %21 = load i64, i64* %len, align 8, !dbg !12510, !tbaa !12512
  %cmp14 = icmp sgt i64 %21, 2147483647, !dbg !12514
  br i1 %cmp14, label %if.then.16, label %if.end.17, !dbg !12515

if.then.16:                                       ; preds = %if.end.13
  call void @PyBuffer_Release(%struct.bufferinfo* %view), !dbg !12516
  %22 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !12518, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.114, i32 0, i32 0)), !dbg !12519
  store %struct._object* null, %struct._object** %retval, !dbg !12520
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.21, !dbg !12520

if.end.17:                                        ; preds = %if.end.13
  %23 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12521, !tbaa !2620
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 0, !dbg !12522
  %24 = load i8*, i8** %buf, align 8, !dbg !12522, !tbaa !12523
  %len18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2, !dbg !12524
  %25 = load i64, i64* %len18, align 8, !dbg !12524, !tbaa !12512
  %conv19 = trunc i64 %25 to i32, !dbg !12525
  %call20 = call %struct._object* @expat_parse(%struct.XMLParserObject* %23, i8* %24, i32 %conv19, i32 0), !dbg !12526
  store %struct._object* %call20, %struct._object** %res, align 8, !dbg !12527, !tbaa !2620
  call void @PyBuffer_Release(%struct.bufferinfo* %view), !dbg !12528
  %26 = load %struct._object*, %struct._object** %res, align 8, !dbg !12529, !tbaa !2620
  store %struct._object* %26, %struct._object** %retval, !dbg !12530
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.21, !dbg !12530

cleanup.21:                                       ; preds = %if.end.17, %if.then.16, %if.then.12
  %27 = bitcast %struct._object** %res to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !12531
  %28 = bitcast %struct.bufferinfo* %view to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 80, i8* %28) #1, !dbg !12531
  br label %return

return:                                           ; preds = %cleanup.21, %cleanup
  %29 = load %struct._object*, %struct._object** %retval, !dbg !12532
  ret %struct._object* %29, !dbg !12532
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_close(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1926, metadata !2613), !dbg !12533
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1927, metadata !2613), !dbg !12534
  %0 = bitcast %struct._object** %res to i8*, !dbg !12535
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12535
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1928, metadata !2613), !dbg !12536
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12537, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0)), !dbg !12539
  %tobool = icmp ne i32 %call, 0, !dbg !12539
  br i1 %tobool, label %if.end, label %if.then, !dbg !12540

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12541
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12541

if.end:                                           ; preds = %entry
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12542, !tbaa !2620
  %call1 = call %struct._object* @expat_parse(%struct.XMLParserObject* %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 1), !dbg !12543
  store %struct._object* %call1, %struct._object** %res, align 8, !dbg !12544, !tbaa !2620
  %3 = load %struct._object*, %struct._object** %res, align 8, !dbg !12545, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %3, null, !dbg !12545
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !12547

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !12548
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12548

if.end.4:                                         ; preds = %if.end
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12549, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %4, i32 0, i32 2, !dbg !12550
  %5 = load %struct._object*, %struct._object** %target, align 8, !dbg !12550, !tbaa !11308
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !12551
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12551, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %6, @TreeBuilder_Type, !dbg !12552
  br i1 %cmp, label %if.then.5, label %if.else.12, !dbg !12553

if.then.5:                                        ; preds = %if.end.4
  br label %do.body, !dbg !12554

do.body:                                          ; preds = %if.then.5
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12555
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !12555
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1929, metadata !2613), !dbg !12557
  %8 = load %struct._object*, %struct._object** %res, align 8, !dbg !12558, !tbaa !2620
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !12557, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12559, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !12561
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !12562, !tbaa !2631
  %dec = add i64 %10, -1, !dbg !12562
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12562, !tbaa !2631
  %cmp6 = icmp ne i64 %dec, 0, !dbg !12563
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !12564

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !12565

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12567, !tbaa !2620
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12569
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !12569, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !12570
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12570, !tbaa !2705
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12571, !tbaa !2620
  call void %13(%struct._object* %14), !dbg !12572
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.7
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12573
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !12573
  br label %do.cond, !dbg !12575

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !12576

do.end:                                           ; preds = %do.cond
  %16 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12578, !tbaa !2620
  %target10 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %16, i32 0, i32 2, !dbg !12579
  %17 = load %struct._object*, %struct._object** %target10, align 8, !dbg !12579, !tbaa !11308
  %18 = bitcast %struct._object* %17 to %struct.TreeBuilderObject*, !dbg !12580
  %call11 = call %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %18), !dbg !12581
  store %struct._object* %call11, %struct._object** %retval, !dbg !12582
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12582

if.else.12:                                       ; preds = %if.end.4
  %19 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12583, !tbaa !2620
  %handle_close = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %19, i32 0, i32 11, !dbg !12584
  %20 = load %struct._object*, %struct._object** %handle_close, align 8, !dbg !12584, !tbaa !11341
  %tobool13 = icmp ne %struct._object* %20, null, !dbg !12583
  br i1 %tobool13, label %if.then.14, label %if.else.29, !dbg !12585

if.then.14:                                       ; preds = %if.else.12
  br label %do.body.15, !dbg !12586

do.body.15:                                       ; preds = %if.then.14
  %21 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !12587
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !12587
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !1933, metadata !2613), !dbg !12589
  %22 = load %struct._object*, %struct._object** %res, align 8, !dbg !12590, !tbaa !2620
  store %struct._object* %22, %struct._object** %_py_decref_tmp16, align 8, !dbg !12589, !tbaa !2620
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12591, !tbaa !2620
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !12593
  %24 = load i64, i64* %ob_refcnt17, align 8, !dbg !12594, !tbaa !2631
  %dec18 = add i64 %24, -1, !dbg !12594
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !12594, !tbaa !2631
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !12595
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !12596

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !12597

if.else.21:                                       ; preds = %do.body.15
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12599, !tbaa !2620
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !12601
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !12601, !tbaa !2703
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !12602
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !12602, !tbaa !2705
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12603, !tbaa !2620
  call void %27(%struct._object* %28), !dbg !12604
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %29 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !12605
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !12605
  br label %do.cond.25, !dbg !12607

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !12608

do.end.26:                                        ; preds = %do.cond.25
  %30 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12610, !tbaa !2620
  %handle_close27 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %30, i32 0, i32 11, !dbg !12611
  %31 = load %struct._object*, %struct._object** %handle_close27, align 8, !dbg !12611, !tbaa !11341
  %call28 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0)), !dbg !12612
  store %struct._object* %call28, %struct._object** %retval, !dbg !12613
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12613

if.else.29:                                       ; preds = %if.else.12
  %32 = load %struct._object*, %struct._object** %res, align 8, !dbg !12614, !tbaa !2620
  store %struct._object* %32, %struct._object** %retval, !dbg !12616
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12616

cleanup:                                          ; preds = %if.else.29, %do.end.26, %do.end, %if.then.3, %if.then
  %33 = bitcast %struct._object** %res to i8*, !dbg !12617
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !12617
  %34 = load %struct._object*, %struct._object** %retval, !dbg !12617
  ret %struct._object* %34, !dbg !12617
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_parse_whole(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %reader = alloca %struct._object*, align 8
  %buffer = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %fileobj = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  %_py_decref_tmp79 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_decref_tmp108 = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  %_py_decref_tmp140 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1939, metadata !2613), !dbg !12618
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1940, metadata !2613), !dbg !12619
  %0 = bitcast %struct._object** %reader to i8*, !dbg !12620
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12620
  call void @llvm.dbg.declare(metadata %struct._object** %reader, metadata !1941, metadata !2613), !dbg !12621
  %1 = bitcast %struct._object** %buffer to i8*, !dbg !12622
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12622
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !1942, metadata !2613), !dbg !12623
  %2 = bitcast %struct._object** %temp to i8*, !dbg !12624
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12624
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1943, metadata !2613), !dbg !12625
  %3 = bitcast %struct._object** %res to i8*, !dbg !12626
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12626
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1944, metadata !2613), !dbg !12627
  %4 = bitcast %struct._object** %fileobj to i8*, !dbg !12628
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12628
  call void @llvm.dbg.declare(metadata %struct._object** %fileobj, metadata !1945, metadata !2613), !dbg !12629
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12630, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0), %struct._object** %fileobj), !dbg !12632
  %tobool = icmp ne i32 %call, 0, !dbg !12632
  br i1 %tobool, label %if.end, label %if.then, !dbg !12633

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12634
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12634

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %fileobj, align 8, !dbg !12635, !tbaa !2620
  %call1 = call %struct._object* @PyObject_GetAttrString(%struct._object* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0)), !dbg !12636
  store %struct._object* %call1, %struct._object** %reader, align 8, !dbg !12637, !tbaa !2620
  %7 = load %struct._object*, %struct._object** %reader, align 8, !dbg !12638, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !12638
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !12640

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !12641
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12641

if.end.4:                                         ; preds = %if.end
  br label %for.cond, !dbg !12642

for.cond:                                         ; preds = %do.end.119, %if.end.4
  %8 = load %struct._object*, %struct._object** %reader, align 8, !dbg !12643, !tbaa !2620
  %call5 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i32 0, i32 0), i32 65536), !dbg !12644
  store %struct._object* %call5, %struct._object** %buffer, align 8, !dbg !12645, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12646, !tbaa !2620
  %tobool6 = icmp ne %struct._object* %9, null, !dbg !12646
  br i1 %tobool6, label %if.end.10, label %if.then.7, !dbg !12647

if.then.7:                                        ; preds = %for.cond
  br label %do.body, !dbg !12648

do.body:                                          ; preds = %if.then.7
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12649
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !12649
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1946, metadata !2613), !dbg !12651
  %11 = load %struct._object*, %struct._object** %reader, align 8, !dbg !12652, !tbaa !2620
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !12651, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12653, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !12655
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !12656, !tbaa !2631
  %dec = add i64 %13, -1, !dbg !12656
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12656, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !12657
  br i1 %cmp, label %if.then.8, label %if.else, !dbg !12658

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !12659

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12661, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !12663
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12663, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !12664
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12664, !tbaa !2705
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12665, !tbaa !2620
  call void %16(%struct._object* %17), !dbg !12666
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12667
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !12667
  br label %do.cond, !dbg !12669

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !12670

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12672
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12672

if.end.10:                                        ; preds = %for.cond
  %19 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12673, !tbaa !2620
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !12674
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !12674, !tbaa !2703
  %cmp12 = icmp eq %struct._typeobject* %20, @PyUnicode_Type, !dbg !12675
  br i1 %cmp12, label %if.then.13, label %if.else.57, !dbg !12676

if.then.13:                                       ; preds = %if.end.10
  %21 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12677, !tbaa !2620
  %22 = bitcast %struct._object* %21 to %struct.PyASCIIObject*, !dbg !12678
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %22, i32 0, i32 1, !dbg !12679
  %23 = load i64, i64* %length, align 8, !dbg !12679, !tbaa !10519
  %cmp14 = icmp eq i64 %23, 0, !dbg !12680
  br i1 %cmp14, label %if.then.15, label %if.end.28, !dbg !12681

if.then.15:                                       ; preds = %if.then.13
  br label %do.body.16, !dbg !12682

do.body.16:                                       ; preds = %if.then.15
  %24 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !12683
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !12683
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp17, metadata !1953, metadata !2613), !dbg !12685
  %25 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12686, !tbaa !2620
  store %struct._object* %25, %struct._object** %_py_decref_tmp17, align 8, !dbg !12685, !tbaa !2620
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !12687, !tbaa !2620
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !12689
  %27 = load i64, i64* %ob_refcnt18, align 8, !dbg !12690, !tbaa !2631
  %dec19 = add i64 %27, -1, !dbg !12690
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !12690, !tbaa !2631
  %cmp20 = icmp ne i64 %dec19, 0, !dbg !12691
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !12692

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25, !dbg !12693

if.else.22:                                       ; preds = %do.body.16
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !12695, !tbaa !2620
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !12697
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !12697, !tbaa !2703
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !12698
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !12698, !tbaa !2705
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !12699, !tbaa !2620
  call void %30(%struct._object* %31), !dbg !12700
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  %32 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !12701
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !12701
  br label %do.cond.26, !dbg !12703

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !12704

do.end.27:                                        ; preds = %do.cond.26
  br label %for.end, !dbg !12706

if.end.28:                                        ; preds = %if.then.13
  %33 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12707, !tbaa !2620
  %call29 = call %struct._object* @PyUnicode_AsEncodedString(%struct._object* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.123, i32 0, i32 0)), !dbg !12708
  store %struct._object* %call29, %struct._object** %temp, align 8, !dbg !12709, !tbaa !2620
  br label %do.body.30, !dbg !12710

do.body.30:                                       ; preds = %if.end.28
  %34 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !12711
  call void @llvm.lifetime.start(i64 8, i8* %34) #1, !dbg !12711
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !1959, metadata !2613), !dbg !12713
  %35 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12714, !tbaa !2620
  store %struct._object* %35, %struct._object** %_py_decref_tmp31, align 8, !dbg !12713, !tbaa !2620
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !12715, !tbaa !2620
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !12717
  %37 = load i64, i64* %ob_refcnt32, align 8, !dbg !12718, !tbaa !2631
  %dec33 = add i64 %37, -1, !dbg !12718
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !12718, !tbaa !2631
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !12719
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !12720

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !12721

if.else.36:                                       ; preds = %do.body.30
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !12723, !tbaa !2620
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !12725
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !12725, !tbaa !2703
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !12726
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !12726, !tbaa !2705
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !12727, !tbaa !2620
  call void %40(%struct._object* %41), !dbg !12728
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %42 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !12729
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !12729
  br label %do.cond.40, !dbg !12731

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !12732

do.end.41:                                        ; preds = %do.cond.40
  %43 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12734, !tbaa !2620
  %tobool42 = icmp ne %struct._object* %43, null, !dbg !12734
  br i1 %tobool42, label %if.end.56, label %if.then.43, !dbg !12735

if.then.43:                                       ; preds = %do.end.41
  br label %do.body.44, !dbg !12736

do.body.44:                                       ; preds = %if.then.43
  %44 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !12737
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !12737
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp45, metadata !1961, metadata !2613), !dbg !12739
  %45 = load %struct._object*, %struct._object** %reader, align 8, !dbg !12740, !tbaa !2620
  store %struct._object* %45, %struct._object** %_py_decref_tmp45, align 8, !dbg !12739, !tbaa !2620
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !12741, !tbaa !2620
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !12743
  %47 = load i64, i64* %ob_refcnt46, align 8, !dbg !12744, !tbaa !2631
  %dec47 = add i64 %47, -1, !dbg !12744
  store i64 %dec47, i64* %ob_refcnt46, align 8, !dbg !12744, !tbaa !2631
  %cmp48 = icmp ne i64 %dec47, 0, !dbg !12745
  br i1 %cmp48, label %if.then.49, label %if.else.50, !dbg !12746

if.then.49:                                       ; preds = %do.body.44
  br label %if.end.53, !dbg !12747

if.else.50:                                       ; preds = %do.body.44
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !12749, !tbaa !2620
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !12751
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !12751, !tbaa !2703
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !12752
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8, !dbg !12752, !tbaa !2705
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !12753, !tbaa !2620
  call void %50(%struct._object* %51), !dbg !12754
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  %52 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !12755
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !12755
  br label %do.cond.54, !dbg !12757

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !12758

do.end.55:                                        ; preds = %do.cond.54
  store %struct._object* null, %struct._object** %retval, !dbg !12760
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12760

if.end.56:                                        ; preds = %do.end.41
  %53 = load %struct._object*, %struct._object** %temp, align 8, !dbg !12761, !tbaa !2620
  store %struct._object* %53, %struct._object** %buffer, align 8, !dbg !12762, !tbaa !2620
  br label %if.end.75, !dbg !12763

if.else.57:                                       ; preds = %if.end.10
  %54 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12764, !tbaa !2620
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !12765
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !12765, !tbaa !2703
  %cmp59 = icmp eq %struct._typeobject* %55, @PyBytes_Type, !dbg !12766
  br i1 %cmp59, label %lor.lhs.false, label %if.then.61, !dbg !12767

lor.lhs.false:                                    ; preds = %if.else.57
  %56 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12768, !tbaa !2620
  %57 = bitcast %struct._object* %56 to %struct.PyVarObject*, !dbg !12770
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %57, i32 0, i32 1, !dbg !12771
  %58 = load i64, i64* %ob_size, align 8, !dbg !12771, !tbaa !5289
  %cmp60 = icmp eq i64 %58, 0, !dbg !12772
  br i1 %cmp60, label %if.then.61, label %if.end.74, !dbg !12773

if.then.61:                                       ; preds = %lor.lhs.false, %if.else.57
  br label %do.body.62, !dbg !12774

do.body.62:                                       ; preds = %if.then.61
  %59 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !12775
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !12775
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp63, metadata !1965, metadata !2613), !dbg !12777
  %60 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12778, !tbaa !2620
  store %struct._object* %60, %struct._object** %_py_decref_tmp63, align 8, !dbg !12777, !tbaa !2620
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !12779, !tbaa !2620
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !12781
  %62 = load i64, i64* %ob_refcnt64, align 8, !dbg !12782, !tbaa !2631
  %dec65 = add i64 %62, -1, !dbg !12782
  store i64 %dec65, i64* %ob_refcnt64, align 8, !dbg !12782, !tbaa !2631
  %cmp66 = icmp ne i64 %dec65, 0, !dbg !12783
  br i1 %cmp66, label %if.then.67, label %if.else.68, !dbg !12784

if.then.67:                                       ; preds = %do.body.62
  br label %if.end.71, !dbg !12785

if.else.68:                                       ; preds = %do.body.62
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !12787, !tbaa !2620
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !12789
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8, !dbg !12789, !tbaa !2703
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !12790
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8, !dbg !12790, !tbaa !2705
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !12791, !tbaa !2620
  call void %65(%struct._object* %66), !dbg !12792
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  %67 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !12793
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !12793
  br label %do.cond.72, !dbg !12795

do.cond.72:                                       ; preds = %if.end.71
  br label %do.end.73, !dbg !12796

do.end.73:                                        ; preds = %do.cond.72
  br label %for.end, !dbg !12798

if.end.74:                                        ; preds = %lor.lhs.false
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %if.end.56
  %68 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12799, !tbaa !2620
  %69 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12800, !tbaa !2620
  %70 = bitcast %struct._object* %69 to %struct.PyBytesObject*, !dbg !12801
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %70, i32 0, i32 2, !dbg !12802
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12803
  %71 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12804, !tbaa !2620
  %72 = bitcast %struct._object* %71 to %struct.PyVarObject*, !dbg !12805
  %ob_size76 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %72, i32 0, i32 1, !dbg !12806
  %73 = load i64, i64* %ob_size76, align 8, !dbg !12806, !tbaa !5289
  %conv = trunc i64 %73 to i32, !dbg !12807
  %call77 = call %struct._object* @expat_parse(%struct.XMLParserObject* %68, i8* %arraydecay, i32 %conv, i32 0), !dbg !12808
  store %struct._object* %call77, %struct._object** %res, align 8, !dbg !12809, !tbaa !2620
  br label %do.body.78, !dbg !12810

do.body.78:                                       ; preds = %if.end.75
  %74 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !12811
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !12811
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp79, metadata !1969, metadata !2613), !dbg !12813
  %75 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12814, !tbaa !2620
  store %struct._object* %75, %struct._object** %_py_decref_tmp79, align 8, !dbg !12813, !tbaa !2620
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !12815, !tbaa !2620
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !12817
  %77 = load i64, i64* %ob_refcnt80, align 8, !dbg !12818, !tbaa !2631
  %dec81 = add i64 %77, -1, !dbg !12818
  store i64 %dec81, i64* %ob_refcnt80, align 8, !dbg !12818, !tbaa !2631
  %cmp82 = icmp ne i64 %dec81, 0, !dbg !12819
  br i1 %cmp82, label %if.then.84, label %if.else.85, !dbg !12820

if.then.84:                                       ; preds = %do.body.78
  br label %if.end.88, !dbg !12821

if.else.85:                                       ; preds = %do.body.78
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !12823, !tbaa !2620
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !12825
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !12825, !tbaa !2703
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !12826
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8, !dbg !12826, !tbaa !2705
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !12827, !tbaa !2620
  call void %80(%struct._object* %81), !dbg !12828
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  %82 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !12829
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !12829
  br label %do.cond.89, !dbg !12831

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !12832

do.end.90:                                        ; preds = %do.cond.89
  %83 = load %struct._object*, %struct._object** %res, align 8, !dbg !12834, !tbaa !2620
  %tobool91 = icmp ne %struct._object* %83, null, !dbg !12834
  br i1 %tobool91, label %if.end.106, label %if.then.92, !dbg !12835

if.then.92:                                       ; preds = %do.end.90
  br label %do.body.93, !dbg !12836

do.body.93:                                       ; preds = %if.then.92
  %84 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !12837
  call void @llvm.lifetime.start(i64 8, i8* %84) #1, !dbg !12837
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !1971, metadata !2613), !dbg !12839
  %85 = load %struct._object*, %struct._object** %reader, align 8, !dbg !12840, !tbaa !2620
  store %struct._object* %85, %struct._object** %_py_decref_tmp94, align 8, !dbg !12839, !tbaa !2620
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !12841, !tbaa !2620
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !12843
  %87 = load i64, i64* %ob_refcnt95, align 8, !dbg !12844, !tbaa !2631
  %dec96 = add i64 %87, -1, !dbg !12844
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !12844, !tbaa !2631
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !12845
  br i1 %cmp97, label %if.then.99, label %if.else.100, !dbg !12846

if.then.99:                                       ; preds = %do.body.93
  br label %if.end.103, !dbg !12847

if.else.100:                                      ; preds = %do.body.93
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !12849, !tbaa !2620
  %ob_type101 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !12851
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type101, align 8, !dbg !12851, !tbaa !2703
  %tp_dealloc102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !12852
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc102, align 8, !dbg !12852, !tbaa !2705
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !12853, !tbaa !2620
  call void %90(%struct._object* %91), !dbg !12854
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.100, %if.then.99
  %92 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !12855
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !12855
  br label %do.cond.104, !dbg !12857

do.cond.104:                                      ; preds = %if.end.103
  br label %do.end.105, !dbg !12858

do.end.105:                                       ; preds = %do.cond.104
  store %struct._object* null, %struct._object** %retval, !dbg !12860
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12860

if.end.106:                                       ; preds = %do.end.90
  br label %do.body.107, !dbg !12861

do.body.107:                                      ; preds = %if.end.106
  %93 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !12862
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !12862
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp108, metadata !1975, metadata !2613), !dbg !12864
  %94 = load %struct._object*, %struct._object** %res, align 8, !dbg !12865, !tbaa !2620
  store %struct._object* %94, %struct._object** %_py_decref_tmp108, align 8, !dbg !12864, !tbaa !2620
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !12866, !tbaa !2620
  %ob_refcnt109 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !12868
  %96 = load i64, i64* %ob_refcnt109, align 8, !dbg !12869, !tbaa !2631
  %dec110 = add i64 %96, -1, !dbg !12869
  store i64 %dec110, i64* %ob_refcnt109, align 8, !dbg !12869, !tbaa !2631
  %cmp111 = icmp ne i64 %dec110, 0, !dbg !12870
  br i1 %cmp111, label %if.then.113, label %if.else.114, !dbg !12871

if.then.113:                                      ; preds = %do.body.107
  br label %if.end.117, !dbg !12872

if.else.114:                                      ; preds = %do.body.107
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !12874, !tbaa !2620
  %ob_type115 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !12876
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type115, align 8, !dbg !12876, !tbaa !2703
  %tp_dealloc116 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !12877
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc116, align 8, !dbg !12877, !tbaa !2705
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp108, align 8, !dbg !12878, !tbaa !2620
  call void %99(%struct._object* %100), !dbg !12879
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.114, %if.then.113
  %101 = bitcast %struct._object** %_py_decref_tmp108 to i8*, !dbg !12880
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !12880
  br label %do.cond.118, !dbg !12881

do.cond.118:                                      ; preds = %if.end.117
  br label %do.end.119, !dbg !12882

do.end.119:                                       ; preds = %do.cond.118
  br label %for.cond, !dbg !12884

for.end:                                          ; preds = %do.end.73, %do.end.27
  br label %do.body.120, !dbg !12885

do.body.120:                                      ; preds = %for.end
  %102 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !12886
  call void @llvm.lifetime.start(i64 8, i8* %102) #1, !dbg !12886
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp121, metadata !1977, metadata !2613), !dbg !12888
  %103 = load %struct._object*, %struct._object** %reader, align 8, !dbg !12889, !tbaa !2620
  store %struct._object* %103, %struct._object** %_py_decref_tmp121, align 8, !dbg !12888, !tbaa !2620
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !12890, !tbaa !2620
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0, !dbg !12892
  %105 = load i64, i64* %ob_refcnt122, align 8, !dbg !12893, !tbaa !2631
  %dec123 = add i64 %105, -1, !dbg !12893
  store i64 %dec123, i64* %ob_refcnt122, align 8, !dbg !12893, !tbaa !2631
  %cmp124 = icmp ne i64 %dec123, 0, !dbg !12894
  br i1 %cmp124, label %if.then.126, label %if.else.127, !dbg !12895

if.then.126:                                      ; preds = %do.body.120
  br label %if.end.130, !dbg !12896

if.else.127:                                      ; preds = %do.body.120
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !12898, !tbaa !2620
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1, !dbg !12900
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8, !dbg !12900, !tbaa !2703
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4, !dbg !12901
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8, !dbg !12901, !tbaa !2705
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !12902, !tbaa !2620
  call void %108(%struct._object* %109), !dbg !12903
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  %110 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !12904
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !12904
  br label %do.cond.131, !dbg !12906

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !12907

do.end.132:                                       ; preds = %do.cond.131
  %111 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12909, !tbaa !2620
  %call133 = call %struct._object* @expat_parse(%struct.XMLParserObject* %111, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 1), !dbg !12910
  store %struct._object* %call133, %struct._object** %res, align 8, !dbg !12911, !tbaa !2620
  %112 = load %struct._object*, %struct._object** %res, align 8, !dbg !12912, !tbaa !2620
  %tobool134 = icmp ne %struct._object* %112, null, !dbg !12912
  br i1 %tobool134, label %land.lhs.true, label %if.end.154, !dbg !12913

land.lhs.true:                                    ; preds = %do.end.132
  %113 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12914, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %113, i32 0, i32 2, !dbg !12916
  %114 = load %struct._object*, %struct._object** %target, align 8, !dbg !12916, !tbaa !11308
  %ob_type135 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !12917
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type135, align 8, !dbg !12917, !tbaa !2703
  %cmp136 = icmp eq %struct._typeobject* %115, @TreeBuilder_Type, !dbg !12918
  br i1 %cmp136, label %if.then.138, label %if.end.154, !dbg !12919

if.then.138:                                      ; preds = %land.lhs.true
  br label %do.body.139, !dbg !12920

do.body.139:                                      ; preds = %if.then.138
  %116 = bitcast %struct._object** %_py_decref_tmp140 to i8*, !dbg !12921
  call void @llvm.lifetime.start(i64 8, i8* %116) #1, !dbg !12921
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp140, metadata !1979, metadata !2613), !dbg !12923
  %117 = load %struct._object*, %struct._object** %res, align 8, !dbg !12924, !tbaa !2620
  store %struct._object* %117, %struct._object** %_py_decref_tmp140, align 8, !dbg !12923, !tbaa !2620
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp140, align 8, !dbg !12925, !tbaa !2620
  %ob_refcnt141 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 0, !dbg !12927
  %119 = load i64, i64* %ob_refcnt141, align 8, !dbg !12928, !tbaa !2631
  %dec142 = add i64 %119, -1, !dbg !12928
  store i64 %dec142, i64* %ob_refcnt141, align 8, !dbg !12928, !tbaa !2631
  %cmp143 = icmp ne i64 %dec142, 0, !dbg !12929
  br i1 %cmp143, label %if.then.145, label %if.else.146, !dbg !12930

if.then.145:                                      ; preds = %do.body.139
  br label %if.end.149, !dbg !12931

if.else.146:                                      ; preds = %do.body.139
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp140, align 8, !dbg !12933, !tbaa !2620
  %ob_type147 = getelementptr inbounds %struct._object, %struct._object* %120, i32 0, i32 1, !dbg !12935
  %121 = load %struct._typeobject*, %struct._typeobject** %ob_type147, align 8, !dbg !12935, !tbaa !2703
  %tp_dealloc148 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %121, i32 0, i32 4, !dbg !12936
  %122 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc148, align 8, !dbg !12936, !tbaa !2705
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp140, align 8, !dbg !12937, !tbaa !2620
  call void %122(%struct._object* %123), !dbg !12938
  br label %if.end.149

if.end.149:                                       ; preds = %if.else.146, %if.then.145
  %124 = bitcast %struct._object** %_py_decref_tmp140 to i8*, !dbg !12939
  call void @llvm.lifetime.end(i64 8, i8* %124) #1, !dbg !12939
  br label %do.cond.150, !dbg !12941

do.cond.150:                                      ; preds = %if.end.149
  br label %do.end.151, !dbg !12942

do.end.151:                                       ; preds = %do.cond.150
  %125 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12944, !tbaa !2620
  %target152 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %125, i32 0, i32 2, !dbg !12945
  %126 = load %struct._object*, %struct._object** %target152, align 8, !dbg !12945, !tbaa !11308
  %127 = bitcast %struct._object* %126 to %struct.TreeBuilderObject*, !dbg !12946
  %call153 = call %struct._object* @treebuilder_done(%struct.TreeBuilderObject* %127), !dbg !12947
  store %struct._object* %call153, %struct._object** %retval, !dbg !12948
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12948

if.end.154:                                       ; preds = %land.lhs.true, %do.end.132
  %128 = load %struct._object*, %struct._object** %res, align 8, !dbg !12949, !tbaa !2620
  store %struct._object* %128, %struct._object** %retval, !dbg !12950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12950

cleanup:                                          ; preds = %if.end.154, %do.end.151, %do.end.105, %do.end.55, %do.end, %if.then.3, %if.then
  %129 = bitcast %struct._object** %fileobj to i8*, !dbg !12951
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !12951
  %130 = bitcast %struct._object** %res to i8*, !dbg !12951
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !12951
  %131 = bitcast %struct._object** %temp to i8*, !dbg !12951
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !12951
  %132 = bitcast %struct._object** %buffer to i8*, !dbg !12951
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !12951
  %133 = bitcast %struct._object** %reader to i8*, !dbg !12951
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !12951
  %134 = load %struct._object*, %struct._object** %retval, !dbg !12951
  ret %struct._object* %134, !dbg !12951
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_setevents(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %seqlen = alloca i64, align 8
  %target = alloca %struct.TreeBuilderObject*, align 8
  %events_queue = alloca %struct._object*, align 8
  %events_to_report = alloca %struct._object*, align 8
  %events_seq = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  %_py_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_tmp57 = alloca %struct._object*, align 8
  %_py_decref_tmp62 = alloca %struct._object*, align 8
  %_py_tmp77 = alloca %struct._object*, align 8
  %_py_decref_tmp82 = alloca %struct._object*, align 8
  %event_name_obj = alloca %struct._object*, align 8
  %event_name = alloca i8*, align 8
  %_py_decref_tmp129 = alloca %struct._object*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp181 = alloca i32, align 4
  %__s1_len194 = alloca i64, align 8
  %__s2_len196 = alloca i64, align 8
  %tmp197 = alloca i32, align 4
  %__s1203 = alloca i8*, align 8
  %__result205 = alloca i32, align 4
  %tmp243 = alloca i32, align 4
  %_py_xdecref_tmp255 = alloca %struct._object*, align 8
  %_py_decref_tmp262 = alloca %struct._object*, align 8
  %__s1_len280 = alloca i64, align 8
  %__s2_len282 = alloca i64, align 8
  %tmp283 = alloca i32, align 4
  %__s1289 = alloca i8*, align 8
  %__result291 = alloca i32, align 4
  %tmp329 = alloca i32, align 4
  %_py_xdecref_tmp341 = alloca %struct._object*, align 8
  %_py_decref_tmp348 = alloca %struct._object*, align 8
  %__s1_len366 = alloca i64, align 8
  %__s2_len368 = alloca i64, align 8
  %tmp369 = alloca i32, align 4
  %__s1375 = alloca i8*, align 8
  %__result377 = alloca i32, align 4
  %tmp415 = alloca i32, align 4
  %_py_xdecref_tmp427 = alloca %struct._object*, align 8
  %_py_decref_tmp434 = alloca %struct._object*, align 8
  %_py_decref_tmp455 = alloca %struct._object*, align 8
  %_py_decref_tmp477 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1985, metadata !2613), !dbg !12952
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1986, metadata !2613), !dbg !12953
  %0 = bitcast i64* %i to i8*, !dbg !12954
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !12954
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1987, metadata !2613), !dbg !12955
  %1 = bitcast i64* %seqlen to i8*, !dbg !12954
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !12954
  call void @llvm.dbg.declare(metadata i64* %seqlen, metadata !1988, metadata !2613), !dbg !12956
  %2 = bitcast %struct.TreeBuilderObject** %target to i8*, !dbg !12957
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !12957
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %target, metadata !1989, metadata !2613), !dbg !12958
  %3 = bitcast %struct._object** %events_queue to i8*, !dbg !12959
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !12959
  call void @llvm.dbg.declare(metadata %struct._object** %events_queue, metadata !1990, metadata !2613), !dbg !12960
  %4 = bitcast %struct._object** %events_to_report to i8*, !dbg !12961
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !12961
  call void @llvm.dbg.declare(metadata %struct._object** %events_to_report, metadata !1991, metadata !2613), !dbg !12962
  store %struct._object* @_Py_NoneStruct, %struct._object** %events_to_report, align 8, !dbg !12962, !tbaa !2620
  %5 = bitcast %struct._object** %events_seq to i8*, !dbg !12963
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !12963
  call void @llvm.dbg.declare(metadata %struct._object** %events_seq, metadata !1992, metadata !2613), !dbg !12964
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12965, !tbaa !2620
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0), %struct._typeobject* @PyList_Type, %struct._object** %events_queue, %struct._object** %events_to_report), !dbg !12967
  %tobool = icmp ne i32 %call, 0, !dbg !12967
  br i1 %tobool, label %if.end, label %if.then, !dbg !12968

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12969
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.490, !dbg !12969

if.end:                                           ; preds = %entry
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12970, !tbaa !2620
  %target1 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 2, !dbg !12972
  %8 = load %struct._object*, %struct._object** %target1, align 8, !dbg !12972, !tbaa !11308
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !12973
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12973, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %9, @TreeBuilder_Type, !dbg !12974
  br i1 %cmp, label %if.end.3, label %if.then.2, !dbg !12975

if.then.2:                                        ; preds = %if.end
  %10 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !12976, !tbaa !2620
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.125, i32 0, i32 0)), !dbg !12978
  store %struct._object* null, %struct._object** %retval, !dbg !12979
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.490, !dbg !12979

if.end.3:                                         ; preds = %if.end
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !12980, !tbaa !2620
  %target4 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 2, !dbg !12981
  %12 = load %struct._object*, %struct._object** %target4, align 8, !dbg !12981, !tbaa !11308
  %13 = bitcast %struct._object* %12 to %struct.TreeBuilderObject*, !dbg !12982
  store %struct.TreeBuilderObject* %13, %struct.TreeBuilderObject** %target, align 8, !dbg !12983, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %events_queue, align 8, !dbg !12984, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !12985
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !12986, !tbaa !2631
  %inc = add i64 %15, 1, !dbg !12986
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12986, !tbaa !2631
  br label %do.body, !dbg !12987

do.body:                                          ; preds = %if.end.3
  %16 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12988
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !12988
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1993, metadata !2613), !dbg !12990
  %17 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !12991, !tbaa !2620
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %17, i32 0, i32 8, !dbg !12992
  %18 = load %struct._object*, %struct._object** %events, align 8, !dbg !12992, !tbaa !4701
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12990, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12993, !tbaa !2620
  %cmp5 = icmp ne %struct._object* %19, null, !dbg !12994
  br i1 %cmp5, label %if.then.6, label %if.end.13, !dbg !12995

if.then.6:                                        ; preds = %do.body
  br label %do.body.7, !dbg !12996

do.body.7:                                        ; preds = %if.then.6
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12998
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !12998
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1995, metadata !2613), !dbg !13000
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !13001, !tbaa !2620
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !13000, !tbaa !2620
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13002, !tbaa !2620
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !13004
  %23 = load i64, i64* %ob_refcnt8, align 8, !dbg !13005, !tbaa !2631
  %dec = add i64 %23, -1, !dbg !13005
  store i64 %dec, i64* %ob_refcnt8, align 8, !dbg !13005, !tbaa !2631
  %cmp9 = icmp ne i64 %dec, 0, !dbg !13006
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !13007

if.then.10:                                       ; preds = %do.body.7
  br label %if.end.12, !dbg !13008

if.else:                                          ; preds = %do.body.7
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13010, !tbaa !2620
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !13012
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !13012, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !13013
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13013, !tbaa !2705
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13014, !tbaa !2620
  call void %26(%struct._object* %27), !dbg !13015
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13016
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !13016
  br label %do.cond, !dbg !13018

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !13019

do.end:                                           ; preds = %do.cond
  br label %if.end.13, !dbg !13021

if.end.13:                                        ; preds = %do.end, %do.body
  %29 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !13023
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !13023
  br label %do.cond.14, !dbg !13026

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !13027

do.end.15:                                        ; preds = %do.cond.14
  %30 = load %struct._object*, %struct._object** %events_queue, align 8, !dbg !13029, !tbaa !2620
  %31 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13030, !tbaa !2620
  %events16 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %31, i32 0, i32 8, !dbg !13031
  store %struct._object* %30, %struct._object** %events16, align 8, !dbg !13032, !tbaa !4701
  br label %do.body.17, !dbg !13033

do.body.17:                                       ; preds = %do.end.15
  %32 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13034
  call void @llvm.lifetime.start(i64 8, i8* %32) #1, !dbg !13034
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1998, metadata !2613), !dbg !13036
  %33 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13037, !tbaa !2620
  %start_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %33, i32 0, i32 9, !dbg !13038
  %34 = load %struct._object*, %struct._object** %start_event_obj, align 8, !dbg !13038, !tbaa !4659
  store %struct._object* %34, %struct._object** %_py_tmp, align 8, !dbg !13036, !tbaa !2620
  %35 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13039, !tbaa !2620
  %cmp18 = icmp ne %struct._object* %35, null, !dbg !13040
  br i1 %cmp18, label %if.then.19, label %if.end.33, !dbg !13041

if.then.19:                                       ; preds = %do.body.17
  %36 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13042, !tbaa !2620
  %start_event_obj20 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %36, i32 0, i32 9, !dbg !13044
  store %struct._object* null, %struct._object** %start_event_obj20, align 8, !dbg !13045, !tbaa !4659
  br label %do.body.21, !dbg !13046

do.body.21:                                       ; preds = %if.then.19
  %37 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !13047
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !13047
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !2000, metadata !2613), !dbg !13049
  %38 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !13050, !tbaa !2620
  store %struct._object* %38, %struct._object** %_py_decref_tmp22, align 8, !dbg !13049, !tbaa !2620
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !13051, !tbaa !2620
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !13053
  %40 = load i64, i64* %ob_refcnt23, align 8, !dbg !13054, !tbaa !2631
  %dec24 = add i64 %40, -1, !dbg !13054
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !13054, !tbaa !2631
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !13055
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !13056

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !13057

if.else.27:                                       ; preds = %do.body.21
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !13059, !tbaa !2620
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !13061
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !13061, !tbaa !2703
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !13062
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !13062, !tbaa !2705
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !13063, !tbaa !2620
  call void %43(%struct._object* %44), !dbg !13064
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %45 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !13065
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !13065
  br label %do.cond.31, !dbg !13067

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !13068

do.end.32:                                        ; preds = %do.cond.31
  br label %if.end.33, !dbg !13070

if.end.33:                                        ; preds = %do.end.32, %do.body.17
  %46 = bitcast %struct._object** %_py_tmp to i8*, !dbg !13072
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !13072
  br label %do.cond.34, !dbg !13073

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !13074

do.end.35:                                        ; preds = %do.cond.34
  br label %do.body.36, !dbg !13076

do.body.36:                                       ; preds = %do.end.35
  %47 = bitcast %struct._object** %_py_tmp37 to i8*, !dbg !13077
  call void @llvm.lifetime.start(i64 8, i8* %47) #1, !dbg !13077
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp37, metadata !2004, metadata !2613), !dbg !13079
  %48 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13080, !tbaa !2620
  %end_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %48, i32 0, i32 10, !dbg !13081
  %49 = load %struct._object*, %struct._object** %end_event_obj, align 8, !dbg !13081, !tbaa !4617
  store %struct._object* %49, %struct._object** %_py_tmp37, align 8, !dbg !13079, !tbaa !2620
  %50 = load %struct._object*, %struct._object** %_py_tmp37, align 8, !dbg !13082, !tbaa !2620
  %cmp38 = icmp ne %struct._object* %50, null, !dbg !13083
  br i1 %cmp38, label %if.then.39, label %if.end.53, !dbg !13084

if.then.39:                                       ; preds = %do.body.36
  %51 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13085, !tbaa !2620
  %end_event_obj40 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %51, i32 0, i32 10, !dbg !13087
  store %struct._object* null, %struct._object** %end_event_obj40, align 8, !dbg !13088, !tbaa !4617
  br label %do.body.41, !dbg !13089

do.body.41:                                       ; preds = %if.then.39
  %52 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !13090
  call void @llvm.lifetime.start(i64 8, i8* %52) #1, !dbg !13090
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !2006, metadata !2613), !dbg !13092
  %53 = load %struct._object*, %struct._object** %_py_tmp37, align 8, !dbg !13093, !tbaa !2620
  store %struct._object* %53, %struct._object** %_py_decref_tmp42, align 8, !dbg !13092, !tbaa !2620
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !13094, !tbaa !2620
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !13096
  %55 = load i64, i64* %ob_refcnt43, align 8, !dbg !13097, !tbaa !2631
  %dec44 = add i64 %55, -1, !dbg !13097
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !13097, !tbaa !2631
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !13098
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !13099

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !13100

if.else.47:                                       ; preds = %do.body.41
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !13102, !tbaa !2620
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !13104
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !13104, !tbaa !2703
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !13105
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !13105, !tbaa !2705
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !13106, !tbaa !2620
  call void %58(%struct._object* %59), !dbg !13107
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %60 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !13108
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !13108
  br label %do.cond.51, !dbg !13110

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !13111

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.53, !dbg !13113

if.end.53:                                        ; preds = %do.end.52, %do.body.36
  %61 = bitcast %struct._object** %_py_tmp37 to i8*, !dbg !13115
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !13115
  br label %do.cond.54, !dbg !13116

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !13117

do.end.55:                                        ; preds = %do.cond.54
  br label %do.body.56, !dbg !13119

do.body.56:                                       ; preds = %do.end.55
  %62 = bitcast %struct._object** %_py_tmp57 to i8*, !dbg !13120
  call void @llvm.lifetime.start(i64 8, i8* %62) #1, !dbg !13120
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp57, metadata !2010, metadata !2613), !dbg !13122
  %63 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13123, !tbaa !2620
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %63, i32 0, i32 11, !dbg !13124
  %64 = load %struct._object*, %struct._object** %start_ns_event_obj, align 8, !dbg !13124, !tbaa !4575
  store %struct._object* %64, %struct._object** %_py_tmp57, align 8, !dbg !13122, !tbaa !2620
  %65 = load %struct._object*, %struct._object** %_py_tmp57, align 8, !dbg !13125, !tbaa !2620
  %cmp58 = icmp ne %struct._object* %65, null, !dbg !13126
  br i1 %cmp58, label %if.then.59, label %if.end.73, !dbg !13127

if.then.59:                                       ; preds = %do.body.56
  %66 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13128, !tbaa !2620
  %start_ns_event_obj60 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %66, i32 0, i32 11, !dbg !13130
  store %struct._object* null, %struct._object** %start_ns_event_obj60, align 8, !dbg !13131, !tbaa !4575
  br label %do.body.61, !dbg !13132

do.body.61:                                       ; preds = %if.then.59
  %67 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !13133
  call void @llvm.lifetime.start(i64 8, i8* %67) #1, !dbg !13133
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp62, metadata !2012, metadata !2613), !dbg !13135
  %68 = load %struct._object*, %struct._object** %_py_tmp57, align 8, !dbg !13136, !tbaa !2620
  store %struct._object* %68, %struct._object** %_py_decref_tmp62, align 8, !dbg !13135, !tbaa !2620
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !13137, !tbaa !2620
  %ob_refcnt63 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !13139
  %70 = load i64, i64* %ob_refcnt63, align 8, !dbg !13140, !tbaa !2631
  %dec64 = add i64 %70, -1, !dbg !13140
  store i64 %dec64, i64* %ob_refcnt63, align 8, !dbg !13140, !tbaa !2631
  %cmp65 = icmp ne i64 %dec64, 0, !dbg !13141
  br i1 %cmp65, label %if.then.66, label %if.else.67, !dbg !13142

if.then.66:                                       ; preds = %do.body.61
  br label %if.end.70, !dbg !13143

if.else.67:                                       ; preds = %do.body.61
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !13145, !tbaa !2620
  %ob_type68 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !13147
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type68, align 8, !dbg !13147, !tbaa !2703
  %tp_dealloc69 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !13148
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc69, align 8, !dbg !13148, !tbaa !2705
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !13149, !tbaa !2620
  call void %73(%struct._object* %74), !dbg !13150
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.67, %if.then.66
  %75 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !13151
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !13151
  br label %do.cond.71, !dbg !13153

do.cond.71:                                       ; preds = %if.end.70
  br label %do.end.72, !dbg !13154

do.end.72:                                        ; preds = %do.cond.71
  br label %if.end.73, !dbg !13156

if.end.73:                                        ; preds = %do.end.72, %do.body.56
  %76 = bitcast %struct._object** %_py_tmp57 to i8*, !dbg !13158
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !13158
  br label %do.cond.74, !dbg !13159

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !13160

do.end.75:                                        ; preds = %do.cond.74
  br label %do.body.76, !dbg !13162

do.body.76:                                       ; preds = %do.end.75
  %77 = bitcast %struct._object** %_py_tmp77 to i8*, !dbg !13163
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !13163
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp77, metadata !2016, metadata !2613), !dbg !13165
  %78 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13166, !tbaa !2620
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %78, i32 0, i32 12, !dbg !13167
  %79 = load %struct._object*, %struct._object** %end_ns_event_obj, align 8, !dbg !13167, !tbaa !4531
  store %struct._object* %79, %struct._object** %_py_tmp77, align 8, !dbg !13165, !tbaa !2620
  %80 = load %struct._object*, %struct._object** %_py_tmp77, align 8, !dbg !13168, !tbaa !2620
  %cmp78 = icmp ne %struct._object* %80, null, !dbg !13169
  br i1 %cmp78, label %if.then.79, label %if.end.93, !dbg !13170

if.then.79:                                       ; preds = %do.body.76
  %81 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13171, !tbaa !2620
  %end_ns_event_obj80 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %81, i32 0, i32 12, !dbg !13173
  store %struct._object* null, %struct._object** %end_ns_event_obj80, align 8, !dbg !13174, !tbaa !4531
  br label %do.body.81, !dbg !13175

do.body.81:                                       ; preds = %if.then.79
  %82 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !13176
  call void @llvm.lifetime.start(i64 8, i8* %82) #1, !dbg !13176
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp82, metadata !2018, metadata !2613), !dbg !13178
  %83 = load %struct._object*, %struct._object** %_py_tmp77, align 8, !dbg !13179, !tbaa !2620
  store %struct._object* %83, %struct._object** %_py_decref_tmp82, align 8, !dbg !13178, !tbaa !2620
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !13180, !tbaa !2620
  %ob_refcnt83 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 0, !dbg !13182
  %85 = load i64, i64* %ob_refcnt83, align 8, !dbg !13183, !tbaa !2631
  %dec84 = add i64 %85, -1, !dbg !13183
  store i64 %dec84, i64* %ob_refcnt83, align 8, !dbg !13183, !tbaa !2631
  %cmp85 = icmp ne i64 %dec84, 0, !dbg !13184
  br i1 %cmp85, label %if.then.86, label %if.else.87, !dbg !13185

if.then.86:                                       ; preds = %do.body.81
  br label %if.end.90, !dbg !13186

if.else.87:                                       ; preds = %do.body.81
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !13188, !tbaa !2620
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 1, !dbg !13190
  %87 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !13190, !tbaa !2703
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %87, i32 0, i32 4, !dbg !13191
  %88 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8, !dbg !13191, !tbaa !2705
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !13192, !tbaa !2620
  call void %88(%struct._object* %89), !dbg !13193
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  %90 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !13194
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !13194
  br label %do.cond.91, !dbg !13196

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !13197

do.end.92:                                        ; preds = %do.cond.91
  br label %if.end.93, !dbg !13199

if.end.93:                                        ; preds = %do.end.92, %do.body.76
  %91 = bitcast %struct._object** %_py_tmp77 to i8*, !dbg !13201
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !13201
  br label %do.cond.94, !dbg !13202

do.cond.94:                                       ; preds = %if.end.93
  br label %do.end.95, !dbg !13203

do.end.95:                                        ; preds = %do.cond.94
  %92 = load %struct._object*, %struct._object** %events_to_report, align 8, !dbg !13205, !tbaa !2620
  %cmp96 = icmp eq %struct._object* %92, @_Py_NoneStruct, !dbg !13207
  br i1 %cmp96, label %if.then.97, label %if.end.101, !dbg !13208

if.then.97:                                       ; preds = %do.end.95
  %call98 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0)), !dbg !13209
  %93 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13211, !tbaa !2620
  %end_event_obj99 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %93, i32 0, i32 10, !dbg !13212
  store %struct._object* %call98, %struct._object** %end_event_obj99, align 8, !dbg !13213, !tbaa !4617
  %94 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13214, !tbaa !2631
  %inc100 = add i64 %94, 1, !dbg !13214
  store i64 %inc100, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13214, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !13215
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.490, !dbg !13215

if.end.101:                                       ; preds = %do.end.95
  %95 = load %struct._object*, %struct._object** %events_to_report, align 8, !dbg !13216, !tbaa !2620
  %call102 = call %struct._object* @PySequence_Fast(%struct._object* %95, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.126, i32 0, i32 0)), !dbg !13218
  store %struct._object* %call102, %struct._object** %events_seq, align 8, !dbg !13219, !tbaa !2620
  %tobool103 = icmp ne %struct._object* %call102, null, !dbg !13219
  br i1 %tobool103, label %if.end.105, label %if.then.104, !dbg !13220

if.then.104:                                      ; preds = %if.end.101
  store %struct._object* null, %struct._object** %retval, !dbg !13221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.490, !dbg !13221

if.end.105:                                       ; preds = %if.end.101
  %96 = load %struct._object*, %struct._object** %events_seq, align 8, !dbg !13223, !tbaa !2620
  %call106 = call i64 @PySequence_Size(%struct._object* %96), !dbg !13224
  store i64 %call106, i64* %seqlen, align 8, !dbg !13225, !tbaa !2742
  store i64 0, i64* %i, align 8, !dbg !13226, !tbaa !2742
  br label %for.cond, !dbg !13227

for.cond:                                         ; preds = %for.inc, %if.end.105
  %97 = load i64, i64* %i, align 8, !dbg !13228, !tbaa !2742
  %98 = load i64, i64* %seqlen, align 8, !dbg !13231, !tbaa !2742
  %cmp107 = icmp slt i64 %97, %98, !dbg !13232
  br i1 %cmp107, label %for.body, label %for.end, !dbg !13233

for.body:                                         ; preds = %for.cond
  %99 = bitcast %struct._object** %event_name_obj to i8*, !dbg !13234
  call void @llvm.lifetime.start(i64 8, i8* %99) #1, !dbg !13234
  call void @llvm.dbg.declare(metadata %struct._object** %event_name_obj, metadata !2022, metadata !2613), !dbg !13235
  %100 = load %struct._object*, %struct._object** %events_seq, align 8, !dbg !13236, !tbaa !2620
  %ob_type108 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 1, !dbg !13237
  %101 = load %struct._typeobject*, %struct._typeobject** %ob_type108, align 8, !dbg !13237, !tbaa !2703
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %101, i32 0, i32 19, !dbg !13238
  %102 = load i64, i64* %tp_flags, align 8, !dbg !13238, !tbaa !3263
  %and = and i64 %102, 33554432, !dbg !13239
  %cmp109 = icmp ne i64 %and, 0, !dbg !13240
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !13241

cond.true:                                        ; preds = %for.body
  %103 = load i64, i64* %i, align 8, !dbg !13242, !tbaa !2742
  %104 = load %struct._object*, %struct._object** %events_seq, align 8, !dbg !13244, !tbaa !2620
  %105 = bitcast %struct._object* %104 to %struct.PyListObject*, !dbg !13245
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %105, i32 0, i32 1, !dbg !13246
  %106 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !13246, !tbaa !5350
  %arrayidx = getelementptr %struct._object*, %struct._object** %106, i64 %103, !dbg !13247
  %107 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !13247, !tbaa !2620
  br label %cond.end, !dbg !13241

cond.false:                                       ; preds = %for.body
  %108 = load i64, i64* %i, align 8, !dbg !13248, !tbaa !2742
  %109 = load %struct._object*, %struct._object** %events_seq, align 8, !dbg !13250, !tbaa !2620
  %110 = bitcast %struct._object* %109 to %struct.PyTupleObject*, !dbg !13251
  %ob_item110 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %110, i32 0, i32 1, !dbg !13252
  %arrayidx111 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item110, i32 0, i64 %108, !dbg !13253
  %111 = load %struct._object*, %struct._object** %arrayidx111, align 8, !dbg !13253, !tbaa !2620
  br label %cond.end, !dbg !13241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %107, %cond.true ], [ %111, %cond.false ], !dbg !13241
  store %struct._object* %cond, %struct._object** %event_name_obj, align 8, !dbg !13254, !tbaa !2620
  %112 = bitcast i8** %event_name to i8*, !dbg !13257
  call void @llvm.lifetime.start(i64 8, i8* %112) #1, !dbg !13257
  call void @llvm.dbg.declare(metadata i8** %event_name, metadata !2026, metadata !2613), !dbg !13258
  store i8* null, i8** %event_name, align 8, !dbg !13258, !tbaa !2620
  %113 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13259, !tbaa !2620
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 1, !dbg !13261
  %114 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !13261, !tbaa !2703
  %tp_flags113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %114, i32 0, i32 19, !dbg !13262
  %115 = load i64, i64* %tp_flags113, align 8, !dbg !13262, !tbaa !3263
  %and114 = and i64 %115, 268435456, !dbg !13263
  %cmp115 = icmp ne i64 %and114, 0, !dbg !13264
  br i1 %cmp115, label %if.then.116, label %if.else.118, !dbg !13265

if.then.116:                                      ; preds = %cond.end
  %116 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13266, !tbaa !2620
  %call117 = call i8* @PyUnicode_AsUTF8(%struct._object* %116), !dbg !13268
  store i8* %call117, i8** %event_name, align 8, !dbg !13269, !tbaa !2620
  br label %if.end.125, !dbg !13270

if.else.118:                                      ; preds = %cond.end
  %117 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13271, !tbaa !2620
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1, !dbg !13273
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8, !dbg !13273, !tbaa !2703
  %tp_flags120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 19, !dbg !13274
  %119 = load i64, i64* %tp_flags120, align 8, !dbg !13274, !tbaa !3263
  %and121 = and i64 %119, 134217728, !dbg !13275
  %cmp122 = icmp ne i64 %and121, 0, !dbg !13276
  br i1 %cmp122, label %if.then.123, label %if.end.124, !dbg !13277

if.then.123:                                      ; preds = %if.else.118
  %120 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13278, !tbaa !2620
  %121 = bitcast %struct._object* %120 to %struct.PyBytesObject*, !dbg !13280
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %121, i32 0, i32 2, !dbg !13281
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !13282
  store i8* %arraydecay, i8** %event_name, align 8, !dbg !13283, !tbaa !2620
  br label %if.end.124, !dbg !13284

if.end.124:                                       ; preds = %if.then.123, %if.else.118
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %if.then.116
  %122 = load i8*, i8** %event_name, align 8, !dbg !13285, !tbaa !2620
  %cmp126 = icmp eq i8* %122, null, !dbg !13286
  br i1 %cmp126, label %if.then.127, label %if.else.141, !dbg !13287

if.then.127:                                      ; preds = %if.end.125
  br label %do.body.128, !dbg !13288

do.body.128:                                      ; preds = %if.then.127
  %123 = bitcast %struct._object** %_py_decref_tmp129 to i8*, !dbg !13289
  call void @llvm.lifetime.start(i64 8, i8* %123) #1, !dbg !13289
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp129, metadata !2027, metadata !2613), !dbg !13291
  %124 = load %struct._object*, %struct._object** %events_seq, align 8, !dbg !13292, !tbaa !2620
  store %struct._object* %124, %struct._object** %_py_decref_tmp129, align 8, !dbg !13291, !tbaa !2620
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !13293, !tbaa !2620
  %ob_refcnt130 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0, !dbg !13295
  %126 = load i64, i64* %ob_refcnt130, align 8, !dbg !13296, !tbaa !2631
  %dec131 = add i64 %126, -1, !dbg !13296
  store i64 %dec131, i64* %ob_refcnt130, align 8, !dbg !13296, !tbaa !2631
  %cmp132 = icmp ne i64 %dec131, 0, !dbg !13297
  br i1 %cmp132, label %if.then.133, label %if.else.134, !dbg !13298

if.then.133:                                      ; preds = %do.body.128
  br label %if.end.137, !dbg !13299

if.else.134:                                      ; preds = %do.body.128
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !13301, !tbaa !2620
  %ob_type135 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 1, !dbg !13303
  %128 = load %struct._typeobject*, %struct._typeobject** %ob_type135, align 8, !dbg !13303, !tbaa !2703
  %tp_dealloc136 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %128, i32 0, i32 4, !dbg !13304
  %129 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc136, align 8, !dbg !13304, !tbaa !2705
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !13305, !tbaa !2620
  call void %129(%struct._object* %130), !dbg !13306
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.134, %if.then.133
  %131 = bitcast %struct._object** %_py_decref_tmp129 to i8*, !dbg !13307
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !13307
  br label %do.cond.138, !dbg !13309

do.cond.138:                                      ; preds = %if.end.137
  br label %do.end.139, !dbg !13310

do.end.139:                                       ; preds = %do.cond.138
  %132 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13312, !tbaa !2620
  %call140 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %132, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.127, i32 0, i32 0)), !dbg !13313
  store %struct._object* null, %struct._object** %retval, !dbg !13314
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13314

if.else.141:                                      ; preds = %if.end.125
  %133 = bitcast i64* %__s1_len to i8*, !dbg !13315
  call void @llvm.lifetime.start(i64 8, i8* %133) #1, !dbg !13315
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !2031, metadata !2613), !dbg !13316
  %134 = bitcast i64* %__s2_len to i8*, !dbg !13315
  call void @llvm.lifetime.start(i64 8, i8* %134) #1, !dbg !13315
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !2034, metadata !2613), !dbg !13317
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i64 1) to i64), i64 ptrtoint ([6 x i8]* @.str.20 to i64)), i64 1), label %land.lhs.true, label %cond.false.182, !dbg !13318

land.lhs.true:                                    ; preds = %if.else.141
  store i64 5, i64* %__s2_len, align 8, !dbg !13319, !tbaa !2742
  %135 = load i64, i64* %__s2_len, align 8, !dbg !13321, !tbaa !2742
  %cmp142 = icmp ult i64 %135, 4, !dbg !13322
  br i1 %cmp142, label %cond.true.143, label %cond.false.182, !dbg !13323

cond.true.143:                                    ; preds = %land.lhs.true
  %136 = bitcast i8** %__s1 to i8*, !dbg !13324
  call void @llvm.lifetime.start(i64 8, i8* %136) #1, !dbg !13324
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !2035, metadata !2613), !dbg !13326
  %137 = load i8*, i8** %event_name, align 8, !dbg !13327, !tbaa !2620
  store i8* %137, i8** %__s1, align 8, !dbg !13326, !tbaa !2620
  %138 = bitcast i32* %__result to i8*, !dbg !13328
  call void @llvm.lifetime.start(i64 4, i8* %138) #1, !dbg !13328
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !2037, metadata !2613), !dbg !13329
  %139 = load i8*, i8** %__s1, align 8, !dbg !13330, !tbaa !2620
  %arrayidx146 = getelementptr i8, i8* %139, i64 0, !dbg !13330
  %140 = load i8, i8* %arrayidx146, align 1, !dbg !13330, !tbaa !2756
  %conv = zext i8 %140 to i32, !dbg !13330
  %141 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), align 1, !dbg !13331, !tbaa !2756
  %conv147 = zext i8 %141 to i32, !dbg !13331
  %sub = sub i32 %conv, %conv147, !dbg !13332
  store i32 %sub, i32* %__result, align 4, !dbg !13329, !tbaa !2759
  %142 = load i64, i64* %__s2_len, align 8, !dbg !13333, !tbaa !2742
  %cmp148 = icmp ugt i64 %142, 0, !dbg !13335
  br i1 %cmp148, label %land.lhs.true.150, label %if.end.180, !dbg !13336

land.lhs.true.150:                                ; preds = %cond.true.143
  %143 = load i32, i32* %__result, align 4, !dbg !13337, !tbaa !2759
  %cmp151 = icmp eq i32 %143, 0, !dbg !13339
  br i1 %cmp151, label %if.then.153, label %if.end.180, !dbg !13340

if.then.153:                                      ; preds = %land.lhs.true.150
  %144 = load i8*, i8** %__s1, align 8, !dbg !13341, !tbaa !2620
  %arrayidx154 = getelementptr i8, i8* %144, i64 1, !dbg !13341
  %145 = load i8, i8* %arrayidx154, align 1, !dbg !13341, !tbaa !2756
  %conv155 = zext i8 %145 to i32, !dbg !13341
  %146 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i64 1), align 1, !dbg !13344, !tbaa !2756
  %conv156 = zext i8 %146 to i32, !dbg !13344
  %sub157 = sub i32 %conv155, %conv156, !dbg !13345
  store i32 %sub157, i32* %__result, align 4, !dbg !13346, !tbaa !2759
  %147 = load i64, i64* %__s2_len, align 8, !dbg !13347, !tbaa !2742
  %cmp158 = icmp ugt i64 %147, 1, !dbg !13349
  br i1 %cmp158, label %land.lhs.true.160, label %if.end.179, !dbg !13350

land.lhs.true.160:                                ; preds = %if.then.153
  %148 = load i32, i32* %__result, align 4, !dbg !13351, !tbaa !2759
  %cmp161 = icmp eq i32 %148, 0, !dbg !13353
  br i1 %cmp161, label %if.then.163, label %if.end.179, !dbg !13354

if.then.163:                                      ; preds = %land.lhs.true.160
  %149 = load i8*, i8** %__s1, align 8, !dbg !13355, !tbaa !2620
  %arrayidx164 = getelementptr i8, i8* %149, i64 2, !dbg !13355
  %150 = load i8, i8* %arrayidx164, align 1, !dbg !13355, !tbaa !2756
  %conv165 = zext i8 %150 to i32, !dbg !13355
  %151 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i64 2), align 1, !dbg !13358, !tbaa !2756
  %conv166 = zext i8 %151 to i32, !dbg !13358
  %sub167 = sub i32 %conv165, %conv166, !dbg !13359
  store i32 %sub167, i32* %__result, align 4, !dbg !13360, !tbaa !2759
  %152 = load i64, i64* %__s2_len, align 8, !dbg !13361, !tbaa !2742
  %cmp168 = icmp ugt i64 %152, 2, !dbg !13363
  br i1 %cmp168, label %land.lhs.true.170, label %if.end.178, !dbg !13364

land.lhs.true.170:                                ; preds = %if.then.163
  %153 = load i32, i32* %__result, align 4, !dbg !13365, !tbaa !2759
  %cmp171 = icmp eq i32 %153, 0, !dbg !13367
  br i1 %cmp171, label %if.then.173, label %if.end.178, !dbg !13368

if.then.173:                                      ; preds = %land.lhs.true.170
  %154 = load i8*, i8** %__s1, align 8, !dbg !13369, !tbaa !2620
  %arrayidx174 = getelementptr i8, i8* %154, i64 3, !dbg !13369
  %155 = load i8, i8* %arrayidx174, align 1, !dbg !13369, !tbaa !2756
  %conv175 = zext i8 %155 to i32, !dbg !13369
  %156 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i64 3), align 1, !dbg !13371, !tbaa !2756
  %conv176 = zext i8 %156 to i32, !dbg !13371
  %sub177 = sub i32 %conv175, %conv176, !dbg !13372
  store i32 %sub177, i32* %__result, align 4, !dbg !13373, !tbaa !2759
  br label %if.end.178, !dbg !13374

if.end.178:                                       ; preds = %if.then.173, %land.lhs.true.170, %if.then.163
  br label %if.end.179, !dbg !13375

if.end.179:                                       ; preds = %if.end.178, %land.lhs.true.160, %if.then.153
  br label %if.end.180, !dbg !13379

if.end.180:                                       ; preds = %if.end.179, %land.lhs.true.150, %cond.true.143
  %157 = load i32, i32* %__result, align 4, !dbg !13383, !tbaa !2759
  store i32 %157, i32* %tmp181, !dbg !13387, !tbaa !2759
  %158 = bitcast i32* %__result to i8*, !dbg !13388
  call void @llvm.lifetime.end(i64 4, i8* %158) #1, !dbg !13388
  %159 = bitcast i8** %__s1 to i8*, !dbg !13388
  call void @llvm.lifetime.end(i64 8, i8* %159) #1, !dbg !13388
  %160 = load i32, i32* %tmp181, !dbg !13389, !tbaa !2759
  br label %cond.end.184, !dbg !13323

cond.false.182:                                   ; preds = %land.lhs.true, %if.else.141
  %161 = load i8*, i8** %event_name, align 8, !dbg !13390, !tbaa !2620
  %call183 = call i32 @strcmp(i8* %161, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0)) #1, !dbg !13393
  br label %cond.end.184, !dbg !13323

cond.end.184:                                     ; preds = %cond.false.182, %if.end.180
  %cond185 = phi i32 [ %160, %if.end.180 ], [ %call183, %cond.false.182 ], !dbg !13323
  store i32 %cond185, i32* %tmp, !dbg !13394, !tbaa !2759
  %162 = bitcast i64* %__s2_len to i8*, !dbg !13397
  call void @llvm.lifetime.end(i64 8, i8* %162) #1, !dbg !13397
  %163 = bitcast i64* %__s1_len to i8*, !dbg !13397
  call void @llvm.lifetime.end(i64 8, i8* %163) #1, !dbg !13397
  %164 = load i32, i32* %tmp, !dbg !13398, !tbaa !2759
  %cmp186 = icmp eq i32 %164, 0, !dbg !13399
  br i1 %cmp186, label %if.then.188, label %if.else.192, !dbg !13400

if.then.188:                                      ; preds = %cond.end.184
  %165 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13401, !tbaa !2620
  %ob_refcnt189 = getelementptr inbounds %struct._object, %struct._object* %165, i32 0, i32 0, !dbg !13403
  %166 = load i64, i64* %ob_refcnt189, align 8, !dbg !13404, !tbaa !2631
  %inc190 = add i64 %166, 1, !dbg !13404
  store i64 %inc190, i64* %ob_refcnt189, align 8, !dbg !13404, !tbaa !2631
  %167 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13405, !tbaa !2620
  %168 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13406, !tbaa !2620
  %start_event_obj191 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %168, i32 0, i32 9, !dbg !13407
  store %struct._object* %167, %struct._object** %start_event_obj191, align 8, !dbg !13408, !tbaa !4659
  br label %if.end.471, !dbg !13409

if.else.192:                                      ; preds = %cond.end.184
  %169 = bitcast i64* %__s1_len194 to i8*, !dbg !13410
  call void @llvm.lifetime.start(i64 8, i8* %169) #1, !dbg !13410
  call void @llvm.dbg.declare(metadata i64* %__s1_len194, metadata !2038, metadata !2613), !dbg !13411
  %170 = bitcast i64* %__s2_len196 to i8*, !dbg !13410
  call void @llvm.lifetime.start(i64 8, i8* %170) #1, !dbg !13410
  call void @llvm.dbg.declare(metadata i64* %__s2_len196, metadata !2041, metadata !2613), !dbg !13412
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i64 1) to i64), i64 ptrtoint ([4 x i8]* @.str.21 to i64)), i64 1), label %land.lhs.true.198, label %cond.false.244, !dbg !13413

land.lhs.true.198:                                ; preds = %if.else.192
  store i64 3, i64* %__s2_len196, align 8, !dbg !13414, !tbaa !2742
  %171 = load i64, i64* %__s2_len196, align 8, !dbg !13416, !tbaa !2742
  %cmp199 = icmp ult i64 %171, 4, !dbg !13417
  br i1 %cmp199, label %cond.true.201, label %cond.false.244, !dbg !13418

cond.true.201:                                    ; preds = %land.lhs.true.198
  %172 = bitcast i8** %__s1203 to i8*, !dbg !13419
  call void @llvm.lifetime.start(i64 8, i8* %172) #1, !dbg !13419
  call void @llvm.dbg.declare(metadata i8** %__s1203, metadata !2042, metadata !2613), !dbg !13421
  %173 = load i8*, i8** %event_name, align 8, !dbg !13422, !tbaa !2620
  store i8* %173, i8** %__s1203, align 8, !dbg !13421, !tbaa !2620
  %174 = bitcast i32* %__result205 to i8*, !dbg !13423
  call void @llvm.lifetime.start(i64 4, i8* %174) #1, !dbg !13423
  call void @llvm.dbg.declare(metadata i32* %__result205, metadata !2044, metadata !2613), !dbg !13424
  %175 = load i8*, i8** %__s1203, align 8, !dbg !13425, !tbaa !2620
  %arrayidx206 = getelementptr i8, i8* %175, i64 0, !dbg !13425
  %176 = load i8, i8* %arrayidx206, align 1, !dbg !13425, !tbaa !2756
  %conv207 = zext i8 %176 to i32, !dbg !13425
  %177 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), align 1, !dbg !13426, !tbaa !2756
  %conv208 = zext i8 %177 to i32, !dbg !13426
  %sub209 = sub i32 %conv207, %conv208, !dbg !13427
  store i32 %sub209, i32* %__result205, align 4, !dbg !13424, !tbaa !2759
  %178 = load i64, i64* %__s2_len196, align 8, !dbg !13428, !tbaa !2742
  %cmp210 = icmp ugt i64 %178, 0, !dbg !13430
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.242, !dbg !13431

land.lhs.true.212:                                ; preds = %cond.true.201
  %179 = load i32, i32* %__result205, align 4, !dbg !13432, !tbaa !2759
  %cmp213 = icmp eq i32 %179, 0, !dbg !13434
  br i1 %cmp213, label %if.then.215, label %if.end.242, !dbg !13435

if.then.215:                                      ; preds = %land.lhs.true.212
  %180 = load i8*, i8** %__s1203, align 8, !dbg !13436, !tbaa !2620
  %arrayidx216 = getelementptr i8, i8* %180, i64 1, !dbg !13436
  %181 = load i8, i8* %arrayidx216, align 1, !dbg !13436, !tbaa !2756
  %conv217 = zext i8 %181 to i32, !dbg !13436
  %182 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i64 1), align 1, !dbg !13439, !tbaa !2756
  %conv218 = zext i8 %182 to i32, !dbg !13439
  %sub219 = sub i32 %conv217, %conv218, !dbg !13440
  store i32 %sub219, i32* %__result205, align 4, !dbg !13441, !tbaa !2759
  %183 = load i64, i64* %__s2_len196, align 8, !dbg !13442, !tbaa !2742
  %cmp220 = icmp ugt i64 %183, 1, !dbg !13444
  br i1 %cmp220, label %land.lhs.true.222, label %if.end.241, !dbg !13445

land.lhs.true.222:                                ; preds = %if.then.215
  %184 = load i32, i32* %__result205, align 4, !dbg !13446, !tbaa !2759
  %cmp223 = icmp eq i32 %184, 0, !dbg !13448
  br i1 %cmp223, label %if.then.225, label %if.end.241, !dbg !13449

if.then.225:                                      ; preds = %land.lhs.true.222
  %185 = load i8*, i8** %__s1203, align 8, !dbg !13450, !tbaa !2620
  %arrayidx226 = getelementptr i8, i8* %185, i64 2, !dbg !13450
  %186 = load i8, i8* %arrayidx226, align 1, !dbg !13450, !tbaa !2756
  %conv227 = zext i8 %186 to i32, !dbg !13450
  %187 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i64 2), align 1, !dbg !13453, !tbaa !2756
  %conv228 = zext i8 %187 to i32, !dbg !13453
  %sub229 = sub i32 %conv227, %conv228, !dbg !13454
  store i32 %sub229, i32* %__result205, align 4, !dbg !13455, !tbaa !2759
  %188 = load i64, i64* %__s2_len196, align 8, !dbg !13456, !tbaa !2742
  %cmp230 = icmp ugt i64 %188, 2, !dbg !13458
  br i1 %cmp230, label %land.lhs.true.232, label %if.end.240, !dbg !13459

land.lhs.true.232:                                ; preds = %if.then.225
  %189 = load i32, i32* %__result205, align 4, !dbg !13460, !tbaa !2759
  %cmp233 = icmp eq i32 %189, 0, !dbg !13462
  br i1 %cmp233, label %if.then.235, label %if.end.240, !dbg !13463

if.then.235:                                      ; preds = %land.lhs.true.232
  %190 = load i8*, i8** %__s1203, align 8, !dbg !13464, !tbaa !2620
  %arrayidx236 = getelementptr i8, i8* %190, i64 3, !dbg !13464
  %191 = load i8, i8* %arrayidx236, align 1, !dbg !13464, !tbaa !2756
  %conv237 = zext i8 %191 to i32, !dbg !13464
  %192 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i64 3), align 1, !dbg !13466, !tbaa !2756
  %conv238 = zext i8 %192 to i32, !dbg !13466
  %sub239 = sub i32 %conv237, %conv238, !dbg !13467
  store i32 %sub239, i32* %__result205, align 4, !dbg !13468, !tbaa !2759
  br label %if.end.240, !dbg !13469

if.end.240:                                       ; preds = %if.then.235, %land.lhs.true.232, %if.then.225
  br label %if.end.241, !dbg !13470

if.end.241:                                       ; preds = %if.end.240, %land.lhs.true.222, %if.then.215
  br label %if.end.242, !dbg !13474

if.end.242:                                       ; preds = %if.end.241, %land.lhs.true.212, %cond.true.201
  %193 = load i32, i32* %__result205, align 4, !dbg !13478, !tbaa !2759
  store i32 %193, i32* %tmp243, !dbg !13482, !tbaa !2759
  %194 = bitcast i32* %__result205 to i8*, !dbg !13483
  call void @llvm.lifetime.end(i64 4, i8* %194) #1, !dbg !13483
  %195 = bitcast i8** %__s1203 to i8*, !dbg !13483
  call void @llvm.lifetime.end(i64 8, i8* %195) #1, !dbg !13483
  %196 = load i32, i32* %tmp243, !dbg !13484, !tbaa !2759
  br label %cond.end.246, !dbg !13418

cond.false.244:                                   ; preds = %land.lhs.true.198, %if.else.192
  %197 = load i8*, i8** %event_name, align 8, !dbg !13485, !tbaa !2620
  %call245 = call i32 @strcmp(i8* %197, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0)) #1, !dbg !13488
  br label %cond.end.246, !dbg !13418

cond.end.246:                                     ; preds = %cond.false.244, %if.end.242
  %cond247 = phi i32 [ %196, %if.end.242 ], [ %call245, %cond.false.244 ], !dbg !13418
  store i32 %cond247, i32* %tmp197, !dbg !13489, !tbaa !2759
  %198 = bitcast i64* %__s2_len196 to i8*, !dbg !13492
  call void @llvm.lifetime.end(i64 8, i8* %198) #1, !dbg !13492
  %199 = bitcast i64* %__s1_len194 to i8*, !dbg !13492
  call void @llvm.lifetime.end(i64 8, i8* %199) #1, !dbg !13492
  %200 = load i32, i32* %tmp197, !dbg !13493, !tbaa !2759
  %cmp248 = icmp eq i32 %200, 0, !dbg !13494
  br i1 %cmp248, label %if.then.250, label %if.else.278, !dbg !13495

if.then.250:                                      ; preds = %cond.end.246
  %201 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13496, !tbaa !2620
  %ob_refcnt251 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 0, !dbg !13497
  %202 = load i64, i64* %ob_refcnt251, align 8, !dbg !13498, !tbaa !2631
  %inc252 = add i64 %202, 1, !dbg !13498
  store i64 %inc252, i64* %ob_refcnt251, align 8, !dbg !13498, !tbaa !2631
  br label %do.body.253, !dbg !13499

do.body.253:                                      ; preds = %if.then.250
  %203 = bitcast %struct._object** %_py_xdecref_tmp255 to i8*, !dbg !13500
  call void @llvm.lifetime.start(i64 8, i8* %203) #1, !dbg !13500
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp255, metadata !2045, metadata !2613), !dbg !13502
  %204 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13503, !tbaa !2620
  %end_event_obj256 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %204, i32 0, i32 10, !dbg !13504
  %205 = load %struct._object*, %struct._object** %end_event_obj256, align 8, !dbg !13504, !tbaa !4617
  store %struct._object* %205, %struct._object** %_py_xdecref_tmp255, align 8, !dbg !13502, !tbaa !2620
  %206 = load %struct._object*, %struct._object** %_py_xdecref_tmp255, align 8, !dbg !13505, !tbaa !2620
  %cmp257 = icmp ne %struct._object* %206, null, !dbg !13506
  br i1 %cmp257, label %if.then.259, label %if.end.274, !dbg !13507

if.then.259:                                      ; preds = %do.body.253
  br label %do.body.260, !dbg !13508

do.body.260:                                      ; preds = %if.then.259
  %207 = bitcast %struct._object** %_py_decref_tmp262 to i8*, !dbg !13510
  call void @llvm.lifetime.start(i64 8, i8* %207) #1, !dbg !13510
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp262, metadata !2048, metadata !2613), !dbg !13512
  %208 = load %struct._object*, %struct._object** %_py_xdecref_tmp255, align 8, !dbg !13513, !tbaa !2620
  store %struct._object* %208, %struct._object** %_py_decref_tmp262, align 8, !dbg !13512, !tbaa !2620
  %209 = load %struct._object*, %struct._object** %_py_decref_tmp262, align 8, !dbg !13514, !tbaa !2620
  %ob_refcnt263 = getelementptr inbounds %struct._object, %struct._object* %209, i32 0, i32 0, !dbg !13516
  %210 = load i64, i64* %ob_refcnt263, align 8, !dbg !13517, !tbaa !2631
  %dec264 = add i64 %210, -1, !dbg !13517
  store i64 %dec264, i64* %ob_refcnt263, align 8, !dbg !13517, !tbaa !2631
  %cmp265 = icmp ne i64 %dec264, 0, !dbg !13518
  br i1 %cmp265, label %if.then.267, label %if.else.268, !dbg !13519

if.then.267:                                      ; preds = %do.body.260
  br label %if.end.271, !dbg !13520

if.else.268:                                      ; preds = %do.body.260
  %211 = load %struct._object*, %struct._object** %_py_decref_tmp262, align 8, !dbg !13522, !tbaa !2620
  %ob_type269 = getelementptr inbounds %struct._object, %struct._object* %211, i32 0, i32 1, !dbg !13524
  %212 = load %struct._typeobject*, %struct._typeobject** %ob_type269, align 8, !dbg !13524, !tbaa !2703
  %tp_dealloc270 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %212, i32 0, i32 4, !dbg !13525
  %213 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc270, align 8, !dbg !13525, !tbaa !2705
  %214 = load %struct._object*, %struct._object** %_py_decref_tmp262, align 8, !dbg !13526, !tbaa !2620
  call void %213(%struct._object* %214), !dbg !13527
  br label %if.end.271

if.end.271:                                       ; preds = %if.else.268, %if.then.267
  %215 = bitcast %struct._object** %_py_decref_tmp262 to i8*, !dbg !13528
  call void @llvm.lifetime.end(i64 8, i8* %215) #1, !dbg !13528
  br label %do.cond.272, !dbg !13530

do.cond.272:                                      ; preds = %if.end.271
  br label %do.end.273, !dbg !13531

do.end.273:                                       ; preds = %do.cond.272
  br label %if.end.274, !dbg !13533

if.end.274:                                       ; preds = %do.end.273, %do.body.253
  %216 = bitcast %struct._object** %_py_xdecref_tmp255 to i8*, !dbg !13535
  call void @llvm.lifetime.end(i64 8, i8* %216) #1, !dbg !13535
  br label %do.cond.275, !dbg !13538

do.cond.275:                                      ; preds = %if.end.274
  br label %do.end.276, !dbg !13539

do.end.276:                                       ; preds = %do.cond.275
  %217 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13541, !tbaa !2620
  %218 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13542, !tbaa !2620
  %end_event_obj277 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %218, i32 0, i32 10, !dbg !13543
  store %struct._object* %217, %struct._object** %end_event_obj277, align 8, !dbg !13544, !tbaa !4617
  br label %if.end.470, !dbg !13545

if.else.278:                                      ; preds = %cond.end.246
  %219 = bitcast i64* %__s1_len280 to i8*, !dbg !13546
  call void @llvm.lifetime.start(i64 8, i8* %219) #1, !dbg !13546
  call void @llvm.dbg.declare(metadata i64* %__s1_len280, metadata !2051, metadata !2613), !dbg !13547
  %220 = bitcast i64* %__s2_len282 to i8*, !dbg !13546
  call void @llvm.lifetime.start(i64 8, i8* %220) #1, !dbg !13546
  call void @llvm.dbg.declare(metadata i64* %__s2_len282, metadata !2054, metadata !2613), !dbg !13548
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i64 1) to i64), i64 ptrtoint ([9 x i8]* @.str.128 to i64)), i64 1), label %land.lhs.true.284, label %cond.false.330, !dbg !13549

land.lhs.true.284:                                ; preds = %if.else.278
  store i64 8, i64* %__s2_len282, align 8, !dbg !13550, !tbaa !2742
  %221 = load i64, i64* %__s2_len282, align 8, !dbg !13552, !tbaa !2742
  %cmp285 = icmp ult i64 %221, 4, !dbg !13553
  br i1 %cmp285, label %cond.true.287, label %cond.false.330, !dbg !13554

cond.true.287:                                    ; preds = %land.lhs.true.284
  %222 = bitcast i8** %__s1289 to i8*, !dbg !13555
  call void @llvm.lifetime.start(i64 8, i8* %222) #1, !dbg !13555
  call void @llvm.dbg.declare(metadata i8** %__s1289, metadata !2055, metadata !2613), !dbg !13557
  %223 = load i8*, i8** %event_name, align 8, !dbg !13558, !tbaa !2620
  store i8* %223, i8** %__s1289, align 8, !dbg !13557, !tbaa !2620
  %224 = bitcast i32* %__result291 to i8*, !dbg !13559
  call void @llvm.lifetime.start(i64 4, i8* %224) #1, !dbg !13559
  call void @llvm.dbg.declare(metadata i32* %__result291, metadata !2057, metadata !2613), !dbg !13560
  %225 = load i8*, i8** %__s1289, align 8, !dbg !13561, !tbaa !2620
  %arrayidx292 = getelementptr i8, i8* %225, i64 0, !dbg !13561
  %226 = load i8, i8* %arrayidx292, align 1, !dbg !13561, !tbaa !2756
  %conv293 = zext i8 %226 to i32, !dbg !13561
  %227 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0), align 1, !dbg !13562, !tbaa !2756
  %conv294 = zext i8 %227 to i32, !dbg !13562
  %sub295 = sub i32 %conv293, %conv294, !dbg !13563
  store i32 %sub295, i32* %__result291, align 4, !dbg !13560, !tbaa !2759
  %228 = load i64, i64* %__s2_len282, align 8, !dbg !13564, !tbaa !2742
  %cmp296 = icmp ugt i64 %228, 0, !dbg !13566
  br i1 %cmp296, label %land.lhs.true.298, label %if.end.328, !dbg !13567

land.lhs.true.298:                                ; preds = %cond.true.287
  %229 = load i32, i32* %__result291, align 4, !dbg !13568, !tbaa !2759
  %cmp299 = icmp eq i32 %229, 0, !dbg !13570
  br i1 %cmp299, label %if.then.301, label %if.end.328, !dbg !13571

if.then.301:                                      ; preds = %land.lhs.true.298
  %230 = load i8*, i8** %__s1289, align 8, !dbg !13572, !tbaa !2620
  %arrayidx302 = getelementptr i8, i8* %230, i64 1, !dbg !13572
  %231 = load i8, i8* %arrayidx302, align 1, !dbg !13572, !tbaa !2756
  %conv303 = zext i8 %231 to i32, !dbg !13572
  %232 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i64 1), align 1, !dbg !13575, !tbaa !2756
  %conv304 = zext i8 %232 to i32, !dbg !13575
  %sub305 = sub i32 %conv303, %conv304, !dbg !13576
  store i32 %sub305, i32* %__result291, align 4, !dbg !13577, !tbaa !2759
  %233 = load i64, i64* %__s2_len282, align 8, !dbg !13578, !tbaa !2742
  %cmp306 = icmp ugt i64 %233, 1, !dbg !13580
  br i1 %cmp306, label %land.lhs.true.308, label %if.end.327, !dbg !13581

land.lhs.true.308:                                ; preds = %if.then.301
  %234 = load i32, i32* %__result291, align 4, !dbg !13582, !tbaa !2759
  %cmp309 = icmp eq i32 %234, 0, !dbg !13584
  br i1 %cmp309, label %if.then.311, label %if.end.327, !dbg !13585

if.then.311:                                      ; preds = %land.lhs.true.308
  %235 = load i8*, i8** %__s1289, align 8, !dbg !13586, !tbaa !2620
  %arrayidx312 = getelementptr i8, i8* %235, i64 2, !dbg !13586
  %236 = load i8, i8* %arrayidx312, align 1, !dbg !13586, !tbaa !2756
  %conv313 = zext i8 %236 to i32, !dbg !13586
  %237 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i64 2), align 1, !dbg !13589, !tbaa !2756
  %conv314 = zext i8 %237 to i32, !dbg !13589
  %sub315 = sub i32 %conv313, %conv314, !dbg !13590
  store i32 %sub315, i32* %__result291, align 4, !dbg !13591, !tbaa !2759
  %238 = load i64, i64* %__s2_len282, align 8, !dbg !13592, !tbaa !2742
  %cmp316 = icmp ugt i64 %238, 2, !dbg !13594
  br i1 %cmp316, label %land.lhs.true.318, label %if.end.326, !dbg !13595

land.lhs.true.318:                                ; preds = %if.then.311
  %239 = load i32, i32* %__result291, align 4, !dbg !13596, !tbaa !2759
  %cmp319 = icmp eq i32 %239, 0, !dbg !13598
  br i1 %cmp319, label %if.then.321, label %if.end.326, !dbg !13599

if.then.321:                                      ; preds = %land.lhs.true.318
  %240 = load i8*, i8** %__s1289, align 8, !dbg !13600, !tbaa !2620
  %arrayidx322 = getelementptr i8, i8* %240, i64 3, !dbg !13600
  %241 = load i8, i8* %arrayidx322, align 1, !dbg !13600, !tbaa !2756
  %conv323 = zext i8 %241 to i32, !dbg !13600
  %242 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i64 3), align 1, !dbg !13602, !tbaa !2756
  %conv324 = zext i8 %242 to i32, !dbg !13602
  %sub325 = sub i32 %conv323, %conv324, !dbg !13603
  store i32 %sub325, i32* %__result291, align 4, !dbg !13604, !tbaa !2759
  br label %if.end.326, !dbg !13605

if.end.326:                                       ; preds = %if.then.321, %land.lhs.true.318, %if.then.311
  br label %if.end.327, !dbg !13606

if.end.327:                                       ; preds = %if.end.326, %land.lhs.true.308, %if.then.301
  br label %if.end.328, !dbg !13610

if.end.328:                                       ; preds = %if.end.327, %land.lhs.true.298, %cond.true.287
  %243 = load i32, i32* %__result291, align 4, !dbg !13614, !tbaa !2759
  store i32 %243, i32* %tmp329, !dbg !13618, !tbaa !2759
  %244 = bitcast i32* %__result291 to i8*, !dbg !13619
  call void @llvm.lifetime.end(i64 4, i8* %244) #1, !dbg !13619
  %245 = bitcast i8** %__s1289 to i8*, !dbg !13619
  call void @llvm.lifetime.end(i64 8, i8* %245) #1, !dbg !13619
  %246 = load i32, i32* %tmp329, !dbg !13620, !tbaa !2759
  br label %cond.end.332, !dbg !13554

cond.false.330:                                   ; preds = %land.lhs.true.284, %if.else.278
  %247 = load i8*, i8** %event_name, align 8, !dbg !13621, !tbaa !2620
  %call331 = call i32 @strcmp(i8* %247, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0)) #1, !dbg !13624
  br label %cond.end.332, !dbg !13554

cond.end.332:                                     ; preds = %cond.false.330, %if.end.328
  %cond333 = phi i32 [ %246, %if.end.328 ], [ %call331, %cond.false.330 ], !dbg !13554
  store i32 %cond333, i32* %tmp283, !dbg !13625, !tbaa !2759
  %248 = bitcast i64* %__s2_len282 to i8*, !dbg !13628
  call void @llvm.lifetime.end(i64 8, i8* %248) #1, !dbg !13628
  %249 = bitcast i64* %__s1_len280 to i8*, !dbg !13628
  call void @llvm.lifetime.end(i64 8, i8* %249) #1, !dbg !13628
  %250 = load i32, i32* %tmp283, !dbg !13629, !tbaa !2759
  %cmp334 = icmp eq i32 %250, 0, !dbg !13630
  br i1 %cmp334, label %if.then.336, label %if.else.364, !dbg !13631

if.then.336:                                      ; preds = %cond.end.332
  %251 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13632, !tbaa !2620
  %ob_refcnt337 = getelementptr inbounds %struct._object, %struct._object* %251, i32 0, i32 0, !dbg !13633
  %252 = load i64, i64* %ob_refcnt337, align 8, !dbg !13634, !tbaa !2631
  %inc338 = add i64 %252, 1, !dbg !13634
  store i64 %inc338, i64* %ob_refcnt337, align 8, !dbg !13634, !tbaa !2631
  br label %do.body.339, !dbg !13635

do.body.339:                                      ; preds = %if.then.336
  %253 = bitcast %struct._object** %_py_xdecref_tmp341 to i8*, !dbg !13636
  call void @llvm.lifetime.start(i64 8, i8* %253) #1, !dbg !13636
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp341, metadata !2058, metadata !2613), !dbg !13638
  %254 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13639, !tbaa !2620
  %start_ns_event_obj342 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %254, i32 0, i32 11, !dbg !13640
  %255 = load %struct._object*, %struct._object** %start_ns_event_obj342, align 8, !dbg !13640, !tbaa !4575
  store %struct._object* %255, %struct._object** %_py_xdecref_tmp341, align 8, !dbg !13638, !tbaa !2620
  %256 = load %struct._object*, %struct._object** %_py_xdecref_tmp341, align 8, !dbg !13641, !tbaa !2620
  %cmp343 = icmp ne %struct._object* %256, null, !dbg !13642
  br i1 %cmp343, label %if.then.345, label %if.end.360, !dbg !13643

if.then.345:                                      ; preds = %do.body.339
  br label %do.body.346, !dbg !13644

do.body.346:                                      ; preds = %if.then.345
  %257 = bitcast %struct._object** %_py_decref_tmp348 to i8*, !dbg !13646
  call void @llvm.lifetime.start(i64 8, i8* %257) #1, !dbg !13646
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp348, metadata !2061, metadata !2613), !dbg !13648
  %258 = load %struct._object*, %struct._object** %_py_xdecref_tmp341, align 8, !dbg !13649, !tbaa !2620
  store %struct._object* %258, %struct._object** %_py_decref_tmp348, align 8, !dbg !13648, !tbaa !2620
  %259 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !13650, !tbaa !2620
  %ob_refcnt349 = getelementptr inbounds %struct._object, %struct._object* %259, i32 0, i32 0, !dbg !13652
  %260 = load i64, i64* %ob_refcnt349, align 8, !dbg !13653, !tbaa !2631
  %dec350 = add i64 %260, -1, !dbg !13653
  store i64 %dec350, i64* %ob_refcnt349, align 8, !dbg !13653, !tbaa !2631
  %cmp351 = icmp ne i64 %dec350, 0, !dbg !13654
  br i1 %cmp351, label %if.then.353, label %if.else.354, !dbg !13655

if.then.353:                                      ; preds = %do.body.346
  br label %if.end.357, !dbg !13656

if.else.354:                                      ; preds = %do.body.346
  %261 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !13658, !tbaa !2620
  %ob_type355 = getelementptr inbounds %struct._object, %struct._object* %261, i32 0, i32 1, !dbg !13660
  %262 = load %struct._typeobject*, %struct._typeobject** %ob_type355, align 8, !dbg !13660, !tbaa !2703
  %tp_dealloc356 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %262, i32 0, i32 4, !dbg !13661
  %263 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc356, align 8, !dbg !13661, !tbaa !2705
  %264 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !13662, !tbaa !2620
  call void %263(%struct._object* %264), !dbg !13663
  br label %if.end.357

if.end.357:                                       ; preds = %if.else.354, %if.then.353
  %265 = bitcast %struct._object** %_py_decref_tmp348 to i8*, !dbg !13664
  call void @llvm.lifetime.end(i64 8, i8* %265) #1, !dbg !13664
  br label %do.cond.358, !dbg !13666

do.cond.358:                                      ; preds = %if.end.357
  br label %do.end.359, !dbg !13667

do.end.359:                                       ; preds = %do.cond.358
  br label %if.end.360, !dbg !13669

if.end.360:                                       ; preds = %do.end.359, %do.body.339
  %266 = bitcast %struct._object** %_py_xdecref_tmp341 to i8*, !dbg !13671
  call void @llvm.lifetime.end(i64 8, i8* %266) #1, !dbg !13671
  br label %do.cond.361, !dbg !13674

do.cond.361:                                      ; preds = %if.end.360
  br label %do.end.362, !dbg !13675

do.end.362:                                       ; preds = %do.cond.361
  %267 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13677, !tbaa !2620
  %268 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13678, !tbaa !2620
  %start_ns_event_obj363 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %268, i32 0, i32 11, !dbg !13679
  store %struct._object* %267, %struct._object** %start_ns_event_obj363, align 8, !dbg !13680, !tbaa !4575
  %269 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !13681, !tbaa !2620
  %SetNamespaceDeclHandler = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %269, i32 0, i32 16, !dbg !13682
  %270 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)** %SetNamespaceDeclHandler, align 8, !dbg !13682, !tbaa !13683
  %271 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !13684, !tbaa !2620
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %271, i32 0, i32 1, !dbg !13685
  %272 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !13685, !tbaa !11604
  call void %270(%struct.XML_ParserStruct* %272, void (i8*, i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*, i8*)* @expat_start_ns_handler to void (i8*, i8*, i8*)*), void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_end_ns_handler to void (i8*, i8*)*)), !dbg !13686
  br label %if.end.469, !dbg !13687

if.else.364:                                      ; preds = %cond.end.332
  %273 = bitcast i64* %__s1_len366 to i8*, !dbg !13688
  call void @llvm.lifetime.start(i64 8, i8* %273) #1, !dbg !13688
  call void @llvm.dbg.declare(metadata i64* %__s1_len366, metadata !2064, metadata !2613), !dbg !13689
  %274 = bitcast i64* %__s2_len368 to i8*, !dbg !13688
  call void @llvm.lifetime.start(i64 8, i8* %274) #1, !dbg !13688
  call void @llvm.dbg.declare(metadata i64* %__s2_len368, metadata !2067, metadata !2613), !dbg !13690
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.129 to i64)), i64 1), label %land.lhs.true.370, label %cond.false.416, !dbg !13691

land.lhs.true.370:                                ; preds = %if.else.364
  store i64 6, i64* %__s2_len368, align 8, !dbg !13692, !tbaa !2742
  %275 = load i64, i64* %__s2_len368, align 8, !dbg !13694, !tbaa !2742
  %cmp371 = icmp ult i64 %275, 4, !dbg !13695
  br i1 %cmp371, label %cond.true.373, label %cond.false.416, !dbg !13696

cond.true.373:                                    ; preds = %land.lhs.true.370
  %276 = bitcast i8** %__s1375 to i8*, !dbg !13697
  call void @llvm.lifetime.start(i64 8, i8* %276) #1, !dbg !13697
  call void @llvm.dbg.declare(metadata i8** %__s1375, metadata !2068, metadata !2613), !dbg !13699
  %277 = load i8*, i8** %event_name, align 8, !dbg !13700, !tbaa !2620
  store i8* %277, i8** %__s1375, align 8, !dbg !13699, !tbaa !2620
  %278 = bitcast i32* %__result377 to i8*, !dbg !13701
  call void @llvm.lifetime.start(i64 4, i8* %278) #1, !dbg !13701
  call void @llvm.dbg.declare(metadata i32* %__result377, metadata !2070, metadata !2613), !dbg !13702
  %279 = load i8*, i8** %__s1375, align 8, !dbg !13703, !tbaa !2620
  %arrayidx378 = getelementptr i8, i8* %279, i64 0, !dbg !13703
  %280 = load i8, i8* %arrayidx378, align 1, !dbg !13703, !tbaa !2756
  %conv379 = zext i8 %280 to i32, !dbg !13703
  %281 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i32 0), align 1, !dbg !13704, !tbaa !2756
  %conv380 = zext i8 %281 to i32, !dbg !13704
  %sub381 = sub i32 %conv379, %conv380, !dbg !13705
  store i32 %sub381, i32* %__result377, align 4, !dbg !13702, !tbaa !2759
  %282 = load i64, i64* %__s2_len368, align 8, !dbg !13706, !tbaa !2742
  %cmp382 = icmp ugt i64 %282, 0, !dbg !13708
  br i1 %cmp382, label %land.lhs.true.384, label %if.end.414, !dbg !13709

land.lhs.true.384:                                ; preds = %cond.true.373
  %283 = load i32, i32* %__result377, align 4, !dbg !13710, !tbaa !2759
  %cmp385 = icmp eq i32 %283, 0, !dbg !13712
  br i1 %cmp385, label %if.then.387, label %if.end.414, !dbg !13713

if.then.387:                                      ; preds = %land.lhs.true.384
  %284 = load i8*, i8** %__s1375, align 8, !dbg !13714, !tbaa !2620
  %arrayidx388 = getelementptr i8, i8* %284, i64 1, !dbg !13714
  %285 = load i8, i8* %arrayidx388, align 1, !dbg !13714, !tbaa !2756
  %conv389 = zext i8 %285 to i32, !dbg !13714
  %286 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i64 1), align 1, !dbg !13717, !tbaa !2756
  %conv390 = zext i8 %286 to i32, !dbg !13717
  %sub391 = sub i32 %conv389, %conv390, !dbg !13718
  store i32 %sub391, i32* %__result377, align 4, !dbg !13719, !tbaa !2759
  %287 = load i64, i64* %__s2_len368, align 8, !dbg !13720, !tbaa !2742
  %cmp392 = icmp ugt i64 %287, 1, !dbg !13722
  br i1 %cmp392, label %land.lhs.true.394, label %if.end.413, !dbg !13723

land.lhs.true.394:                                ; preds = %if.then.387
  %288 = load i32, i32* %__result377, align 4, !dbg !13724, !tbaa !2759
  %cmp395 = icmp eq i32 %288, 0, !dbg !13726
  br i1 %cmp395, label %if.then.397, label %if.end.413, !dbg !13727

if.then.397:                                      ; preds = %land.lhs.true.394
  %289 = load i8*, i8** %__s1375, align 8, !dbg !13728, !tbaa !2620
  %arrayidx398 = getelementptr i8, i8* %289, i64 2, !dbg !13728
  %290 = load i8, i8* %arrayidx398, align 1, !dbg !13728, !tbaa !2756
  %conv399 = zext i8 %290 to i32, !dbg !13728
  %291 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i64 2), align 1, !dbg !13731, !tbaa !2756
  %conv400 = zext i8 %291 to i32, !dbg !13731
  %sub401 = sub i32 %conv399, %conv400, !dbg !13732
  store i32 %sub401, i32* %__result377, align 4, !dbg !13733, !tbaa !2759
  %292 = load i64, i64* %__s2_len368, align 8, !dbg !13734, !tbaa !2742
  %cmp402 = icmp ugt i64 %292, 2, !dbg !13736
  br i1 %cmp402, label %land.lhs.true.404, label %if.end.412, !dbg !13737

land.lhs.true.404:                                ; preds = %if.then.397
  %293 = load i32, i32* %__result377, align 4, !dbg !13738, !tbaa !2759
  %cmp405 = icmp eq i32 %293, 0, !dbg !13740
  br i1 %cmp405, label %if.then.407, label %if.end.412, !dbg !13741

if.then.407:                                      ; preds = %land.lhs.true.404
  %294 = load i8*, i8** %__s1375, align 8, !dbg !13742, !tbaa !2620
  %arrayidx408 = getelementptr i8, i8* %294, i64 3, !dbg !13742
  %295 = load i8, i8* %arrayidx408, align 1, !dbg !13742, !tbaa !2756
  %conv409 = zext i8 %295 to i32, !dbg !13742
  %296 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i64 3), align 1, !dbg !13744, !tbaa !2756
  %conv410 = zext i8 %296 to i32, !dbg !13744
  %sub411 = sub i32 %conv409, %conv410, !dbg !13745
  store i32 %sub411, i32* %__result377, align 4, !dbg !13746, !tbaa !2759
  br label %if.end.412, !dbg !13747

if.end.412:                                       ; preds = %if.then.407, %land.lhs.true.404, %if.then.397
  br label %if.end.413, !dbg !13748

if.end.413:                                       ; preds = %if.end.412, %land.lhs.true.394, %if.then.387
  br label %if.end.414, !dbg !13752

if.end.414:                                       ; preds = %if.end.413, %land.lhs.true.384, %cond.true.373
  %297 = load i32, i32* %__result377, align 4, !dbg !13756, !tbaa !2759
  store i32 %297, i32* %tmp415, !dbg !13760, !tbaa !2759
  %298 = bitcast i32* %__result377 to i8*, !dbg !13761
  call void @llvm.lifetime.end(i64 4, i8* %298) #1, !dbg !13761
  %299 = bitcast i8** %__s1375 to i8*, !dbg !13761
  call void @llvm.lifetime.end(i64 8, i8* %299) #1, !dbg !13761
  %300 = load i32, i32* %tmp415, !dbg !13762, !tbaa !2759
  br label %cond.end.418, !dbg !13696

cond.false.416:                                   ; preds = %land.lhs.true.370, %if.else.364
  %301 = load i8*, i8** %event_name, align 8, !dbg !13763, !tbaa !2620
  %call417 = call i32 @strcmp(i8* %301, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i32 0)) #1, !dbg !13766
  br label %cond.end.418, !dbg !13696

cond.end.418:                                     ; preds = %cond.false.416, %if.end.414
  %cond419 = phi i32 [ %300, %if.end.414 ], [ %call417, %cond.false.416 ], !dbg !13696
  store i32 %cond419, i32* %tmp369, !dbg !13767, !tbaa !2759
  %302 = bitcast i64* %__s2_len368 to i8*, !dbg !13770
  call void @llvm.lifetime.end(i64 8, i8* %302) #1, !dbg !13770
  %303 = bitcast i64* %__s1_len366 to i8*, !dbg !13770
  call void @llvm.lifetime.end(i64 8, i8* %303) #1, !dbg !13770
  %304 = load i32, i32* %tmp369, !dbg !13771, !tbaa !2759
  %cmp420 = icmp eq i32 %304, 0, !dbg !13772
  br i1 %cmp420, label %if.then.422, label %if.else.452, !dbg !13773

if.then.422:                                      ; preds = %cond.end.418
  %305 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13774, !tbaa !2620
  %ob_refcnt423 = getelementptr inbounds %struct._object, %struct._object* %305, i32 0, i32 0, !dbg !13775
  %306 = load i64, i64* %ob_refcnt423, align 8, !dbg !13776, !tbaa !2631
  %inc424 = add i64 %306, 1, !dbg !13776
  store i64 %inc424, i64* %ob_refcnt423, align 8, !dbg !13776, !tbaa !2631
  br label %do.body.425, !dbg !13777

do.body.425:                                      ; preds = %if.then.422
  %307 = bitcast %struct._object** %_py_xdecref_tmp427 to i8*, !dbg !13778
  call void @llvm.lifetime.start(i64 8, i8* %307) #1, !dbg !13778
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp427, metadata !2071, metadata !2613), !dbg !13780
  %308 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13781, !tbaa !2620
  %end_ns_event_obj428 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %308, i32 0, i32 12, !dbg !13782
  %309 = load %struct._object*, %struct._object** %end_ns_event_obj428, align 8, !dbg !13782, !tbaa !4531
  store %struct._object* %309, %struct._object** %_py_xdecref_tmp427, align 8, !dbg !13780, !tbaa !2620
  %310 = load %struct._object*, %struct._object** %_py_xdecref_tmp427, align 8, !dbg !13783, !tbaa !2620
  %cmp429 = icmp ne %struct._object* %310, null, !dbg !13784
  br i1 %cmp429, label %if.then.431, label %if.end.446, !dbg !13785

if.then.431:                                      ; preds = %do.body.425
  br label %do.body.432, !dbg !13786

do.body.432:                                      ; preds = %if.then.431
  %311 = bitcast %struct._object** %_py_decref_tmp434 to i8*, !dbg !13788
  call void @llvm.lifetime.start(i64 8, i8* %311) #1, !dbg !13788
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp434, metadata !2074, metadata !2613), !dbg !13790
  %312 = load %struct._object*, %struct._object** %_py_xdecref_tmp427, align 8, !dbg !13791, !tbaa !2620
  store %struct._object* %312, %struct._object** %_py_decref_tmp434, align 8, !dbg !13790, !tbaa !2620
  %313 = load %struct._object*, %struct._object** %_py_decref_tmp434, align 8, !dbg !13792, !tbaa !2620
  %ob_refcnt435 = getelementptr inbounds %struct._object, %struct._object* %313, i32 0, i32 0, !dbg !13794
  %314 = load i64, i64* %ob_refcnt435, align 8, !dbg !13795, !tbaa !2631
  %dec436 = add i64 %314, -1, !dbg !13795
  store i64 %dec436, i64* %ob_refcnt435, align 8, !dbg !13795, !tbaa !2631
  %cmp437 = icmp ne i64 %dec436, 0, !dbg !13796
  br i1 %cmp437, label %if.then.439, label %if.else.440, !dbg !13797

if.then.439:                                      ; preds = %do.body.432
  br label %if.end.443, !dbg !13798

if.else.440:                                      ; preds = %do.body.432
  %315 = load %struct._object*, %struct._object** %_py_decref_tmp434, align 8, !dbg !13800, !tbaa !2620
  %ob_type441 = getelementptr inbounds %struct._object, %struct._object* %315, i32 0, i32 1, !dbg !13802
  %316 = load %struct._typeobject*, %struct._typeobject** %ob_type441, align 8, !dbg !13802, !tbaa !2703
  %tp_dealloc442 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %316, i32 0, i32 4, !dbg !13803
  %317 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc442, align 8, !dbg !13803, !tbaa !2705
  %318 = load %struct._object*, %struct._object** %_py_decref_tmp434, align 8, !dbg !13804, !tbaa !2620
  call void %317(%struct._object* %318), !dbg !13805
  br label %if.end.443

if.end.443:                                       ; preds = %if.else.440, %if.then.439
  %319 = bitcast %struct._object** %_py_decref_tmp434 to i8*, !dbg !13806
  call void @llvm.lifetime.end(i64 8, i8* %319) #1, !dbg !13806
  br label %do.cond.444, !dbg !13808

do.cond.444:                                      ; preds = %if.end.443
  br label %do.end.445, !dbg !13809

do.end.445:                                       ; preds = %do.cond.444
  br label %if.end.446, !dbg !13811

if.end.446:                                       ; preds = %do.end.445, %do.body.425
  %320 = bitcast %struct._object** %_py_xdecref_tmp427 to i8*, !dbg !13813
  call void @llvm.lifetime.end(i64 8, i8* %320) #1, !dbg !13813
  br label %do.cond.447, !dbg !13816

do.cond.447:                                      ; preds = %if.end.446
  br label %do.end.448, !dbg !13817

do.end.448:                                       ; preds = %do.cond.447
  %321 = load %struct._object*, %struct._object** %event_name_obj, align 8, !dbg !13819, !tbaa !2620
  %322 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %target, align 8, !dbg !13820, !tbaa !2620
  %end_ns_event_obj449 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %322, i32 0, i32 12, !dbg !13821
  store %struct._object* %321, %struct._object** %end_ns_event_obj449, align 8, !dbg !13822, !tbaa !4531
  %323 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !13823, !tbaa !2620
  %SetNamespaceDeclHandler450 = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %323, i32 0, i32 16, !dbg !13824
  %324 = load void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)*, void (%struct.XML_ParserStruct*, void (i8*, i8*, i8*)*, void (i8*, i8*)*)** %SetNamespaceDeclHandler450, align 8, !dbg !13824, !tbaa !13683
  %325 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !13825, !tbaa !2620
  %parser451 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %325, i32 0, i32 1, !dbg !13826
  %326 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser451, align 8, !dbg !13826, !tbaa !11604
  call void %324(%struct.XML_ParserStruct* %326, void (i8*, i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*, i8*)* @expat_start_ns_handler to void (i8*, i8*, i8*)*), void (i8*, i8*)* bitcast (void (%struct.XMLParserObject*, i8*)* @expat_end_ns_handler to void (i8*, i8*)*)), !dbg !13827
  br label %if.end.468, !dbg !13828

if.else.452:                                      ; preds = %cond.end.418
  br label %do.body.453, !dbg !13829

do.body.453:                                      ; preds = %if.else.452
  %327 = bitcast %struct._object** %_py_decref_tmp455 to i8*, !dbg !13830
  call void @llvm.lifetime.start(i64 8, i8* %327) #1, !dbg !13830
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp455, metadata !2077, metadata !2613), !dbg !13832
  %328 = load %struct._object*, %struct._object** %events_seq, align 8, !dbg !13833, !tbaa !2620
  store %struct._object* %328, %struct._object** %_py_decref_tmp455, align 8, !dbg !13832, !tbaa !2620
  %329 = load %struct._object*, %struct._object** %_py_decref_tmp455, align 8, !dbg !13834, !tbaa !2620
  %ob_refcnt456 = getelementptr inbounds %struct._object, %struct._object* %329, i32 0, i32 0, !dbg !13836
  %330 = load i64, i64* %ob_refcnt456, align 8, !dbg !13837, !tbaa !2631
  %dec457 = add i64 %330, -1, !dbg !13837
  store i64 %dec457, i64* %ob_refcnt456, align 8, !dbg !13837, !tbaa !2631
  %cmp458 = icmp ne i64 %dec457, 0, !dbg !13838
  br i1 %cmp458, label %if.then.460, label %if.else.461, !dbg !13839

if.then.460:                                      ; preds = %do.body.453
  br label %if.end.464, !dbg !13840

if.else.461:                                      ; preds = %do.body.453
  %331 = load %struct._object*, %struct._object** %_py_decref_tmp455, align 8, !dbg !13842, !tbaa !2620
  %ob_type462 = getelementptr inbounds %struct._object, %struct._object* %331, i32 0, i32 1, !dbg !13844
  %332 = load %struct._typeobject*, %struct._typeobject** %ob_type462, align 8, !dbg !13844, !tbaa !2703
  %tp_dealloc463 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %332, i32 0, i32 4, !dbg !13845
  %333 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc463, align 8, !dbg !13845, !tbaa !2705
  %334 = load %struct._object*, %struct._object** %_py_decref_tmp455, align 8, !dbg !13846, !tbaa !2620
  call void %333(%struct._object* %334), !dbg !13847
  br label %if.end.464

if.end.464:                                       ; preds = %if.else.461, %if.then.460
  %335 = bitcast %struct._object** %_py_decref_tmp455 to i8*, !dbg !13848
  call void @llvm.lifetime.end(i64 8, i8* %335) #1, !dbg !13848
  br label %do.cond.465, !dbg !13850

do.cond.465:                                      ; preds = %if.end.464
  br label %do.end.466, !dbg !13851

do.end.466:                                       ; preds = %do.cond.465
  %336 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13853, !tbaa !2620
  %337 = load i8*, i8** %event_name, align 8, !dbg !13854, !tbaa !2620
  %call467 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %336, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.130, i32 0, i32 0), i8* %337), !dbg !13855
  store %struct._object* null, %struct._object** %retval, !dbg !13856
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13856

if.end.468:                                       ; preds = %do.end.448
  br label %if.end.469

if.end.469:                                       ; preds = %if.end.468, %do.end.362
  br label %if.end.470

if.end.470:                                       ; preds = %if.end.469, %do.end.276
  br label %if.end.471

if.end.471:                                       ; preds = %if.end.470, %if.then.188
  br label %if.end.472

if.end.472:                                       ; preds = %if.end.471
  store i32 0, i32* %cleanup.dest.slot, !dbg !13857
  br label %cleanup, !dbg !13857

cleanup:                                          ; preds = %if.end.472, %do.end.466, %do.end.139
  %338 = bitcast i8** %event_name to i8*, !dbg !13858
  call void @llvm.lifetime.end(i64 8, i8* %338) #1, !dbg !13858
  %339 = bitcast %struct._object** %event_name_obj to i8*, !dbg !13858
  call void @llvm.lifetime.end(i64 8, i8* %339) #1, !dbg !13858
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.490 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !13859

for.inc:                                          ; preds = %cleanup.cont
  %340 = load i64, i64* %i, align 8, !dbg !13860, !tbaa !2742
  %inc474 = add i64 %340, 1, !dbg !13860
  store i64 %inc474, i64* %i, align 8, !dbg !13860, !tbaa !2742
  br label %for.cond, !dbg !13861

for.end:                                          ; preds = %for.cond
  br label %do.body.475, !dbg !13862

do.body.475:                                      ; preds = %for.end
  %341 = bitcast %struct._object** %_py_decref_tmp477 to i8*, !dbg !13863
  call void @llvm.lifetime.start(i64 8, i8* %341) #1, !dbg !13863
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp477, metadata !2080, metadata !2613), !dbg !13865
  %342 = load %struct._object*, %struct._object** %events_seq, align 8, !dbg !13866, !tbaa !2620
  store %struct._object* %342, %struct._object** %_py_decref_tmp477, align 8, !dbg !13865, !tbaa !2620
  %343 = load %struct._object*, %struct._object** %_py_decref_tmp477, align 8, !dbg !13867, !tbaa !2620
  %ob_refcnt478 = getelementptr inbounds %struct._object, %struct._object* %343, i32 0, i32 0, !dbg !13869
  %344 = load i64, i64* %ob_refcnt478, align 8, !dbg !13870, !tbaa !2631
  %dec479 = add i64 %344, -1, !dbg !13870
  store i64 %dec479, i64* %ob_refcnt478, align 8, !dbg !13870, !tbaa !2631
  %cmp480 = icmp ne i64 %dec479, 0, !dbg !13871
  br i1 %cmp480, label %if.then.482, label %if.else.483, !dbg !13872

if.then.482:                                      ; preds = %do.body.475
  br label %if.end.486, !dbg !13873

if.else.483:                                      ; preds = %do.body.475
  %345 = load %struct._object*, %struct._object** %_py_decref_tmp477, align 8, !dbg !13875, !tbaa !2620
  %ob_type484 = getelementptr inbounds %struct._object, %struct._object* %345, i32 0, i32 1, !dbg !13877
  %346 = load %struct._typeobject*, %struct._typeobject** %ob_type484, align 8, !dbg !13877, !tbaa !2703
  %tp_dealloc485 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %346, i32 0, i32 4, !dbg !13878
  %347 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc485, align 8, !dbg !13878, !tbaa !2705
  %348 = load %struct._object*, %struct._object** %_py_decref_tmp477, align 8, !dbg !13879, !tbaa !2620
  call void %347(%struct._object* %348), !dbg !13880
  br label %if.end.486

if.end.486:                                       ; preds = %if.else.483, %if.then.482
  %349 = bitcast %struct._object** %_py_decref_tmp477 to i8*, !dbg !13881
  call void @llvm.lifetime.end(i64 8, i8* %349) #1, !dbg !13881
  br label %do.cond.487, !dbg !13883

do.cond.487:                                      ; preds = %if.end.486
  br label %do.end.488, !dbg !13884

do.end.488:                                       ; preds = %do.cond.487
  %350 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13886, !tbaa !2631
  %inc489 = add i64 %350, 1, !dbg !13886
  store i64 %inc489, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13886, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !13887
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.490, !dbg !13887

cleanup.490:                                      ; preds = %do.end.488, %cleanup, %if.then.104, %if.then.97, %if.then.2, %if.then
  %351 = bitcast %struct._object** %events_seq to i8*, !dbg !13888
  call void @llvm.lifetime.end(i64 8, i8* %351) #1, !dbg !13888
  %352 = bitcast %struct._object** %events_to_report to i8*, !dbg !13888
  call void @llvm.lifetime.end(i64 8, i8* %352) #1, !dbg !13888
  %353 = bitcast %struct._object** %events_queue to i8*, !dbg !13888
  call void @llvm.lifetime.end(i64 8, i8* %353) #1, !dbg !13888
  %354 = bitcast %struct.TreeBuilderObject** %target to i8*, !dbg !13888
  call void @llvm.lifetime.end(i64 8, i8* %354) #1, !dbg !13888
  %355 = bitcast i64* %seqlen to i8*, !dbg !13888
  call void @llvm.lifetime.end(i64 8, i8* %355) #1, !dbg !13888
  %356 = bitcast i64* %i to i8*, !dbg !13888
  call void @llvm.lifetime.end(i64 8, i8* %356) #1, !dbg !13888
  %357 = load %struct._object*, %struct._object** %retval, !dbg !13888
  ret %struct._object* %357, !dbg !13888
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @xmlparser_doctype(%struct.XMLParserObject* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2127, metadata !2613), !dbg !13889
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2128, metadata !2613), !dbg !13890
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13891, !tbaa !2631
  %inc = add i64 %0, 1, !dbg !13891
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13891, !tbaa !2631
  ret %struct._object* @_Py_NoneStruct, !dbg !13892
}

declare i8* @PyUnicode_AsUTF8AndSize(%struct._object*, i64*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @expat_parse(%struct.XMLParserObject* %self, i8* %data, i32 %data_len, i32 %final) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %data.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %final.addr = alloca i32, align 4
  %ok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !1878, metadata !2613), !dbg !13893
  store i8* %data, i8** %data.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1879, metadata !2613), !dbg !13894
  store i32 %data_len, i32* %data_len.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !1880, metadata !2613), !dbg !13895
  store i32 %final, i32* %final.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %final.addr, metadata !1881, metadata !2613), !dbg !13896
  %0 = bitcast i32* %ok to i8*, !dbg !13897
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !13897
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !1882, metadata !2613), !dbg !13898
  %1 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !13899, !tbaa !2620
  %Parse = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %1, i32 0, i32 9, !dbg !13900
  %2 = load i32 (%struct.XML_ParserStruct*, i8*, i32, i32)*, i32 (%struct.XML_ParserStruct*, i8*, i32, i32)** %Parse, align 8, !dbg !13900, !tbaa !13901
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !13902, !tbaa !2620
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %3, i32 0, i32 1, !dbg !13903
  %4 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !13903, !tbaa !11604
  %5 = load i8*, i8** %data.addr, align 8, !dbg !13904, !tbaa !2620
  %6 = load i32, i32* %data_len.addr, align 4, !dbg !13905, !tbaa !2759
  %7 = load i32, i32* %final.addr, align 4, !dbg !13906, !tbaa !2759
  %call = call i32 %2(%struct.XML_ParserStruct* %4, i8* %5, i32 %6, i32 %7), !dbg !13907
  store i32 %call, i32* %ok, align 4, !dbg !13908, !tbaa !2759
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !13909
  %tobool = icmp ne %struct._object* %call1, null, !dbg !13909
  br i1 %tobool, label %if.then, label %if.end, !dbg !13911

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !13912
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13912

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %ok, align 4, !dbg !13913, !tbaa !2759
  %tobool2 = icmp ne i32 %8, 0, !dbg !13913
  br i1 %tobool2, label %if.end.11, label %if.then.3, !dbg !13915

if.then.3:                                        ; preds = %if.end
  %9 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !13916, !tbaa !2620
  %GetErrorCode = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %9, i32 0, i32 6, !dbg !13918
  %10 = load i32 (%struct.XML_ParserStruct*)*, i32 (%struct.XML_ParserStruct*)** %GetErrorCode, align 8, !dbg !13918, !tbaa !13919
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !13920, !tbaa !2620
  %parser4 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 1, !dbg !13921
  %12 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser4, align 8, !dbg !13921, !tbaa !11604
  %call5 = call i32 %10(%struct.XML_ParserStruct* %12), !dbg !13922
  %13 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !13923, !tbaa !2620
  %GetErrorLineNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %13, i32 0, i32 8, !dbg !13924
  %14 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorLineNumber, align 8, !dbg !13924, !tbaa !13925
  %15 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !13926, !tbaa !2620
  %parser6 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %15, i32 0, i32 1, !dbg !13927
  %16 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser6, align 8, !dbg !13927, !tbaa !11604
  %call7 = call i64 %14(%struct.XML_ParserStruct* %16), !dbg !13928
  %conv = trunc i64 %call7 to i32, !dbg !13928
  %17 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !13929, !tbaa !2620
  %GetErrorColumnNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %17, i32 0, i32 7, !dbg !13930
  %18 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorColumnNumber, align 8, !dbg !13930, !tbaa !13931
  %19 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !13932, !tbaa !2620
  %parser8 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %19, i32 0, i32 1, !dbg !13933
  %20 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser8, align 8, !dbg !13933, !tbaa !11604
  %call9 = call i64 %18(%struct.XML_ParserStruct* %20), !dbg !13934
  %conv10 = trunc i64 %call9 to i32, !dbg !13934
  call void @expat_set_error(i32 %call5, i32 %conv, i32 %conv10, i8* null), !dbg !13935
  store %struct._object* null, %struct._object** %retval, !dbg !13936
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13936

if.end.11:                                        ; preds = %if.end
  %21 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13937, !tbaa !2631
  %inc = add i64 %21, 1, !dbg !13937
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !13937, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !13938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13938

cleanup:                                          ; preds = %if.end.11, %if.then.3, %if.then
  %22 = bitcast i32* %ok to i8*, !dbg !13939
  call void @llvm.lifetime.end(i64 4, i8* %22) #1, !dbg !13939
  %23 = load %struct._object*, %struct._object** %retval, !dbg !13939
  ret %struct._object* %23, !dbg !13939
}

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #3

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

; Function Attrs: nounwind uwtable
define internal void @expat_set_error(i32 %error_code, i32 %line, i32 %column, i8* %message) #0 {
entry:
  %error_code.addr = alloca i32, align 4
  %line.addr = alloca i32, align 4
  %column.addr = alloca i32, align 4
  %message.addr = alloca i8*, align 8
  %errmsg = alloca %struct._object*, align 8
  %error = alloca %struct._object*, align 8
  %position = alloca %struct._object*, align 8
  %code = alloca %struct._object*, align 8
  %st = alloca %struct.elementtreestate*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp33 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_decref_tmp107 = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  %_py_decref_tmp135 = alloca %struct._object*, align 8
  store i32 %error_code, i32* %error_code.addr, align 4, !tbaa !2756
  call void @llvm.dbg.declare(metadata i32* %error_code.addr, metadata !1887, metadata !2613), !dbg !13940
  store i32 %line, i32* %line.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !1888, metadata !2613), !dbg !13941
  store i32 %column, i32* %column.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %column.addr, metadata !1889, metadata !2613), !dbg !13942
  store i8* %message, i8** %message.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !1890, metadata !2613), !dbg !13943
  %0 = bitcast %struct._object** %errmsg to i8*, !dbg !13944
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !13944
  call void @llvm.dbg.declare(metadata %struct._object** %errmsg, metadata !1891, metadata !2613), !dbg !13945
  %1 = bitcast %struct._object** %error to i8*, !dbg !13944
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !13944
  call void @llvm.dbg.declare(metadata %struct._object** %error, metadata !1892, metadata !2613), !dbg !13946
  %2 = bitcast %struct._object** %position to i8*, !dbg !13944
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !13944
  call void @llvm.dbg.declare(metadata %struct._object** %position, metadata !1893, metadata !2613), !dbg !13947
  %3 = bitcast %struct._object** %code to i8*, !dbg !13944
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !13944
  call void @llvm.dbg.declare(metadata %struct._object** %code, metadata !1894, metadata !2613), !dbg !13948
  %4 = bitcast %struct.elementtreestate** %st to i8*, !dbg !13949
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !13949
  call void @llvm.dbg.declare(metadata %struct.elementtreestate** %st, metadata !1895, metadata !2613), !dbg !13950
  %call = call %struct._object* @PyState_FindModule(%struct.PyModuleDef* @elementtreemodule), !dbg !13951
  %call1 = call i8* @PyModule_GetState(%struct._object* %call), !dbg !13952
  %5 = bitcast i8* %call1 to %struct.elementtreestate*, !dbg !13953
  store %struct.elementtreestate* %5, %struct.elementtreestate** %st, align 8, !dbg !13950, !tbaa !2620
  %6 = load i8*, i8** %message.addr, align 8, !dbg !13954, !tbaa !2620
  %tobool = icmp ne i8* %6, null, !dbg !13954
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13954

cond.true:                                        ; preds = %entry
  %7 = load i8*, i8** %message.addr, align 8, !dbg !13955, !tbaa !2620
  br label %cond.end, !dbg !13954

cond.false:                                       ; preds = %entry
  %8 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !13957, !tbaa !2620
  %ErrorString = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %8, i32 0, i32 5, !dbg !13959
  %9 = load i8* (i32)*, i8* (i32)** %ErrorString, align 8, !dbg !13959, !tbaa !13960
  %10 = load i32, i32* %error_code.addr, align 4, !dbg !13961, !tbaa !2756
  %call2 = call i8* %9(i32 %10), !dbg !13962
  br label %cond.end, !dbg !13954

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ %call2, %cond.false ], !dbg !13954
  %11 = load i32, i32* %line.addr, align 4, !dbg !13963, !tbaa !2759
  %12 = load i32, i32* %column.addr, align 4, !dbg !13964, !tbaa !2759
  %call3 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i32 0, i32 0), i8* %cond, i32 %11, i32 %12), !dbg !13965
  store %struct._object* %call3, %struct._object** %errmsg, align 8, !dbg !13966, !tbaa !2620
  %13 = load %struct._object*, %struct._object** %errmsg, align 8, !dbg !13967, !tbaa !2620
  %cmp = icmp eq %struct._object* %13, null, !dbg !13969
  br i1 %cmp, label %if.then, label %if.end, !dbg !13970

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13971

if.end:                                           ; preds = %cond.end
  %14 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !13972, !tbaa !2620
  %parseerror_obj = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %14, i32 0, i32 0, !dbg !13973
  %15 = load %struct._object*, %struct._object** %parseerror_obj, align 8, !dbg !13973, !tbaa !2861
  %16 = load %struct._object*, %struct._object** %errmsg, align 8, !dbg !13974, !tbaa !2620
  %call4 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %16), !dbg !13975
  store %struct._object* %call4, %struct._object** %error, align 8, !dbg !13976, !tbaa !2620
  br label %do.body, !dbg !13977

do.body:                                          ; preds = %if.end
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13978
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !13978
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1896, metadata !2613), !dbg !13980
  %18 = load %struct._object*, %struct._object** %errmsg, align 8, !dbg !13981, !tbaa !2620
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !13980, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13982, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !13984
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !13985, !tbaa !2631
  %dec = add i64 %20, -1, !dbg !13985
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13985, !tbaa !2631
  %cmp5 = icmp ne i64 %dec, 0, !dbg !13986
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !13987

if.then.6:                                        ; preds = %do.body
  br label %if.end.7, !dbg !13988

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13990, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !13992
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13992, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !13993
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13993, !tbaa !2705
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13994, !tbaa !2620
  call void %23(%struct._object* %24), !dbg !13995
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13996
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !13996
  br label %do.cond, !dbg !13998

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !13999

do.end:                                           ; preds = %do.cond
  %26 = load %struct._object*, %struct._object** %error, align 8, !dbg !14001, !tbaa !2620
  %tobool8 = icmp ne %struct._object* %26, null, !dbg !14001
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !14003

if.then.9:                                        ; preds = %do.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14004

if.end.10:                                        ; preds = %do.end
  %27 = load i32, i32* %error_code.addr, align 4, !dbg !14005, !tbaa !2756
  %conv = zext i32 %27 to i64, !dbg !14006
  %call11 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !14007
  store %struct._object* %call11, %struct._object** %code, align 8, !dbg !14008, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %code, align 8, !dbg !14009, !tbaa !2620
  %tobool12 = icmp ne %struct._object* %28, null, !dbg !14009
  br i1 %tobool12, label %if.end.27, label %if.then.13, !dbg !14010

if.then.13:                                       ; preds = %if.end.10
  br label %do.body.14, !dbg !14011

do.body.14:                                       ; preds = %if.then.13
  %29 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !14012
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !14012
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1898, metadata !2613), !dbg !14014
  %30 = load %struct._object*, %struct._object** %error, align 8, !dbg !14015, !tbaa !2620
  store %struct._object* %30, %struct._object** %_py_decref_tmp15, align 8, !dbg !14014, !tbaa !2620
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !14016, !tbaa !2620
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !14018
  %32 = load i64, i64* %ob_refcnt16, align 8, !dbg !14019, !tbaa !2631
  %dec17 = add i64 %32, -1, !dbg !14019
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !14019, !tbaa !2631
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !14020
  br i1 %cmp18, label %if.then.20, label %if.else.21, !dbg !14021

if.then.20:                                       ; preds = %do.body.14
  br label %if.end.24, !dbg !14022

if.else.21:                                       ; preds = %do.body.14
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !14024, !tbaa !2620
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !14026
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !14026, !tbaa !2703
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !14027
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !14027, !tbaa !2705
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !14028, !tbaa !2620
  call void %35(%struct._object* %36), !dbg !14029
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %37 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !14030
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !14030
  br label %do.cond.25, !dbg !14032

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !14033

do.end.26:                                        ; preds = %do.cond.25
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14035

if.end.27:                                        ; preds = %if.end.10
  %38 = load %struct._object*, %struct._object** %error, align 8, !dbg !14036, !tbaa !2620
  %39 = load %struct._object*, %struct._object** %code, align 8, !dbg !14037, !tbaa !2620
  %call28 = call i32 @PyObject_SetAttrString(%struct._object* %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0), %struct._object* %39), !dbg !14038
  %cmp29 = icmp eq i32 %call28, -1, !dbg !14039
  br i1 %cmp29, label %if.then.31, label %if.end.58, !dbg !14040

if.then.31:                                       ; preds = %if.end.27
  br label %do.body.32, !dbg !14041

do.body.32:                                       ; preds = %if.then.31
  %40 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !14042
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !14042
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp33, metadata !1902, metadata !2613), !dbg !14044
  %41 = load %struct._object*, %struct._object** %error, align 8, !dbg !14045, !tbaa !2620
  store %struct._object* %41, %struct._object** %_py_decref_tmp33, align 8, !dbg !14044, !tbaa !2620
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !14046, !tbaa !2620
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !14048
  %43 = load i64, i64* %ob_refcnt34, align 8, !dbg !14049, !tbaa !2631
  %dec35 = add i64 %43, -1, !dbg !14049
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !14049, !tbaa !2631
  %cmp36 = icmp ne i64 %dec35, 0, !dbg !14050
  br i1 %cmp36, label %if.then.38, label %if.else.39, !dbg !14051

if.then.38:                                       ; preds = %do.body.32
  br label %if.end.42, !dbg !14052

if.else.39:                                       ; preds = %do.body.32
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !14054, !tbaa !2620
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !14056
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !14056, !tbaa !2703
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !14057
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !14057, !tbaa !2705
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !14058, !tbaa !2620
  call void %46(%struct._object* %47), !dbg !14059
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %48 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !14060
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !14060
  br label %do.cond.43, !dbg !14062

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !14063

do.end.44:                                        ; preds = %do.cond.43
  br label %do.body.45, !dbg !14065

do.body.45:                                       ; preds = %do.end.44
  %49 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !14066
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !14066
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !1906, metadata !2613), !dbg !14068
  %50 = load %struct._object*, %struct._object** %code, align 8, !dbg !14069, !tbaa !2620
  store %struct._object* %50, %struct._object** %_py_decref_tmp46, align 8, !dbg !14068, !tbaa !2620
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !14070, !tbaa !2620
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !14072
  %52 = load i64, i64* %ob_refcnt47, align 8, !dbg !14073, !tbaa !2631
  %dec48 = add i64 %52, -1, !dbg !14073
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !14073, !tbaa !2631
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !14074
  br i1 %cmp49, label %if.then.51, label %if.else.52, !dbg !14075

if.then.51:                                       ; preds = %do.body.45
  br label %if.end.55, !dbg !14076

if.else.52:                                       ; preds = %do.body.45
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !14078, !tbaa !2620
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !14080
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !14080, !tbaa !2703
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !14081
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8, !dbg !14081, !tbaa !2705
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !14082, !tbaa !2620
  call void %55(%struct._object* %56), !dbg !14083
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  %57 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !14084
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !14084
  br label %do.cond.56, !dbg !14085

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !14086

do.end.57:                                        ; preds = %do.cond.56
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14088

if.end.58:                                        ; preds = %if.end.27
  br label %do.body.59, !dbg !14089

do.body.59:                                       ; preds = %if.end.58
  %58 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !14090
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !14090
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp60, metadata !1908, metadata !2613), !dbg !14092
  %59 = load %struct._object*, %struct._object** %code, align 8, !dbg !14093, !tbaa !2620
  store %struct._object* %59, %struct._object** %_py_decref_tmp60, align 8, !dbg !14092, !tbaa !2620
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !14094, !tbaa !2620
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !14096
  %61 = load i64, i64* %ob_refcnt61, align 8, !dbg !14097, !tbaa !2631
  %dec62 = add i64 %61, -1, !dbg !14097
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !14097, !tbaa !2631
  %cmp63 = icmp ne i64 %dec62, 0, !dbg !14098
  br i1 %cmp63, label %if.then.65, label %if.else.66, !dbg !14099

if.then.65:                                       ; preds = %do.body.59
  br label %if.end.69, !dbg !14100

if.else.66:                                       ; preds = %do.body.59
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !14102, !tbaa !2620
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !14104
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !14104, !tbaa !2703
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !14105
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !14105, !tbaa !2705
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !14106, !tbaa !2620
  call void %64(%struct._object* %65), !dbg !14107
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  %66 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !14108
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !14108
  br label %do.cond.70, !dbg !14109

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !14110

do.end.71:                                        ; preds = %do.cond.70
  %67 = load i32, i32* %line.addr, align 4, !dbg !14112, !tbaa !2759
  %68 = load i32, i32* %column.addr, align 4, !dbg !14113, !tbaa !2759
  %call72 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i32 0, i32 0), i32 %67, i32 %68), !dbg !14114
  store %struct._object* %call72, %struct._object** %position, align 8, !dbg !14115, !tbaa !2620
  %69 = load %struct._object*, %struct._object** %position, align 8, !dbg !14116, !tbaa !2620
  %tobool73 = icmp ne %struct._object* %69, null, !dbg !14116
  br i1 %tobool73, label %if.end.88, label %if.then.74, !dbg !14117

if.then.74:                                       ; preds = %do.end.71
  br label %do.body.75, !dbg !14118

do.body.75:                                       ; preds = %if.then.74
  %70 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !14119
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !14119
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !1910, metadata !2613), !dbg !14121
  %71 = load %struct._object*, %struct._object** %error, align 8, !dbg !14122, !tbaa !2620
  store %struct._object* %71, %struct._object** %_py_decref_tmp76, align 8, !dbg !14121, !tbaa !2620
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !14123, !tbaa !2620
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !14125
  %73 = load i64, i64* %ob_refcnt77, align 8, !dbg !14126, !tbaa !2631
  %dec78 = add i64 %73, -1, !dbg !14126
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !14126, !tbaa !2631
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !14127
  br i1 %cmp79, label %if.then.81, label %if.else.82, !dbg !14128

if.then.81:                                       ; preds = %do.body.75
  br label %if.end.85, !dbg !14129

if.else.82:                                       ; preds = %do.body.75
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !14131, !tbaa !2620
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !14133
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !14133, !tbaa !2703
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !14134
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !14134, !tbaa !2705
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !14135, !tbaa !2620
  call void %76(%struct._object* %77), !dbg !14136
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.82, %if.then.81
  %78 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !14137
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !14137
  br label %do.cond.86, !dbg !14139

do.cond.86:                                       ; preds = %if.end.85
  br label %do.end.87, !dbg !14140

do.end.87:                                        ; preds = %do.cond.86
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14142

if.end.88:                                        ; preds = %do.end.71
  %79 = load %struct._object*, %struct._object** %error, align 8, !dbg !14143, !tbaa !2620
  %80 = load %struct._object*, %struct._object** %position, align 8, !dbg !14144, !tbaa !2620
  %call89 = call i32 @PyObject_SetAttrString(%struct._object* %79, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), %struct._object* %80), !dbg !14145
  %cmp90 = icmp eq i32 %call89, -1, !dbg !14146
  br i1 %cmp90, label %if.then.92, label %if.end.119, !dbg !14147

if.then.92:                                       ; preds = %if.end.88
  br label %do.body.93, !dbg !14148

do.body.93:                                       ; preds = %if.then.92
  %81 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !14149
  call void @llvm.lifetime.start(i64 8, i8* %81) #1, !dbg !14149
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !1914, metadata !2613), !dbg !14151
  %82 = load %struct._object*, %struct._object** %error, align 8, !dbg !14152, !tbaa !2620
  store %struct._object* %82, %struct._object** %_py_decref_tmp94, align 8, !dbg !14151, !tbaa !2620
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !14153, !tbaa !2620
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !14155
  %84 = load i64, i64* %ob_refcnt95, align 8, !dbg !14156, !tbaa !2631
  %dec96 = add i64 %84, -1, !dbg !14156
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !14156, !tbaa !2631
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !14157
  br i1 %cmp97, label %if.then.99, label %if.else.100, !dbg !14158

if.then.99:                                       ; preds = %do.body.93
  br label %if.end.103, !dbg !14159

if.else.100:                                      ; preds = %do.body.93
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !14161, !tbaa !2620
  %ob_type101 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !14163
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type101, align 8, !dbg !14163, !tbaa !2703
  %tp_dealloc102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !14164
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc102, align 8, !dbg !14164, !tbaa !2705
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !14165, !tbaa !2620
  call void %87(%struct._object* %88), !dbg !14166
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.100, %if.then.99
  %89 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !14167
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !14167
  br label %do.cond.104, !dbg !14169

do.cond.104:                                      ; preds = %if.end.103
  br label %do.end.105, !dbg !14170

do.end.105:                                       ; preds = %do.cond.104
  br label %do.body.106, !dbg !14172

do.body.106:                                      ; preds = %do.end.105
  %90 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !14173
  call void @llvm.lifetime.start(i64 8, i8* %90) #1, !dbg !14173
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp107, metadata !1918, metadata !2613), !dbg !14175
  %91 = load %struct._object*, %struct._object** %position, align 8, !dbg !14176, !tbaa !2620
  store %struct._object* %91, %struct._object** %_py_decref_tmp107, align 8, !dbg !14175, !tbaa !2620
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !14177, !tbaa !2620
  %ob_refcnt108 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0, !dbg !14179
  %93 = load i64, i64* %ob_refcnt108, align 8, !dbg !14180, !tbaa !2631
  %dec109 = add i64 %93, -1, !dbg !14180
  store i64 %dec109, i64* %ob_refcnt108, align 8, !dbg !14180, !tbaa !2631
  %cmp110 = icmp ne i64 %dec109, 0, !dbg !14181
  br i1 %cmp110, label %if.then.112, label %if.else.113, !dbg !14182

if.then.112:                                      ; preds = %do.body.106
  br label %if.end.116, !dbg !14183

if.else.113:                                      ; preds = %do.body.106
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !14185, !tbaa !2620
  %ob_type114 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1, !dbg !14187
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type114, align 8, !dbg !14187, !tbaa !2703
  %tp_dealloc115 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4, !dbg !14188
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc115, align 8, !dbg !14188, !tbaa !2705
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !14189, !tbaa !2620
  call void %96(%struct._object* %97), !dbg !14190
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.113, %if.then.112
  %98 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !14191
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !14191
  br label %do.cond.117, !dbg !14192

do.cond.117:                                      ; preds = %if.end.116
  br label %do.end.118, !dbg !14193

do.end.118:                                       ; preds = %do.cond.117
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14195

if.end.119:                                       ; preds = %if.end.88
  br label %do.body.120, !dbg !14196

do.body.120:                                      ; preds = %if.end.119
  %99 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !14197
  call void @llvm.lifetime.start(i64 8, i8* %99) #1, !dbg !14197
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp121, metadata !1920, metadata !2613), !dbg !14199
  %100 = load %struct._object*, %struct._object** %position, align 8, !dbg !14200, !tbaa !2620
  store %struct._object* %100, %struct._object** %_py_decref_tmp121, align 8, !dbg !14199, !tbaa !2620
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !14201, !tbaa !2620
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 0, !dbg !14203
  %102 = load i64, i64* %ob_refcnt122, align 8, !dbg !14204, !tbaa !2631
  %dec123 = add i64 %102, -1, !dbg !14204
  store i64 %dec123, i64* %ob_refcnt122, align 8, !dbg !14204, !tbaa !2631
  %cmp124 = icmp ne i64 %dec123, 0, !dbg !14205
  br i1 %cmp124, label %if.then.126, label %if.else.127, !dbg !14206

if.then.126:                                      ; preds = %do.body.120
  br label %if.end.130, !dbg !14207

if.else.127:                                      ; preds = %do.body.120
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !14209, !tbaa !2620
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !14211
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8, !dbg !14211, !tbaa !2703
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %104, i32 0, i32 4, !dbg !14212
  %105 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8, !dbg !14212, !tbaa !2705
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !14213, !tbaa !2620
  call void %105(%struct._object* %106), !dbg !14214
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  %107 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !14215
  call void @llvm.lifetime.end(i64 8, i8* %107) #1, !dbg !14215
  br label %do.cond.131, !dbg !14216

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !14217

do.end.132:                                       ; preds = %do.cond.131
  %108 = load %struct.elementtreestate*, %struct.elementtreestate** %st, align 8, !dbg !14219, !tbaa !2620
  %parseerror_obj133 = getelementptr inbounds %struct.elementtreestate, %struct.elementtreestate* %108, i32 0, i32 0, !dbg !14220
  %109 = load %struct._object*, %struct._object** %parseerror_obj133, align 8, !dbg !14220, !tbaa !2861
  %110 = load %struct._object*, %struct._object** %error, align 8, !dbg !14221, !tbaa !2620
  call void @PyErr_SetObject(%struct._object* %109, %struct._object* %110), !dbg !14222
  br label %do.body.134, !dbg !14223

do.body.134:                                      ; preds = %do.end.132
  %111 = bitcast %struct._object** %_py_decref_tmp135 to i8*, !dbg !14224
  call void @llvm.lifetime.start(i64 8, i8* %111) #1, !dbg !14224
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp135, metadata !1922, metadata !2613), !dbg !14226
  %112 = load %struct._object*, %struct._object** %error, align 8, !dbg !14227, !tbaa !2620
  store %struct._object* %112, %struct._object** %_py_decref_tmp135, align 8, !dbg !14226, !tbaa !2620
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8, !dbg !14228, !tbaa !2620
  %ob_refcnt136 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !14230
  %114 = load i64, i64* %ob_refcnt136, align 8, !dbg !14231, !tbaa !2631
  %dec137 = add i64 %114, -1, !dbg !14231
  store i64 %dec137, i64* %ob_refcnt136, align 8, !dbg !14231, !tbaa !2631
  %cmp138 = icmp ne i64 %dec137, 0, !dbg !14232
  br i1 %cmp138, label %if.then.140, label %if.else.141, !dbg !14233

if.then.140:                                      ; preds = %do.body.134
  br label %if.end.144, !dbg !14234

if.else.141:                                      ; preds = %do.body.134
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8, !dbg !14236, !tbaa !2620
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1, !dbg !14238
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8, !dbg !14238, !tbaa !2703
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 4, !dbg !14239
  %117 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8, !dbg !14239, !tbaa !2705
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8, !dbg !14240, !tbaa !2620
  call void %117(%struct._object* %118), !dbg !14241
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  %119 = bitcast %struct._object** %_py_decref_tmp135 to i8*, !dbg !14242
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !14242
  br label %do.cond.145, !dbg !14243

do.cond.145:                                      ; preds = %if.end.144
  br label %do.end.146, !dbg !14244

do.end.146:                                       ; preds = %do.cond.145
  store i32 0, i32* %cleanup.dest.slot, !dbg !14246
  br label %cleanup, !dbg !14246

cleanup:                                          ; preds = %do.end.146, %do.end.118, %do.end.87, %do.end.57, %do.end.26, %if.then.9, %if.then
  %120 = bitcast %struct.elementtreestate** %st to i8*, !dbg !14247
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !14247
  %121 = bitcast %struct._object** %code to i8*, !dbg !14247
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !14247
  %122 = bitcast %struct._object** %position to i8*, !dbg !14247
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !14247
  %123 = bitcast %struct._object** %error to i8*, !dbg !14247
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !14247
  %124 = bitcast %struct._object** %errmsg to i8*, !dbg !14247
  call void @llvm.lifetime.end(i64 8, i8* %124) #1, !dbg !14247
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !14246

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare %struct._object* @PyLong_FromLong(i64) #3

declare i32 @PyObject_SetAttrString(%struct._object*, i8*, %struct._object*) #3

declare void @PyErr_SetObject(%struct._object*, %struct._object*) #3

declare %struct._object* @PyUnicode_AsEncodedString(%struct._object*, i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @expat_start_ns_handler(%struct.XMLParserObject* %self, i8* %prefix, i8* %uri) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %prefix.addr = alloca i8*, align 8
  %uri.addr = alloca i8*, align 8
  %sprefix = alloca %struct._object*, align 8
  %suri = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp24 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2086, metadata !2613), !dbg !14248
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !2087, metadata !2613), !dbg !14249
  store i8* %uri, i8** %uri.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %uri.addr, metadata !2088, metadata !2613), !dbg !14250
  %0 = bitcast %struct._object** %sprefix to i8*, !dbg !14251
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14251
  call void @llvm.dbg.declare(metadata %struct._object** %sprefix, metadata !2089, metadata !2613), !dbg !14252
  store %struct._object* null, %struct._object** %sprefix, align 8, !dbg !14252, !tbaa !2620
  %1 = bitcast %struct._object** %suri to i8*, !dbg !14253
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14253
  call void @llvm.dbg.declare(metadata %struct._object** %suri, metadata !2090, metadata !2613), !dbg !14254
  store %struct._object* null, %struct._object** %suri, align 8, !dbg !14254, !tbaa !2620
  %call = call %struct._object* @PyErr_Occurred(), !dbg !14255
  %tobool = icmp ne %struct._object* %call, null, !dbg !14255
  br i1 %tobool, label %if.then, label %if.end, !dbg !14257

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14258

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %uri.addr, align 8, !dbg !14259, !tbaa !2620
  %tobool1 = icmp ne i8* %2, null, !dbg !14259
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !14261

if.then.2:                                        ; preds = %if.end
  %3 = load i8*, i8** %uri.addr, align 8, !dbg !14262, !tbaa !2620
  %4 = load i8*, i8** %uri.addr, align 8, !dbg !14263, !tbaa !2620
  %call3 = call i64 @strlen(i8* %4) #6, !dbg !14264
  %call4 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %3, i64 %call3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !14265
  store %struct._object* %call4, %struct._object** %suri, align 8, !dbg !14266, !tbaa !2620
  br label %if.end.6, !dbg !14267

if.else:                                          ; preds = %if.end
  %call5 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0)), !dbg !14268
  store %struct._object* %call5, %struct._object** %suri, align 8, !dbg !14269, !tbaa !2620
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.2
  %5 = load %struct._object*, %struct._object** %suri, align 8, !dbg !14270, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %5, null, !dbg !14270
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !14272

if.then.8:                                        ; preds = %if.end.6
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14273

if.end.9:                                         ; preds = %if.end.6
  %6 = load i8*, i8** %prefix.addr, align 8, !dbg !14274, !tbaa !2620
  %tobool10 = icmp ne i8* %6, null, !dbg !14274
  br i1 %tobool10, label %if.then.11, label %if.else.14, !dbg !14276

if.then.11:                                       ; preds = %if.end.9
  %7 = load i8*, i8** %prefix.addr, align 8, !dbg !14277, !tbaa !2620
  %8 = load i8*, i8** %prefix.addr, align 8, !dbg !14278, !tbaa !2620
  %call12 = call i64 @strlen(i8* %8) #6, !dbg !14279
  %call13 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %7, i64 %call12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !14280
  store %struct._object* %call13, %struct._object** %sprefix, align 8, !dbg !14281, !tbaa !2620
  br label %if.end.16, !dbg !14282

if.else.14:                                       ; preds = %if.end.9
  %call15 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i32 0, i32 0)), !dbg !14283
  store %struct._object* %call15, %struct._object** %sprefix, align 8, !dbg !14284, !tbaa !2620
  br label %if.end.16

if.end.16:                                        ; preds = %if.else.14, %if.then.11
  %9 = load %struct._object*, %struct._object** %sprefix, align 8, !dbg !14285, !tbaa !2620
  %tobool17 = icmp ne %struct._object* %9, null, !dbg !14285
  br i1 %tobool17, label %if.end.22, label %if.then.18, !dbg !14286

if.then.18:                                       ; preds = %if.end.16
  br label %do.body, !dbg !14287

do.body:                                          ; preds = %if.then.18
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14288
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !14288
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2091, metadata !2613), !dbg !14290
  %11 = load %struct._object*, %struct._object** %suri, align 8, !dbg !14291, !tbaa !2620
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !14290, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14292, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !14294
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !14295, !tbaa !2631
  %dec = add i64 %13, -1, !dbg !14295
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14295, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !14296
  br i1 %cmp, label %if.then.19, label %if.else.20, !dbg !14297

if.then.19:                                       ; preds = %do.body
  br label %if.end.21, !dbg !14298

if.else.20:                                       ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14300, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !14302
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14302, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !14303
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14303, !tbaa !2705
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14304, !tbaa !2620
  call void %16(%struct._object* %17), !dbg !14305
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.20, %if.then.19
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14306
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !14306
  br label %do.cond, !dbg !14308

do.cond:                                          ; preds = %if.end.21
  br label %do.end, !dbg !14309

do.end:                                           ; preds = %do.cond
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14311

if.end.22:                                        ; preds = %if.end.16
  %19 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14312, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %19, i32 0, i32 2, !dbg !14313
  %20 = load %struct._object*, %struct._object** %target, align 8, !dbg !14313, !tbaa !11308
  %21 = bitcast %struct._object* %20 to %struct.TreeBuilderObject*, !dbg !14314
  %22 = load %struct._object*, %struct._object** %sprefix, align 8, !dbg !14315, !tbaa !2620
  %23 = load %struct._object*, %struct._object** %suri, align 8, !dbg !14316, !tbaa !2620
  call void @treebuilder_handle_namespace(%struct.TreeBuilderObject* %21, i32 1, %struct._object* %22, %struct._object* %23), !dbg !14317
  br label %do.body.23, !dbg !14318

do.body.23:                                       ; preds = %if.end.22
  %24 = bitcast %struct._object** %_py_decref_tmp24 to i8*, !dbg !14319
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !14319
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp24, metadata !2095, metadata !2613), !dbg !14321
  %25 = load %struct._object*, %struct._object** %sprefix, align 8, !dbg !14322, !tbaa !2620
  store %struct._object* %25, %struct._object** %_py_decref_tmp24, align 8, !dbg !14321, !tbaa !2620
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !14323, !tbaa !2620
  %ob_refcnt25 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !14325
  %27 = load i64, i64* %ob_refcnt25, align 8, !dbg !14326, !tbaa !2631
  %dec26 = add i64 %27, -1, !dbg !14326
  store i64 %dec26, i64* %ob_refcnt25, align 8, !dbg !14326, !tbaa !2631
  %cmp27 = icmp ne i64 %dec26, 0, !dbg !14327
  br i1 %cmp27, label %if.then.28, label %if.else.29, !dbg !14328

if.then.28:                                       ; preds = %do.body.23
  br label %if.end.32, !dbg !14329

if.else.29:                                       ; preds = %do.body.23
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !14331, !tbaa !2620
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !14333
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !14333, !tbaa !2703
  %tp_dealloc31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !14334
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc31, align 8, !dbg !14334, !tbaa !2705
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !14335, !tbaa !2620
  call void %30(%struct._object* %31), !dbg !14336
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.28
  %32 = bitcast %struct._object** %_py_decref_tmp24 to i8*, !dbg !14337
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !14337
  br label %do.cond.33, !dbg !14339

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !14340

do.end.34:                                        ; preds = %do.cond.33
  br label %do.body.35, !dbg !14342

do.body.35:                                       ; preds = %do.end.34
  %33 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !14343
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !14343
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !2097, metadata !2613), !dbg !14345
  %34 = load %struct._object*, %struct._object** %suri, align 8, !dbg !14346, !tbaa !2620
  store %struct._object* %34, %struct._object** %_py_decref_tmp36, align 8, !dbg !14345, !tbaa !2620
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !14347, !tbaa !2620
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !14349
  %36 = load i64, i64* %ob_refcnt37, align 8, !dbg !14350, !tbaa !2631
  %dec38 = add i64 %36, -1, !dbg !14350
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !14350, !tbaa !2631
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !14351
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !14352

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !14353

if.else.41:                                       ; preds = %do.body.35
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !14355, !tbaa !2620
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !14357
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !14357, !tbaa !2703
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !14358
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !14358, !tbaa !2705
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !14359, !tbaa !2620
  call void %39(%struct._object* %40), !dbg !14360
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %41 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !14361
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !14361
  br label %do.cond.45, !dbg !14362

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !14363

do.end.46:                                        ; preds = %do.cond.45
  store i32 0, i32* %cleanup.dest.slot, !dbg !14365
  br label %cleanup, !dbg !14365

cleanup:                                          ; preds = %do.end.46, %do.end, %if.then.8, %if.then
  %42 = bitcast %struct._object** %suri to i8*, !dbg !14366
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !14366
  %43 = bitcast %struct._object** %sprefix to i8*, !dbg !14366
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !14366
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !14365

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_end_ns_handler(%struct.XMLParserObject* %self, i8* %prefix_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %prefix_in.addr = alloca i8*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2123, metadata !2613), !dbg !14368
  store i8* %prefix_in, i8** %prefix_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %prefix_in.addr, metadata !2124, metadata !2613), !dbg !14369
  %call = call %struct._object* @PyErr_Occurred(), !dbg !14370
  %tobool = icmp ne %struct._object* %call, null, !dbg !14370
  br i1 %tobool, label %if.then, label %if.end, !dbg !14372

if.then:                                          ; preds = %entry
  br label %return, !dbg !14373

if.end:                                           ; preds = %entry
  %0 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14374, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %0, i32 0, i32 2, !dbg !14375
  %1 = load %struct._object*, %struct._object** %target, align 8, !dbg !14375, !tbaa !11308
  %2 = bitcast %struct._object* %1 to %struct.TreeBuilderObject*, !dbg !14376
  call void @treebuilder_handle_namespace(%struct.TreeBuilderObject* %2, i32 0, %struct._object* null, %struct._object* null), !dbg !14377
  br label %return, !dbg !14378

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14379
}

declare %struct._object* @PyUnicode_DecodeUTF8(i8*, i64, i8*) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

; Function Attrs: nounwind uwtable
define internal void @treebuilder_handle_namespace(%struct.TreeBuilderObject* %self, i32 %start, %struct._object* %prefix, %struct._object* %uri) #0 {
entry:
  %self.addr = alloca %struct.TreeBuilderObject*, align 8
  %start.addr = alloca i32, align 4
  %prefix.addr = alloca %struct._object*, align 8
  %uri.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %action = alloca %struct._object*, align 8
  %parcel = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp44 = alloca %struct._object*, align 8
  store %struct.TreeBuilderObject* %self, %struct.TreeBuilderObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.TreeBuilderObject** %self.addr, metadata !2103, metadata !2613), !dbg !14381
  store i32 %start, i32* %start.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !2104, metadata !2613), !dbg !14382
  store %struct._object* %prefix, %struct._object** %prefix.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %prefix.addr, metadata !2105, metadata !2613), !dbg !14383
  store %struct._object* %uri, %struct._object** %uri.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct._object** %uri.addr, metadata !2106, metadata !2613), !dbg !14384
  %0 = bitcast %struct._object** %res to i8*, !dbg !14385
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14385
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2107, metadata !2613), !dbg !14386
  %1 = bitcast %struct._object** %action to i8*, !dbg !14387
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14387
  call void @llvm.dbg.declare(metadata %struct._object** %action, metadata !2108, metadata !2613), !dbg !14388
  %2 = bitcast %struct._object** %parcel to i8*, !dbg !14389
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !14389
  call void @llvm.dbg.declare(metadata %struct._object** %parcel, metadata !2109, metadata !2613), !dbg !14390
  %3 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !14391, !tbaa !2620
  %events = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %3, i32 0, i32 8, !dbg !14393
  %4 = load %struct._object*, %struct._object** %events, align 8, !dbg !14393, !tbaa !4701
  %tobool = icmp ne %struct._object* %4, null, !dbg !14391
  br i1 %tobool, label %if.end, label %if.then, !dbg !14394

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14395

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %start.addr, align 4, !dbg !14396, !tbaa !2759
  %tobool1 = icmp ne i32 %5, 0, !dbg !14396
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !14398

if.then.2:                                        ; preds = %if.end
  %6 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !14399, !tbaa !2620
  %start_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %6, i32 0, i32 11, !dbg !14402
  %7 = load %struct._object*, %struct._object** %start_ns_event_obj, align 8, !dbg !14402, !tbaa !4575
  %tobool3 = icmp ne %struct._object* %7, null, !dbg !14399
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !14403

if.then.4:                                        ; preds = %if.then.2
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14404

if.end.5:                                         ; preds = %if.then.2
  %8 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !14405, !tbaa !2620
  %start_ns_event_obj6 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %8, i32 0, i32 11, !dbg !14406
  %9 = load %struct._object*, %struct._object** %start_ns_event_obj6, align 8, !dbg !14406, !tbaa !4575
  store %struct._object* %9, %struct._object** %action, align 8, !dbg !14407, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %prefix.addr, align 8, !dbg !14408, !tbaa !2620
  %11 = load %struct._object*, %struct._object** %uri.addr, align 8, !dbg !14409, !tbaa !2620
  %call = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %10, %struct._object* %11), !dbg !14410
  store %struct._object* %call, %struct._object** %parcel, align 8, !dbg !14411, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %parcel, align 8, !dbg !14412, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %12, null, !dbg !14412
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !14414

if.then.8:                                        ; preds = %if.end.5
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14415

if.end.9:                                         ; preds = %if.end.5
  %13 = load %struct._object*, %struct._object** %action, align 8, !dbg !14416, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !14417
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !14418, !tbaa !2631
  %inc = add i64 %14, 1, !dbg !14418
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14418, !tbaa !2631
  br label %if.end.18, !dbg !14419

if.else:                                          ; preds = %if.end
  %15 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !14420, !tbaa !2620
  %end_ns_event_obj = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %15, i32 0, i32 12, !dbg !14423
  %16 = load %struct._object*, %struct._object** %end_ns_event_obj, align 8, !dbg !14423, !tbaa !4531
  %tobool10 = icmp ne %struct._object* %16, null, !dbg !14420
  br i1 %tobool10, label %if.end.12, label %if.then.11, !dbg !14424

if.then.11:                                       ; preds = %if.else
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14425

if.end.12:                                        ; preds = %if.else
  %17 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !14426, !tbaa !2620
  %end_ns_event_obj13 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %17, i32 0, i32 12, !dbg !14427
  %18 = load %struct._object*, %struct._object** %end_ns_event_obj13, align 8, !dbg !14427, !tbaa !4531
  store %struct._object* %18, %struct._object** %action, align 8, !dbg !14428, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %action, align 8, !dbg !14429, !tbaa !2620
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !14430
  %20 = load i64, i64* %ob_refcnt14, align 8, !dbg !14431, !tbaa !2631
  %inc15 = add i64 %20, 1, !dbg !14431
  store i64 %inc15, i64* %ob_refcnt14, align 8, !dbg !14431, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %parcel, align 8, !dbg !14432, !tbaa !2620
  %21 = load %struct._object*, %struct._object** %parcel, align 8, !dbg !14433, !tbaa !2620
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !14434
  %22 = load i64, i64* %ob_refcnt16, align 8, !dbg !14435, !tbaa !2631
  %inc17 = add i64 %22, 1, !dbg !14435
  store i64 %inc17, i64* %ob_refcnt16, align 8, !dbg !14435, !tbaa !2631
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.12, %if.end.9
  %call19 = call %struct._object* @PyTuple_New(i64 2), !dbg !14436
  store %struct._object* %call19, %struct._object** %res, align 8, !dbg !14437, !tbaa !2620
  %23 = load %struct._object*, %struct._object** %res, align 8, !dbg !14438, !tbaa !2620
  %tobool20 = icmp ne %struct._object* %23, null, !dbg !14438
  br i1 %tobool20, label %if.then.21, label %if.else.30, !dbg !14439

if.then.21:                                       ; preds = %if.end.18
  %24 = load %struct._object*, %struct._object** %action, align 8, !dbg !14440, !tbaa !2620
  %25 = load %struct._object*, %struct._object** %res, align 8, !dbg !14441, !tbaa !2620
  %26 = bitcast %struct._object* %25 to %struct.PyTupleObject*, !dbg !14442
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %26, i32 0, i32 1, !dbg !14443
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !14444
  store %struct._object* %24, %struct._object** %arrayidx, align 8, !dbg !14445, !tbaa !2620
  %27 = load %struct._object*, %struct._object** %parcel, align 8, !dbg !14446, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %res, align 8, !dbg !14447, !tbaa !2620
  %29 = bitcast %struct._object* %28 to %struct.PyTupleObject*, !dbg !14448
  %ob_item22 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %29, i32 0, i32 1, !dbg !14449
  %arrayidx23 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item22, i32 0, i64 1, !dbg !14450
  store %struct._object* %27, %struct._object** %arrayidx23, align 8, !dbg !14451, !tbaa !2620
  %30 = load %struct.TreeBuilderObject*, %struct.TreeBuilderObject** %self.addr, align 8, !dbg !14452, !tbaa !2620
  %events24 = getelementptr inbounds %struct.TreeBuilderObject, %struct.TreeBuilderObject* %30, i32 0, i32 8, !dbg !14453
  %31 = load %struct._object*, %struct._object** %events24, align 8, !dbg !14453, !tbaa !4701
  %32 = load %struct._object*, %struct._object** %res, align 8, !dbg !14454, !tbaa !2620
  %call25 = call i32 @PyList_Append(%struct._object* %31, %struct._object* %32), !dbg !14455
  br label %do.body, !dbg !14456

do.body:                                          ; preds = %if.then.21
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14457
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !14457
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2110, metadata !2613), !dbg !14459
  %34 = load %struct._object*, %struct._object** %res, align 8, !dbg !14460, !tbaa !2620
  store %struct._object* %34, %struct._object** %_py_decref_tmp, align 8, !dbg !14459, !tbaa !2620
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14461, !tbaa !2620
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !14463
  %36 = load i64, i64* %ob_refcnt26, align 8, !dbg !14464, !tbaa !2631
  %dec = add i64 %36, -1, !dbg !14464
  store i64 %dec, i64* %ob_refcnt26, align 8, !dbg !14464, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !14465
  br i1 %cmp, label %if.then.27, label %if.else.28, !dbg !14466

if.then.27:                                       ; preds = %do.body
  br label %if.end.29, !dbg !14467

if.else.28:                                       ; preds = %do.body
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14469, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !14471
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14471, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !14472
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14472, !tbaa !2705
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14473, !tbaa !2620
  call void %39(%struct._object* %40), !dbg !14474
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.28, %if.then.27
  %41 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14475
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !14475
  br label %do.cond, !dbg !14477

do.cond:                                          ; preds = %if.end.29
  br label %do.end, !dbg !14478

do.end:                                           ; preds = %do.cond
  br label %if.end.55, !dbg !14480

if.else.30:                                       ; preds = %if.end.18
  br label %do.body.31, !dbg !14481

do.body.31:                                       ; preds = %if.else.30
  %42 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !14482
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !14482
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !2114, metadata !2613), !dbg !14484
  %43 = load %struct._object*, %struct._object** %action, align 8, !dbg !14485, !tbaa !2620
  store %struct._object* %43, %struct._object** %_py_decref_tmp32, align 8, !dbg !14484, !tbaa !2620
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !14486, !tbaa !2620
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !14488
  %45 = load i64, i64* %ob_refcnt33, align 8, !dbg !14489, !tbaa !2631
  %dec34 = add i64 %45, -1, !dbg !14489
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !14489, !tbaa !2631
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !14490
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !14491

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !14492

if.else.37:                                       ; preds = %do.body.31
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !14494, !tbaa !2620
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !14496
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !14496, !tbaa !2703
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !14497
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !14497, !tbaa !2705
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !14498, !tbaa !2620
  call void %48(%struct._object* %49), !dbg !14499
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %50 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !14500
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !14500
  br label %do.cond.41, !dbg !14502

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !14503

do.end.42:                                        ; preds = %do.cond.41
  br label %do.body.43, !dbg !14505

do.body.43:                                       ; preds = %do.end.42
  %51 = bitcast %struct._object** %_py_decref_tmp44 to i8*, !dbg !14506
  call void @llvm.lifetime.start(i64 8, i8* %51) #1, !dbg !14506
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp44, metadata !2117, metadata !2613), !dbg !14508
  %52 = load %struct._object*, %struct._object** %parcel, align 8, !dbg !14509, !tbaa !2620
  store %struct._object* %52, %struct._object** %_py_decref_tmp44, align 8, !dbg !14508, !tbaa !2620
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !14510, !tbaa !2620
  %ob_refcnt45 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !14512
  %54 = load i64, i64* %ob_refcnt45, align 8, !dbg !14513, !tbaa !2631
  %dec46 = add i64 %54, -1, !dbg !14513
  store i64 %dec46, i64* %ob_refcnt45, align 8, !dbg !14513, !tbaa !2631
  %cmp47 = icmp ne i64 %dec46, 0, !dbg !14514
  br i1 %cmp47, label %if.then.48, label %if.else.49, !dbg !14515

if.then.48:                                       ; preds = %do.body.43
  br label %if.end.52, !dbg !14516

if.else.49:                                       ; preds = %do.body.43
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !14518, !tbaa !2620
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !14520
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !14520, !tbaa !2703
  %tp_dealloc51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !14521
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc51, align 8, !dbg !14521, !tbaa !2705
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !14522, !tbaa !2620
  call void %57(%struct._object* %58), !dbg !14523
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.49, %if.then.48
  %59 = bitcast %struct._object** %_py_decref_tmp44 to i8*, !dbg !14524
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !14524
  br label %do.cond.53, !dbg !14525

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !14526

do.end.54:                                        ; preds = %do.cond.53
  call void @PyErr_Clear(), !dbg !14528
  br label %if.end.55

if.end.55:                                        ; preds = %do.end.54, %do.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !14529
  br label %cleanup, !dbg !14529

cleanup:                                          ; preds = %if.end.55, %if.then.11, %if.then.8, %if.then.4, %if.then
  %60 = bitcast %struct._object** %parcel to i8*, !dbg !14530
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !14530
  %61 = bitcast %struct._object** %action to i8*, !dbg !14530
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !14530
  %62 = bitcast %struct._object** %res to i8*, !dbg !14530
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !14530
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !14529

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_start_handler(%struct.XMLParserObject* %self, i8* %tag_in, i8** %attrib_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %tag_in.addr = alloca i8*, align 8
  %attrib_in.addr = alloca i8**, align 8
  %res = alloca %struct._object*, align 8
  %tag = alloca %struct._object*, align 8
  %attrib = alloca %struct._object*, align 8
  %ok = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp33 = alloca %struct._object*, align 8
  %_py_decref_tmp37 = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  %_py_decref_tmp92 = alloca %struct._object*, align 8
  %_py_decref_tmp125 = alloca %struct._object*, align 8
  %_py_decref_tmp137 = alloca %struct._object*, align 8
  %_py_xdecref_tmp149 = alloca %struct._object*, align 8
  %_py_decref_tmp153 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2180, metadata !2613), !dbg !14532
  store i8* %tag_in, i8** %tag_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %tag_in.addr, metadata !2181, metadata !2613), !dbg !14533
  store i8** %attrib_in, i8*** %attrib_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8*** %attrib_in.addr, metadata !2182, metadata !2613), !dbg !14534
  %0 = bitcast %struct._object** %res to i8*, !dbg !14535
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14535
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2183, metadata !2613), !dbg !14536
  %1 = bitcast %struct._object** %tag to i8*, !dbg !14537
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14537
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !2184, metadata !2613), !dbg !14538
  %2 = bitcast %struct._object** %attrib to i8*, !dbg !14539
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !14539
  call void @llvm.dbg.declare(metadata %struct._object** %attrib, metadata !2185, metadata !2613), !dbg !14540
  %3 = bitcast i32* %ok to i8*, !dbg !14541
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !14541
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !2186, metadata !2613), !dbg !14542
  %call = call %struct._object* @PyErr_Occurred(), !dbg !14543
  %tobool = icmp ne %struct._object* %call, null, !dbg !14543
  br i1 %tobool, label %if.then, label %if.end, !dbg !14545

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167, !dbg !14546

if.end:                                           ; preds = %entry
  %4 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14547, !tbaa !2620
  %5 = load i8*, i8** %tag_in.addr, align 8, !dbg !14548, !tbaa !2620
  %call1 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %4, i8* %5), !dbg !14549
  store %struct._object* %call1, %struct._object** %tag, align 8, !dbg !14550, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %tag, align 8, !dbg !14551, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %6, null, !dbg !14551
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !14553

if.then.3:                                        ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167, !dbg !14554

if.end.4:                                         ; preds = %if.end
  %7 = load i8**, i8*** %attrib_in.addr, align 8, !dbg !14555, !tbaa !2620
  %arrayidx = getelementptr i8*, i8** %7, i64 0, !dbg !14555
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !14555, !tbaa !2620
  %tobool5 = icmp ne i8* %8, null, !dbg !14555
  br i1 %tobool5, label %if.then.6, label %if.else.105, !dbg !14556

if.then.6:                                        ; preds = %if.end.4
  %call7 = call %struct._object* @PyDict_New(), !dbg !14557
  store %struct._object* %call7, %struct._object** %attrib, align 8, !dbg !14558, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14559, !tbaa !2620
  %tobool8 = icmp ne %struct._object* %9, null, !dbg !14559
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !14561

if.then.9:                                        ; preds = %if.then.6
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167, !dbg !14562

if.end.10:                                        ; preds = %if.then.6
  br label %while.cond, !dbg !14563

while.cond:                                       ; preds = %cleanup.cont, %if.end.10
  %10 = load i8**, i8*** %attrib_in.addr, align 8, !dbg !14564, !tbaa !2620
  %arrayidx11 = getelementptr i8*, i8** %10, i64 0, !dbg !14564
  %11 = load i8*, i8** %arrayidx11, align 8, !dbg !14564, !tbaa !2620
  %tobool12 = icmp ne i8* %11, null, !dbg !14564
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !14567

land.rhs:                                         ; preds = %while.cond
  %12 = load i8**, i8*** %attrib_in.addr, align 8, !dbg !14568, !tbaa !2620
  %arrayidx13 = getelementptr i8*, i8** %12, i64 1, !dbg !14568
  %13 = load i8*, i8** %arrayidx13, align 8, !dbg !14568, !tbaa !2620
  %tobool14 = icmp ne i8* %13, null, !dbg !14567
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool14, %land.rhs ]
  br i1 %14, label %while.body, label %while.end, !dbg !14570

while.body:                                       ; preds = %land.end
  %15 = bitcast %struct._object** %key to i8*, !dbg !14572
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !14572
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !2187, metadata !2613), !dbg !14573
  %16 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14574, !tbaa !2620
  %17 = load i8**, i8*** %attrib_in.addr, align 8, !dbg !14575, !tbaa !2620
  %arrayidx15 = getelementptr i8*, i8** %17, i64 0, !dbg !14575
  %18 = load i8*, i8** %arrayidx15, align 8, !dbg !14575, !tbaa !2620
  %call16 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %16, i8* %18), !dbg !14576
  store %struct._object* %call16, %struct._object** %key, align 8, !dbg !14573, !tbaa !2620
  %19 = bitcast %struct._object** %value to i8*, !dbg !14577
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !14577
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2191, metadata !2613), !dbg !14578
  %20 = load i8**, i8*** %attrib_in.addr, align 8, !dbg !14579, !tbaa !2620
  %arrayidx17 = getelementptr i8*, i8** %20, i64 1, !dbg !14579
  %21 = load i8*, i8** %arrayidx17, align 8, !dbg !14579, !tbaa !2620
  %22 = load i8**, i8*** %attrib_in.addr, align 8, !dbg !14580, !tbaa !2620
  %arrayidx18 = getelementptr i8*, i8** %22, i64 1, !dbg !14580
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !14580, !tbaa !2620
  %call19 = call i64 @strlen(i8* %23) #6, !dbg !14581
  %call20 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %21, i64 %call19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !14582
  store %struct._object* %call20, %struct._object** %value, align 8, !dbg !14578, !tbaa !2620
  %24 = load %struct._object*, %struct._object** %key, align 8, !dbg !14583, !tbaa !2620
  %tobool21 = icmp ne %struct._object* %24, null, !dbg !14583
  br i1 %tobool21, label %lor.lhs.false, label %if.then.23, !dbg !14584

lor.lhs.false:                                    ; preds = %while.body
  %25 = load %struct._object*, %struct._object** %value, align 8, !dbg !14585, !tbaa !2620
  %tobool22 = icmp ne %struct._object* %25, null, !dbg !14585
  br i1 %tobool22, label %if.end.63, label %if.then.23, !dbg !14587

if.then.23:                                       ; preds = %lor.lhs.false, %while.body
  br label %do.body, !dbg !14588

do.body:                                          ; preds = %if.then.23
  %26 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14589
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !14589
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2192, metadata !2613), !dbg !14591
  %27 = load %struct._object*, %struct._object** %value, align 8, !dbg !14592, !tbaa !2620
  store %struct._object* %27, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14591, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14593, !tbaa !2620
  %cmp = icmp ne %struct._object* %28, null, !dbg !14594
  br i1 %cmp, label %if.then.24, label %if.end.29, !dbg !14595

if.then.24:                                       ; preds = %do.body
  br label %do.body.25, !dbg !14596

do.body.25:                                       ; preds = %if.then.24
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14598
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !14598
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2196, metadata !2613), !dbg !14600
  %30 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14601, !tbaa !2620
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8, !dbg !14600, !tbaa !2620
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14602, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !14604
  %32 = load i64, i64* %ob_refcnt, align 8, !dbg !14605, !tbaa !2631
  %dec = add i64 %32, -1, !dbg !14605
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14605, !tbaa !2631
  %cmp26 = icmp ne i64 %dec, 0, !dbg !14606
  br i1 %cmp26, label %if.then.27, label %if.else, !dbg !14607

if.then.27:                                       ; preds = %do.body.25
  br label %if.end.28, !dbg !14608

if.else:                                          ; preds = %do.body.25
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14610, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !14612
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14612, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !14613
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14613, !tbaa !2705
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14614, !tbaa !2620
  call void %35(%struct._object* %36), !dbg !14615
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.27
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14616
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !14616
  br label %do.cond, !dbg !14618

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !14619

do.end:                                           ; preds = %do.cond
  br label %if.end.29, !dbg !14621

if.end.29:                                        ; preds = %do.end, %do.body
  %38 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14623
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !14623
  br label %do.cond.30, !dbg !14626

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !14627

do.end.31:                                        ; preds = %do.cond.30
  br label %do.body.32, !dbg !14629

do.body.32:                                       ; preds = %do.end.31
  %39 = bitcast %struct._object** %_py_xdecref_tmp33 to i8*, !dbg !14630
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !14630
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp33, metadata !2199, metadata !2613), !dbg !14632
  %40 = load %struct._object*, %struct._object** %key, align 8, !dbg !14633, !tbaa !2620
  store %struct._object* %40, %struct._object** %_py_xdecref_tmp33, align 8, !dbg !14632, !tbaa !2620
  %41 = load %struct._object*, %struct._object** %_py_xdecref_tmp33, align 8, !dbg !14634, !tbaa !2620
  %cmp34 = icmp ne %struct._object* %41, null, !dbg !14635
  br i1 %cmp34, label %if.then.35, label %if.end.48, !dbg !14636

if.then.35:                                       ; preds = %do.body.32
  br label %do.body.36, !dbg !14637

do.body.36:                                       ; preds = %if.then.35
  %42 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !14639
  call void @llvm.lifetime.start(i64 8, i8* %42) #1, !dbg !14639
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp37, metadata !2201, metadata !2613), !dbg !14641
  %43 = load %struct._object*, %struct._object** %_py_xdecref_tmp33, align 8, !dbg !14642, !tbaa !2620
  store %struct._object* %43, %struct._object** %_py_decref_tmp37, align 8, !dbg !14641, !tbaa !2620
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !14643, !tbaa !2620
  %ob_refcnt38 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !14645
  %45 = load i64, i64* %ob_refcnt38, align 8, !dbg !14646, !tbaa !2631
  %dec39 = add i64 %45, -1, !dbg !14646
  store i64 %dec39, i64* %ob_refcnt38, align 8, !dbg !14646, !tbaa !2631
  %cmp40 = icmp ne i64 %dec39, 0, !dbg !14647
  br i1 %cmp40, label %if.then.41, label %if.else.42, !dbg !14648

if.then.41:                                       ; preds = %do.body.36
  br label %if.end.45, !dbg !14649

if.else.42:                                       ; preds = %do.body.36
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !14651, !tbaa !2620
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !14653
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !14653, !tbaa !2703
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !14654
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !14654, !tbaa !2705
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp37, align 8, !dbg !14655, !tbaa !2620
  call void %48(%struct._object* %49), !dbg !14656
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %50 = bitcast %struct._object** %_py_decref_tmp37 to i8*, !dbg !14657
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !14657
  br label %do.cond.46, !dbg !14659

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !14660

do.end.47:                                        ; preds = %do.cond.46
  br label %if.end.48, !dbg !14662

if.end.48:                                        ; preds = %do.end.47, %do.body.32
  %51 = bitcast %struct._object** %_py_xdecref_tmp33 to i8*, !dbg !14664
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !14664
  br label %do.cond.49, !dbg !14665

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !14666

do.end.50:                                        ; preds = %do.cond.49
  br label %do.body.51, !dbg !14668

do.body.51:                                       ; preds = %do.end.50
  %52 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !14669
  call void @llvm.lifetime.start(i64 8, i8* %52) #1, !dbg !14669
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !2204, metadata !2613), !dbg !14671
  %53 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14672, !tbaa !2620
  store %struct._object* %53, %struct._object** %_py_decref_tmp52, align 8, !dbg !14671, !tbaa !2620
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !14673, !tbaa !2620
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !14675
  %55 = load i64, i64* %ob_refcnt53, align 8, !dbg !14676, !tbaa !2631
  %dec54 = add i64 %55, -1, !dbg !14676
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !14676, !tbaa !2631
  %cmp55 = icmp ne i64 %dec54, 0, !dbg !14677
  br i1 %cmp55, label %if.then.56, label %if.else.57, !dbg !14678

if.then.56:                                       ; preds = %do.body.51
  br label %if.end.60, !dbg !14679

if.else.57:                                       ; preds = %do.body.51
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !14681, !tbaa !2620
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !14683
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !14683, !tbaa !2703
  %tp_dealloc59 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !14684
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc59, align 8, !dbg !14684, !tbaa !2705
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !14685, !tbaa !2620
  call void %58(%struct._object* %59), !dbg !14686
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57, %if.then.56
  %60 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !14687
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !14687
  br label %do.cond.61, !dbg !14689

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !14690

do.end.62:                                        ; preds = %do.cond.61
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14692

if.end.63:                                        ; preds = %lor.lhs.false
  %61 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14693, !tbaa !2620
  %62 = load %struct._object*, %struct._object** %key, align 8, !dbg !14694, !tbaa !2620
  %63 = load %struct._object*, %struct._object** %value, align 8, !dbg !14695, !tbaa !2620
  %call64 = call i32 @PyDict_SetItem(%struct._object* %61, %struct._object* %62, %struct._object* %63), !dbg !14696
  store i32 %call64, i32* %ok, align 4, !dbg !14697, !tbaa !2759
  br label %do.body.65, !dbg !14698

do.body.65:                                       ; preds = %if.end.63
  %64 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !14699
  call void @llvm.lifetime.start(i64 8, i8* %64) #1, !dbg !14699
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp66, metadata !2206, metadata !2613), !dbg !14701
  %65 = load %struct._object*, %struct._object** %value, align 8, !dbg !14702, !tbaa !2620
  store %struct._object* %65, %struct._object** %_py_decref_tmp66, align 8, !dbg !14701, !tbaa !2620
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !14703, !tbaa !2620
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !14705
  %67 = load i64, i64* %ob_refcnt67, align 8, !dbg !14706, !tbaa !2631
  %dec68 = add i64 %67, -1, !dbg !14706
  store i64 %dec68, i64* %ob_refcnt67, align 8, !dbg !14706, !tbaa !2631
  %cmp69 = icmp ne i64 %dec68, 0, !dbg !14707
  br i1 %cmp69, label %if.then.70, label %if.else.71, !dbg !14708

if.then.70:                                       ; preds = %do.body.65
  br label %if.end.74, !dbg !14709

if.else.71:                                       ; preds = %do.body.65
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !14711, !tbaa !2620
  %ob_type72 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !14713
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type72, align 8, !dbg !14713, !tbaa !2703
  %tp_dealloc73 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4, !dbg !14714
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc73, align 8, !dbg !14714, !tbaa !2705
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8, !dbg !14715, !tbaa !2620
  call void %70(%struct._object* %71), !dbg !14716
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.71, %if.then.70
  %72 = bitcast %struct._object** %_py_decref_tmp66 to i8*, !dbg !14717
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !14717
  br label %do.cond.75, !dbg !14719

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !14720

do.end.76:                                        ; preds = %do.cond.75
  br label %do.body.77, !dbg !14722

do.body.77:                                       ; preds = %do.end.76
  %73 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !14723
  call void @llvm.lifetime.start(i64 8, i8* %73) #1, !dbg !14723
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp78, metadata !2208, metadata !2613), !dbg !14725
  %74 = load %struct._object*, %struct._object** %key, align 8, !dbg !14726, !tbaa !2620
  store %struct._object* %74, %struct._object** %_py_decref_tmp78, align 8, !dbg !14725, !tbaa !2620
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !14727, !tbaa !2620
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0, !dbg !14729
  %76 = load i64, i64* %ob_refcnt79, align 8, !dbg !14730, !tbaa !2631
  %dec80 = add i64 %76, -1, !dbg !14730
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !14730, !tbaa !2631
  %cmp81 = icmp ne i64 %dec80, 0, !dbg !14731
  br i1 %cmp81, label %if.then.82, label %if.else.83, !dbg !14732

if.then.82:                                       ; preds = %do.body.77
  br label %if.end.86, !dbg !14733

if.else.83:                                       ; preds = %do.body.77
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !14735, !tbaa !2620
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1, !dbg !14737
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !14737, !tbaa !2703
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 4, !dbg !14738
  %79 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !14738, !tbaa !2705
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !14739, !tbaa !2620
  call void %79(%struct._object* %80), !dbg !14740
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  %81 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !14741
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !14741
  br label %do.cond.87, !dbg !14742

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !14743

do.end.88:                                        ; preds = %do.cond.87
  %82 = load i32, i32* %ok, align 4, !dbg !14745, !tbaa !2759
  %cmp89 = icmp slt i32 %82, 0, !dbg !14746
  br i1 %cmp89, label %if.then.90, label %if.end.103, !dbg !14747

if.then.90:                                       ; preds = %do.end.88
  br label %do.body.91, !dbg !14748

do.body.91:                                       ; preds = %if.then.90
  %83 = bitcast %struct._object** %_py_decref_tmp92 to i8*, !dbg !14749
  call void @llvm.lifetime.start(i64 8, i8* %83) #1, !dbg !14749
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp92, metadata !2210, metadata !2613), !dbg !14751
  %84 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14752, !tbaa !2620
  store %struct._object* %84, %struct._object** %_py_decref_tmp92, align 8, !dbg !14751, !tbaa !2620
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !14753, !tbaa !2620
  %ob_refcnt93 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0, !dbg !14755
  %86 = load i64, i64* %ob_refcnt93, align 8, !dbg !14756, !tbaa !2631
  %dec94 = add i64 %86, -1, !dbg !14756
  store i64 %dec94, i64* %ob_refcnt93, align 8, !dbg !14756, !tbaa !2631
  %cmp95 = icmp ne i64 %dec94, 0, !dbg !14757
  br i1 %cmp95, label %if.then.96, label %if.else.97, !dbg !14758

if.then.96:                                       ; preds = %do.body.91
  br label %if.end.100, !dbg !14759

if.else.97:                                       ; preds = %do.body.91
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !14761, !tbaa !2620
  %ob_type98 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1, !dbg !14763
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type98, align 8, !dbg !14763, !tbaa !2703
  %tp_dealloc99 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4, !dbg !14764
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc99, align 8, !dbg !14764, !tbaa !2705
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !14765, !tbaa !2620
  call void %89(%struct._object* %90), !dbg !14766
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.97, %if.then.96
  %91 = bitcast %struct._object** %_py_decref_tmp92 to i8*, !dbg !14767
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !14767
  br label %do.cond.101, !dbg !14769

do.cond.101:                                      ; preds = %if.end.100
  br label %do.end.102, !dbg !14770

do.end.102:                                       ; preds = %do.cond.101
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14772

if.end.103:                                       ; preds = %do.end.88
  %92 = load i8**, i8*** %attrib_in.addr, align 8, !dbg !14773, !tbaa !2620
  %add.ptr = getelementptr i8*, i8** %92, i64 2, !dbg !14773
  store i8** %add.ptr, i8*** %attrib_in.addr, align 8, !dbg !14773, !tbaa !2620
  store i32 0, i32* %cleanup.dest.slot, !dbg !14774
  br label %cleanup, !dbg !14774

cleanup:                                          ; preds = %if.end.103, %do.end.102, %do.end.62
  %93 = bitcast %struct._object** %value to i8*, !dbg !14775
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !14775
  %94 = bitcast %struct._object** %key to i8*, !dbg !14775
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !14775
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.167 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !14563

while.end:                                        ; preds = %land.end
  br label %if.end.110, !dbg !14776

if.else.105:                                      ; preds = %if.end.4
  %call106 = call %struct._object* @PyDict_New(), !dbg !14777
  store %struct._object* %call106, %struct._object** %attrib, align 8, !dbg !14779, !tbaa !2620
  %95 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14780, !tbaa !2620
  %tobool107 = icmp ne %struct._object* %95, null, !dbg !14780
  br i1 %tobool107, label %if.end.109, label %if.then.108, !dbg !14782

if.then.108:                                      ; preds = %if.else.105
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167, !dbg !14783

if.end.109:                                       ; preds = %if.else.105
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %while.end
  %96 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14784, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %96, i32 0, i32 2, !dbg !14786
  %97 = load %struct._object*, %struct._object** %target, align 8, !dbg !14786, !tbaa !11308
  %ob_type111 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !14787
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type111, align 8, !dbg !14787, !tbaa !2703
  %cmp112 = icmp eq %struct._typeobject* %98, @TreeBuilder_Type, !dbg !14788
  br i1 %cmp112, label %if.then.113, label %if.else.116, !dbg !14789

if.then.113:                                      ; preds = %if.end.110
  %99 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14790, !tbaa !2620
  %target114 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %99, i32 0, i32 2, !dbg !14792
  %100 = load %struct._object*, %struct._object** %target114, align 8, !dbg !14792, !tbaa !11308
  %101 = bitcast %struct._object* %100 to %struct.TreeBuilderObject*, !dbg !14793
  %102 = load %struct._object*, %struct._object** %tag, align 8, !dbg !14794, !tbaa !2620
  %103 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14795, !tbaa !2620
  %call115 = call %struct._object* @treebuilder_handle_start(%struct.TreeBuilderObject* %101, %struct._object* %102, %struct._object* %103), !dbg !14796
  store %struct._object* %call115, %struct._object** %res, align 8, !dbg !14797, !tbaa !2620
  br label %if.end.123, !dbg !14798

if.else.116:                                      ; preds = %if.end.110
  %104 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14799, !tbaa !2620
  %handle_start = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %104, i32 0, i32 5, !dbg !14801
  %105 = load %struct._object*, %struct._object** %handle_start, align 8, !dbg !14801, !tbaa !11486
  %tobool117 = icmp ne %struct._object* %105, null, !dbg !14799
  br i1 %tobool117, label %if.then.118, label %if.else.121, !dbg !14802

if.then.118:                                      ; preds = %if.else.116
  %106 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14803, !tbaa !2620
  %handle_start119 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %106, i32 0, i32 5, !dbg !14805
  %107 = load %struct._object*, %struct._object** %handle_start119, align 8, !dbg !14805, !tbaa !11486
  %108 = load %struct._object*, %struct._object** %tag, align 8, !dbg !14806, !tbaa !2620
  %109 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14807, !tbaa !2620
  %call120 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %107, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %108, %struct._object* %109), !dbg !14808
  store %struct._object* %call120, %struct._object** %res, align 8, !dbg !14809, !tbaa !2620
  br label %if.end.122, !dbg !14810

if.else.121:                                      ; preds = %if.else.116
  store %struct._object* null, %struct._object** %res, align 8, !dbg !14811, !tbaa !2620
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.121, %if.then.118
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.then.113
  br label %do.body.124, !dbg !14812

do.body.124:                                      ; preds = %if.end.123
  %110 = bitcast %struct._object** %_py_decref_tmp125 to i8*, !dbg !14813
  call void @llvm.lifetime.start(i64 8, i8* %110) #1, !dbg !14813
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp125, metadata !2214, metadata !2613), !dbg !14815
  %111 = load %struct._object*, %struct._object** %tag, align 8, !dbg !14816, !tbaa !2620
  store %struct._object* %111, %struct._object** %_py_decref_tmp125, align 8, !dbg !14815, !tbaa !2620
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8, !dbg !14817, !tbaa !2620
  %ob_refcnt126 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !14819
  %113 = load i64, i64* %ob_refcnt126, align 8, !dbg !14820, !tbaa !2631
  %dec127 = add i64 %113, -1, !dbg !14820
  store i64 %dec127, i64* %ob_refcnt126, align 8, !dbg !14820, !tbaa !2631
  %cmp128 = icmp ne i64 %dec127, 0, !dbg !14821
  br i1 %cmp128, label %if.then.129, label %if.else.130, !dbg !14822

if.then.129:                                      ; preds = %do.body.124
  br label %if.end.133, !dbg !14823

if.else.130:                                      ; preds = %do.body.124
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8, !dbg !14825, !tbaa !2620
  %ob_type131 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !14827
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type131, align 8, !dbg !14827, !tbaa !2703
  %tp_dealloc132 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 4, !dbg !14828
  %116 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc132, align 8, !dbg !14828, !tbaa !2705
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp125, align 8, !dbg !14829, !tbaa !2620
  call void %116(%struct._object* %117), !dbg !14830
  br label %if.end.133

if.end.133:                                       ; preds = %if.else.130, %if.then.129
  %118 = bitcast %struct._object** %_py_decref_tmp125 to i8*, !dbg !14831
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !14831
  br label %do.cond.134, !dbg !14833

do.cond.134:                                      ; preds = %if.end.133
  br label %do.end.135, !dbg !14834

do.end.135:                                       ; preds = %do.cond.134
  br label %do.body.136, !dbg !14836

do.body.136:                                      ; preds = %do.end.135
  %119 = bitcast %struct._object** %_py_decref_tmp137 to i8*, !dbg !14837
  call void @llvm.lifetime.start(i64 8, i8* %119) #1, !dbg !14837
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp137, metadata !2216, metadata !2613), !dbg !14839
  %120 = load %struct._object*, %struct._object** %attrib, align 8, !dbg !14840, !tbaa !2620
  store %struct._object* %120, %struct._object** %_py_decref_tmp137, align 8, !dbg !14839, !tbaa !2620
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp137, align 8, !dbg !14841, !tbaa !2620
  %ob_refcnt138 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 0, !dbg !14843
  %122 = load i64, i64* %ob_refcnt138, align 8, !dbg !14844, !tbaa !2631
  %dec139 = add i64 %122, -1, !dbg !14844
  store i64 %dec139, i64* %ob_refcnt138, align 8, !dbg !14844, !tbaa !2631
  %cmp140 = icmp ne i64 %dec139, 0, !dbg !14845
  br i1 %cmp140, label %if.then.141, label %if.else.142, !dbg !14846

if.then.141:                                      ; preds = %do.body.136
  br label %if.end.145, !dbg !14847

if.else.142:                                      ; preds = %do.body.136
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp137, align 8, !dbg !14849, !tbaa !2620
  %ob_type143 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 1, !dbg !14851
  %124 = load %struct._typeobject*, %struct._typeobject** %ob_type143, align 8, !dbg !14851, !tbaa !2703
  %tp_dealloc144 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %124, i32 0, i32 4, !dbg !14852
  %125 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc144, align 8, !dbg !14852, !tbaa !2705
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp137, align 8, !dbg !14853, !tbaa !2620
  call void %125(%struct._object* %126), !dbg !14854
  br label %if.end.145

if.end.145:                                       ; preds = %if.else.142, %if.then.141
  %127 = bitcast %struct._object** %_py_decref_tmp137 to i8*, !dbg !14855
  call void @llvm.lifetime.end(i64 8, i8* %127) #1, !dbg !14855
  br label %do.cond.146, !dbg !14856

do.cond.146:                                      ; preds = %if.end.145
  br label %do.end.147, !dbg !14857

do.end.147:                                       ; preds = %do.cond.146
  br label %do.body.148, !dbg !14859

do.body.148:                                      ; preds = %do.end.147
  %128 = bitcast %struct._object** %_py_xdecref_tmp149 to i8*, !dbg !14860
  call void @llvm.lifetime.start(i64 8, i8* %128) #1, !dbg !14860
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp149, metadata !2218, metadata !2613), !dbg !14862
  %129 = load %struct._object*, %struct._object** %res, align 8, !dbg !14863, !tbaa !2620
  store %struct._object* %129, %struct._object** %_py_xdecref_tmp149, align 8, !dbg !14862, !tbaa !2620
  %130 = load %struct._object*, %struct._object** %_py_xdecref_tmp149, align 8, !dbg !14864, !tbaa !2620
  %cmp150 = icmp ne %struct._object* %130, null, !dbg !14865
  br i1 %cmp150, label %if.then.151, label %if.end.164, !dbg !14866

if.then.151:                                      ; preds = %do.body.148
  br label %do.body.152, !dbg !14867

do.body.152:                                      ; preds = %if.then.151
  %131 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !14869
  call void @llvm.lifetime.start(i64 8, i8* %131) #1, !dbg !14869
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp153, metadata !2220, metadata !2613), !dbg !14871
  %132 = load %struct._object*, %struct._object** %_py_xdecref_tmp149, align 8, !dbg !14872, !tbaa !2620
  store %struct._object* %132, %struct._object** %_py_decref_tmp153, align 8, !dbg !14871, !tbaa !2620
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !14873, !tbaa !2620
  %ob_refcnt154 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 0, !dbg !14875
  %134 = load i64, i64* %ob_refcnt154, align 8, !dbg !14876, !tbaa !2631
  %dec155 = add i64 %134, -1, !dbg !14876
  store i64 %dec155, i64* %ob_refcnt154, align 8, !dbg !14876, !tbaa !2631
  %cmp156 = icmp ne i64 %dec155, 0, !dbg !14877
  br i1 %cmp156, label %if.then.157, label %if.else.158, !dbg !14878

if.then.157:                                      ; preds = %do.body.152
  br label %if.end.161, !dbg !14879

if.else.158:                                      ; preds = %do.body.152
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !14881, !tbaa !2620
  %ob_type159 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 1, !dbg !14883
  %136 = load %struct._typeobject*, %struct._typeobject** %ob_type159, align 8, !dbg !14883, !tbaa !2703
  %tp_dealloc160 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %136, i32 0, i32 4, !dbg !14884
  %137 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc160, align 8, !dbg !14884, !tbaa !2705
  %138 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !14885, !tbaa !2620
  call void %137(%struct._object* %138), !dbg !14886
  br label %if.end.161

if.end.161:                                       ; preds = %if.else.158, %if.then.157
  %139 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !14887
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !14887
  br label %do.cond.162, !dbg !14889

do.cond.162:                                      ; preds = %if.end.161
  br label %do.end.163, !dbg !14890

do.end.163:                                       ; preds = %do.cond.162
  br label %if.end.164, !dbg !14892

if.end.164:                                       ; preds = %do.end.163, %do.body.148
  %140 = bitcast %struct._object** %_py_xdecref_tmp149 to i8*, !dbg !14894
  call void @llvm.lifetime.end(i64 8, i8* %140) #1, !dbg !14894
  br label %do.cond.165, !dbg !14897

do.cond.165:                                      ; preds = %if.end.164
  br label %do.end.166, !dbg !14898

do.end.166:                                       ; preds = %do.cond.165
  store i32 0, i32* %cleanup.dest.slot, !dbg !14900
  br label %cleanup.167, !dbg !14900

cleanup.167:                                      ; preds = %do.end.166, %if.then.108, %cleanup, %if.then.9, %if.then.3, %if.then
  %141 = bitcast i32* %ok to i8*, !dbg !14901
  call void @llvm.lifetime.end(i64 4, i8* %141) #1, !dbg !14901
  %142 = bitcast %struct._object** %attrib to i8*, !dbg !14901
  call void @llvm.lifetime.end(i64 8, i8* %142) #1, !dbg !14901
  %143 = bitcast %struct._object** %tag to i8*, !dbg !14901
  call void @llvm.lifetime.end(i64 8, i8* %143) #1, !dbg !14901
  %144 = bitcast %struct._object** %res to i8*, !dbg !14901
  call void @llvm.lifetime.end(i64 8, i8* %144) #1, !dbg !14901
  %cleanup.dest.171 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.171, label %unreachable [
    i32 0, label %cleanup.cont.172
    i32 1, label %cleanup.cont.172
  ]

cleanup.cont.172:                                 ; preds = %cleanup.167, %cleanup.167
  ret void, !dbg !14900

unreachable:                                      ; preds = %cleanup.167
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_end_handler(%struct.XMLParserObject* %self, i8* %tag_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %tag_in.addr = alloca i8*, align 8
  %tag = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2259, metadata !2613), !dbg !14903
  store i8* %tag_in, i8** %tag_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %tag_in.addr, metadata !2260, metadata !2613), !dbg !14904
  %0 = bitcast %struct._object** %tag to i8*, !dbg !14905
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !14905
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !2261, metadata !2613), !dbg !14906
  %1 = bitcast %struct._object** %res to i8*, !dbg !14907
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !14907
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2262, metadata !2613), !dbg !14908
  store %struct._object* null, %struct._object** %res, align 8, !dbg !14908, !tbaa !2620
  %call = call %struct._object* @PyErr_Occurred(), !dbg !14909
  %tobool = icmp ne %struct._object* %call, null, !dbg !14909
  br i1 %tobool, label %if.then, label %if.end, !dbg !14911

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14912

if.end:                                           ; preds = %entry
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14913, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %2, i32 0, i32 2, !dbg !14914
  %3 = load %struct._object*, %struct._object** %target, align 8, !dbg !14914, !tbaa !11308
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !14915
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14915, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %4, @TreeBuilder_Type, !dbg !14916
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !14917

if.then.1:                                        ; preds = %if.end
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14918, !tbaa !2620
  %target2 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 2, !dbg !14919
  %6 = load %struct._object*, %struct._object** %target2, align 8, !dbg !14919, !tbaa !11308
  %7 = bitcast %struct._object* %6 to %struct.TreeBuilderObject*, !dbg !14920
  %call3 = call %struct._object* @treebuilder_handle_end(%struct.TreeBuilderObject* %7, %struct._object* @_Py_NoneStruct), !dbg !14921
  store %struct._object* %call3, %struct._object** %res, align 8, !dbg !14922, !tbaa !2620
  br label %if.end.18, !dbg !14923

if.else:                                          ; preds = %if.end
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14924, !tbaa !2620
  %handle_end = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 7, !dbg !14925
  %9 = load %struct._object*, %struct._object** %handle_end, align 8, !dbg !14925, !tbaa !11428
  %tobool4 = icmp ne %struct._object* %9, null, !dbg !14924
  br i1 %tobool4, label %if.then.5, label %if.end.17, !dbg !14926

if.then.5:                                        ; preds = %if.else
  %10 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14927, !tbaa !2620
  %11 = load i8*, i8** %tag_in.addr, align 8, !dbg !14928, !tbaa !2620
  %call6 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %10, i8* %11), !dbg !14929
  store %struct._object* %call6, %struct._object** %tag, align 8, !dbg !14930, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %tag, align 8, !dbg !14931, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %12, null, !dbg !14931
  br i1 %tobool7, label %if.then.8, label %if.end.16, !dbg !14932

if.then.8:                                        ; preds = %if.then.5
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !14933, !tbaa !2620
  %handle_end9 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %13, i32 0, i32 7, !dbg !14934
  %14 = load %struct._object*, %struct._object** %handle_end9, align 8, !dbg !14934, !tbaa !11428
  %15 = load %struct._object*, %struct._object** %tag, align 8, !dbg !14935, !tbaa !2620
  %call10 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %15), !dbg !14936
  store %struct._object* %call10, %struct._object** %res, align 8, !dbg !14937, !tbaa !2620
  br label %do.body, !dbg !14938

do.body:                                          ; preds = %if.then.8
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14939
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !14939
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2263, metadata !2613), !dbg !14941
  %17 = load %struct._object*, %struct._object** %tag, align 8, !dbg !14942, !tbaa !2620
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !14941, !tbaa !2620
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14943, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !14945
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !14946, !tbaa !2631
  %dec = add i64 %19, -1, !dbg !14946
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14946, !tbaa !2631
  %cmp11 = icmp ne i64 %dec, 0, !dbg !14947
  br i1 %cmp11, label %if.then.12, label %if.else.13, !dbg !14948

if.then.12:                                       ; preds = %do.body
  br label %if.end.15, !dbg !14949

if.else.13:                                       ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14951, !tbaa !2620
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !14953
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8, !dbg !14953, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !14954
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14954, !tbaa !2705
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14955, !tbaa !2620
  call void %22(%struct._object* %23), !dbg !14956
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.13, %if.then.12
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14957
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !14957
  br label %do.cond, !dbg !14959

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !14960

do.end:                                           ; preds = %do.cond
  br label %if.end.16, !dbg !14962

if.end.16:                                        ; preds = %do.end, %if.then.5
  br label %if.end.17, !dbg !14963

if.end.17:                                        ; preds = %if.end.16, %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.1
  br label %do.body.19, !dbg !14964

do.body.19:                                       ; preds = %if.end.18
  %25 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14965
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !14965
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2270, metadata !2613), !dbg !14967
  %26 = load %struct._object*, %struct._object** %res, align 8, !dbg !14968, !tbaa !2620
  store %struct._object* %26, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14967, !tbaa !2620
  %27 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14969, !tbaa !2620
  %cmp20 = icmp ne %struct._object* %27, null, !dbg !14970
  br i1 %cmp20, label %if.then.21, label %if.end.34, !dbg !14971

if.then.21:                                       ; preds = %do.body.19
  br label %do.body.22, !dbg !14972

do.body.22:                                       ; preds = %if.then.21
  %28 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !14974
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !14974
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !2272, metadata !2613), !dbg !14976
  %29 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !14977, !tbaa !2620
  store %struct._object* %29, %struct._object** %_py_decref_tmp23, align 8, !dbg !14976, !tbaa !2620
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !14978, !tbaa !2620
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !14980
  %31 = load i64, i64* %ob_refcnt24, align 8, !dbg !14981, !tbaa !2631
  %dec25 = add i64 %31, -1, !dbg !14981
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !14981, !tbaa !2631
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !14982
  br i1 %cmp26, label %if.then.27, label %if.else.28, !dbg !14983

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31, !dbg !14984

if.else.28:                                       ; preds = %do.body.22
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !14986, !tbaa !2620
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !14988
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !14988, !tbaa !2703
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !14989
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !14989, !tbaa !2705
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !14990, !tbaa !2620
  call void %34(%struct._object* %35), !dbg !14991
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %36 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !14992
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !14992
  br label %do.cond.32, !dbg !14994

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !14995

do.end.33:                                        ; preds = %do.cond.32
  br label %if.end.34, !dbg !14997

if.end.34:                                        ; preds = %do.end.33, %do.body.19
  %37 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !14999
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !14999
  br label %do.cond.35, !dbg !15002

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !15003

do.end.36:                                        ; preds = %do.cond.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !15005
  br label %cleanup, !dbg !15005

cleanup:                                          ; preds = %do.end.36, %if.then
  %38 = bitcast %struct._object** %res to i8*, !dbg !15006
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !15006
  %39 = bitcast %struct._object** %tag to i8*, !dbg !15006
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !15006
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !15005

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_default_handler(%struct.XMLParserObject* %self, i8* %data_in, i32 %data_len) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %data_in.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %message = alloca [128 x i8], align 16
  %_py_decref_tmp55 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2279, metadata !2613), !dbg !15008
  store i8* %data_in, i8** %data_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %data_in.addr, metadata !2280, metadata !2613), !dbg !15009
  store i32 %data_len, i32* %data_len.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !2281, metadata !2613), !dbg !15010
  %0 = bitcast %struct._object** %key to i8*, !dbg !15011
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15011
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !2282, metadata !2613), !dbg !15012
  %1 = bitcast %struct._object** %value to i8*, !dbg !15013
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !15013
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2283, metadata !2613), !dbg !15014
  %2 = bitcast %struct._object** %res to i8*, !dbg !15015
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !15015
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2284, metadata !2613), !dbg !15016
  %3 = load i32, i32* %data_len.addr, align 4, !dbg !15017, !tbaa !2759
  %cmp = icmp slt i32 %3, 2, !dbg !15019
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15020

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8*, i8** %data_in.addr, align 8, !dbg !15021, !tbaa !2620
  %arrayidx = getelementptr i8, i8* %4, i64 0, !dbg !15021
  %5 = load i8, i8* %arrayidx, align 1, !dbg !15021, !tbaa !2756
  %conv = sext i8 %5 to i32, !dbg !15021
  %cmp1 = icmp ne i32 %conv, 38, !dbg !15023
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15024

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15025

if.end:                                           ; preds = %lor.lhs.false
  %call = call %struct._object* @PyErr_Occurred(), !dbg !15026
  %tobool = icmp ne %struct._object* %call, null, !dbg !15026
  br i1 %tobool, label %if.then.3, label %if.end.4, !dbg !15028

if.then.3:                                        ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15029

if.end.4:                                         ; preds = %if.end
  %6 = load i8*, i8** %data_in.addr, align 8, !dbg !15030, !tbaa !2620
  %add.ptr = getelementptr i8, i8* %6, i64 1, !dbg !15031
  %7 = load i32, i32* %data_len.addr, align 4, !dbg !15032, !tbaa !2759
  %sub = sub i32 %7, 2, !dbg !15033
  %conv5 = sext i32 %sub to i64, !dbg !15032
  %call6 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %add.ptr, i64 %conv5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !15034
  store %struct._object* %call6, %struct._object** %key, align 8, !dbg !15035, !tbaa !2620
  %8 = load %struct._object*, %struct._object** %key, align 8, !dbg !15036, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %8, null, !dbg !15036
  br i1 %tobool7, label %if.end.9, label %if.then.8, !dbg !15038

if.then.8:                                        ; preds = %if.end.4
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15039

if.end.9:                                         ; preds = %if.end.4
  %9 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15040, !tbaa !2620
  %entity = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %9, i32 0, i32 3, !dbg !15041
  %10 = load %struct._object*, %struct._object** %entity, align 8, !dbg !15041, !tbaa !11297
  %11 = load %struct._object*, %struct._object** %key, align 8, !dbg !15042, !tbaa !2620
  %call10 = call %struct._object* @PyDict_GetItem(%struct._object* %10, %struct._object* %11), !dbg !15043
  store %struct._object* %call10, %struct._object** %value, align 8, !dbg !15044, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %value, align 8, !dbg !15045, !tbaa !2620
  %tobool11 = icmp ne %struct._object* %12, null, !dbg !15045
  br i1 %tobool11, label %if.then.12, label %if.else.38, !dbg !15046

if.then.12:                                       ; preds = %if.end.9
  %13 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15047, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %13, i32 0, i32 2, !dbg !15049
  %14 = load %struct._object*, %struct._object** %target, align 8, !dbg !15049, !tbaa !11308
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !15050
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15050, !tbaa !2703
  %cmp13 = icmp eq %struct._typeobject* %15, @TreeBuilder_Type, !dbg !15051
  br i1 %cmp13, label %if.then.15, label %if.else, !dbg !15052

if.then.15:                                       ; preds = %if.then.12
  %16 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15053, !tbaa !2620
  %target16 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %16, i32 0, i32 2, !dbg !15054
  %17 = load %struct._object*, %struct._object** %target16, align 8, !dbg !15054, !tbaa !11308
  %18 = bitcast %struct._object* %17 to %struct.TreeBuilderObject*, !dbg !15055
  %19 = load %struct._object*, %struct._object** %value, align 8, !dbg !15056, !tbaa !2620
  %call17 = call %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %18, %struct._object* %19), !dbg !15057
  store %struct._object* %call17, %struct._object** %res, align 8, !dbg !15058, !tbaa !2620
  br label %if.end.24, !dbg !15059

if.else:                                          ; preds = %if.then.12
  %20 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15060, !tbaa !2620
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %20, i32 0, i32 6, !dbg !15062
  %21 = load %struct._object*, %struct._object** %handle_data, align 8, !dbg !15062, !tbaa !11457
  %tobool18 = icmp ne %struct._object* %21, null, !dbg !15060
  br i1 %tobool18, label %if.then.19, label %if.else.22, !dbg !15063

if.then.19:                                       ; preds = %if.else
  %22 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15064, !tbaa !2620
  %handle_data20 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %22, i32 0, i32 6, !dbg !15065
  %23 = load %struct._object*, %struct._object** %handle_data20, align 8, !dbg !15065, !tbaa !11457
  %24 = load %struct._object*, %struct._object** %value, align 8, !dbg !15066, !tbaa !2620
  %call21 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %24), !dbg !15067
  store %struct._object* %call21, %struct._object** %res, align 8, !dbg !15068, !tbaa !2620
  br label %if.end.23, !dbg !15069

if.else.22:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %res, align 8, !dbg !15070, !tbaa !2620
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.22, %if.then.19
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %if.then.15
  br label %do.body, !dbg !15071

do.body:                                          ; preds = %if.end.24
  %25 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15072
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !15072
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2285, metadata !2613), !dbg !15074
  %26 = load %struct._object*, %struct._object** %res, align 8, !dbg !15075, !tbaa !2620
  store %struct._object* %26, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15074, !tbaa !2620
  %27 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15076, !tbaa !2620
  %cmp25 = icmp ne %struct._object* %27, null, !dbg !15077
  br i1 %cmp25, label %if.then.27, label %if.end.35, !dbg !15078

if.then.27:                                       ; preds = %do.body
  br label %do.body.28, !dbg !15079

do.body.28:                                       ; preds = %if.then.27
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15081
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !15081
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2289, metadata !2613), !dbg !15083
  %29 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15084, !tbaa !2620
  store %struct._object* %29, %struct._object** %_py_decref_tmp, align 8, !dbg !15083, !tbaa !2620
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15085, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !15087
  %31 = load i64, i64* %ob_refcnt, align 8, !dbg !15088, !tbaa !2631
  %dec = add i64 %31, -1, !dbg !15088
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15088, !tbaa !2631
  %cmp29 = icmp ne i64 %dec, 0, !dbg !15089
  br i1 %cmp29, label %if.then.31, label %if.else.32, !dbg !15090

if.then.31:                                       ; preds = %do.body.28
  br label %if.end.34, !dbg !15091

if.else.32:                                       ; preds = %do.body.28
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15093, !tbaa !2620
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !15095
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !15095, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !15096
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15096, !tbaa !2705
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15097, !tbaa !2620
  call void %34(%struct._object* %35), !dbg !15098
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.32, %if.then.31
  %36 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15099
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !15099
  br label %do.cond, !dbg !15101

do.cond:                                          ; preds = %if.end.34
  br label %do.end, !dbg !15102

do.end:                                           ; preds = %do.cond
  br label %if.end.35, !dbg !15104

if.end.35:                                        ; preds = %do.end, %do.body
  %37 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15106
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !15106
  br label %do.cond.36, !dbg !15109

do.cond.36:                                       ; preds = %if.end.35
  br label %do.end.37, !dbg !15110

do.end.37:                                        ; preds = %do.cond.36
  br label %if.end.53, !dbg !15112

if.else.38:                                       ; preds = %if.end.9
  %call39 = call %struct._object* @PyErr_Occurred(), !dbg !15113
  %tobool40 = icmp ne %struct._object* %call39, null, !dbg !15113
  br i1 %tobool40, label %if.end.52, label %if.then.41, !dbg !15114

if.then.41:                                       ; preds = %if.else.38
  %38 = bitcast [128 x i8]* %message to i8*, !dbg !15115
  call void @llvm.lifetime.start(i64 128, i8* %38) #1, !dbg !15115
  call void @llvm.dbg.declare(metadata [128 x i8]* %message, metadata !2292, metadata !2613), !dbg !15116
  %39 = bitcast [128 x i8]* %message to i8*, !dbg !15116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @expat_default_handler.message, i32 0, i32 0), i64 128, i32 16, i1 false), !dbg !15116
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %message, i32 0, i32 0, !dbg !15117
  %40 = load i8*, i8** %data_in.addr, align 8, !dbg !15118, !tbaa !2620
  %41 = load i32, i32* %data_len.addr, align 4, !dbg !15119, !tbaa !2759
  %cmp42 = icmp slt i32 %41, 100, !dbg !15120
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !15119

cond.true:                                        ; preds = %if.then.41
  %42 = load i32, i32* %data_len.addr, align 4, !dbg !15121, !tbaa !2759
  br label %cond.end, !dbg !15119

cond.false:                                       ; preds = %if.then.41
  br label %cond.end, !dbg !15123

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %42, %cond.true ], [ 100, %cond.false ], !dbg !15119
  %conv44 = sext i32 %cond to i64, !dbg !15125
  %call45 = call i8* @strncat(i8* %arraydecay, i8* %40, i64 %conv44) #1, !dbg !15128
  %43 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !15129, !tbaa !2620
  %GetErrorLineNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %43, i32 0, i32 8, !dbg !15130
  %44 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorLineNumber, align 8, !dbg !15130, !tbaa !13925
  %45 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15131, !tbaa !2620
  %parser = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %45, i32 0, i32 1, !dbg !15132
  %46 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser, align 8, !dbg !15132, !tbaa !11604
  %call46 = call i64 %44(%struct.XML_ParserStruct* %46), !dbg !15133
  %conv47 = trunc i64 %call46 to i32, !dbg !15133
  %47 = load %struct.PyExpat_CAPI*, %struct.PyExpat_CAPI** @expat_capi, align 8, !dbg !15134, !tbaa !2620
  %GetErrorColumnNumber = getelementptr inbounds %struct.PyExpat_CAPI, %struct.PyExpat_CAPI* %47, i32 0, i32 7, !dbg !15135
  %48 = load i64 (%struct.XML_ParserStruct*)*, i64 (%struct.XML_ParserStruct*)** %GetErrorColumnNumber, align 8, !dbg !15135, !tbaa !13931
  %49 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15136, !tbaa !2620
  %parser48 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %49, i32 0, i32 1, !dbg !15137
  %50 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %parser48, align 8, !dbg !15137, !tbaa !11604
  %call49 = call i64 %48(%struct.XML_ParserStruct* %50), !dbg !15138
  %conv50 = trunc i64 %call49 to i32, !dbg !15138
  %arraydecay51 = getelementptr inbounds [128 x i8], [128 x i8]* %message, i32 0, i32 0, !dbg !15139
  call void @expat_set_error(i32 11, i32 %conv47, i32 %conv50, i8* %arraydecay51), !dbg !15140
  %51 = bitcast [128 x i8]* %message to i8*, !dbg !15141
  call void @llvm.lifetime.end(i64 128, i8* %51) #1, !dbg !15141
  br label %if.end.52, !dbg !15142

if.end.52:                                        ; preds = %cond.end, %if.else.38
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %do.end.37
  br label %do.body.54, !dbg !15143

do.body.54:                                       ; preds = %if.end.53
  %52 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !15144
  call void @llvm.lifetime.start(i64 8, i8* %52) #1, !dbg !15144
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp55, metadata !2298, metadata !2613), !dbg !15146
  %53 = load %struct._object*, %struct._object** %key, align 8, !dbg !15147, !tbaa !2620
  store %struct._object* %53, %struct._object** %_py_decref_tmp55, align 8, !dbg !15146, !tbaa !2620
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !15148, !tbaa !2620
  %ob_refcnt56 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !15150
  %55 = load i64, i64* %ob_refcnt56, align 8, !dbg !15151, !tbaa !2631
  %dec57 = add i64 %55, -1, !dbg !15151
  store i64 %dec57, i64* %ob_refcnt56, align 8, !dbg !15151, !tbaa !2631
  %cmp58 = icmp ne i64 %dec57, 0, !dbg !15152
  br i1 %cmp58, label %if.then.60, label %if.else.61, !dbg !15153

if.then.60:                                       ; preds = %do.body.54
  br label %if.end.64, !dbg !15154

if.else.61:                                       ; preds = %do.body.54
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !15156, !tbaa !2620
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !15158
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !15158, !tbaa !2703
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !15159
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !15159, !tbaa !2705
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp55, align 8, !dbg !15160, !tbaa !2620
  call void %58(%struct._object* %59), !dbg !15161
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %60 = bitcast %struct._object** %_py_decref_tmp55 to i8*, !dbg !15162
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !15162
  br label %do.cond.65, !dbg !15164

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !15165

do.end.66:                                        ; preds = %do.cond.65
  store i32 0, i32* %cleanup.dest.slot, !dbg !15167
  br label %cleanup, !dbg !15167

cleanup:                                          ; preds = %do.end.66, %if.then.8, %if.then.3, %if.then
  %61 = bitcast %struct._object** %res to i8*, !dbg !15168
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !15168
  %62 = bitcast %struct._object** %value to i8*, !dbg !15168
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !15168
  %63 = bitcast %struct._object** %key to i8*, !dbg !15168
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !15168
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !15167

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_data_handler(%struct.XMLParserObject* %self, i8* %data_in, i32 %data_len) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %data_in.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %data = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp27 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2302, metadata !2613), !dbg !15170
  store i8* %data_in, i8** %data_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %data_in.addr, metadata !2303, metadata !2613), !dbg !15171
  store i32 %data_len, i32* %data_len.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !2304, metadata !2613), !dbg !15172
  %0 = bitcast %struct._object** %data to i8*, !dbg !15173
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15173
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !2305, metadata !2613), !dbg !15174
  %1 = bitcast %struct._object** %res to i8*, !dbg !15175
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !15175
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2306, metadata !2613), !dbg !15176
  %call = call %struct._object* @PyErr_Occurred(), !dbg !15177
  %tobool = icmp ne %struct._object* %call, null, !dbg !15177
  br i1 %tobool, label %if.then, label %if.end, !dbg !15179

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15180

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %data_in.addr, align 8, !dbg !15181, !tbaa !2620
  %3 = load i32, i32* %data_len.addr, align 4, !dbg !15182, !tbaa !2759
  %conv = sext i32 %3 to i64, !dbg !15182
  %call1 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %2, i64 %conv, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !15183
  store %struct._object* %call1, %struct._object** %data, align 8, !dbg !15184, !tbaa !2620
  %4 = load %struct._object*, %struct._object** %data, align 8, !dbg !15185, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %4, null, !dbg !15185
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !15187

if.then.3:                                        ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15188

if.end.4:                                         ; preds = %if.end
  %5 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15189, !tbaa !2620
  %target = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %5, i32 0, i32 2, !dbg !15191
  %6 = load %struct._object*, %struct._object** %target, align 8, !dbg !15191, !tbaa !11308
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !15192
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15192, !tbaa !2703
  %cmp = icmp eq %struct._typeobject* %7, @TreeBuilder_Type, !dbg !15193
  br i1 %cmp, label %if.then.6, label %if.else, !dbg !15194

if.then.6:                                        ; preds = %if.end.4
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15195, !tbaa !2620
  %target7 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %8, i32 0, i32 2, !dbg !15196
  %9 = load %struct._object*, %struct._object** %target7, align 8, !dbg !15196, !tbaa !11308
  %10 = bitcast %struct._object* %9 to %struct.TreeBuilderObject*, !dbg !15197
  %11 = load %struct._object*, %struct._object** %data, align 8, !dbg !15198, !tbaa !2620
  %call8 = call %struct._object* @treebuilder_handle_data(%struct.TreeBuilderObject* %10, %struct._object* %11), !dbg !15199
  store %struct._object* %call8, %struct._object** %res, align 8, !dbg !15200, !tbaa !2620
  br label %if.end.15, !dbg !15201

if.else:                                          ; preds = %if.end.4
  %12 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15202, !tbaa !2620
  %handle_data = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %12, i32 0, i32 6, !dbg !15204
  %13 = load %struct._object*, %struct._object** %handle_data, align 8, !dbg !15204, !tbaa !11457
  %tobool9 = icmp ne %struct._object* %13, null, !dbg !15202
  br i1 %tobool9, label %if.then.10, label %if.else.13, !dbg !15205

if.then.10:                                       ; preds = %if.else
  %14 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15206, !tbaa !2620
  %handle_data11 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %14, i32 0, i32 6, !dbg !15207
  %15 = load %struct._object*, %struct._object** %handle_data11, align 8, !dbg !15207, !tbaa !11457
  %16 = load %struct._object*, %struct._object** %data, align 8, !dbg !15208, !tbaa !2620
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %16), !dbg !15209
  store %struct._object* %call12, %struct._object** %res, align 8, !dbg !15210, !tbaa !2620
  br label %if.end.14, !dbg !15211

if.else.13:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %res, align 8, !dbg !15212, !tbaa !2620
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.13, %if.then.10
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then.6
  br label %do.body, !dbg !15213

do.body:                                          ; preds = %if.end.15
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15214
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !15214
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2307, metadata !2613), !dbg !15216
  %18 = load %struct._object*, %struct._object** %data, align 8, !dbg !15217, !tbaa !2620
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !15216, !tbaa !2620
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15218, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !15220
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !15221, !tbaa !2631
  %dec = add i64 %20, -1, !dbg !15221
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15221, !tbaa !2631
  %cmp16 = icmp ne i64 %dec, 0, !dbg !15222
  br i1 %cmp16, label %if.then.18, label %if.else.19, !dbg !15223

if.then.18:                                       ; preds = %do.body
  br label %if.end.21, !dbg !15224

if.else.19:                                       ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15226, !tbaa !2620
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !15228
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !15228, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !15229
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15229, !tbaa !2705
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15230, !tbaa !2620
  call void %23(%struct._object* %24), !dbg !15231
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.19, %if.then.18
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15232
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !15232
  br label %do.cond, !dbg !15234

do.cond:                                          ; preds = %if.end.21
  br label %do.end, !dbg !15235

do.end:                                           ; preds = %do.cond
  br label %do.body.22, !dbg !15237

do.body.22:                                       ; preds = %do.end
  %26 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15238
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !15238
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2309, metadata !2613), !dbg !15240
  %27 = load %struct._object*, %struct._object** %res, align 8, !dbg !15241, !tbaa !2620
  store %struct._object* %27, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15240, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15242, !tbaa !2620
  %cmp23 = icmp ne %struct._object* %28, null, !dbg !15243
  br i1 %cmp23, label %if.then.25, label %if.end.39, !dbg !15244

if.then.25:                                       ; preds = %do.body.22
  br label %do.body.26, !dbg !15245

do.body.26:                                       ; preds = %if.then.25
  %29 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !15247
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !15247
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp27, metadata !2311, metadata !2613), !dbg !15249
  %30 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15250, !tbaa !2620
  store %struct._object* %30, %struct._object** %_py_decref_tmp27, align 8, !dbg !15249, !tbaa !2620
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !15251, !tbaa !2620
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !15253
  %32 = load i64, i64* %ob_refcnt28, align 8, !dbg !15254, !tbaa !2631
  %dec29 = add i64 %32, -1, !dbg !15254
  store i64 %dec29, i64* %ob_refcnt28, align 8, !dbg !15254, !tbaa !2631
  %cmp30 = icmp ne i64 %dec29, 0, !dbg !15255
  br i1 %cmp30, label %if.then.32, label %if.else.33, !dbg !15256

if.then.32:                                       ; preds = %do.body.26
  br label %if.end.36, !dbg !15257

if.else.33:                                       ; preds = %do.body.26
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !15259, !tbaa !2620
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !15261
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !15261, !tbaa !2703
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !15262
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !15262, !tbaa !2705
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8, !dbg !15263, !tbaa !2620
  call void %35(%struct._object* %36), !dbg !15264
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %37 = bitcast %struct._object** %_py_decref_tmp27 to i8*, !dbg !15265
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !15265
  br label %do.cond.37, !dbg !15267

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !15268

do.end.38:                                        ; preds = %do.cond.37
  br label %if.end.39, !dbg !15270

if.end.39:                                        ; preds = %do.end.38, %do.body.22
  %38 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15272
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !15272
  br label %do.cond.40, !dbg !15275

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !15276

do.end.41:                                        ; preds = %do.cond.40
  store i32 0, i32* %cleanup.dest.slot, !dbg !15278
  br label %cleanup, !dbg !15278

cleanup:                                          ; preds = %do.end.41, %if.then.3, %if.then
  %39 = bitcast %struct._object** %res to i8*, !dbg !15279
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !15279
  %40 = bitcast %struct._object** %data to i8*, !dbg !15279
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !15279
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !15278

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_comment_handler(%struct.XMLParserObject* %self, i8* %comment_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %comment_in.addr = alloca i8*, align 8
  %comment = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2316, metadata !2613), !dbg !15281
  store i8* %comment_in, i8** %comment_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %comment_in.addr, metadata !2317, metadata !2613), !dbg !15282
  %0 = bitcast %struct._object** %comment to i8*, !dbg !15283
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15283
  call void @llvm.dbg.declare(metadata %struct._object** %comment, metadata !2318, metadata !2613), !dbg !15284
  %1 = bitcast %struct._object** %res to i8*, !dbg !15285
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !15285
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2319, metadata !2613), !dbg !15286
  %call = call %struct._object* @PyErr_Occurred(), !dbg !15287
  %tobool = icmp ne %struct._object* %call, null, !dbg !15287
  br i1 %tobool, label %if.then, label %if.end, !dbg !15289

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15290

if.end:                                           ; preds = %entry
  %2 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15291, !tbaa !2620
  %handle_comment = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %2, i32 0, i32 8, !dbg !15292
  %3 = load %struct._object*, %struct._object** %handle_comment, align 8, !dbg !15292, !tbaa !11399
  %tobool1 = icmp ne %struct._object* %3, null, !dbg !15291
  br i1 %tobool1, label %if.then.2, label %if.end.30, !dbg !15293

if.then.2:                                        ; preds = %if.end
  %4 = load i8*, i8** %comment_in.addr, align 8, !dbg !15294, !tbaa !2620
  %5 = load i8*, i8** %comment_in.addr, align 8, !dbg !15295, !tbaa !2620
  %call3 = call i64 @strlen(i8* %5) #6, !dbg !15296
  %call4 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %4, i64 %call3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !15297
  store %struct._object* %call4, %struct._object** %comment, align 8, !dbg !15298, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %comment, align 8, !dbg !15299, !tbaa !2620
  %tobool5 = icmp ne %struct._object* %6, null, !dbg !15299
  br i1 %tobool5, label %if.then.6, label %if.end.29, !dbg !15300

if.then.6:                                        ; preds = %if.then.2
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15301, !tbaa !2620
  %handle_comment7 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 8, !dbg !15302
  %8 = load %struct._object*, %struct._object** %handle_comment7, align 8, !dbg !15302, !tbaa !11399
  %9 = load %struct._object*, %struct._object** %comment, align 8, !dbg !15303, !tbaa !2620
  %call8 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), %struct._object* %9), !dbg !15304
  store %struct._object* %call8, %struct._object** %res, align 8, !dbg !15305, !tbaa !2620
  br label %do.body, !dbg !15306

do.body:                                          ; preds = %if.then.6
  %10 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15307
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !15307
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2320, metadata !2613), !dbg !15309
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !15310, !tbaa !2620
  store %struct._object* %11, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15309, !tbaa !2620
  %12 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15311, !tbaa !2620
  %cmp = icmp ne %struct._object* %12, null, !dbg !15312
  br i1 %cmp, label %if.then.9, label %if.end.14, !dbg !15313

if.then.9:                                        ; preds = %do.body
  br label %do.body.10, !dbg !15314

do.body.10:                                       ; preds = %if.then.9
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15316
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !15316
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2326, metadata !2613), !dbg !15318
  %14 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15319, !tbaa !2620
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !15318, !tbaa !2620
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15320, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !15322
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !15323, !tbaa !2631
  %dec = add i64 %16, -1, !dbg !15323
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15323, !tbaa !2631
  %cmp11 = icmp ne i64 %dec, 0, !dbg !15324
  br i1 %cmp11, label %if.then.12, label %if.else, !dbg !15325

if.then.12:                                       ; preds = %do.body.10
  br label %if.end.13, !dbg !15326

if.else:                                          ; preds = %do.body.10
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15328, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !15330
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15330, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !15331
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15331, !tbaa !2705
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15332, !tbaa !2620
  call void %19(%struct._object* %20), !dbg !15333
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15334
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !15334
  br label %do.cond, !dbg !15336

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !15337

do.end:                                           ; preds = %do.cond
  br label %if.end.14, !dbg !15339

if.end.14:                                        ; preds = %do.end, %do.body
  %22 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15341
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !15341
  br label %do.cond.15, !dbg !15344

do.cond.15:                                       ; preds = %if.end.14
  br label %do.end.16, !dbg !15345

do.end.16:                                        ; preds = %do.cond.15
  br label %do.body.17, !dbg !15347

do.body.17:                                       ; preds = %do.end.16
  %23 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !15348
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !15348
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !2329, metadata !2613), !dbg !15350
  %24 = load %struct._object*, %struct._object** %comment, align 8, !dbg !15351, !tbaa !2620
  store %struct._object* %24, %struct._object** %_py_decref_tmp18, align 8, !dbg !15350, !tbaa !2620
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !15352, !tbaa !2620
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !15354
  %26 = load i64, i64* %ob_refcnt19, align 8, !dbg !15355, !tbaa !2631
  %dec20 = add i64 %26, -1, !dbg !15355
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !15355, !tbaa !2631
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !15356
  br i1 %cmp21, label %if.then.22, label %if.else.23, !dbg !15357

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26, !dbg !15358

if.else.23:                                       ; preds = %do.body.17
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !15360, !tbaa !2620
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !15362
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !15362, !tbaa !2703
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !15363
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !15363, !tbaa !2705
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !15364, !tbaa !2620
  call void %29(%struct._object* %30), !dbg !15365
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %31 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !15366
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !15366
  br label %do.cond.27, !dbg !15368

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !15369

do.end.28:                                        ; preds = %do.cond.27
  br label %if.end.29, !dbg !15371

if.end.29:                                        ; preds = %do.end.28, %if.then.2
  br label %if.end.30, !dbg !15372

if.end.30:                                        ; preds = %if.end.29, %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !15373
  br label %cleanup, !dbg !15373

cleanup:                                          ; preds = %if.end.30, %if.then
  %32 = bitcast %struct._object** %res to i8*, !dbg !15374
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !15374
  %33 = bitcast %struct._object** %comment to i8*, !dbg !15374
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !15374
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !15373

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_pi_handler(%struct.XMLParserObject* %self, i8* %target_in, i8* %data_in) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %target_in.addr = alloca i8*, align 8
  %data_in.addr = alloca i8*, align 8
  %target = alloca %struct._object*, align 8
  %data = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  %_py_decref_tmp33 = alloca %struct._object*, align 8
  %_py_xdecref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp50 = alloca %struct._object*, align 8
  %_py_xdecref_tmp65 = alloca %struct._object*, align 8
  %_py_decref_tmp69 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2333, metadata !2613), !dbg !15376
  store i8* %target_in, i8** %target_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %target_in.addr, metadata !2334, metadata !2613), !dbg !15377
  store i8* %data_in, i8** %data_in.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %data_in.addr, metadata !2335, metadata !2613), !dbg !15378
  %0 = bitcast %struct._object** %target to i8*, !dbg !15379
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15379
  call void @llvm.dbg.declare(metadata %struct._object** %target, metadata !2336, metadata !2613), !dbg !15380
  %1 = bitcast %struct._object** %data to i8*, !dbg !15381
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !15381
  call void @llvm.dbg.declare(metadata %struct._object** %data, metadata !2337, metadata !2613), !dbg !15382
  %2 = bitcast %struct._object** %res to i8*, !dbg !15383
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !15383
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2338, metadata !2613), !dbg !15384
  %call = call %struct._object* @PyErr_Occurred(), !dbg !15385
  %tobool = icmp ne %struct._object* %call, null, !dbg !15385
  br i1 %tobool, label %if.then, label %if.end, !dbg !15387

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15388

if.end:                                           ; preds = %entry
  %3 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15389, !tbaa !2620
  %handle_pi = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %3, i32 0, i32 9, !dbg !15390
  %4 = load %struct._object*, %struct._object** %handle_pi, align 8, !dbg !15390, !tbaa !11370
  %tobool1 = icmp ne %struct._object* %4, null, !dbg !15389
  br i1 %tobool1, label %if.then.2, label %if.end.84, !dbg !15391

if.then.2:                                        ; preds = %if.end
  %5 = load i8*, i8** %target_in.addr, align 8, !dbg !15392, !tbaa !2620
  %6 = load i8*, i8** %target_in.addr, align 8, !dbg !15393, !tbaa !2620
  %call3 = call i64 @strlen(i8* %6) #6, !dbg !15394
  %call4 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %5, i64 %call3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !15395
  store %struct._object* %call4, %struct._object** %target, align 8, !dbg !15396, !tbaa !2620
  %7 = load i8*, i8** %data_in.addr, align 8, !dbg !15397, !tbaa !2620
  %8 = load i8*, i8** %data_in.addr, align 8, !dbg !15398, !tbaa !2620
  %call5 = call i64 @strlen(i8* %8) #6, !dbg !15399
  %call6 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %7, i64 %call5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !15400
  store %struct._object* %call6, %struct._object** %data, align 8, !dbg !15401, !tbaa !2620
  %9 = load %struct._object*, %struct._object** %target, align 8, !dbg !15402, !tbaa !2620
  %tobool7 = icmp ne %struct._object* %9, null, !dbg !15402
  br i1 %tobool7, label %land.lhs.true, label %if.else.44, !dbg !15403

land.lhs.true:                                    ; preds = %if.then.2
  %10 = load %struct._object*, %struct._object** %data, align 8, !dbg !15404, !tbaa !2620
  %tobool8 = icmp ne %struct._object* %10, null, !dbg !15404
  br i1 %tobool8, label %if.then.9, label %if.else.44, !dbg !15406

if.then.9:                                        ; preds = %land.lhs.true
  %11 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15407, !tbaa !2620
  %handle_pi10 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %11, i32 0, i32 9, !dbg !15408
  %12 = load %struct._object*, %struct._object** %handle_pi10, align 8, !dbg !15408, !tbaa !11370
  %13 = load %struct._object*, %struct._object** %target, align 8, !dbg !15409, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %data, align 8, !dbg !15410, !tbaa !2620
  %call11 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), %struct._object* %13, %struct._object* %14), !dbg !15411
  store %struct._object* %call11, %struct._object** %res, align 8, !dbg !15412, !tbaa !2620
  br label %do.body, !dbg !15413

do.body:                                          ; preds = %if.then.9
  %15 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15414
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !15414
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2339, metadata !2613), !dbg !15416
  %16 = load %struct._object*, %struct._object** %res, align 8, !dbg !15417, !tbaa !2620
  store %struct._object* %16, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15416, !tbaa !2620
  %17 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15418, !tbaa !2620
  %cmp = icmp ne %struct._object* %17, null, !dbg !15419
  br i1 %cmp, label %if.then.12, label %if.end.17, !dbg !15420

if.then.12:                                       ; preds = %do.body
  br label %do.body.13, !dbg !15421

do.body.13:                                       ; preds = %if.then.12
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15423
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !15423
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2345, metadata !2613), !dbg !15425
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15426, !tbaa !2620
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !15425, !tbaa !2620
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15427, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !15429
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !15430, !tbaa !2631
  %dec = add i64 %21, -1, !dbg !15430
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15430, !tbaa !2631
  %cmp14 = icmp ne i64 %dec, 0, !dbg !15431
  br i1 %cmp14, label %if.then.15, label %if.else, !dbg !15432

if.then.15:                                       ; preds = %do.body.13
  br label %if.end.16, !dbg !15433

if.else:                                          ; preds = %do.body.13
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15435, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !15437
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15437, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !15438
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15438, !tbaa !2705
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15439, !tbaa !2620
  call void %24(%struct._object* %25), !dbg !15440
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15441
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !15441
  br label %do.cond, !dbg !15443

do.cond:                                          ; preds = %if.end.16
  br label %do.end, !dbg !15444

do.end:                                           ; preds = %do.cond
  br label %if.end.17, !dbg !15446

if.end.17:                                        ; preds = %do.end, %do.body
  %27 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15448
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !15448
  br label %do.cond.18, !dbg !15451

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !15452

do.end.19:                                        ; preds = %do.cond.18
  br label %do.body.20, !dbg !15454

do.body.20:                                       ; preds = %do.end.19
  %28 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !15455
  call void @llvm.lifetime.start(i64 8, i8* %28) #1, !dbg !15455
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp21, metadata !2348, metadata !2613), !dbg !15457
  %29 = load %struct._object*, %struct._object** %data, align 8, !dbg !15458, !tbaa !2620
  store %struct._object* %29, %struct._object** %_py_decref_tmp21, align 8, !dbg !15457, !tbaa !2620
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !15459, !tbaa !2620
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !15461
  %31 = load i64, i64* %ob_refcnt22, align 8, !dbg !15462, !tbaa !2631
  %dec23 = add i64 %31, -1, !dbg !15462
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !15462, !tbaa !2631
  %cmp24 = icmp ne i64 %dec23, 0, !dbg !15463
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !15464

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29, !dbg !15465

if.else.26:                                       ; preds = %do.body.20
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !15467, !tbaa !2620
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !15469
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !15469, !tbaa !2703
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !15470
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !15470, !tbaa !2705
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !15471, !tbaa !2620
  call void %34(%struct._object* %35), !dbg !15472
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  %36 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !15473
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !15473
  br label %do.cond.30, !dbg !15475

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !15476

do.end.31:                                        ; preds = %do.cond.30
  br label %do.body.32, !dbg !15478

do.body.32:                                       ; preds = %do.end.31
  %37 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !15479
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !15479
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp33, metadata !2350, metadata !2613), !dbg !15481
  %38 = load %struct._object*, %struct._object** %target, align 8, !dbg !15482, !tbaa !2620
  store %struct._object* %38, %struct._object** %_py_decref_tmp33, align 8, !dbg !15481, !tbaa !2620
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !15483, !tbaa !2620
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !15485
  %40 = load i64, i64* %ob_refcnt34, align 8, !dbg !15486, !tbaa !2631
  %dec35 = add i64 %40, -1, !dbg !15486
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !15486, !tbaa !2631
  %cmp36 = icmp ne i64 %dec35, 0, !dbg !15487
  br i1 %cmp36, label %if.then.37, label %if.else.38, !dbg !15488

if.then.37:                                       ; preds = %do.body.32
  br label %if.end.41, !dbg !15489

if.else.38:                                       ; preds = %do.body.32
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !15491, !tbaa !2620
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !15493
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !15493, !tbaa !2703
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !15494
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8, !dbg !15494, !tbaa !2705
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !15495, !tbaa !2620
  call void %43(%struct._object* %44), !dbg !15496
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.38, %if.then.37
  %45 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !15497
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !15497
  br label %do.cond.42, !dbg !15498

do.cond.42:                                       ; preds = %if.end.41
  br label %do.end.43, !dbg !15499

do.end.43:                                        ; preds = %do.cond.42
  br label %if.end.83, !dbg !15501

if.else.44:                                       ; preds = %land.lhs.true, %if.then.2
  br label %do.body.45, !dbg !15502

do.body.45:                                       ; preds = %if.else.44
  %46 = bitcast %struct._object** %_py_xdecref_tmp46 to i8*, !dbg !15503
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !15503
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp46, metadata !2352, metadata !2613), !dbg !15505
  %47 = load %struct._object*, %struct._object** %data, align 8, !dbg !15506, !tbaa !2620
  store %struct._object* %47, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !15505, !tbaa !2620
  %48 = load %struct._object*, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !15507, !tbaa !2620
  %cmp47 = icmp ne %struct._object* %48, null, !dbg !15508
  br i1 %cmp47, label %if.then.48, label %if.end.61, !dbg !15509

if.then.48:                                       ; preds = %do.body.45
  br label %do.body.49, !dbg !15510

do.body.49:                                       ; preds = %if.then.48
  %49 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !15512
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !15512
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp50, metadata !2355, metadata !2613), !dbg !15514
  %50 = load %struct._object*, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !15515, !tbaa !2620
  store %struct._object* %50, %struct._object** %_py_decref_tmp50, align 8, !dbg !15514, !tbaa !2620
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !15516, !tbaa !2620
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !15518
  %52 = load i64, i64* %ob_refcnt51, align 8, !dbg !15519, !tbaa !2631
  %dec52 = add i64 %52, -1, !dbg !15519
  store i64 %dec52, i64* %ob_refcnt51, align 8, !dbg !15519, !tbaa !2631
  %cmp53 = icmp ne i64 %dec52, 0, !dbg !15520
  br i1 %cmp53, label %if.then.54, label %if.else.55, !dbg !15521

if.then.54:                                       ; preds = %do.body.49
  br label %if.end.58, !dbg !15522

if.else.55:                                       ; preds = %do.body.49
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !15524, !tbaa !2620
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !15526
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !15526, !tbaa !2703
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !15527
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !15527, !tbaa !2705
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !15528, !tbaa !2620
  call void %55(%struct._object* %56), !dbg !15529
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  %57 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !15530
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !15530
  br label %do.cond.59, !dbg !15532

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !15533

do.end.60:                                        ; preds = %do.cond.59
  br label %if.end.61, !dbg !15535

if.end.61:                                        ; preds = %do.end.60, %do.body.45
  %58 = bitcast %struct._object** %_py_xdecref_tmp46 to i8*, !dbg !15537
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !15537
  br label %do.cond.62, !dbg !15540

do.cond.62:                                       ; preds = %if.end.61
  br label %do.end.63, !dbg !15541

do.end.63:                                        ; preds = %do.cond.62
  br label %do.body.64, !dbg !15543

do.body.64:                                       ; preds = %do.end.63
  %59 = bitcast %struct._object** %_py_xdecref_tmp65 to i8*, !dbg !15544
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !15544
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp65, metadata !2358, metadata !2613), !dbg !15546
  %60 = load %struct._object*, %struct._object** %target, align 8, !dbg !15547, !tbaa !2620
  store %struct._object* %60, %struct._object** %_py_xdecref_tmp65, align 8, !dbg !15546, !tbaa !2620
  %61 = load %struct._object*, %struct._object** %_py_xdecref_tmp65, align 8, !dbg !15548, !tbaa !2620
  %cmp66 = icmp ne %struct._object* %61, null, !dbg !15549
  br i1 %cmp66, label %if.then.67, label %if.end.80, !dbg !15550

if.then.67:                                       ; preds = %do.body.64
  br label %do.body.68, !dbg !15551

do.body.68:                                       ; preds = %if.then.67
  %62 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !15553
  call void @llvm.lifetime.start(i64 8, i8* %62) #1, !dbg !15553
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp69, metadata !2360, metadata !2613), !dbg !15555
  %63 = load %struct._object*, %struct._object** %_py_xdecref_tmp65, align 8, !dbg !15556, !tbaa !2620
  store %struct._object* %63, %struct._object** %_py_decref_tmp69, align 8, !dbg !15555, !tbaa !2620
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !15557, !tbaa !2620
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0, !dbg !15559
  %65 = load i64, i64* %ob_refcnt70, align 8, !dbg !15560, !tbaa !2631
  %dec71 = add i64 %65, -1, !dbg !15560
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !15560, !tbaa !2631
  %cmp72 = icmp ne i64 %dec71, 0, !dbg !15561
  br i1 %cmp72, label %if.then.73, label %if.else.74, !dbg !15562

if.then.73:                                       ; preds = %do.body.68
  br label %if.end.77, !dbg !15563

if.else.74:                                       ; preds = %do.body.68
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !15565, !tbaa !2620
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1, !dbg !15567
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !15567, !tbaa !2703
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4, !dbg !15568
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !15568, !tbaa !2705
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !15569, !tbaa !2620
  call void %68(%struct._object* %69), !dbg !15570
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %70 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !15571
  call void @llvm.lifetime.end(i64 8, i8* %70) #1, !dbg !15571
  br label %do.cond.78, !dbg !15573

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !15574

do.end.79:                                        ; preds = %do.cond.78
  br label %if.end.80, !dbg !15576

if.end.80:                                        ; preds = %do.end.79, %do.body.64
  %71 = bitcast %struct._object** %_py_xdecref_tmp65 to i8*, !dbg !15578
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !15578
  br label %do.cond.81, !dbg !15579

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !15580

do.end.82:                                        ; preds = %do.cond.81
  br label %if.end.83

if.end.83:                                        ; preds = %do.end.82, %do.end.43
  br label %if.end.84, !dbg !15582

if.end.84:                                        ; preds = %if.end.83, %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !15583
  br label %cleanup, !dbg !15583

cleanup:                                          ; preds = %if.end.84, %if.then
  %72 = bitcast %struct._object** %res to i8*, !dbg !15584
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !15584
  %73 = bitcast %struct._object** %data to i8*, !dbg !15584
  call void @llvm.lifetime.end(i64 8, i8* %73) #1, !dbg !15584
  %74 = bitcast %struct._object** %target to i8*, !dbg !15584
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !15584
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !15583

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @expat_start_doctype_handler(%struct.XMLParserObject* %self, i8* %doctype_name, i8* %sysid, i8* %pubid, i32 %has_internal_subset) #0 {
entry:
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %doctype_name.addr = alloca i8*, align 8
  %sysid.addr = alloca i8*, align 8
  %pubid.addr = alloca i8*, align 8
  %has_internal_subset.addr = alloca i32, align 4
  %self_pyobj = alloca %struct._object*, align 8
  %doctype_name_obj = alloca %struct._object*, align 8
  %sysid_obj = alloca %struct._object*, align 8
  %pubid_obj = alloca %struct._object*, align 8
  %parser_doctype = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  %_py_decref_tmp33 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_tmp83 = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp107 = alloca %struct._object*, align 8
  %_py_decref_tmp122 = alloca %struct._object*, align 8
  %_py_decref_tmp134 = alloca %struct._object*, align 8
  %_py_decref_tmp146 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2367, metadata !2613), !dbg !15586
  store i8* %doctype_name, i8** %doctype_name.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %doctype_name.addr, metadata !2368, metadata !2613), !dbg !15587
  store i8* %sysid, i8** %sysid.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %sysid.addr, metadata !2369, metadata !2613), !dbg !15588
  store i8* %pubid, i8** %pubid.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %pubid.addr, metadata !2370, metadata !2613), !dbg !15589
  store i32 %has_internal_subset, i32* %has_internal_subset.addr, align 4, !tbaa !2759
  call void @llvm.dbg.declare(metadata i32* %has_internal_subset.addr, metadata !2371, metadata !2613), !dbg !15590
  %0 = bitcast %struct._object** %self_pyobj to i8*, !dbg !15591
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15591
  call void @llvm.dbg.declare(metadata %struct._object** %self_pyobj, metadata !2372, metadata !2613), !dbg !15592
  %1 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15593, !tbaa !2620
  %2 = bitcast %struct.XMLParserObject* %1 to %struct._object*, !dbg !15594
  store %struct._object* %2, %struct._object** %self_pyobj, align 8, !dbg !15592, !tbaa !2620
  %3 = bitcast %struct._object** %doctype_name_obj to i8*, !dbg !15595
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !15595
  call void @llvm.dbg.declare(metadata %struct._object** %doctype_name_obj, metadata !2373, metadata !2613), !dbg !15596
  %4 = bitcast %struct._object** %sysid_obj to i8*, !dbg !15595
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !15595
  call void @llvm.dbg.declare(metadata %struct._object** %sysid_obj, metadata !2374, metadata !2613), !dbg !15597
  %5 = bitcast %struct._object** %pubid_obj to i8*, !dbg !15595
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !15595
  call void @llvm.dbg.declare(metadata %struct._object** %pubid_obj, metadata !2375, metadata !2613), !dbg !15598
  %6 = bitcast %struct._object** %parser_doctype to i8*, !dbg !15599
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !15599
  call void @llvm.dbg.declare(metadata %struct._object** %parser_doctype, metadata !2376, metadata !2613), !dbg !15600
  store %struct._object* null, %struct._object** %parser_doctype, align 8, !dbg !15600, !tbaa !2620
  %7 = bitcast %struct._object** %res to i8*, !dbg !15601
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !15601
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !2377, metadata !2613), !dbg !15602
  store %struct._object* null, %struct._object** %res, align 8, !dbg !15602, !tbaa !2620
  %call = call %struct._object* @PyErr_Occurred(), !dbg !15603
  %tobool = icmp ne %struct._object* %call, null, !dbg !15603
  br i1 %tobool, label %if.then, label %if.end, !dbg !15605

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15606

if.end:                                           ; preds = %entry
  %8 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15607, !tbaa !2620
  %9 = load i8*, i8** %doctype_name.addr, align 8, !dbg !15608, !tbaa !2620
  %call1 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %8, i8* %9), !dbg !15609
  store %struct._object* %call1, %struct._object** %doctype_name_obj, align 8, !dbg !15610, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %doctype_name_obj, align 8, !dbg !15611, !tbaa !2620
  %tobool2 = icmp ne %struct._object* %10, null, !dbg !15611
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !15613

if.then.3:                                        ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15614

if.end.4:                                         ; preds = %if.end
  %11 = load i8*, i8** %sysid.addr, align 8, !dbg !15615, !tbaa !2620
  %tobool5 = icmp ne i8* %11, null, !dbg !15615
  br i1 %tobool5, label %if.then.6, label %if.else.13, !dbg !15616

if.then.6:                                        ; preds = %if.end.4
  %12 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15617, !tbaa !2620
  %13 = load i8*, i8** %sysid.addr, align 8, !dbg !15618, !tbaa !2620
  %call7 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %12, i8* %13), !dbg !15619
  store %struct._object* %call7, %struct._object** %sysid_obj, align 8, !dbg !15620, !tbaa !2620
  %14 = load %struct._object*, %struct._object** %sysid_obj, align 8, !dbg !15621, !tbaa !2620
  %tobool8 = icmp ne %struct._object* %14, null, !dbg !15621
  br i1 %tobool8, label %if.end.12, label %if.then.9, !dbg !15622

if.then.9:                                        ; preds = %if.then.6
  br label %do.body, !dbg !15623

do.body:                                          ; preds = %if.then.9
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15624
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !15624
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2378, metadata !2613), !dbg !15626
  %16 = load %struct._object*, %struct._object** %doctype_name_obj, align 8, !dbg !15627, !tbaa !2620
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !15626, !tbaa !2620
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15628, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !15630
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !15631, !tbaa !2631
  %dec = add i64 %18, -1, !dbg !15631
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15631, !tbaa !2631
  %cmp = icmp ne i64 %dec, 0, !dbg !15632
  br i1 %cmp, label %if.then.10, label %if.else, !dbg !15633

if.then.10:                                       ; preds = %do.body
  br label %if.end.11, !dbg !15634

if.else:                                          ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15636, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !15638
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15638, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !15639
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15639, !tbaa !2705
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15640, !tbaa !2620
  call void %21(%struct._object* %22), !dbg !15641
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15642
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !15642
  br label %do.cond, !dbg !15644

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !15645

do.end:                                           ; preds = %do.cond
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15647

if.end.12:                                        ; preds = %if.then.6
  br label %if.end.14, !dbg !15648

if.else.13:                                       ; preds = %if.end.4
  %24 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !15649, !tbaa !2631
  %inc = add i64 %24, 1, !dbg !15649
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !15649, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %sysid_obj, align 8, !dbg !15651, !tbaa !2620
  br label %if.end.14

if.end.14:                                        ; preds = %if.else.13, %if.end.12
  %25 = load i8*, i8** %pubid.addr, align 8, !dbg !15652, !tbaa !2620
  %tobool15 = icmp ne i8* %25, null, !dbg !15652
  br i1 %tobool15, label %if.then.16, label %if.else.45, !dbg !15653

if.then.16:                                       ; preds = %if.end.14
  %26 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15654, !tbaa !2620
  %27 = load i8*, i8** %pubid.addr, align 8, !dbg !15655, !tbaa !2620
  %call17 = call %struct._object* @makeuniversal(%struct.XMLParserObject* %26, i8* %27), !dbg !15656
  store %struct._object* %call17, %struct._object** %pubid_obj, align 8, !dbg !15657, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %pubid_obj, align 8, !dbg !15658, !tbaa !2620
  %tobool18 = icmp ne %struct._object* %28, null, !dbg !15658
  br i1 %tobool18, label %if.end.44, label %if.then.19, !dbg !15659

if.then.19:                                       ; preds = %if.then.16
  br label %do.body.20, !dbg !15660

do.body.20:                                       ; preds = %if.then.19
  %29 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !15661
  call void @llvm.lifetime.start(i64 8, i8* %29) #1, !dbg !15661
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp21, metadata !2384, metadata !2613), !dbg !15663
  %30 = load %struct._object*, %struct._object** %doctype_name_obj, align 8, !dbg !15664, !tbaa !2620
  store %struct._object* %30, %struct._object** %_py_decref_tmp21, align 8, !dbg !15663, !tbaa !2620
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !15665, !tbaa !2620
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !15667
  %32 = load i64, i64* %ob_refcnt22, align 8, !dbg !15668, !tbaa !2631
  %dec23 = add i64 %32, -1, !dbg !15668
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !15668, !tbaa !2631
  %cmp24 = icmp ne i64 %dec23, 0, !dbg !15669
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !15670

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29, !dbg !15671

if.else.26:                                       ; preds = %do.body.20
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !15673, !tbaa !2620
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !15675
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !15675, !tbaa !2703
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !15676
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8, !dbg !15676, !tbaa !2705
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8, !dbg !15677, !tbaa !2620
  call void %35(%struct._object* %36), !dbg !15678
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  %37 = bitcast %struct._object** %_py_decref_tmp21 to i8*, !dbg !15679
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !15679
  br label %do.cond.30, !dbg !15681

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !15682

do.end.31:                                        ; preds = %do.cond.30
  br label %do.body.32, !dbg !15684

do.body.32:                                       ; preds = %do.end.31
  %38 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !15685
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !15685
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp33, metadata !2390, metadata !2613), !dbg !15687
  %39 = load %struct._object*, %struct._object** %sysid_obj, align 8, !dbg !15688, !tbaa !2620
  store %struct._object* %39, %struct._object** %_py_decref_tmp33, align 8, !dbg !15687, !tbaa !2620
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !15689, !tbaa !2620
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !15691
  %41 = load i64, i64* %ob_refcnt34, align 8, !dbg !15692, !tbaa !2631
  %dec35 = add i64 %41, -1, !dbg !15692
  store i64 %dec35, i64* %ob_refcnt34, align 8, !dbg !15692, !tbaa !2631
  %cmp36 = icmp ne i64 %dec35, 0, !dbg !15693
  br i1 %cmp36, label %if.then.37, label %if.else.38, !dbg !15694

if.then.37:                                       ; preds = %do.body.32
  br label %if.end.41, !dbg !15695

if.else.38:                                       ; preds = %do.body.32
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !15697, !tbaa !2620
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !15699
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !15699, !tbaa !2703
  %tp_dealloc40 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !15700
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc40, align 8, !dbg !15700, !tbaa !2705
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp33, align 8, !dbg !15701, !tbaa !2620
  call void %44(%struct._object* %45), !dbg !15702
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.38, %if.then.37
  %46 = bitcast %struct._object** %_py_decref_tmp33 to i8*, !dbg !15703
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !15703
  br label %do.cond.42, !dbg !15704

do.cond.42:                                       ; preds = %if.end.41
  br label %do.end.43, !dbg !15705

do.end.43:                                        ; preds = %do.cond.42
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15707

if.end.44:                                        ; preds = %if.then.16
  br label %if.end.47, !dbg !15708

if.else.45:                                       ; preds = %if.end.14
  %47 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !15709, !tbaa !2631
  %inc46 = add i64 %47, 1, !dbg !15709
  store i64 %inc46, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !15709, !tbaa !2631
  store %struct._object* @_Py_NoneStruct, %struct._object** %pubid_obj, align 8, !dbg !15711, !tbaa !2620
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.45, %if.end.44
  %48 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15712, !tbaa !2620
  %handle_doctype = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %48, i32 0, i32 10, !dbg !15713
  %49 = load %struct._object*, %struct._object** %handle_doctype, align 8, !dbg !15713, !tbaa !11860
  %tobool48 = icmp ne %struct._object* %49, null, !dbg !15712
  br i1 %tobool48, label %if.then.49, label %if.end.70, !dbg !15714

if.then.49:                                       ; preds = %if.end.47
  %50 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15715, !tbaa !2620
  %handle_doctype50 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %50, i32 0, i32 10, !dbg !15716
  %51 = load %struct._object*, %struct._object** %handle_doctype50, align 8, !dbg !15716, !tbaa !11860
  %52 = load %struct._object*, %struct._object** %doctype_name_obj, align 8, !dbg !15717, !tbaa !2620
  %53 = load %struct._object*, %struct._object** %pubid_obj, align 8, !dbg !15718, !tbaa !2620
  %54 = load %struct._object*, %struct._object** %sysid_obj, align 8, !dbg !15719, !tbaa !2620
  %call51 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct._object* %52, %struct._object* %53, %struct._object* %54), !dbg !15720
  store %struct._object* %call51, %struct._object** %res, align 8, !dbg !15721, !tbaa !2620
  br label %do.body.52, !dbg !15722

do.body.52:                                       ; preds = %if.then.49
  %55 = bitcast %struct._object** %_py_tmp to i8*, !dbg !15723
  call void @llvm.lifetime.start(i64 8, i8* %55) #1, !dbg !15723
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !2392, metadata !2613), !dbg !15725
  %56 = load %struct._object*, %struct._object** %res, align 8, !dbg !15726, !tbaa !2620
  store %struct._object* %56, %struct._object** %_py_tmp, align 8, !dbg !15725, !tbaa !2620
  %57 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !15727, !tbaa !2620
  %cmp53 = icmp ne %struct._object* %57, null, !dbg !15728
  br i1 %cmp53, label %if.then.54, label %if.end.67, !dbg !15729

if.then.54:                                       ; preds = %do.body.52
  store %struct._object* null, %struct._object** %res, align 8, !dbg !15730, !tbaa !2620
  br label %do.body.55, !dbg !15732

do.body.55:                                       ; preds = %if.then.54
  %58 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !15733
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !15733
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !2396, metadata !2613), !dbg !15735
  %59 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !15736, !tbaa !2620
  store %struct._object* %59, %struct._object** %_py_decref_tmp56, align 8, !dbg !15735, !tbaa !2620
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !15737, !tbaa !2620
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !15739
  %61 = load i64, i64* %ob_refcnt57, align 8, !dbg !15740, !tbaa !2631
  %dec58 = add i64 %61, -1, !dbg !15740
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !15740, !tbaa !2631
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !15741
  br i1 %cmp59, label %if.then.60, label %if.else.61, !dbg !15742

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64, !dbg !15743

if.else.61:                                       ; preds = %do.body.55
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !15745, !tbaa !2620
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !15747
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !15747, !tbaa !2703
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !15748
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !15748, !tbaa !2705
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !15749, !tbaa !2620
  call void %64(%struct._object* %65), !dbg !15750
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %66 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !15751
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !15751
  br label %do.cond.65, !dbg !15753

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !15754

do.end.66:                                        ; preds = %do.cond.65
  br label %if.end.67, !dbg !15756

if.end.67:                                        ; preds = %do.end.66, %do.body.52
  %67 = bitcast %struct._object** %_py_tmp to i8*, !dbg !15758
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !15758
  br label %do.cond.68, !dbg !15761

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !15762

do.end.69:                                        ; preds = %do.cond.68
  br label %if.end.70, !dbg !15764

if.end.70:                                        ; preds = %do.end.69, %if.end.47
  %68 = load %struct._object*, %struct._object** %self_pyobj, align 8, !dbg !15765, !tbaa !2620
  %call71 = call %struct._object* @PyObject_GetAttrString(%struct._object* %68, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0)), !dbg !15766
  store %struct._object* %call71, %struct._object** %parser_doctype, align 8, !dbg !15767, !tbaa !2620
  %69 = load %struct._object*, %struct._object** %parser_doctype, align 8, !dbg !15768, !tbaa !2620
  %tobool72 = icmp ne %struct._object* %69, null, !dbg !15768
  br i1 %tobool72, label %if.then.73, label %if.end.102, !dbg !15769

if.then.73:                                       ; preds = %if.end.70
  %70 = load %struct._object*, %struct._object** %self_pyobj, align 8, !dbg !15770, !tbaa !2620
  %ob_type74 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !15771
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type74, align 8, !dbg !15771, !tbaa !2703
  %cmp75 = icmp eq %struct._typeobject* %71, @XMLParser_Type, !dbg !15772
  br i1 %cmp75, label %if.end.101, label %if.then.76, !dbg !15773

if.then.76:                                       ; preds = %if.then.73
  %72 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8, !dbg !15774, !tbaa !2620
  %call77 = call i32 @PyErr_WarnEx(%struct._object* %72, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.138, i32 0, i32 0), i64 1), !dbg !15776
  %cmp78 = icmp slt i32 %call77, 0, !dbg !15777
  br i1 %cmp78, label %if.then.79, label %if.end.80, !dbg !15778

if.then.79:                                       ; preds = %if.then.76
  br label %clear, !dbg !15779

if.end.80:                                        ; preds = %if.then.76
  %73 = load %struct._object*, %struct._object** %parser_doctype, align 8, !dbg !15781, !tbaa !2620
  %74 = load %struct._object*, %struct._object** %doctype_name_obj, align 8, !dbg !15782, !tbaa !2620
  %75 = load %struct._object*, %struct._object** %pubid_obj, align 8, !dbg !15783, !tbaa !2620
  %76 = load %struct._object*, %struct._object** %sysid_obj, align 8, !dbg !15784, !tbaa !2620
  %call81 = call %struct._object* (%struct._object*, i8*, ...) @PyObject_CallFunction(%struct._object* %73, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), %struct._object* %74, %struct._object* %75, %struct._object* %76), !dbg !15785
  store %struct._object* %call81, %struct._object** %res, align 8, !dbg !15786, !tbaa !2620
  br label %do.body.82, !dbg !15787

do.body.82:                                       ; preds = %if.end.80
  %77 = bitcast %struct._object** %_py_tmp83 to i8*, !dbg !15788
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !15788
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp83, metadata !2400, metadata !2613), !dbg !15790
  %78 = load %struct._object*, %struct._object** %res, align 8, !dbg !15791, !tbaa !2620
  store %struct._object* %78, %struct._object** %_py_tmp83, align 8, !dbg !15790, !tbaa !2620
  %79 = load %struct._object*, %struct._object** %_py_tmp83, align 8, !dbg !15792, !tbaa !2620
  %cmp84 = icmp ne %struct._object* %79, null, !dbg !15793
  br i1 %cmp84, label %if.then.85, label %if.end.98, !dbg !15794

if.then.85:                                       ; preds = %do.body.82
  store %struct._object* null, %struct._object** %res, align 8, !dbg !15795, !tbaa !2620
  br label %do.body.86, !dbg !15797

do.body.86:                                       ; preds = %if.then.85
  %80 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !15798
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !15798
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp87, metadata !2406, metadata !2613), !dbg !15800
  %81 = load %struct._object*, %struct._object** %_py_tmp83, align 8, !dbg !15801, !tbaa !2620
  store %struct._object* %81, %struct._object** %_py_decref_tmp87, align 8, !dbg !15800, !tbaa !2620
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !15802, !tbaa !2620
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !15804
  %83 = load i64, i64* %ob_refcnt88, align 8, !dbg !15805, !tbaa !2631
  %dec89 = add i64 %83, -1, !dbg !15805
  store i64 %dec89, i64* %ob_refcnt88, align 8, !dbg !15805, !tbaa !2631
  %cmp90 = icmp ne i64 %dec89, 0, !dbg !15806
  br i1 %cmp90, label %if.then.91, label %if.else.92, !dbg !15807

if.then.91:                                       ; preds = %do.body.86
  br label %if.end.95, !dbg !15808

if.else.92:                                       ; preds = %do.body.86
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !15810, !tbaa !2620
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !15812
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8, !dbg !15812, !tbaa !2703
  %tp_dealloc94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !15813
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc94, align 8, !dbg !15813, !tbaa !2705
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !15814, !tbaa !2620
  call void %86(%struct._object* %87), !dbg !15815
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.92, %if.then.91
  %88 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !15816
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !15816
  br label %do.cond.96, !dbg !15818

do.cond.96:                                       ; preds = %if.end.95
  br label %do.end.97, !dbg !15819

do.end.97:                                        ; preds = %do.cond.96
  br label %if.end.98, !dbg !15821

if.end.98:                                        ; preds = %do.end.97, %do.body.82
  %89 = bitcast %struct._object** %_py_tmp83 to i8*, !dbg !15823
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !15823
  br label %do.cond.99, !dbg !15826

do.cond.99:                                       ; preds = %if.end.98
  br label %do.end.100, !dbg !15827

do.end.100:                                       ; preds = %do.cond.99
  br label %if.end.101, !dbg !15829

if.end.101:                                       ; preds = %do.end.100, %if.then.73
  br label %if.end.102, !dbg !15830

if.end.102:                                       ; preds = %if.end.101, %if.end.70
  br label %clear, !dbg !15831

clear:                                            ; preds = %if.end.102, %if.then.79
  br label %do.body.103, !dbg !15833

do.body.103:                                      ; preds = %clear
  %90 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15834
  call void @llvm.lifetime.start(i64 8, i8* %90) #1, !dbg !15834
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !2410, metadata !2613), !dbg !15836
  %91 = load %struct._object*, %struct._object** %parser_doctype, align 8, !dbg !15837, !tbaa !2620
  store %struct._object* %91, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15836, !tbaa !2620
  %92 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15838, !tbaa !2620
  %cmp104 = icmp ne %struct._object* %92, null, !dbg !15839
  br i1 %cmp104, label %if.then.105, label %if.end.118, !dbg !15840

if.then.105:                                      ; preds = %do.body.103
  br label %do.body.106, !dbg !15841

do.body.106:                                      ; preds = %if.then.105
  %93 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !15843
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !15843
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp107, metadata !2412, metadata !2613), !dbg !15845
  %94 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !15846, !tbaa !2620
  store %struct._object* %94, %struct._object** %_py_decref_tmp107, align 8, !dbg !15845, !tbaa !2620
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !15847, !tbaa !2620
  %ob_refcnt108 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !15849
  %96 = load i64, i64* %ob_refcnt108, align 8, !dbg !15850, !tbaa !2631
  %dec109 = add i64 %96, -1, !dbg !15850
  store i64 %dec109, i64* %ob_refcnt108, align 8, !dbg !15850, !tbaa !2631
  %cmp110 = icmp ne i64 %dec109, 0, !dbg !15851
  br i1 %cmp110, label %if.then.111, label %if.else.112, !dbg !15852

if.then.111:                                      ; preds = %do.body.106
  br label %if.end.115, !dbg !15853

if.else.112:                                      ; preds = %do.body.106
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !15855, !tbaa !2620
  %ob_type113 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !15857
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type113, align 8, !dbg !15857, !tbaa !2703
  %tp_dealloc114 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !15858
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc114, align 8, !dbg !15858, !tbaa !2705
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp107, align 8, !dbg !15859, !tbaa !2620
  call void %99(%struct._object* %100), !dbg !15860
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.112, %if.then.111
  %101 = bitcast %struct._object** %_py_decref_tmp107 to i8*, !dbg !15861
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !15861
  br label %do.cond.116, !dbg !15863

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !15864

do.end.117:                                       ; preds = %do.cond.116
  br label %if.end.118, !dbg !15866

if.end.118:                                       ; preds = %do.end.117, %do.body.103
  %102 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !15868
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !15868
  br label %do.cond.119, !dbg !15871

do.cond.119:                                      ; preds = %if.end.118
  br label %do.end.120, !dbg !15872

do.end.120:                                       ; preds = %do.cond.119
  br label %do.body.121, !dbg !15874

do.body.121:                                      ; preds = %do.end.120
  %103 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !15875
  call void @llvm.lifetime.start(i64 8, i8* %103) #1, !dbg !15875
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp122, metadata !2415, metadata !2613), !dbg !15877
  %104 = load %struct._object*, %struct._object** %doctype_name_obj, align 8, !dbg !15878, !tbaa !2620
  store %struct._object* %104, %struct._object** %_py_decref_tmp122, align 8, !dbg !15877, !tbaa !2620
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !15879, !tbaa !2620
  %ob_refcnt123 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 0, !dbg !15881
  %106 = load i64, i64* %ob_refcnt123, align 8, !dbg !15882, !tbaa !2631
  %dec124 = add i64 %106, -1, !dbg !15882
  store i64 %dec124, i64* %ob_refcnt123, align 8, !dbg !15882, !tbaa !2631
  %cmp125 = icmp ne i64 %dec124, 0, !dbg !15883
  br i1 %cmp125, label %if.then.126, label %if.else.127, !dbg !15884

if.then.126:                                      ; preds = %do.body.121
  br label %if.end.130, !dbg !15885

if.else.127:                                      ; preds = %do.body.121
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !15887, !tbaa !2620
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 1, !dbg !15889
  %108 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8, !dbg !15889, !tbaa !2703
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 4, !dbg !15890
  %109 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8, !dbg !15890, !tbaa !2705
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !15891, !tbaa !2620
  call void %109(%struct._object* %110), !dbg !15892
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  %111 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !15893
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !15893
  br label %do.cond.131, !dbg !15895

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !15896

do.end.132:                                       ; preds = %do.cond.131
  br label %do.body.133, !dbg !15898

do.body.133:                                      ; preds = %do.end.132
  %112 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !15899
  call void @llvm.lifetime.start(i64 8, i8* %112) #1, !dbg !15899
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp134, metadata !2417, metadata !2613), !dbg !15901
  %113 = load %struct._object*, %struct._object** %pubid_obj, align 8, !dbg !15902, !tbaa !2620
  store %struct._object* %113, %struct._object** %_py_decref_tmp134, align 8, !dbg !15901, !tbaa !2620
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !15903, !tbaa !2620
  %ob_refcnt135 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 0, !dbg !15905
  %115 = load i64, i64* %ob_refcnt135, align 8, !dbg !15906, !tbaa !2631
  %dec136 = add i64 %115, -1, !dbg !15906
  store i64 %dec136, i64* %ob_refcnt135, align 8, !dbg !15906, !tbaa !2631
  %cmp137 = icmp ne i64 %dec136, 0, !dbg !15907
  br i1 %cmp137, label %if.then.138, label %if.else.139, !dbg !15908

if.then.138:                                      ; preds = %do.body.133
  br label %if.end.142, !dbg !15909

if.else.139:                                      ; preds = %do.body.133
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !15911, !tbaa !2620
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 1, !dbg !15913
  %117 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !15913, !tbaa !2703
  %tp_dealloc141 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %117, i32 0, i32 4, !dbg !15914
  %118 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc141, align 8, !dbg !15914, !tbaa !2705
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !15915, !tbaa !2620
  call void %118(%struct._object* %119), !dbg !15916
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.139, %if.then.138
  %120 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !15917
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !15917
  br label %do.cond.143, !dbg !15918

do.cond.143:                                      ; preds = %if.end.142
  br label %do.end.144, !dbg !15919

do.end.144:                                       ; preds = %do.cond.143
  br label %do.body.145, !dbg !15921

do.body.145:                                      ; preds = %do.end.144
  %121 = bitcast %struct._object** %_py_decref_tmp146 to i8*, !dbg !15922
  call void @llvm.lifetime.start(i64 8, i8* %121) #1, !dbg !15922
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp146, metadata !2419, metadata !2613), !dbg !15924
  %122 = load %struct._object*, %struct._object** %sysid_obj, align 8, !dbg !15925, !tbaa !2620
  store %struct._object* %122, %struct._object** %_py_decref_tmp146, align 8, !dbg !15924, !tbaa !2620
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp146, align 8, !dbg !15926, !tbaa !2620
  %ob_refcnt147 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 0, !dbg !15928
  %124 = load i64, i64* %ob_refcnt147, align 8, !dbg !15929, !tbaa !2631
  %dec148 = add i64 %124, -1, !dbg !15929
  store i64 %dec148, i64* %ob_refcnt147, align 8, !dbg !15929, !tbaa !2631
  %cmp149 = icmp ne i64 %dec148, 0, !dbg !15930
  br i1 %cmp149, label %if.then.150, label %if.else.151, !dbg !15931

if.then.150:                                      ; preds = %do.body.145
  br label %if.end.154, !dbg !15932

if.else.151:                                      ; preds = %do.body.145
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp146, align 8, !dbg !15934, !tbaa !2620
  %ob_type152 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 1, !dbg !15936
  %126 = load %struct._typeobject*, %struct._typeobject** %ob_type152, align 8, !dbg !15936, !tbaa !2703
  %tp_dealloc153 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %126, i32 0, i32 4, !dbg !15937
  %127 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc153, align 8, !dbg !15937, !tbaa !2705
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp146, align 8, !dbg !15938, !tbaa !2620
  call void %127(%struct._object* %128), !dbg !15939
  br label %if.end.154

if.end.154:                                       ; preds = %if.else.151, %if.then.150
  %129 = bitcast %struct._object** %_py_decref_tmp146 to i8*, !dbg !15940
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !15940
  br label %do.cond.155, !dbg !15941

do.cond.155:                                      ; preds = %if.end.154
  br label %do.end.156, !dbg !15942

do.end.156:                                       ; preds = %do.cond.155
  store i32 0, i32* %cleanup.dest.slot, !dbg !15944
  br label %cleanup, !dbg !15944

cleanup:                                          ; preds = %do.end.156, %do.end.43, %do.end, %if.then.3, %if.then
  %130 = bitcast %struct._object** %res to i8*, !dbg !15945
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !15945
  %131 = bitcast %struct._object** %parser_doctype to i8*, !dbg !15945
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !15945
  %132 = bitcast %struct._object** %pubid_obj to i8*, !dbg !15945
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !15945
  %133 = bitcast %struct._object** %sysid_obj to i8*, !dbg !15945
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !15945
  %134 = bitcast %struct._object** %doctype_name_obj to i8*, !dbg !15945
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !15945
  %135 = bitcast %struct._object** %self_pyobj to i8*, !dbg !15945
  call void @llvm.lifetime.end(i64 8, i8* %135) #1, !dbg !15945
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !15944

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @makeuniversal(%struct.XMLParserObject* %self, i8* %string) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.XMLParserObject*, align 8
  %string.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %tag = alloca %struct._object*, align 8
  %p = alloca i8*, align 8
  %i = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp68 = alloca %struct._object*, align 8
  %_py_decref_tmp81 = alloca %struct._object*, align 8
  %_py_decref_tmp98 = alloca %struct._object*, align 8
  store %struct.XMLParserObject* %self, %struct.XMLParserObject** %self.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata %struct.XMLParserObject** %self.addr, metadata !2227, metadata !2613), !dbg !15947
  store i8* %string, i8** %string.addr, align 8, !tbaa !2620
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !2228, metadata !2613), !dbg !15948
  %0 = bitcast i64* %size to i8*, !dbg !15949
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !15949
  call void @llvm.dbg.declare(metadata i64* %size, metadata !2229, metadata !2613), !dbg !15950
  %1 = load i8*, i8** %string.addr, align 8, !dbg !15951, !tbaa !2620
  %call = call i64 @strlen(i8* %1) #6, !dbg !15952
  store i64 %call, i64* %size, align 8, !dbg !15950, !tbaa !2742
  %2 = bitcast %struct._object** %key to i8*, !dbg !15953
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !15953
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !2230, metadata !2613), !dbg !15954
  %3 = bitcast %struct._object** %value to i8*, !dbg !15955
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !15955
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2231, metadata !2613), !dbg !15956
  %4 = load i8*, i8** %string.addr, align 8, !dbg !15957, !tbaa !2620
  %5 = load i64, i64* %size, align 8, !dbg !15958, !tbaa !2742
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %4, i64 %5), !dbg !15959
  store %struct._object* %call1, %struct._object** %key, align 8, !dbg !15960, !tbaa !2620
  %6 = load %struct._object*, %struct._object** %key, align 8, !dbg !15961, !tbaa !2620
  %tobool = icmp ne %struct._object* %6, null, !dbg !15961
  br i1 %tobool, label %if.end, label %if.then, !dbg !15963

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !15964
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110, !dbg !15964

if.end:                                           ; preds = %entry
  %7 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !15965, !tbaa !2620
  %names = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %7, i32 0, i32 4, !dbg !15966
  %8 = load %struct._object*, %struct._object** %names, align 8, !dbg !15966, !tbaa !11571
  %9 = load %struct._object*, %struct._object** %key, align 8, !dbg !15967, !tbaa !2620
  %call2 = call %struct._object* @PyDict_GetItem(%struct._object* %8, %struct._object* %9), !dbg !15968
  store %struct._object* %call2, %struct._object** %value, align 8, !dbg !15969, !tbaa !2620
  %10 = load %struct._object*, %struct._object** %value, align 8, !dbg !15970, !tbaa !2620
  %tobool3 = icmp ne %struct._object* %10, null, !dbg !15970
  br i1 %tobool3, label %if.then.4, label %if.else, !dbg !15971

if.then.4:                                        ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %value, align 8, !dbg !15972, !tbaa !2620
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !15974
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !15975, !tbaa !2631
  %inc = add i64 %12, 1, !dbg !15975
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !15975, !tbaa !2631
  br label %if.end.96, !dbg !15976

if.else:                                          ; preds = %if.end
  %13 = bitcast %struct._object** %tag to i8*, !dbg !15977
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !15977
  call void @llvm.dbg.declare(metadata %struct._object** %tag, metadata !2232, metadata !2613), !dbg !15978
  %14 = bitcast i8** %p to i8*, !dbg !15979
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !15979
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2235, metadata !2613), !dbg !15980
  %15 = bitcast i64* %i to i8*, !dbg !15981
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !15981
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2236, metadata !2613), !dbg !15982
  store i64 0, i64* %i, align 8, !dbg !15983, !tbaa !2742
  br label %for.cond, !dbg !15985

for.cond:                                         ; preds = %for.inc, %if.else
  %16 = load i64, i64* %i, align 8, !dbg !15986, !tbaa !2742
  %17 = load i64, i64* %size, align 8, !dbg !15990, !tbaa !2742
  %cmp = icmp slt i64 %16, %17, !dbg !15991
  br i1 %cmp, label %for.body, label %for.end, !dbg !15992

for.body:                                         ; preds = %for.cond
  %18 = load i64, i64* %i, align 8, !dbg !15993, !tbaa !2742
  %19 = load i8*, i8** %string.addr, align 8, !dbg !15995, !tbaa !2620
  %arrayidx = getelementptr i8, i8* %19, i64 %18, !dbg !15995
  %20 = load i8, i8* %arrayidx, align 1, !dbg !15995, !tbaa !2756
  %conv = sext i8 %20 to i32, !dbg !15995
  %cmp5 = icmp eq i32 %conv, 125, !dbg !15996
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !15997

if.then.7:                                        ; preds = %for.body
  br label %for.end, !dbg !15998

if.end.8:                                         ; preds = %for.body
  br label %for.inc, !dbg !15999

for.inc:                                          ; preds = %if.end.8
  %21 = load i64, i64* %i, align 8, !dbg !16001, !tbaa !2742
  %inc9 = add i64 %21, 1, !dbg !16001
  store i64 %inc9, i64* %i, align 8, !dbg !16001, !tbaa !2742
  br label %for.cond, !dbg !16002

for.end:                                          ; preds = %if.then.7, %for.cond
  %22 = load i64, i64* %i, align 8, !dbg !16003, !tbaa !2742
  %23 = load i64, i64* %size, align 8, !dbg !16004, !tbaa !2742
  %cmp10 = icmp ne i64 %22, %23, !dbg !16005
  br i1 %cmp10, label %if.then.12, label %if.else.26, !dbg !16006

if.then.12:                                       ; preds = %for.end
  %24 = load i64, i64* %size, align 8, !dbg !16007, !tbaa !2742
  %add = add i64 %24, 1, !dbg !16008
  %call13 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %add), !dbg !16009
  store %struct._object* %call13, %struct._object** %tag, align 8, !dbg !16010, !tbaa !2620
  %25 = load %struct._object*, %struct._object** %tag, align 8, !dbg !16011, !tbaa !2620
  %cmp14 = icmp eq %struct._object* %25, null, !dbg !16012
  br i1 %cmp14, label %if.then.16, label %if.end.23, !dbg !16013

if.then.16:                                       ; preds = %if.then.12
  br label %do.body, !dbg !16014

do.body:                                          ; preds = %if.then.16
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !16015
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !16015
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2237, metadata !2613), !dbg !16017
  %27 = load %struct._object*, %struct._object** %key, align 8, !dbg !16018, !tbaa !2620
  store %struct._object* %27, %struct._object** %_py_decref_tmp, align 8, !dbg !16017, !tbaa !2620
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !16019, !tbaa !2620
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !16021
  %29 = load i64, i64* %ob_refcnt17, align 8, !dbg !16022, !tbaa !2631
  %dec = add i64 %29, -1, !dbg !16022
  store i64 %dec, i64* %ob_refcnt17, align 8, !dbg !16022, !tbaa !2631
  %cmp18 = icmp ne i64 %dec, 0, !dbg !16023
  br i1 %cmp18, label %if.then.20, label %if.else.21, !dbg !16024

if.then.20:                                       ; preds = %do.body
  br label %if.end.22, !dbg !16025

if.else.21:                                       ; preds = %do.body
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !16027, !tbaa !2620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !16029
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !16029, !tbaa !2703
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !16030
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !16030, !tbaa !2705
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !16031, !tbaa !2620
  call void %32(%struct._object* %33), !dbg !16032
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21, %if.then.20
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !16033
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !16033
  br label %do.cond, !dbg !16035

do.cond:                                          ; preds = %if.end.22
  br label %do.end, !dbg !16036

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !16038
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16038

if.end.23:                                        ; preds = %if.then.12
  %35 = load %struct._object*, %struct._object** %tag, align 8, !dbg !16039, !tbaa !2620
  %36 = bitcast %struct._object* %35 to %struct.PyBytesObject*, !dbg !16040
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %36, i32 0, i32 2, !dbg !16041
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !16042
  store i8* %arraydecay, i8** %p, align 8, !dbg !16043, !tbaa !2620
  %37 = load i8*, i8** %p, align 8, !dbg !16044, !tbaa !2620
  %arrayidx24 = getelementptr i8, i8* %37, i64 0, !dbg !16044
  store i8 123, i8* %arrayidx24, align 1, !dbg !16045, !tbaa !2756
  %38 = load i8*, i8** %p, align 8, !dbg !16046, !tbaa !2620
  %add.ptr = getelementptr i8, i8* %38, i64 1, !dbg !16047
  %39 = load i8*, i8** %string.addr, align 8, !dbg !16048, !tbaa !2620
  %40 = load i64, i64* %size, align 8, !dbg !16049, !tbaa !2742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %39, i64 %40, i32 1, i1 false), !dbg !16050
  %41 = load i64, i64* %size, align 8, !dbg !16051, !tbaa !2742
  %inc25 = add i64 %41, 1, !dbg !16051
  store i64 %inc25, i64* %size, align 8, !dbg !16051, !tbaa !2742
  br label %if.end.29, !dbg !16052

if.else.26:                                       ; preds = %for.end
  %42 = load %struct._object*, %struct._object** %key, align 8, !dbg !16053, !tbaa !2620
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !16055
  %43 = load i64, i64* %ob_refcnt27, align 8, !dbg !16056, !tbaa !2631
  %inc28 = add i64 %43, 1, !dbg !16056
  store i64 %inc28, i64* %ob_refcnt27, align 8, !dbg !16056, !tbaa !2631
  %44 = load %struct._object*, %struct._object** %key, align 8, !dbg !16057, !tbaa !2620
  store %struct._object* %44, %struct._object** %tag, align 8, !dbg !16058, !tbaa !2620
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.end.23
  %45 = load %struct._object*, %struct._object** %tag, align 8, !dbg !16059, !tbaa !2620
  %46 = bitcast %struct._object* %45 to %struct.PyBytesObject*, !dbg !16060
  %ob_sval30 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %46, i32 0, i32 2, !dbg !16061
  %arraydecay31 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval30, i32 0, i32 0, !dbg !16062
  store i8* %arraydecay31, i8** %p, align 8, !dbg !16063, !tbaa !2620
  %47 = load i8*, i8** %p, align 8, !dbg !16064, !tbaa !2620
  %48 = load i64, i64* %size, align 8, !dbg !16065, !tbaa !2742
  %call32 = call %struct._object* @PyUnicode_DecodeUTF8(i8* %47, i64 %48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0)), !dbg !16066
  store %struct._object* %call32, %struct._object** %value, align 8, !dbg !16067, !tbaa !2620
  br label %do.body.33, !dbg !16068

do.body.33:                                       ; preds = %if.end.29
  %49 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !16069
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !16069
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !2243, metadata !2613), !dbg !16071
  %50 = load %struct._object*, %struct._object** %tag, align 8, !dbg !16072, !tbaa !2620
  store %struct._object* %50, %struct._object** %_py_decref_tmp34, align 8, !dbg !16071, !tbaa !2620
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !16073, !tbaa !2620
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !16075
  %52 = load i64, i64* %ob_refcnt35, align 8, !dbg !16076, !tbaa !2631
  %dec36 = add i64 %52, -1, !dbg !16076
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !16076, !tbaa !2631
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !16077
  br i1 %cmp37, label %if.then.39, label %if.else.40, !dbg !16078

if.then.39:                                       ; preds = %do.body.33
  br label %if.end.43, !dbg !16079

if.else.40:                                       ; preds = %do.body.33
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !16081, !tbaa !2620
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !16083
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !16083, !tbaa !2703
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !16084
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8, !dbg !16084, !tbaa !2705
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !16085, !tbaa !2620
  call void %55(%struct._object* %56), !dbg !16086
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  %57 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !16087
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !16087
  br label %do.cond.44, !dbg !16089

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !16090

do.end.45:                                        ; preds = %do.cond.44
  %58 = load %struct._object*, %struct._object** %value, align 8, !dbg !16092, !tbaa !2620
  %tobool46 = icmp ne %struct._object* %58, null, !dbg !16092
  br i1 %tobool46, label %if.end.61, label %if.then.47, !dbg !16093

if.then.47:                                       ; preds = %do.end.45
  br label %do.body.48, !dbg !16094

do.body.48:                                       ; preds = %if.then.47
  %59 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !16095
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !16095
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp49, metadata !2245, metadata !2613), !dbg !16097
  %60 = load %struct._object*, %struct._object** %key, align 8, !dbg !16098, !tbaa !2620
  store %struct._object* %60, %struct._object** %_py_decref_tmp49, align 8, !dbg !16097, !tbaa !2620
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !16099, !tbaa !2620
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !16101
  %62 = load i64, i64* %ob_refcnt50, align 8, !dbg !16102, !tbaa !2631
  %dec51 = add i64 %62, -1, !dbg !16102
  store i64 %dec51, i64* %ob_refcnt50, align 8, !dbg !16102, !tbaa !2631
  %cmp52 = icmp ne i64 %dec51, 0, !dbg !16103
  br i1 %cmp52, label %if.then.54, label %if.else.55, !dbg !16104

if.then.54:                                       ; preds = %do.body.48
  br label %if.end.58, !dbg !16105

if.else.55:                                       ; preds = %do.body.48
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !16107, !tbaa !2620
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !16109
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !16109, !tbaa !2703
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !16110
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !16110, !tbaa !2705
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !16111, !tbaa !2620
  call void %65(%struct._object* %66), !dbg !16112
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  %67 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !16113
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !16113
  br label %do.cond.59, !dbg !16115

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !16116

do.end.60:                                        ; preds = %do.cond.59
  store %struct._object* null, %struct._object** %retval, !dbg !16118
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16118

if.end.61:                                        ; preds = %do.end.45
  %68 = load %struct.XMLParserObject*, %struct.XMLParserObject** %self.addr, align 8, !dbg !16119, !tbaa !2620
  %names62 = getelementptr inbounds %struct.XMLParserObject, %struct.XMLParserObject* %68, i32 0, i32 4, !dbg !16120
  %69 = load %struct._object*, %struct._object** %names62, align 8, !dbg !16120, !tbaa !11571
  %70 = load %struct._object*, %struct._object** %key, align 8, !dbg !16121, !tbaa !2620
  %71 = load %struct._object*, %struct._object** %value, align 8, !dbg !16122, !tbaa !2620
  %call63 = call i32 @PyDict_SetItem(%struct._object* %69, %struct._object* %70, %struct._object* %71), !dbg !16123
  %cmp64 = icmp slt i32 %call63, 0, !dbg !16124
  br i1 %cmp64, label %if.then.66, label %if.end.93, !dbg !16125

if.then.66:                                       ; preds = %if.end.61
  br label %do.body.67, !dbg !16126

do.body.67:                                       ; preds = %if.then.66
  %72 = bitcast %struct._object** %_py_decref_tmp68 to i8*, !dbg !16127
  call void @llvm.lifetime.start(i64 8, i8* %72) #1, !dbg !16127
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp68, metadata !2249, metadata !2613), !dbg !16129
  %73 = load %struct._object*, %struct._object** %key, align 8, !dbg !16130, !tbaa !2620
  store %struct._object* %73, %struct._object** %_py_decref_tmp68, align 8, !dbg !16129, !tbaa !2620
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp68, align 8, !dbg !16131, !tbaa !2620
  %ob_refcnt69 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !16133
  %75 = load i64, i64* %ob_refcnt69, align 8, !dbg !16134, !tbaa !2631
  %dec70 = add i64 %75, -1, !dbg !16134
  store i64 %dec70, i64* %ob_refcnt69, align 8, !dbg !16134, !tbaa !2631
  %cmp71 = icmp ne i64 %dec70, 0, !dbg !16135
  br i1 %cmp71, label %if.then.73, label %if.else.74, !dbg !16136

if.then.73:                                       ; preds = %do.body.67
  br label %if.end.77, !dbg !16137

if.else.74:                                       ; preds = %do.body.67
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp68, align 8, !dbg !16139, !tbaa !2620
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !16141
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !16141, !tbaa !2703
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !16142
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !16142, !tbaa !2705
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp68, align 8, !dbg !16143, !tbaa !2620
  call void %78(%struct._object* %79), !dbg !16144
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %80 = bitcast %struct._object** %_py_decref_tmp68 to i8*, !dbg !16145
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !16145
  br label %do.cond.78, !dbg !16147

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !16148

do.end.79:                                        ; preds = %do.cond.78
  br label %do.body.80, !dbg !16150

do.body.80:                                       ; preds = %do.end.79
  %81 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !16151
  call void @llvm.lifetime.start(i64 8, i8* %81) #1, !dbg !16151
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp81, metadata !2253, metadata !2613), !dbg !16153
  %82 = load %struct._object*, %struct._object** %value, align 8, !dbg !16154, !tbaa !2620
  store %struct._object* %82, %struct._object** %_py_decref_tmp81, align 8, !dbg !16153, !tbaa !2620
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !16155, !tbaa !2620
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !16157
  %84 = load i64, i64* %ob_refcnt82, align 8, !dbg !16158, !tbaa !2631
  %dec83 = add i64 %84, -1, !dbg !16158
  store i64 %dec83, i64* %ob_refcnt82, align 8, !dbg !16158, !tbaa !2631
  %cmp84 = icmp ne i64 %dec83, 0, !dbg !16159
  br i1 %cmp84, label %if.then.86, label %if.else.87, !dbg !16160

if.then.86:                                       ; preds = %do.body.80
  br label %if.end.90, !dbg !16161

if.else.87:                                       ; preds = %do.body.80
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !16163, !tbaa !2620
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !16165
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !16165, !tbaa !2703
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !16166
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8, !dbg !16166, !tbaa !2705
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !16167, !tbaa !2620
  call void %87(%struct._object* %88), !dbg !16168
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  %89 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !16169
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !16169
  br label %do.cond.91, !dbg !16170

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !16171

do.end.92:                                        ; preds = %do.cond.91
  store %struct._object* null, %struct._object** %retval, !dbg !16173
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16173

if.end.93:                                        ; preds = %if.end.61
  store i32 0, i32* %cleanup.dest.slot, !dbg !16174
  br label %cleanup, !dbg !16174

cleanup:                                          ; preds = %if.end.93, %do.end.92, %do.end.60, %do.end
  %90 = bitcast i64* %i to i8*, !dbg !16175
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !16175
  %91 = bitcast i8** %p to i8*, !dbg !16175
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !16175
  %92 = bitcast %struct._object** %tag to i8*, !dbg !16175
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !16175
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.110 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.96

if.end.96:                                        ; preds = %cleanup.cont, %if.then.4
  br label %do.body.97, !dbg !16177

do.body.97:                                       ; preds = %if.end.96
  %93 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !16178
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !16178
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp98, metadata !2255, metadata !2613), !dbg !16180
  %94 = load %struct._object*, %struct._object** %key, align 8, !dbg !16181, !tbaa !2620
  store %struct._object* %94, %struct._object** %_py_decref_tmp98, align 8, !dbg !16180, !tbaa !2620
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !16182, !tbaa !2620
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !16184
  %96 = load i64, i64* %ob_refcnt99, align 8, !dbg !16185, !tbaa !2631
  %dec100 = add i64 %96, -1, !dbg !16185
  store i64 %dec100, i64* %ob_refcnt99, align 8, !dbg !16185, !tbaa !2631
  %cmp101 = icmp ne i64 %dec100, 0, !dbg !16186
  br i1 %cmp101, label %if.then.103, label %if.else.104, !dbg !16187

if.then.103:                                      ; preds = %do.body.97
  br label %if.end.107, !dbg !16188

if.else.104:                                      ; preds = %do.body.97
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !16190, !tbaa !2620
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !16192
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8, !dbg !16192, !tbaa !2703
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !16193
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8, !dbg !16193, !tbaa !2705
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !16194, !tbaa !2620
  call void %99(%struct._object* %100), !dbg !16195
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.104, %if.then.103
  %101 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !16196
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !16196
  br label %do.cond.108, !dbg !16198

do.cond.108:                                      ; preds = %if.end.107
  br label %do.end.109, !dbg !16199

do.end.109:                                       ; preds = %do.cond.108
  %102 = load %struct._object*, %struct._object** %value, align 8, !dbg !16201, !tbaa !2620
  store %struct._object* %102, %struct._object** %retval, !dbg !16202
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110, !dbg !16202

cleanup.110:                                      ; preds = %do.end.109, %cleanup, %if.then
  %103 = bitcast %struct._object** %value to i8*, !dbg !16203
  call void @llvm.lifetime.end(i64 8, i8* %103) #1, !dbg !16203
  %104 = bitcast %struct._object** %key to i8*, !dbg !16203
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !16203
  %105 = bitcast i64* %size to i8*, !dbg !16203
  call void @llvm.lifetime.end(i64 8, i8* %105) #1, !dbg !16203
  %106 = load %struct._object*, %struct._object** %retval, !dbg !16203
  ret %struct._object* %106, !dbg !16203
}

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

; Function Attrs: nounwind
declare i8* @strncat(i8*, i8*, i64) #4

declare i32 @PyErr_WarnEx(%struct._object*, i8*, i64) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2608, !2609, !2610}
!llvm.ident = !{!2611}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !59, subprograms: !603, globals: !2427)
!1 = !DIFile(filename: "_elementtree.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3, !47, !52}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Error", file: !4, line: 54, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/expat/expat.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!6 = !DIEnumerator(name: "XML_ERROR_NONE", value: 0)
!7 = !DIEnumerator(name: "XML_ERROR_NO_MEMORY", value: 1)
!8 = !DIEnumerator(name: "XML_ERROR_SYNTAX", value: 2)
!9 = !DIEnumerator(name: "XML_ERROR_NO_ELEMENTS", value: 3)
!10 = !DIEnumerator(name: "XML_ERROR_INVALID_TOKEN", value: 4)
!11 = !DIEnumerator(name: "XML_ERROR_UNCLOSED_TOKEN", value: 5)
!12 = !DIEnumerator(name: "XML_ERROR_PARTIAL_CHAR", value: 6)
!13 = !DIEnumerator(name: "XML_ERROR_TAG_MISMATCH", value: 7)
!14 = !DIEnumerator(name: "XML_ERROR_DUPLICATE_ATTRIBUTE", value: 8)
!15 = !DIEnumerator(name: "XML_ERROR_JUNK_AFTER_DOC_ELEMENT", value: 9)
!16 = !DIEnumerator(name: "XML_ERROR_PARAM_ENTITY_REF", value: 10)
!17 = !DIEnumerator(name: "XML_ERROR_UNDEFINED_ENTITY", value: 11)
!18 = !DIEnumerator(name: "XML_ERROR_RECURSIVE_ENTITY_REF", value: 12)
!19 = !DIEnumerator(name: "XML_ERROR_ASYNC_ENTITY", value: 13)
!20 = !DIEnumerator(name: "XML_ERROR_BAD_CHAR_REF", value: 14)
!21 = !DIEnumerator(name: "XML_ERROR_BINARY_ENTITY_REF", value: 15)
!22 = !DIEnumerator(name: "XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF", value: 16)
!23 = !DIEnumerator(name: "XML_ERROR_MISPLACED_XML_PI", value: 17)
!24 = !DIEnumerator(name: "XML_ERROR_UNKNOWN_ENCODING", value: 18)
!25 = !DIEnumerator(name: "XML_ERROR_INCORRECT_ENCODING", value: 19)
!26 = !DIEnumerator(name: "XML_ERROR_UNCLOSED_CDATA_SECTION", value: 20)
!27 = !DIEnumerator(name: "XML_ERROR_EXTERNAL_ENTITY_HANDLING", value: 21)
!28 = !DIEnumerator(name: "XML_ERROR_NOT_STANDALONE", value: 22)
!29 = !DIEnumerator(name: "XML_ERROR_UNEXPECTED_STATE", value: 23)
!30 = !DIEnumerator(name: "XML_ERROR_ENTITY_DECLARED_IN_PE", value: 24)
!31 = !DIEnumerator(name: "XML_ERROR_FEATURE_REQUIRES_XML_DTD", value: 25)
!32 = !DIEnumerator(name: "XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING", value: 26)
!33 = !DIEnumerator(name: "XML_ERROR_UNBOUND_PREFIX", value: 27)
!34 = !DIEnumerator(name: "XML_ERROR_UNDECLARING_PREFIX", value: 28)
!35 = !DIEnumerator(name: "XML_ERROR_INCOMPLETE_PE", value: 29)
!36 = !DIEnumerator(name: "XML_ERROR_XML_DECL", value: 30)
!37 = !DIEnumerator(name: "XML_ERROR_TEXT_DECL", value: 31)
!38 = !DIEnumerator(name: "XML_ERROR_PUBLICID", value: 32)
!39 = !DIEnumerator(name: "XML_ERROR_SUSPENDED", value: 33)
!40 = !DIEnumerator(name: "XML_ERROR_NOT_SUSPENDED", value: 34)
!41 = !DIEnumerator(name: "XML_ERROR_ABORTED", value: 35)
!42 = !DIEnumerator(name: "XML_ERROR_FINISHED", value: 36)
!43 = !DIEnumerator(name: "XML_ERROR_SUSPEND_PE", value: 37)
!44 = !DIEnumerator(name: "XML_ERROR_RESERVED_PREFIX_XML", value: 38)
!45 = !DIEnumerator(name: "XML_ERROR_RESERVED_PREFIX_XMLNS", value: 39)
!46 = !DIEnumerator(name: "XML_ERROR_RESERVED_NAMESPACE_URI", value: 40)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "XML_Status", file: !4, line: 45, size: 32, align: 32, elements: !48)
!48 = !{!49, !50, !51}
!49 = !DIEnumerator(name: "XML_STATUS_ERROR", value: 0)
!50 = !DIEnumerator(name: "XML_STATUS_OK", value: 1)
!51 = !DIEnumerator(name: "XML_STATUS_SUSPENDED", value: 2)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !53, line: 451, size: 32, align: 32, elements: !54)
!53 = !DIFile(filename: "./Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!54 = !{!55, !56, !57, !58}
!55 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!56 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!57 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!58 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!59 = !{!60, !406, !145, !150, !414, !416, !84, !419, !442, !445, !446, !454, !462, !479, !487, !505, !513, !530, !531, !533, !535, !537, !99, !72, !555, !563, !567, !586, !591, !592, !596, !597, !598, !599, !66}
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64, align: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !62, line: 109, baseType: !63)
!62 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!63 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !62, line: 105, size: 128, align: 64, elements: !64)
!64 = !{!65, !73}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !63, file: !62, line: 107, baseType: !66, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !67, line: 177, baseType: !68)
!67 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !69, line: 102, baseType: !70)
!69 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !71, line: 181, baseType: !72)
!71 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!72 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !63, file: !62, line: 108, baseType: !74, size: 64, align: 64, offset: 64)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64, align: 64)
!75 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !62, line: 334, size: 3200, align: 64, elements: !76)
!76 = !{!77, !83, !87, !88, !89, !94, !158, !163, !168, !169, !174, !226, !257, !269, !275, !276, !277, !279, !281, !312, !313, !314, !323, !324, !329, !330, !332, !334, !344, !354, !372, !373, !374, !376, !378, !379, !381, !386, !391, !396, !397, !398, !399, !400, !401, !402, !403, !405}
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !75, file: !62, line: 335, baseType: !78, size: 192, align: 64)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !62, line: 114, baseType: !79)
!79 = !DICompositeType(tag: DW_TAG_structure_type, file: !62, line: 111, size: 192, align: 64, elements: !80)
!80 = !{!81, !82}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !79, file: !62, line: 112, baseType: !61, size: 128, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !79, file: !62, line: 113, baseType: !66, size: 64, align: 64, offset: 128)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !75, file: !62, line: 336, baseType: !84, size: 64, align: 64, offset: 192)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !86)
!86 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !75, file: !62, line: 337, baseType: !66, size: 64, align: 64, offset: 256)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !75, file: !62, line: 337, baseType: !66, size: 64, align: 64, offset: 320)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !75, file: !62, line: 341, baseType: !90, size: 64, align: 64, offset: 384)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !62, line: 308, baseType: !91)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64, align: 64)
!92 = !DISubroutineType(types: !93)
!93 = !{null, !60}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !75, file: !62, line: 342, baseType: !95, size: 64, align: 64, offset: 448)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !62, line: 314, baseType: !96)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64, align: 64)
!97 = !DISubroutineType(types: !98)
!98 = !{!99, !60, !100, !99}
!99 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64, align: 64)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !69, line: 48, baseType: !102)
!102 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !103, line: 246, size: 1728, align: 64, elements: !104)
!103 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!104 = !{!105, !106, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !126, !127, !128, !129, !131, !133, !135, !139, !142, !144, !146, !147, !148, !149, !153, !154}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !102, file: !103, line: 247, baseType: !99, size: 32, align: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !102, file: !103, line: 252, baseType: !107, size: 64, align: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64, align: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !102, file: !103, line: 253, baseType: !107, size: 64, align: 64, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !102, file: !103, line: 254, baseType: !107, size: 64, align: 64, offset: 192)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !102, file: !103, line: 255, baseType: !107, size: 64, align: 64, offset: 256)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !102, file: !103, line: 256, baseType: !107, size: 64, align: 64, offset: 320)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !102, file: !103, line: 257, baseType: !107, size: 64, align: 64, offset: 384)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !102, file: !103, line: 258, baseType: !107, size: 64, align: 64, offset: 448)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !102, file: !103, line: 259, baseType: !107, size: 64, align: 64, offset: 512)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !102, file: !103, line: 261, baseType: !107, size: 64, align: 64, offset: 576)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !102, file: !103, line: 262, baseType: !107, size: 64, align: 64, offset: 640)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !102, file: !103, line: 263, baseType: !107, size: 64, align: 64, offset: 704)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !102, file: !103, line: 265, baseType: !119, size: 64, align: 64, offset: 768)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !103, line: 161, size: 192, align: 64, elements: !121)
!121 = !{!122, !123, !125}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !120, file: !103, line: 162, baseType: !119, size: 64, align: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !120, file: !103, line: 163, baseType: !124, size: 64, align: 64, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64, align: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !120, file: !103, line: 167, baseType: !99, size: 32, align: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !102, file: !103, line: 267, baseType: !124, size: 64, align: 64, offset: 832)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !102, file: !103, line: 269, baseType: !99, size: 32, align: 32, offset: 896)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !102, file: !103, line: 273, baseType: !99, size: 32, align: 32, offset: 928)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !102, file: !103, line: 275, baseType: !130, size: 64, align: 64, offset: 960)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !71, line: 140, baseType: !72)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !102, file: !103, line: 279, baseType: !132, size: 16, align: 16, offset: 1024)
!132 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !102, file: !103, line: 280, baseType: !134, size: 8, align: 8, offset: 1040)
!134 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !102, file: !103, line: 281, baseType: !136, size: 8, align: 8, offset: 1048)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 8, align: 8, elements: !137)
!137 = !{!138}
!138 = !DISubrange(count: 1)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !102, file: !103, line: 285, baseType: !140, size: 64, align: 64, offset: 1088)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64, align: 64)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !103, line: 155, baseType: null)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !102, file: !103, line: 294, baseType: !143, size: 64, align: 64, offset: 1152)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !71, line: 141, baseType: !72)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !102, file: !103, line: 303, baseType: !145, size: 64, align: 64, offset: 1216)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !102, file: !103, line: 304, baseType: !145, size: 64, align: 64, offset: 1280)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !102, file: !103, line: 305, baseType: !145, size: 64, align: 64, offset: 1344)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !102, file: !103, line: 306, baseType: !145, size: 64, align: 64, offset: 1408)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !102, file: !103, line: 307, baseType: !150, size: 64, align: 64, offset: 1472)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !151, line: 62, baseType: !152)
!151 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!152 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !102, file: !103, line: 309, baseType: !99, size: 32, align: 32, offset: 1536)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !102, file: !103, line: 311, baseType: !155, size: 160, align: 8, offset: 1568)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 160, align: 8, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 20)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !75, file: !62, line: 343, baseType: !159, size: 64, align: 64, offset: 512)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !62, line: 316, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64, align: 64)
!161 = !DISubroutineType(types: !162)
!162 = !{!60, !60, !107}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !75, file: !62, line: 344, baseType: !164, size: 64, align: 64, offset: 576)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !62, line: 318, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64, align: 64)
!166 = !DISubroutineType(types: !167)
!167 = !{!99, !60, !107, !60}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !75, file: !62, line: 345, baseType: !145, size: 64, align: 64, offset: 640)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !75, file: !62, line: 346, baseType: !170, size: 64, align: 64, offset: 704)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !62, line: 320, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64, align: 64)
!172 = !DISubroutineType(types: !173)
!173 = !{!60, !60}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !75, file: !62, line: 350, baseType: !175, size: 64, align: 64, offset: 768)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64, align: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !62, line: 278, baseType: !177)
!177 = !DICompositeType(tag: DW_TAG_structure_type, file: !62, line: 236, size: 2176, align: 64, elements: !178)
!178 = !{!179, !184, !185, !186, !187, !188, !193, !195, !196, !197, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !177, file: !62, line: 241, baseType: !180, size: 64, align: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !62, line: 166, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64, align: 64)
!182 = !DISubroutineType(types: !183)
!183 = !{!60, !60, !60}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !177, file: !62, line: 242, baseType: !180, size: 64, align: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !177, file: !62, line: 243, baseType: !180, size: 64, align: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !177, file: !62, line: 244, baseType: !180, size: 64, align: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !177, file: !62, line: 245, baseType: !180, size: 64, align: 64, offset: 256)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !177, file: !62, line: 246, baseType: !189, size: 64, align: 64, offset: 320)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !62, line: 167, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!60, !60, !60, !60}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !177, file: !62, line: 247, baseType: !194, size: 64, align: 64, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !62, line: 165, baseType: !171)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !177, file: !62, line: 248, baseType: !194, size: 64, align: 64, offset: 448)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !177, file: !62, line: 249, baseType: !194, size: 64, align: 64, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !177, file: !62, line: 250, baseType: !198, size: 64, align: 64, offset: 576)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !62, line: 168, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!200 = !DISubroutineType(types: !201)
!201 = !{!99, !60}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !177, file: !62, line: 251, baseType: !194, size: 64, align: 64, offset: 640)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !177, file: !62, line: 252, baseType: !180, size: 64, align: 64, offset: 704)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !177, file: !62, line: 253, baseType: !180, size: 64, align: 64, offset: 768)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !177, file: !62, line: 254, baseType: !180, size: 64, align: 64, offset: 832)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !177, file: !62, line: 255, baseType: !180, size: 64, align: 64, offset: 896)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !177, file: !62, line: 256, baseType: !180, size: 64, align: 64, offset: 960)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !177, file: !62, line: 257, baseType: !194, size: 64, align: 64, offset: 1024)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !177, file: !62, line: 258, baseType: !145, size: 64, align: 64, offset: 1088)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !177, file: !62, line: 259, baseType: !194, size: 64, align: 64, offset: 1152)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !177, file: !62, line: 261, baseType: !180, size: 64, align: 64, offset: 1216)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !177, file: !62, line: 262, baseType: !180, size: 64, align: 64, offset: 1280)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !177, file: !62, line: 263, baseType: !180, size: 64, align: 64, offset: 1344)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !177, file: !62, line: 264, baseType: !180, size: 64, align: 64, offset: 1408)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !177, file: !62, line: 265, baseType: !189, size: 64, align: 64, offset: 1472)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !177, file: !62, line: 266, baseType: !180, size: 64, align: 64, offset: 1536)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !177, file: !62, line: 267, baseType: !180, size: 64, align: 64, offset: 1600)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !177, file: !62, line: 268, baseType: !180, size: 64, align: 64, offset: 1664)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !177, file: !62, line: 269, baseType: !180, size: 64, align: 64, offset: 1728)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !177, file: !62, line: 270, baseType: !180, size: 64, align: 64, offset: 1792)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !177, file: !62, line: 272, baseType: !180, size: 64, align: 64, offset: 1856)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !177, file: !62, line: 273, baseType: !180, size: 64, align: 64, offset: 1920)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !177, file: !62, line: 274, baseType: !180, size: 64, align: 64, offset: 1984)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !177, file: !62, line: 275, baseType: !180, size: 64, align: 64, offset: 2048)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !177, file: !62, line: 277, baseType: !194, size: 64, align: 64, offset: 2112)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !75, file: !62, line: 351, baseType: !227, size: 64, align: 64, offset: 832)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !62, line: 292, baseType: !229)
!229 = !DICompositeType(tag: DW_TAG_structure_type, file: !62, line: 280, size: 640, align: 64, elements: !230)
!230 = !{!231, !236, !237, !242, !243, !244, !249, !250, !255, !256}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !229, file: !62, line: 281, baseType: !232, size: 64, align: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !62, line: 169, baseType: !233)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64, align: 64)
!234 = !DISubroutineType(types: !235)
!235 = !{!66, !60}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !229, file: !62, line: 282, baseType: !180, size: 64, align: 64, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !229, file: !62, line: 283, baseType: !238, size: 64, align: 64, offset: 128)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !62, line: 170, baseType: !239)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!60, !60, !66}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !229, file: !62, line: 284, baseType: !238, size: 64, align: 64, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !229, file: !62, line: 285, baseType: !145, size: 64, align: 64, offset: 256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !229, file: !62, line: 286, baseType: !245, size: 64, align: 64, offset: 320)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !62, line: 172, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DISubroutineType(types: !248)
!248 = !{!99, !60, !66, !60}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !229, file: !62, line: 287, baseType: !145, size: 64, align: 64, offset: 384)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !229, file: !62, line: 288, baseType: !251, size: 64, align: 64, offset: 448)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !62, line: 231, baseType: !252)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!253 = !DISubroutineType(types: !254)
!254 = !{!99, !60, !60}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !229, file: !62, line: 290, baseType: !180, size: 64, align: 64, offset: 512)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !229, file: !62, line: 291, baseType: !238, size: 64, align: 64, offset: 576)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !75, file: !62, line: 352, baseType: !258, size: 64, align: 64, offset: 896)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64, align: 64)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !62, line: 298, baseType: !260)
!260 = !DICompositeType(tag: DW_TAG_structure_type, file: !62, line: 294, size: 192, align: 64, elements: !261)
!261 = !{!262, !263, !264}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !260, file: !62, line: 295, baseType: !232, size: 64, align: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !260, file: !62, line: 296, baseType: !180, size: 64, align: 64, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !260, file: !62, line: 297, baseType: !265, size: 64, align: 64, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !62, line: 174, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64, align: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{!99, !60, !60, !60}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !75, file: !62, line: 356, baseType: !270, size: 64, align: 64, offset: 960)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !62, line: 321, baseType: !271)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64, align: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!274, !60}
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !67, line: 186, baseType: !66)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !75, file: !62, line: 357, baseType: !189, size: 64, align: 64, offset: 1024)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !75, file: !62, line: 358, baseType: !170, size: 64, align: 64, offset: 1088)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !75, file: !62, line: 359, baseType: !278, size: 64, align: 64, offset: 1152)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !62, line: 317, baseType: !181)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !75, file: !62, line: 360, baseType: !280, size: 64, align: 64, offset: 1216)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !62, line: 319, baseType: !266)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !75, file: !62, line: 363, baseType: !282, size: 64, align: 64, offset: 1280)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !62, line: 304, baseType: !284)
!284 = !DICompositeType(tag: DW_TAG_structure_type, file: !62, line: 301, size: 128, align: 64, elements: !285)
!285 = !{!286, !307}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !284, file: !62, line: 302, baseType: !287, size: 64, align: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !62, line: 193, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64, align: 64)
!289 = !DISubroutineType(types: !290)
!290 = !{!99, !60, !291, !99}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !62, line: 191, baseType: !293)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !62, line: 178, size: 640, align: 64, elements: !294)
!294 = !{!295, !296, !297, !298, !299, !300, !301, !302, !304, !305, !306}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !293, file: !62, line: 179, baseType: !145, size: 64, align: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !293, file: !62, line: 180, baseType: !60, size: 64, align: 64, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !293, file: !62, line: 181, baseType: !66, size: 64, align: 64, offset: 128)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !293, file: !62, line: 182, baseType: !66, size: 64, align: 64, offset: 192)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !293, file: !62, line: 184, baseType: !99, size: 32, align: 32, offset: 256)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !293, file: !62, line: 185, baseType: !99, size: 32, align: 32, offset: 288)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !293, file: !62, line: 186, baseType: !107, size: 64, align: 64, offset: 320)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !293, file: !62, line: 187, baseType: !303, size: 64, align: 64, offset: 384)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64, align: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !293, file: !62, line: 188, baseType: !303, size: 64, align: 64, offset: 448)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !293, file: !62, line: 189, baseType: !303, size: 64, align: 64, offset: 512)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !293, file: !62, line: 190, baseType: !145, size: 64, align: 64, offset: 576)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !284, file: !62, line: 303, baseType: !308, size: 64, align: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !62, line: 194, baseType: !309)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64, align: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !60, !291}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !75, file: !62, line: 366, baseType: !152, size: 64, align: 64, offset: 1344)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !75, file: !62, line: 368, baseType: !84, size: 64, align: 64, offset: 1408)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !75, file: !62, line: 372, baseType: !315, size: 64, align: 64, offset: 1472)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !62, line: 233, baseType: !316)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64, align: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!99, !60, !319, !145}
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !62, line: 232, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!99, !60, !145}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !75, file: !62, line: 375, baseType: !198, size: 64, align: 64, offset: 1536)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !75, file: !62, line: 379, baseType: !325, size: 64, align: 64, offset: 1600)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !62, line: 322, baseType: !326)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64)
!327 = !DISubroutineType(types: !328)
!328 = !{!60, !60, !60, !99}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !75, file: !62, line: 382, baseType: !66, size: 64, align: 64, offset: 1664)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !75, file: !62, line: 385, baseType: !331, size: 64, align: 64, offset: 1728)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !62, line: 323, baseType: !171)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !75, file: !62, line: 386, baseType: !333, size: 64, align: 64, offset: 1792)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !62, line: 324, baseType: !171)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !75, file: !62, line: 389, baseType: !335, size: 64, align: 64, offset: 1856)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64, align: 64)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !337, line: 40, size: 256, align: 64, elements: !338)
!337 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!338 = !{!339, !340, !342, !343}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !336, file: !337, line: 41, baseType: !84, size: 64, align: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !336, file: !337, line: 42, baseType: !341, size: 64, align: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !337, line: 18, baseType: !181)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !336, file: !337, line: 43, baseType: !99, size: 32, align: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !336, file: !337, line: 45, baseType: !84, size: 64, align: 64, offset: 192)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !75, file: !62, line: 390, baseType: !345, size: 64, align: 64, offset: 1920)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64, align: 64)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !347, line: 18, size: 320, align: 64, elements: !348)
!347 = !DIFile(filename: "./Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!348 = !{!349, !350, !351, !352, !353}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !346, file: !347, line: 19, baseType: !107, size: 64, align: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !346, file: !347, line: 20, baseType: !99, size: 32, align: 32, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !346, file: !347, line: 21, baseType: !66, size: 64, align: 64, offset: 128)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !346, file: !347, line: 22, baseType: !99, size: 32, align: 32, offset: 192)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !346, file: !347, line: 23, baseType: !107, size: 64, align: 64, offset: 256)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !75, file: !62, line: 391, baseType: !355, size: 64, align: 64, offset: 1984)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64, align: 64)
!356 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !357, line: 11, size: 320, align: 64, elements: !358)
!357 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!358 = !{!359, !360, !365, !370, !371}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !356, file: !357, line: 12, baseType: !107, size: 64, align: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !356, file: !357, line: 13, baseType: !361, size: 64, align: 64, offset: 64)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !357, line: 8, baseType: !362)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64, align: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{!60, !60, !145}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !356, file: !357, line: 14, baseType: !366, size: 64, align: 64, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !357, line: 9, baseType: !367)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64, align: 64)
!368 = !DISubroutineType(types: !369)
!369 = !{!99, !60, !60, !145}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !356, file: !357, line: 15, baseType: !107, size: 64, align: 64, offset: 192)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !356, file: !357, line: 16, baseType: !145, size: 64, align: 64, offset: 256)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !75, file: !62, line: 392, baseType: !74, size: 64, align: 64, offset: 2048)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !75, file: !62, line: 393, baseType: !60, size: 64, align: 64, offset: 2112)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !75, file: !62, line: 394, baseType: !375, size: 64, align: 64, offset: 2176)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !62, line: 325, baseType: !190)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !75, file: !62, line: 395, baseType: !377, size: 64, align: 64, offset: 2240)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !62, line: 326, baseType: !266)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !75, file: !62, line: 396, baseType: !66, size: 64, align: 64, offset: 2304)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !75, file: !62, line: 397, baseType: !380, size: 64, align: 64, offset: 2368)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !62, line: 327, baseType: !266)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !75, file: !62, line: 398, baseType: !382, size: 64, align: 64, offset: 2432)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !62, line: 329, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64, align: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!60, !74, !66}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !75, file: !62, line: 399, baseType: !387, size: 64, align: 64, offset: 2496)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !62, line: 328, baseType: !388)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64, align: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{!60, !74, !60, !60}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !75, file: !62, line: 400, baseType: !392, size: 64, align: 64, offset: 2560)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !62, line: 307, baseType: !393)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, align: 64)
!394 = !DISubroutineType(types: !395)
!395 = !{null, !145}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !75, file: !62, line: 401, baseType: !198, size: 64, align: 64, offset: 2624)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !75, file: !62, line: 402, baseType: !60, size: 64, align: 64, offset: 2688)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !75, file: !62, line: 403, baseType: !60, size: 64, align: 64, offset: 2752)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !75, file: !62, line: 404, baseType: !60, size: 64, align: 64, offset: 2816)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !75, file: !62, line: 405, baseType: !60, size: 64, align: 64, offset: 2880)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !75, file: !62, line: 406, baseType: !60, size: 64, align: 64, offset: 2944)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !75, file: !62, line: 407, baseType: !90, size: 64, align: 64, offset: 3008)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !75, file: !62, line: 410, baseType: !404, size: 32, align: 32, offset: 3072)
!404 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !75, file: !62, line: 412, baseType: !90, size: 64, align: 64, offset: 3136)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64, align: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "elementtreestate", file: !408, line: 86, baseType: !409)
!408 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_elementtree.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!409 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 82, size: 192, align: 64, elements: !410)
!410 = !{!411, !412, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "parseerror_obj", scope: !409, file: !408, line: 83, baseType: !60, size: 64, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "deepcopy_obj", scope: !409, file: !408, line: 84, baseType: !60, size: 64, align: 64, offset: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "elementpath_obj", scope: !409, file: !408, line: 85, baseType: !60, size: 64, align: 64, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64, align: 64)
!417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !418)
!418 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementObject", file: !408, line: 220, baseType: !421)
!421 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 198, size: 448, align: 64, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !441}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !421, file: !408, line: 199, baseType: !61, size: 128, align: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !421, file: !408, line: 202, baseType: !60, size: 64, align: 64, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !421, file: !408, line: 210, baseType: !60, size: 64, align: 64, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !421, file: !408, line: 214, baseType: !60, size: 64, align: 64, offset: 256)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !421, file: !408, line: 216, baseType: !428, size: 64, align: 64, offset: 320)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementObjectExtra", file: !408, line: 196, baseType: !430)
!430 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 182, size: 448, align: 64, elements: !431)
!431 = !{!432, !433, !434, !435, !437}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !430, file: !408, line: 185, baseType: !60, size: 64, align: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !430, file: !408, line: 188, baseType: !99, size: 32, align: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !430, file: !408, line: 189, baseType: !99, size: 32, align: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !430, file: !408, line: 192, baseType: !436, size: 64, align: 64, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64, align: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "_children", scope: !430, file: !408, line: 194, baseType: !438, size: 256, align: 64, offset: 192)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, align: 64, elements: !439)
!439 = !{!440}
!440 = !DISubrange(count: 4)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !421, file: !408, line: 218, baseType: !60, size: 64, align: 64, offset: 384)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_uintptr_t", file: !67, line: 153, baseType: !443)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !444, line: 122, baseType: !152)
!444 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64, align: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !448, line: 41, baseType: !449)
!448 = !DIFile(filename: "./Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!449 = !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 31, size: 320, align: 64, elements: !450)
!450 = !{!451, !452, !453}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !449, file: !448, line: 32, baseType: !78, size: 192, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !449, file: !448, line: 33, baseType: !274, size: 64, align: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !449, file: !448, line: 34, baseType: !136, size: 8, align: 8, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !456, line: 40, baseType: !457)
!456 = !DIFile(filename: "./Include/listobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!457 = !DICompositeType(tag: DW_TAG_structure_type, file: !456, line: 23, size: 320, align: 64, elements: !458)
!458 = !{!459, !460, !461}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !457, file: !456, line: 24, baseType: !78, size: 192, align: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !457, file: !456, line: 26, baseType: !436, size: 64, align: 64, offset: 192)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !457, file: !456, line: 39, baseType: !66, size: 64, align: 64, offset: 256)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "TreeBuilderObject", file: !408, line: 2228, baseType: !464)
!464 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 2207, size: 896, align: 64, elements: !465)
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !464, file: !408, line: 2208, baseType: !61, size: 128, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !464, file: !408, line: 2210, baseType: !60, size: 64, align: 64, offset: 128)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "this", scope: !464, file: !408, line: 2212, baseType: !60, size: 64, align: 64, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !464, file: !408, line: 2213, baseType: !60, size: 64, align: 64, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !464, file: !408, line: 2215, baseType: !60, size: 64, align: 64, offset: 320)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !464, file: !408, line: 2217, baseType: !60, size: 64, align: 64, offset: 384)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !464, file: !408, line: 2218, baseType: !66, size: 64, align: 64, offset: 448)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "element_factory", scope: !464, file: !408, line: 2220, baseType: !60, size: 64, align: 64, offset: 512)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !464, file: !408, line: 2223, baseType: !60, size: 64, align: 64, offset: 576)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "start_event_obj", scope: !464, file: !408, line: 2224, baseType: !60, size: 64, align: 64, offset: 640)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "end_event_obj", scope: !464, file: !408, line: 2225, baseType: !60, size: 64, align: 64, offset: 704)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start_ns_event_obj", scope: !464, file: !408, line: 2226, baseType: !60, size: 64, align: 64, offset: 768)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "end_ns_event_obj", scope: !464, file: !408, line: 2227, baseType: !60, size: 64, align: 64, offset: 832)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64, align: 64)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !481, line: 33, baseType: !482)
!481 = !DIFile(filename: "./Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!482 = !DICompositeType(tag: DW_TAG_structure_type, file: !481, line: 25, size: 256, align: 64, elements: !483)
!483 = !{!484, !485}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !482, file: !481, line: 26, baseType: !78, size: 192, align: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !482, file: !481, line: 27, baseType: !486, size: 64, align: 64, offset: 192)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 64, align: 64, elements: !137)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64, align: 64)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !53, line: 351, baseType: !489)
!489 = !DICompositeType(tag: DW_TAG_structure_type, file: !53, line: 217, size: 384, align: 64, elements: !490)
!490 = !{!491, !492, !493, !494, !502}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !489, file: !53, line: 291, baseType: !61, size: 128, align: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !489, file: !53, line: 292, baseType: !66, size: 64, align: 64, offset: 128)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !489, file: !53, line: 293, baseType: !274, size: 64, align: 64, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !489, file: !53, line: 349, baseType: !495, size: 32, align: 32, offset: 256)
!495 = !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !53, line: 294, size: 32, align: 32, elements: !496)
!496 = !{!497, !498, !499, !500, !501}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !495, file: !53, line: 303, baseType: !404, size: 2, align: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !495, file: !53, line: 331, baseType: !404, size: 3, align: 32, offset: 2)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !495, file: !53, line: 336, baseType: !404, size: 1, align: 32, offset: 5)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !495, file: !53, line: 340, baseType: !404, size: 1, align: 32, offset: 6)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !495, file: !53, line: 345, baseType: !404, size: 1, align: 32, offset: 7)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !489, file: !53, line: 350, baseType: !503, size: 64, align: 64, offset: 320)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64, align: 64)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !151, line: 90, baseType: !99)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64, align: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !53, line: 363, baseType: !507)
!507 = !DICompositeType(tag: DW_TAG_structure_type, file: !53, line: 356, size: 576, align: 64, elements: !508)
!508 = !{!509, !510, !511, !512}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !507, file: !53, line: 357, baseType: !488, size: 384, align: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !507, file: !53, line: 358, baseType: !66, size: 64, align: 64, offset: 384)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !507, file: !53, line: 360, baseType: !107, size: 64, align: 64, offset: 448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !507, file: !53, line: 361, baseType: !66, size: 64, align: 64, offset: 512)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64, align: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !53, line: 376, baseType: !515)
!515 = !DICompositeType(tag: DW_TAG_structure_type, file: !53, line: 368, size: 640, align: 64, elements: !516)
!516 = !{!517, !518}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !515, file: !53, line: 369, baseType: !506, size: 576, align: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !515, file: !53, line: 375, baseType: !519, size: 64, align: 64, offset: 576)
!519 = !DICompositeType(tag: DW_TAG_union_type, scope: !515, file: !53, line: 370, size: 64, align: 64, elements: !520)
!520 = !{!521, !522, !525, !528}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !519, file: !53, line: 371, baseType: !145, size: 64, align: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !519, file: !53, line: 372, baseType: !523, size: 64, align: 64)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64, align: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !53, line: 134, baseType: !418)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !519, file: !53, line: 373, baseType: !526, size: 64, align: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64, align: 64)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !53, line: 129, baseType: !132)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !519, file: !53, line: 374, baseType: !529, size: 64, align: 64)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64, align: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !53, line: 121, baseType: !404)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64, align: 64)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64, align: 64)
!534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64, align: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementIterObject", file: !408, line: 1949, baseType: !539)
!539 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 1942, size: 384, align: 64, elements: !540)
!540 = !{!541, !542, !551, !552, !553, !554}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !539, file: !408, line: 1943, baseType: !61, size: 128, align: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "parent_stack", scope: !539, file: !408, line: 1944, baseType: !543, size: 64, align: 64, offset: 128)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64, align: 64)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParentLocator", file: !408, line: 1940, baseType: !545)
!545 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParentLocator_t", file: !408, line: 1936, size: 192, align: 64, elements: !546)
!546 = !{!547, !548, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !545, file: !408, line: 1937, baseType: !419, size: 64, align: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "child_index", scope: !545, file: !408, line: 1938, baseType: !66, size: 64, align: 64, offset: 64)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !545, file: !408, line: 1939, baseType: !550, size: 64, align: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64, align: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "root_element", scope: !539, file: !408, line: 1945, baseType: !419, size: 64, align: 64, offset: 192)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "sought_tag", scope: !539, file: !408, line: 1946, baseType: !60, size: 64, align: 64, offset: 256)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "root_done", scope: !539, file: !408, line: 1947, baseType: !99, size: 32, align: 32, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "gettext", scope: !539, file: !408, line: 1948, baseType: !99, size: 32, align: 32, offset: 352)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartNamespaceDeclHandler", file: !4, line: 378, baseType: !556)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64, align: 64)
!557 = !DISubroutineType(types: !558)
!558 = !{null, !145, !559, !559}
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64, align: 64)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Char", file: !562, line: 98, baseType: !86)
!562 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/expat/expat_external.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndNamespaceDeclHandler", file: !4, line: 383, baseType: !564)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64, align: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{null, !145, !559}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64, align: 64)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMLParserObject", file: !408, line: 2742, baseType: !569)
!569 = !DICompositeType(tag: DW_TAG_structure_type, file: !408, line: 2722, size: 832, align: 64, elements: !570)
!570 = !{!571, !572, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !569, file: !408, line: 2723, baseType: !61, size: 128, align: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !569, file: !408, line: 2725, baseType: !573, size: 64, align: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Parser", file: !4, line: 25, baseType: !574)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64, align: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "XML_ParserStruct", file: !4, line: 24, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !569, file: !408, line: 2727, baseType: !60, size: 64, align: 64, offset: 192)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "entity", scope: !569, file: !408, line: 2728, baseType: !60, size: 64, align: 64, offset: 256)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "names", scope: !569, file: !408, line: 2730, baseType: !60, size: 64, align: 64, offset: 320)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "handle_start", scope: !569, file: !408, line: 2732, baseType: !60, size: 64, align: 64, offset: 384)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "handle_data", scope: !569, file: !408, line: 2733, baseType: !60, size: 64, align: 64, offset: 448)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "handle_end", scope: !569, file: !408, line: 2734, baseType: !60, size: 64, align: 64, offset: 512)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "handle_comment", scope: !569, file: !408, line: 2736, baseType: !60, size: 64, align: 64, offset: 576)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "handle_pi", scope: !569, file: !408, line: 2737, baseType: !60, size: 64, align: 64, offset: 640)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "handle_doctype", scope: !569, file: !408, line: 2738, baseType: !60, size: 64, align: 64, offset: 704)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "handle_close", scope: !569, file: !408, line: 2740, baseType: !60, size: 64, align: 64, offset: 768)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartElementHandler", file: !4, line: 252, baseType: !587)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64, align: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{null, !145, !559, !590}
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64, align: 64)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_EndElementHandler", file: !4, line: 256, baseType: !564)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_DefaultHandler", file: !4, line: 291, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64, align: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !145, !559, !99}
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_CharacterDataHandler", file: !4, line: 261, baseType: !593)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_CommentHandler", file: !4, line: 272, baseType: !564)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_ProcessingInstructionHandler", file: !4, line: 266, baseType: !556)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_StartDoctypeDeclHandler", file: !4, line: 298, baseType: !600)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64, align: 64)
!601 = !DISubroutineType(types: !602)
!602 = !{null, !145, !559, !559, !559, !99}
!603 = !{!604, !625, !640, !653, !664, !667, !673, !677, !685, !703, !725, !728, !751, !772, !803, !810, !816, !826, !830, !835, !866, !937, !944, !956, !962, !986, !990, !1015, !1019, !1030, !1035, !1051, !1055, !1061, !1076, !1096, !1101, !1104, !1109, !1114, !1124, !1147, !1209, !1248, !1256, !1304, !1336, !1347, !1357, !1368, !1376, !1386, !1393, !1406, !1424, !1443, !1463, !1468, !1490, !1497, !1505, !1511, !1529, !1533, !1541, !1551, !1555, !1559, !1569, !1585, !1621, !1630, !1636, !1658, !1662, !1675, !1701, !1735, !1741, !1746, !1755, !1798, !1863, !1874, !1883, !1924, !1937, !1983, !2082, !2099, !2119, !2125, !2129, !2176, !2223, !2257, !2275, !2300, !2314, !2331, !2363, !2421}
!604 = !DISubprogram(name: "PyInit__elementtree", scope: !408, file: !408, line: 3705, type: !605, isLocal: false, isDefinition: true, scopeLine: 3706, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit__elementtree, variables: !607)
!605 = !DISubroutineType(types: !606)
!606 = !{!60}
!607 = !{!608, !609, !610, !611, !613, !616, !621, !622, !624}
!608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !604, file: !408, line: 3707, type: !60)
!609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !604, file: !408, line: 3707, type: !60)
!610 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !604, file: !408, line: 3708, type: !406)
!611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !612, file: !408, line: 3734, type: !60)
!612 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3734, column: 8)
!613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !614, file: !408, line: 3734, type: !60)
!614 = distinct !DILexicalBlock(scope: !615, file: !408, line: 3734, column: 96)
!615 = distinct !DILexicalBlock(scope: !612, file: !408, line: 3734, column: 62)
!616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !617, file: !408, line: 3743, type: !150)
!617 = distinct !DILexicalBlock(scope: !618, file: !408, line: 3743, column: 28)
!618 = distinct !DILexicalBlock(scope: !619, file: !408, line: 3743, column: 13)
!619 = distinct !DILexicalBlock(scope: !620, file: !408, line: 3741, column: 21)
!620 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3741, column: 9)
!621 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !617, file: !408, line: 3743, type: !150)
!622 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !623, file: !408, line: 3743, type: !416)
!623 = distinct !DILexicalBlock(scope: !617, file: !408, line: 3743, column: 2063)
!624 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !623, file: !408, line: 3743, type: !99)
!625 = !DISubprogram(name: "subelement", scope: !408, file: !408, line: 561, type: !191, isLocal: true, isDefinition: true, scopeLine: 562, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @subelement, variables: !626)
!626 = !{!627, !628, !629, !630, !631, !632, !633, !634, !636}
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !625, file: !408, line: 561, type: !60)
!628 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !625, file: !408, line: 561, type: !60)
!629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !625, file: !408, line: 561, type: !60)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !625, file: !408, line: 563, type: !60)
!631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parent", scope: !625, file: !408, line: 565, type: !419)
!632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !625, file: !408, line: 566, type: !60)
!633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !625, file: !408, line: 567, type: !60)
!634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !635, file: !408, line: 596, type: !60)
!635 = distinct !DILexicalBlock(scope: !625, file: !408, line: 596, column: 8)
!636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !637, file: !408, line: 601, type: !60)
!637 = distinct !DILexicalBlock(scope: !638, file: !408, line: 601, column: 12)
!638 = distinct !DILexicalBlock(scope: !639, file: !408, line: 600, column: 51)
!639 = distinct !DILexicalBlock(scope: !625, file: !408, line: 600, column: 9)
!640 = !DISubprogram(name: "get_attrib_from_keywords", scope: !408, file: !408, line: 341, type: !172, isLocal: true, isDefinition: true, scopeLine: 342, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @get_attrib_from_keywords, variables: !641)
!641 = !{!642, !643, !644, !645, !651}
!642 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 1, scope: !640, file: !408, line: 341, type: !60)
!643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib_str", scope: !640, file: !408, line: 343, type: !60)
!644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !640, file: !408, line: 344, type: !60)
!645 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !646, file: !408, line: 351, type: !60)
!646 = distinct !DILexicalBlock(scope: !647, file: !408, line: 351, column: 16)
!647 = distinct !DILexicalBlock(scope: !648, file: !408, line: 350, column: 85)
!648 = distinct !DILexicalBlock(scope: !649, file: !408, line: 350, column: 13)
!649 = distinct !DILexicalBlock(scope: !650, file: !408, line: 346, column: 17)
!650 = distinct !DILexicalBlock(scope: !640, file: !408, line: 346, column: 9)
!651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !652, file: !408, line: 362, type: !60)
!652 = distinct !DILexicalBlock(scope: !640, file: !408, line: 362, column: 8)
!653 = !DISubprogram(name: "create_new_element", scope: !408, file: !408, line: 279, type: !182, isLocal: true, isDefinition: true, scopeLine: 280, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @create_new_element, variables: !654)
!654 = !{!655, !656, !657, !658}
!655 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag", arg: 1, scope: !653, file: !408, line: 279, type: !60)
!656 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attrib", arg: 2, scope: !653, file: !408, line: 279, type: !60)
!657 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !653, file: !408, line: 281, type: !419)
!658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !659, file: !408, line: 304, type: !60)
!659 = distinct !DILexicalBlock(scope: !660, file: !408, line: 304, column: 16)
!660 = distinct !DILexicalBlock(scope: !661, file: !408, line: 303, column: 45)
!661 = distinct !DILexicalBlock(scope: !662, file: !408, line: 303, column: 13)
!662 = distinct !DILexicalBlock(scope: !663, file: !408, line: 302, column: 64)
!663 = distinct !DILexicalBlock(scope: !653, file: !408, line: 302, column: 9)
!664 = !DISubprogram(name: "is_empty_dict", scope: !408, file: !408, line: 173, type: !200, isLocal: true, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @is_empty_dict, variables: !665)
!665 = !{!666}
!666 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !664, file: !408, line: 173, type: !60)
!667 = !DISubprogram(name: "create_extra", scope: !408, file: !408, line: 229, type: !668, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ElementObject*, %struct._object*)* @create_extra, variables: !670)
!668 = !DISubroutineType(types: !669)
!669 = !{!99, !419, !60}
!670 = !{!671, !672}
!671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !667, file: !408, line: 229, type: !419)
!672 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attrib", arg: 2, scope: !667, file: !408, line: 229, type: !60)
!673 = !DISubprogram(name: "element_add_subelement", scope: !408, file: !408, line: 485, type: !668, isLocal: true, isDefinition: true, scopeLine: 486, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ElementObject*, %struct._object*)* @element_add_subelement, variables: !674)
!674 = !{!675, !676}
!675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !673, file: !408, line: 485, type: !419)
!676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "element", arg: 2, scope: !673, file: !408, line: 485, type: !60)
!677 = !DISubprogram(name: "element_resize", scope: !408, file: !408, line: 432, type: !678, isLocal: true, isDefinition: true, scopeLine: 433, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ElementObject*, i32)* @element_resize, variables: !680)
!678 = !DISubroutineType(types: !679)
!679 = !{!99, !419, !99}
!680 = !{!681, !682, !683, !684}
!681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !677, file: !408, line: 432, type: !419)
!682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "extra", arg: 2, scope: !677, file: !408, line: 432, type: !99)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !677, file: !408, line: 434, type: !99)
!684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "children", scope: !677, file: !408, line: 435, type: !436)
!685 = !DISubprogram(name: "elementtree_traverse", scope: !408, file: !408, line: 112, type: !317, isLocal: true, isDefinition: true, scopeLine: 113, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* @elementtree_traverse, variables: !686)
!686 = !{!687, !688, !689, !690, !691, !695, !699}
!687 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 1, scope: !685, file: !408, line: 112, type: !60)
!688 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !685, file: !408, line: 112, type: !319)
!689 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !685, file: !408, line: 112, type: !145)
!690 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !685, file: !408, line: 114, type: !406)
!691 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !692, file: !408, line: 115, type: !99)
!692 = distinct !DILexicalBlock(scope: !693, file: !408, line: 115, column: 34)
!693 = distinct !DILexicalBlock(scope: !694, file: !408, line: 115, column: 14)
!694 = distinct !DILexicalBlock(scope: !685, file: !408, line: 115, column: 8)
!695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !696, file: !408, line: 116, type: !99)
!696 = distinct !DILexicalBlock(scope: !697, file: !408, line: 116, column: 32)
!697 = distinct !DILexicalBlock(scope: !698, file: !408, line: 116, column: 14)
!698 = distinct !DILexicalBlock(scope: !685, file: !408, line: 116, column: 8)
!699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !700, file: !408, line: 117, type: !99)
!700 = distinct !DILexicalBlock(scope: !701, file: !408, line: 117, column: 35)
!701 = distinct !DILexicalBlock(scope: !702, file: !408, line: 117, column: 14)
!702 = distinct !DILexicalBlock(scope: !685, file: !408, line: 117, column: 8)
!703 = !DISubprogram(name: "elementtree_clear", scope: !408, file: !408, line: 102, type: !200, isLocal: true, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @elementtree_clear, variables: !704)
!704 = !{!705, !706, !707, !709, !713, !715, !719, !721}
!705 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 1, scope: !703, file: !408, line: 102, type: !60)
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !703, file: !408, line: 104, type: !406)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !708, file: !408, line: 105, type: !60)
!708 = distinct !DILexicalBlock(scope: !703, file: !408, line: 105, column: 8)
!709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !710, file: !408, line: 105, type: !60)
!710 = distinct !DILexicalBlock(scope: !711, file: !408, line: 105, column: 131)
!711 = distinct !DILexicalBlock(scope: !712, file: !408, line: 105, column: 91)
!712 = distinct !DILexicalBlock(scope: !708, file: !408, line: 105, column: 68)
!713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !714, file: !408, line: 106, type: !60)
!714 = distinct !DILexicalBlock(scope: !703, file: !408, line: 106, column: 8)
!715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !716, file: !408, line: 106, type: !60)
!716 = distinct !DILexicalBlock(scope: !717, file: !408, line: 106, column: 127)
!717 = distinct !DILexicalBlock(scope: !718, file: !408, line: 106, column: 89)
!718 = distinct !DILexicalBlock(scope: !714, file: !408, line: 106, column: 66)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !720, file: !408, line: 107, type: !60)
!720 = distinct !DILexicalBlock(scope: !703, file: !408, line: 107, column: 8)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !722, file: !408, line: 107, type: !60)
!722 = distinct !DILexicalBlock(scope: !723, file: !408, line: 107, column: 133)
!723 = distinct !DILexicalBlock(scope: !724, file: !408, line: 107, column: 92)
!724 = distinct !DILexicalBlock(scope: !720, file: !408, line: 107, column: 69)
!725 = !DISubprogram(name: "elementtree_free", scope: !408, file: !408, line: 122, type: !394, isLocal: true, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*)* @elementtree_free, variables: !726)
!726 = !{!727}
!727 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 1, scope: !725, file: !408, line: 122, type: !145)
!728 = !DISubprogram(name: "elementiter_dealloc", scope: !408, file: !408, line: 1953, type: !729, isLocal: true, isDefinition: true, scopeLine: 1954, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.ElementIterObject*)* @elementiter_dealloc, variables: !731)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !537}
!731 = !{!732, !733, !734, !736, !738, !741, !743, !746, !748}
!732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "it", arg: 1, scope: !728, file: !408, line: 1953, type: !537)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !728, file: !408, line: 1955, type: !543)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !735, file: !408, line: 1957, type: !543)
!735 = distinct !DILexicalBlock(scope: !728, file: !408, line: 1956, column: 15)
!736 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !737, file: !408, line: 1958, type: !60)
!737 = distinct !DILexicalBlock(scope: !735, file: !408, line: 1958, column: 12)
!738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !739, file: !408, line: 1958, type: !60)
!739 = distinct !DILexicalBlock(scope: !740, file: !408, line: 1958, column: 105)
!740 = distinct !DILexicalBlock(scope: !737, file: !408, line: 1958, column: 71)
!741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !742, file: !408, line: 1963, type: !60)
!742 = distinct !DILexicalBlock(scope: !728, file: !408, line: 1963, column: 8)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !744, file: !408, line: 1963, type: !60)
!744 = distinct !DILexicalBlock(scope: !745, file: !408, line: 1963, column: 106)
!745 = distinct !DILexicalBlock(scope: !742, file: !408, line: 1963, column: 72)
!746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !747, file: !408, line: 1964, type: !60)
!747 = distinct !DILexicalBlock(scope: !728, file: !408, line: 1964, column: 8)
!748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !749, file: !408, line: 1964, type: !60)
!749 = distinct !DILexicalBlock(scope: !750, file: !408, line: 1964, column: 108)
!750 = distinct !DILexicalBlock(scope: !747, file: !408, line: 1964, column: 74)
!751 = !DISubprogram(name: "elementiter_traverse", scope: !408, file: !408, line: 1971, type: !752, isLocal: true, isDefinition: true, scopeLine: 1972, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ElementIterObject*, i32 (%struct._object*, i8*)*, i8*)* @elementiter_traverse, variables: !754)
!752 = !DISubroutineType(types: !753)
!753 = !{!99, !537, !319, !145}
!754 = !{!755, !756, !757, !758, !759, !764, !768}
!755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "it", arg: 1, scope: !751, file: !408, line: 1971, type: !537)
!756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !751, file: !408, line: 1971, type: !319)
!757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !751, file: !408, line: 1971, type: !145)
!758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !751, file: !408, line: 1973, type: !543)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !760, file: !408, line: 1975, type: !99)
!760 = distinct !DILexicalBlock(scope: !761, file: !408, line: 1975, column: 29)
!761 = distinct !DILexicalBlock(scope: !762, file: !408, line: 1975, column: 18)
!762 = distinct !DILexicalBlock(scope: !763, file: !408, line: 1975, column: 12)
!763 = distinct !DILexicalBlock(scope: !751, file: !408, line: 1974, column: 15)
!764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !765, file: !408, line: 1979, type: !99)
!765 = distinct !DILexicalBlock(scope: !766, file: !408, line: 1979, column: 32)
!766 = distinct !DILexicalBlock(scope: !767, file: !408, line: 1979, column: 14)
!767 = distinct !DILexicalBlock(scope: !751, file: !408, line: 1979, column: 8)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !769, file: !408, line: 1980, type: !99)
!769 = distinct !DILexicalBlock(scope: !770, file: !408, line: 1980, column: 30)
!770 = distinct !DILexicalBlock(scope: !771, file: !408, line: 1980, column: 14)
!771 = distinct !DILexicalBlock(scope: !751, file: !408, line: 1980, column: 8)
!772 = !DISubprogram(name: "elementiter_next", scope: !408, file: !408, line: 2000, type: !773, isLocal: true, isDefinition: true, scopeLine: 2001, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementIterObject*)* @elementiter_next, variables: !775)
!773 = !DISubroutineType(types: !774)
!774 = !{!60, !537}
!775 = !{!776, !777, !778, !779, !789, !792, !795, !797, !798, !800}
!776 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "it", arg: 1, scope: !772, file: !408, line: 2000, type: !537)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur_parent", scope: !772, file: !408, line: 2013, type: !419)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "child_index", scope: !772, file: !408, line: 2014, type: !66)
!779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text", scope: !780, file: !408, line: 2040, type: !60)
!780 = distinct !DILexicalBlock(scope: !781, file: !408, line: 2039, column: 38)
!781 = distinct !DILexicalBlock(scope: !782, file: !408, line: 2039, column: 25)
!782 = distinct !DILexicalBlock(scope: !783, file: !408, line: 2038, column: 71)
!783 = distinct !DILexicalBlock(scope: !784, file: !408, line: 2036, column: 21)
!784 = distinct !DILexicalBlock(scope: !785, file: !408, line: 2027, column: 20)
!785 = distinct !DILexicalBlock(scope: !786, file: !408, line: 2024, column: 17)
!786 = distinct !DILexicalBlock(scope: !787, file: !408, line: 2023, column: 40)
!787 = distinct !DILexicalBlock(scope: !788, file: !408, line: 2023, column: 13)
!788 = distinct !DILexicalBlock(scope: !772, file: !408, line: 2016, column: 15)
!789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "child", scope: !790, file: !408, line: 2061, type: !419)
!790 = distinct !DILexicalBlock(scope: !791, file: !408, line: 2060, column: 75)
!791 = distinct !DILexicalBlock(scope: !788, file: !408, line: 2060, column: 13)
!792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text", scope: !793, file: !408, line: 2072, type: !60)
!793 = distinct !DILexicalBlock(scope: !794, file: !408, line: 2071, column: 30)
!794 = distinct !DILexicalBlock(scope: !790, file: !408, line: 2071, column: 17)
!795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tail", scope: !796, file: !408, line: 2089, type: !60)
!796 = distinct !DILexicalBlock(scope: !791, file: !408, line: 2088, column: 14)
!797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !796, file: !408, line: 2090, type: !543)
!798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !799, file: !408, line: 2098, type: !60)
!799 = distinct !DILexicalBlock(scope: !796, file: !408, line: 2098, column: 16)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !801, file: !408, line: 2098, type: !60)
!801 = distinct !DILexicalBlock(scope: !802, file: !408, line: 2098, column: 124)
!802 = distinct !DILexicalBlock(scope: !799, file: !408, line: 2098, column: 90)
!803 = !DISubprogram(name: "parent_stack_push_new", scope: !408, file: !408, line: 1987, type: !804, isLocal: true, isDefinition: true, scopeLine: 1988, flags: DIFlagPrototyped, isOptimized: true, function: %struct.ParentLocator_t* (%struct.ParentLocator_t*, %struct.ElementObject*)* @parent_stack_push_new, variables: !806)
!804 = !DISubroutineType(types: !805)
!805 = !{!543, !543, !419}
!806 = !{!807, !808, !809}
!807 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stack", arg: 1, scope: !803, file: !408, line: 1987, type: !543)
!808 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "parent", arg: 2, scope: !803, file: !408, line: 1987, type: !419)
!809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_node", scope: !803, file: !408, line: 1989, type: !543)
!810 = !DISubprogram(name: "element_get_text", scope: !408, file: !408, line: 521, type: !811, isLocal: true, isDefinition: true, scopeLine: 522, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*)* @element_get_text, variables: !813)
!811 = !DISubroutineType(types: !812)
!812 = !{!60, !419}
!813 = !{!814, !815}
!814 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !810, file: !408, line: 521, type: !419)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !810, file: !408, line: 525, type: !60)
!816 = !DISubprogram(name: "list_join", scope: !408, file: !408, line: 154, type: !172, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @list_join, variables: !817)
!817 = !{!818, !819, !820, !821, !823}
!818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "list", arg: 1, scope: !816, file: !408, line: 154, type: !60)
!819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "joiner", scope: !816, file: !408, line: 157, type: !60)
!820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !816, file: !408, line: 158, type: !60)
!821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !822, file: !408, line: 164, type: !60)
!822 = distinct !DILexicalBlock(scope: !816, file: !408, line: 164, column: 8)
!823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !824, file: !408, line: 166, type: !60)
!824 = distinct !DILexicalBlock(scope: !825, file: !408, line: 166, column: 12)
!825 = distinct !DILexicalBlock(scope: !816, file: !408, line: 165, column: 9)
!826 = !DISubprogram(name: "element_get_tail", scope: !408, file: !408, line: 541, type: !811, isLocal: true, isDefinition: true, scopeLine: 542, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*)* @element_get_tail, variables: !827)
!827 = !{!828, !829}
!828 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !826, file: !408, line: 541, type: !419)
!829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !826, file: !408, line: 545, type: !60)
!830 = !DISubprogram(name: "treebuilder_dealloc", scope: !408, file: !408, line: 2318, type: !831, isLocal: true, isDefinition: true, scopeLine: 2319, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.TreeBuilderObject*)* @treebuilder_dealloc, variables: !833)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !462}
!833 = !{!834}
!834 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !830, file: !408, line: 2318, type: !462)
!835 = !DISubprogram(name: "treebuilder_gc_traverse", scope: !408, file: !408, line: 2289, type: !836, isLocal: true, isDefinition: true, scopeLine: 2290, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.TreeBuilderObject*, i32 (%struct._object*, i8*)*, i8*)* @treebuilder_gc_traverse, variables: !838)
!836 = !DISubroutineType(types: !837)
!837 = !{!99, !462, !319, !145}
!838 = !{!839, !840, !841, !842, !846, !850, !854, !858, !862}
!839 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !835, file: !408, line: 2289, type: !462)
!840 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !835, file: !408, line: 2289, type: !319)
!841 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !835, file: !408, line: 2289, type: !145)
!842 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !843, file: !408, line: 2291, type: !99)
!843 = distinct !DILexicalBlock(scope: !844, file: !408, line: 2291, column: 26)
!844 = distinct !DILexicalBlock(scope: !845, file: !408, line: 2291, column: 14)
!845 = distinct !DILexicalBlock(scope: !835, file: !408, line: 2291, column: 8)
!846 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !847, file: !408, line: 2292, type: !99)
!847 = distinct !DILexicalBlock(scope: !848, file: !408, line: 2292, column: 26)
!848 = distinct !DILexicalBlock(scope: !849, file: !408, line: 2292, column: 14)
!849 = distinct !DILexicalBlock(scope: !835, file: !408, line: 2292, column: 8)
!850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !851, file: !408, line: 2293, type: !99)
!851 = distinct !DILexicalBlock(scope: !852, file: !408, line: 2293, column: 26)
!852 = distinct !DILexicalBlock(scope: !853, file: !408, line: 2293, column: 14)
!853 = distinct !DILexicalBlock(scope: !835, file: !408, line: 2293, column: 8)
!854 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !855, file: !408, line: 2294, type: !99)
!855 = distinct !DILexicalBlock(scope: !856, file: !408, line: 2294, column: 26)
!856 = distinct !DILexicalBlock(scope: !857, file: !408, line: 2294, column: 14)
!857 = distinct !DILexicalBlock(scope: !835, file: !408, line: 2294, column: 8)
!858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !859, file: !408, line: 2295, type: !99)
!859 = distinct !DILexicalBlock(scope: !860, file: !408, line: 2295, column: 27)
!860 = distinct !DILexicalBlock(scope: !861, file: !408, line: 2295, column: 14)
!861 = distinct !DILexicalBlock(scope: !835, file: !408, line: 2295, column: 8)
!862 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !863, file: !408, line: 2296, type: !99)
!863 = distinct !DILexicalBlock(scope: !864, file: !408, line: 2296, column: 37)
!864 = distinct !DILexicalBlock(scope: !865, file: !408, line: 2296, column: 14)
!865 = distinct !DILexicalBlock(scope: !835, file: !408, line: 2296, column: 8)
!866 = !DISubprogram(name: "treebuilder_gc_clear", scope: !408, file: !408, line: 2301, type: !867, isLocal: true, isDefinition: true, scopeLine: 2302, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.TreeBuilderObject*)* @treebuilder_gc_clear, variables: !869)
!867 = !DISubroutineType(types: !868)
!868 = !{!99, !462}
!869 = !{!870, !871, !873, !877, !879, !883, !885, !889, !891, !895, !897, !901, !903, !907, !909, !913, !915, !919, !921, !925, !927, !931, !933}
!870 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !866, file: !408, line: 2301, type: !462)
!871 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !872, file: !408, line: 2303, type: !60)
!872 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2303, column: 8)
!873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !874, file: !408, line: 2303, type: !60)
!874 = distinct !DILexicalBlock(scope: !875, file: !408, line: 2303, column: 139)
!875 = distinct !DILexicalBlock(scope: !876, file: !408, line: 2303, column: 95)
!876 = distinct !DILexicalBlock(scope: !872, file: !408, line: 2303, column: 72)
!877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !878, file: !408, line: 2304, type: !60)
!878 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2304, column: 8)
!879 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !880, file: !408, line: 2304, type: !60)
!880 = distinct !DILexicalBlock(scope: !881, file: !408, line: 2304, column: 143)
!881 = distinct !DILexicalBlock(scope: !882, file: !408, line: 2304, column: 97)
!882 = distinct !DILexicalBlock(scope: !878, file: !408, line: 2304, column: 74)
!883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !884, file: !408, line: 2305, type: !60)
!884 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2305, column: 8)
!885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !886, file: !408, line: 2305, type: !60)
!886 = distinct !DILexicalBlock(scope: !887, file: !408, line: 2305, column: 133)
!887 = distinct !DILexicalBlock(scope: !888, file: !408, line: 2305, column: 92)
!888 = distinct !DILexicalBlock(scope: !884, file: !408, line: 2305, column: 69)
!889 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !890, file: !408, line: 2306, type: !60)
!890 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2306, column: 8)
!891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !892, file: !408, line: 2306, type: !60)
!892 = distinct !DILexicalBlock(scope: !893, file: !408, line: 2306, column: 137)
!893 = distinct !DILexicalBlock(scope: !894, file: !408, line: 2306, column: 94)
!894 = distinct !DILexicalBlock(scope: !890, file: !408, line: 2306, column: 71)
!895 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !896, file: !408, line: 2307, type: !60)
!896 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2307, column: 8)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !898, file: !408, line: 2307, type: !60)
!898 = distinct !DILexicalBlock(scope: !899, file: !408, line: 2307, column: 119)
!899 = distinct !DILexicalBlock(scope: !900, file: !408, line: 2307, column: 85)
!900 = distinct !DILexicalBlock(scope: !896, file: !408, line: 2307, column: 62)
!901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !902, file: !408, line: 2308, type: !60)
!902 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2308, column: 8)
!903 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !904, file: !408, line: 2308, type: !60)
!904 = distinct !DILexicalBlock(scope: !905, file: !408, line: 2308, column: 117)
!905 = distinct !DILexicalBlock(scope: !906, file: !408, line: 2308, column: 84)
!906 = distinct !DILexicalBlock(scope: !902, file: !408, line: 2308, column: 61)
!907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !908, file: !408, line: 2309, type: !60)
!908 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2309, column: 8)
!909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !910, file: !408, line: 2309, type: !60)
!910 = distinct !DILexicalBlock(scope: !911, file: !408, line: 2309, column: 115)
!911 = distinct !DILexicalBlock(scope: !912, file: !408, line: 2309, column: 83)
!912 = distinct !DILexicalBlock(scope: !908, file: !408, line: 2309, column: 60)
!913 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !914, file: !408, line: 2310, type: !60)
!914 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2310, column: 8)
!915 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !916, file: !408, line: 2310, type: !60)
!916 = distinct !DILexicalBlock(scope: !917, file: !408, line: 2310, column: 115)
!917 = distinct !DILexicalBlock(scope: !918, file: !408, line: 2310, column: 83)
!918 = distinct !DILexicalBlock(scope: !914, file: !408, line: 2310, column: 60)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !920, file: !408, line: 2311, type: !60)
!920 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2311, column: 8)
!921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !922, file: !408, line: 2311, type: !60)
!922 = distinct !DILexicalBlock(scope: !923, file: !408, line: 2311, column: 115)
!923 = distinct !DILexicalBlock(scope: !924, file: !408, line: 2311, column: 83)
!924 = distinct !DILexicalBlock(scope: !920, file: !408, line: 2311, column: 60)
!925 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !926, file: !408, line: 2312, type: !60)
!926 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2312, column: 8)
!927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !928, file: !408, line: 2312, type: !60)
!928 = distinct !DILexicalBlock(scope: !929, file: !408, line: 2312, column: 137)
!929 = distinct !DILexicalBlock(scope: !930, file: !408, line: 2312, column: 94)
!930 = distinct !DILexicalBlock(scope: !926, file: !408, line: 2312, column: 71)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !932, file: !408, line: 2313, type: !60)
!932 = distinct !DILexicalBlock(scope: !866, file: !408, line: 2313, column: 8)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !934, file: !408, line: 2313, type: !60)
!934 = distinct !DILexicalBlock(scope: !935, file: !408, line: 2313, column: 115)
!935 = distinct !DILexicalBlock(scope: !936, file: !408, line: 2313, column: 83)
!936 = distinct !DILexicalBlock(scope: !932, file: !408, line: 2313, column: 60)
!937 = !DISubprogram(name: "treebuilder_data", scope: !408, file: !408, line: 2602, type: !938, isLocal: true, isDefinition: true, scopeLine: 2603, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_data, variables: !940)
!938 = !DISubroutineType(types: !939)
!939 = !{!60, !462, !60}
!940 = !{!941, !942, !943}
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !937, file: !408, line: 2602, type: !462)
!942 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !937, file: !408, line: 2602, type: !60)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !937, file: !408, line: 2604, type: !60)
!944 = !DISubprogram(name: "treebuilder_handle_data", scope: !408, file: !408, line: 2469, type: !938, isLocal: true, isDefinition: true, scopeLine: 2470, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_handle_data, variables: !945)
!945 = !{!946, !947, !948, !953}
!946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !944, file: !408, line: 2469, type: !462)
!947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !944, file: !408, line: 2469, type: !60)
!948 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !949, file: !408, line: 2485, type: !66)
!949 = distinct !DILexicalBlock(scope: !950, file: !408, line: 2481, column: 121)
!950 = distinct !DILexicalBlock(scope: !951, file: !408, line: 2480, column: 13)
!951 = distinct !DILexicalBlock(scope: !952, file: !408, line: 2478, column: 12)
!952 = distinct !DILexicalBlock(scope: !944, file: !408, line: 2471, column: 9)
!953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !954, file: !408, line: 2493, type: !60)
!954 = distinct !DILexicalBlock(scope: !955, file: !408, line: 2492, column: 16)
!955 = distinct !DILexicalBlock(scope: !950, file: !408, line: 2489, column: 20)
!956 = !DISubprogram(name: "treebuilder_start", scope: !408, file: !408, line: 2647, type: !938, isLocal: true, isDefinition: true, scopeLine: 2648, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_start, variables: !957)
!957 = !{!958, !959, !960, !961}
!958 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !956, file: !408, line: 2647, type: !462)
!959 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !956, file: !408, line: 2647, type: !60)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !956, file: !408, line: 2649, type: !60)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !956, file: !408, line: 2650, type: !60)
!962 = !DISubprogram(name: "treebuilder_handle_start", scope: !408, file: !408, line: 2387, type: !963, isLocal: true, isDefinition: true, scopeLine: 2389, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*, %struct._object*, %struct._object*)* @treebuilder_handle_start, variables: !965)
!963 = !DISubroutineType(types: !964)
!964 = !{!60, !462, !60, !60}
!965 = !{!966, !967, !968, !969, !970, !971, !972, !974, !976, !979, !980, !984}
!966 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !962, file: !408, line: 2387, type: !462)
!967 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag", arg: 2, scope: !962, file: !408, line: 2387, type: !60)
!968 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attrib", arg: 3, scope: !962, file: !408, line: 2388, type: !60)
!969 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !962, file: !408, line: 2390, type: !60)
!970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "this", scope: !962, file: !408, line: 2391, type: !60)
!971 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !962, file: !408, line: 2392, type: !406)
!972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !973, file: !408, line: 2442, type: !60)
!973 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2442, column: 8)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !975, file: !408, line: 2446, type: !60)
!975 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2446, column: 8)
!976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !977, file: !408, line: 2451, type: !60)
!977 = distinct !DILexicalBlock(scope: !978, file: !408, line: 2450, column: 32)
!978 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2450, column: 9)
!979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "action", scope: !977, file: !408, line: 2452, type: !60)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !981, file: !408, line: 2456, type: !60)
!981 = distinct !DILexicalBlock(scope: !982, file: !408, line: 2456, column: 16)
!982 = distinct !DILexicalBlock(scope: !983, file: !408, line: 2454, column: 18)
!983 = distinct !DILexicalBlock(scope: !977, file: !408, line: 2454, column: 13)
!984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !985, file: !408, line: 2464, type: !60)
!985 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2464, column: 8)
!986 = !DISubprogram(name: "treebuilder_set_element_text", scope: !408, file: !408, line: 2350, type: !253, isLocal: true, isDefinition: true, scopeLine: 2351, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @treebuilder_set_element_text, variables: !987)
!987 = !{!988, !989}
!988 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "element", arg: 1, scope: !986, file: !408, line: 2350, type: !60)
!989 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !986, file: !408, line: 2350, type: !60)
!990 = !DISubprogram(name: "treebuilder_set_element_text_or_tail", scope: !408, file: !408, line: 2329, type: !991, isLocal: true, isDefinition: true, scopeLine: 2331, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object**, %struct._Py_Identifier*)* @treebuilder_set_element_text_or_tail, variables: !1001)
!991 = !DISubroutineType(types: !992)
!992 = !{!99, !60, !60, !436, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64, align: 64)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !62, line: 144, baseType: !995)
!995 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !62, line: 140, size: 192, align: 64, elements: !996)
!996 = !{!997, !999, !1000}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !995, file: !62, line: 141, baseType: !998, size: 64, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !995, file: !62, line: 142, baseType: !84, size: 64, align: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !995, file: !62, line: 143, baseType: !60, size: 64, align: 64, offset: 128)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1010, !1012, !1013}
!1002 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "element", arg: 1, scope: !990, file: !408, line: 2329, type: !60)
!1003 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !990, file: !408, line: 2329, type: !60)
!1004 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 3, scope: !990, file: !408, line: 2330, type: !436)
!1005 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 4, scope: !990, file: !408, line: 2330, type: !993)
!1006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1007, file: !408, line: 2333, type: !60)
!1007 = distinct !DILexicalBlock(scope: !1008, file: !408, line: 2333, column: 12)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !408, line: 2332, column: 63)
!1009 = distinct !DILexicalBlock(scope: !990, file: !408, line: 2332, column: 9)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "joined", scope: !1011, file: !408, line: 2338, type: !60)
!1011 = distinct !DILexicalBlock(scope: !1009, file: !408, line: 2337, column: 10)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1011, file: !408, line: 2339, type: !99)
!1013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1014, file: !408, line: 2343, type: !60)
!1014 = distinct !DILexicalBlock(scope: !1011, file: !408, line: 2343, column: 12)
!1015 = !DISubprogram(name: "treebuilder_set_element_tail", scope: !408, file: !408, line: 2358, type: !253, isLocal: true, isDefinition: true, scopeLine: 2359, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @treebuilder_set_element_tail, variables: !1016)
!1016 = !{!1017, !1018}
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "element", arg: 1, scope: !1015, file: !408, line: 2358, type: !60)
!1018 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !1015, file: !408, line: 2358, type: !60)
!1019 = !DISubprogram(name: "treebuilder_add_subelement", scope: !408, file: !408, line: 2366, type: !253, isLocal: true, isDefinition: true, scopeLine: 2367, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*)* @treebuilder_add_subelement, variables: !1020)
!1020 = !{!1021, !1022, !1023, !1026, !1028}
!1021 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "element", arg: 1, scope: !1019, file: !408, line: 2366, type: !60)
!1022 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "child", arg: 2, scope: !1019, file: !408, line: 2366, type: !60)
!1023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1024, file: !408, line: 2370, type: !419)
!1024 = distinct !DILexicalBlock(scope: !1025, file: !408, line: 2369, column: 63)
!1025 = distinct !DILexicalBlock(scope: !1019, file: !408, line: 2369, column: 9)
!1026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1027, file: !408, line: 2374, type: !60)
!1027 = distinct !DILexicalBlock(scope: !1025, file: !408, line: 2373, column: 10)
!1028 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1029, file: !408, line: 2378, type: !60)
!1029 = distinct !DILexicalBlock(scope: !1027, file: !408, line: 2378, column: 12)
!1030 = !DISubprogram(name: "treebuilder_end", scope: !408, file: !408, line: 2612, type: !938, isLocal: true, isDefinition: true, scopeLine: 2613, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_end, variables: !1031)
!1031 = !{!1032, !1033, !1034}
!1032 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1030, file: !408, line: 2612, type: !462)
!1033 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1030, file: !408, line: 2612, type: !60)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1030, file: !408, line: 2614, type: !60)
!1035 = !DISubprogram(name: "treebuilder_handle_end", scope: !408, file: !408, line: 2506, type: !938, isLocal: true, isDefinition: true, scopeLine: 2507, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_handle_end, variables: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1042, !1045, !1046, !1047}
!1037 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1035, file: !408, line: 2506, type: !462)
!1038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag", arg: 2, scope: !1035, file: !408, line: 2506, type: !60)
!1039 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1035, file: !408, line: 2508, type: !60)
!1040 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1041, file: !408, line: 2534, type: !60)
!1041 = distinct !DILexicalBlock(scope: !1035, file: !408, line: 2534, column: 8)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1043, file: !408, line: 2540, type: !60)
!1043 = distinct !DILexicalBlock(scope: !1044, file: !408, line: 2539, column: 30)
!1044 = distinct !DILexicalBlock(scope: !1035, file: !408, line: 2539, column: 9)
!1045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "action", scope: !1043, file: !408, line: 2541, type: !60)
!1046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !1043, file: !408, line: 2542, type: !60)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1048, file: !408, line: 2546, type: !60)
!1048 = distinct !DILexicalBlock(scope: !1049, file: !408, line: 2546, column: 16)
!1049 = distinct !DILexicalBlock(scope: !1050, file: !408, line: 2544, column: 18)
!1050 = distinct !DILexicalBlock(scope: !1043, file: !408, line: 2544, column: 13)
!1051 = !DISubprogram(name: "treebuilder_close", scope: !408, file: !408, line: 2638, type: !938, isLocal: true, isDefinition: true, scopeLine: 2639, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*, %struct._object*)* @treebuilder_close, variables: !1052)
!1052 = !{!1053, !1054}
!1053 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1051, file: !408, line: 2638, type: !462)
!1054 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1051, file: !408, line: 2638, type: !60)
!1055 = !DISubprogram(name: "treebuilder_done", scope: !408, file: !408, line: 2622, type: !1056, isLocal: true, isDefinition: true, scopeLine: 2623, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.TreeBuilderObject*)* @treebuilder_done, variables: !1058)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!60, !462}
!1058 = !{!1059, !1060}
!1059 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1055, file: !408, line: 2622, type: !462)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1055, file: !408, line: 2624, type: !60)
!1061 = !DISubprogram(name: "treebuilder_init", scope: !408, file: !408, line: 2266, type: !267, isLocal: true, isDefinition: true, scopeLine: 2267, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @treebuilder_init, variables: !1062)
!1062 = !{!1063, !1064, !1065, !1066, !1067, !1068, !1069, !1073}
!1063 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1061, file: !408, line: 2266, type: !60)
!1064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1061, file: !408, line: 2266, type: !60)
!1065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1061, file: !408, line: 2266, type: !60)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element_factory", scope: !1061, file: !408, line: 2269, type: !60)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self_tb", scope: !1061, file: !408, line: 2270, type: !462)
!1068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1061, file: !408, line: 2271, type: !60)
!1069 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1070, file: !408, line: 2282, type: !60)
!1070 = distinct !DILexicalBlock(scope: !1071, file: !408, line: 2282, column: 12)
!1071 = distinct !DILexicalBlock(scope: !1072, file: !408, line: 2278, column: 26)
!1072 = distinct !DILexicalBlock(scope: !1061, file: !408, line: 2278, column: 9)
!1073 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1074, file: !408, line: 2282, type: !60)
!1074 = distinct !DILexicalBlock(scope: !1075, file: !408, line: 2282, column: 99)
!1075 = distinct !DILexicalBlock(scope: !1070, file: !408, line: 2282, column: 65)
!1076 = !DISubprogram(name: "treebuilder_new", scope: !408, file: !408, line: 2236, type: !1077, isLocal: true, isDefinition: true, scopeLine: 2237, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @treebuilder_new, variables: !1081)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!60, !1079, !60, !60}
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !62, line: 422, baseType: !75)
!1081 = !{!1082, !1083, !1084, !1085, !1086, !1092, !1094}
!1082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1076, file: !408, line: 2236, type: !1079)
!1083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1076, file: !408, line: 2236, type: !60)
!1084 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1076, file: !408, line: 2236, type: !60)
!1085 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1076, file: !408, line: 2238, type: !462)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1087, file: !408, line: 2251, type: !60)
!1087 = distinct !DILexicalBlock(scope: !1088, file: !408, line: 2251, column: 16)
!1088 = distinct !DILexicalBlock(scope: !1089, file: !408, line: 2250, column: 24)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !408, line: 2250, column: 13)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !408, line: 2239, column: 26)
!1091 = distinct !DILexicalBlock(scope: !1076, file: !408, line: 2239, column: 9)
!1092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1093, file: !408, line: 2252, type: !60)
!1093 = distinct !DILexicalBlock(scope: !1088, file: !408, line: 2252, column: 16)
!1094 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1095, file: !408, line: 2253, type: !60)
!1095 = distinct !DILexicalBlock(scope: !1088, file: !408, line: 2253, column: 16)
!1096 = !DISubprogram(name: "element_dealloc", scope: !408, file: !408, line: 640, type: !1097, isLocal: true, isDefinition: true, scopeLine: 641, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.ElementObject*)* @element_dealloc, variables: !1099)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !419}
!1099 = !{!1100}
!1100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1096, file: !408, line: 640, type: !419)
!1101 = !DISubprogram(name: "element_repr", scope: !408, file: !408, line: 1447, type: !811, isLocal: true, isDefinition: true, scopeLine: 1448, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*)* @element_repr, variables: !1102)
!1102 = !{!1103}
!1103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1101, file: !408, line: 1447, type: !419)
!1104 = !DISubprogram(name: "element_length", scope: !408, file: !408, line: 1373, type: !1105, isLocal: true, isDefinition: true, scopeLine: 1374, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.ElementObject*)* @element_length, variables: !1107)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!66, !419}
!1107 = !{!1108}
!1108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1104, file: !408, line: 1373, type: !419)
!1109 = !DISubprogram(name: "element_getitem", scope: !408, file: !408, line: 1294, type: !240, isLocal: true, isDefinition: true, scopeLine: 1295, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64)* @element_getitem, variables: !1110)
!1110 = !{!1111, !1112, !1113}
!1111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self_", arg: 1, scope: !1109, file: !408, line: 1294, type: !60)
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !1109, file: !408, line: 1294, type: !66)
!1113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1109, file: !408, line: 1296, type: !419)
!1114 = !DISubprogram(name: "element_setitem", scope: !408, file: !408, line: 1481, type: !247, isLocal: true, isDefinition: true, scopeLine: 1482, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64, %struct._object*)* @element_setitem, variables: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1121, !1122}
!1116 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self_", arg: 1, scope: !1114, file: !408, line: 1481, type: !60)
!1117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !1114, file: !408, line: 1481, type: !66)
!1118 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 3, scope: !1114, file: !408, line: 1481, type: !60)
!1119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1114, file: !408, line: 1483, type: !419)
!1120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1114, file: !408, line: 1484, type: !99)
!1121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old", scope: !1114, file: !408, line: 1485, type: !60)
!1122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1123, file: !408, line: 1505, type: !60)
!1123 = distinct !DILexicalBlock(scope: !1114, file: !408, line: 1505, column: 8)
!1124 = !DISubprogram(name: "element_subscr", scope: !408, file: !408, line: 1511, type: !182, isLocal: true, isDefinition: true, scopeLine: 1512, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @element_subscr, variables: !1125)
!1125 = !{!1126, !1127, !1128, !1129, !1132, !1135, !1136, !1137, !1138, !1139, !1140, !1141}
!1126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self_", arg: 1, scope: !1124, file: !408, line: 1511, type: !60)
!1127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 2, scope: !1124, file: !408, line: 1511, type: !60)
!1128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1124, file: !408, line: 1513, type: !419)
!1129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1130, file: !408, line: 1516, type: !66)
!1130 = distinct !DILexicalBlock(scope: !1131, file: !408, line: 1515, column: 113)
!1131 = distinct !DILexicalBlock(scope: !1124, file: !408, line: 1515, column: 9)
!1132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1133, file: !408, line: 1526, type: !66)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !408, line: 1525, column: 65)
!1134 = distinct !DILexicalBlock(scope: !1131, file: !408, line: 1525, column: 14)
!1135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1133, file: !408, line: 1526, type: !66)
!1136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1133, file: !408, line: 1526, type: !66)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slicelen", scope: !1133, file: !408, line: 1526, type: !66)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur", scope: !1133, file: !408, line: 1526, type: !66)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1133, file: !408, line: 1526, type: !66)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !1133, file: !408, line: 1527, type: !60)
!1141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1142, file: !408, line: 1547, type: !60)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !408, line: 1546, column: 36)
!1143 = distinct !DILexicalBlock(scope: !1144, file: !408, line: 1545, column: 13)
!1144 = distinct !DILexicalBlock(scope: !1145, file: !408, line: 1545, column: 13)
!1145 = distinct !DILexicalBlock(scope: !1146, file: !408, line: 1540, column: 14)
!1146 = distinct !DILexicalBlock(scope: !1133, file: !408, line: 1538, column: 13)
!1147 = !DISubprogram(name: "element_ass_subscr", scope: !408, file: !408, line: 1563, type: !267, isLocal: true, isDefinition: true, scopeLine: 1564, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @element_ass_subscr, variables: !1148)
!1148 = !{!1149, !1150, !1151, !1152, !1153, !1156, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1170, !1171, !1175, !1177, !1180, !1188, !1196, !1200, !1204, !1206}
!1149 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self_", arg: 1, scope: !1147, file: !408, line: 1563, type: !60)
!1150 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 2, scope: !1147, file: !408, line: 1563, type: !60)
!1151 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !1147, file: !408, line: 1563, type: !60)
!1152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1147, file: !408, line: 1565, type: !419)
!1153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1154, file: !408, line: 1568, type: !66)
!1154 = distinct !DILexicalBlock(scope: !1155, file: !408, line: 1567, column: 113)
!1155 = distinct !DILexicalBlock(scope: !1147, file: !408, line: 1567, column: 9)
!1156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1157, file: !408, line: 1578, type: !66)
!1157 = distinct !DILexicalBlock(scope: !1158, file: !408, line: 1577, column: 65)
!1158 = distinct !DILexicalBlock(scope: !1155, file: !408, line: 1577, column: 14)
!1159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1157, file: !408, line: 1578, type: !66)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1157, file: !408, line: 1578, type: !66)
!1161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slicelen", scope: !1157, file: !408, line: 1578, type: !66)
!1162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newlen", scope: !1157, file: !408, line: 1578, type: !66)
!1163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur", scope: !1157, file: !408, line: 1578, type: !66)
!1164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1157, file: !408, line: 1578, type: !66)
!1165 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "recycle", scope: !1157, file: !408, line: 1580, type: !60)
!1166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1157, file: !408, line: 1581, type: !60)
!1167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur", scope: !1168, file: !408, line: 1596, type: !150)
!1168 = distinct !DILexicalBlock(scope: !1169, file: !408, line: 1594, column: 34)
!1169 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1594, column: 13)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1168, file: !408, line: 1597, type: !66)
!1171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_moved", scope: !1172, file: !408, line: 1632, type: !66)
!1172 = distinct !DILexicalBlock(scope: !1173, file: !408, line: 1628, column: 76)
!1173 = distinct !DILexicalBlock(scope: !1174, file: !408, line: 1628, column: 13)
!1174 = distinct !DILexicalBlock(scope: !1168, file: !408, line: 1628, column: 13)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1176, file: !408, line: 1657, type: !60)
!1176 = distinct !DILexicalBlock(scope: !1168, file: !408, line: 1657, column: 16)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1178, file: !408, line: 1657, type: !60)
!1178 = distinct !DILexicalBlock(scope: !1179, file: !408, line: 1657, column: 107)
!1179 = distinct !DILexicalBlock(scope: !1176, file: !408, line: 1657, column: 73)
!1180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1181, file: !408, line: 1687, type: !60)
!1181 = distinct !DILexicalBlock(scope: !1182, file: !408, line: 1687, column: 24)
!1182 = distinct !DILexicalBlock(scope: !1183, file: !408, line: 1686, column: 26)
!1183 = distinct !DILexicalBlock(scope: !1184, file: !408, line: 1686, column: 21)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !408, line: 1685, column: 62)
!1185 = distinct !DILexicalBlock(scope: !1186, file: !408, line: 1685, column: 17)
!1186 = distinct !DILexicalBlock(scope: !1187, file: !408, line: 1684, column: 32)
!1187 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1684, column: 13)
!1188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1189, file: !408, line: 1700, type: !60)
!1189 = distinct !DILexicalBlock(scope: !1190, file: !408, line: 1700, column: 24)
!1190 = distinct !DILexicalBlock(scope: !1191, file: !408, line: 1699, column: 26)
!1191 = distinct !DILexicalBlock(scope: !1192, file: !408, line: 1699, column: 21)
!1192 = distinct !DILexicalBlock(scope: !1193, file: !408, line: 1698, column: 27)
!1193 = distinct !DILexicalBlock(scope: !1194, file: !408, line: 1698, column: 17)
!1194 = distinct !DILexicalBlock(scope: !1195, file: !408, line: 1693, column: 27)
!1195 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1693, column: 13)
!1196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1197, file: !408, line: 1722, type: !60)
!1197 = distinct !DILexicalBlock(scope: !1198, file: !408, line: 1721, column: 32)
!1198 = distinct !DILexicalBlock(scope: !1199, file: !408, line: 1720, column: 9)
!1199 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1720, column: 9)
!1200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1201, file: !408, line: 1730, type: !60)
!1201 = distinct !DILexicalBlock(scope: !1202, file: !408, line: 1730, column: 16)
!1202 = distinct !DILexicalBlock(scope: !1203, file: !408, line: 1729, column: 18)
!1203 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1729, column: 13)
!1204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1205, file: !408, line: 1734, type: !60)
!1205 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1734, column: 12)
!1206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1207, file: !408, line: 1734, type: !60)
!1207 = distinct !DILexicalBlock(scope: !1208, file: !408, line: 1734, column: 103)
!1208 = distinct !DILexicalBlock(scope: !1205, file: !408, line: 1734, column: 69)
!1209 = !DISubprogram(name: "element_getattro", scope: !408, file: !408, line: 1783, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1784, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_getattro, variables: !1212)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!60, !419, !60}
!1212 = !{!1213, !1214, !1215, !1216, !1217, !1220, !1221, !1223, !1224, !1227, !1228, !1230, !1231, !1234, !1237, !1238, !1240, !1241, !1244, !1245, !1247}
!1213 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1209, file: !408, line: 1783, type: !419)
!1214 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nameobj", arg: 2, scope: !1209, file: !408, line: 1783, type: !60)
!1215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1209, file: !408, line: 1785, type: !60)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1209, file: !408, line: 1786, type: !107)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1218, file: !408, line: 1795, type: !150)
!1218 = distinct !DILexicalBlock(scope: !1219, file: !408, line: 1795, column: 24)
!1219 = distinct !DILexicalBlock(scope: !1209, file: !408, line: 1795, column: 9)
!1220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1218, file: !408, line: 1795, type: !150)
!1221 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1222, file: !408, line: 1795, type: !416)
!1222 = distinct !DILexicalBlock(scope: !1218, file: !408, line: 1795, column: 1540)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1222, file: !408, line: 1795, type: !99)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1225, file: !408, line: 1799, type: !150)
!1225 = distinct !DILexicalBlock(scope: !1226, file: !408, line: 1799, column: 31)
!1226 = distinct !DILexicalBlock(scope: !1219, file: !408, line: 1799, column: 16)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1225, file: !408, line: 1799, type: !150)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1229, file: !408, line: 1799, type: !416)
!1229 = distinct !DILexicalBlock(scope: !1225, file: !408, line: 1799, column: 1562)
!1230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1229, file: !408, line: 1799, type: !99)
!1231 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1232, file: !408, line: 1801, type: !60)
!1232 = distinct !DILexicalBlock(scope: !1233, file: !408, line: 1801, column: 12)
!1233 = distinct !DILexicalBlock(scope: !1226, file: !408, line: 1799, column: 2133)
!1234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1235, file: !408, line: 1811, type: !150)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !408, line: 1811, column: 24)
!1236 = distinct !DILexicalBlock(scope: !1209, file: !408, line: 1811, column: 9)
!1237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1235, file: !408, line: 1811, type: !150)
!1238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1239, file: !408, line: 1811, type: !416)
!1239 = distinct !DILexicalBlock(scope: !1235, file: !408, line: 1811, column: 1555)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1239, file: !408, line: 1811, type: !99)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1242, file: !408, line: 1814, type: !150)
!1242 = distinct !DILexicalBlock(scope: !1243, file: !408, line: 1814, column: 31)
!1243 = distinct !DILexicalBlock(scope: !1236, file: !408, line: 1814, column: 16)
!1244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1242, file: !408, line: 1814, type: !150)
!1245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1246, file: !408, line: 1814, type: !416)
!1246 = distinct !DILexicalBlock(scope: !1242, file: !408, line: 1814, column: 1592)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1246, file: !408, line: 1814, type: !99)
!1248 = !DISubprogram(name: "element_get_attrib", scope: !408, file: !408, line: 501, type: !811, isLocal: true, isDefinition: true, scopeLine: 502, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*)* @element_get_attrib, variables: !1249)
!1249 = !{!1250, !1251, !1252}
!1250 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1248, file: !408, line: 501, type: !419)
!1251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1248, file: !408, line: 506, type: !60)
!1252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1253, file: !408, line: 513, type: !60)
!1253 = distinct !DILexicalBlock(scope: !1254, file: !408, line: 513, column: 12)
!1254 = distinct !DILexicalBlock(scope: !1255, file: !408, line: 508, column: 35)
!1255 = distinct !DILexicalBlock(scope: !1248, file: !408, line: 508, column: 9)
!1256 = !DISubprogram(name: "element_setattro", scope: !408, file: !408, line: 1831, type: !1257, isLocal: true, isDefinition: true, scopeLine: 1832, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_setattro, variables: !1259)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!99, !419, !60, !60}
!1259 = !{!1260, !1261, !1262, !1263, !1264, !1267, !1268, !1270, !1271, !1274, !1277, !1278, !1280, !1281, !1284, !1287, !1288, !1290, !1291, !1294, !1297, !1298, !1300, !1301}
!1260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1256, file: !408, line: 1831, type: !419)
!1261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nameobj", arg: 2, scope: !1256, file: !408, line: 1831, type: !60)
!1262 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !1256, file: !408, line: 1831, type: !60)
!1263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1256, file: !408, line: 1833, type: !107)
!1264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1265, file: !408, line: 1839, type: !150)
!1265 = distinct !DILexicalBlock(scope: !1266, file: !408, line: 1839, column: 24)
!1266 = distinct !DILexicalBlock(scope: !1256, file: !408, line: 1839, column: 9)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1265, file: !408, line: 1839, type: !150)
!1268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1269, file: !408, line: 1839, type: !416)
!1269 = distinct !DILexicalBlock(scope: !1265, file: !408, line: 1839, column: 1540)
!1270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1269, file: !408, line: 1839, type: !99)
!1271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1272, file: !408, line: 1840, type: !60)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !408, line: 1840, column: 12)
!1273 = distinct !DILexicalBlock(scope: !1266, file: !408, line: 1839, column: 2106)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1275, file: !408, line: 1843, type: !150)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !408, line: 1843, column: 31)
!1276 = distinct !DILexicalBlock(scope: !1266, file: !408, line: 1843, column: 16)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1275, file: !408, line: 1843, type: !150)
!1278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1279, file: !408, line: 1843, type: !416)
!1279 = distinct !DILexicalBlock(scope: !1275, file: !408, line: 1843, column: 1562)
!1280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1279, file: !408, line: 1843, type: !99)
!1281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1282, file: !408, line: 1844, type: !60)
!1282 = distinct !DILexicalBlock(scope: !1283, file: !408, line: 1844, column: 12)
!1283 = distinct !DILexicalBlock(scope: !1276, file: !408, line: 1843, column: 2133)
!1284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1285, file: !408, line: 1847, type: !150)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !408, line: 1847, column: 31)
!1286 = distinct !DILexicalBlock(scope: !1276, file: !408, line: 1847, column: 16)
!1287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1285, file: !408, line: 1847, type: !150)
!1288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1289, file: !408, line: 1847, type: !416)
!1289 = distinct !DILexicalBlock(scope: !1285, file: !408, line: 1847, column: 1562)
!1290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1289, file: !408, line: 1847, type: !99)
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1292, file: !408, line: 1848, type: !60)
!1292 = distinct !DILexicalBlock(scope: !1293, file: !408, line: 1848, column: 12)
!1293 = distinct !DILexicalBlock(scope: !1286, file: !408, line: 1847, column: 2133)
!1294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1295, file: !408, line: 1851, type: !150)
!1295 = distinct !DILexicalBlock(scope: !1296, file: !408, line: 1851, column: 31)
!1296 = distinct !DILexicalBlock(scope: !1286, file: !408, line: 1851, column: 16)
!1297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1295, file: !408, line: 1851, type: !150)
!1298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1299, file: !408, line: 1851, type: !416)
!1299 = distinct !DILexicalBlock(scope: !1295, file: !408, line: 1851, column: 1592)
!1300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1299, file: !408, line: 1851, type: !99)
!1301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1302, file: !408, line: 1856, type: !60)
!1302 = distinct !DILexicalBlock(scope: !1303, file: !408, line: 1856, column: 12)
!1303 = distinct !DILexicalBlock(scope: !1296, file: !408, line: 1851, column: 2173)
!1304 = !DISubprogram(name: "element_gc_traverse", scope: !408, file: !408, line: 609, type: !1305, isLocal: true, isDefinition: true, scopeLine: 610, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ElementObject*, i32 (%struct._object*, i8*)*, i8*)* @element_gc_traverse, variables: !1307)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!99, !419, !319, !145}
!1307 = !{!1308, !1309, !1310, !1311, !1315, !1319, !1323, !1326, !1330}
!1308 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1304, file: !408, line: 609, type: !419)
!1309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1304, file: !408, line: 609, type: !319)
!1310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1304, file: !408, line: 609, type: !145)
!1311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1312, file: !408, line: 611, type: !99)
!1312 = distinct !DILexicalBlock(scope: !1313, file: !408, line: 611, column: 25)
!1313 = distinct !DILexicalBlock(scope: !1314, file: !408, line: 611, column: 14)
!1314 = distinct !DILexicalBlock(scope: !1304, file: !408, line: 611, column: 8)
!1315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1316, file: !408, line: 612, type: !99)
!1316 = distinct !DILexicalBlock(scope: !1317, file: !408, line: 612, column: 78)
!1317 = distinct !DILexicalBlock(scope: !1318, file: !408, line: 612, column: 14)
!1318 = distinct !DILexicalBlock(scope: !1304, file: !408, line: 612, column: 8)
!1319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1320, file: !408, line: 613, type: !99)
!1320 = distinct !DILexicalBlock(scope: !1321, file: !408, line: 613, column: 78)
!1321 = distinct !DILexicalBlock(scope: !1322, file: !408, line: 613, column: 14)
!1322 = distinct !DILexicalBlock(scope: !1304, file: !408, line: 613, column: 8)
!1323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1324, file: !408, line: 616, type: !99)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !408, line: 615, column: 22)
!1325 = distinct !DILexicalBlock(scope: !1304, file: !408, line: 615, column: 9)
!1326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1327, file: !408, line: 617, type: !99)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !408, line: 617, column: 39)
!1328 = distinct !DILexicalBlock(scope: !1329, file: !408, line: 617, column: 18)
!1329 = distinct !DILexicalBlock(scope: !1324, file: !408, line: 617, column: 12)
!1330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1331, file: !408, line: 620, type: !99)
!1331 = distinct !DILexicalBlock(scope: !1332, file: !408, line: 620, column: 48)
!1332 = distinct !DILexicalBlock(scope: !1333, file: !408, line: 620, column: 22)
!1333 = distinct !DILexicalBlock(scope: !1334, file: !408, line: 620, column: 16)
!1334 = distinct !DILexicalBlock(scope: !1335, file: !408, line: 619, column: 9)
!1335 = distinct !DILexicalBlock(scope: !1324, file: !408, line: 619, column: 9)
!1336 = !DISubprogram(name: "element_gc_clear", scope: !408, file: !408, line: 626, type: !1337, isLocal: true, isDefinition: true, scopeLine: 627, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ElementObject*)* @element_gc_clear, variables: !1339)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!99, !419}
!1339 = !{!1340, !1341, !1343}
!1340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1336, file: !408, line: 626, type: !419)
!1341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1342, file: !408, line: 628, type: !60)
!1342 = distinct !DILexicalBlock(scope: !1336, file: !408, line: 628, column: 8)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1344, file: !408, line: 628, type: !60)
!1344 = distinct !DILexicalBlock(scope: !1345, file: !408, line: 628, column: 113)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !408, line: 628, column: 82)
!1346 = distinct !DILexicalBlock(scope: !1342, file: !408, line: 628, column: 59)
!1347 = !DISubprogram(name: "_clear_joined_ptr", scope: !408, file: !408, line: 65, type: !1348, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object**)* @_clear_joined_ptr, variables: !1350)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !436}
!1350 = !{!1351, !1352, !1355}
!1351 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !1347, file: !408, line: 65, type: !436)
!1352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1353, file: !408, line: 68, type: !60)
!1353 = distinct !DILexicalBlock(scope: !1354, file: !408, line: 67, column: 13)
!1354 = distinct !DILexicalBlock(scope: !1347, file: !408, line: 67, column: 9)
!1355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1356, file: !408, line: 70, type: !60)
!1356 = distinct !DILexicalBlock(scope: !1353, file: !408, line: 70, column: 12)
!1357 = !DISubprogram(name: "dealloc_extra", scope: !408, file: !408, line: 251, type: !1097, isLocal: true, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.ElementObject*)* @dealloc_extra, variables: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1364}
!1359 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1357, file: !408, line: 251, type: !419)
!1360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "myextra", scope: !1357, file: !408, line: 253, type: !428)
!1361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1357, file: !408, line: 254, type: !99)
!1362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1363, file: !408, line: 264, type: !60)
!1363 = distinct !DILexicalBlock(scope: !1357, file: !408, line: 264, column: 8)
!1364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1365, file: !408, line: 267, type: !60)
!1365 = distinct !DILexicalBlock(scope: !1366, file: !408, line: 267, column: 12)
!1366 = distinct !DILexicalBlock(scope: !1367, file: !408, line: 266, column: 5)
!1367 = distinct !DILexicalBlock(scope: !1357, file: !408, line: 266, column: 5)
!1368 = !DISubprogram(name: "element_clearmethod", scope: !408, file: !408, line: 671, type: !1210, isLocal: true, isDefinition: true, scopeLine: 672, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_clearmethod, variables: !1369)
!1369 = !{!1370, !1371, !1372, !1374}
!1370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1368, file: !408, line: 671, type: !419)
!1371 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1368, file: !408, line: 671, type: !60)
!1372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1373, file: !408, line: 679, type: !60)
!1373 = distinct !DILexicalBlock(scope: !1368, file: !408, line: 679, column: 8)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1375, file: !408, line: 683, type: !60)
!1375 = distinct !DILexicalBlock(scope: !1368, file: !408, line: 683, column: 8)
!1376 = !DISubprogram(name: "element_get", scope: !408, file: !408, line: 1214, type: !1377, isLocal: true, isDefinition: true, scopeLine: 1215, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_get, variables: !1379)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!60, !419, !60, !60}
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385}
!1380 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1376, file: !408, line: 1214, type: !419)
!1381 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1376, file: !408, line: 1214, type: !60)
!1382 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1376, file: !408, line: 1214, type: !60)
!1383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1376, file: !408, line: 1216, type: !60)
!1384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !1376, file: !408, line: 1219, type: !60)
!1385 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "default_value", scope: !1376, file: !408, line: 1220, type: !60)
!1386 = !DISubprogram(name: "element_set", scope: !408, file: !408, line: 1456, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1457, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_set, variables: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1392}
!1388 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1386, file: !408, line: 1456, type: !419)
!1389 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1386, file: !408, line: 1456, type: !60)
!1390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !1386, file: !408, line: 1458, type: !60)
!1391 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !1386, file: !408, line: 1460, type: !60)
!1392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1386, file: !408, line: 1461, type: !60)
!1393 = !DISubprogram(name: "element_find", scope: !408, file: !408, line: 1078, type: !1377, isLocal: true, isDefinition: true, scopeLine: 1079, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_find, variables: !1394)
!1394 = !{!1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402}
!1395 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1393, file: !408, line: 1078, type: !419)
!1396 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1393, file: !408, line: 1078, type: !60)
!1397 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1393, file: !408, line: 1078, type: !60)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1393, file: !408, line: 1080, type: !99)
!1399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1393, file: !408, line: 1081, type: !60)
!1400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "namespaces", scope: !1393, file: !408, line: 1082, type: !60)
!1401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !1393, file: !408, line: 1084, type: !406)
!1402 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1403, file: !408, line: 1101, type: !60)
!1403 = distinct !DILexicalBlock(scope: !1404, file: !408, line: 1100, column: 47)
!1404 = distinct !DILexicalBlock(scope: !1405, file: !408, line: 1100, column: 5)
!1405 = distinct !DILexicalBlock(scope: !1393, file: !408, line: 1100, column: 5)
!1406 = !DISubprogram(name: "checkpath", scope: !408, file: !408, line: 994, type: !200, isLocal: true, isDefinition: true, scopeLine: 995, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @checkpath, variables: !1407)
!1407 = !{!1408, !1409, !1410, !1411, !1415, !1416, !1417, !1421}
!1408 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag", arg: 1, scope: !1406, file: !408, line: 994, type: !60)
!1409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1406, file: !408, line: 996, type: !66)
!1410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "check", scope: !1406, file: !408, line: 997, type: !99)
!1411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1412, file: !408, line: 1005, type: !1414)
!1412 = distinct !DILexicalBlock(scope: !1413, file: !408, line: 1004, column: 77)
!1413 = distinct !DILexicalBlock(scope: !1406, file: !408, line: 1004, column: 9)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !66)
!1415 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1412, file: !408, line: 1006, type: !145)
!1416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !1412, file: !408, line: 1007, type: !404)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !1418, file: !408, line: 1009, type: !530)
!1418 = distinct !DILexicalBlock(scope: !1419, file: !408, line: 1008, column: 35)
!1419 = distinct !DILexicalBlock(scope: !1420, file: !408, line: 1008, column: 9)
!1420 = distinct !DILexicalBlock(scope: !1412, file: !408, line: 1008, column: 9)
!1421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1422, file: !408, line: 1020, type: !107)
!1422 = distinct !DILexicalBlock(scope: !1423, file: !408, line: 1019, column: 77)
!1423 = distinct !DILexicalBlock(scope: !1406, file: !408, line: 1019, column: 9)
!1424 = !DISubprogram(name: "element_findtext", scope: !408, file: !408, line: 1113, type: !1377, isLocal: true, isDefinition: true, scopeLine: 1114, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_findtext, variables: !1425)
!1425 = !{!1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1438, !1441}
!1426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1424, file: !408, line: 1113, type: !419)
!1427 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1424, file: !408, line: 1113, type: !60)
!1428 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1424, file: !408, line: 1113, type: !60)
!1429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1424, file: !408, line: 1115, type: !99)
!1430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1424, file: !408, line: 1116, type: !60)
!1431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "default_value", scope: !1424, file: !408, line: 1117, type: !60)
!1432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "namespaces", scope: !1424, file: !408, line: 1118, type: !60)
!1433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !1424, file: !408, line: 1121, type: !406)
!1434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1435, file: !408, line: 1138, type: !419)
!1435 = distinct !DILexicalBlock(scope: !1436, file: !408, line: 1137, column: 47)
!1436 = distinct !DILexicalBlock(scope: !1437, file: !408, line: 1137, column: 5)
!1437 = distinct !DILexicalBlock(scope: !1424, file: !408, line: 1137, column: 5)
!1438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text", scope: !1439, file: !408, line: 1141, type: !60)
!1439 = distinct !DILexicalBlock(scope: !1440, file: !408, line: 1140, column: 65)
!1440 = distinct !DILexicalBlock(scope: !1435, file: !408, line: 1139, column: 13)
!1441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1442, file: !408, line: 1144, type: !60)
!1442 = distinct !DILexicalBlock(scope: !1439, file: !408, line: 1144, column: 16)
!1443 = !DISubprogram(name: "element_findall", scope: !408, file: !408, line: 1154, type: !1377, isLocal: true, isDefinition: true, scopeLine: 1155, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_findall, variables: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1457}
!1445 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1443, file: !408, line: 1154, type: !419)
!1446 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1443, file: !408, line: 1154, type: !60)
!1447 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1443, file: !408, line: 1154, type: !60)
!1448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1443, file: !408, line: 1156, type: !99)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !1443, file: !408, line: 1157, type: !60)
!1450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1443, file: !408, line: 1158, type: !60)
!1451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "namespaces", scope: !1443, file: !408, line: 1159, type: !60)
!1452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !1443, file: !408, line: 1161, type: !406)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1454, file: !408, line: 1182, type: !60)
!1454 = distinct !DILexicalBlock(scope: !1455, file: !408, line: 1181, column: 47)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !408, line: 1181, column: 5)
!1456 = distinct !DILexicalBlock(scope: !1443, file: !408, line: 1181, column: 5)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1458, file: !408, line: 1186, type: !60)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !408, line: 1186, column: 20)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !408, line: 1185, column: 47)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !408, line: 1185, column: 17)
!1461 = distinct !DILexicalBlock(scope: !1462, file: !408, line: 1184, column: 81)
!1462 = distinct !DILexicalBlock(scope: !1454, file: !408, line: 1183, column: 13)
!1463 = !DISubprogram(name: "element_append", scope: !408, file: !408, line: 658, type: !1210, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_append, variables: !1464)
!1464 = !{!1465, !1466, !1467}
!1465 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1463, file: !408, line: 658, type: !419)
!1466 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1463, file: !408, line: 658, type: !60)
!1467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1463, file: !408, line: 660, type: !60)
!1468 = !DISubprogram(name: "element_extend", scope: !408, file: !408, line: 1036, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1037, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_extend, variables: !1469)
!1469 = !{!1470, !1471, !1472, !1473, !1474, !1475, !1476, !1480, !1484, !1488}
!1470 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1468, file: !408, line: 1036, type: !419)
!1471 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1468, file: !408, line: 1036, type: !60)
!1472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !1468, file: !408, line: 1038, type: !60)
!1473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1468, file: !408, line: 1039, type: !66)
!1474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seqlen", scope: !1468, file: !408, line: 1039, type: !66)
!1475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq_in", scope: !1468, file: !408, line: 1041, type: !60)
!1476 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1477, file: !408, line: 1056, type: !60)
!1477 = distinct !DILexicalBlock(scope: !1478, file: !408, line: 1055, column: 34)
!1478 = distinct !DILexicalBlock(scope: !1479, file: !408, line: 1055, column: 5)
!1479 = distinct !DILexicalBlock(scope: !1468, file: !408, line: 1055, column: 5)
!1480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1481, file: !408, line: 1058, type: !60)
!1481 = distinct !DILexicalBlock(scope: !1482, file: !408, line: 1058, column: 16)
!1482 = distinct !DILexicalBlock(scope: !1483, file: !408, line: 1057, column: 71)
!1483 = distinct !DILexicalBlock(scope: !1477, file: !408, line: 1057, column: 13)
!1484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1485, file: !408, line: 1067, type: !60)
!1485 = distinct !DILexicalBlock(scope: !1486, file: !408, line: 1067, column: 16)
!1486 = distinct !DILexicalBlock(scope: !1487, file: !408, line: 1066, column: 56)
!1487 = distinct !DILexicalBlock(scope: !1477, file: !408, line: 1066, column: 13)
!1488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1489, file: !408, line: 1072, type: !60)
!1489 = distinct !DILexicalBlock(scope: !1468, file: !408, line: 1072, column: 8)
!1490 = !DISubprogram(name: "element_insert", scope: !408, file: !408, line: 1311, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1312, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_insert, variables: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496}
!1492 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1490, file: !408, line: 1311, type: !419)
!1493 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1490, file: !408, line: 1311, type: !60)
!1494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1490, file: !408, line: 1313, type: !99)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1490, file: !408, line: 1315, type: !99)
!1496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1490, file: !408, line: 1316, type: !60)
!1497 = !DISubprogram(name: "element_remove", scope: !408, file: !408, line: 1403, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1404, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_remove, variables: !1498)
!1498 = !{!1499, !1500, !1501, !1502, !1503}
!1499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1497, file: !408, line: 1403, type: !419)
!1500 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1497, file: !408, line: 1403, type: !60)
!1501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1497, file: !408, line: 1405, type: !99)
!1502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1497, file: !408, line: 1407, type: !60)
!1503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1504, file: !408, line: 1436, type: !60)
!1504 = distinct !DILexicalBlock(scope: !1497, file: !408, line: 1436, column: 8)
!1505 = !DISubprogram(name: "element_iter", scope: !408, file: !408, line: 1271, type: !1377, isLocal: true, isDefinition: true, scopeLine: 1272, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iter, variables: !1506)
!1506 = !{!1507, !1508, !1509, !1510}
!1507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1505, file: !408, line: 1271, type: !419)
!1508 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1505, file: !408, line: 1271, type: !60)
!1509 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1505, file: !408, line: 1271, type: !60)
!1510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1505, file: !408, line: 1273, type: !60)
!1511 = !DISubprogram(name: "create_elementiter", scope: !408, file: !408, line: 2163, type: !1512, isLocal: true, isDefinition: true, scopeLine: 2164, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, i32)* @create_elementiter, variables: !1514)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!60, !419, !60, !99}
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1522, !1525}
!1515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1511, file: !408, line: 2163, type: !419)
!1516 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag", arg: 2, scope: !1511, file: !408, line: 2163, type: !60)
!1517 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gettext", arg: 3, scope: !1511, file: !408, line: 2163, type: !99)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "it", scope: !1511, file: !408, line: 2165, type: !537)
!1519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "star", scope: !1511, file: !408, line: 2166, type: !60)
!1520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1521, file: !408, line: 2179, type: !60)
!1521 = distinct !DILexicalBlock(scope: !1511, file: !408, line: 2179, column: 8)
!1522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1523, file: !408, line: 2179, type: !60)
!1523 = distinct !DILexicalBlock(scope: !1524, file: !408, line: 2179, column: 96)
!1524 = distinct !DILexicalBlock(scope: !1521, file: !408, line: 2179, column: 62)
!1525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1526, file: !408, line: 2192, type: !60)
!1526 = distinct !DILexicalBlock(scope: !1527, file: !408, line: 2192, column: 12)
!1527 = distinct !DILexicalBlock(scope: !1528, file: !408, line: 2191, column: 41)
!1528 = distinct !DILexicalBlock(scope: !1511, file: !408, line: 2191, column: 9)
!1529 = !DISubprogram(name: "element_itertext", scope: !408, file: !408, line: 1284, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1285, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_itertext, variables: !1530)
!1530 = !{!1531, !1532}
!1531 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1529, file: !408, line: 1284, type: !419)
!1532 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1529, file: !408, line: 1284, type: !60)
!1533 = !DISubprogram(name: "element_iterfind", scope: !408, file: !408, line: 1196, type: !1377, isLocal: true, isDefinition: true, scopeLine: 1197, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*)* @element_iterfind, variables: !1534)
!1534 = !{!1535, !1536, !1537, !1538, !1539, !1540}
!1535 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1533, file: !408, line: 1196, type: !419)
!1536 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1533, file: !408, line: 1196, type: !60)
!1537 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1533, file: !408, line: 1196, type: !60)
!1538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1533, file: !408, line: 1198, type: !60)
!1539 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "namespaces", scope: !1533, file: !408, line: 1199, type: !60)
!1540 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !1533, file: !408, line: 1202, type: !406)
!1541 = !DISubprogram(name: "element_getchildren", scope: !408, file: !408, line: 1239, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1240, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_getchildren, variables: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1547}
!1543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1541, file: !408, line: 1239, type: !419)
!1544 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1541, file: !408, line: 1239, type: !60)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1541, file: !408, line: 1241, type: !99)
!1546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !1541, file: !408, line: 1242, type: !60)
!1547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1548, file: !408, line: 1257, type: !60)
!1548 = distinct !DILexicalBlock(scope: !1549, file: !408, line: 1256, column: 47)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !408, line: 1256, column: 5)
!1550 = distinct !DILexicalBlock(scope: !1541, file: !408, line: 1256, column: 5)
!1551 = !DISubprogram(name: "element_items", scope: !408, file: !408, line: 1349, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1350, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_items, variables: !1552)
!1552 = !{!1553, !1554}
!1553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1551, file: !408, line: 1349, type: !419)
!1554 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1551, file: !408, line: 1349, type: !60)
!1555 = !DISubprogram(name: "element_keys", scope: !408, file: !408, line: 1361, type: !1210, isLocal: true, isDefinition: true, scopeLine: 1362, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_keys, variables: !1556)
!1556 = !{!1557, !1558}
!1557 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1555, file: !408, line: 1361, type: !419)
!1558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1555, file: !408, line: 1361, type: !60)
!1559 = !DISubprogram(name: "element_makeelement", scope: !408, file: !408, line: 1382, type: !191, isLocal: true, isDefinition: true, scopeLine: 1383, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @element_makeelement, variables: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1565, !1566, !1567}
!1561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1559, file: !408, line: 1382, type: !60)
!1562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1559, file: !408, line: 1382, type: !60)
!1563 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !1559, file: !408, line: 1382, type: !60)
!1564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "elem", scope: !1559, file: !408, line: 1384, type: !60)
!1565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1559, file: !408, line: 1386, type: !60)
!1566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !1559, file: !408, line: 1387, type: !60)
!1567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1568, file: !408, line: 1397, type: !60)
!1568 = distinct !DILexicalBlock(scope: !1559, file: !408, line: 1397, column: 8)
!1569 = !DISubprogram(name: "element_copy", scope: !408, file: !408, line: 690, type: !1210, isLocal: true, isDefinition: true, scopeLine: 691, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_copy, variables: !1570)
!1570 = !{!1571, !1572, !1573, !1574, !1575, !1577, !1579}
!1571 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1569, file: !408, line: 690, type: !419)
!1572 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1569, file: !408, line: 690, type: !60)
!1573 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1569, file: !408, line: 692, type: !99)
!1574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1569, file: !408, line: 693, type: !419)
!1575 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1576, file: !408, line: 703, type: !60)
!1576 = distinct !DILexicalBlock(scope: !1569, file: !408, line: 703, column: 8)
!1577 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1578, file: !408, line: 707, type: !60)
!1578 = distinct !DILexicalBlock(scope: !1569, file: !408, line: 707, column: 8)
!1579 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1580, file: !408, line: 713, type: !60)
!1580 = distinct !DILexicalBlock(scope: !1581, file: !408, line: 713, column: 16)
!1581 = distinct !DILexicalBlock(scope: !1582, file: !408, line: 712, column: 63)
!1582 = distinct !DILexicalBlock(scope: !1583, file: !408, line: 712, column: 13)
!1583 = distinct !DILexicalBlock(scope: !1584, file: !408, line: 711, column: 22)
!1584 = distinct !DILexicalBlock(scope: !1569, file: !408, line: 711, column: 9)
!1585 = !DISubprogram(name: "element_deepcopy", scope: !408, file: !408, line: 729, type: !1210, isLocal: true, isDefinition: true, scopeLine: 730, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_deepcopy, variables: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1603, !1605, !1607, !1609, !1611, !1617, !1619}
!1587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1585, file: !408, line: 729, type: !419)
!1588 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1585, file: !408, line: 729, type: !60)
!1589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1585, file: !408, line: 731, type: !99)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "element", scope: !1585, file: !408, line: 732, type: !419)
!1591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1585, file: !408, line: 733, type: !60)
!1592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !1585, file: !408, line: 734, type: !60)
!1593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text", scope: !1585, file: !408, line: 735, type: !60)
!1594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tail", scope: !1585, file: !408, line: 736, type: !60)
!1595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !1585, file: !408, line: 737, type: !60)
!1596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "memo", scope: !1585, file: !408, line: 739, type: !60)
!1597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1598, file: !408, line: 750, type: !60)
!1598 = distinct !DILexicalBlock(scope: !1599, file: !408, line: 750, column: 16)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !408, line: 749, column: 22)
!1600 = distinct !DILexicalBlock(scope: !1601, file: !408, line: 749, column: 13)
!1601 = distinct !DILexicalBlock(scope: !1602, file: !408, line: 747, column: 22)
!1602 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 747, column: 9)
!1603 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1604, file: !408, line: 760, type: !60)
!1604 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 760, column: 8)
!1605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1606, file: !408, line: 761, type: !60)
!1606 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 761, column: 8)
!1607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1608, file: !408, line: 769, type: !60)
!1608 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 769, column: 8)
!1609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1610, file: !408, line: 775, type: !60)
!1610 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 775, column: 8)
!1611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "child", scope: !1612, file: !408, line: 783, type: !60)
!1612 = distinct !DILexicalBlock(scope: !1613, file: !408, line: 782, column: 51)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !408, line: 782, column: 9)
!1614 = distinct !DILexicalBlock(scope: !1615, file: !408, line: 782, column: 9)
!1615 = distinct !DILexicalBlock(scope: !1616, file: !408, line: 778, column: 22)
!1616 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 778, column: 9)
!1617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1618, file: !408, line: 801, type: !60)
!1618 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 801, column: 8)
!1619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1620, file: !408, line: 809, type: !60)
!1620 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 809, column: 8)
!1621 = !DISubprogram(name: "deepcopy", scope: !408, file: !408, line: 130, type: !182, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @deepcopy, variables: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1627, !1628}
!1623 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "object", arg: 1, scope: !1621, file: !408, line: 130, type: !60)
!1624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "memo", arg: 2, scope: !1621, file: !408, line: 130, type: !60)
!1625 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1621, file: !408, line: 133, type: !60)
!1626 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1621, file: !408, line: 134, type: !60)
!1627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !1621, file: !408, line: 135, type: !406)
!1628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1629, file: !408, line: 149, type: !60)
!1629 = distinct !DILexicalBlock(scope: !1621, file: !408, line: 149, column: 8)
!1630 = !DISubprogram(name: "element_sizeof", scope: !408, file: !408, line: 814, type: !182, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @element_sizeof, variables: !1631)
!1631 = !{!1632, !1633, !1634, !1635}
!1632 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !1630, file: !408, line: 814, type: !60)
!1633 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1630, file: !408, line: 814, type: !60)
!1634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1630, file: !408, line: 816, type: !419)
!1635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1630, file: !408, line: 817, type: !66)
!1636 = !DISubprogram(name: "element_getstate", scope: !408, file: !408, line: 840, type: !811, isLocal: true, isDefinition: true, scopeLine: 841, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*)* @element_getstate, variables: !1637)
!1637 = !{!1638, !1639, !1640, !1641, !1642, !1643, !1647, !1651, !1656}
!1638 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1636, file: !408, line: 840, type: !419)
!1639 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1636, file: !408, line: 842, type: !99)
!1640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "noattrib", scope: !1636, file: !408, line: 842, type: !99)
!1641 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "instancedict", scope: !1636, file: !408, line: 843, type: !60)
!1642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "children", scope: !1636, file: !408, line: 843, type: !60)
!1643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "child", scope: !1644, file: !408, line: 850, type: !60)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !408, line: 849, column: 65)
!1645 = distinct !DILexicalBlock(scope: !1646, file: !408, line: 849, column: 5)
!1646 = distinct !DILexicalBlock(scope: !1636, file: !408, line: 849, column: 5)
!1647 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1648, file: !408, line: 872, type: !60)
!1648 = distinct !DILexicalBlock(scope: !1649, file: !408, line: 872, column: 12)
!1649 = distinct !DILexicalBlock(scope: !1650, file: !408, line: 871, column: 23)
!1650 = distinct !DILexicalBlock(scope: !1636, file: !408, line: 871, column: 9)
!1651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1652, file: !408, line: 877, type: !60)
!1652 = distinct !DILexicalBlock(scope: !1653, file: !408, line: 877, column: 16)
!1653 = distinct !DILexicalBlock(scope: !1654, file: !408, line: 876, column: 9)
!1654 = distinct !DILexicalBlock(scope: !1655, file: !408, line: 876, column: 9)
!1655 = distinct !DILexicalBlock(scope: !1650, file: !408, line: 875, column: 10)
!1656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1657, file: !408, line: 878, type: !60)
!1657 = distinct !DILexicalBlock(scope: !1655, file: !408, line: 878, column: 12)
!1658 = !DISubprogram(name: "element_setstate", scope: !408, file: !408, line: 981, type: !1210, isLocal: true, isDefinition: true, scopeLine: 982, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_setstate, variables: !1659)
!1659 = !{!1660, !1661}
!1660 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1658, file: !408, line: 981, type: !419)
!1661 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1658, file: !408, line: 981, type: !60)
!1662 = !DISubprogram(name: "element_setstate_from_Python", scope: !408, file: !408, line: 956, type: !1210, isLocal: true, isDefinition: true, scopeLine: 957, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*)* @element_setstate_from_Python, variables: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673}
!1664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1662, file: !408, line: 956, type: !419)
!1665 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !1662, file: !408, line: 956, type: !60)
!1666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1662, file: !408, line: 960, type: !60)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1662, file: !408, line: 961, type: !60)
!1668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !1662, file: !408, line: 961, type: !60)
!1669 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text", scope: !1662, file: !408, line: 961, type: !60)
!1670 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tail", scope: !1662, file: !408, line: 961, type: !60)
!1671 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "children", scope: !1662, file: !408, line: 961, type: !60)
!1672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !1662, file: !408, line: 962, type: !60)
!1673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1674, file: !408, line: 976, type: !60)
!1674 = distinct !DILexicalBlock(scope: !1662, file: !408, line: 976, column: 8)
!1675 = !DISubprogram(name: "element_setstate_from_attributes", scope: !408, file: !408, line: 885, type: !1676, isLocal: true, isDefinition: true, scopeLine: 891, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.ElementObject*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*)* @element_setstate_from_attributes, variables: !1678)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!60, !419, !60, !60, !60, !60, !60}
!1678 = !{!1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1689, !1693, !1697}
!1679 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1675, file: !408, line: 885, type: !419)
!1680 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag", arg: 2, scope: !1675, file: !408, line: 886, type: !60)
!1681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attrib", arg: 3, scope: !1675, file: !408, line: 887, type: !60)
!1682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 4, scope: !1675, file: !408, line: 888, type: !60)
!1683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tail", arg: 5, scope: !1675, file: !408, line: 889, type: !60)
!1684 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "children", arg: 6, scope: !1675, file: !408, line: 890, type: !60)
!1685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1675, file: !408, line: 892, type: !66)
!1686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nchildren", scope: !1675, file: !408, line: 892, type: !66)
!1687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1688, file: !408, line: 899, type: !60)
!1688 = distinct !DILexicalBlock(scope: !1675, file: !408, line: 899, column: 8)
!1689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1690, file: !408, line: 899, type: !60)
!1690 = distinct !DILexicalBlock(scope: !1691, file: !408, line: 899, column: 113)
!1691 = distinct !DILexicalBlock(scope: !1692, file: !408, line: 899, column: 82)
!1692 = distinct !DILexicalBlock(scope: !1688, file: !408, line: 899, column: 59)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1694, file: !408, line: 944, type: !60)
!1694 = distinct !DILexicalBlock(scope: !1695, file: !408, line: 944, column: 12)
!1695 = distinct !DILexicalBlock(scope: !1696, file: !408, line: 943, column: 17)
!1696 = distinct !DILexicalBlock(scope: !1675, file: !408, line: 943, column: 9)
!1697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1698, file: !408, line: 944, type: !60)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !408, line: 944, column: 137)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !408, line: 944, column: 96)
!1700 = distinct !DILexicalBlock(scope: !1694, file: !408, line: 944, column: 73)
!1701 = !DISubprogram(name: "element_init", scope: !408, file: !408, line: 372, type: !267, isLocal: true, isDefinition: true, scopeLine: 373, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @element_init, variables: !1702)
!1702 = !{!1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1718, !1724, !1726, !1729, !1731, !1733}
!1703 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1701, file: !408, line: 372, type: !60)
!1704 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1701, file: !408, line: 372, type: !60)
!1705 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1701, file: !408, line: 372, type: !60)
!1706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !1701, file: !408, line: 374, type: !60)
!1707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1701, file: !408, line: 375, type: !60)
!1708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !1701, file: !408, line: 376, type: !60)
!1709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self_elem", scope: !1701, file: !408, line: 377, type: !419)
!1710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1711, file: !408, line: 389, type: !60)
!1711 = distinct !DILexicalBlock(scope: !1712, file: !408, line: 389, column: 20)
!1712 = distinct !DILexicalBlock(scope: !1713, file: !408, line: 388, column: 50)
!1713 = distinct !DILexicalBlock(scope: !1714, file: !408, line: 388, column: 17)
!1714 = distinct !DILexicalBlock(scope: !1715, file: !408, line: 387, column: 19)
!1715 = distinct !DILexicalBlock(scope: !1716, file: !408, line: 387, column: 13)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !408, line: 382, column: 17)
!1717 = distinct !DILexicalBlock(scope: !1701, file: !408, line: 382, column: 9)
!1718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1719, file: !408, line: 404, type: !60)
!1719 = distinct !DILexicalBlock(scope: !1720, file: !408, line: 404, column: 16)
!1720 = distinct !DILexicalBlock(scope: !1721, file: !408, line: 403, column: 50)
!1721 = distinct !DILexicalBlock(scope: !1722, file: !408, line: 403, column: 13)
!1722 = distinct !DILexicalBlock(scope: !1723, file: !408, line: 402, column: 57)
!1723 = distinct !DILexicalBlock(scope: !1701, file: !408, line: 402, column: 9)
!1724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1725, file: !408, line: 410, type: !60)
!1725 = distinct !DILexicalBlock(scope: !1701, file: !408, line: 410, column: 8)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1727, file: !408, line: 410, type: !60)
!1727 = distinct !DILexicalBlock(scope: !1728, file: !408, line: 410, column: 98)
!1728 = distinct !DILexicalBlock(scope: !1725, file: !408, line: 410, column: 64)
!1729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1730, file: !408, line: 416, type: !60)
!1730 = distinct !DILexicalBlock(scope: !1701, file: !408, line: 416, column: 8)
!1731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1732, file: !408, line: 421, type: !60)
!1732 = distinct !DILexicalBlock(scope: !1701, file: !408, line: 421, column: 8)
!1733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1734, file: !408, line: 426, type: !60)
!1734 = distinct !DILexicalBlock(scope: !1701, file: !408, line: 426, column: 8)
!1735 = !DISubprogram(name: "element_new", scope: !408, file: !408, line: 313, type: !1077, isLocal: true, isDefinition: true, scopeLine: 314, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @element_new, variables: !1736)
!1736 = !{!1737, !1738, !1739, !1740}
!1737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1735, file: !408, line: 313, type: !1079)
!1738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1735, file: !408, line: 313, type: !60)
!1739 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1735, file: !408, line: 313, type: !60)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !1735, file: !408, line: 315, type: !419)
!1741 = !DISubprogram(name: "xmlparser_dealloc", scope: !408, file: !408, line: 3341, type: !1742, isLocal: true, isDefinition: true, scopeLine: 3342, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*)* @xmlparser_dealloc, variables: !1744)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{null, !567}
!1744 = !{!1745}
!1745 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1741, file: !408, line: 3341, type: !567)
!1746 = !DISubprogram(name: "xmlparser_getattro", scope: !408, file: !408, line: 3618, type: !1747, isLocal: true, isDefinition: true, scopeLine: 3619, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_getattro, variables: !1749)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!60, !567, !60}
!1749 = !{!1750, !1751, !1752}
!1750 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1746, file: !408, line: 3618, type: !567)
!1751 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nameobj", arg: 2, scope: !1746, file: !408, line: 3618, type: !60)
!1752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1753, file: !408, line: 3621, type: !60)
!1753 = distinct !DILexicalBlock(scope: !1754, file: !408, line: 3620, column: 81)
!1754 = distinct !DILexicalBlock(scope: !1746, file: !408, line: 3620, column: 9)
!1755 = !DISubprogram(name: "xmlparser_gc_traverse", scope: !408, file: !408, line: 3304, type: !1756, isLocal: true, isDefinition: true, scopeLine: 3305, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XMLParserObject*, i32 (%struct._object*, i8*)*, i8*)* @xmlparser_gc_traverse, variables: !1758)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!99, !567, !319, !145}
!1758 = !{!1759, !1760, !1761, !1762, !1766, !1770, !1774, !1778, !1782, !1786, !1790, !1794}
!1759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1755, file: !408, line: 3304, type: !567)
!1760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1755, file: !408, line: 3304, type: !319)
!1761 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1755, file: !408, line: 3304, type: !145)
!1762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1763, file: !408, line: 3306, type: !99)
!1763 = distinct !DILexicalBlock(scope: !1764, file: !408, line: 3306, column: 34)
!1764 = distinct !DILexicalBlock(scope: !1765, file: !408, line: 3306, column: 14)
!1765 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3306, column: 8)
!1766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1767, file: !408, line: 3307, type: !99)
!1767 = distinct !DILexicalBlock(scope: !1768, file: !408, line: 3307, column: 31)
!1768 = distinct !DILexicalBlock(scope: !1769, file: !408, line: 3307, column: 14)
!1769 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3307, column: 8)
!1770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1771, file: !408, line: 3308, type: !99)
!1771 = distinct !DILexicalBlock(scope: !1772, file: !408, line: 3308, column: 36)
!1772 = distinct !DILexicalBlock(scope: !1773, file: !408, line: 3308, column: 14)
!1773 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3308, column: 8)
!1774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1775, file: !408, line: 3309, type: !99)
!1775 = distinct !DILexicalBlock(scope: !1776, file: !408, line: 3309, column: 32)
!1776 = distinct !DILexicalBlock(scope: !1777, file: !408, line: 3309, column: 14)
!1777 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3309, column: 8)
!1778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1779, file: !408, line: 3310, type: !99)
!1779 = distinct !DILexicalBlock(scope: !1780, file: !408, line: 3310, column: 33)
!1780 = distinct !DILexicalBlock(scope: !1781, file: !408, line: 3310, column: 14)
!1781 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3310, column: 8)
!1782 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1783, file: !408, line: 3311, type: !99)
!1783 = distinct !DILexicalBlock(scope: !1784, file: !408, line: 3311, column: 34)
!1784 = distinct !DILexicalBlock(scope: !1785, file: !408, line: 3311, column: 14)
!1785 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3311, column: 8)
!1786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1787, file: !408, line: 3313, type: !99)
!1787 = distinct !DILexicalBlock(scope: !1788, file: !408, line: 3313, column: 28)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !408, line: 3313, column: 14)
!1789 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3313, column: 8)
!1790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1791, file: !408, line: 3314, type: !99)
!1791 = distinct !DILexicalBlock(scope: !1792, file: !408, line: 3314, column: 28)
!1792 = distinct !DILexicalBlock(scope: !1793, file: !408, line: 3314, column: 14)
!1793 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3314, column: 8)
!1794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1795, file: !408, line: 3315, type: !99)
!1795 = distinct !DILexicalBlock(scope: !1796, file: !408, line: 3315, column: 27)
!1796 = distinct !DILexicalBlock(scope: !1797, file: !408, line: 3315, column: 14)
!1797 = distinct !DILexicalBlock(scope: !1755, file: !408, line: 3315, column: 8)
!1798 = !DISubprogram(name: "xmlparser_gc_clear", scope: !408, file: !408, line: 3321, type: !1799, isLocal: true, isDefinition: true, scopeLine: 3322, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.XMLParserObject*)* @xmlparser_gc_clear, variables: !1801)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!99, !567}
!1801 = !{!1802, !1803, !1805, !1809, !1811, !1815, !1817, !1821, !1823, !1827, !1829, !1833, !1835, !1839, !1841, !1845, !1847, !1851, !1853, !1857, !1859}
!1802 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1798, file: !408, line: 3321, type: !567)
!1803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1804, file: !408, line: 3325, type: !60)
!1804 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3325, column: 8)
!1805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1806, file: !408, line: 3325, type: !60)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !408, line: 3325, column: 131)
!1807 = distinct !DILexicalBlock(scope: !1808, file: !408, line: 3325, column: 91)
!1808 = distinct !DILexicalBlock(scope: !1804, file: !408, line: 3325, column: 68)
!1809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1810, file: !408, line: 3326, type: !60)
!1810 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3326, column: 8)
!1811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1812, file: !408, line: 3326, type: !60)
!1812 = distinct !DILexicalBlock(scope: !1813, file: !408, line: 3326, column: 125)
!1813 = distinct !DILexicalBlock(scope: !1814, file: !408, line: 3326, column: 88)
!1814 = distinct !DILexicalBlock(scope: !1810, file: !408, line: 3326, column: 65)
!1815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1816, file: !408, line: 3327, type: !60)
!1816 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3327, column: 8)
!1817 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1818, file: !408, line: 3327, type: !60)
!1818 = distinct !DILexicalBlock(scope: !1819, file: !408, line: 3327, column: 135)
!1819 = distinct !DILexicalBlock(scope: !1820, file: !408, line: 3327, column: 93)
!1820 = distinct !DILexicalBlock(scope: !1816, file: !408, line: 3327, column: 70)
!1821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1822, file: !408, line: 3328, type: !60)
!1822 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3328, column: 8)
!1823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1824, file: !408, line: 3328, type: !60)
!1824 = distinct !DILexicalBlock(scope: !1825, file: !408, line: 3328, column: 127)
!1825 = distinct !DILexicalBlock(scope: !1826, file: !408, line: 3328, column: 89)
!1826 = distinct !DILexicalBlock(scope: !1822, file: !408, line: 3328, column: 66)
!1827 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1828, file: !408, line: 3329, type: !60)
!1828 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3329, column: 8)
!1829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1830, file: !408, line: 3329, type: !60)
!1830 = distinct !DILexicalBlock(scope: !1831, file: !408, line: 3329, column: 129)
!1831 = distinct !DILexicalBlock(scope: !1832, file: !408, line: 3329, column: 90)
!1832 = distinct !DILexicalBlock(scope: !1828, file: !408, line: 3329, column: 67)
!1833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1834, file: !408, line: 3330, type: !60)
!1834 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3330, column: 8)
!1835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1836, file: !408, line: 3330, type: !60)
!1836 = distinct !DILexicalBlock(scope: !1837, file: !408, line: 3330, column: 131)
!1837 = distinct !DILexicalBlock(scope: !1838, file: !408, line: 3330, column: 91)
!1838 = distinct !DILexicalBlock(scope: !1834, file: !408, line: 3330, column: 68)
!1839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1840, file: !408, line: 3331, type: !60)
!1840 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3331, column: 8)
!1841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1842, file: !408, line: 3331, type: !60)
!1842 = distinct !DILexicalBlock(scope: !1843, file: !408, line: 3331, column: 135)
!1843 = distinct !DILexicalBlock(scope: !1844, file: !408, line: 3331, column: 93)
!1844 = distinct !DILexicalBlock(scope: !1840, file: !408, line: 3331, column: 70)
!1845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1846, file: !408, line: 3333, type: !60)
!1846 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3333, column: 8)
!1847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1848, file: !408, line: 3333, type: !60)
!1848 = distinct !DILexicalBlock(scope: !1849, file: !408, line: 3333, column: 119)
!1849 = distinct !DILexicalBlock(scope: !1850, file: !408, line: 3333, column: 85)
!1850 = distinct !DILexicalBlock(scope: !1846, file: !408, line: 3333, column: 62)
!1851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1852, file: !408, line: 3334, type: !60)
!1852 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3334, column: 8)
!1853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1854, file: !408, line: 3334, type: !60)
!1854 = distinct !DILexicalBlock(scope: !1855, file: !408, line: 3334, column: 119)
!1855 = distinct !DILexicalBlock(scope: !1856, file: !408, line: 3334, column: 85)
!1856 = distinct !DILexicalBlock(scope: !1852, file: !408, line: 3334, column: 62)
!1857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1858, file: !408, line: 3335, type: !60)
!1858 = distinct !DILexicalBlock(scope: !1798, file: !408, line: 3335, column: 8)
!1859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1860, file: !408, line: 3335, type: !60)
!1860 = distinct !DILexicalBlock(scope: !1861, file: !408, line: 3335, column: 117)
!1861 = distinct !DILexicalBlock(scope: !1862, file: !408, line: 3335, column: 84)
!1862 = distinct !DILexicalBlock(scope: !1858, file: !408, line: 3335, column: 61)
!1863 = !DISubprogram(name: "xmlparser_feed", scope: !408, file: !408, line: 3399, type: !1747, isLocal: true, isDefinition: true, scopeLine: 3400, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_feed, variables: !1864)
!1864 = !{!1865, !1866, !1867, !1870, !1871, !1873}
!1865 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1863, file: !408, line: 3399, type: !567)
!1866 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1863, file: !408, line: 3399, type: !60)
!1867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data_len", scope: !1868, file: !408, line: 3404, type: !66)
!1868 = distinct !DILexicalBlock(scope: !1869, file: !408, line: 3403, column: 77)
!1869 = distinct !DILexicalBlock(scope: !1863, file: !408, line: 3403, column: 9)
!1870 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1868, file: !408, line: 3405, type: !84)
!1871 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1872, file: !408, line: 3417, type: !292)
!1872 = distinct !DILexicalBlock(scope: !1869, file: !408, line: 3416, column: 10)
!1873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1872, file: !408, line: 3418, type: !60)
!1874 = !DISubprogram(name: "expat_parse", scope: !408, file: !408, line: 3349, type: !1875, isLocal: true, isDefinition: true, scopeLine: 3350, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, i8*, i32, i32)* @expat_parse, variables: !1877)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!60, !567, !84, !99, !99}
!1877 = !{!1878, !1879, !1880, !1881, !1882}
!1878 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1874, file: !408, line: 3349, type: !567)
!1879 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !1874, file: !408, line: 3349, type: !84)
!1880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data_len", arg: 3, scope: !1874, file: !408, line: 3349, type: !99)
!1881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "final", arg: 4, scope: !1874, file: !408, line: 3349, type: !99)
!1882 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !1874, file: !408, line: 3351, type: !99)
!1883 = !DISubprogram(name: "expat_set_error", scope: !408, file: !408, line: 2822, type: !1884, isLocal: true, isDefinition: true, scopeLine: 2823, flags: DIFlagPrototyped, isOptimized: true, function: void (i32, i32, i32, i8*)* @expat_set_error, variables: !1886)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{null, !3, !99, !99, !107}
!1886 = !{!1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1898, !1902, !1906, !1908, !1910, !1914, !1918, !1920, !1922}
!1887 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "error_code", arg: 1, scope: !1883, file: !408, line: 2822, type: !3)
!1888 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "line", arg: 2, scope: !1883, file: !408, line: 2822, type: !99)
!1889 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "column", arg: 3, scope: !1883, file: !408, line: 2822, type: !99)
!1890 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "message", arg: 4, scope: !1883, file: !408, line: 2822, type: !107)
!1891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errmsg", scope: !1883, file: !408, line: 2824, type: !60)
!1892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error", scope: !1883, file: !408, line: 2824, type: !60)
!1893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "position", scope: !1883, file: !408, line: 2824, type: !60)
!1894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "code", scope: !1883, file: !408, line: 2824, type: !60)
!1895 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !1883, file: !408, line: 2825, type: !406)
!1896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1897, file: !408, line: 2834, type: !60)
!1897 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2834, column: 8)
!1898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1899, file: !408, line: 2841, type: !60)
!1899 = distinct !DILexicalBlock(scope: !1900, file: !408, line: 2841, column: 12)
!1900 = distinct !DILexicalBlock(scope: !1901, file: !408, line: 2840, column: 16)
!1901 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2840, column: 9)
!1902 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1903, file: !408, line: 2845, type: !60)
!1903 = distinct !DILexicalBlock(scope: !1904, file: !408, line: 2845, column: 12)
!1904 = distinct !DILexicalBlock(scope: !1905, file: !408, line: 2844, column: 60)
!1905 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2844, column: 9)
!1906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1907, file: !408, line: 2846, type: !60)
!1907 = distinct !DILexicalBlock(scope: !1904, file: !408, line: 2846, column: 12)
!1908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1909, file: !408, line: 2849, type: !60)
!1909 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2849, column: 8)
!1910 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1911, file: !408, line: 2853, type: !60)
!1911 = distinct !DILexicalBlock(scope: !1912, file: !408, line: 2853, column: 12)
!1912 = distinct !DILexicalBlock(scope: !1913, file: !408, line: 2852, column: 20)
!1913 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2852, column: 9)
!1914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1915, file: !408, line: 2857, type: !60)
!1915 = distinct !DILexicalBlock(scope: !1916, file: !408, line: 2857, column: 12)
!1916 = distinct !DILexicalBlock(scope: !1917, file: !408, line: 2856, column: 68)
!1917 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2856, column: 9)
!1918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1919, file: !408, line: 2858, type: !60)
!1919 = distinct !DILexicalBlock(scope: !1916, file: !408, line: 2858, column: 12)
!1920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1921, file: !408, line: 2861, type: !60)
!1921 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2861, column: 8)
!1922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1923, file: !408, line: 2864, type: !60)
!1923 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2864, column: 8)
!1924 = !DISubprogram(name: "xmlparser_close", scope: !408, file: !408, line: 3373, type: !1747, isLocal: true, isDefinition: true, scopeLine: 3374, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_close, variables: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1933}
!1926 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1924, file: !408, line: 3373, type: !567)
!1927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1924, file: !408, line: 3373, type: !60)
!1928 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1924, file: !408, line: 3377, type: !60)
!1929 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1930, file: !408, line: 3386, type: !60)
!1930 = distinct !DILexicalBlock(scope: !1931, file: !408, line: 3386, column: 12)
!1931 = distinct !DILexicalBlock(scope: !1932, file: !408, line: 3385, column: 72)
!1932 = distinct !DILexicalBlock(scope: !1924, file: !408, line: 3385, column: 9)
!1933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1934, file: !408, line: 3390, type: !60)
!1934 = distinct !DILexicalBlock(scope: !1935, file: !408, line: 3390, column: 12)
!1935 = distinct !DILexicalBlock(scope: !1936, file: !408, line: 3389, column: 34)
!1936 = distinct !DILexicalBlock(scope: !1932, file: !408, line: 3389, column: 14)
!1937 = !DISubprogram(name: "xmlparser_parse_whole", scope: !408, file: !408, line: 3433, type: !1747, isLocal: true, isDefinition: true, scopeLine: 3434, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_parse_whole, variables: !1938)
!1938 = !{!1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1953, !1959, !1961, !1965, !1969, !1971, !1975, !1977, !1979}
!1939 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1937, file: !408, line: 3433, type: !567)
!1940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1937, file: !408, line: 3433, type: !60)
!1941 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reader", scope: !1937, file: !408, line: 3436, type: !60)
!1942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1937, file: !408, line: 3437, type: !60)
!1943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1937, file: !408, line: 3438, type: !60)
!1944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1937, file: !408, line: 3439, type: !60)
!1945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fileobj", scope: !1937, file: !408, line: 3441, type: !60)
!1946 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1947, file: !408, line: 3456, type: !60)
!1947 = distinct !DILexicalBlock(scope: !1948, file: !408, line: 3456, column: 16)
!1948 = distinct !DILexicalBlock(scope: !1949, file: !408, line: 3454, column: 22)
!1949 = distinct !DILexicalBlock(scope: !1950, file: !408, line: 3454, column: 13)
!1950 = distinct !DILexicalBlock(scope: !1951, file: !408, line: 3450, column: 14)
!1951 = distinct !DILexicalBlock(scope: !1952, file: !408, line: 3450, column: 5)
!1952 = distinct !DILexicalBlock(scope: !1937, file: !408, line: 3450, column: 5)
!1953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1954, file: !408, line: 3463, type: !60)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !408, line: 3463, column: 20)
!1955 = distinct !DILexicalBlock(scope: !1956, file: !408, line: 3462, column: 89)
!1956 = distinct !DILexicalBlock(scope: !1957, file: !408, line: 3462, column: 17)
!1957 = distinct !DILexicalBlock(scope: !1958, file: !408, line: 3460, column: 68)
!1958 = distinct !DILexicalBlock(scope: !1950, file: !408, line: 3460, column: 13)
!1959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1960, file: !408, line: 3467, type: !60)
!1960 = distinct !DILexicalBlock(scope: !1957, file: !408, line: 3467, column: 16)
!1961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1962, file: !408, line: 3470, type: !60)
!1962 = distinct !DILexicalBlock(scope: !1963, file: !408, line: 3470, column: 20)
!1963 = distinct !DILexicalBlock(scope: !1964, file: !408, line: 3468, column: 24)
!1964 = distinct !DILexicalBlock(scope: !1957, file: !408, line: 3468, column: 17)
!1965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1966, file: !408, line: 3476, type: !60)
!1966 = distinct !DILexicalBlock(scope: !1967, file: !408, line: 3476, column: 16)
!1967 = distinct !DILexicalBlock(scope: !1968, file: !408, line: 3475, column: 131)
!1968 = distinct !DILexicalBlock(scope: !1958, file: !408, line: 3475, column: 18)
!1969 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1970, file: !408, line: 3484, type: !60)
!1970 = distinct !DILexicalBlock(scope: !1950, file: !408, line: 3484, column: 12)
!1971 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1972, file: !408, line: 3487, type: !60)
!1972 = distinct !DILexicalBlock(scope: !1973, file: !408, line: 3487, column: 16)
!1973 = distinct !DILexicalBlock(scope: !1974, file: !408, line: 3486, column: 19)
!1974 = distinct !DILexicalBlock(scope: !1950, file: !408, line: 3486, column: 13)
!1975 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1976, file: !408, line: 3490, type: !60)
!1976 = distinct !DILexicalBlock(scope: !1950, file: !408, line: 3490, column: 12)
!1977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1978, file: !408, line: 3494, type: !60)
!1978 = distinct !DILexicalBlock(scope: !1937, file: !408, line: 3494, column: 8)
!1979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1980, file: !408, line: 3499, type: !60)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !408, line: 3499, column: 12)
!1981 = distinct !DILexicalBlock(scope: !1982, file: !408, line: 3498, column: 79)
!1982 = distinct !DILexicalBlock(scope: !1937, file: !408, line: 3498, column: 9)
!1983 = !DISubprogram(name: "xmlparser_setevents", scope: !408, file: !408, line: 3513, type: !1747, isLocal: true, isDefinition: true, scopeLine: 3514, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_setevents, variables: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1995, !1998, !2000, !2004, !2006, !2010, !2012, !2016, !2018, !2022, !2026, !2027, !2031, !2034, !2035, !2037, !2038, !2041, !2042, !2044, !2045, !2048, !2051, !2054, !2055, !2057, !2058, !2061, !2064, !2067, !2068, !2070, !2071, !2074, !2077, !2080}
!1985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1983, file: !408, line: 3513, type: !567)
!1986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1983, file: !408, line: 3513, type: !60)
!1987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1983, file: !408, line: 3516, type: !66)
!1988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seqlen", scope: !1983, file: !408, line: 3516, type: !66)
!1989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "target", scope: !1983, file: !408, line: 3517, type: !462)
!1990 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "events_queue", scope: !1983, file: !408, line: 3519, type: !60)
!1991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "events_to_report", scope: !1983, file: !408, line: 3520, type: !60)
!1992 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "events_seq", scope: !1983, file: !408, line: 3521, type: !60)
!1993 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1994, file: !408, line: 3538, type: !60)
!1994 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3538, column: 8)
!1995 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1996, file: !408, line: 3538, type: !60)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !408, line: 3538, column: 106)
!1997 = distinct !DILexicalBlock(scope: !1994, file: !408, line: 3538, column: 72)
!1998 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1999, file: !408, line: 3542, type: !60)
!1999 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3542, column: 8)
!2000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2001, file: !408, line: 3542, type: !60)
!2001 = distinct !DILexicalBlock(scope: !2002, file: !408, line: 3542, column: 141)
!2002 = distinct !DILexicalBlock(scope: !2003, file: !408, line: 3542, column: 96)
!2003 = distinct !DILexicalBlock(scope: !1999, file: !408, line: 3542, column: 73)
!2004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2005, file: !408, line: 3543, type: !60)
!2005 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3543, column: 8)
!2006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2007, file: !408, line: 3543, type: !60)
!2007 = distinct !DILexicalBlock(scope: !2008, file: !408, line: 3543, column: 137)
!2008 = distinct !DILexicalBlock(scope: !2009, file: !408, line: 3543, column: 94)
!2009 = distinct !DILexicalBlock(scope: !2005, file: !408, line: 3543, column: 71)
!2010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2011, file: !408, line: 3544, type: !60)
!2011 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3544, column: 8)
!2012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2013, file: !408, line: 3544, type: !60)
!2013 = distinct !DILexicalBlock(scope: !2014, file: !408, line: 3544, column: 147)
!2014 = distinct !DILexicalBlock(scope: !2015, file: !408, line: 3544, column: 99)
!2015 = distinct !DILexicalBlock(scope: !2011, file: !408, line: 3544, column: 76)
!2016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2017, file: !408, line: 3545, type: !60)
!2017 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3545, column: 8)
!2018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2019, file: !408, line: 3545, type: !60)
!2019 = distinct !DILexicalBlock(scope: !2020, file: !408, line: 3545, column: 143)
!2020 = distinct !DILexicalBlock(scope: !2021, file: !408, line: 3545, column: 97)
!2021 = distinct !DILexicalBlock(scope: !2017, file: !408, line: 3545, column: 74)
!2022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "event_name_obj", scope: !2023, file: !408, line: 3560, type: !60)
!2023 = distinct !DILexicalBlock(scope: !2024, file: !408, line: 3559, column: 34)
!2024 = distinct !DILexicalBlock(scope: !2025, file: !408, line: 3559, column: 5)
!2025 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3559, column: 5)
!2026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "event_name", scope: !2023, file: !408, line: 3561, type: !107)
!2027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2028, file: !408, line: 3569, type: !60)
!2028 = distinct !DILexicalBlock(scope: !2029, file: !408, line: 3569, column: 16)
!2029 = distinct !DILexicalBlock(scope: !2030, file: !408, line: 3568, column: 39)
!2030 = distinct !DILexicalBlock(scope: !2023, file: !408, line: 3568, column: 13)
!2031 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !2032, file: !408, line: 3572, type: !150)
!2032 = distinct !DILexicalBlock(scope: !2033, file: !408, line: 3572, column: 35)
!2033 = distinct !DILexicalBlock(scope: !2030, file: !408, line: 3572, column: 20)
!2034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !2032, file: !408, line: 3572, type: !150)
!2035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !2036, file: !408, line: 3572, type: !416)
!2036 = distinct !DILexicalBlock(scope: !2032, file: !408, line: 3572, column: 1689)
!2037 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !2036, file: !408, line: 3572, type: !99)
!2038 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !2039, file: !408, line: 3575, type: !150)
!2039 = distinct !DILexicalBlock(scope: !2040, file: !408, line: 3575, column: 35)
!2040 = distinct !DILexicalBlock(scope: !2033, file: !408, line: 3575, column: 20)
!2041 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !2039, file: !408, line: 3575, type: !150)
!2042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !2043, file: !408, line: 3575, type: !416)
!2043 = distinct !DILexicalBlock(scope: !2039, file: !408, line: 3575, column: 1659)
!2044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !2043, file: !408, line: 3575, type: !99)
!2045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2046, file: !408, line: 3577, type: !60)
!2046 = distinct !DILexicalBlock(scope: !2047, file: !408, line: 3577, column: 16)
!2047 = distinct !DILexicalBlock(scope: !2040, file: !408, line: 3575, column: 2237)
!2048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2049, file: !408, line: 3577, type: !60)
!2049 = distinct !DILexicalBlock(scope: !2050, file: !408, line: 3577, column: 121)
!2050 = distinct !DILexicalBlock(scope: !2046, file: !408, line: 3577, column: 87)
!2051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !2052, file: !408, line: 3579, type: !150)
!2052 = distinct !DILexicalBlock(scope: !2053, file: !408, line: 3579, column: 35)
!2053 = distinct !DILexicalBlock(scope: !2040, file: !408, line: 3579, column: 20)
!2054 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !2052, file: !408, line: 3579, type: !150)
!2055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !2056, file: !408, line: 3579, type: !416)
!2056 = distinct !DILexicalBlock(scope: !2052, file: !408, line: 3579, column: 1734)
!2057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !2056, file: !408, line: 3579, type: !99)
!2058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2059, file: !408, line: 3581, type: !60)
!2059 = distinct !DILexicalBlock(scope: !2060, file: !408, line: 3581, column: 16)
!2060 = distinct !DILexicalBlock(scope: !2053, file: !408, line: 3579, column: 2337)
!2061 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2062, file: !408, line: 3581, type: !60)
!2062 = distinct !DILexicalBlock(scope: !2063, file: !408, line: 3581, column: 126)
!2063 = distinct !DILexicalBlock(scope: !2059, file: !408, line: 3581, column: 92)
!2064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !2065, file: !408, line: 3588, type: !150)
!2065 = distinct !DILexicalBlock(scope: !2066, file: !408, line: 3588, column: 35)
!2066 = distinct !DILexicalBlock(scope: !2053, file: !408, line: 3588, column: 20)
!2067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !2065, file: !408, line: 3588, type: !150)
!2068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !2069, file: !408, line: 3588, type: !416)
!2069 = distinct !DILexicalBlock(scope: !2065, file: !408, line: 3588, column: 1704)
!2070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !2069, file: !408, line: 3588, type: !99)
!2071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2072, file: !408, line: 3590, type: !60)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !408, line: 3590, column: 16)
!2073 = distinct !DILexicalBlock(scope: !2066, file: !408, line: 3588, column: 2297)
!2074 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2075, file: !408, line: 3590, type: !60)
!2075 = distinct !DILexicalBlock(scope: !2076, file: !408, line: 3590, column: 124)
!2076 = distinct !DILexicalBlock(scope: !2072, file: !408, line: 3590, column: 90)
!2077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2078, file: !408, line: 3598, type: !60)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !408, line: 3598, column: 16)
!2079 = distinct !DILexicalBlock(scope: !2066, file: !408, line: 3597, column: 16)
!2080 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2081, file: !408, line: 3604, type: !60)
!2081 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3604, column: 8)
!2082 = !DISubprogram(name: "expat_start_ns_handler", scope: !408, file: !408, line: 3032, type: !2083, isLocal: true, isDefinition: true, scopeLine: 3034, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*, i8*)* @expat_start_ns_handler, variables: !2085)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !567, !559, !559}
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2095, !2097}
!2086 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2082, file: !408, line: 3032, type: !567)
!2087 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prefix", arg: 2, scope: !2082, file: !408, line: 3032, type: !559)
!2088 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "uri", arg: 3, scope: !2082, file: !408, line: 3033, type: !559)
!2089 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sprefix", scope: !2082, file: !408, line: 3035, type: !60)
!2090 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "suri", scope: !2082, file: !408, line: 3036, type: !60)
!2091 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2092, file: !408, line: 3053, type: !60)
!2092 = distinct !DILexicalBlock(scope: !2093, file: !408, line: 3053, column: 12)
!2093 = distinct !DILexicalBlock(scope: !2094, file: !408, line: 3052, column: 19)
!2094 = distinct !DILexicalBlock(scope: !2082, file: !408, line: 3052, column: 9)
!2095 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2096, file: !408, line: 3061, type: !60)
!2096 = distinct !DILexicalBlock(scope: !2082, file: !408, line: 3061, column: 8)
!2097 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2098, file: !408, line: 3062, type: !60)
!2098 = distinct !DILexicalBlock(scope: !2082, file: !408, line: 3062, column: 8)
!2099 = !DISubprogram(name: "treebuilder_handle_namespace", scope: !408, file: !408, line: 2556, type: !2100, isLocal: true, isDefinition: true, scopeLine: 2558, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.TreeBuilderObject*, i32, %struct._object*, %struct._object*)* @treebuilder_handle_namespace, variables: !2102)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null, !462, !99, !60, !60}
!2102 = !{!2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2114, !2117}
!2103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2099, file: !408, line: 2556, type: !462)
!2104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 2, scope: !2099, file: !408, line: 2556, type: !99)
!2105 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prefix", arg: 3, scope: !2099, file: !408, line: 2557, type: !60)
!2106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "uri", arg: 4, scope: !2099, file: !408, line: 2557, type: !60)
!2107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2099, file: !408, line: 2559, type: !60)
!2108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "action", scope: !2099, file: !408, line: 2560, type: !60)
!2109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parcel", scope: !2099, file: !408, line: 2561, type: !60)
!2110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2111, file: !408, line: 2589, type: !60)
!2111 = distinct !DILexicalBlock(scope: !2112, file: !408, line: 2589, column: 12)
!2112 = distinct !DILexicalBlock(scope: !2113, file: !408, line: 2585, column: 14)
!2113 = distinct !DILexicalBlock(scope: !2099, file: !408, line: 2585, column: 9)
!2114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2115, file: !408, line: 2592, type: !60)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !408, line: 2592, column: 12)
!2116 = distinct !DILexicalBlock(scope: !2113, file: !408, line: 2591, column: 10)
!2117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2118, file: !408, line: 2593, type: !60)
!2118 = distinct !DILexicalBlock(scope: !2116, file: !408, line: 2593, column: 12)
!2119 = !DISubprogram(name: "expat_end_ns_handler", scope: !408, file: !408, line: 3066, type: !2120, isLocal: true, isDefinition: true, scopeLine: 3067, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*)* @expat_end_ns_handler, variables: !2122)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{null, !567, !559}
!2122 = !{!2123, !2124}
!2123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2119, file: !408, line: 3066, type: !567)
!2124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prefix_in", arg: 2, scope: !2119, file: !408, line: 3066, type: !559)
!2125 = !DISubprogram(name: "xmlparser_doctype", scope: !408, file: !408, line: 3507, type: !1747, isLocal: true, isDefinition: true, scopeLine: 3508, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, %struct._object*)* @xmlparser_doctype, variables: !2126)
!2126 = !{!2127, !2128}
!2127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2125, file: !408, line: 3507, type: !567)
!2128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2125, file: !408, line: 3507, type: !60)
!2129 = !DISubprogram(name: "xmlparser_init", scope: !408, file: !408, line: 3213, type: !267, isLocal: true, isDefinition: true, scopeLine: 3214, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @xmlparser_init, variables: !2130)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2142, !2146, !2150, !2154, !2156, !2160, !2166, !2170, !2172}
!2131 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2129, file: !408, line: 3213, type: !60)
!2132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2129, file: !408, line: 3213, type: !60)
!2133 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2129, file: !408, line: 3213, type: !60)
!2134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self_xp", scope: !2129, file: !408, line: 3215, type: !567)
!2135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "target", scope: !2129, file: !408, line: 3216, type: !60)
!2136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "html", scope: !2129, file: !408, line: 3216, type: !60)
!2137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding", scope: !2129, file: !408, line: 3217, type: !107)
!2138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2139, file: !408, line: 3231, type: !60)
!2139 = distinct !DILexicalBlock(scope: !2140, file: !408, line: 3231, column: 12)
!2140 = distinct !DILexicalBlock(scope: !2141, file: !408, line: 3230, column: 26)
!2141 = distinct !DILexicalBlock(scope: !2129, file: !408, line: 3230, column: 9)
!2142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2143, file: !408, line: 3231, type: !60)
!2143 = distinct !DILexicalBlock(scope: !2144, file: !408, line: 3231, column: 129)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !408, line: 3231, column: 92)
!2145 = distinct !DILexicalBlock(scope: !2139, file: !408, line: 3231, column: 69)
!2146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2147, file: !408, line: 3237, type: !60)
!2147 = distinct !DILexicalBlock(scope: !2148, file: !408, line: 3237, column: 12)
!2148 = distinct !DILexicalBlock(scope: !2149, file: !408, line: 3236, column: 27)
!2149 = distinct !DILexicalBlock(scope: !2129, file: !408, line: 3236, column: 9)
!2150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2151, file: !408, line: 3237, type: !60)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !408, line: 3237, column: 129)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !408, line: 3237, column: 92)
!2153 = distinct !DILexicalBlock(scope: !2147, file: !408, line: 3237, column: 69)
!2154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2155, file: !408, line: 3238, type: !60)
!2155 = distinct !DILexicalBlock(scope: !2148, file: !408, line: 3238, column: 12)
!2156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2157, file: !408, line: 3238, type: !60)
!2157 = distinct !DILexicalBlock(scope: !2158, file: !408, line: 3238, column: 127)
!2158 = distinct !DILexicalBlock(scope: !2159, file: !408, line: 3238, column: 91)
!2159 = distinct !DILexicalBlock(scope: !2155, file: !408, line: 3238, column: 68)
!2160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2161, file: !408, line: 3248, type: !60)
!2161 = distinct !DILexicalBlock(scope: !2162, file: !408, line: 3248, column: 16)
!2162 = distinct !DILexicalBlock(scope: !2163, file: !408, line: 3247, column: 22)
!2163 = distinct !DILexicalBlock(scope: !2164, file: !408, line: 3247, column: 13)
!2164 = distinct !DILexicalBlock(scope: !2165, file: !408, line: 3245, column: 12)
!2165 = distinct !DILexicalBlock(scope: !2129, file: !408, line: 3243, column: 9)
!2166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2167, file: !408, line: 3248, type: !60)
!2167 = distinct !DILexicalBlock(scope: !2168, file: !408, line: 3248, column: 133)
!2168 = distinct !DILexicalBlock(scope: !2169, file: !408, line: 3248, column: 96)
!2169 = distinct !DILexicalBlock(scope: !2161, file: !408, line: 3248, column: 73)
!2170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2171, file: !408, line: 3249, type: !60)
!2171 = distinct !DILexicalBlock(scope: !2162, file: !408, line: 3249, column: 16)
!2172 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2173, file: !408, line: 3249, type: !60)
!2173 = distinct !DILexicalBlock(scope: !2174, file: !408, line: 3249, column: 131)
!2174 = distinct !DILexicalBlock(scope: !2175, file: !408, line: 3249, column: 95)
!2175 = distinct !DILexicalBlock(scope: !2171, file: !408, line: 3249, column: 72)
!2176 = !DISubprogram(name: "expat_start_handler", scope: !408, file: !408, line: 2916, type: !2177, isLocal: true, isDefinition: true, scopeLine: 2918, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*, i8**)* @expat_start_handler, variables: !2179)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{null, !567, !559, !590}
!2179 = !{!2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2191, !2192, !2196, !2199, !2201, !2204, !2206, !2208, !2210, !2214, !2216, !2218, !2220}
!2180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2176, file: !408, line: 2916, type: !567)
!2181 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag_in", arg: 2, scope: !2176, file: !408, line: 2916, type: !559)
!2182 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "attrib_in", arg: 3, scope: !2176, file: !408, line: 2917, type: !590)
!2183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2176, file: !408, line: 2919, type: !60)
!2184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !2176, file: !408, line: 2920, type: !60)
!2185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "attrib", scope: !2176, file: !408, line: 2921, type: !60)
!2186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ok", scope: !2176, file: !408, line: 2922, type: !99)
!2187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2188, file: !408, line: 2938, type: !60)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !408, line: 2937, column: 46)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !408, line: 2933, column: 23)
!2190 = distinct !DILexicalBlock(scope: !2176, file: !408, line: 2933, column: 9)
!2191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2188, file: !408, line: 2939, type: !60)
!2192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2193, file: !408, line: 2941, type: !60)
!2193 = distinct !DILexicalBlock(scope: !2194, file: !408, line: 2941, column: 20)
!2194 = distinct !DILexicalBlock(scope: !2195, file: !408, line: 2940, column: 33)
!2195 = distinct !DILexicalBlock(scope: !2188, file: !408, line: 2940, column: 17)
!2196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2197, file: !408, line: 2941, type: !60)
!2197 = distinct !DILexicalBlock(scope: !2198, file: !408, line: 2941, column: 109)
!2198 = distinct !DILexicalBlock(scope: !2193, file: !408, line: 2941, column: 75)
!2199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2200, file: !408, line: 2942, type: !60)
!2200 = distinct !DILexicalBlock(scope: !2194, file: !408, line: 2942, column: 20)
!2201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2202, file: !408, line: 2942, type: !60)
!2202 = distinct !DILexicalBlock(scope: !2203, file: !408, line: 2942, column: 107)
!2203 = distinct !DILexicalBlock(scope: !2200, file: !408, line: 2942, column: 73)
!2204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2205, file: !408, line: 2943, type: !60)
!2205 = distinct !DILexicalBlock(scope: !2194, file: !408, line: 2943, column: 20)
!2206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2207, file: !408, line: 2947, type: !60)
!2207 = distinct !DILexicalBlock(scope: !2188, file: !408, line: 2947, column: 16)
!2208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2209, file: !408, line: 2948, type: !60)
!2209 = distinct !DILexicalBlock(scope: !2188, file: !408, line: 2948, column: 16)
!2210 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2211, file: !408, line: 2950, type: !60)
!2211 = distinct !DILexicalBlock(scope: !2212, file: !408, line: 2950, column: 20)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !408, line: 2949, column: 25)
!2213 = distinct !DILexicalBlock(scope: !2188, file: !408, line: 2949, column: 17)
!2214 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2215, file: !408, line: 2972, type: !60)
!2215 = distinct !DILexicalBlock(scope: !2176, file: !408, line: 2972, column: 8)
!2216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2217, file: !408, line: 2973, type: !60)
!2217 = distinct !DILexicalBlock(scope: !2176, file: !408, line: 2973, column: 8)
!2218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2219, file: !408, line: 2975, type: !60)
!2219 = distinct !DILexicalBlock(scope: !2176, file: !408, line: 2975, column: 8)
!2220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2221, file: !408, line: 2975, type: !60)
!2221 = distinct !DILexicalBlock(scope: !2222, file: !408, line: 2975, column: 95)
!2222 = distinct !DILexicalBlock(scope: !2219, file: !408, line: 2975, column: 61)
!2223 = !DISubprogram(name: "makeuniversal", scope: !408, file: !408, line: 2749, type: !2224, isLocal: true, isDefinition: true, scopeLine: 2750, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.XMLParserObject*, i8*)* @makeuniversal, variables: !2226)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!60, !567, !84}
!2226 = !{!2227, !2228, !2229, !2230, !2231, !2232, !2235, !2236, !2237, !2243, !2245, !2249, !2253, !2255}
!2227 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2223, file: !408, line: 2749, type: !567)
!2228 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "string", arg: 2, scope: !2223, file: !408, line: 2749, type: !84)
!2229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2223, file: !408, line: 2754, type: !66)
!2230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2223, file: !408, line: 2755, type: !60)
!2231 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2223, file: !408, line: 2756, type: !60)
!2232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !2233, file: !408, line: 2771, type: !60)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !408, line: 2767, column: 12)
!2234 = distinct !DILexicalBlock(scope: !2223, file: !408, line: 2765, column: 9)
!2235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !2233, file: !408, line: 2772, type: !107)
!2236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2233, file: !408, line: 2773, type: !66)
!2237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2238, file: !408, line: 2783, type: !60)
!2238 = distinct !DILexicalBlock(scope: !2239, file: !408, line: 2783, column: 20)
!2239 = distinct !DILexicalBlock(scope: !2240, file: !408, line: 2782, column: 36)
!2240 = distinct !DILexicalBlock(scope: !2241, file: !408, line: 2782, column: 17)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !408, line: 2779, column: 24)
!2242 = distinct !DILexicalBlock(scope: !2233, file: !408, line: 2779, column: 13)
!2243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2244, file: !408, line: 2799, type: !60)
!2244 = distinct !DILexicalBlock(scope: !2233, file: !408, line: 2799, column: 12)
!2245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2246, file: !408, line: 2801, type: !60)
!2246 = distinct !DILexicalBlock(scope: !2247, file: !408, line: 2801, column: 16)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !408, line: 2800, column: 21)
!2248 = distinct !DILexicalBlock(scope: !2233, file: !408, line: 2800, column: 13)
!2249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2250, file: !408, line: 2807, type: !60)
!2250 = distinct !DILexicalBlock(scope: !2251, file: !408, line: 2807, column: 16)
!2251 = distinct !DILexicalBlock(scope: !2252, file: !408, line: 2806, column: 58)
!2252 = distinct !DILexicalBlock(scope: !2233, file: !408, line: 2806, column: 13)
!2253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2254, file: !408, line: 2808, type: !60)
!2254 = distinct !DILexicalBlock(scope: !2251, file: !408, line: 2808, column: 16)
!2255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2256, file: !408, line: 2813, type: !60)
!2256 = distinct !DILexicalBlock(scope: !2223, file: !408, line: 2813, column: 8)
!2257 = !DISubprogram(name: "expat_end_handler", scope: !408, file: !408, line: 3006, type: !2120, isLocal: true, isDefinition: true, scopeLine: 3007, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*)* @expat_end_handler, variables: !2258)
!2258 = !{!2259, !2260, !2261, !2262, !2263, !2270, !2272}
!2259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2257, file: !408, line: 3006, type: !567)
!2260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tag_in", arg: 2, scope: !2257, file: !408, line: 3006, type: !559)
!2261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tag", scope: !2257, file: !408, line: 3008, type: !60)
!2262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2257, file: !408, line: 3009, type: !60)
!2263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2264, file: !408, line: 3024, type: !60)
!2264 = distinct !DILexicalBlock(scope: !2265, file: !408, line: 3024, column: 16)
!2265 = distinct !DILexicalBlock(scope: !2266, file: !408, line: 3022, column: 18)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !408, line: 3022, column: 13)
!2267 = distinct !DILexicalBlock(scope: !2268, file: !408, line: 3020, column: 32)
!2268 = distinct !DILexicalBlock(scope: !2269, file: !408, line: 3020, column: 14)
!2269 = distinct !DILexicalBlock(scope: !2257, file: !408, line: 3014, column: 9)
!2270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2271, file: !408, line: 3028, type: !60)
!2271 = distinct !DILexicalBlock(scope: !2257, file: !408, line: 3028, column: 8)
!2272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2273, file: !408, line: 3028, type: !60)
!2273 = distinct !DILexicalBlock(scope: !2274, file: !408, line: 3028, column: 95)
!2274 = distinct !DILexicalBlock(scope: !2271, file: !408, line: 3028, column: 61)
!2275 = !DISubprogram(name: "expat_default_handler", scope: !408, file: !408, line: 2871, type: !2276, isLocal: true, isDefinition: true, scopeLine: 2873, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*, i32)* @expat_default_handler, variables: !2278)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{null, !567, !559, !99}
!2278 = !{!2279, !2280, !2281, !2282, !2283, !2284, !2285, !2289, !2292, !2298}
!2279 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2275, file: !408, line: 2871, type: !567)
!2280 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data_in", arg: 2, scope: !2275, file: !408, line: 2871, type: !559)
!2281 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data_len", arg: 3, scope: !2275, file: !408, line: 2872, type: !99)
!2282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2275, file: !408, line: 2874, type: !60)
!2283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2275, file: !408, line: 2875, type: !60)
!2284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2275, file: !408, line: 2876, type: !60)
!2285 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2286, file: !408, line: 2899, type: !60)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !408, line: 2899, column: 12)
!2287 = distinct !DILexicalBlock(scope: !2288, file: !408, line: 2890, column: 16)
!2288 = distinct !DILexicalBlock(scope: !2275, file: !408, line: 2890, column: 9)
!2289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2290, file: !408, line: 2899, type: !60)
!2290 = distinct !DILexicalBlock(scope: !2291, file: !408, line: 2899, column: 99)
!2291 = distinct !DILexicalBlock(scope: !2286, file: !408, line: 2899, column: 65)
!2292 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "message", scope: !2293, file: !408, line: 2902, type: !2295)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !408, line: 2900, column: 35)
!2294 = distinct !DILexicalBlock(scope: !2288, file: !408, line: 2900, column: 16)
!2295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 1024, align: 8, elements: !2296)
!2296 = !{!2297}
!2297 = !DISubrange(count: 128)
!2298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2299, file: !408, line: 2912, type: !60)
!2299 = distinct !DILexicalBlock(scope: !2275, file: !408, line: 2912, column: 8)
!2300 = !DISubprogram(name: "expat_data_handler", scope: !408, file: !408, line: 2979, type: !2276, isLocal: true, isDefinition: true, scopeLine: 2981, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*, i32)* @expat_data_handler, variables: !2301)
!2301 = !{!2302, !2303, !2304, !2305, !2306, !2307, !2309, !2311}
!2302 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2300, file: !408, line: 2979, type: !567)
!2303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data_in", arg: 2, scope: !2300, file: !408, line: 2979, type: !559)
!2304 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data_len", arg: 3, scope: !2300, file: !408, line: 2980, type: !99)
!2305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !2300, file: !408, line: 2982, type: !60)
!2306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2300, file: !408, line: 2983, type: !60)
!2307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2308, file: !408, line: 3000, type: !60)
!2308 = distinct !DILexicalBlock(scope: !2300, file: !408, line: 3000, column: 8)
!2309 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2310, file: !408, line: 3002, type: !60)
!2310 = distinct !DILexicalBlock(scope: !2300, file: !408, line: 3002, column: 8)
!2311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2312, file: !408, line: 3002, type: !60)
!2312 = distinct !DILexicalBlock(scope: !2313, file: !408, line: 3002, column: 95)
!2313 = distinct !DILexicalBlock(scope: !2310, file: !408, line: 3002, column: 61)
!2314 = !DISubprogram(name: "expat_comment_handler", scope: !408, file: !408, line: 3077, type: !2120, isLocal: true, isDefinition: true, scopeLine: 3078, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*)* @expat_comment_handler, variables: !2315)
!2315 = !{!2316, !2317, !2318, !2319, !2320, !2326, !2329}
!2316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2314, file: !408, line: 3077, type: !567)
!2317 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "comment_in", arg: 2, scope: !2314, file: !408, line: 3077, type: !559)
!2318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "comment", scope: !2314, file: !408, line: 3079, type: !60)
!2319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2314, file: !408, line: 3080, type: !60)
!2320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2321, file: !408, line: 3089, type: !60)
!2321 = distinct !DILexicalBlock(scope: !2322, file: !408, line: 3089, column: 16)
!2322 = distinct !DILexicalBlock(scope: !2323, file: !408, line: 3087, column: 22)
!2323 = distinct !DILexicalBlock(scope: !2324, file: !408, line: 3087, column: 13)
!2324 = distinct !DILexicalBlock(scope: !2325, file: !408, line: 3085, column: 31)
!2325 = distinct !DILexicalBlock(scope: !2314, file: !408, line: 3085, column: 9)
!2326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2327, file: !408, line: 3089, type: !60)
!2327 = distinct !DILexicalBlock(scope: !2328, file: !408, line: 3089, column: 103)
!2328 = distinct !DILexicalBlock(scope: !2321, file: !408, line: 3089, column: 69)
!2329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2330, file: !408, line: 3090, type: !60)
!2330 = distinct !DILexicalBlock(scope: !2322, file: !408, line: 3090, column: 16)
!2331 = !DISubprogram(name: "expat_pi_handler", scope: !408, file: !408, line: 3171, type: !2083, isLocal: true, isDefinition: true, scopeLine: 3173, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*, i8*)* @expat_pi_handler, variables: !2332)
!2332 = !{!2333, !2334, !2335, !2336, !2337, !2338, !2339, !2345, !2348, !2350, !2352, !2355, !2358, !2360}
!2333 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2331, file: !408, line: 3171, type: !567)
!2334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "target_in", arg: 2, scope: !2331, file: !408, line: 3171, type: !559)
!2335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data_in", arg: 3, scope: !2331, file: !408, line: 3172, type: !559)
!2336 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "target", scope: !2331, file: !408, line: 3174, type: !60)
!2337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !2331, file: !408, line: 3175, type: !60)
!2338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2331, file: !408, line: 3176, type: !60)
!2339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2340, file: !408, line: 3186, type: !60)
!2340 = distinct !DILexicalBlock(scope: !2341, file: !408, line: 3186, column: 16)
!2341 = distinct !DILexicalBlock(scope: !2342, file: !408, line: 3184, column: 29)
!2342 = distinct !DILexicalBlock(scope: !2343, file: !408, line: 3184, column: 13)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !408, line: 3181, column: 26)
!2344 = distinct !DILexicalBlock(scope: !2331, file: !408, line: 3181, column: 9)
!2345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2346, file: !408, line: 3186, type: !60)
!2346 = distinct !DILexicalBlock(scope: !2347, file: !408, line: 3186, column: 103)
!2347 = distinct !DILexicalBlock(scope: !2340, file: !408, line: 3186, column: 69)
!2348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2349, file: !408, line: 3187, type: !60)
!2349 = distinct !DILexicalBlock(scope: !2341, file: !408, line: 3187, column: 16)
!2350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2351, file: !408, line: 3188, type: !60)
!2351 = distinct !DILexicalBlock(scope: !2341, file: !408, line: 3188, column: 16)
!2352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2353, file: !408, line: 3190, type: !60)
!2353 = distinct !DILexicalBlock(scope: !2354, file: !408, line: 3190, column: 16)
!2354 = distinct !DILexicalBlock(scope: !2342, file: !408, line: 3189, column: 16)
!2355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2356, file: !408, line: 3190, type: !60)
!2356 = distinct !DILexicalBlock(scope: !2357, file: !408, line: 3190, column: 104)
!2357 = distinct !DILexicalBlock(scope: !2353, file: !408, line: 3190, column: 70)
!2358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2359, file: !408, line: 3191, type: !60)
!2359 = distinct !DILexicalBlock(scope: !2354, file: !408, line: 3191, column: 16)
!2360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2361, file: !408, line: 3191, type: !60)
!2361 = distinct !DILexicalBlock(scope: !2362, file: !408, line: 3191, column: 106)
!2362 = distinct !DILexicalBlock(scope: !2359, file: !408, line: 3191, column: 72)
!2363 = !DISubprogram(name: "expat_start_doctype_handler", scope: !408, file: !408, line: 3096, type: !2364, isLocal: true, isDefinition: true, scopeLine: 3101, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.XMLParserObject*, i8*, i8*, i8*, i32)* @expat_start_doctype_handler, variables: !2366)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{null, !567, !559, !559, !559, !99}
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2384, !2390, !2392, !2396, !2400, !2406, !2410, !2412, !2415, !2417, !2419}
!2367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2363, file: !408, line: 3096, type: !567)
!2368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "doctype_name", arg: 2, scope: !2363, file: !408, line: 3097, type: !559)
!2369 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sysid", arg: 3, scope: !2363, file: !408, line: 3098, type: !559)
!2370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pubid", arg: 4, scope: !2363, file: !408, line: 3099, type: !559)
!2371 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "has_internal_subset", arg: 5, scope: !2363, file: !408, line: 3100, type: !99)
!2372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self_pyobj", scope: !2363, file: !408, line: 3102, type: !60)
!2373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "doctype_name_obj", scope: !2363, file: !408, line: 3103, type: !60)
!2374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sysid_obj", scope: !2363, file: !408, line: 3103, type: !60)
!2375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pubid_obj", scope: !2363, file: !408, line: 3103, type: !60)
!2376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parser_doctype", scope: !2363, file: !408, line: 3104, type: !60)
!2377 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2363, file: !408, line: 3105, type: !60)
!2378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2379, file: !408, line: 3117, type: !60)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !408, line: 3117, column: 16)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !408, line: 3116, column: 25)
!2381 = distinct !DILexicalBlock(scope: !2382, file: !408, line: 3116, column: 13)
!2382 = distinct !DILexicalBlock(scope: !2383, file: !408, line: 3114, column: 16)
!2383 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3114, column: 9)
!2384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2385, file: !408, line: 3128, type: !60)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !408, line: 3128, column: 16)
!2386 = distinct !DILexicalBlock(scope: !2387, file: !408, line: 3127, column: 25)
!2387 = distinct !DILexicalBlock(scope: !2388, file: !408, line: 3127, column: 13)
!2388 = distinct !DILexicalBlock(scope: !2389, file: !408, line: 3125, column: 16)
!2389 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3125, column: 9)
!2390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2391, file: !408, line: 3129, type: !60)
!2391 = distinct !DILexicalBlock(scope: !2386, file: !408, line: 3129, column: 16)
!2392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2393, file: !408, line: 3141, type: !60)
!2393 = distinct !DILexicalBlock(scope: !2394, file: !408, line: 3141, column: 12)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !408, line: 3138, column: 31)
!2395 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3138, column: 9)
!2396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2397, file: !408, line: 3141, type: !60)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !408, line: 3141, column: 105)
!2398 = distinct !DILexicalBlock(scope: !2399, file: !408, line: 3141, column: 80)
!2399 = distinct !DILexicalBlock(scope: !2393, file: !408, line: 3141, column: 57)
!2400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !2401, file: !408, line: 3159, type: !60)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !408, line: 3159, column: 16)
!2402 = distinct !DILexicalBlock(scope: !2403, file: !408, line: 3150, column: 73)
!2403 = distinct !DILexicalBlock(scope: !2404, file: !408, line: 3150, column: 13)
!2404 = distinct !DILexicalBlock(scope: !2405, file: !408, line: 3149, column: 25)
!2405 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3149, column: 9)
!2406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2407, file: !408, line: 3159, type: !60)
!2407 = distinct !DILexicalBlock(scope: !2408, file: !408, line: 3159, column: 109)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !408, line: 3159, column: 84)
!2409 = distinct !DILexicalBlock(scope: !2401, file: !408, line: 3159, column: 61)
!2410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !2411, file: !408, line: 3164, type: !60)
!2411 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3164, column: 8)
!2412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2413, file: !408, line: 3164, type: !60)
!2413 = distinct !DILexicalBlock(scope: !2414, file: !408, line: 3164, column: 106)
!2414 = distinct !DILexicalBlock(scope: !2411, file: !408, line: 3164, column: 72)
!2415 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2416, file: !408, line: 3165, type: !60)
!2416 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3165, column: 8)
!2417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2418, file: !408, line: 3166, type: !60)
!2418 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3166, column: 8)
!2419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2420, file: !408, line: 3167, type: !60)
!2420 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3167, column: 8)
!2421 = !DISubprogram(name: "xmlparser_new", scope: !408, file: !408, line: 3199, type: !1077, isLocal: true, isDefinition: true, scopeLine: 3200, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @xmlparser_new, variables: !2422)
!2422 = !{!2423, !2424, !2425, !2426}
!2423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2421, file: !408, line: 3199, type: !1079)
!2424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2421, file: !408, line: 3199, type: !60)
!2425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2421, file: !408, line: 3199, type: !60)
!2426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2421, file: !408, line: 3201, type: !567)
!2427 = !{!2428, !2540, !2563, !2567, !2568, !2569, !2573, !2574, !2575, !2576, !2578, !2579, !2580, !2581, !2585, !2589, !2590, !2591, !2592, !2594, !2595, !2596, !2597, !2598, !2599, !2603, !2604, !2606, !2607}
!2428 = !DIGlobalVariable(name: "expat_capi", scope: !0, file: !408, line: 2716, type: !2429, isLocal: true, isDefinition: true, variable: %struct.PyExpat_CAPI** @expat_capi)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64, align: 64)
!2430 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyExpat_CAPI", file: !2431, line: 9, size: 1344, align: 64, elements: !2432)
!2431 = !DIFile(filename: "./Include/pyexpat.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2445, !2449, !2454, !2455, !2459, !2477, !2481, !2485, !2489, !2493, !2497, !2501, !2505, !2527, !2531, !2535, !2539}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2430, file: !2431, line: 11, baseType: !107, size: 64, align: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2430, file: !2431, line: 12, baseType: !99, size: 32, align: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "MAJOR_VERSION", scope: !2430, file: !2431, line: 13, baseType: !99, size: 32, align: 32, offset: 96)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "MINOR_VERSION", scope: !2430, file: !2431, line: 14, baseType: !99, size: 32, align: 32, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "MICRO_VERSION", scope: !2430, file: !2431, line: 15, baseType: !99, size: 32, align: 32, offset: 160)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorString", scope: !2430, file: !2431, line: 18, baseType: !2439, size: 64, align: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64, align: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!2442, !3}
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64, align: 64)
!2443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_LChar", file: !562, line: 99, baseType: !86)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "GetErrorCode", scope: !2430, file: !2431, line: 19, baseType: !2446, size: 64, align: 64, offset: 256)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64, align: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!3, !573}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "GetErrorColumnNumber", scope: !2430, file: !2431, line: 20, baseType: !2450, size: 64, align: 64, offset: 320)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64, align: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!2453, !573}
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Size", file: !562, line: 112, baseType: !152)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "GetErrorLineNumber", scope: !2430, file: !2431, line: 21, baseType: !2450, size: 64, align: 64, offset: 384)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "Parse", scope: !2430, file: !2431, line: 22, baseType: !2456, size: 64, align: 64, offset: 448)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64, align: 64)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!47, !573, !84, !99, !99}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "ParserCreate_MM", scope: !2430, file: !2431, line: 24, baseType: !2460, size: 64, align: 64, offset: 512)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64, align: 64)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!573, !559, !2463, !559}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64, align: 64)
!2464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2465)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Memory_Handling_Suite", file: !4, line: 200, baseType: !2466)
!2466 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 196, size: 192, align: 64, elements: !2467)
!2467 = !{!2468, !2472, !2476}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_fcn", scope: !2466, file: !4, line: 197, baseType: !2469, size: 64, align: 64)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64, align: 64)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!145, !150}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "realloc_fcn", scope: !2466, file: !4, line: 198, baseType: !2473, size: 64, align: 64, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64, align: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!145, !145, !150}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "free_fcn", scope: !2466, file: !4, line: 199, baseType: !393, size: 64, align: 64, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ParserFree", scope: !2430, file: !2431, line: 27, baseType: !2478, size: 64, align: 64, offset: 576)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64, align: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{null, !573}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "SetCharacterDataHandler", scope: !2430, file: !2431, line: 28, baseType: !2482, size: 64, align: 64, offset: 640)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64, align: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !573, !596}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "SetCommentHandler", scope: !2430, file: !2431, line: 30, baseType: !2486, size: 64, align: 64, offset: 704)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64, align: 64)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{null, !573, !597}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "SetDefaultHandlerExpand", scope: !2430, file: !2431, line: 32, baseType: !2490, size: 64, align: 64, offset: 768)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64, align: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{null, !573, !592}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "SetElementHandler", scope: !2430, file: !2431, line: 34, baseType: !2494, size: 64, align: 64, offset: 832)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64, align: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !573, !586, !591}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SetNamespaceDeclHandler", scope: !2430, file: !2431, line: 37, baseType: !2498, size: 64, align: 64, offset: 896)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64, align: 64)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{null, !573, !555, !563}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "SetProcessingInstructionHandler", scope: !2430, file: !2431, line: 40, baseType: !2502, size: 64, align: 64, offset: 960)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64, align: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{null, !573, !598}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "SetUnknownEncodingHandler", scope: !2430, file: !2431, line: 42, baseType: !2506, size: 64, align: 64, offset: 1024)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64, align: 64)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !573, !2509, !145}
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_UnknownEncodingHandler", file: !4, line: 528, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64, align: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!99, !145, !559, !2513}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64, align: 64)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "XML_Encoding", file: !4, line: 511, baseType: !2515)
!2515 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 506, size: 8384, align: 64, elements: !2516)
!2516 = !{!2517, !2521, !2522, !2526}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2515, file: !4, line: 507, baseType: !2518, size: 8192, align: 32)
!2518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 8192, align: 32, elements: !2519)
!2519 = !{!2520}
!2520 = !DISubrange(count: 256)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2515, file: !4, line: 508, baseType: !145, size: 64, align: 64, offset: 8192)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "convert", scope: !2515, file: !4, line: 509, baseType: !2523, size: 64, align: 64, offset: 8256)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64, align: 64)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!99, !145, !84}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2515, file: !4, line: 510, baseType: !393, size: 64, align: 64, offset: 8320)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "SetUserData", scope: !2430, file: !2431, line: 45, baseType: !2528, size: 64, align: 64, offset: 1088)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64, align: 64)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{null, !573, !145}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "SetStartDoctypeDeclHandler", scope: !2430, file: !2431, line: 46, baseType: !2532, size: 64, align: 64, offset: 1152)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64, align: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{null, !573, !599}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "SetEncoding", scope: !2430, file: !2431, line: 48, baseType: !2536, size: 64, align: 64, offset: 1216)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64, align: 64)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!47, !573, !559}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "DefaultUnknownEncodingHandler", scope: !2430, file: !2431, line: 49, baseType: !2510, size: 64, align: 64, offset: 1280)
!2540 = !DIGlobalVariable(name: "elementtreemodule", scope: !0, file: !408, line: 3692, type: !2541, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @elementtreemodule)
!2541 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !2542, line: 47, size: 832, align: 64, elements: !2543)
!2542 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2543 = !{!2544, !2553, !2554, !2555, !2556, !2559, !2560, !2561, !2562}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !2541, file: !2542, line: 48, baseType: !2545, size: 320, align: 64)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !2542, line: 38, baseType: !2546)
!2546 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !2542, line: 33, size: 320, align: 64, elements: !2547)
!2547 = !{!2548, !2549, !2551, !2552}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2546, file: !2542, line: 34, baseType: !61, size: 128, align: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !2546, file: !2542, line: 35, baseType: !2550, size: 64, align: 64, offset: 128)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64, align: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !2546, file: !2542, line: 36, baseType: !66, size: 64, align: 64, offset: 192)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !2546, file: !2542, line: 37, baseType: !60, size: 64, align: 64, offset: 256)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !2541, file: !2542, line: 49, baseType: !84, size: 64, align: 64, offset: 320)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !2541, file: !2542, line: 50, baseType: !84, size: 64, align: 64, offset: 384)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2541, file: !2542, line: 51, baseType: !66, size: 64, align: 64, offset: 448)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !2541, file: !2542, line: 52, baseType: !2557, size: 64, align: 64, offset: 512)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64, align: 64)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !337, line: 47, baseType: !336)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !2541, file: !2542, line: 53, baseType: !198, size: 64, align: 64, offset: 576)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !2541, file: !2542, line: 54, baseType: !315, size: 64, align: 64, offset: 640)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !2541, file: !2542, line: 55, baseType: !198, size: 64, align: 64, offset: 704)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !2541, file: !2542, line: 56, baseType: !392, size: 64, align: 64, offset: 768)
!2563 = !DIGlobalVariable(name: "_functions", scope: !0, file: !408, line: 3686, type: !2564, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @_functions)
!2564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2558, size: 512, align: 64, elements: !2565)
!2565 = !{!2566}
!2566 = !DISubrange(count: 2)
!2567 = !DIGlobalVariable(name: "ElementIter_Type", scope: !0, file: !408, line: 2117, type: !1080, isLocal: true, isDefinition: true, variable: %struct._typeobject* @ElementIter_Type)
!2568 = !DIGlobalVariable(name: "TreeBuilder_Type", scope: !0, file: !408, line: 2665, type: !1080, isLocal: true, isDefinition: true, variable: %struct._typeobject* @TreeBuilder_Type)
!2569 = !DIGlobalVariable(name: "treebuilder_methods", scope: !0, file: !408, line: 2657, type: !2570, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMethodDef]* @treebuilder_methods)
!2570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2558, size: 1280, align: 64, elements: !2571)
!2571 = !{!2572}
!2572 = !DISubrange(count: 5)
!2573 = !DIGlobalVariable(name: "PyId_text", scope: !986, file: !408, line: 2352, type: !994, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @treebuilder_set_element_text.PyId_text)
!2574 = !DIGlobalVariable(name: "PyId_tail", scope: !1015, file: !408, line: 2360, type: !994, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @treebuilder_set_element_tail.PyId_tail)
!2575 = !DIGlobalVariable(name: "PyId_append", scope: !1019, file: !408, line: 2368, type: !994, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @treebuilder_add_subelement.PyId_append)
!2576 = !DIGlobalVariable(name: "kwlist", scope: !1061, file: !408, line: 2268, type: !2577, isLocal: true, isDefinition: true, variable: [2 x i8*]* @treebuilder_init.kwlist)
!2577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 128, align: 64, elements: !2565)
!2578 = !DIGlobalVariable(name: "Element_Type", scope: !0, file: !408, line: 1884, type: !1080, isLocal: true, isDefinition: true, variable: %struct._typeobject* @Element_Type)
!2579 = !DIGlobalVariable(name: "element_as_sequence", scope: !0, file: !408, line: 1868, type: !228, isLocal: true, isDefinition: true, variable: %struct.PySequenceMethods* @element_as_sequence)
!2580 = !DIGlobalVariable(name: "element_as_mapping", scope: !0, file: !408, line: 1878, type: !259, isLocal: true, isDefinition: true, variable: %struct.PyMappingMethods* @element_as_mapping)
!2581 = !DIGlobalVariable(name: "element_methods", scope: !0, file: !408, line: 1745, type: !2582, isLocal: true, isDefinition: true, variable: [24 x %struct.PyMethodDef]* @element_methods)
!2582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2558, size: 6144, align: 64, elements: !2583)
!2583 = !{!2584}
!2584 = !DISubrange(count: 24)
!2585 = !DIGlobalVariable(name: "kwlist", scope: !1376, file: !408, line: 1217, type: !2586, isLocal: true, isDefinition: true, variable: [3 x i8*]* @element_get.kwlist)
!2586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 192, align: 64, elements: !2587)
!2587 = !{!2588}
!2588 = !DISubrange(count: 3)
!2589 = !DIGlobalVariable(name: "kwlist", scope: !1393, file: !408, line: 1083, type: !2586, isLocal: true, isDefinition: true, variable: [3 x i8*]* @element_find.kwlist)
!2590 = !DIGlobalVariable(name: "PyId_find", scope: !1393, file: !408, line: 1091, type: !994, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @element_find.PyId_find)
!2591 = !DIGlobalVariable(name: "PyId_findtext", scope: !1424, file: !408, line: 1119, type: !994, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @element_findtext.PyId_findtext)
!2592 = !DIGlobalVariable(name: "kwlist", scope: !1424, file: !408, line: 1120, type: !2593, isLocal: true, isDefinition: true, variable: [4 x i8*]* @element_findtext.kwlist)
!2593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, align: 64, elements: !439)
!2594 = !DIGlobalVariable(name: "kwlist", scope: !1443, file: !408, line: 1160, type: !2586, isLocal: true, isDefinition: true, variable: [3 x i8*]* @element_findall.kwlist)
!2595 = !DIGlobalVariable(name: "PyId_findall", scope: !1443, file: !408, line: 1168, type: !994, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @element_findall.PyId_findall)
!2596 = !DIGlobalVariable(name: "kwlist", scope: !1505, file: !408, line: 1274, type: !2577, isLocal: true, isDefinition: true, variable: [2 x i8*]* @element_iter.kwlist)
!2597 = !DIGlobalVariable(name: "PyId_iterfind", scope: !1533, file: !408, line: 1200, type: !994, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @element_iterfind.PyId_iterfind)
!2598 = !DIGlobalVariable(name: "kwlist", scope: !1533, file: !408, line: 1201, type: !2586, isLocal: true, isDefinition: true, variable: [3 x i8*]* @element_iterfind.kwlist)
!2599 = !DIGlobalVariable(name: "kwlist", scope: !1662, file: !408, line: 958, type: !2600, isLocal: true, isDefinition: true, variable: [6 x i8*]* @element_setstate_from_Python.kwlist)
!2600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 384, align: 64, elements: !2601)
!2601 = !{!2602}
!2602 = !DISubrange(count: 6)
!2603 = !DIGlobalVariable(name: "XMLParser_Type", scope: !0, file: !408, line: 3641, type: !1080, isLocal: true, isDefinition: true, variable: %struct._typeobject* @XMLParser_Type)
!2604 = !DIGlobalVariable(name: "xmlparser_methods", scope: !0, file: !408, line: 3608, type: !2605, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMethodDef]* @xmlparser_methods)
!2605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2558, size: 1536, align: 64, elements: !2601)
!2606 = !DIGlobalVariable(name: "kwlist", scope: !2129, file: !408, line: 3218, type: !2593, isLocal: true, isDefinition: true, variable: [4 x i8*]* @xmlparser_init.kwlist)
!2607 = !DIGlobalVariable(name: "ExpatMemoryHandler", scope: !0, file: !408, line: 2719, type: !2465, isLocal: true, isDefinition: true, variable: %struct.XML_Memory_Handling_Suite* @ExpatMemoryHandler)
!2608 = !{i32 2, !"Dwarf Version", i32 4}
!2609 = !{i32 2, !"Debug Info Version", i32 3}
!2610 = !{i32 1, !"PIC Level", i32 2}
!2611 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!2612 = !DILocation(line: 3707, column: 5, scope: !604)
!2613 = !DIExpression()
!2614 = !DILocation(line: 3707, column: 15, scope: !604)
!2615 = !DILocation(line: 3707, column: 19, scope: !604)
!2616 = !DILocation(line: 3708, column: 5, scope: !604)
!2617 = !DILocation(line: 3708, column: 23, scope: !604)
!2618 = !DILocation(line: 3710, column: 9, scope: !604)
!2619 = !DILocation(line: 3710, column: 7, scope: !604)
!2620 = !{!2621, !2621, i64 0}
!2621 = !{!"any pointer", !2622, i64 0}
!2622 = !{!"omnipotent char", !2623, i64 0}
!2623 = !{!"Simple C/C++ TBAA"}
!2624 = !DILocation(line: 3711, column: 9, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3711, column: 9)
!2626 = !DILocation(line: 3711, column: 9, scope: !604)
!2627 = !DILocation(line: 3712, column: 25, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2625, file: !408, line: 3711, column: 12)
!2629 = !DILocation(line: 3712, column: 30, scope: !2628)
!2630 = !DILocation(line: 3712, column: 39, scope: !2628)
!2631 = !{!2632, !2633, i64 0}
!2632 = !{!"_object", !2633, i64 0, !2621, i64 8}
!2633 = !{!"long", !2622, i64 0}
!2634 = !DILocation(line: 3713, column: 16, scope: !2628)
!2635 = !DILocation(line: 3713, column: 9, scope: !2628)
!2636 = !DILocation(line: 3717, column: 9, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3717, column: 9)
!2638 = !DILocation(line: 3717, column: 41, scope: !2637)
!2639 = !DILocation(line: 3717, column: 9, scope: !604)
!2640 = !DILocation(line: 3718, column: 9, scope: !2637)
!2641 = !DILocation(line: 3719, column: 9, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3719, column: 9)
!2643 = !DILocation(line: 3719, column: 41, scope: !2642)
!2644 = !DILocation(line: 3719, column: 9, scope: !604)
!2645 = !DILocation(line: 3720, column: 9, scope: !2642)
!2646 = !DILocation(line: 3721, column: 9, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3721, column: 9)
!2648 = !DILocation(line: 3721, column: 37, scope: !2647)
!2649 = !DILocation(line: 3721, column: 9, scope: !604)
!2650 = !DILocation(line: 3722, column: 9, scope: !2647)
!2651 = !DILocation(line: 3723, column: 9, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3723, column: 9)
!2653 = !DILocation(line: 3723, column: 39, scope: !2652)
!2654 = !DILocation(line: 3723, column: 9, scope: !604)
!2655 = !DILocation(line: 3724, column: 9, scope: !2652)
!2656 = !DILocation(line: 3726, column: 9, scope: !604)
!2657 = !DILocation(line: 3726, column: 7, scope: !604)
!2658 = !DILocation(line: 3727, column: 10, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3727, column: 9)
!2660 = !DILocation(line: 3727, column: 9, scope: !604)
!2661 = !DILocation(line: 3728, column: 9, scope: !2659)
!2662 = !DILocation(line: 3729, column: 50, scope: !604)
!2663 = !DILocation(line: 3729, column: 32, scope: !604)
!2664 = !DILocation(line: 3729, column: 11, scope: !604)
!2665 = !DILocation(line: 3729, column: 8, scope: !604)
!2666 = !DILocation(line: 3731, column: 18, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3731, column: 9)
!2668 = !DILocation(line: 3731, column: 16, scope: !2667)
!2669 = !DILocation(line: 3731, column: 9, scope: !604)
!2670 = !DILocation(line: 3732, column: 9, scope: !2667)
!2671 = !DILocation(line: 3733, column: 47, scope: !604)
!2672 = !DILocation(line: 3733, column: 24, scope: !604)
!2673 = !DILocation(line: 3733, column: 5, scope: !604)
!2674 = !DILocation(line: 3733, column: 9, scope: !604)
!2675 = !DILocation(line: 3733, column: 22, scope: !604)
!2676 = !{!2677, !2621, i64 8}
!2677 = !{!"", !2621, i64 0, !2621, i64 8, !2621, i64 16}
!2678 = !DILocation(line: 3734, column: 5, scope: !604)
!2679 = !DILocation(line: 3734, column: 10, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !612, file: !408, discriminator: 1)
!2681 = !DILocation(line: 3734, column: 20, scope: !612)
!2682 = !DILocation(line: 3734, column: 51, scope: !612)
!2683 = !DILocation(line: 3734, column: 62, scope: !615)
!2684 = !DILocation(line: 3734, column: 78, scope: !615)
!2685 = !DILocation(line: 3734, column: 62, scope: !612)
!2686 = !DILocation(line: 3734, column: 93, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !615, file: !408, discriminator: 2)
!2688 = !DILocation(line: 3734, column: 98, scope: !2689)
!2689 = !DILexicalBlockFile(scope: !614, file: !408, discriminator: 4)
!2690 = !DILocation(line: 3734, column: 108, scope: !614)
!2691 = !DILocation(line: 3734, column: 138, scope: !614)
!2692 = !DILocation(line: 3734, column: 164, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !614, file: !408, line: 3734, column: 161)
!2694 = !DILocation(line: 3734, column: 181, scope: !2693)
!2695 = !DILocation(line: 3734, column: 161, scope: !2693)
!2696 = !DILocation(line: 3734, column: 191, scope: !2693)
!2697 = !DILocation(line: 3734, column: 161, scope: !614)
!2698 = !DILocation(line: 3734, column: 161, scope: !2699)
!2699 = !DILexicalBlockFile(scope: !614, file: !408, discriminator: 5)
!2700 = !DILocation(line: 3734, column: 222, scope: !2701)
!2701 = !DILexicalBlockFile(scope: !2693, file: !408, discriminator: 6)
!2702 = !DILocation(line: 3734, column: 240, scope: !2693)
!2703 = !{!2632, !2621, i64 8}
!2704 = !DILocation(line: 3734, column: 250, scope: !2693)
!2705 = !{!2706, !2621, i64 48}
!2706 = !{!"_typeobject", !2707, i64 0, !2621, i64 24, !2633, i64 32, !2633, i64 40, !2621, i64 48, !2621, i64 56, !2621, i64 64, !2621, i64 72, !2621, i64 80, !2621, i64 88, !2621, i64 96, !2621, i64 104, !2621, i64 112, !2621, i64 120, !2621, i64 128, !2621, i64 136, !2621, i64 144, !2621, i64 152, !2621, i64 160, !2633, i64 168, !2621, i64 176, !2621, i64 184, !2621, i64 192, !2621, i64 200, !2633, i64 208, !2621, i64 216, !2621, i64 224, !2621, i64 232, !2621, i64 240, !2621, i64 248, !2621, i64 256, !2621, i64 264, !2621, i64 272, !2621, i64 280, !2633, i64 288, !2621, i64 296, !2621, i64 304, !2621, i64 312, !2621, i64 320, !2621, i64 328, !2621, i64 336, !2621, i64 344, !2621, i64 352, !2621, i64 360, !2621, i64 368, !2621, i64 376, !2708, i64 384, !2621, i64 392}
!2707 = !{!"", !2632, i64 0, !2633, i64 16}
!2708 = !{!"int", !2622, i64 0}
!2709 = !DILocation(line: 3734, column: 275, scope: !2693)
!2710 = !DILocation(line: 3734, column: 206, scope: !2693)
!2711 = !DILocation(line: 3734, column: 294, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !615, file: !408, discriminator: 7)
!2713 = !DILocation(line: 3734, column: 294, scope: !614)
!2714 = !DILocation(line: 3734, column: 294, scope: !2715)
!2715 = !DILexicalBlockFile(scope: !614, file: !408, discriminator: 8)
!2716 = !DILocation(line: 3734, column: 294, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !614, file: !408, discriminator: 9)
!2718 = !DILocation(line: 3734, column: 307, scope: !2719)
!2719 = !DILexicalBlockFile(scope: !2720, file: !408, discriminator: 10)
!2720 = !DILexicalBlockFile(scope: !604, file: !408, discriminator: 3)
!2721 = !DILocation(line: 3734, column: 307, scope: !612)
!2722 = !DILocation(line: 3734, column: 307, scope: !2723)
!2723 = !DILexicalBlockFile(scope: !612, file: !408, discriminator: 11)
!2724 = !DILocation(line: 3736, column: 33, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !604, file: !408, line: 3736, column: 9)
!2726 = !DILocation(line: 3736, column: 11, scope: !2725)
!2727 = !DILocation(line: 3736, column: 15, scope: !2725)
!2728 = !DILocation(line: 3736, column: 31, scope: !2725)
!2729 = !{!2677, !2621, i64 16}
!2730 = !DILocation(line: 3736, column: 9, scope: !604)
!2731 = !DILocation(line: 3737, column: 9, scope: !2725)
!2732 = !DILocation(line: 3740, column: 18, scope: !604)
!2733 = !DILocation(line: 3740, column: 16, scope: !604)
!2734 = !DILocation(line: 3741, column: 9, scope: !620)
!2735 = !DILocation(line: 3741, column: 9, scope: !604)
!2736 = !DILocation(line: 3743, column: 30, scope: !617)
!2737 = !DILocation(line: 3743, column: 37, scope: !617)
!2738 = !DILocation(line: 3743, column: 47, scope: !617)
!2739 = !DILocation(line: 3743, column: 1770, scope: !617)
!2740 = !DILocation(line: 3743, column: 1783, scope: !2741)
!2741 = !DILexicalBlockFile(scope: !617, file: !408, discriminator: 1)
!2742 = !{!2633, !2633, i64 0}
!2743 = !DILocation(line: 3743, column: 1820, scope: !617)
!2744 = !DILocation(line: 3743, column: 1829, scope: !617)
!2745 = !DILocation(line: 3743, column: 1606, scope: !617)
!2746 = !DILocation(line: 3743, column: 2065, scope: !2747)
!2747 = !DILexicalBlockFile(scope: !623, file: !408, discriminator: 3)
!2748 = !DILocation(line: 3743, column: 2086, scope: !623)
!2749 = !DILocation(line: 3743, column: 2133, scope: !623)
!2750 = !DILocation(line: 3743, column: 2145, scope: !623)
!2751 = !{!2752, !2621, i64 0}
!2752 = !{!"PyExpat_CAPI", !2621, i64 0, !2708, i64 8, !2708, i64 12, !2708, i64 16, !2708, i64 20, !2621, i64 24, !2621, i64 32, !2621, i64 40, !2621, i64 48, !2621, i64 56, !2621, i64 64, !2621, i64 72, !2621, i64 80, !2621, i64 88, !2621, i64 96, !2621, i64 104, !2621, i64 112, !2621, i64 120, !2621, i64 128, !2621, i64 136, !2621, i64 144, !2621, i64 152, !2621, i64 160}
!2753 = !DILocation(line: 3743, column: 2153, scope: !623)
!2754 = !DILocation(line: 3743, column: 2166, scope: !623)
!2755 = !DILocation(line: 3743, column: 2177, scope: !623)
!2756 = !{!2622, !2622, i64 0}
!2757 = !DILocation(line: 3743, column: 2187, scope: !623)
!2758 = !DILocation(line: 3743, column: 2185, scope: !623)
!2759 = !{!2708, !2708, i64 0}
!2760 = !DILocation(line: 3743, column: 2263, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !623, file: !408, line: 3743, column: 2263)
!2762 = !DILocation(line: 3743, column: 2272, scope: !2761)
!2763 = !DILocation(line: 3743, column: 2276, scope: !2761)
!2764 = !DILocation(line: 3743, column: 2279, scope: !2765)
!2765 = !DILexicalBlockFile(scope: !2761, file: !408, discriminator: 5)
!2766 = !DILocation(line: 3743, column: 2288, scope: !2761)
!2767 = !DILocation(line: 3743, column: 2263, scope: !623)
!2768 = !DILocation(line: 3743, column: 2308, scope: !2769)
!2769 = !DILexicalBlockFile(scope: !2770, file: !408, discriminator: 7)
!2770 = distinct !DILexicalBlock(scope: !2761, file: !408, line: 3743, column: 2294)
!2771 = !DILocation(line: 3743, column: 2318, scope: !2770)
!2772 = !DILocation(line: 3743, column: 2316, scope: !2770)
!2773 = !DILocation(line: 3743, column: 2305, scope: !2770)
!2774 = !DILocation(line: 3743, column: 2395, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2770, file: !408, line: 3743, column: 2395)
!2776 = !DILocation(line: 3743, column: 2404, scope: !2775)
!2777 = !DILocation(line: 3743, column: 2408, scope: !2775)
!2778 = !DILocation(line: 3743, column: 2411, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2775, file: !408, discriminator: 9)
!2780 = !DILocation(line: 3743, column: 2420, scope: !2775)
!2781 = !DILocation(line: 3743, column: 2395, scope: !2770)
!2782 = !DILocation(line: 3743, column: 2440, scope: !2783)
!2783 = !DILexicalBlockFile(scope: !2784, file: !408, discriminator: 11)
!2784 = distinct !DILexicalBlock(scope: !2775, file: !408, line: 3743, column: 2426)
!2785 = !DILocation(line: 3743, column: 2450, scope: !2784)
!2786 = !DILocation(line: 3743, column: 2448, scope: !2784)
!2787 = !DILocation(line: 3743, column: 2437, scope: !2784)
!2788 = !DILocation(line: 3743, column: 2527, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2784, file: !408, line: 3743, column: 2527)
!2790 = !DILocation(line: 3743, column: 2536, scope: !2789)
!2791 = !DILocation(line: 3743, column: 2540, scope: !2789)
!2792 = !DILocation(line: 3743, column: 2543, scope: !2793)
!2793 = !DILexicalBlockFile(scope: !2789, file: !408, discriminator: 13)
!2794 = !DILocation(line: 3743, column: 2552, scope: !2789)
!2795 = !DILocation(line: 3743, column: 2527, scope: !2784)
!2796 = !DILocation(line: 3743, column: 2570, scope: !2797)
!2797 = !DILexicalBlockFile(scope: !2789, file: !408, discriminator: 15)
!2798 = !DILocation(line: 3743, column: 2580, scope: !2789)
!2799 = !DILocation(line: 3743, column: 2578, scope: !2789)
!2800 = !DILocation(line: 3743, column: 2567, scope: !2789)
!2801 = !DILocation(line: 3743, column: 2558, scope: !2789)
!2802 = !DILocation(line: 3743, column: 2653, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !2804, file: !408, discriminator: 17)
!2804 = !DILexicalBlockFile(scope: !2805, file: !408, discriminator: 16)
!2805 = !DILexicalBlockFile(scope: !2784, file: !408, discriminator: 14)
!2806 = !DILocation(line: 3743, column: 2655, scope: !2807)
!2807 = !DILexicalBlockFile(scope: !2808, file: !408, discriminator: 18)
!2808 = !DILexicalBlockFile(scope: !2809, file: !408, discriminator: 12)
!2809 = !DILexicalBlockFile(scope: !2770, file: !408, discriminator: 10)
!2810 = !DILocation(line: 3743, column: 2657, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !2812, file: !408, discriminator: 19)
!2812 = !DILexicalBlockFile(scope: !2813, file: !408, discriminator: 8)
!2813 = !DILexicalBlockFile(scope: !623, file: !408, discriminator: 6)
!2814 = !DILocation(line: 3743, column: 2291, scope: !2761)
!2815 = !DILocation(line: 3743, column: 2667, scope: !617)
!2816 = !DILocation(line: 3743, column: 2667, scope: !623)
!2817 = !DILocation(line: 3743, column: 2692, scope: !2818)
!2818 = !DILexicalBlockFile(scope: !2819, file: !408, discriminator: 4)
!2819 = !DILexicalBlockFile(scope: !617, file: !408, discriminator: 2)
!2820 = !DILocation(line: 3743, column: 2704, scope: !617)
!2821 = !DILocation(line: 3743, column: 2674, scope: !617)
!2822 = !DILocation(line: 3743, column: 30, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !2824, file: !408, discriminator: 21)
!2824 = !DILexicalBlockFile(scope: !617, file: !408, discriminator: 20)
!2825 = !DILocation(line: 3743, column: 2741, scope: !618)
!2826 = !DILocation(line: 3743, column: 2741, scope: !617)
!2827 = !DILocation(line: 3743, column: 2744, scope: !618)
!2828 = !DILocation(line: 3743, column: 2749, scope: !618)
!2829 = !DILocation(line: 3744, column: 13, scope: !618)
!2830 = !DILocation(line: 3744, column: 25, scope: !618)
!2831 = !{!2752, !2708, i64 8}
!2832 = !DILocation(line: 3744, column: 30, scope: !618)
!2833 = !DILocation(line: 3744, column: 60, scope: !618)
!2834 = !DILocation(line: 3745, column: 13, scope: !618)
!2835 = !DILocation(line: 3745, column: 25, scope: !618)
!2836 = !{!2752, !2708, i64 12}
!2837 = !DILocation(line: 3745, column: 39, scope: !618)
!2838 = !DILocation(line: 3745, column: 44, scope: !618)
!2839 = !DILocation(line: 3746, column: 13, scope: !618)
!2840 = !DILocation(line: 3746, column: 25, scope: !618)
!2841 = !{!2752, !2708, i64 16}
!2842 = !DILocation(line: 3746, column: 39, scope: !618)
!2843 = !DILocation(line: 3746, column: 44, scope: !618)
!2844 = !DILocation(line: 3747, column: 13, scope: !618)
!2845 = !DILocation(line: 3747, column: 25, scope: !618)
!2846 = !{!2752, !2708, i64 20}
!2847 = !DILocation(line: 3747, column: 39, scope: !618)
!2848 = !DILocation(line: 3743, column: 13, scope: !619)
!2849 = !DILocation(line: 3748, column: 29, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !618, file: !408, line: 3747, column: 45)
!2851 = !DILocation(line: 3748, column: 13, scope: !2850)
!2852 = !DILocation(line: 3750, column: 13, scope: !2850)
!2853 = !DILocation(line: 3752, column: 5, scope: !619)
!2854 = !DILocation(line: 3753, column: 9, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !620, file: !408, line: 3752, column: 12)
!2856 = !DILocation(line: 3757, column: 45, scope: !604)
!2857 = !DILocation(line: 3756, column: 26, scope: !604)
!2858 = !DILocation(line: 3756, column: 5, scope: !604)
!2859 = !DILocation(line: 3756, column: 9, scope: !604)
!2860 = !DILocation(line: 3756, column: 24, scope: !604)
!2861 = !{!2677, !2621, i64 0}
!2862 = !DILocation(line: 3759, column: 21, scope: !604)
!2863 = !DILocation(line: 3759, column: 25, scope: !604)
!2864 = !DILocation(line: 3759, column: 43, scope: !604)
!2865 = !DILocation(line: 3759, column: 52, scope: !604)
!2866 = !DILocation(line: 3760, column: 24, scope: !604)
!2867 = !DILocation(line: 3760, column: 41, scope: !604)
!2868 = !DILocation(line: 3760, column: 45, scope: !604)
!2869 = !DILocation(line: 3760, column: 5, scope: !604)
!2870 = !DILocation(line: 3762, column: 59, scope: !604)
!2871 = !DILocation(line: 3763, column: 24, scope: !604)
!2872 = !DILocation(line: 3763, column: 5, scope: !604)
!2873 = !DILocation(line: 3765, column: 63, scope: !604)
!2874 = !DILocation(line: 3766, column: 24, scope: !604)
!2875 = !DILocation(line: 3766, column: 5, scope: !604)
!2876 = !DILocation(line: 3768, column: 61, scope: !604)
!2877 = !DILocation(line: 3769, column: 24, scope: !604)
!2878 = !DILocation(line: 3769, column: 5, scope: !604)
!2879 = !DILocation(line: 3771, column: 12, scope: !604)
!2880 = !DILocation(line: 3771, column: 5, scope: !604)
!2881 = !DILocation(line: 3772, column: 1, scope: !604)
!2882 = !DILocation(line: 112, column: 32, scope: !685)
!2883 = !DILocation(line: 112, column: 45, scope: !685)
!2884 = !DILocation(line: 112, column: 58, scope: !685)
!2885 = !DILocation(line: 114, column: 5, scope: !685)
!2886 = !DILocation(line: 114, column: 23, scope: !685)
!2887 = !DILocation(line: 114, column: 68, scope: !685)
!2888 = !DILocation(line: 114, column: 50, scope: !685)
!2889 = !DILocation(line: 114, column: 29, scope: !685)
!2890 = !DILocation(line: 115, column: 5, scope: !685)
!2891 = !DILocation(line: 115, column: 14, scope: !2892)
!2892 = !DILexicalBlockFile(scope: !693, file: !408, discriminator: 1)
!2893 = !DILocation(line: 115, column: 18, scope: !693)
!2894 = !DILocation(line: 115, column: 14, scope: !693)
!2895 = !DILocation(line: 115, column: 14, scope: !694)
!2896 = !DILocation(line: 115, column: 36, scope: !2897)
!2897 = !DILexicalBlockFile(scope: !692, file: !408, discriminator: 2)
!2898 = !DILocation(line: 115, column: 40, scope: !692)
!2899 = !DILocation(line: 115, column: 47, scope: !692)
!2900 = !DILocation(line: 115, column: 66, scope: !692)
!2901 = !DILocation(line: 115, column: 70, scope: !692)
!2902 = !DILocation(line: 115, column: 87, scope: !692)
!2903 = !DILocation(line: 115, column: 97, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !692, file: !408, line: 115, column: 97)
!2905 = !DILocation(line: 115, column: 97, scope: !692)
!2906 = !DILocation(line: 115, column: 110, scope: !2907)
!2907 = !DILexicalBlockFile(scope: !2904, file: !408, discriminator: 4)
!2908 = !DILocation(line: 115, column: 103, scope: !2904)
!2909 = !DILocation(line: 115, column: 116, scope: !2910)
!2910 = !DILexicalBlockFile(scope: !693, file: !408, discriminator: 5)
!2911 = !DILocation(line: 115, column: 116, scope: !2912)
!2912 = !DILexicalBlockFile(scope: !2913, file: !408, discriminator: 7)
!2913 = !DILexicalBlockFile(scope: !693, file: !408, discriminator: 6)
!2914 = !DILocation(line: 115, column: 116, scope: !692)
!2915 = !DILocation(line: 115, column: 118, scope: !2916)
!2916 = !DILexicalBlockFile(scope: !2917, file: !408, discriminator: 8)
!2917 = !DILexicalBlockFile(scope: !694, file: !408, discriminator: 3)
!2918 = !DILocation(line: 115, column: 118, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !694, file: !408, discriminator: 9)
!2920 = !DILocation(line: 116, column: 5, scope: !685)
!2921 = !DILocation(line: 116, column: 14, scope: !2922)
!2922 = !DILexicalBlockFile(scope: !697, file: !408, discriminator: 1)
!2923 = !DILocation(line: 116, column: 18, scope: !697)
!2924 = !DILocation(line: 116, column: 14, scope: !697)
!2925 = !DILocation(line: 116, column: 14, scope: !698)
!2926 = !DILocation(line: 116, column: 34, scope: !2927)
!2927 = !DILexicalBlockFile(scope: !696, file: !408, discriminator: 2)
!2928 = !DILocation(line: 116, column: 38, scope: !696)
!2929 = !DILocation(line: 116, column: 45, scope: !696)
!2930 = !DILocation(line: 116, column: 64, scope: !696)
!2931 = !DILocation(line: 116, column: 68, scope: !696)
!2932 = !DILocation(line: 116, column: 83, scope: !696)
!2933 = !DILocation(line: 116, column: 93, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !696, file: !408, line: 116, column: 93)
!2935 = !DILocation(line: 116, column: 93, scope: !696)
!2936 = !DILocation(line: 116, column: 106, scope: !2937)
!2937 = !DILexicalBlockFile(scope: !2934, file: !408, discriminator: 4)
!2938 = !DILocation(line: 116, column: 99, scope: !2934)
!2939 = !DILocation(line: 116, column: 112, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !697, file: !408, discriminator: 5)
!2941 = !DILocation(line: 116, column: 112, scope: !2942)
!2942 = !DILexicalBlockFile(scope: !2943, file: !408, discriminator: 7)
!2943 = !DILexicalBlockFile(scope: !697, file: !408, discriminator: 6)
!2944 = !DILocation(line: 116, column: 112, scope: !696)
!2945 = !DILocation(line: 116, column: 114, scope: !2946)
!2946 = !DILexicalBlockFile(scope: !2947, file: !408, discriminator: 8)
!2947 = !DILexicalBlockFile(scope: !698, file: !408, discriminator: 3)
!2948 = !DILocation(line: 116, column: 114, scope: !2949)
!2949 = !DILexicalBlockFile(scope: !698, file: !408, discriminator: 9)
!2950 = !DILocation(line: 117, column: 5, scope: !685)
!2951 = !DILocation(line: 117, column: 14, scope: !2952)
!2952 = !DILexicalBlockFile(scope: !701, file: !408, discriminator: 1)
!2953 = !DILocation(line: 117, column: 18, scope: !701)
!2954 = !DILocation(line: 117, column: 14, scope: !701)
!2955 = !DILocation(line: 117, column: 14, scope: !702)
!2956 = !DILocation(line: 117, column: 37, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !700, file: !408, discriminator: 2)
!2958 = !DILocation(line: 117, column: 41, scope: !700)
!2959 = !DILocation(line: 117, column: 48, scope: !700)
!2960 = !DILocation(line: 117, column: 67, scope: !700)
!2961 = !DILocation(line: 117, column: 71, scope: !700)
!2962 = !DILocation(line: 117, column: 89, scope: !700)
!2963 = !DILocation(line: 117, column: 99, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !700, file: !408, line: 117, column: 99)
!2965 = !DILocation(line: 117, column: 99, scope: !700)
!2966 = !DILocation(line: 117, column: 112, scope: !2967)
!2967 = !DILexicalBlockFile(scope: !2964, file: !408, discriminator: 4)
!2968 = !DILocation(line: 117, column: 105, scope: !2964)
!2969 = !DILocation(line: 117, column: 118, scope: !2970)
!2970 = !DILexicalBlockFile(scope: !701, file: !408, discriminator: 5)
!2971 = !DILocation(line: 117, column: 118, scope: !2972)
!2972 = !DILexicalBlockFile(scope: !2973, file: !408, discriminator: 7)
!2973 = !DILexicalBlockFile(scope: !701, file: !408, discriminator: 6)
!2974 = !DILocation(line: 117, column: 118, scope: !700)
!2975 = !DILocation(line: 117, column: 120, scope: !2976)
!2976 = !DILexicalBlockFile(scope: !2977, file: !408, discriminator: 8)
!2977 = !DILexicalBlockFile(scope: !702, file: !408, discriminator: 3)
!2978 = !DILocation(line: 117, column: 120, scope: !2979)
!2979 = !DILexicalBlockFile(scope: !702, file: !408, discriminator: 9)
!2980 = !DILocation(line: 118, column: 5, scope: !685)
!2981 = !DILocation(line: 119, column: 1, scope: !685)
!2982 = !DILocation(line: 102, column: 29, scope: !703)
!2983 = !DILocation(line: 104, column: 5, scope: !703)
!2984 = !DILocation(line: 104, column: 23, scope: !703)
!2985 = !DILocation(line: 104, column: 68, scope: !703)
!2986 = !DILocation(line: 104, column: 50, scope: !703)
!2987 = !DILocation(line: 104, column: 29, scope: !703)
!2988 = !DILocation(line: 105, column: 5, scope: !703)
!2989 = !DILocation(line: 105, column: 10, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !708, file: !408, discriminator: 1)
!2991 = !DILocation(line: 105, column: 20, scope: !708)
!2992 = !DILocation(line: 105, column: 43, scope: !708)
!2993 = !DILocation(line: 105, column: 47, scope: !708)
!2994 = !DILocation(line: 105, column: 68, scope: !712)
!2995 = !DILocation(line: 105, column: 76, scope: !712)
!2996 = !DILocation(line: 105, column: 68, scope: !708)
!2997 = !DILocation(line: 105, column: 94, scope: !2998)
!2998 = !DILexicalBlockFile(scope: !711, file: !408, discriminator: 2)
!2999 = !DILocation(line: 105, column: 98, scope: !711)
!3000 = !DILocation(line: 105, column: 114, scope: !711)
!3001 = !DILocation(line: 105, column: 128, scope: !711)
!3002 = !DILocation(line: 105, column: 133, scope: !3003)
!3003 = !DILexicalBlockFile(scope: !710, file: !408, discriminator: 4)
!3004 = !DILocation(line: 105, column: 143, scope: !710)
!3005 = !DILocation(line: 105, column: 173, scope: !710)
!3006 = !DILocation(line: 105, column: 191, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !710, file: !408, line: 105, column: 188)
!3008 = !DILocation(line: 105, column: 208, scope: !3007)
!3009 = !DILocation(line: 105, column: 188, scope: !3007)
!3010 = !DILocation(line: 105, column: 218, scope: !3007)
!3011 = !DILocation(line: 105, column: 188, scope: !710)
!3012 = !DILocation(line: 105, column: 188, scope: !3013)
!3013 = !DILexicalBlockFile(scope: !710, file: !408, discriminator: 5)
!3014 = !DILocation(line: 105, column: 249, scope: !3015)
!3015 = !DILexicalBlockFile(scope: !3007, file: !408, discriminator: 6)
!3016 = !DILocation(line: 105, column: 267, scope: !3007)
!3017 = !DILocation(line: 105, column: 277, scope: !3007)
!3018 = !DILocation(line: 105, column: 302, scope: !3007)
!3019 = !DILocation(line: 105, column: 233, scope: !3007)
!3020 = !DILocation(line: 105, column: 321, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !711, file: !408, discriminator: 7)
!3022 = !DILocation(line: 105, column: 321, scope: !710)
!3023 = !DILocation(line: 105, column: 321, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !710, file: !408, discriminator: 8)
!3025 = !DILocation(line: 105, column: 334, scope: !3026)
!3026 = !DILexicalBlockFile(scope: !711, file: !408, discriminator: 9)
!3027 = !DILocation(line: 105, column: 336, scope: !3028)
!3028 = !DILexicalBlockFile(scope: !3029, file: !408, discriminator: 10)
!3029 = !DILexicalBlockFile(scope: !703, file: !408, discriminator: 3)
!3030 = !DILocation(line: 105, column: 336, scope: !708)
!3031 = !DILocation(line: 105, column: 336, scope: !3032)
!3032 = !DILexicalBlockFile(scope: !708, file: !408, discriminator: 11)
!3033 = !DILocation(line: 106, column: 5, scope: !703)
!3034 = !DILocation(line: 106, column: 10, scope: !3035)
!3035 = !DILexicalBlockFile(scope: !714, file: !408, discriminator: 1)
!3036 = !DILocation(line: 106, column: 20, scope: !714)
!3037 = !DILocation(line: 106, column: 43, scope: !714)
!3038 = !DILocation(line: 106, column: 47, scope: !714)
!3039 = !DILocation(line: 106, column: 66, scope: !718)
!3040 = !DILocation(line: 106, column: 74, scope: !718)
!3041 = !DILocation(line: 106, column: 66, scope: !714)
!3042 = !DILocation(line: 106, column: 92, scope: !3043)
!3043 = !DILexicalBlockFile(scope: !717, file: !408, discriminator: 2)
!3044 = !DILocation(line: 106, column: 96, scope: !717)
!3045 = !DILocation(line: 106, column: 110, scope: !717)
!3046 = !DILocation(line: 106, column: 124, scope: !717)
!3047 = !DILocation(line: 106, column: 129, scope: !3048)
!3048 = !DILexicalBlockFile(scope: !716, file: !408, discriminator: 4)
!3049 = !DILocation(line: 106, column: 139, scope: !716)
!3050 = !DILocation(line: 106, column: 169, scope: !716)
!3051 = !DILocation(line: 106, column: 187, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !716, file: !408, line: 106, column: 184)
!3053 = !DILocation(line: 106, column: 204, scope: !3052)
!3054 = !DILocation(line: 106, column: 184, scope: !3052)
!3055 = !DILocation(line: 106, column: 214, scope: !3052)
!3056 = !DILocation(line: 106, column: 184, scope: !716)
!3057 = !DILocation(line: 106, column: 184, scope: !3058)
!3058 = !DILexicalBlockFile(scope: !716, file: !408, discriminator: 5)
!3059 = !DILocation(line: 106, column: 245, scope: !3060)
!3060 = !DILexicalBlockFile(scope: !3052, file: !408, discriminator: 6)
!3061 = !DILocation(line: 106, column: 263, scope: !3052)
!3062 = !DILocation(line: 106, column: 273, scope: !3052)
!3063 = !DILocation(line: 106, column: 298, scope: !3052)
!3064 = !DILocation(line: 106, column: 229, scope: !3052)
!3065 = !DILocation(line: 106, column: 317, scope: !3066)
!3066 = !DILexicalBlockFile(scope: !717, file: !408, discriminator: 7)
!3067 = !DILocation(line: 106, column: 317, scope: !716)
!3068 = !DILocation(line: 106, column: 317, scope: !3069)
!3069 = !DILexicalBlockFile(scope: !716, file: !408, discriminator: 8)
!3070 = !DILocation(line: 106, column: 330, scope: !3071)
!3071 = !DILexicalBlockFile(scope: !717, file: !408, discriminator: 9)
!3072 = !DILocation(line: 106, column: 332, scope: !3028)
!3073 = !DILocation(line: 106, column: 332, scope: !714)
!3074 = !DILocation(line: 106, column: 332, scope: !3075)
!3075 = !DILexicalBlockFile(scope: !714, file: !408, discriminator: 11)
!3076 = !DILocation(line: 107, column: 5, scope: !703)
!3077 = !DILocation(line: 107, column: 10, scope: !3078)
!3078 = !DILexicalBlockFile(scope: !720, file: !408, discriminator: 1)
!3079 = !DILocation(line: 107, column: 20, scope: !720)
!3080 = !DILocation(line: 107, column: 43, scope: !720)
!3081 = !DILocation(line: 107, column: 47, scope: !720)
!3082 = !DILocation(line: 107, column: 69, scope: !724)
!3083 = !DILocation(line: 107, column: 77, scope: !724)
!3084 = !DILocation(line: 107, column: 69, scope: !720)
!3085 = !DILocation(line: 107, column: 95, scope: !3086)
!3086 = !DILexicalBlockFile(scope: !723, file: !408, discriminator: 2)
!3087 = !DILocation(line: 107, column: 99, scope: !723)
!3088 = !DILocation(line: 107, column: 116, scope: !723)
!3089 = !DILocation(line: 107, column: 130, scope: !723)
!3090 = !DILocation(line: 107, column: 135, scope: !3091)
!3091 = !DILexicalBlockFile(scope: !722, file: !408, discriminator: 4)
!3092 = !DILocation(line: 107, column: 145, scope: !722)
!3093 = !DILocation(line: 107, column: 175, scope: !722)
!3094 = !DILocation(line: 107, column: 193, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !722, file: !408, line: 107, column: 190)
!3096 = !DILocation(line: 107, column: 210, scope: !3095)
!3097 = !DILocation(line: 107, column: 190, scope: !3095)
!3098 = !DILocation(line: 107, column: 220, scope: !3095)
!3099 = !DILocation(line: 107, column: 190, scope: !722)
!3100 = !DILocation(line: 107, column: 190, scope: !3101)
!3101 = !DILexicalBlockFile(scope: !722, file: !408, discriminator: 5)
!3102 = !DILocation(line: 107, column: 251, scope: !3103)
!3103 = !DILexicalBlockFile(scope: !3095, file: !408, discriminator: 6)
!3104 = !DILocation(line: 107, column: 269, scope: !3095)
!3105 = !DILocation(line: 107, column: 279, scope: !3095)
!3106 = !DILocation(line: 107, column: 304, scope: !3095)
!3107 = !DILocation(line: 107, column: 235, scope: !3095)
!3108 = !DILocation(line: 107, column: 323, scope: !3109)
!3109 = !DILexicalBlockFile(scope: !723, file: !408, discriminator: 7)
!3110 = !DILocation(line: 107, column: 323, scope: !722)
!3111 = !DILocation(line: 107, column: 323, scope: !3112)
!3112 = !DILexicalBlockFile(scope: !722, file: !408, discriminator: 8)
!3113 = !DILocation(line: 107, column: 336, scope: !3114)
!3114 = !DILexicalBlockFile(scope: !723, file: !408, discriminator: 9)
!3115 = !DILocation(line: 107, column: 338, scope: !3028)
!3116 = !DILocation(line: 107, column: 338, scope: !720)
!3117 = !DILocation(line: 107, column: 338, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !720, file: !408, discriminator: 11)
!3119 = !DILocation(line: 109, column: 1, scope: !703)
!3120 = !DILocation(line: 108, column: 5, scope: !703)
!3121 = !DILocation(line: 122, column: 24, scope: !725)
!3122 = !DILocation(line: 124, column: 35, scope: !725)
!3123 = !DILocation(line: 124, column: 23, scope: !725)
!3124 = !DILocation(line: 124, column: 5, scope: !725)
!3125 = !DILocation(line: 125, column: 1, scope: !725)
!3126 = !DILocation(line: 561, column: 22, scope: !625)
!3127 = !DILocation(line: 561, column: 38, scope: !625)
!3128 = !DILocation(line: 561, column: 54, scope: !625)
!3129 = !DILocation(line: 563, column: 5, scope: !625)
!3130 = !DILocation(line: 563, column: 15, scope: !625)
!3131 = !DILocation(line: 565, column: 5, scope: !625)
!3132 = !DILocation(line: 565, column: 20, scope: !625)
!3133 = !DILocation(line: 566, column: 5, scope: !625)
!3134 = !DILocation(line: 566, column: 15, scope: !625)
!3135 = !DILocation(line: 567, column: 5, scope: !625)
!3136 = !DILocation(line: 567, column: 15, scope: !625)
!3137 = !DILocation(line: 568, column: 27, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !625, file: !408, line: 568, column: 9)
!3139 = !DILocation(line: 568, column: 10, scope: !3138)
!3140 = !DILocation(line: 568, column: 9, scope: !625)
!3141 = !DILocation(line: 571, column: 9, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3138, file: !408, line: 570, column: 51)
!3143 = !DILocation(line: 574, column: 9, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !625, file: !408, line: 574, column: 9)
!3145 = !DILocation(line: 574, column: 9, scope: !625)
!3146 = !DILocation(line: 576, column: 30, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3144, file: !408, line: 574, column: 17)
!3148 = !DILocation(line: 576, column: 18, scope: !3147)
!3149 = !DILocation(line: 576, column: 16, scope: !3147)
!3150 = !DILocation(line: 577, column: 14, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3147, file: !408, line: 577, column: 13)
!3152 = !DILocation(line: 577, column: 13, scope: !3147)
!3153 = !DILocation(line: 578, column: 13, scope: !3151)
!3154 = !DILocation(line: 579, column: 13, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3147, file: !408, line: 579, column: 13)
!3156 = !DILocation(line: 579, column: 13, scope: !3147)
!3157 = !DILocation(line: 580, column: 31, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3159, file: !408, line: 580, column: 17)
!3159 = distinct !DILexicalBlock(scope: !3155, file: !408, line: 579, column: 19)
!3160 = !DILocation(line: 580, column: 39, scope: !3158)
!3161 = !DILocation(line: 580, column: 17, scope: !3158)
!3162 = !DILocation(line: 580, column: 45, scope: !3158)
!3163 = !DILocation(line: 580, column: 17, scope: !3159)
!3164 = !DILocation(line: 581, column: 17, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3158, file: !408, line: 580, column: 50)
!3166 = !DILocation(line: 583, column: 9, scope: !3159)
!3167 = !DILocation(line: 584, column: 5, scope: !3147)
!3168 = !DILocation(line: 584, column: 16, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3144, file: !408, line: 584, column: 16)
!3170 = !DILocation(line: 584, column: 16, scope: !3144)
!3171 = !DILocation(line: 586, column: 43, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3169, file: !408, line: 584, column: 22)
!3173 = !DILocation(line: 586, column: 18, scope: !3172)
!3174 = !DILocation(line: 586, column: 16, scope: !3172)
!3175 = !DILocation(line: 587, column: 14, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3172, file: !408, line: 587, column: 13)
!3177 = !DILocation(line: 587, column: 13, scope: !3172)
!3178 = !DILocation(line: 588, column: 13, scope: !3176)
!3179 = !DILocation(line: 589, column: 5, scope: !3172)
!3180 = !DILocation(line: 591, column: 55, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3169, file: !408, line: 589, column: 12)
!3182 = !DILocation(line: 592, column: 16, scope: !3181)
!3183 = !DILocation(line: 595, column: 31, scope: !625)
!3184 = !DILocation(line: 595, column: 36, scope: !625)
!3185 = !DILocation(line: 595, column: 12, scope: !625)
!3186 = !DILocation(line: 595, column: 10, scope: !625)
!3187 = !DILocation(line: 596, column: 5, scope: !625)
!3188 = !DILocation(line: 596, column: 10, scope: !3189)
!3189 = !DILexicalBlockFile(scope: !635, file: !408, discriminator: 1)
!3190 = !DILocation(line: 596, column: 20, scope: !635)
!3191 = !DILocation(line: 596, column: 50, scope: !635)
!3192 = !DILocation(line: 596, column: 67, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !635, file: !408, line: 596, column: 64)
!3194 = !DILocation(line: 596, column: 84, scope: !3193)
!3195 = !DILocation(line: 596, column: 64, scope: !3193)
!3196 = !DILocation(line: 596, column: 94, scope: !3193)
!3197 = !DILocation(line: 596, column: 64, scope: !635)
!3198 = !DILocation(line: 596, column: 64, scope: !3199)
!3199 = !DILexicalBlockFile(scope: !635, file: !408, discriminator: 2)
!3200 = !DILocation(line: 596, column: 125, scope: !3201)
!3201 = !DILexicalBlockFile(scope: !3193, file: !408, discriminator: 3)
!3202 = !DILocation(line: 596, column: 143, scope: !3193)
!3203 = !DILocation(line: 596, column: 153, scope: !3193)
!3204 = !DILocation(line: 596, column: 178, scope: !3193)
!3205 = !DILocation(line: 596, column: 109, scope: !3193)
!3206 = !DILocation(line: 596, column: 197, scope: !3207)
!3207 = !DILexicalBlockFile(scope: !625, file: !408, discriminator: 4)
!3208 = !DILocation(line: 596, column: 197, scope: !635)
!3209 = !DILocation(line: 596, column: 197, scope: !3210)
!3210 = !DILexicalBlockFile(scope: !635, file: !408, discriminator: 5)
!3211 = !DILocation(line: 597, column: 9, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !625, file: !408, line: 597, column: 9)
!3213 = !DILocation(line: 597, column: 14, scope: !3212)
!3214 = !DILocation(line: 597, column: 9, scope: !625)
!3215 = !DILocation(line: 598, column: 9, scope: !3212)
!3216 = !DILocation(line: 600, column: 32, scope: !639)
!3217 = !DILocation(line: 600, column: 40, scope: !639)
!3218 = !DILocation(line: 600, column: 9, scope: !639)
!3219 = !DILocation(line: 600, column: 46, scope: !639)
!3220 = !DILocation(line: 600, column: 9, scope: !625)
!3221 = !DILocation(line: 601, column: 9, scope: !638)
!3222 = !DILocation(line: 601, column: 14, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !637, file: !408, discriminator: 1)
!3224 = !DILocation(line: 601, column: 24, scope: !637)
!3225 = !DILocation(line: 601, column: 54, scope: !637)
!3226 = !DILocation(line: 601, column: 69, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !637, file: !408, line: 601, column: 66)
!3228 = !DILocation(line: 601, column: 86, scope: !3227)
!3229 = !DILocation(line: 601, column: 66, scope: !3227)
!3230 = !DILocation(line: 601, column: 96, scope: !3227)
!3231 = !DILocation(line: 601, column: 66, scope: !637)
!3232 = !DILocation(line: 601, column: 66, scope: !3233)
!3233 = !DILexicalBlockFile(scope: !637, file: !408, discriminator: 2)
!3234 = !DILocation(line: 601, column: 127, scope: !3235)
!3235 = !DILexicalBlockFile(scope: !3227, file: !408, discriminator: 3)
!3236 = !DILocation(line: 601, column: 145, scope: !3227)
!3237 = !DILocation(line: 601, column: 155, scope: !3227)
!3238 = !DILocation(line: 601, column: 180, scope: !3227)
!3239 = !DILocation(line: 601, column: 111, scope: !3227)
!3240 = !DILocation(line: 601, column: 199, scope: !3241)
!3241 = !DILexicalBlockFile(scope: !638, file: !408, discriminator: 4)
!3242 = !DILocation(line: 601, column: 199, scope: !637)
!3243 = !DILocation(line: 601, column: 199, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !637, file: !408, discriminator: 5)
!3245 = !DILocation(line: 602, column: 9, scope: !638)
!3246 = !DILocation(line: 605, column: 12, scope: !625)
!3247 = !DILocation(line: 605, column: 5, scope: !625)
!3248 = !DILocation(line: 606, column: 1, scope: !625)
!3249 = !DILocation(line: 341, column: 36, scope: !640)
!3250 = !DILocation(line: 343, column: 5, scope: !640)
!3251 = !DILocation(line: 343, column: 15, scope: !640)
!3252 = !DILocation(line: 343, column: 28, scope: !640)
!3253 = !DILocation(line: 344, column: 5, scope: !640)
!3254 = !DILocation(line: 344, column: 15, scope: !640)
!3255 = !DILocation(line: 344, column: 39, scope: !640)
!3256 = !DILocation(line: 344, column: 45, scope: !640)
!3257 = !DILocation(line: 344, column: 24, scope: !640)
!3258 = !DILocation(line: 346, column: 9, scope: !650)
!3259 = !DILocation(line: 346, column: 9, scope: !640)
!3260 = !DILocation(line: 350, column: 31, scope: !648)
!3261 = !DILocation(line: 350, column: 41, scope: !648)
!3262 = !DILocation(line: 350, column: 52, scope: !648)
!3263 = !{!2706, !2633, i64 168}
!3264 = !DILocation(line: 350, column: 61, scope: !648)
!3265 = !DILocation(line: 350, column: 78, scope: !648)
!3266 = !DILocation(line: 350, column: 13, scope: !649)
!3267 = !DILocation(line: 351, column: 13, scope: !647)
!3268 = !DILocation(line: 351, column: 18, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !646, file: !408, discriminator: 1)
!3270 = !DILocation(line: 351, column: 28, scope: !646)
!3271 = !DILocation(line: 351, column: 58, scope: !646)
!3272 = !DILocation(line: 351, column: 79, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !646, file: !408, line: 351, column: 76)
!3274 = !DILocation(line: 351, column: 96, scope: !3273)
!3275 = !DILocation(line: 351, column: 76, scope: !3273)
!3276 = !DILocation(line: 351, column: 106, scope: !3273)
!3277 = !DILocation(line: 351, column: 76, scope: !646)
!3278 = !DILocation(line: 351, column: 76, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !646, file: !408, discriminator: 2)
!3280 = !DILocation(line: 351, column: 137, scope: !3281)
!3281 = !DILexicalBlockFile(scope: !3273, file: !408, discriminator: 3)
!3282 = !DILocation(line: 351, column: 155, scope: !3273)
!3283 = !DILocation(line: 351, column: 165, scope: !3273)
!3284 = !DILocation(line: 351, column: 190, scope: !3273)
!3285 = !DILocation(line: 351, column: 121, scope: !3273)
!3286 = !DILocation(line: 351, column: 209, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !647, file: !408, discriminator: 4)
!3288 = !DILocation(line: 351, column: 209, scope: !646)
!3289 = !DILocation(line: 351, column: 209, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !646, file: !408, discriminator: 5)
!3291 = !DILocation(line: 352, column: 26, scope: !647)
!3292 = !DILocation(line: 353, column: 40, scope: !647)
!3293 = !DILocation(line: 353, column: 50, scope: !647)
!3294 = !DILocation(line: 353, column: 60, scope: !647)
!3295 = !{!2706, !2621, i64 24}
!3296 = !DILocation(line: 352, column: 13, scope: !647)
!3297 = !DILocation(line: 354, column: 13, scope: !647)
!3298 = !DILocation(line: 356, column: 30, scope: !649)
!3299 = !DILocation(line: 356, column: 18, scope: !649)
!3300 = !DILocation(line: 356, column: 16, scope: !649)
!3301 = !DILocation(line: 357, column: 24, scope: !649)
!3302 = !DILocation(line: 357, column: 30, scope: !649)
!3303 = !DILocation(line: 357, column: 9, scope: !649)
!3304 = !DILocation(line: 358, column: 5, scope: !649)
!3305 = !DILocation(line: 359, column: 18, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !650, file: !408, line: 358, column: 12)
!3307 = !DILocation(line: 359, column: 16, scope: !3306)
!3308 = !DILocation(line: 362, column: 5, scope: !640)
!3309 = !DILocation(line: 362, column: 10, scope: !3310)
!3310 = !DILexicalBlockFile(scope: !652, file: !408, discriminator: 1)
!3311 = !DILocation(line: 362, column: 20, scope: !652)
!3312 = !DILocation(line: 362, column: 50, scope: !652)
!3313 = !DILocation(line: 362, column: 71, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !652, file: !408, line: 362, column: 68)
!3315 = !DILocation(line: 362, column: 88, scope: !3314)
!3316 = !DILocation(line: 362, column: 68, scope: !3314)
!3317 = !DILocation(line: 362, column: 98, scope: !3314)
!3318 = !DILocation(line: 362, column: 68, scope: !652)
!3319 = !DILocation(line: 362, column: 68, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !652, file: !408, discriminator: 2)
!3321 = !DILocation(line: 362, column: 129, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !3314, file: !408, discriminator: 3)
!3323 = !DILocation(line: 362, column: 147, scope: !3314)
!3324 = !DILocation(line: 362, column: 157, scope: !3314)
!3325 = !DILocation(line: 362, column: 182, scope: !3314)
!3326 = !DILocation(line: 362, column: 113, scope: !3314)
!3327 = !DILocation(line: 362, column: 201, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !640, file: !408, discriminator: 4)
!3329 = !DILocation(line: 362, column: 201, scope: !652)
!3330 = !DILocation(line: 362, column: 201, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !652, file: !408, discriminator: 5)
!3332 = !DILocation(line: 365, column: 9, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !640, file: !408, line: 365, column: 9)
!3334 = !DILocation(line: 365, column: 9, scope: !640)
!3335 = !DILocation(line: 366, column: 27, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3333, file: !408, line: 366, column: 13)
!3337 = !DILocation(line: 366, column: 35, scope: !3336)
!3338 = !DILocation(line: 366, column: 13, scope: !3336)
!3339 = !DILocation(line: 366, column: 41, scope: !3336)
!3340 = !DILocation(line: 366, column: 13, scope: !3333)
!3341 = !DILocation(line: 367, column: 13, scope: !3336)
!3342 = !DILocation(line: 366, column: 43, scope: !3343)
!3343 = !DILexicalBlockFile(scope: !3336, file: !408, discriminator: 1)
!3344 = !DILocation(line: 368, column: 12, scope: !640)
!3345 = !DILocation(line: 368, column: 5, scope: !640)
!3346 = !DILocation(line: 369, column: 1, scope: !640)
!3347 = !DILocation(line: 279, column: 30, scope: !653)
!3348 = !DILocation(line: 279, column: 45, scope: !653)
!3349 = !DILocation(line: 281, column: 5, scope: !653)
!3350 = !DILocation(line: 281, column: 20, scope: !653)
!3351 = !DILocation(line: 283, column: 32, scope: !653)
!3352 = !DILocation(line: 283, column: 14, scope: !653)
!3353 = !DILocation(line: 283, column: 10, scope: !653)
!3354 = !DILocation(line: 284, column: 9, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !653, file: !408, line: 284, column: 9)
!3356 = !DILocation(line: 284, column: 14, scope: !3355)
!3357 = !DILocation(line: 284, column: 9, scope: !653)
!3358 = !DILocation(line: 285, column: 9, scope: !3355)
!3359 = !DILocation(line: 286, column: 5, scope: !653)
!3360 = !DILocation(line: 286, column: 11, scope: !653)
!3361 = !DILocation(line: 286, column: 17, scope: !653)
!3362 = !{!3363, !2621, i64 40}
!3363 = !{!"", !2632, i64 0, !2621, i64 16, !2621, i64 24, !2621, i64 32, !2621, i64 40, !2621, i64 48}
!3364 = !DILocation(line: 288, column: 21, scope: !653)
!3365 = !DILocation(line: 288, column: 28, scope: !653)
!3366 = !DILocation(line: 288, column: 37, scope: !653)
!3367 = !DILocation(line: 289, column: 17, scope: !653)
!3368 = !DILocation(line: 289, column: 5, scope: !653)
!3369 = !DILocation(line: 289, column: 11, scope: !653)
!3370 = !DILocation(line: 289, column: 15, scope: !653)
!3371 = !{!3363, !2621, i64 16}
!3372 = !DILocation(line: 291, column: 51, scope: !653)
!3373 = !DILocation(line: 292, column: 5, scope: !653)
!3374 = !DILocation(line: 292, column: 11, scope: !653)
!3375 = !DILocation(line: 292, column: 16, scope: !653)
!3376 = !{!3363, !2621, i64 24}
!3377 = !DILocation(line: 294, column: 51, scope: !653)
!3378 = !DILocation(line: 295, column: 5, scope: !653)
!3379 = !DILocation(line: 295, column: 11, scope: !653)
!3380 = !DILocation(line: 295, column: 16, scope: !653)
!3381 = !{!3363, !2621, i64 32}
!3382 = !DILocation(line: 297, column: 5, scope: !653)
!3383 = !DILocation(line: 297, column: 11, scope: !653)
!3384 = !DILocation(line: 297, column: 23, scope: !653)
!3385 = !{!3363, !2621, i64 48}
!3386 = !DILocation(line: 300, column: 23, scope: !653)
!3387 = !DILocation(line: 300, column: 5, scope: !653)
!3388 = !DILocation(line: 302, column: 9, scope: !663)
!3389 = !DILocation(line: 302, column: 16, scope: !663)
!3390 = !DILocation(line: 302, column: 37, scope: !663)
!3391 = !DILocation(line: 302, column: 55, scope: !3392)
!3392 = !DILexicalBlockFile(scope: !663, file: !408, discriminator: 1)
!3393 = !DILocation(line: 302, column: 41, scope: !663)
!3394 = !DILocation(line: 302, column: 9, scope: !653)
!3395 = !DILocation(line: 303, column: 26, scope: !661)
!3396 = !DILocation(line: 303, column: 32, scope: !661)
!3397 = !DILocation(line: 303, column: 13, scope: !661)
!3398 = !DILocation(line: 303, column: 40, scope: !661)
!3399 = !DILocation(line: 303, column: 13, scope: !662)
!3400 = !DILocation(line: 304, column: 13, scope: !660)
!3401 = !DILocation(line: 304, column: 18, scope: !3402)
!3402 = !DILexicalBlockFile(scope: !659, file: !408, discriminator: 1)
!3403 = !DILocation(line: 304, column: 28, scope: !659)
!3404 = !DILocation(line: 304, column: 58, scope: !659)
!3405 = !DILocation(line: 304, column: 45, scope: !659)
!3406 = !DILocation(line: 304, column: 73, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !659, file: !408, line: 304, column: 70)
!3408 = !DILocation(line: 304, column: 90, scope: !3407)
!3409 = !DILocation(line: 304, column: 70, scope: !3407)
!3410 = !DILocation(line: 304, column: 100, scope: !3407)
!3411 = !DILocation(line: 304, column: 70, scope: !659)
!3412 = !DILocation(line: 304, column: 70, scope: !3413)
!3413 = !DILexicalBlockFile(scope: !659, file: !408, discriminator: 2)
!3414 = !DILocation(line: 304, column: 131, scope: !3415)
!3415 = !DILexicalBlockFile(scope: !3407, file: !408, discriminator: 3)
!3416 = !DILocation(line: 304, column: 149, scope: !3407)
!3417 = !DILocation(line: 304, column: 159, scope: !3407)
!3418 = !DILocation(line: 304, column: 184, scope: !3407)
!3419 = !DILocation(line: 304, column: 115, scope: !3407)
!3420 = !DILocation(line: 304, column: 203, scope: !3421)
!3421 = !DILexicalBlockFile(scope: !660, file: !408, discriminator: 4)
!3422 = !DILocation(line: 304, column: 203, scope: !659)
!3423 = !DILocation(line: 304, column: 203, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !659, file: !408, discriminator: 5)
!3425 = !DILocation(line: 305, column: 13, scope: !660)
!3426 = !DILocation(line: 307, column: 5, scope: !662)
!3427 = !DILocation(line: 309, column: 24, scope: !653)
!3428 = !DILocation(line: 309, column: 12, scope: !653)
!3429 = !DILocation(line: 309, column: 5, scope: !653)
!3430 = !DILocation(line: 310, column: 1, scope: !653)
!3431 = !DILocation(line: 485, column: 39, scope: !673)
!3432 = !DILocation(line: 485, column: 55, scope: !673)
!3433 = !DILocation(line: 489, column: 24, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !673, file: !408, line: 489, column: 9)
!3435 = !DILocation(line: 489, column: 9, scope: !3434)
!3436 = !DILocation(line: 489, column: 33, scope: !3434)
!3437 = !DILocation(line: 489, column: 9, scope: !673)
!3438 = !DILocation(line: 490, column: 9, scope: !3434)
!3439 = !DILocation(line: 492, column: 21, scope: !673)
!3440 = !DILocation(line: 492, column: 32, scope: !673)
!3441 = !DILocation(line: 492, column: 41, scope: !673)
!3442 = !DILocation(line: 493, column: 50, scope: !673)
!3443 = !DILocation(line: 493, column: 27, scope: !673)
!3444 = !DILocation(line: 493, column: 33, scope: !673)
!3445 = !DILocation(line: 493, column: 40, scope: !673)
!3446 = !{!3447, !2708, i64 8}
!3447 = !{!"", !2621, i64 0, !2708, i64 8, !2708, i64 12, !2621, i64 16, !2622, i64 24}
!3448 = !DILocation(line: 493, column: 5, scope: !673)
!3449 = !DILocation(line: 493, column: 11, scope: !673)
!3450 = !DILocation(line: 493, column: 18, scope: !673)
!3451 = !{!3447, !2621, i64 16}
!3452 = !DILocation(line: 493, column: 48, scope: !673)
!3453 = !DILocation(line: 495, column: 5, scope: !673)
!3454 = !DILocation(line: 495, column: 11, scope: !673)
!3455 = !DILocation(line: 495, column: 18, scope: !673)
!3456 = !DILocation(line: 495, column: 24, scope: !673)
!3457 = !DILocation(line: 497, column: 5, scope: !673)
!3458 = !DILocation(line: 498, column: 1, scope: !673)
!3459 = !DILocation(line: 173, column: 25, scope: !664)
!3460 = !DILocation(line: 175, column: 27, scope: !664)
!3461 = !DILocation(line: 175, column: 34, scope: !664)
!3462 = !DILocation(line: 175, column: 43, scope: !664)
!3463 = !DILocation(line: 175, column: 60, scope: !664)
!3464 = !DILocation(line: 175, column: 75, scope: !3465)
!3465 = !DILexicalBlockFile(scope: !664, file: !408, discriminator: 1)
!3466 = !DILocation(line: 175, column: 63, scope: !664)
!3467 = !DILocation(line: 175, column: 80, scope: !664)
!3468 = !DILocation(line: 175, column: 60, scope: !3469)
!3469 = !DILexicalBlockFile(scope: !664, file: !408, discriminator: 2)
!3470 = !DILocation(line: 175, column: 5, scope: !664)
!3471 = !DILocation(line: 229, column: 29, scope: !667)
!3472 = !DILocation(line: 229, column: 45, scope: !667)
!3473 = !DILocation(line: 231, column: 19, scope: !667)
!3474 = !DILocation(line: 231, column: 5, scope: !667)
!3475 = !DILocation(line: 231, column: 11, scope: !667)
!3476 = !DILocation(line: 231, column: 17, scope: !667)
!3477 = !DILocation(line: 232, column: 10, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !667, file: !408, line: 232, column: 9)
!3479 = !DILocation(line: 232, column: 16, scope: !3478)
!3480 = !DILocation(line: 232, column: 9, scope: !667)
!3481 = !DILocation(line: 233, column: 9, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3478, file: !408, line: 232, column: 23)
!3483 = !DILocation(line: 234, column: 9, scope: !3482)
!3484 = !DILocation(line: 237, column: 10, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !667, file: !408, line: 237, column: 9)
!3486 = !DILocation(line: 237, column: 9, scope: !667)
!3487 = !DILocation(line: 238, column: 16, scope: !3485)
!3488 = !DILocation(line: 238, column: 9, scope: !3485)
!3489 = !DILocation(line: 240, column: 21, scope: !667)
!3490 = !DILocation(line: 240, column: 31, scope: !667)
!3491 = !DILocation(line: 240, column: 40, scope: !667)
!3492 = !DILocation(line: 241, column: 27, scope: !667)
!3493 = !DILocation(line: 241, column: 5, scope: !667)
!3494 = !DILocation(line: 241, column: 11, scope: !667)
!3495 = !DILocation(line: 241, column: 18, scope: !667)
!3496 = !DILocation(line: 241, column: 25, scope: !667)
!3497 = !{!3447, !2621, i64 0}
!3498 = !DILocation(line: 243, column: 5, scope: !667)
!3499 = !DILocation(line: 243, column: 11, scope: !667)
!3500 = !DILocation(line: 243, column: 18, scope: !667)
!3501 = !DILocation(line: 243, column: 25, scope: !667)
!3502 = !DILocation(line: 244, column: 5, scope: !667)
!3503 = !DILocation(line: 244, column: 11, scope: !667)
!3504 = !DILocation(line: 244, column: 18, scope: !667)
!3505 = !DILocation(line: 244, column: 28, scope: !667)
!3506 = !{!3447, !2708, i64 12}
!3507 = !DILocation(line: 245, column: 29, scope: !667)
!3508 = !DILocation(line: 245, column: 35, scope: !667)
!3509 = !DILocation(line: 245, column: 42, scope: !667)
!3510 = !DILocation(line: 245, column: 5, scope: !667)
!3511 = !DILocation(line: 245, column: 11, scope: !667)
!3512 = !DILocation(line: 245, column: 18, scope: !667)
!3513 = !DILocation(line: 245, column: 27, scope: !667)
!3514 = !DILocation(line: 247, column: 5, scope: !667)
!3515 = !DILocation(line: 248, column: 1, scope: !667)
!3516 = !DILocation(line: 432, column: 31, scope: !677)
!3517 = !DILocation(line: 432, column: 41, scope: !677)
!3518 = !DILocation(line: 434, column: 5, scope: !677)
!3519 = !DILocation(line: 434, column: 9, scope: !677)
!3520 = !DILocation(line: 435, column: 5, scope: !677)
!3521 = !DILocation(line: 435, column: 16, scope: !677)
!3522 = !DILocation(line: 440, column: 10, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !677, file: !408, line: 440, column: 9)
!3524 = !DILocation(line: 440, column: 16, scope: !3523)
!3525 = !DILocation(line: 440, column: 9, scope: !677)
!3526 = !DILocation(line: 441, column: 26, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !408, line: 441, column: 13)
!3528 = distinct !DILexicalBlock(scope: !3523, file: !408, line: 440, column: 23)
!3529 = !DILocation(line: 441, column: 13, scope: !3527)
!3530 = !DILocation(line: 441, column: 44, scope: !3527)
!3531 = !DILocation(line: 441, column: 13, scope: !3528)
!3532 = !DILocation(line: 442, column: 13, scope: !3527)
!3533 = !DILocation(line: 443, column: 5, scope: !3528)
!3534 = !DILocation(line: 445, column: 12, scope: !677)
!3535 = !DILocation(line: 445, column: 18, scope: !677)
!3536 = !DILocation(line: 445, column: 25, scope: !677)
!3537 = !DILocation(line: 445, column: 34, scope: !677)
!3538 = !DILocation(line: 445, column: 32, scope: !677)
!3539 = !DILocation(line: 445, column: 10, scope: !677)
!3540 = !DILocation(line: 447, column: 9, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !677, file: !408, line: 447, column: 9)
!3542 = !DILocation(line: 447, column: 16, scope: !3541)
!3543 = !DILocation(line: 447, column: 22, scope: !3541)
!3544 = !DILocation(line: 447, column: 29, scope: !3541)
!3545 = !DILocation(line: 447, column: 14, scope: !3541)
!3546 = !DILocation(line: 447, column: 9, scope: !677)
!3547 = !DILocation(line: 449, column: 17, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3541, file: !408, line: 447, column: 40)
!3549 = !DILocation(line: 449, column: 22, scope: !3548)
!3550 = !DILocation(line: 449, column: 31, scope: !3548)
!3551 = !DILocation(line: 449, column: 36, scope: !3548)
!3552 = !DILocation(line: 449, column: 28, scope: !3548)
!3553 = !DILocation(line: 449, column: 51, scope: !3548)
!3554 = !DILocation(line: 449, column: 49, scope: !3548)
!3555 = !DILocation(line: 449, column: 14, scope: !3548)
!3556 = !DILocation(line: 455, column: 16, scope: !3548)
!3557 = !DILocation(line: 455, column: 23, scope: !3558)
!3558 = !DILexicalBlockFile(scope: !3548, file: !408, discriminator: 1)
!3559 = !DILocation(line: 455, column: 16, scope: !3560)
!3560 = !DILexicalBlockFile(scope: !3548, file: !408, discriminator: 2)
!3561 = !DILocation(line: 455, column: 14, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !3563, file: !408, discriminator: 4)
!3563 = !DILexicalBlockFile(scope: !3548, file: !408, discriminator: 3)
!3564 = !DILocation(line: 456, column: 13, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3548, file: !408, line: 456, column: 13)
!3566 = !DILocation(line: 456, column: 19, scope: !3565)
!3567 = !DILocation(line: 456, column: 26, scope: !3565)
!3568 = !DILocation(line: 456, column: 38, scope: !3565)
!3569 = !DILocation(line: 456, column: 44, scope: !3565)
!3570 = !DILocation(line: 456, column: 51, scope: !3565)
!3571 = !DILocation(line: 456, column: 35, scope: !3565)
!3572 = !DILocation(line: 456, column: 13, scope: !3548)
!3573 = !DILocation(line: 461, column: 41, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3565, file: !408, line: 456, column: 62)
!3575 = !DILocation(line: 461, column: 47, scope: !3574)
!3576 = !DILocation(line: 461, column: 54, scope: !3574)
!3577 = !DILocation(line: 462, column: 41, scope: !3574)
!3578 = !DILocation(line: 462, column: 46, scope: !3574)
!3579 = !DILocation(line: 461, column: 24, scope: !3574)
!3580 = !DILocation(line: 461, column: 22, scope: !3574)
!3581 = !DILocation(line: 463, column: 18, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3574, file: !408, line: 463, column: 17)
!3583 = !DILocation(line: 463, column: 17, scope: !3574)
!3584 = !DILocation(line: 464, column: 17, scope: !3582)
!3585 = !DILocation(line: 465, column: 9, scope: !3574)
!3586 = !DILocation(line: 466, column: 40, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3565, file: !408, line: 465, column: 16)
!3588 = !DILocation(line: 466, column: 45, scope: !3587)
!3589 = !DILocation(line: 466, column: 24, scope: !3587)
!3590 = !DILocation(line: 466, column: 22, scope: !3587)
!3591 = !DILocation(line: 467, column: 18, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3587, file: !408, line: 467, column: 17)
!3593 = !DILocation(line: 467, column: 17, scope: !3587)
!3594 = !DILocation(line: 468, column: 17, scope: !3592)
!3595 = !DILocation(line: 470, column: 20, scope: !3587)
!3596 = !DILocation(line: 470, column: 13, scope: !3587)
!3597 = !DILocation(line: 470, column: 30, scope: !3587)
!3598 = !DILocation(line: 470, column: 36, scope: !3587)
!3599 = !DILocation(line: 470, column: 43, scope: !3587)
!3600 = !DILocation(line: 471, column: 20, scope: !3587)
!3601 = !DILocation(line: 471, column: 26, scope: !3587)
!3602 = !DILocation(line: 471, column: 33, scope: !3587)
!3603 = !DILocation(line: 471, column: 40, scope: !3587)
!3604 = !DILocation(line: 473, column: 33, scope: !3548)
!3605 = !DILocation(line: 473, column: 9, scope: !3548)
!3606 = !DILocation(line: 473, column: 15, scope: !3548)
!3607 = !DILocation(line: 473, column: 22, scope: !3548)
!3608 = !DILocation(line: 473, column: 31, scope: !3548)
!3609 = !DILocation(line: 474, column: 34, scope: !3548)
!3610 = !DILocation(line: 474, column: 9, scope: !3548)
!3611 = !DILocation(line: 474, column: 15, scope: !3548)
!3612 = !DILocation(line: 474, column: 22, scope: !3548)
!3613 = !DILocation(line: 474, column: 32, scope: !3548)
!3614 = !DILocation(line: 475, column: 5, scope: !3548)
!3615 = !DILocation(line: 477, column: 5, scope: !677)
!3616 = !DILocation(line: 480, column: 5, scope: !677)
!3617 = !DILocation(line: 481, column: 5, scope: !677)
!3618 = !DILocation(line: 482, column: 1, scope: !677)
!3619 = !DILocation(line: 1953, column: 40, scope: !728)
!3620 = !DILocation(line: 1955, column: 5, scope: !728)
!3621 = !DILocation(line: 1955, column: 20, scope: !728)
!3622 = !DILocation(line: 1955, column: 24, scope: !728)
!3623 = !DILocation(line: 1955, column: 28, scope: !728)
!3624 = !{!3625, !2621, i64 16}
!3625 = !{!"", !2632, i64 0, !2621, i64 16, !2621, i64 24, !2621, i64 32, !2708, i64 40, !2708, i64 44}
!3626 = !DILocation(line: 1956, column: 5, scope: !728)
!3627 = !DILocation(line: 1956, column: 12, scope: !3628)
!3628 = !DILexicalBlockFile(scope: !3629, file: !408, discriminator: 2)
!3629 = !DILexicalBlockFile(scope: !728, file: !408, discriminator: 1)
!3630 = !DILocation(line: 1957, column: 9, scope: !735)
!3631 = !DILocation(line: 1957, column: 24, scope: !735)
!3632 = !DILocation(line: 1957, column: 31, scope: !735)
!3633 = !DILocation(line: 1958, column: 9, scope: !735)
!3634 = !DILocation(line: 1958, column: 14, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !737, file: !408, discriminator: 1)
!3636 = !DILocation(line: 1958, column: 24, scope: !737)
!3637 = !DILocation(line: 1958, column: 55, scope: !737)
!3638 = !DILocation(line: 1958, column: 58, scope: !737)
!3639 = !{!3640, !2621, i64 0}
!3640 = !{!"ParentLocator_t", !2621, i64 0, !2633, i64 8, !2621, i64 16}
!3641 = !DILocation(line: 1958, column: 42, scope: !737)
!3642 = !DILocation(line: 1958, column: 71, scope: !740)
!3643 = !DILocation(line: 1958, column: 87, scope: !740)
!3644 = !DILocation(line: 1958, column: 71, scope: !737)
!3645 = !DILocation(line: 1958, column: 102, scope: !3646)
!3646 = !DILexicalBlockFile(scope: !740, file: !408, discriminator: 2)
!3647 = !DILocation(line: 1958, column: 107, scope: !3648)
!3648 = !DILexicalBlockFile(scope: !739, file: !408, discriminator: 4)
!3649 = !DILocation(line: 1958, column: 117, scope: !739)
!3650 = !DILocation(line: 1958, column: 147, scope: !739)
!3651 = !DILocation(line: 1958, column: 173, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !739, file: !408, line: 1958, column: 170)
!3653 = !DILocation(line: 1958, column: 190, scope: !3652)
!3654 = !DILocation(line: 1958, column: 170, scope: !3652)
!3655 = !DILocation(line: 1958, column: 200, scope: !3652)
!3656 = !DILocation(line: 1958, column: 170, scope: !739)
!3657 = !DILocation(line: 1958, column: 170, scope: !3658)
!3658 = !DILexicalBlockFile(scope: !739, file: !408, discriminator: 5)
!3659 = !DILocation(line: 1958, column: 231, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3652, file: !408, discriminator: 6)
!3661 = !DILocation(line: 1958, column: 249, scope: !3652)
!3662 = !DILocation(line: 1958, column: 259, scope: !3652)
!3663 = !DILocation(line: 1958, column: 284, scope: !3652)
!3664 = !DILocation(line: 1958, column: 215, scope: !3652)
!3665 = !DILocation(line: 1958, column: 303, scope: !3666)
!3666 = !DILexicalBlockFile(scope: !740, file: !408, discriminator: 7)
!3667 = !DILocation(line: 1958, column: 303, scope: !739)
!3668 = !DILocation(line: 1958, column: 303, scope: !3669)
!3669 = !DILexicalBlockFile(scope: !739, file: !408, discriminator: 8)
!3670 = !DILocation(line: 1958, column: 303, scope: !3671)
!3671 = !DILexicalBlockFile(scope: !739, file: !408, discriminator: 9)
!3672 = !DILocation(line: 1958, column: 316, scope: !3673)
!3673 = !DILexicalBlockFile(scope: !3674, file: !408, discriminator: 10)
!3674 = !DILexicalBlockFile(scope: !735, file: !408, discriminator: 3)
!3675 = !DILocation(line: 1958, column: 316, scope: !737)
!3676 = !DILocation(line: 1958, column: 316, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !737, file: !408, discriminator: 11)
!3678 = !DILocation(line: 1959, column: 13, scope: !735)
!3679 = !DILocation(line: 1959, column: 16, scope: !735)
!3680 = !{!3640, !2621, i64 16}
!3681 = !DILocation(line: 1959, column: 11, scope: !735)
!3682 = !DILocation(line: 1960, column: 23, scope: !735)
!3683 = !DILocation(line: 1960, column: 9, scope: !735)
!3684 = !DILocation(line: 1961, column: 5, scope: !728)
!3685 = !DILocation(line: 1963, column: 5, scope: !728)
!3686 = !DILocation(line: 1963, column: 10, scope: !3687)
!3687 = !DILexicalBlockFile(scope: !742, file: !408, discriminator: 1)
!3688 = !DILocation(line: 1963, column: 20, scope: !742)
!3689 = !DILocation(line: 1963, column: 51, scope: !742)
!3690 = !DILocation(line: 1963, column: 55, scope: !742)
!3691 = !{!3625, !2621, i64 32}
!3692 = !DILocation(line: 1963, column: 72, scope: !745)
!3693 = !DILocation(line: 1963, column: 88, scope: !745)
!3694 = !DILocation(line: 1963, column: 72, scope: !742)
!3695 = !DILocation(line: 1963, column: 103, scope: !3696)
!3696 = !DILexicalBlockFile(scope: !745, file: !408, discriminator: 2)
!3697 = !DILocation(line: 1963, column: 108, scope: !3698)
!3698 = !DILexicalBlockFile(scope: !744, file: !408, discriminator: 4)
!3699 = !DILocation(line: 1963, column: 118, scope: !744)
!3700 = !DILocation(line: 1963, column: 148, scope: !744)
!3701 = !DILocation(line: 1963, column: 174, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !744, file: !408, line: 1963, column: 171)
!3703 = !DILocation(line: 1963, column: 191, scope: !3702)
!3704 = !DILocation(line: 1963, column: 171, scope: !3702)
!3705 = !DILocation(line: 1963, column: 201, scope: !3702)
!3706 = !DILocation(line: 1963, column: 171, scope: !744)
!3707 = !DILocation(line: 1963, column: 171, scope: !3708)
!3708 = !DILexicalBlockFile(scope: !744, file: !408, discriminator: 5)
!3709 = !DILocation(line: 1963, column: 232, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3702, file: !408, discriminator: 6)
!3711 = !DILocation(line: 1963, column: 250, scope: !3702)
!3712 = !DILocation(line: 1963, column: 260, scope: !3702)
!3713 = !DILocation(line: 1963, column: 285, scope: !3702)
!3714 = !DILocation(line: 1963, column: 216, scope: !3702)
!3715 = !DILocation(line: 1963, column: 304, scope: !3716)
!3716 = !DILexicalBlockFile(scope: !745, file: !408, discriminator: 7)
!3717 = !DILocation(line: 1963, column: 304, scope: !744)
!3718 = !DILocation(line: 1963, column: 304, scope: !3719)
!3719 = !DILexicalBlockFile(scope: !744, file: !408, discriminator: 8)
!3720 = !DILocation(line: 1963, column: 304, scope: !3721)
!3721 = !DILexicalBlockFile(scope: !744, file: !408, discriminator: 9)
!3722 = !DILocation(line: 1963, column: 317, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3724, file: !408, discriminator: 10)
!3724 = !DILexicalBlockFile(scope: !728, file: !408, discriminator: 3)
!3725 = !DILocation(line: 1963, column: 317, scope: !742)
!3726 = !DILocation(line: 1963, column: 317, scope: !3727)
!3727 = !DILexicalBlockFile(scope: !742, file: !408, discriminator: 11)
!3728 = !DILocation(line: 1964, column: 5, scope: !728)
!3729 = !DILocation(line: 1964, column: 10, scope: !3730)
!3730 = !DILexicalBlockFile(scope: !747, file: !408, discriminator: 1)
!3731 = !DILocation(line: 1964, column: 20, scope: !747)
!3732 = !DILocation(line: 1964, column: 51, scope: !747)
!3733 = !DILocation(line: 1964, column: 55, scope: !747)
!3734 = !{!3625, !2621, i64 24}
!3735 = !DILocation(line: 1964, column: 38, scope: !747)
!3736 = !DILocation(line: 1964, column: 74, scope: !750)
!3737 = !DILocation(line: 1964, column: 90, scope: !750)
!3738 = !DILocation(line: 1964, column: 74, scope: !747)
!3739 = !DILocation(line: 1964, column: 105, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !750, file: !408, discriminator: 2)
!3741 = !DILocation(line: 1964, column: 110, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !749, file: !408, discriminator: 4)
!3743 = !DILocation(line: 1964, column: 120, scope: !749)
!3744 = !DILocation(line: 1964, column: 150, scope: !749)
!3745 = !DILocation(line: 1964, column: 176, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !749, file: !408, line: 1964, column: 173)
!3747 = !DILocation(line: 1964, column: 193, scope: !3746)
!3748 = !DILocation(line: 1964, column: 173, scope: !3746)
!3749 = !DILocation(line: 1964, column: 203, scope: !3746)
!3750 = !DILocation(line: 1964, column: 173, scope: !749)
!3751 = !DILocation(line: 1964, column: 173, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !749, file: !408, discriminator: 5)
!3753 = !DILocation(line: 1964, column: 234, scope: !3754)
!3754 = !DILexicalBlockFile(scope: !3746, file: !408, discriminator: 6)
!3755 = !DILocation(line: 1964, column: 252, scope: !3746)
!3756 = !DILocation(line: 1964, column: 262, scope: !3746)
!3757 = !DILocation(line: 1964, column: 287, scope: !3746)
!3758 = !DILocation(line: 1964, column: 218, scope: !3746)
!3759 = !DILocation(line: 1964, column: 306, scope: !3760)
!3760 = !DILexicalBlockFile(scope: !750, file: !408, discriminator: 7)
!3761 = !DILocation(line: 1964, column: 306, scope: !749)
!3762 = !DILocation(line: 1964, column: 306, scope: !3763)
!3763 = !DILexicalBlockFile(scope: !749, file: !408, discriminator: 8)
!3764 = !DILocation(line: 1964, column: 306, scope: !3765)
!3765 = !DILexicalBlockFile(scope: !749, file: !408, discriminator: 9)
!3766 = !DILocation(line: 1964, column: 319, scope: !3723)
!3767 = !DILocation(line: 1964, column: 319, scope: !747)
!3768 = !DILocation(line: 1964, column: 319, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !747, file: !408, discriminator: 11)
!3770 = !DILocation(line: 1966, column: 25, scope: !728)
!3771 = !DILocation(line: 1966, column: 5, scope: !728)
!3772 = !DILocation(line: 1967, column: 21, scope: !728)
!3773 = !DILocation(line: 1967, column: 5, scope: !728)
!3774 = !DILocation(line: 1968, column: 1, scope: !728)
!3775 = !DILocation(line: 1971, column: 41, scope: !751)
!3776 = !DILocation(line: 1971, column: 55, scope: !751)
!3777 = !DILocation(line: 1971, column: 68, scope: !751)
!3778 = !DILocation(line: 1973, column: 5, scope: !751)
!3779 = !DILocation(line: 1973, column: 20, scope: !751)
!3780 = !DILocation(line: 1973, column: 24, scope: !751)
!3781 = !DILocation(line: 1973, column: 28, scope: !751)
!3782 = !DILocation(line: 1974, column: 5, scope: !751)
!3783 = !DILocation(line: 1974, column: 12, scope: !3784)
!3784 = !DILexicalBlockFile(scope: !3785, file: !408, discriminator: 2)
!3785 = !DILexicalBlockFile(scope: !751, file: !408, discriminator: 1)
!3786 = !DILocation(line: 1975, column: 9, scope: !763)
!3787 = !DILocation(line: 1975, column: 18, scope: !3788)
!3788 = !DILexicalBlockFile(scope: !761, file: !408, discriminator: 1)
!3789 = !DILocation(line: 1975, column: 21, scope: !761)
!3790 = !DILocation(line: 1975, column: 18, scope: !761)
!3791 = !DILocation(line: 1975, column: 18, scope: !762)
!3792 = !DILocation(line: 1975, column: 31, scope: !3793)
!3793 = !DILexicalBlockFile(scope: !760, file: !408, discriminator: 2)
!3794 = !DILocation(line: 1975, column: 35, scope: !760)
!3795 = !DILocation(line: 1975, column: 42, scope: !760)
!3796 = !DILocation(line: 1975, column: 61, scope: !760)
!3797 = !DILocation(line: 1975, column: 64, scope: !760)
!3798 = !DILocation(line: 1975, column: 48, scope: !760)
!3799 = !DILocation(line: 1975, column: 73, scope: !760)
!3800 = !DILocation(line: 1975, column: 83, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !760, file: !408, line: 1975, column: 83)
!3802 = !DILocation(line: 1975, column: 83, scope: !760)
!3803 = !DILocation(line: 1975, column: 96, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3801, file: !408, discriminator: 4)
!3805 = !DILocation(line: 1975, column: 89, scope: !3801)
!3806 = !DILocation(line: 1975, column: 102, scope: !3807)
!3807 = !DILexicalBlockFile(scope: !761, file: !408, discriminator: 5)
!3808 = !DILocation(line: 1975, column: 102, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !3810, file: !408, discriminator: 7)
!3810 = !DILexicalBlockFile(scope: !761, file: !408, discriminator: 6)
!3811 = !DILocation(line: 1975, column: 102, scope: !760)
!3812 = !DILocation(line: 1975, column: 104, scope: !3813)
!3813 = !DILexicalBlockFile(scope: !3814, file: !408, discriminator: 8)
!3814 = !DILexicalBlockFile(scope: !762, file: !408, discriminator: 3)
!3815 = !DILocation(line: 1975, column: 104, scope: !3816)
!3816 = !DILexicalBlockFile(scope: !762, file: !408, discriminator: 9)
!3817 = !DILocation(line: 1976, column: 13, scope: !763)
!3818 = !DILocation(line: 1976, column: 16, scope: !763)
!3819 = !DILocation(line: 1976, column: 11, scope: !763)
!3820 = !DILocation(line: 1979, column: 5, scope: !751)
!3821 = !DILocation(line: 1979, column: 14, scope: !3822)
!3822 = !DILexicalBlockFile(scope: !766, file: !408, discriminator: 1)
!3823 = !DILocation(line: 1979, column: 18, scope: !766)
!3824 = !DILocation(line: 1979, column: 14, scope: !766)
!3825 = !DILocation(line: 1979, column: 14, scope: !767)
!3826 = !DILocation(line: 1979, column: 34, scope: !3827)
!3827 = !DILexicalBlockFile(scope: !765, file: !408, discriminator: 2)
!3828 = !DILocation(line: 1979, column: 38, scope: !765)
!3829 = !DILocation(line: 1979, column: 45, scope: !765)
!3830 = !DILocation(line: 1979, column: 64, scope: !765)
!3831 = !DILocation(line: 1979, column: 68, scope: !765)
!3832 = !DILocation(line: 1979, column: 51, scope: !765)
!3833 = !DILocation(line: 1979, column: 83, scope: !765)
!3834 = !DILocation(line: 1979, column: 93, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !765, file: !408, line: 1979, column: 93)
!3836 = !DILocation(line: 1979, column: 93, scope: !765)
!3837 = !DILocation(line: 1979, column: 106, scope: !3838)
!3838 = !DILexicalBlockFile(scope: !3835, file: !408, discriminator: 4)
!3839 = !DILocation(line: 1979, column: 99, scope: !3835)
!3840 = !DILocation(line: 1979, column: 112, scope: !3841)
!3841 = !DILexicalBlockFile(scope: !766, file: !408, discriminator: 5)
!3842 = !DILocation(line: 1979, column: 112, scope: !3843)
!3843 = !DILexicalBlockFile(scope: !3844, file: !408, discriminator: 7)
!3844 = !DILexicalBlockFile(scope: !766, file: !408, discriminator: 6)
!3845 = !DILocation(line: 1979, column: 112, scope: !765)
!3846 = !DILocation(line: 1979, column: 114, scope: !3847)
!3847 = !DILexicalBlockFile(scope: !3848, file: !408, discriminator: 8)
!3848 = !DILexicalBlockFile(scope: !767, file: !408, discriminator: 3)
!3849 = !DILocation(line: 1979, column: 114, scope: !3850)
!3850 = !DILexicalBlockFile(scope: !767, file: !408, discriminator: 9)
!3851 = !DILocation(line: 1980, column: 5, scope: !751)
!3852 = !DILocation(line: 1980, column: 14, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !770, file: !408, discriminator: 1)
!3854 = !DILocation(line: 1980, column: 18, scope: !770)
!3855 = !DILocation(line: 1980, column: 14, scope: !770)
!3856 = !DILocation(line: 1980, column: 14, scope: !771)
!3857 = !DILocation(line: 1980, column: 32, scope: !3858)
!3858 = !DILexicalBlockFile(scope: !769, file: !408, discriminator: 2)
!3859 = !DILocation(line: 1980, column: 36, scope: !769)
!3860 = !DILocation(line: 1980, column: 43, scope: !769)
!3861 = !DILocation(line: 1980, column: 62, scope: !769)
!3862 = !DILocation(line: 1980, column: 66, scope: !769)
!3863 = !DILocation(line: 1980, column: 79, scope: !769)
!3864 = !DILocation(line: 1980, column: 89, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !769, file: !408, line: 1980, column: 89)
!3866 = !DILocation(line: 1980, column: 89, scope: !769)
!3867 = !DILocation(line: 1980, column: 102, scope: !3868)
!3868 = !DILexicalBlockFile(scope: !3865, file: !408, discriminator: 4)
!3869 = !DILocation(line: 1980, column: 95, scope: !3865)
!3870 = !DILocation(line: 1980, column: 108, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !770, file: !408, discriminator: 5)
!3872 = !DILocation(line: 1980, column: 108, scope: !3873)
!3873 = !DILexicalBlockFile(scope: !3874, file: !408, discriminator: 7)
!3874 = !DILexicalBlockFile(scope: !770, file: !408, discriminator: 6)
!3875 = !DILocation(line: 1980, column: 108, scope: !769)
!3876 = !DILocation(line: 1980, column: 110, scope: !3877)
!3877 = !DILexicalBlockFile(scope: !3878, file: !408, discriminator: 8)
!3878 = !DILexicalBlockFile(scope: !771, file: !408, discriminator: 3)
!3879 = !DILocation(line: 1980, column: 110, scope: !3880)
!3880 = !DILexicalBlockFile(scope: !771, file: !408, discriminator: 9)
!3881 = !DILocation(line: 1981, column: 5, scope: !751)
!3882 = !DILocation(line: 1982, column: 1, scope: !751)
!3883 = !DILocation(line: 2000, column: 37, scope: !772)
!3884 = !DILocation(line: 2013, column: 5, scope: !772)
!3885 = !DILocation(line: 2013, column: 20, scope: !772)
!3886 = !DILocation(line: 2014, column: 5, scope: !772)
!3887 = !DILocation(line: 2014, column: 16, scope: !772)
!3888 = !DILocation(line: 2016, column: 5, scope: !772)
!3889 = !DILocation(line: 2016, column: 5, scope: !3890)
!3890 = !DILexicalBlockFile(scope: !3891, file: !408, discriminator: 2)
!3891 = !DILexicalBlockFile(scope: !772, file: !408, discriminator: 1)
!3892 = !DILocation(line: 2023, column: 14, scope: !787)
!3893 = !DILocation(line: 2023, column: 18, scope: !787)
!3894 = !DILocation(line: 2023, column: 32, scope: !787)
!3895 = !DILocation(line: 2023, column: 13, scope: !788)
!3896 = !DILocation(line: 2024, column: 17, scope: !785)
!3897 = !DILocation(line: 2024, column: 21, scope: !785)
!3898 = !{!3625, !2708, i64 40}
!3899 = !DILocation(line: 2024, column: 17, scope: !786)
!3900 = !DILocation(line: 2025, column: 31, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !785, file: !408, line: 2024, column: 32)
!3902 = !DILocation(line: 2025, column: 17, scope: !3901)
!3903 = !DILocation(line: 2026, column: 17, scope: !3901)
!3904 = !DILocation(line: 2028, column: 58, scope: !784)
!3905 = !DILocation(line: 2028, column: 62, scope: !784)
!3906 = !DILocation(line: 2029, column: 58, scope: !784)
!3907 = !DILocation(line: 2029, column: 62, scope: !784)
!3908 = !DILocation(line: 2028, column: 36, scope: !784)
!3909 = !DILocation(line: 2028, column: 17, scope: !784)
!3910 = !DILocation(line: 2028, column: 21, scope: !784)
!3911 = !DILocation(line: 2028, column: 34, scope: !784)
!3912 = !DILocation(line: 2030, column: 22, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !784, file: !408, line: 2030, column: 21)
!3914 = !DILocation(line: 2030, column: 26, scope: !3913)
!3915 = !DILocation(line: 2030, column: 21, scope: !784)
!3916 = !DILocation(line: 2031, column: 21, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3913, file: !408, line: 2030, column: 40)
!3918 = !DILocation(line: 2032, column: 21, scope: !3917)
!3919 = !DILocation(line: 2035, column: 17, scope: !784)
!3920 = !DILocation(line: 2035, column: 21, scope: !784)
!3921 = !DILocation(line: 2035, column: 31, scope: !784)
!3922 = !DILocation(line: 2036, column: 21, scope: !783)
!3923 = !DILocation(line: 2036, column: 25, scope: !783)
!3924 = !DILocation(line: 2036, column: 36, scope: !783)
!3925 = !DILocation(line: 2036, column: 57, scope: !783)
!3926 = !DILocation(line: 2037, column: 46, scope: !783)
!3927 = !DILocation(line: 2037, column: 50, scope: !783)
!3928 = !DILocation(line: 2037, column: 64, scope: !783)
!3929 = !DILocation(line: 2038, column: 46, scope: !783)
!3930 = !DILocation(line: 2038, column: 50, scope: !783)
!3931 = !DILocation(line: 2037, column: 21, scope: !783)
!3932 = !DILocation(line: 2038, column: 65, scope: !783)
!3933 = !DILocation(line: 2036, column: 21, scope: !784)
!3934 = !DILocation(line: 2039, column: 25, scope: !781)
!3935 = !DILocation(line: 2039, column: 29, scope: !781)
!3936 = !{!3625, !2708, i64 44}
!3937 = !DILocation(line: 2039, column: 25, scope: !782)
!3938 = !DILocation(line: 2040, column: 25, scope: !780)
!3939 = !DILocation(line: 2040, column: 35, scope: !780)
!3940 = !DILocation(line: 2040, column: 59, scope: !780)
!3941 = !DILocation(line: 2040, column: 63, scope: !780)
!3942 = !DILocation(line: 2040, column: 42, scope: !780)
!3943 = !DILocation(line: 2041, column: 30, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !780, file: !408, line: 2041, column: 29)
!3945 = !DILocation(line: 2041, column: 29, scope: !780)
!3946 = !DILocation(line: 2042, column: 29, scope: !3944)
!3947 = !DILocation(line: 2043, column: 45, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !780, file: !408, line: 2043, column: 29)
!3949 = !DILocation(line: 2043, column: 29, scope: !3948)
!3950 = !DILocation(line: 2043, column: 29, scope: !780)
!3951 = !DILocation(line: 2044, column: 45, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3948, file: !408, line: 2043, column: 52)
!3953 = !DILocation(line: 2044, column: 53, scope: !3952)
!3954 = !DILocation(line: 2044, column: 62, scope: !3952)
!3955 = !DILocation(line: 2045, column: 36, scope: !3952)
!3956 = !DILocation(line: 2045, column: 29, scope: !3952)
!3957 = !DILocation(line: 2047, column: 21, scope: !781)
!3958 = !DILocation(line: 2047, column: 21, scope: !3959)
!3959 = !DILexicalBlockFile(scope: !781, file: !408, discriminator: 1)
!3960 = !DILocation(line: 2047, column: 21, scope: !780)
!3961 = !DILocation(line: 2048, column: 41, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !781, file: !408, line: 2047, column: 28)
!3963 = !DILocation(line: 2048, column: 45, scope: !3962)
!3964 = !DILocation(line: 2048, column: 28, scope: !3962)
!3965 = !DILocation(line: 2048, column: 61, scope: !3962)
!3966 = !DILocation(line: 2048, column: 70, scope: !3962)
!3967 = !DILocation(line: 2049, column: 44, scope: !3962)
!3968 = !DILocation(line: 2049, column: 48, scope: !3962)
!3969 = !DILocation(line: 2049, column: 32, scope: !3962)
!3970 = !DILocation(line: 2049, column: 25, scope: !3962)
!3971 = !DILocation(line: 2051, column: 17, scope: !782)
!3972 = !DILocation(line: 2053, column: 9, scope: !786)
!3973 = !DILocation(line: 2058, column: 22, scope: !788)
!3974 = !DILocation(line: 2058, column: 26, scope: !788)
!3975 = !DILocation(line: 2058, column: 40, scope: !788)
!3976 = !DILocation(line: 2058, column: 20, scope: !788)
!3977 = !DILocation(line: 2059, column: 23, scope: !788)
!3978 = !DILocation(line: 2059, column: 27, scope: !788)
!3979 = !DILocation(line: 2059, column: 41, scope: !788)
!3980 = !{!3640, !2633, i64 8}
!3981 = !DILocation(line: 2059, column: 21, scope: !788)
!3982 = !DILocation(line: 2060, column: 13, scope: !791)
!3983 = !DILocation(line: 2060, column: 25, scope: !791)
!3984 = !DILocation(line: 2060, column: 31, scope: !791)
!3985 = !DILocation(line: 2060, column: 34, scope: !3986)
!3986 = !DILexicalBlockFile(scope: !791, file: !408, discriminator: 1)
!3987 = !DILocation(line: 2060, column: 48, scope: !791)
!3988 = !DILocation(line: 2060, column: 60, scope: !791)
!3989 = !DILocation(line: 2060, column: 67, scope: !791)
!3990 = !DILocation(line: 2060, column: 46, scope: !791)
!3991 = !DILocation(line: 2060, column: 13, scope: !788)
!3992 = !DILocation(line: 2061, column: 13, scope: !790)
!3993 = !DILocation(line: 2061, column: 28, scope: !790)
!3994 = !DILocation(line: 2062, column: 45, scope: !790)
!3995 = !DILocation(line: 2062, column: 17, scope: !790)
!3996 = !DILocation(line: 2062, column: 29, scope: !790)
!3997 = !DILocation(line: 2062, column: 36, scope: !790)
!3998 = !DILocation(line: 2061, column: 36, scope: !790)
!3999 = !DILocation(line: 2063, column: 13, scope: !790)
!4000 = !DILocation(line: 2063, column: 17, scope: !790)
!4001 = !DILocation(line: 2063, column: 31, scope: !790)
!4002 = !DILocation(line: 2063, column: 42, scope: !790)
!4003 = !DILocation(line: 2064, column: 54, scope: !790)
!4004 = !DILocation(line: 2064, column: 58, scope: !790)
!4005 = !DILocation(line: 2065, column: 54, scope: !790)
!4006 = !DILocation(line: 2064, column: 32, scope: !790)
!4007 = !DILocation(line: 2064, column: 13, scope: !790)
!4008 = !DILocation(line: 2064, column: 17, scope: !790)
!4009 = !DILocation(line: 2064, column: 30, scope: !790)
!4010 = !DILocation(line: 2066, column: 18, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !790, file: !408, line: 2066, column: 17)
!4012 = !DILocation(line: 2066, column: 22, scope: !4011)
!4013 = !DILocation(line: 2066, column: 17, scope: !790)
!4014 = !DILocation(line: 2067, column: 17, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4011, file: !408, line: 2066, column: 36)
!4016 = !DILocation(line: 2068, column: 17, scope: !4015)
!4017 = !DILocation(line: 2071, column: 17, scope: !794)
!4018 = !DILocation(line: 2071, column: 21, scope: !794)
!4019 = !DILocation(line: 2071, column: 17, scope: !790)
!4020 = !DILocation(line: 2072, column: 17, scope: !793)
!4021 = !DILocation(line: 2072, column: 27, scope: !793)
!4022 = !DILocation(line: 2072, column: 51, scope: !793)
!4023 = !DILocation(line: 2072, column: 34, scope: !793)
!4024 = !DILocation(line: 2073, column: 22, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !793, file: !408, line: 2073, column: 21)
!4026 = !DILocation(line: 2073, column: 21, scope: !793)
!4027 = !DILocation(line: 2074, column: 21, scope: !4025)
!4028 = !DILocation(line: 2075, column: 37, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !793, file: !408, line: 2075, column: 21)
!4030 = !DILocation(line: 2075, column: 21, scope: !4029)
!4031 = !DILocation(line: 2075, column: 21, scope: !793)
!4032 = !DILocation(line: 2076, column: 37, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !408, line: 2075, column: 44)
!4034 = !DILocation(line: 2076, column: 45, scope: !4033)
!4035 = !DILocation(line: 2076, column: 54, scope: !4033)
!4036 = !DILocation(line: 2077, column: 28, scope: !4033)
!4037 = !DILocation(line: 2077, column: 21, scope: !4033)
!4038 = !DILocation(line: 2079, column: 13, scope: !794)
!4039 = !DILocation(line: 2079, column: 13, scope: !4040)
!4040 = !DILexicalBlockFile(scope: !794, file: !408, discriminator: 1)
!4041 = !DILocation(line: 2079, column: 13, scope: !793)
!4042 = !DILocation(line: 2079, column: 24, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !794, file: !408, line: 2079, column: 24)
!4044 = !DILocation(line: 2079, column: 28, scope: !4043)
!4045 = !DILocation(line: 2079, column: 39, scope: !4043)
!4046 = !DILocation(line: 2079, column: 60, scope: !4043)
!4047 = !DILocation(line: 2080, column: 42, scope: !4043)
!4048 = !DILocation(line: 2080, column: 49, scope: !4043)
!4049 = !DILocation(line: 2081, column: 42, scope: !4043)
!4050 = !DILocation(line: 2081, column: 46, scope: !4043)
!4051 = !DILocation(line: 2080, column: 17, scope: !4043)
!4052 = !DILocation(line: 2081, column: 61, scope: !4043)
!4053 = !DILocation(line: 2079, column: 24, scope: !794)
!4054 = !DILocation(line: 2082, column: 33, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4043, file: !408, line: 2081, column: 67)
!4056 = !DILocation(line: 2082, column: 20, scope: !4055)
!4057 = !DILocation(line: 2082, column: 42, scope: !4055)
!4058 = !DILocation(line: 2082, column: 51, scope: !4055)
!4059 = !DILocation(line: 2083, column: 36, scope: !4055)
!4060 = !DILocation(line: 2083, column: 24, scope: !4055)
!4061 = !DILocation(line: 2083, column: 17, scope: !4055)
!4062 = !DILocation(line: 2086, column: 17, scope: !4043)
!4063 = !DILocation(line: 2087, column: 9, scope: !791)
!4064 = !DILocation(line: 2087, column: 9, scope: !3986)
!4065 = !DILocation(line: 2087, column: 9, scope: !790)
!4066 = !DILocation(line: 2089, column: 13, scope: !796)
!4067 = !DILocation(line: 2089, column: 23, scope: !796)
!4068 = !DILocation(line: 2090, column: 13, scope: !796)
!4069 = !DILocation(line: 2090, column: 28, scope: !796)
!4070 = !DILocation(line: 2090, column: 35, scope: !796)
!4071 = !DILocation(line: 2090, column: 39, scope: !796)
!4072 = !DILocation(line: 2090, column: 53, scope: !796)
!4073 = !DILocation(line: 2091, column: 17, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !796, file: !408, line: 2091, column: 17)
!4075 = !DILocation(line: 2091, column: 21, scope: !4074)
!4076 = !DILocation(line: 2091, column: 17, scope: !796)
!4077 = !DILocation(line: 2092, column: 41, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4074, file: !408, line: 2091, column: 30)
!4079 = !DILocation(line: 2092, column: 24, scope: !4078)
!4080 = !DILocation(line: 2092, column: 22, scope: !4078)
!4081 = !DILocation(line: 2093, column: 22, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4078, file: !408, line: 2093, column: 21)
!4083 = !DILocation(line: 2093, column: 21, scope: !4078)
!4084 = !DILocation(line: 2094, column: 21, scope: !4082)
!4085 = !DILocation(line: 2095, column: 13, scope: !4078)
!4086 = !DILocation(line: 2097, column: 22, scope: !4074)
!4087 = !DILocation(line: 2098, column: 13, scope: !796)
!4088 = !DILocation(line: 2098, column: 18, scope: !4089)
!4089 = !DILexicalBlockFile(scope: !799, file: !408, discriminator: 1)
!4090 = !DILocation(line: 2098, column: 28, scope: !799)
!4091 = !DILocation(line: 2098, column: 59, scope: !799)
!4092 = !DILocation(line: 2098, column: 63, scope: !799)
!4093 = !DILocation(line: 2098, column: 77, scope: !799)
!4094 = !DILocation(line: 2098, column: 46, scope: !799)
!4095 = !DILocation(line: 2098, column: 90, scope: !802)
!4096 = !DILocation(line: 2098, column: 106, scope: !802)
!4097 = !DILocation(line: 2098, column: 90, scope: !799)
!4098 = !DILocation(line: 2098, column: 121, scope: !4099)
!4099 = !DILexicalBlockFile(scope: !802, file: !408, discriminator: 2)
!4100 = !DILocation(line: 2098, column: 126, scope: !4101)
!4101 = !DILexicalBlockFile(scope: !801, file: !408, discriminator: 4)
!4102 = !DILocation(line: 2098, column: 136, scope: !801)
!4103 = !DILocation(line: 2098, column: 166, scope: !801)
!4104 = !DILocation(line: 2098, column: 192, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !801, file: !408, line: 2098, column: 189)
!4106 = !DILocation(line: 2098, column: 209, scope: !4105)
!4107 = !DILocation(line: 2098, column: 189, scope: !4105)
!4108 = !DILocation(line: 2098, column: 219, scope: !4105)
!4109 = !DILocation(line: 2098, column: 189, scope: !801)
!4110 = !DILocation(line: 2098, column: 189, scope: !4111)
!4111 = !DILexicalBlockFile(scope: !801, file: !408, discriminator: 5)
!4112 = !DILocation(line: 2098, column: 250, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !4105, file: !408, discriminator: 6)
!4114 = !DILocation(line: 2098, column: 268, scope: !4105)
!4115 = !DILocation(line: 2098, column: 278, scope: !4105)
!4116 = !DILocation(line: 2098, column: 303, scope: !4105)
!4117 = !DILocation(line: 2098, column: 234, scope: !4105)
!4118 = !DILocation(line: 2098, column: 322, scope: !4119)
!4119 = !DILexicalBlockFile(scope: !802, file: !408, discriminator: 7)
!4120 = !DILocation(line: 2098, column: 322, scope: !801)
!4121 = !DILocation(line: 2098, column: 322, scope: !4122)
!4122 = !DILexicalBlockFile(scope: !801, file: !408, discriminator: 8)
!4123 = !DILocation(line: 2098, column: 322, scope: !4124)
!4124 = !DILexicalBlockFile(scope: !801, file: !408, discriminator: 9)
!4125 = !DILocation(line: 2098, column: 335, scope: !4126)
!4126 = !DILexicalBlockFile(scope: !4127, file: !408, discriminator: 10)
!4127 = !DILexicalBlockFile(scope: !796, file: !408, discriminator: 3)
!4128 = !DILocation(line: 2098, column: 335, scope: !799)
!4129 = !DILocation(line: 2098, column: 335, scope: !4130)
!4130 = !DILexicalBlockFile(scope: !799, file: !408, discriminator: 11)
!4131 = !DILocation(line: 2099, column: 27, scope: !796)
!4132 = !DILocation(line: 2099, column: 31, scope: !796)
!4133 = !DILocation(line: 2099, column: 13, scope: !796)
!4134 = !DILocation(line: 2100, column: 32, scope: !796)
!4135 = !DILocation(line: 2100, column: 13, scope: !796)
!4136 = !DILocation(line: 2100, column: 17, scope: !796)
!4137 = !DILocation(line: 2100, column: 30, scope: !796)
!4138 = !DILocation(line: 2106, column: 17, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !796, file: !408, line: 2106, column: 17)
!4140 = !DILocation(line: 2106, column: 21, scope: !4139)
!4141 = !DILocation(line: 2106, column: 35, scope: !4139)
!4142 = !DILocation(line: 2106, column: 42, scope: !4139)
!4143 = !DILocation(line: 2106, column: 61, scope: !4144)
!4144 = !DILexicalBlockFile(scope: !4139, file: !408, discriminator: 1)
!4145 = !DILocation(line: 2106, column: 45, scope: !4139)
!4146 = !DILocation(line: 2106, column: 17, scope: !796)
!4147 = !DILocation(line: 2107, column: 33, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4139, file: !408, line: 2106, column: 68)
!4149 = !DILocation(line: 2107, column: 41, scope: !4148)
!4150 = !DILocation(line: 2107, column: 50, scope: !4148)
!4151 = !DILocation(line: 2108, column: 24, scope: !4148)
!4152 = !DILocation(line: 2108, column: 17, scope: !4148)
!4153 = !DILocation(line: 2110, column: 9, scope: !791)
!4154 = !DILocation(line: 2110, column: 9, scope: !3986)
!4155 = !DILocation(line: 2114, column: 1, scope: !772)
!4156 = !DILocation(line: 1987, column: 38, scope: !803)
!4157 = !DILocation(line: 1987, column: 60, scope: !803)
!4158 = !DILocation(line: 1989, column: 5, scope: !803)
!4159 = !DILocation(line: 1989, column: 20, scope: !803)
!4160 = !DILocation(line: 1989, column: 31, scope: !803)
!4161 = !DILocation(line: 1990, column: 9, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !803, file: !408, line: 1990, column: 9)
!4163 = !DILocation(line: 1990, column: 9, scope: !803)
!4164 = !DILocation(line: 1991, column: 28, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4162, file: !408, line: 1990, column: 19)
!4166 = !DILocation(line: 1991, column: 9, scope: !4165)
!4167 = !DILocation(line: 1991, column: 19, scope: !4165)
!4168 = !DILocation(line: 1991, column: 26, scope: !4165)
!4169 = !DILocation(line: 1992, column: 25, scope: !4165)
!4170 = !DILocation(line: 1992, column: 12, scope: !4165)
!4171 = !DILocation(line: 1992, column: 35, scope: !4165)
!4172 = !DILocation(line: 1992, column: 44, scope: !4165)
!4173 = !DILocation(line: 1993, column: 9, scope: !4165)
!4174 = !DILocation(line: 1993, column: 19, scope: !4165)
!4175 = !DILocation(line: 1993, column: 31, scope: !4165)
!4176 = !DILocation(line: 1994, column: 26, scope: !4165)
!4177 = !DILocation(line: 1994, column: 9, scope: !4165)
!4178 = !DILocation(line: 1994, column: 19, scope: !4165)
!4179 = !DILocation(line: 1994, column: 24, scope: !4165)
!4180 = !DILocation(line: 1995, column: 5, scope: !4165)
!4181 = !DILocation(line: 1996, column: 12, scope: !803)
!4182 = !DILocation(line: 1997, column: 1, scope: !803)
!4183 = !DILocation(line: 1996, column: 5, scope: !803)
!4184 = !DILocation(line: 521, column: 33, scope: !810)
!4185 = !DILocation(line: 525, column: 5, scope: !810)
!4186 = !DILocation(line: 525, column: 15, scope: !810)
!4187 = !DILocation(line: 525, column: 21, scope: !810)
!4188 = !DILocation(line: 525, column: 27, scope: !810)
!4189 = !DILocation(line: 527, column: 26, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !810, file: !408, line: 527, column: 9)
!4191 = !DILocation(line: 527, column: 10, scope: !4190)
!4192 = !DILocation(line: 527, column: 31, scope: !4190)
!4193 = !DILocation(line: 527, column: 9, scope: !810)
!4194 = !DILocation(line: 528, column: 45, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4190, file: !408, line: 527, column: 37)
!4196 = !DILocation(line: 528, column: 29, scope: !4195)
!4197 = !DILocation(line: 528, column: 50, scope: !4195)
!4198 = !DILocation(line: 528, column: 16, scope: !4195)
!4199 = !DILocation(line: 528, column: 13, scope: !4195)
!4200 = !DILocation(line: 529, column: 28, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4195, file: !408, line: 529, column: 13)
!4202 = !DILocation(line: 529, column: 35, scope: !4201)
!4203 = !DILocation(line: 529, column: 44, scope: !4201)
!4204 = !DILocation(line: 529, column: 13, scope: !4195)
!4205 = !DILocation(line: 530, column: 29, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4201, file: !408, line: 529, column: 62)
!4207 = !DILocation(line: 530, column: 19, scope: !4206)
!4208 = !DILocation(line: 530, column: 17, scope: !4206)
!4209 = !DILocation(line: 531, column: 18, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4206, file: !408, line: 531, column: 17)
!4211 = !DILocation(line: 531, column: 17, scope: !4206)
!4212 = !DILocation(line: 532, column: 17, scope: !4210)
!4213 = !DILocation(line: 533, column: 26, scope: !4206)
!4214 = !DILocation(line: 533, column: 13, scope: !4206)
!4215 = !DILocation(line: 533, column: 19, scope: !4206)
!4216 = !DILocation(line: 533, column: 24, scope: !4206)
!4217 = !DILocation(line: 534, column: 9, scope: !4206)
!4218 = !DILocation(line: 535, column: 5, scope: !4195)
!4219 = !DILocation(line: 537, column: 12, scope: !810)
!4220 = !DILocation(line: 537, column: 5, scope: !810)
!4221 = !DILocation(line: 538, column: 1, scope: !810)
!4222 = !DILocation(line: 541, column: 33, scope: !826)
!4223 = !DILocation(line: 545, column: 5, scope: !826)
!4224 = !DILocation(line: 545, column: 15, scope: !826)
!4225 = !DILocation(line: 545, column: 21, scope: !826)
!4226 = !DILocation(line: 545, column: 27, scope: !826)
!4227 = !DILocation(line: 547, column: 26, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !826, file: !408, line: 547, column: 9)
!4229 = !DILocation(line: 547, column: 10, scope: !4228)
!4230 = !DILocation(line: 547, column: 31, scope: !4228)
!4231 = !DILocation(line: 547, column: 9, scope: !826)
!4232 = !DILocation(line: 548, column: 45, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4228, file: !408, line: 547, column: 37)
!4234 = !DILocation(line: 548, column: 29, scope: !4233)
!4235 = !DILocation(line: 548, column: 50, scope: !4233)
!4236 = !DILocation(line: 548, column: 16, scope: !4233)
!4237 = !DILocation(line: 548, column: 13, scope: !4233)
!4238 = !DILocation(line: 549, column: 28, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4233, file: !408, line: 549, column: 13)
!4240 = !DILocation(line: 549, column: 35, scope: !4239)
!4241 = !DILocation(line: 549, column: 44, scope: !4239)
!4242 = !DILocation(line: 549, column: 13, scope: !4233)
!4243 = !DILocation(line: 550, column: 29, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4239, file: !408, line: 549, column: 62)
!4245 = !DILocation(line: 550, column: 19, scope: !4244)
!4246 = !DILocation(line: 550, column: 17, scope: !4244)
!4247 = !DILocation(line: 551, column: 18, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4244, file: !408, line: 551, column: 17)
!4249 = !DILocation(line: 551, column: 17, scope: !4244)
!4250 = !DILocation(line: 552, column: 17, scope: !4248)
!4251 = !DILocation(line: 553, column: 26, scope: !4244)
!4252 = !DILocation(line: 553, column: 13, scope: !4244)
!4253 = !DILocation(line: 553, column: 19, scope: !4244)
!4254 = !DILocation(line: 553, column: 24, scope: !4244)
!4255 = !DILocation(line: 554, column: 9, scope: !4244)
!4256 = !DILocation(line: 555, column: 5, scope: !4233)
!4257 = !DILocation(line: 557, column: 12, scope: !826)
!4258 = !DILocation(line: 557, column: 5, scope: !826)
!4259 = !DILocation(line: 558, column: 1, scope: !826)
!4260 = !DILocation(line: 154, column: 21, scope: !816)
!4261 = !DILocation(line: 157, column: 5, scope: !816)
!4262 = !DILocation(line: 157, column: 15, scope: !816)
!4263 = !DILocation(line: 158, column: 5, scope: !816)
!4264 = !DILocation(line: 158, column: 15, scope: !816)
!4265 = !DILocation(line: 160, column: 14, scope: !816)
!4266 = !DILocation(line: 160, column: 12, scope: !816)
!4267 = !DILocation(line: 161, column: 10, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !816, file: !408, line: 161, column: 9)
!4269 = !DILocation(line: 161, column: 9, scope: !816)
!4270 = !DILocation(line: 162, column: 9, scope: !4268)
!4271 = !DILocation(line: 163, column: 29, scope: !816)
!4272 = !DILocation(line: 163, column: 37, scope: !816)
!4273 = !DILocation(line: 163, column: 14, scope: !816)
!4274 = !DILocation(line: 163, column: 12, scope: !816)
!4275 = !DILocation(line: 164, column: 5, scope: !816)
!4276 = !DILocation(line: 164, column: 10, scope: !4277)
!4277 = !DILexicalBlockFile(scope: !822, file: !408, discriminator: 1)
!4278 = !DILocation(line: 164, column: 20, scope: !822)
!4279 = !DILocation(line: 164, column: 50, scope: !822)
!4280 = !DILocation(line: 164, column: 67, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !822, file: !408, line: 164, column: 64)
!4282 = !DILocation(line: 164, column: 84, scope: !4281)
!4283 = !DILocation(line: 164, column: 64, scope: !4281)
!4284 = !DILocation(line: 164, column: 94, scope: !4281)
!4285 = !DILocation(line: 164, column: 64, scope: !822)
!4286 = !DILocation(line: 164, column: 64, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !822, file: !408, discriminator: 2)
!4288 = !DILocation(line: 164, column: 125, scope: !4289)
!4289 = !DILexicalBlockFile(scope: !4281, file: !408, discriminator: 3)
!4290 = !DILocation(line: 164, column: 143, scope: !4281)
!4291 = !DILocation(line: 164, column: 153, scope: !4281)
!4292 = !DILocation(line: 164, column: 178, scope: !4281)
!4293 = !DILocation(line: 164, column: 109, scope: !4281)
!4294 = !DILocation(line: 164, column: 197, scope: !4295)
!4295 = !DILexicalBlockFile(scope: !816, file: !408, discriminator: 4)
!4296 = !DILocation(line: 164, column: 197, scope: !822)
!4297 = !DILocation(line: 164, column: 197, scope: !4298)
!4298 = !DILexicalBlockFile(scope: !822, file: !408, discriminator: 5)
!4299 = !DILocation(line: 165, column: 9, scope: !825)
!4300 = !DILocation(line: 165, column: 9, scope: !816)
!4301 = !DILocation(line: 166, column: 9, scope: !825)
!4302 = !DILocation(line: 166, column: 14, scope: !4303)
!4303 = !DILexicalBlockFile(scope: !824, file: !408, discriminator: 1)
!4304 = !DILocation(line: 166, column: 24, scope: !824)
!4305 = !DILocation(line: 166, column: 54, scope: !824)
!4306 = !DILocation(line: 166, column: 69, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !824, file: !408, line: 166, column: 66)
!4308 = !DILocation(line: 166, column: 86, scope: !4307)
!4309 = !DILocation(line: 166, column: 66, scope: !4307)
!4310 = !DILocation(line: 166, column: 96, scope: !4307)
!4311 = !DILocation(line: 166, column: 66, scope: !824)
!4312 = !DILocation(line: 166, column: 66, scope: !4313)
!4313 = !DILexicalBlockFile(scope: !824, file: !408, discriminator: 2)
!4314 = !DILocation(line: 166, column: 127, scope: !4315)
!4315 = !DILexicalBlockFile(scope: !4307, file: !408, discriminator: 3)
!4316 = !DILocation(line: 166, column: 145, scope: !4307)
!4317 = !DILocation(line: 166, column: 155, scope: !4307)
!4318 = !DILocation(line: 166, column: 180, scope: !4307)
!4319 = !DILocation(line: 166, column: 111, scope: !4307)
!4320 = !DILocation(line: 166, column: 199, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !825, file: !408, discriminator: 4)
!4322 = !DILocation(line: 166, column: 199, scope: !824)
!4323 = !DILocation(line: 166, column: 199, scope: !4324)
!4324 = !DILexicalBlockFile(scope: !824, file: !408, discriminator: 5)
!4325 = !DILocation(line: 166, column: 199, scope: !4326)
!4326 = !DILexicalBlockFile(scope: !824, file: !408, discriminator: 6)
!4327 = !DILocation(line: 167, column: 12, scope: !816)
!4328 = !DILocation(line: 167, column: 5, scope: !816)
!4329 = !DILocation(line: 168, column: 1, scope: !816)
!4330 = !DILocation(line: 2318, column: 40, scope: !830)
!4331 = !DILocation(line: 2320, column: 25, scope: !830)
!4332 = !DILocation(line: 2320, column: 5, scope: !830)
!4333 = !DILocation(line: 2321, column: 26, scope: !830)
!4334 = !DILocation(line: 2321, column: 5, scope: !830)
!4335 = !DILocation(line: 2322, column: 19, scope: !830)
!4336 = !DILocation(line: 2322, column: 7, scope: !830)
!4337 = !DILocation(line: 2322, column: 27, scope: !830)
!4338 = !DILocation(line: 2322, column: 37, scope: !830)
!4339 = !{!2706, !2621, i64 320}
!4340 = !DILocation(line: 2322, column: 57, scope: !830)
!4341 = !DILocation(line: 2322, column: 45, scope: !830)
!4342 = !DILocation(line: 2322, column: 5, scope: !830)
!4343 = !DILocation(line: 2323, column: 1, scope: !830)
!4344 = !DILocation(line: 2289, column: 44, scope: !835)
!4345 = !DILocation(line: 2289, column: 60, scope: !835)
!4346 = !DILocation(line: 2289, column: 73, scope: !835)
!4347 = !DILocation(line: 2291, column: 5, scope: !835)
!4348 = !DILocation(line: 2291, column: 14, scope: !4349)
!4349 = !DILexicalBlockFile(scope: !844, file: !408, discriminator: 1)
!4350 = !DILocation(line: 2291, column: 20, scope: !844)
!4351 = !{!4352, !2621, i64 16}
!4352 = !{!"", !2632, i64 0, !2621, i64 16, !2621, i64 24, !2621, i64 32, !2621, i64 40, !2621, i64 48, !2633, i64 56, !2621, i64 64, !2621, i64 72, !2621, i64 80, !2621, i64 88, !2621, i64 96, !2621, i64 104}
!4353 = !DILocation(line: 2291, column: 14, scope: !844)
!4354 = !DILocation(line: 2291, column: 14, scope: !845)
!4355 = !DILocation(line: 2291, column: 28, scope: !4356)
!4356 = !DILexicalBlockFile(scope: !843, file: !408, discriminator: 2)
!4357 = !DILocation(line: 2291, column: 32, scope: !843)
!4358 = !DILocation(line: 2291, column: 39, scope: !843)
!4359 = !DILocation(line: 2291, column: 58, scope: !843)
!4360 = !DILocation(line: 2291, column: 64, scope: !843)
!4361 = !DILocation(line: 2291, column: 71, scope: !843)
!4362 = !DILocation(line: 2291, column: 81, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !843, file: !408, line: 2291, column: 81)
!4364 = !DILocation(line: 2291, column: 81, scope: !843)
!4365 = !DILocation(line: 2291, column: 94, scope: !4366)
!4366 = !DILexicalBlockFile(scope: !4363, file: !408, discriminator: 4)
!4367 = !DILocation(line: 2291, column: 87, scope: !4363)
!4368 = !DILocation(line: 2291, column: 100, scope: !4369)
!4369 = !DILexicalBlockFile(scope: !844, file: !408, discriminator: 5)
!4370 = !DILocation(line: 2291, column: 100, scope: !4371)
!4371 = !DILexicalBlockFile(scope: !4372, file: !408, discriminator: 7)
!4372 = !DILexicalBlockFile(scope: !844, file: !408, discriminator: 6)
!4373 = !DILocation(line: 2291, column: 100, scope: !843)
!4374 = !DILocation(line: 2291, column: 102, scope: !4375)
!4375 = !DILexicalBlockFile(scope: !4376, file: !408, discriminator: 8)
!4376 = !DILexicalBlockFile(scope: !845, file: !408, discriminator: 3)
!4377 = !DILocation(line: 2292, column: 5, scope: !835)
!4378 = !DILocation(line: 2292, column: 14, scope: !4379)
!4379 = !DILexicalBlockFile(scope: !848, file: !408, discriminator: 1)
!4380 = !DILocation(line: 2292, column: 20, scope: !848)
!4381 = !{!4352, !2621, i64 24}
!4382 = !DILocation(line: 2292, column: 14, scope: !848)
!4383 = !DILocation(line: 2292, column: 14, scope: !849)
!4384 = !DILocation(line: 2292, column: 28, scope: !4385)
!4385 = !DILexicalBlockFile(scope: !847, file: !408, discriminator: 2)
!4386 = !DILocation(line: 2292, column: 32, scope: !847)
!4387 = !DILocation(line: 2292, column: 39, scope: !847)
!4388 = !DILocation(line: 2292, column: 58, scope: !847)
!4389 = !DILocation(line: 2292, column: 64, scope: !847)
!4390 = !DILocation(line: 2292, column: 71, scope: !847)
!4391 = !DILocation(line: 2292, column: 81, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !847, file: !408, line: 2292, column: 81)
!4393 = !DILocation(line: 2292, column: 81, scope: !847)
!4394 = !DILocation(line: 2292, column: 94, scope: !4395)
!4395 = !DILexicalBlockFile(scope: !4392, file: !408, discriminator: 4)
!4396 = !DILocation(line: 2292, column: 87, scope: !4392)
!4397 = !DILocation(line: 2292, column: 100, scope: !4398)
!4398 = !DILexicalBlockFile(scope: !848, file: !408, discriminator: 5)
!4399 = !DILocation(line: 2292, column: 100, scope: !4400)
!4400 = !DILexicalBlockFile(scope: !4401, file: !408, discriminator: 7)
!4401 = !DILexicalBlockFile(scope: !848, file: !408, discriminator: 6)
!4402 = !DILocation(line: 2292, column: 100, scope: !847)
!4403 = !DILocation(line: 2292, column: 102, scope: !4404)
!4404 = !DILexicalBlockFile(scope: !4405, file: !408, discriminator: 8)
!4405 = !DILexicalBlockFile(scope: !849, file: !408, discriminator: 3)
!4406 = !DILocation(line: 2293, column: 5, scope: !835)
!4407 = !DILocation(line: 2293, column: 14, scope: !4408)
!4408 = !DILexicalBlockFile(scope: !852, file: !408, discriminator: 1)
!4409 = !DILocation(line: 2293, column: 20, scope: !852)
!4410 = !{!4352, !2621, i64 32}
!4411 = !DILocation(line: 2293, column: 14, scope: !852)
!4412 = !DILocation(line: 2293, column: 14, scope: !853)
!4413 = !DILocation(line: 2293, column: 28, scope: !4414)
!4414 = !DILexicalBlockFile(scope: !851, file: !408, discriminator: 2)
!4415 = !DILocation(line: 2293, column: 32, scope: !851)
!4416 = !DILocation(line: 2293, column: 39, scope: !851)
!4417 = !DILocation(line: 2293, column: 58, scope: !851)
!4418 = !DILocation(line: 2293, column: 64, scope: !851)
!4419 = !DILocation(line: 2293, column: 71, scope: !851)
!4420 = !DILocation(line: 2293, column: 81, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !851, file: !408, line: 2293, column: 81)
!4422 = !DILocation(line: 2293, column: 81, scope: !851)
!4423 = !DILocation(line: 2293, column: 94, scope: !4424)
!4424 = !DILexicalBlockFile(scope: !4421, file: !408, discriminator: 4)
!4425 = !DILocation(line: 2293, column: 87, scope: !4421)
!4426 = !DILocation(line: 2293, column: 100, scope: !4427)
!4427 = !DILexicalBlockFile(scope: !852, file: !408, discriminator: 5)
!4428 = !DILocation(line: 2293, column: 100, scope: !4429)
!4429 = !DILexicalBlockFile(scope: !4430, file: !408, discriminator: 7)
!4430 = !DILexicalBlockFile(scope: !852, file: !408, discriminator: 6)
!4431 = !DILocation(line: 2293, column: 100, scope: !851)
!4432 = !DILocation(line: 2293, column: 102, scope: !4433)
!4433 = !DILexicalBlockFile(scope: !4434, file: !408, discriminator: 8)
!4434 = !DILexicalBlockFile(scope: !853, file: !408, discriminator: 3)
!4435 = !DILocation(line: 2294, column: 5, scope: !835)
!4436 = !DILocation(line: 2294, column: 14, scope: !4437)
!4437 = !DILexicalBlockFile(scope: !856, file: !408, discriminator: 1)
!4438 = !DILocation(line: 2294, column: 20, scope: !856)
!4439 = !{!4352, !2621, i64 40}
!4440 = !DILocation(line: 2294, column: 14, scope: !856)
!4441 = !DILocation(line: 2294, column: 14, scope: !857)
!4442 = !DILocation(line: 2294, column: 28, scope: !4443)
!4443 = !DILexicalBlockFile(scope: !855, file: !408, discriminator: 2)
!4444 = !DILocation(line: 2294, column: 32, scope: !855)
!4445 = !DILocation(line: 2294, column: 39, scope: !855)
!4446 = !DILocation(line: 2294, column: 58, scope: !855)
!4447 = !DILocation(line: 2294, column: 64, scope: !855)
!4448 = !DILocation(line: 2294, column: 71, scope: !855)
!4449 = !DILocation(line: 2294, column: 81, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !855, file: !408, line: 2294, column: 81)
!4451 = !DILocation(line: 2294, column: 81, scope: !855)
!4452 = !DILocation(line: 2294, column: 94, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !4450, file: !408, discriminator: 4)
!4454 = !DILocation(line: 2294, column: 87, scope: !4450)
!4455 = !DILocation(line: 2294, column: 100, scope: !4456)
!4456 = !DILexicalBlockFile(scope: !856, file: !408, discriminator: 5)
!4457 = !DILocation(line: 2294, column: 100, scope: !4458)
!4458 = !DILexicalBlockFile(scope: !4459, file: !408, discriminator: 7)
!4459 = !DILexicalBlockFile(scope: !856, file: !408, discriminator: 6)
!4460 = !DILocation(line: 2294, column: 100, scope: !855)
!4461 = !DILocation(line: 2294, column: 102, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4463, file: !408, discriminator: 8)
!4463 = !DILexicalBlockFile(scope: !857, file: !408, discriminator: 3)
!4464 = !DILocation(line: 2295, column: 5, scope: !835)
!4465 = !DILocation(line: 2295, column: 14, scope: !4466)
!4466 = !DILexicalBlockFile(scope: !860, file: !408, discriminator: 1)
!4467 = !DILocation(line: 2295, column: 20, scope: !860)
!4468 = !{!4352, !2621, i64 48}
!4469 = !DILocation(line: 2295, column: 14, scope: !860)
!4470 = !DILocation(line: 2295, column: 14, scope: !861)
!4471 = !DILocation(line: 2295, column: 29, scope: !4472)
!4472 = !DILexicalBlockFile(scope: !859, file: !408, discriminator: 2)
!4473 = !DILocation(line: 2295, column: 33, scope: !859)
!4474 = !DILocation(line: 2295, column: 40, scope: !859)
!4475 = !DILocation(line: 2295, column: 59, scope: !859)
!4476 = !DILocation(line: 2295, column: 65, scope: !859)
!4477 = !DILocation(line: 2295, column: 73, scope: !859)
!4478 = !DILocation(line: 2295, column: 83, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !859, file: !408, line: 2295, column: 83)
!4480 = !DILocation(line: 2295, column: 83, scope: !859)
!4481 = !DILocation(line: 2295, column: 96, scope: !4482)
!4482 = !DILexicalBlockFile(scope: !4479, file: !408, discriminator: 4)
!4483 = !DILocation(line: 2295, column: 89, scope: !4479)
!4484 = !DILocation(line: 2295, column: 102, scope: !4485)
!4485 = !DILexicalBlockFile(scope: !860, file: !408, discriminator: 5)
!4486 = !DILocation(line: 2295, column: 102, scope: !4487)
!4487 = !DILexicalBlockFile(scope: !4488, file: !408, discriminator: 7)
!4488 = !DILexicalBlockFile(scope: !860, file: !408, discriminator: 6)
!4489 = !DILocation(line: 2295, column: 102, scope: !859)
!4490 = !DILocation(line: 2295, column: 104, scope: !4491)
!4491 = !DILexicalBlockFile(scope: !4492, file: !408, discriminator: 8)
!4492 = !DILexicalBlockFile(scope: !861, file: !408, discriminator: 3)
!4493 = !DILocation(line: 2296, column: 5, scope: !835)
!4494 = !DILocation(line: 2296, column: 14, scope: !4495)
!4495 = !DILexicalBlockFile(scope: !864, file: !408, discriminator: 1)
!4496 = !DILocation(line: 2296, column: 20, scope: !864)
!4497 = !{!4352, !2621, i64 64}
!4498 = !DILocation(line: 2296, column: 14, scope: !864)
!4499 = !DILocation(line: 2296, column: 14, scope: !865)
!4500 = !DILocation(line: 2296, column: 39, scope: !4501)
!4501 = !DILexicalBlockFile(scope: !863, file: !408, discriminator: 2)
!4502 = !DILocation(line: 2296, column: 43, scope: !863)
!4503 = !DILocation(line: 2296, column: 50, scope: !863)
!4504 = !DILocation(line: 2296, column: 69, scope: !863)
!4505 = !DILocation(line: 2296, column: 75, scope: !863)
!4506 = !DILocation(line: 2296, column: 93, scope: !863)
!4507 = !DILocation(line: 2296, column: 103, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !863, file: !408, line: 2296, column: 103)
!4509 = !DILocation(line: 2296, column: 103, scope: !863)
!4510 = !DILocation(line: 2296, column: 116, scope: !4511)
!4511 = !DILexicalBlockFile(scope: !4508, file: !408, discriminator: 4)
!4512 = !DILocation(line: 2296, column: 109, scope: !4508)
!4513 = !DILocation(line: 2296, column: 122, scope: !4514)
!4514 = !DILexicalBlockFile(scope: !864, file: !408, discriminator: 5)
!4515 = !DILocation(line: 2296, column: 122, scope: !4516)
!4516 = !DILexicalBlockFile(scope: !4517, file: !408, discriminator: 7)
!4517 = !DILexicalBlockFile(scope: !864, file: !408, discriminator: 6)
!4518 = !DILocation(line: 2296, column: 122, scope: !863)
!4519 = !DILocation(line: 2296, column: 124, scope: !4520)
!4520 = !DILexicalBlockFile(scope: !4521, file: !408, discriminator: 8)
!4521 = !DILexicalBlockFile(scope: !865, file: !408, discriminator: 3)
!4522 = !DILocation(line: 2297, column: 5, scope: !835)
!4523 = !DILocation(line: 2298, column: 1, scope: !835)
!4524 = !DILocation(line: 2301, column: 41, scope: !866)
!4525 = !DILocation(line: 2303, column: 5, scope: !866)
!4526 = !DILocation(line: 2303, column: 10, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !872, file: !408, discriminator: 1)
!4528 = !DILocation(line: 2303, column: 20, scope: !872)
!4529 = !DILocation(line: 2303, column: 43, scope: !872)
!4530 = !DILocation(line: 2303, column: 49, scope: !872)
!4531 = !{!4352, !2621, i64 104}
!4532 = !DILocation(line: 2303, column: 72, scope: !876)
!4533 = !DILocation(line: 2303, column: 80, scope: !876)
!4534 = !DILocation(line: 2303, column: 72, scope: !872)
!4535 = !DILocation(line: 2303, column: 98, scope: !4536)
!4536 = !DILexicalBlockFile(scope: !875, file: !408, discriminator: 2)
!4537 = !DILocation(line: 2303, column: 104, scope: !875)
!4538 = !DILocation(line: 2303, column: 122, scope: !875)
!4539 = !DILocation(line: 2303, column: 136, scope: !875)
!4540 = !DILocation(line: 2303, column: 141, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !874, file: !408, discriminator: 4)
!4542 = !DILocation(line: 2303, column: 151, scope: !874)
!4543 = !DILocation(line: 2303, column: 181, scope: !874)
!4544 = !DILocation(line: 2303, column: 199, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !874, file: !408, line: 2303, column: 196)
!4546 = !DILocation(line: 2303, column: 216, scope: !4545)
!4547 = !DILocation(line: 2303, column: 196, scope: !4545)
!4548 = !DILocation(line: 2303, column: 226, scope: !4545)
!4549 = !DILocation(line: 2303, column: 196, scope: !874)
!4550 = !DILocation(line: 2303, column: 196, scope: !4551)
!4551 = !DILexicalBlockFile(scope: !874, file: !408, discriminator: 5)
!4552 = !DILocation(line: 2303, column: 257, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !4545, file: !408, discriminator: 6)
!4554 = !DILocation(line: 2303, column: 275, scope: !4545)
!4555 = !DILocation(line: 2303, column: 285, scope: !4545)
!4556 = !DILocation(line: 2303, column: 310, scope: !4545)
!4557 = !DILocation(line: 2303, column: 241, scope: !4545)
!4558 = !DILocation(line: 2303, column: 329, scope: !4559)
!4559 = !DILexicalBlockFile(scope: !875, file: !408, discriminator: 7)
!4560 = !DILocation(line: 2303, column: 329, scope: !874)
!4561 = !DILocation(line: 2303, column: 329, scope: !4562)
!4562 = !DILexicalBlockFile(scope: !874, file: !408, discriminator: 8)
!4563 = !DILocation(line: 2303, column: 342, scope: !4564)
!4564 = !DILexicalBlockFile(scope: !875, file: !408, discriminator: 9)
!4565 = !DILocation(line: 2303, column: 344, scope: !4566)
!4566 = !DILexicalBlockFile(scope: !4567, file: !408, discriminator: 10)
!4567 = !DILexicalBlockFile(scope: !866, file: !408, discriminator: 3)
!4568 = !DILocation(line: 2303, column: 344, scope: !872)
!4569 = !DILocation(line: 2304, column: 5, scope: !866)
!4570 = !DILocation(line: 2304, column: 10, scope: !4571)
!4571 = !DILexicalBlockFile(scope: !878, file: !408, discriminator: 1)
!4572 = !DILocation(line: 2304, column: 20, scope: !878)
!4573 = !DILocation(line: 2304, column: 43, scope: !878)
!4574 = !DILocation(line: 2304, column: 49, scope: !878)
!4575 = !{!4352, !2621, i64 96}
!4576 = !DILocation(line: 2304, column: 74, scope: !882)
!4577 = !DILocation(line: 2304, column: 82, scope: !882)
!4578 = !DILocation(line: 2304, column: 74, scope: !878)
!4579 = !DILocation(line: 2304, column: 100, scope: !4580)
!4580 = !DILexicalBlockFile(scope: !881, file: !408, discriminator: 2)
!4581 = !DILocation(line: 2304, column: 106, scope: !881)
!4582 = !DILocation(line: 2304, column: 126, scope: !881)
!4583 = !DILocation(line: 2304, column: 140, scope: !881)
!4584 = !DILocation(line: 2304, column: 145, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !880, file: !408, discriminator: 4)
!4586 = !DILocation(line: 2304, column: 155, scope: !880)
!4587 = !DILocation(line: 2304, column: 185, scope: !880)
!4588 = !DILocation(line: 2304, column: 203, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !880, file: !408, line: 2304, column: 200)
!4590 = !DILocation(line: 2304, column: 220, scope: !4589)
!4591 = !DILocation(line: 2304, column: 200, scope: !4589)
!4592 = !DILocation(line: 2304, column: 230, scope: !4589)
!4593 = !DILocation(line: 2304, column: 200, scope: !880)
!4594 = !DILocation(line: 2304, column: 200, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !880, file: !408, discriminator: 5)
!4596 = !DILocation(line: 2304, column: 261, scope: !4597)
!4597 = !DILexicalBlockFile(scope: !4589, file: !408, discriminator: 6)
!4598 = !DILocation(line: 2304, column: 279, scope: !4589)
!4599 = !DILocation(line: 2304, column: 289, scope: !4589)
!4600 = !DILocation(line: 2304, column: 314, scope: !4589)
!4601 = !DILocation(line: 2304, column: 245, scope: !4589)
!4602 = !DILocation(line: 2304, column: 333, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !881, file: !408, discriminator: 7)
!4604 = !DILocation(line: 2304, column: 333, scope: !880)
!4605 = !DILocation(line: 2304, column: 333, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !880, file: !408, discriminator: 8)
!4607 = !DILocation(line: 2304, column: 346, scope: !4608)
!4608 = !DILexicalBlockFile(scope: !881, file: !408, discriminator: 9)
!4609 = !DILocation(line: 2304, column: 348, scope: !4566)
!4610 = !DILocation(line: 2304, column: 348, scope: !878)
!4611 = !DILocation(line: 2305, column: 5, scope: !866)
!4612 = !DILocation(line: 2305, column: 10, scope: !4613)
!4613 = !DILexicalBlockFile(scope: !884, file: !408, discriminator: 1)
!4614 = !DILocation(line: 2305, column: 20, scope: !884)
!4615 = !DILocation(line: 2305, column: 43, scope: !884)
!4616 = !DILocation(line: 2305, column: 49, scope: !884)
!4617 = !{!4352, !2621, i64 88}
!4618 = !DILocation(line: 2305, column: 69, scope: !888)
!4619 = !DILocation(line: 2305, column: 77, scope: !888)
!4620 = !DILocation(line: 2305, column: 69, scope: !884)
!4621 = !DILocation(line: 2305, column: 95, scope: !4622)
!4622 = !DILexicalBlockFile(scope: !887, file: !408, discriminator: 2)
!4623 = !DILocation(line: 2305, column: 101, scope: !887)
!4624 = !DILocation(line: 2305, column: 116, scope: !887)
!4625 = !DILocation(line: 2305, column: 130, scope: !887)
!4626 = !DILocation(line: 2305, column: 135, scope: !4627)
!4627 = !DILexicalBlockFile(scope: !886, file: !408, discriminator: 4)
!4628 = !DILocation(line: 2305, column: 145, scope: !886)
!4629 = !DILocation(line: 2305, column: 175, scope: !886)
!4630 = !DILocation(line: 2305, column: 193, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !886, file: !408, line: 2305, column: 190)
!4632 = !DILocation(line: 2305, column: 210, scope: !4631)
!4633 = !DILocation(line: 2305, column: 190, scope: !4631)
!4634 = !DILocation(line: 2305, column: 220, scope: !4631)
!4635 = !DILocation(line: 2305, column: 190, scope: !886)
!4636 = !DILocation(line: 2305, column: 190, scope: !4637)
!4637 = !DILexicalBlockFile(scope: !886, file: !408, discriminator: 5)
!4638 = !DILocation(line: 2305, column: 251, scope: !4639)
!4639 = !DILexicalBlockFile(scope: !4631, file: !408, discriminator: 6)
!4640 = !DILocation(line: 2305, column: 269, scope: !4631)
!4641 = !DILocation(line: 2305, column: 279, scope: !4631)
!4642 = !DILocation(line: 2305, column: 304, scope: !4631)
!4643 = !DILocation(line: 2305, column: 235, scope: !4631)
!4644 = !DILocation(line: 2305, column: 323, scope: !4645)
!4645 = !DILexicalBlockFile(scope: !887, file: !408, discriminator: 7)
!4646 = !DILocation(line: 2305, column: 323, scope: !886)
!4647 = !DILocation(line: 2305, column: 323, scope: !4648)
!4648 = !DILexicalBlockFile(scope: !886, file: !408, discriminator: 8)
!4649 = !DILocation(line: 2305, column: 336, scope: !4650)
!4650 = !DILexicalBlockFile(scope: !887, file: !408, discriminator: 9)
!4651 = !DILocation(line: 2305, column: 338, scope: !4566)
!4652 = !DILocation(line: 2305, column: 338, scope: !884)
!4653 = !DILocation(line: 2306, column: 5, scope: !866)
!4654 = !DILocation(line: 2306, column: 10, scope: !4655)
!4655 = !DILexicalBlockFile(scope: !890, file: !408, discriminator: 1)
!4656 = !DILocation(line: 2306, column: 20, scope: !890)
!4657 = !DILocation(line: 2306, column: 43, scope: !890)
!4658 = !DILocation(line: 2306, column: 49, scope: !890)
!4659 = !{!4352, !2621, i64 80}
!4660 = !DILocation(line: 2306, column: 71, scope: !894)
!4661 = !DILocation(line: 2306, column: 79, scope: !894)
!4662 = !DILocation(line: 2306, column: 71, scope: !890)
!4663 = !DILocation(line: 2306, column: 97, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !893, file: !408, discriminator: 2)
!4665 = !DILocation(line: 2306, column: 103, scope: !893)
!4666 = !DILocation(line: 2306, column: 120, scope: !893)
!4667 = !DILocation(line: 2306, column: 134, scope: !893)
!4668 = !DILocation(line: 2306, column: 139, scope: !4669)
!4669 = !DILexicalBlockFile(scope: !892, file: !408, discriminator: 4)
!4670 = !DILocation(line: 2306, column: 149, scope: !892)
!4671 = !DILocation(line: 2306, column: 179, scope: !892)
!4672 = !DILocation(line: 2306, column: 197, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !892, file: !408, line: 2306, column: 194)
!4674 = !DILocation(line: 2306, column: 214, scope: !4673)
!4675 = !DILocation(line: 2306, column: 194, scope: !4673)
!4676 = !DILocation(line: 2306, column: 224, scope: !4673)
!4677 = !DILocation(line: 2306, column: 194, scope: !892)
!4678 = !DILocation(line: 2306, column: 194, scope: !4679)
!4679 = !DILexicalBlockFile(scope: !892, file: !408, discriminator: 5)
!4680 = !DILocation(line: 2306, column: 255, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4673, file: !408, discriminator: 6)
!4682 = !DILocation(line: 2306, column: 273, scope: !4673)
!4683 = !DILocation(line: 2306, column: 283, scope: !4673)
!4684 = !DILocation(line: 2306, column: 308, scope: !4673)
!4685 = !DILocation(line: 2306, column: 239, scope: !4673)
!4686 = !DILocation(line: 2306, column: 327, scope: !4687)
!4687 = !DILexicalBlockFile(scope: !893, file: !408, discriminator: 7)
!4688 = !DILocation(line: 2306, column: 327, scope: !892)
!4689 = !DILocation(line: 2306, column: 327, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !892, file: !408, discriminator: 8)
!4691 = !DILocation(line: 2306, column: 340, scope: !4692)
!4692 = !DILexicalBlockFile(scope: !893, file: !408, discriminator: 9)
!4693 = !DILocation(line: 2306, column: 342, scope: !4566)
!4694 = !DILocation(line: 2306, column: 342, scope: !890)
!4695 = !DILocation(line: 2307, column: 5, scope: !866)
!4696 = !DILocation(line: 2307, column: 10, scope: !4697)
!4697 = !DILexicalBlockFile(scope: !896, file: !408, discriminator: 1)
!4698 = !DILocation(line: 2307, column: 20, scope: !896)
!4699 = !DILocation(line: 2307, column: 43, scope: !896)
!4700 = !DILocation(line: 2307, column: 49, scope: !896)
!4701 = !{!4352, !2621, i64 72}
!4702 = !DILocation(line: 2307, column: 62, scope: !900)
!4703 = !DILocation(line: 2307, column: 70, scope: !900)
!4704 = !DILocation(line: 2307, column: 62, scope: !896)
!4705 = !DILocation(line: 2307, column: 88, scope: !4706)
!4706 = !DILexicalBlockFile(scope: !899, file: !408, discriminator: 2)
!4707 = !DILocation(line: 2307, column: 94, scope: !899)
!4708 = !DILocation(line: 2307, column: 102, scope: !899)
!4709 = !DILocation(line: 2307, column: 116, scope: !899)
!4710 = !DILocation(line: 2307, column: 121, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !898, file: !408, discriminator: 4)
!4712 = !DILocation(line: 2307, column: 131, scope: !898)
!4713 = !DILocation(line: 2307, column: 161, scope: !898)
!4714 = !DILocation(line: 2307, column: 179, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !898, file: !408, line: 2307, column: 176)
!4716 = !DILocation(line: 2307, column: 196, scope: !4715)
!4717 = !DILocation(line: 2307, column: 176, scope: !4715)
!4718 = !DILocation(line: 2307, column: 206, scope: !4715)
!4719 = !DILocation(line: 2307, column: 176, scope: !898)
!4720 = !DILocation(line: 2307, column: 176, scope: !4721)
!4721 = !DILexicalBlockFile(scope: !898, file: !408, discriminator: 5)
!4722 = !DILocation(line: 2307, column: 237, scope: !4723)
!4723 = !DILexicalBlockFile(scope: !4715, file: !408, discriminator: 6)
!4724 = !DILocation(line: 2307, column: 255, scope: !4715)
!4725 = !DILocation(line: 2307, column: 265, scope: !4715)
!4726 = !DILocation(line: 2307, column: 290, scope: !4715)
!4727 = !DILocation(line: 2307, column: 221, scope: !4715)
!4728 = !DILocation(line: 2307, column: 309, scope: !4729)
!4729 = !DILexicalBlockFile(scope: !899, file: !408, discriminator: 7)
!4730 = !DILocation(line: 2307, column: 309, scope: !898)
!4731 = !DILocation(line: 2307, column: 309, scope: !4732)
!4732 = !DILexicalBlockFile(scope: !898, file: !408, discriminator: 8)
!4733 = !DILocation(line: 2307, column: 322, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !899, file: !408, discriminator: 9)
!4735 = !DILocation(line: 2307, column: 324, scope: !4566)
!4736 = !DILocation(line: 2307, column: 324, scope: !896)
!4737 = !DILocation(line: 2308, column: 5, scope: !866)
!4738 = !DILocation(line: 2308, column: 10, scope: !4739)
!4739 = !DILexicalBlockFile(scope: !902, file: !408, discriminator: 1)
!4740 = !DILocation(line: 2308, column: 20, scope: !902)
!4741 = !DILocation(line: 2308, column: 43, scope: !902)
!4742 = !DILocation(line: 2308, column: 49, scope: !902)
!4743 = !DILocation(line: 2308, column: 61, scope: !906)
!4744 = !DILocation(line: 2308, column: 69, scope: !906)
!4745 = !DILocation(line: 2308, column: 61, scope: !902)
!4746 = !DILocation(line: 2308, column: 87, scope: !4747)
!4747 = !DILexicalBlockFile(scope: !905, file: !408, discriminator: 2)
!4748 = !DILocation(line: 2308, column: 93, scope: !905)
!4749 = !DILocation(line: 2308, column: 100, scope: !905)
!4750 = !DILocation(line: 2308, column: 114, scope: !905)
!4751 = !DILocation(line: 2308, column: 119, scope: !4752)
!4752 = !DILexicalBlockFile(scope: !904, file: !408, discriminator: 4)
!4753 = !DILocation(line: 2308, column: 129, scope: !904)
!4754 = !DILocation(line: 2308, column: 159, scope: !904)
!4755 = !DILocation(line: 2308, column: 177, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !904, file: !408, line: 2308, column: 174)
!4757 = !DILocation(line: 2308, column: 194, scope: !4756)
!4758 = !DILocation(line: 2308, column: 174, scope: !4756)
!4759 = !DILocation(line: 2308, column: 204, scope: !4756)
!4760 = !DILocation(line: 2308, column: 174, scope: !904)
!4761 = !DILocation(line: 2308, column: 174, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !904, file: !408, discriminator: 5)
!4763 = !DILocation(line: 2308, column: 235, scope: !4764)
!4764 = !DILexicalBlockFile(scope: !4756, file: !408, discriminator: 6)
!4765 = !DILocation(line: 2308, column: 253, scope: !4756)
!4766 = !DILocation(line: 2308, column: 263, scope: !4756)
!4767 = !DILocation(line: 2308, column: 288, scope: !4756)
!4768 = !DILocation(line: 2308, column: 219, scope: !4756)
!4769 = !DILocation(line: 2308, column: 307, scope: !4770)
!4770 = !DILexicalBlockFile(scope: !905, file: !408, discriminator: 7)
!4771 = !DILocation(line: 2308, column: 307, scope: !904)
!4772 = !DILocation(line: 2308, column: 307, scope: !4773)
!4773 = !DILexicalBlockFile(scope: !904, file: !408, discriminator: 8)
!4774 = !DILocation(line: 2308, column: 320, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !905, file: !408, discriminator: 9)
!4776 = !DILocation(line: 2308, column: 322, scope: !4566)
!4777 = !DILocation(line: 2308, column: 322, scope: !902)
!4778 = !DILocation(line: 2309, column: 5, scope: !866)
!4779 = !DILocation(line: 2309, column: 10, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !908, file: !408, discriminator: 1)
!4781 = !DILocation(line: 2309, column: 20, scope: !908)
!4782 = !DILocation(line: 2309, column: 43, scope: !908)
!4783 = !DILocation(line: 2309, column: 49, scope: !908)
!4784 = !DILocation(line: 2309, column: 60, scope: !912)
!4785 = !DILocation(line: 2309, column: 68, scope: !912)
!4786 = !DILocation(line: 2309, column: 60, scope: !908)
!4787 = !DILocation(line: 2309, column: 86, scope: !4788)
!4788 = !DILexicalBlockFile(scope: !911, file: !408, discriminator: 2)
!4789 = !DILocation(line: 2309, column: 92, scope: !911)
!4790 = !DILocation(line: 2309, column: 98, scope: !911)
!4791 = !DILocation(line: 2309, column: 112, scope: !911)
!4792 = !DILocation(line: 2309, column: 117, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !910, file: !408, discriminator: 4)
!4794 = !DILocation(line: 2309, column: 127, scope: !910)
!4795 = !DILocation(line: 2309, column: 157, scope: !910)
!4796 = !DILocation(line: 2309, column: 175, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !910, file: !408, line: 2309, column: 172)
!4798 = !DILocation(line: 2309, column: 192, scope: !4797)
!4799 = !DILocation(line: 2309, column: 172, scope: !4797)
!4800 = !DILocation(line: 2309, column: 202, scope: !4797)
!4801 = !DILocation(line: 2309, column: 172, scope: !910)
!4802 = !DILocation(line: 2309, column: 172, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !910, file: !408, discriminator: 5)
!4804 = !DILocation(line: 2309, column: 233, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4797, file: !408, discriminator: 6)
!4806 = !DILocation(line: 2309, column: 251, scope: !4797)
!4807 = !DILocation(line: 2309, column: 261, scope: !4797)
!4808 = !DILocation(line: 2309, column: 286, scope: !4797)
!4809 = !DILocation(line: 2309, column: 217, scope: !4797)
!4810 = !DILocation(line: 2309, column: 305, scope: !4811)
!4811 = !DILexicalBlockFile(scope: !911, file: !408, discriminator: 7)
!4812 = !DILocation(line: 2309, column: 305, scope: !910)
!4813 = !DILocation(line: 2309, column: 305, scope: !4814)
!4814 = !DILexicalBlockFile(scope: !910, file: !408, discriminator: 8)
!4815 = !DILocation(line: 2309, column: 318, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !911, file: !408, discriminator: 9)
!4817 = !DILocation(line: 2309, column: 320, scope: !4566)
!4818 = !DILocation(line: 2309, column: 320, scope: !908)
!4819 = !DILocation(line: 2310, column: 5, scope: !866)
!4820 = !DILocation(line: 2310, column: 10, scope: !4821)
!4821 = !DILexicalBlockFile(scope: !914, file: !408, discriminator: 1)
!4822 = !DILocation(line: 2310, column: 20, scope: !914)
!4823 = !DILocation(line: 2310, column: 43, scope: !914)
!4824 = !DILocation(line: 2310, column: 49, scope: !914)
!4825 = !DILocation(line: 2310, column: 60, scope: !918)
!4826 = !DILocation(line: 2310, column: 68, scope: !918)
!4827 = !DILocation(line: 2310, column: 60, scope: !914)
!4828 = !DILocation(line: 2310, column: 86, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !917, file: !408, discriminator: 2)
!4830 = !DILocation(line: 2310, column: 92, scope: !917)
!4831 = !DILocation(line: 2310, column: 98, scope: !917)
!4832 = !DILocation(line: 2310, column: 112, scope: !917)
!4833 = !DILocation(line: 2310, column: 117, scope: !4834)
!4834 = !DILexicalBlockFile(scope: !916, file: !408, discriminator: 4)
!4835 = !DILocation(line: 2310, column: 127, scope: !916)
!4836 = !DILocation(line: 2310, column: 157, scope: !916)
!4837 = !DILocation(line: 2310, column: 175, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !916, file: !408, line: 2310, column: 172)
!4839 = !DILocation(line: 2310, column: 192, scope: !4838)
!4840 = !DILocation(line: 2310, column: 172, scope: !4838)
!4841 = !DILocation(line: 2310, column: 202, scope: !4838)
!4842 = !DILocation(line: 2310, column: 172, scope: !916)
!4843 = !DILocation(line: 2310, column: 172, scope: !4844)
!4844 = !DILexicalBlockFile(scope: !916, file: !408, discriminator: 5)
!4845 = !DILocation(line: 2310, column: 233, scope: !4846)
!4846 = !DILexicalBlockFile(scope: !4838, file: !408, discriminator: 6)
!4847 = !DILocation(line: 2310, column: 251, scope: !4838)
!4848 = !DILocation(line: 2310, column: 261, scope: !4838)
!4849 = !DILocation(line: 2310, column: 286, scope: !4838)
!4850 = !DILocation(line: 2310, column: 217, scope: !4838)
!4851 = !DILocation(line: 2310, column: 305, scope: !4852)
!4852 = !DILexicalBlockFile(scope: !917, file: !408, discriminator: 7)
!4853 = !DILocation(line: 2310, column: 305, scope: !916)
!4854 = !DILocation(line: 2310, column: 305, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !916, file: !408, discriminator: 8)
!4856 = !DILocation(line: 2310, column: 318, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !917, file: !408, discriminator: 9)
!4858 = !DILocation(line: 2310, column: 320, scope: !4566)
!4859 = !DILocation(line: 2310, column: 320, scope: !914)
!4860 = !DILocation(line: 2311, column: 5, scope: !866)
!4861 = !DILocation(line: 2311, column: 10, scope: !4862)
!4862 = !DILexicalBlockFile(scope: !920, file: !408, discriminator: 1)
!4863 = !DILocation(line: 2311, column: 20, scope: !920)
!4864 = !DILocation(line: 2311, column: 43, scope: !920)
!4865 = !DILocation(line: 2311, column: 49, scope: !920)
!4866 = !DILocation(line: 2311, column: 60, scope: !924)
!4867 = !DILocation(line: 2311, column: 68, scope: !924)
!4868 = !DILocation(line: 2311, column: 60, scope: !920)
!4869 = !DILocation(line: 2311, column: 86, scope: !4870)
!4870 = !DILexicalBlockFile(scope: !923, file: !408, discriminator: 2)
!4871 = !DILocation(line: 2311, column: 92, scope: !923)
!4872 = !DILocation(line: 2311, column: 98, scope: !923)
!4873 = !DILocation(line: 2311, column: 112, scope: !923)
!4874 = !DILocation(line: 2311, column: 117, scope: !4875)
!4875 = !DILexicalBlockFile(scope: !922, file: !408, discriminator: 4)
!4876 = !DILocation(line: 2311, column: 127, scope: !922)
!4877 = !DILocation(line: 2311, column: 157, scope: !922)
!4878 = !DILocation(line: 2311, column: 175, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !922, file: !408, line: 2311, column: 172)
!4880 = !DILocation(line: 2311, column: 192, scope: !4879)
!4881 = !DILocation(line: 2311, column: 172, scope: !4879)
!4882 = !DILocation(line: 2311, column: 202, scope: !4879)
!4883 = !DILocation(line: 2311, column: 172, scope: !922)
!4884 = !DILocation(line: 2311, column: 172, scope: !4885)
!4885 = !DILexicalBlockFile(scope: !922, file: !408, discriminator: 5)
!4886 = !DILocation(line: 2311, column: 233, scope: !4887)
!4887 = !DILexicalBlockFile(scope: !4879, file: !408, discriminator: 6)
!4888 = !DILocation(line: 2311, column: 251, scope: !4879)
!4889 = !DILocation(line: 2311, column: 261, scope: !4879)
!4890 = !DILocation(line: 2311, column: 286, scope: !4879)
!4891 = !DILocation(line: 2311, column: 217, scope: !4879)
!4892 = !DILocation(line: 2311, column: 305, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !923, file: !408, discriminator: 7)
!4894 = !DILocation(line: 2311, column: 305, scope: !922)
!4895 = !DILocation(line: 2311, column: 305, scope: !4896)
!4896 = !DILexicalBlockFile(scope: !922, file: !408, discriminator: 8)
!4897 = !DILocation(line: 2311, column: 318, scope: !4898)
!4898 = !DILexicalBlockFile(scope: !923, file: !408, discriminator: 9)
!4899 = !DILocation(line: 2311, column: 320, scope: !4566)
!4900 = !DILocation(line: 2311, column: 320, scope: !920)
!4901 = !DILocation(line: 2312, column: 5, scope: !866)
!4902 = !DILocation(line: 2312, column: 10, scope: !4903)
!4903 = !DILexicalBlockFile(scope: !926, file: !408, discriminator: 1)
!4904 = !DILocation(line: 2312, column: 20, scope: !926)
!4905 = !DILocation(line: 2312, column: 43, scope: !926)
!4906 = !DILocation(line: 2312, column: 49, scope: !926)
!4907 = !DILocation(line: 2312, column: 71, scope: !930)
!4908 = !DILocation(line: 2312, column: 79, scope: !930)
!4909 = !DILocation(line: 2312, column: 71, scope: !926)
!4910 = !DILocation(line: 2312, column: 97, scope: !4911)
!4911 = !DILexicalBlockFile(scope: !929, file: !408, discriminator: 2)
!4912 = !DILocation(line: 2312, column: 103, scope: !929)
!4913 = !DILocation(line: 2312, column: 120, scope: !929)
!4914 = !DILocation(line: 2312, column: 134, scope: !929)
!4915 = !DILocation(line: 2312, column: 139, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !928, file: !408, discriminator: 4)
!4917 = !DILocation(line: 2312, column: 149, scope: !928)
!4918 = !DILocation(line: 2312, column: 179, scope: !928)
!4919 = !DILocation(line: 2312, column: 197, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !928, file: !408, line: 2312, column: 194)
!4921 = !DILocation(line: 2312, column: 214, scope: !4920)
!4922 = !DILocation(line: 2312, column: 194, scope: !4920)
!4923 = !DILocation(line: 2312, column: 224, scope: !4920)
!4924 = !DILocation(line: 2312, column: 194, scope: !928)
!4925 = !DILocation(line: 2312, column: 194, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !928, file: !408, discriminator: 5)
!4927 = !DILocation(line: 2312, column: 255, scope: !4928)
!4928 = !DILexicalBlockFile(scope: !4920, file: !408, discriminator: 6)
!4929 = !DILocation(line: 2312, column: 273, scope: !4920)
!4930 = !DILocation(line: 2312, column: 283, scope: !4920)
!4931 = !DILocation(line: 2312, column: 308, scope: !4920)
!4932 = !DILocation(line: 2312, column: 239, scope: !4920)
!4933 = !DILocation(line: 2312, column: 327, scope: !4934)
!4934 = !DILexicalBlockFile(scope: !929, file: !408, discriminator: 7)
!4935 = !DILocation(line: 2312, column: 327, scope: !928)
!4936 = !DILocation(line: 2312, column: 327, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !928, file: !408, discriminator: 8)
!4938 = !DILocation(line: 2312, column: 340, scope: !4939)
!4939 = !DILexicalBlockFile(scope: !929, file: !408, discriminator: 9)
!4940 = !DILocation(line: 2312, column: 342, scope: !4566)
!4941 = !DILocation(line: 2312, column: 342, scope: !926)
!4942 = !DILocation(line: 2313, column: 5, scope: !866)
!4943 = !DILocation(line: 2313, column: 10, scope: !4944)
!4944 = !DILexicalBlockFile(scope: !932, file: !408, discriminator: 1)
!4945 = !DILocation(line: 2313, column: 20, scope: !932)
!4946 = !DILocation(line: 2313, column: 43, scope: !932)
!4947 = !DILocation(line: 2313, column: 49, scope: !932)
!4948 = !DILocation(line: 2313, column: 60, scope: !936)
!4949 = !DILocation(line: 2313, column: 68, scope: !936)
!4950 = !DILocation(line: 2313, column: 60, scope: !932)
!4951 = !DILocation(line: 2313, column: 86, scope: !4952)
!4952 = !DILexicalBlockFile(scope: !935, file: !408, discriminator: 2)
!4953 = !DILocation(line: 2313, column: 92, scope: !935)
!4954 = !DILocation(line: 2313, column: 98, scope: !935)
!4955 = !DILocation(line: 2313, column: 112, scope: !935)
!4956 = !DILocation(line: 2313, column: 117, scope: !4957)
!4957 = !DILexicalBlockFile(scope: !934, file: !408, discriminator: 4)
!4958 = !DILocation(line: 2313, column: 127, scope: !934)
!4959 = !DILocation(line: 2313, column: 157, scope: !934)
!4960 = !DILocation(line: 2313, column: 175, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !934, file: !408, line: 2313, column: 172)
!4962 = !DILocation(line: 2313, column: 192, scope: !4961)
!4963 = !DILocation(line: 2313, column: 172, scope: !4961)
!4964 = !DILocation(line: 2313, column: 202, scope: !4961)
!4965 = !DILocation(line: 2313, column: 172, scope: !934)
!4966 = !DILocation(line: 2313, column: 172, scope: !4967)
!4967 = !DILexicalBlockFile(scope: !934, file: !408, discriminator: 5)
!4968 = !DILocation(line: 2313, column: 233, scope: !4969)
!4969 = !DILexicalBlockFile(scope: !4961, file: !408, discriminator: 6)
!4970 = !DILocation(line: 2313, column: 251, scope: !4961)
!4971 = !DILocation(line: 2313, column: 261, scope: !4961)
!4972 = !DILocation(line: 2313, column: 286, scope: !4961)
!4973 = !DILocation(line: 2313, column: 217, scope: !4961)
!4974 = !DILocation(line: 2313, column: 305, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !935, file: !408, discriminator: 7)
!4976 = !DILocation(line: 2313, column: 305, scope: !934)
!4977 = !DILocation(line: 2313, column: 305, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !934, file: !408, discriminator: 8)
!4979 = !DILocation(line: 2313, column: 318, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !935, file: !408, discriminator: 9)
!4981 = !DILocation(line: 2313, column: 320, scope: !4566)
!4982 = !DILocation(line: 2313, column: 320, scope: !932)
!4983 = !DILocation(line: 2314, column: 5, scope: !866)
!4984 = !DILocation(line: 2266, column: 28, scope: !1061)
!4985 = !DILocation(line: 2266, column: 44, scope: !1061)
!4986 = !DILocation(line: 2266, column: 60, scope: !1061)
!4987 = !DILocation(line: 2269, column: 5, scope: !1061)
!4988 = !DILocation(line: 2269, column: 15, scope: !1061)
!4989 = !DILocation(line: 2270, column: 5, scope: !1061)
!4990 = !DILocation(line: 2270, column: 24, scope: !1061)
!4991 = !DILocation(line: 2270, column: 55, scope: !1061)
!4992 = !DILocation(line: 2270, column: 34, scope: !1061)
!4993 = !DILocation(line: 2271, column: 5, scope: !1061)
!4994 = !DILocation(line: 2271, column: 15, scope: !1061)
!4995 = !DILocation(line: 2273, column: 38, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !1061, file: !408, line: 2273, column: 9)
!4997 = !DILocation(line: 2273, column: 44, scope: !4996)
!4998 = !DILocation(line: 2273, column: 10, scope: !4996)
!4999 = !DILocation(line: 2273, column: 9, scope: !1061)
!5000 = !DILocation(line: 2275, column: 9, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4996, file: !408, line: 2274, column: 57)
!5002 = !DILocation(line: 2278, column: 9, scope: !1072)
!5003 = !DILocation(line: 2278, column: 9, scope: !1061)
!5004 = !DILocation(line: 2279, column: 25, scope: !1071)
!5005 = !DILocation(line: 2279, column: 44, scope: !1071)
!5006 = !DILocation(line: 2279, column: 53, scope: !1071)
!5007 = !DILocation(line: 2280, column: 15, scope: !1071)
!5008 = !DILocation(line: 2280, column: 24, scope: !1071)
!5009 = !DILocation(line: 2280, column: 13, scope: !1071)
!5010 = !DILocation(line: 2281, column: 36, scope: !1071)
!5011 = !DILocation(line: 2281, column: 9, scope: !1071)
!5012 = !DILocation(line: 2281, column: 18, scope: !1071)
!5013 = !DILocation(line: 2281, column: 34, scope: !1071)
!5014 = !DILocation(line: 2282, column: 9, scope: !1071)
!5015 = !DILocation(line: 2282, column: 14, scope: !5016)
!5016 = !DILexicalBlockFile(scope: !1070, file: !408, discriminator: 1)
!5017 = !DILocation(line: 2282, column: 24, scope: !1070)
!5018 = !DILocation(line: 2282, column: 55, scope: !1070)
!5019 = !DILocation(line: 2282, column: 65, scope: !1075)
!5020 = !DILocation(line: 2282, column: 81, scope: !1075)
!5021 = !DILocation(line: 2282, column: 65, scope: !1070)
!5022 = !DILocation(line: 2282, column: 96, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !1075, file: !408, discriminator: 2)
!5024 = !DILocation(line: 2282, column: 101, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !1074, file: !408, discriminator: 4)
!5026 = !DILocation(line: 2282, column: 111, scope: !1074)
!5027 = !DILocation(line: 2282, column: 141, scope: !1074)
!5028 = !DILocation(line: 2282, column: 167, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !1074, file: !408, line: 2282, column: 164)
!5030 = !DILocation(line: 2282, column: 184, scope: !5029)
!5031 = !DILocation(line: 2282, column: 164, scope: !5029)
!5032 = !DILocation(line: 2282, column: 194, scope: !5029)
!5033 = !DILocation(line: 2282, column: 164, scope: !1074)
!5034 = !DILocation(line: 2282, column: 164, scope: !5035)
!5035 = !DILexicalBlockFile(scope: !1074, file: !408, discriminator: 5)
!5036 = !DILocation(line: 2282, column: 225, scope: !5037)
!5037 = !DILexicalBlockFile(scope: !5029, file: !408, discriminator: 6)
!5038 = !DILocation(line: 2282, column: 243, scope: !5029)
!5039 = !DILocation(line: 2282, column: 253, scope: !5029)
!5040 = !DILocation(line: 2282, column: 278, scope: !5029)
!5041 = !DILocation(line: 2282, column: 209, scope: !5029)
!5042 = !DILocation(line: 2282, column: 297, scope: !5043)
!5043 = !DILexicalBlockFile(scope: !1075, file: !408, discriminator: 7)
!5044 = !DILocation(line: 2282, column: 297, scope: !1074)
!5045 = !DILocation(line: 2282, column: 297, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !1074, file: !408, discriminator: 8)
!5047 = !DILocation(line: 2282, column: 297, scope: !5048)
!5048 = !DILexicalBlockFile(scope: !1074, file: !408, discriminator: 9)
!5049 = !DILocation(line: 2282, column: 310, scope: !5050)
!5050 = !DILexicalBlockFile(scope: !5051, file: !408, discriminator: 10)
!5051 = !DILexicalBlockFile(scope: !1071, file: !408, discriminator: 3)
!5052 = !DILocation(line: 2282, column: 310, scope: !1070)
!5053 = !DILocation(line: 2282, column: 310, scope: !5054)
!5054 = !DILexicalBlockFile(scope: !1070, file: !408, discriminator: 11)
!5055 = !DILocation(line: 2283, column: 5, scope: !1071)
!5056 = !DILocation(line: 2285, column: 5, scope: !1061)
!5057 = !DILocation(line: 2286, column: 1, scope: !1061)
!5058 = !DILocation(line: 2236, column: 31, scope: !1076)
!5059 = !DILocation(line: 2236, column: 47, scope: !1076)
!5060 = !DILocation(line: 2236, column: 63, scope: !1076)
!5061 = !DILocation(line: 2238, column: 5, scope: !1076)
!5062 = !DILocation(line: 2238, column: 24, scope: !1076)
!5063 = !DILocation(line: 2238, column: 49, scope: !1076)
!5064 = !DILocation(line: 2238, column: 55, scope: !1076)
!5065 = !{!2706, !2621, i64 304}
!5066 = !DILocation(line: 2238, column: 64, scope: !1076)
!5067 = !DILocation(line: 2238, column: 28, scope: !1076)
!5068 = !DILocation(line: 2239, column: 9, scope: !1091)
!5069 = !DILocation(line: 2239, column: 11, scope: !1091)
!5070 = !DILocation(line: 2239, column: 9, scope: !1076)
!5071 = !DILocation(line: 2240, column: 9, scope: !1090)
!5072 = !DILocation(line: 2240, column: 12, scope: !1090)
!5073 = !DILocation(line: 2240, column: 17, scope: !1090)
!5074 = !DILocation(line: 2242, column: 55, scope: !1090)
!5075 = !DILocation(line: 2243, column: 9, scope: !1090)
!5076 = !DILocation(line: 2243, column: 12, scope: !1090)
!5077 = !DILocation(line: 2243, column: 17, scope: !1090)
!5078 = !DILocation(line: 2244, column: 55, scope: !1090)
!5079 = !DILocation(line: 2245, column: 9, scope: !1090)
!5080 = !DILocation(line: 2245, column: 12, scope: !1090)
!5081 = !DILocation(line: 2245, column: 17, scope: !1090)
!5082 = !DILocation(line: 2247, column: 9, scope: !1090)
!5083 = !DILocation(line: 2247, column: 12, scope: !1090)
!5084 = !DILocation(line: 2247, column: 17, scope: !1090)
!5085 = !DILocation(line: 2248, column: 9, scope: !1090)
!5086 = !DILocation(line: 2248, column: 12, scope: !1090)
!5087 = !DILocation(line: 2248, column: 28, scope: !1090)
!5088 = !DILocation(line: 2249, column: 20, scope: !1090)
!5089 = !DILocation(line: 2249, column: 9, scope: !1090)
!5090 = !DILocation(line: 2249, column: 12, scope: !1090)
!5091 = !DILocation(line: 2249, column: 18, scope: !1090)
!5092 = !DILocation(line: 2250, column: 14, scope: !1089)
!5093 = !DILocation(line: 2250, column: 17, scope: !1089)
!5094 = !DILocation(line: 2250, column: 13, scope: !1090)
!5095 = !DILocation(line: 2251, column: 13, scope: !1088)
!5096 = !DILocation(line: 2251, column: 18, scope: !5097)
!5097 = !DILexicalBlockFile(scope: !1087, file: !408, discriminator: 1)
!5098 = !DILocation(line: 2251, column: 28, scope: !1087)
!5099 = !DILocation(line: 2251, column: 58, scope: !1087)
!5100 = !DILocation(line: 2251, column: 61, scope: !1087)
!5101 = !DILocation(line: 2251, column: 76, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !1087, file: !408, line: 2251, column: 73)
!5103 = !DILocation(line: 2251, column: 93, scope: !5102)
!5104 = !DILocation(line: 2251, column: 73, scope: !5102)
!5105 = !DILocation(line: 2251, column: 103, scope: !5102)
!5106 = !DILocation(line: 2251, column: 73, scope: !1087)
!5107 = !DILocation(line: 2251, column: 73, scope: !5108)
!5108 = !DILexicalBlockFile(scope: !1087, file: !408, discriminator: 2)
!5109 = !DILocation(line: 2251, column: 134, scope: !5110)
!5110 = !DILexicalBlockFile(scope: !5102, file: !408, discriminator: 3)
!5111 = !DILocation(line: 2251, column: 152, scope: !5102)
!5112 = !DILocation(line: 2251, column: 162, scope: !5102)
!5113 = !DILocation(line: 2251, column: 187, scope: !5102)
!5114 = !DILocation(line: 2251, column: 118, scope: !5102)
!5115 = !DILocation(line: 2251, column: 206, scope: !5116)
!5116 = !DILexicalBlockFile(scope: !1088, file: !408, discriminator: 4)
!5117 = !DILocation(line: 2251, column: 206, scope: !1087)
!5118 = !DILocation(line: 2251, column: 206, scope: !5119)
!5119 = !DILexicalBlockFile(scope: !1087, file: !408, discriminator: 5)
!5120 = !DILocation(line: 2252, column: 13, scope: !1088)
!5121 = !DILocation(line: 2252, column: 18, scope: !5122)
!5122 = !DILexicalBlockFile(scope: !1093, file: !408, discriminator: 1)
!5123 = !DILocation(line: 2252, column: 28, scope: !1093)
!5124 = !DILocation(line: 2252, column: 58, scope: !1093)
!5125 = !DILocation(line: 2252, column: 61, scope: !1093)
!5126 = !DILocation(line: 2252, column: 76, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !1093, file: !408, line: 2252, column: 73)
!5128 = !DILocation(line: 2252, column: 93, scope: !5127)
!5129 = !DILocation(line: 2252, column: 73, scope: !5127)
!5130 = !DILocation(line: 2252, column: 103, scope: !5127)
!5131 = !DILocation(line: 2252, column: 73, scope: !1093)
!5132 = !DILocation(line: 2252, column: 73, scope: !5133)
!5133 = !DILexicalBlockFile(scope: !1093, file: !408, discriminator: 2)
!5134 = !DILocation(line: 2252, column: 134, scope: !5135)
!5135 = !DILexicalBlockFile(scope: !5127, file: !408, discriminator: 3)
!5136 = !DILocation(line: 2252, column: 152, scope: !5127)
!5137 = !DILocation(line: 2252, column: 162, scope: !5127)
!5138 = !DILocation(line: 2252, column: 187, scope: !5127)
!5139 = !DILocation(line: 2252, column: 118, scope: !5127)
!5140 = !DILocation(line: 2252, column: 206, scope: !5116)
!5141 = !DILocation(line: 2252, column: 206, scope: !1093)
!5142 = !DILocation(line: 2252, column: 206, scope: !5143)
!5143 = !DILexicalBlockFile(scope: !1093, file: !408, discriminator: 5)
!5144 = !DILocation(line: 2253, column: 13, scope: !1088)
!5145 = !DILocation(line: 2253, column: 18, scope: !5146)
!5146 = !DILexicalBlockFile(scope: !1095, file: !408, discriminator: 1)
!5147 = !DILocation(line: 2253, column: 28, scope: !1095)
!5148 = !DILocation(line: 2253, column: 71, scope: !1095)
!5149 = !DILocation(line: 2253, column: 58, scope: !1095)
!5150 = !DILocation(line: 2253, column: 83, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !1095, file: !408, line: 2253, column: 80)
!5152 = !DILocation(line: 2253, column: 100, scope: !5151)
!5153 = !DILocation(line: 2253, column: 80, scope: !5151)
!5154 = !DILocation(line: 2253, column: 110, scope: !5151)
!5155 = !DILocation(line: 2253, column: 80, scope: !1095)
!5156 = !DILocation(line: 2253, column: 80, scope: !5157)
!5157 = !DILexicalBlockFile(scope: !1095, file: !408, discriminator: 2)
!5158 = !DILocation(line: 2253, column: 141, scope: !5159)
!5159 = !DILexicalBlockFile(scope: !5151, file: !408, discriminator: 3)
!5160 = !DILocation(line: 2253, column: 159, scope: !5151)
!5161 = !DILocation(line: 2253, column: 169, scope: !5151)
!5162 = !DILocation(line: 2253, column: 194, scope: !5151)
!5163 = !DILocation(line: 2253, column: 125, scope: !5151)
!5164 = !DILocation(line: 2253, column: 213, scope: !5116)
!5165 = !DILocation(line: 2253, column: 213, scope: !1095)
!5166 = !DILocation(line: 2253, column: 213, scope: !5167)
!5167 = !DILexicalBlockFile(scope: !1095, file: !408, discriminator: 5)
!5168 = !DILocation(line: 2254, column: 13, scope: !1088)
!5169 = !DILocation(line: 2256, column: 9, scope: !1090)
!5170 = !DILocation(line: 2256, column: 12, scope: !1090)
!5171 = !DILocation(line: 2256, column: 18, scope: !1090)
!5172 = !{!4352, !2633, i64 56}
!5173 = !DILocation(line: 2258, column: 9, scope: !1090)
!5174 = !DILocation(line: 2258, column: 12, scope: !1090)
!5175 = !DILocation(line: 2258, column: 19, scope: !1090)
!5176 = !DILocation(line: 2259, column: 30, scope: !1090)
!5177 = !DILocation(line: 2259, column: 33, scope: !1090)
!5178 = !DILocation(line: 2259, column: 47, scope: !1090)
!5179 = !DILocation(line: 2259, column: 9, scope: !1090)
!5180 = !DILocation(line: 2259, column: 12, scope: !1090)
!5181 = !DILocation(line: 2259, column: 28, scope: !1090)
!5182 = !DILocation(line: 2260, column: 33, scope: !1090)
!5183 = !DILocation(line: 2260, column: 36, scope: !1090)
!5184 = !DILocation(line: 2260, column: 53, scope: !1090)
!5185 = !DILocation(line: 2260, column: 9, scope: !1090)
!5186 = !DILocation(line: 2260, column: 12, scope: !1090)
!5187 = !DILocation(line: 2260, column: 31, scope: !1090)
!5188 = !DILocation(line: 2261, column: 5, scope: !1090)
!5189 = !DILocation(line: 2262, column: 24, scope: !1076)
!5190 = !DILocation(line: 2262, column: 12, scope: !1076)
!5191 = !DILocation(line: 2262, column: 5, scope: !1076)
!5192 = !DILocation(line: 2263, column: 1, scope: !1076)
!5193 = !DILocation(line: 2602, column: 37, scope: !937)
!5194 = !DILocation(line: 2602, column: 53, scope: !937)
!5195 = !DILocation(line: 2604, column: 5, scope: !937)
!5196 = !DILocation(line: 2604, column: 15, scope: !937)
!5197 = !DILocation(line: 2605, column: 27, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !937, file: !408, line: 2605, column: 9)
!5199 = !DILocation(line: 2605, column: 10, scope: !5198)
!5200 = !DILocation(line: 2605, column: 9, scope: !937)
!5201 = !DILocation(line: 2606, column: 9, scope: !5198)
!5202 = !DILocation(line: 2608, column: 36, scope: !937)
!5203 = !DILocation(line: 2608, column: 42, scope: !937)
!5204 = !DILocation(line: 2608, column: 12, scope: !937)
!5205 = !DILocation(line: 2608, column: 5, scope: !937)
!5206 = !DILocation(line: 2609, column: 1, scope: !937)
!5207 = !DILocation(line: 2647, column: 38, scope: !956)
!5208 = !DILocation(line: 2647, column: 54, scope: !956)
!5209 = !DILocation(line: 2649, column: 5, scope: !956)
!5210 = !DILocation(line: 2649, column: 15, scope: !956)
!5211 = !DILocation(line: 2650, column: 5, scope: !956)
!5212 = !DILocation(line: 2650, column: 15, scope: !956)
!5213 = !DILocation(line: 2651, column: 27, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !956, file: !408, line: 2651, column: 9)
!5215 = !DILocation(line: 2651, column: 10, scope: !5214)
!5216 = !DILocation(line: 2651, column: 9, scope: !956)
!5217 = !DILocation(line: 2652, column: 9, scope: !5214)
!5218 = !DILocation(line: 2654, column: 37, scope: !956)
!5219 = !DILocation(line: 2654, column: 43, scope: !956)
!5220 = !DILocation(line: 2654, column: 48, scope: !956)
!5221 = !DILocation(line: 2654, column: 12, scope: !956)
!5222 = !DILocation(line: 2654, column: 5, scope: !956)
!5223 = !DILocation(line: 2655, column: 1, scope: !956)
!5224 = !DILocation(line: 2612, column: 36, scope: !1030)
!5225 = !DILocation(line: 2612, column: 52, scope: !1030)
!5226 = !DILocation(line: 2614, column: 5, scope: !1030)
!5227 = !DILocation(line: 2614, column: 15, scope: !1030)
!5228 = !DILocation(line: 2615, column: 27, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !1030, file: !408, line: 2615, column: 9)
!5230 = !DILocation(line: 2615, column: 10, scope: !5229)
!5231 = !DILocation(line: 2615, column: 9, scope: !1030)
!5232 = !DILocation(line: 2616, column: 9, scope: !5229)
!5233 = !DILocation(line: 2618, column: 35, scope: !1030)
!5234 = !DILocation(line: 2618, column: 41, scope: !1030)
!5235 = !DILocation(line: 2618, column: 12, scope: !1030)
!5236 = !DILocation(line: 2618, column: 5, scope: !1030)
!5237 = !DILocation(line: 2619, column: 1, scope: !1030)
!5238 = !DILocation(line: 2638, column: 38, scope: !1051)
!5239 = !DILocation(line: 2638, column: 54, scope: !1051)
!5240 = !DILocation(line: 2640, column: 27, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !1051, file: !408, line: 2640, column: 9)
!5242 = !DILocation(line: 2640, column: 10, scope: !5241)
!5243 = !DILocation(line: 2640, column: 9, scope: !1051)
!5244 = !DILocation(line: 2641, column: 9, scope: !5241)
!5245 = !DILocation(line: 2643, column: 29, scope: !1051)
!5246 = !DILocation(line: 2643, column: 12, scope: !1051)
!5247 = !DILocation(line: 2643, column: 5, scope: !1051)
!5248 = !DILocation(line: 2644, column: 1, scope: !1051)
!5249 = !DILocation(line: 2469, column: 44, scope: !944)
!5250 = !DILocation(line: 2469, column: 60, scope: !944)
!5251 = !DILocation(line: 2471, column: 10, scope: !952)
!5252 = !DILocation(line: 2471, column: 16, scope: !952)
!5253 = !DILocation(line: 2471, column: 9, scope: !944)
!5254 = !DILocation(line: 2472, column: 13, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !408, line: 2472, column: 13)
!5256 = distinct !DILexicalBlock(scope: !952, file: !408, line: 2471, column: 22)
!5257 = !DILocation(line: 2472, column: 19, scope: !5255)
!5258 = !DILocation(line: 2472, column: 24, scope: !5255)
!5259 = !DILocation(line: 2472, column: 13, scope: !5256)
!5260 = !DILocation(line: 2474, column: 66, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5255, file: !408, line: 2472, column: 46)
!5262 = !DILocation(line: 2474, column: 13, scope: !5261)
!5263 = !DILocation(line: 2477, column: 25, scope: !5256)
!5264 = !DILocation(line: 2477, column: 33, scope: !5256)
!5265 = !DILocation(line: 2477, column: 42, scope: !5256)
!5266 = !DILocation(line: 2477, column: 60, scope: !5256)
!5267 = !DILocation(line: 2477, column: 47, scope: !5256)
!5268 = !DILocation(line: 2477, column: 53, scope: !5256)
!5269 = !DILocation(line: 2477, column: 58, scope: !5256)
!5270 = !DILocation(line: 2478, column: 5, scope: !5256)
!5271 = !DILocation(line: 2480, column: 28, scope: !950)
!5272 = !DILocation(line: 2480, column: 34, scope: !950)
!5273 = !DILocation(line: 2480, column: 42, scope: !950)
!5274 = !DILocation(line: 2480, column: 51, scope: !950)
!5275 = !DILocation(line: 2480, column: 69, scope: !950)
!5276 = !DILocation(line: 2480, column: 86, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !950, file: !408, discriminator: 1)
!5278 = !DILocation(line: 2480, column: 92, scope: !950)
!5279 = !DILocation(line: 2480, column: 100, scope: !950)
!5280 = !DILocation(line: 2480, column: 111, scope: !950)
!5281 = !DILocation(line: 2480, column: 116, scope: !950)
!5282 = !DILocation(line: 2481, column: 28, scope: !950)
!5283 = !DILocation(line: 2481, column: 36, scope: !950)
!5284 = !DILocation(line: 2481, column: 45, scope: !950)
!5285 = !DILocation(line: 2481, column: 63, scope: !950)
!5286 = !DILocation(line: 2481, column: 97, scope: !5277)
!5287 = !DILocation(line: 2481, column: 82, scope: !950)
!5288 = !DILocation(line: 2481, column: 105, scope: !950)
!5289 = !{!2707, !2633, i64 16}
!5290 = !DILocation(line: 2481, column: 115, scope: !950)
!5291 = !DILocation(line: 2480, column: 13, scope: !951)
!5292 = !DILocation(line: 2485, column: 13, scope: !949)
!5293 = !DILocation(line: 2485, column: 24, scope: !949)
!5294 = !DILocation(line: 2485, column: 62, scope: !949)
!5295 = !DILocation(line: 2485, column: 68, scope: !949)
!5296 = !DILocation(line: 2485, column: 47, scope: !949)
!5297 = !DILocation(line: 2485, column: 76, scope: !949)
!5298 = !DILocation(line: 2486, column: 34, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !949, file: !408, line: 2486, column: 17)
!5300 = !DILocation(line: 2486, column: 40, scope: !5299)
!5301 = !DILocation(line: 2486, column: 46, scope: !5299)
!5302 = !DILocation(line: 2486, column: 51, scope: !5299)
!5303 = !DILocation(line: 2486, column: 17, scope: !5299)
!5304 = !DILocation(line: 2486, column: 56, scope: !5299)
!5305 = !DILocation(line: 2486, column: 17, scope: !949)
!5306 = !DILocation(line: 2487, column: 17, scope: !5299)
!5307 = !DILocation(line: 2488, column: 115, scope: !949)
!5308 = !DILocation(line: 2488, column: 97, scope: !949)
!5309 = !DILocation(line: 2488, column: 123, scope: !949)
!5310 = !DILocation(line: 2488, column: 95, scope: !949)
!5311 = !DILocation(line: 2488, column: 80, scope: !949)
!5312 = !DILocation(line: 2488, column: 72, scope: !949)
!5313 = !DILocation(line: 2488, column: 48, scope: !949)
!5314 = !DILocation(line: 2488, column: 54, scope: !949)
!5315 = !DILocation(line: 2488, column: 30, scope: !949)
!5316 = !DILocation(line: 2488, column: 62, scope: !949)
!5317 = !DILocation(line: 2488, column: 28, scope: !949)
!5318 = !DILocation(line: 2488, column: 13, scope: !949)
!5319 = !DILocation(line: 2488, column: 78, scope: !949)
!5320 = !DILocation(line: 2489, column: 9, scope: !950)
!5321 = !DILocation(line: 2489, column: 9, scope: !5277)
!5322 = !DILocation(line: 2489, column: 9, scope: !949)
!5323 = !DILocation(line: 2489, column: 35, scope: !955)
!5324 = !DILocation(line: 2489, column: 41, scope: !955)
!5325 = !DILocation(line: 2489, column: 49, scope: !955)
!5326 = !DILocation(line: 2489, column: 58, scope: !955)
!5327 = !DILocation(line: 2489, column: 20, scope: !950)
!5328 = !DILocation(line: 2490, column: 31, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !408, line: 2490, column: 17)
!5330 = distinct !DILexicalBlock(scope: !955, file: !408, line: 2489, column: 76)
!5331 = !DILocation(line: 2490, column: 37, scope: !5329)
!5332 = !DILocation(line: 2490, column: 43, scope: !5329)
!5333 = !DILocation(line: 2490, column: 17, scope: !5329)
!5334 = !DILocation(line: 2490, column: 49, scope: !5329)
!5335 = !DILocation(line: 2490, column: 17, scope: !5330)
!5336 = !DILocation(line: 2491, column: 17, scope: !5329)
!5337 = !DILocation(line: 2492, column: 9, scope: !5330)
!5338 = !DILocation(line: 2493, column: 13, scope: !954)
!5339 = !DILocation(line: 2493, column: 23, scope: !954)
!5340 = !DILocation(line: 2493, column: 30, scope: !954)
!5341 = !DILocation(line: 2494, column: 18, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !954, file: !408, line: 2494, column: 17)
!5343 = !DILocation(line: 2494, column: 17, scope: !954)
!5344 = !DILocation(line: 2495, column: 17, scope: !5342)
!5345 = !DILocation(line: 2496, column: 54, scope: !954)
!5346 = !DILocation(line: 2496, column: 60, scope: !954)
!5347 = !DILocation(line: 2496, column: 32, scope: !954)
!5348 = !DILocation(line: 2496, column: 15, scope: !954)
!5349 = !DILocation(line: 2496, column: 40, scope: !954)
!5350 = !{!5351, !2621, i64 24}
!5351 = !{!"", !2707, i64 0, !2621, i64 24, !2633, i64 32}
!5352 = !DILocation(line: 2496, column: 14, scope: !954)
!5353 = !DILocation(line: 2496, column: 51, scope: !954)
!5354 = !DILocation(line: 2497, column: 29, scope: !954)
!5355 = !DILocation(line: 2497, column: 37, scope: !954)
!5356 = !DILocation(line: 2497, column: 46, scope: !954)
!5357 = !DILocation(line: 2497, column: 92, scope: !954)
!5358 = !DILocation(line: 2497, column: 70, scope: !954)
!5359 = !DILocation(line: 2497, column: 53, scope: !954)
!5360 = !DILocation(line: 2497, column: 78, scope: !954)
!5361 = !DILocation(line: 2497, column: 52, scope: !954)
!5362 = !DILocation(line: 2497, column: 89, scope: !954)
!5363 = !DILocation(line: 2498, column: 26, scope: !954)
!5364 = !DILocation(line: 2498, column: 13, scope: !954)
!5365 = !DILocation(line: 2498, column: 19, scope: !954)
!5366 = !DILocation(line: 2498, column: 24, scope: !954)
!5367 = !DILocation(line: 2499, column: 9, scope: !955)
!5368 = !DILocation(line: 2499, column: 9, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !955, file: !408, discriminator: 1)
!5370 = !DILocation(line: 2502, column: 58, scope: !944)
!5371 = !DILocation(line: 2502, column: 5, scope: !944)
!5372 = !DILocation(line: 2503, column: 1, scope: !944)
!5373 = !DILocation(line: 2387, column: 45, scope: !962)
!5374 = !DILocation(line: 2387, column: 61, scope: !962)
!5375 = !DILocation(line: 2388, column: 36, scope: !962)
!5376 = !DILocation(line: 2390, column: 5, scope: !962)
!5377 = !DILocation(line: 2390, column: 15, scope: !962)
!5378 = !DILocation(line: 2391, column: 5, scope: !962)
!5379 = !DILocation(line: 2391, column: 15, scope: !962)
!5380 = !DILocation(line: 2392, column: 5, scope: !962)
!5381 = !DILocation(line: 2392, column: 23, scope: !962)
!5382 = !DILocation(line: 2392, column: 68, scope: !962)
!5383 = !DILocation(line: 2392, column: 50, scope: !962)
!5384 = !DILocation(line: 2392, column: 29, scope: !962)
!5385 = !DILocation(line: 2394, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2394, column: 9)
!5387 = !DILocation(line: 2394, column: 15, scope: !5386)
!5388 = !DILocation(line: 2394, column: 9, scope: !962)
!5389 = !DILocation(line: 2395, column: 13, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !408, line: 2395, column: 13)
!5391 = distinct !DILexicalBlock(scope: !5386, file: !408, line: 2394, column: 21)
!5392 = !DILocation(line: 2395, column: 19, scope: !5390)
!5393 = !DILocation(line: 2395, column: 27, scope: !5390)
!5394 = !DILocation(line: 2395, column: 33, scope: !5390)
!5395 = !DILocation(line: 2395, column: 24, scope: !5390)
!5396 = !DILocation(line: 2395, column: 13, scope: !5391)
!5397 = !DILocation(line: 2396, column: 46, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !408, line: 2396, column: 17)
!5399 = distinct !DILexicalBlock(scope: !5390, file: !408, line: 2395, column: 39)
!5400 = !DILocation(line: 2396, column: 52, scope: !5398)
!5401 = !DILocation(line: 2396, column: 58, scope: !5398)
!5402 = !DILocation(line: 2396, column: 64, scope: !5398)
!5403 = !DILocation(line: 2396, column: 17, scope: !5398)
!5404 = !DILocation(line: 2396, column: 17, scope: !5399)
!5405 = !DILocation(line: 2397, column: 17, scope: !5398)
!5406 = !DILocation(line: 2398, column: 9, scope: !5399)
!5407 = !DILocation(line: 2400, column: 46, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !408, line: 2400, column: 17)
!5409 = distinct !DILexicalBlock(scope: !5390, file: !408, line: 2399, column: 14)
!5410 = !DILocation(line: 2400, column: 52, scope: !5408)
!5411 = !DILocation(line: 2400, column: 58, scope: !5408)
!5412 = !DILocation(line: 2400, column: 64, scope: !5408)
!5413 = !DILocation(line: 2400, column: 17, scope: !5408)
!5414 = !DILocation(line: 2400, column: 17, scope: !5409)
!5415 = !DILocation(line: 2401, column: 17, scope: !5408)
!5416 = !DILocation(line: 2403, column: 9, scope: !5391)
!5417 = !DILocation(line: 2403, column: 15, scope: !5391)
!5418 = !DILocation(line: 2403, column: 20, scope: !5391)
!5419 = !DILocation(line: 2404, column: 5, scope: !5391)
!5420 = !DILocation(line: 2406, column: 9, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2406, column: 9)
!5422 = !DILocation(line: 2406, column: 15, scope: !5421)
!5423 = !DILocation(line: 2406, column: 31, scope: !5421)
!5424 = !DILocation(line: 2406, column: 34, scope: !5425)
!5425 = !DILexicalBlockFile(scope: !5421, file: !408, discriminator: 1)
!5426 = !DILocation(line: 2406, column: 40, scope: !5421)
!5427 = !DILocation(line: 2406, column: 56, scope: !5421)
!5428 = !DILocation(line: 2406, column: 9, scope: !962)
!5429 = !DILocation(line: 2407, column: 38, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5421, file: !408, line: 2406, column: 78)
!5431 = !DILocation(line: 2407, column: 44, scope: !5430)
!5432 = !DILocation(line: 2407, column: 67, scope: !5430)
!5433 = !DILocation(line: 2407, column: 72, scope: !5430)
!5434 = !DILocation(line: 2407, column: 16, scope: !5430)
!5435 = !DILocation(line: 2407, column: 14, scope: !5430)
!5436 = !DILocation(line: 2408, column: 5, scope: !5430)
!5437 = !DILocation(line: 2409, column: 35, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5421, file: !408, line: 2408, column: 12)
!5439 = !DILocation(line: 2409, column: 40, scope: !5438)
!5440 = !DILocation(line: 2409, column: 16, scope: !5438)
!5441 = !DILocation(line: 2409, column: 14, scope: !5438)
!5442 = !DILocation(line: 2411, column: 10, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2411, column: 9)
!5444 = !DILocation(line: 2411, column: 9, scope: !962)
!5445 = !DILocation(line: 2412, column: 9, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5443, file: !408, line: 2411, column: 16)
!5447 = !DILocation(line: 2415, column: 12, scope: !962)
!5448 = !DILocation(line: 2415, column: 18, scope: !962)
!5449 = !DILocation(line: 2415, column: 10, scope: !962)
!5450 = !DILocation(line: 2417, column: 9, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2417, column: 9)
!5452 = !DILocation(line: 2417, column: 14, scope: !5451)
!5453 = !DILocation(line: 2417, column: 9, scope: !962)
!5454 = !DILocation(line: 2418, column: 40, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !408, line: 2418, column: 13)
!5456 = distinct !DILexicalBlock(scope: !5451, file: !408, line: 2417, column: 36)
!5457 = !DILocation(line: 2418, column: 46, scope: !5455)
!5458 = !DILocation(line: 2418, column: 13, scope: !5455)
!5459 = !DILocation(line: 2418, column: 52, scope: !5455)
!5460 = !DILocation(line: 2418, column: 13, scope: !5456)
!5461 = !DILocation(line: 2419, column: 13, scope: !5455)
!5462 = !DILocation(line: 2420, column: 5, scope: !5456)
!5463 = !DILocation(line: 2421, column: 13, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !408, line: 2421, column: 13)
!5465 = distinct !DILexicalBlock(scope: !5451, file: !408, line: 2420, column: 12)
!5466 = !DILocation(line: 2421, column: 19, scope: !5464)
!5467 = !DILocation(line: 2421, column: 13, scope: !5465)
!5468 = !DILocation(line: 2423, column: 17, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5464, file: !408, line: 2421, column: 25)
!5470 = !DILocation(line: 2423, column: 21, scope: !5469)
!5471 = !DILocation(line: 2422, column: 13, scope: !5469)
!5472 = !DILocation(line: 2426, column: 13, scope: !5469)
!5473 = !DILocation(line: 2428, column: 25, scope: !5465)
!5474 = !DILocation(line: 2428, column: 33, scope: !5465)
!5475 = !DILocation(line: 2428, column: 42, scope: !5465)
!5476 = !DILocation(line: 2429, column: 22, scope: !5465)
!5477 = !DILocation(line: 2429, column: 9, scope: !5465)
!5478 = !DILocation(line: 2429, column: 15, scope: !5465)
!5479 = !DILocation(line: 2429, column: 20, scope: !5465)
!5480 = !DILocation(line: 2432, column: 9, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !962, file: !408, line: 2432, column: 9)
!5482 = !DILocation(line: 2432, column: 15, scope: !5481)
!5483 = !DILocation(line: 2432, column: 40, scope: !5481)
!5484 = !DILocation(line: 2432, column: 46, scope: !5481)
!5485 = !DILocation(line: 2432, column: 25, scope: !5481)
!5486 = !DILocation(line: 2432, column: 55, scope: !5481)
!5487 = !DILocation(line: 2432, column: 21, scope: !5481)
!5488 = !DILocation(line: 2432, column: 9, scope: !962)
!5489 = !DILocation(line: 2433, column: 28, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !408, line: 2433, column: 13)
!5491 = distinct !DILexicalBlock(scope: !5481, file: !408, line: 2432, column: 65)
!5492 = !DILocation(line: 2433, column: 34, scope: !5490)
!5493 = !DILocation(line: 2433, column: 41, scope: !5490)
!5494 = !DILocation(line: 2433, column: 47, scope: !5490)
!5495 = !DILocation(line: 2433, column: 54, scope: !5490)
!5496 = !DILocation(line: 2433, column: 13, scope: !5490)
!5497 = !DILocation(line: 2433, column: 60, scope: !5490)
!5498 = !DILocation(line: 2433, column: 13, scope: !5491)
!5499 = !DILocation(line: 2434, column: 13, scope: !5490)
!5500 = !DILocation(line: 2435, column: 25, scope: !5491)
!5501 = !DILocation(line: 2435, column: 33, scope: !5491)
!5502 = !DILocation(line: 2435, column: 42, scope: !5491)
!5503 = !DILocation(line: 2436, column: 5, scope: !5491)
!5504 = !DILocation(line: 2437, column: 27, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !408, line: 2437, column: 13)
!5506 = distinct !DILexicalBlock(scope: !5481, file: !408, line: 2436, column: 12)
!5507 = !DILocation(line: 2437, column: 33, scope: !5505)
!5508 = !DILocation(line: 2437, column: 40, scope: !5505)
!5509 = !DILocation(line: 2437, column: 13, scope: !5505)
!5510 = !DILocation(line: 2437, column: 46, scope: !5505)
!5511 = !DILocation(line: 2437, column: 13, scope: !5506)
!5512 = !DILocation(line: 2438, column: 13, scope: !5505)
!5513 = !DILocation(line: 2440, column: 5, scope: !962)
!5514 = !DILocation(line: 2440, column: 11, scope: !962)
!5515 = !DILocation(line: 2440, column: 16, scope: !962)
!5516 = !DILocation(line: 2442, column: 5, scope: !962)
!5517 = !DILocation(line: 2442, column: 10, scope: !5518)
!5518 = !DILexicalBlockFile(scope: !973, file: !408, discriminator: 1)
!5519 = !DILocation(line: 2442, column: 20, scope: !973)
!5520 = !DILocation(line: 2442, column: 50, scope: !973)
!5521 = !DILocation(line: 2442, column: 65, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !973, file: !408, line: 2442, column: 62)
!5523 = !DILocation(line: 2442, column: 82, scope: !5522)
!5524 = !DILocation(line: 2442, column: 62, scope: !5522)
!5525 = !DILocation(line: 2442, column: 92, scope: !5522)
!5526 = !DILocation(line: 2442, column: 62, scope: !973)
!5527 = !DILocation(line: 2442, column: 62, scope: !5528)
!5528 = !DILexicalBlockFile(scope: !973, file: !408, discriminator: 2)
!5529 = !DILocation(line: 2442, column: 123, scope: !5530)
!5530 = !DILexicalBlockFile(scope: !5522, file: !408, discriminator: 3)
!5531 = !DILocation(line: 2442, column: 141, scope: !5522)
!5532 = !DILocation(line: 2442, column: 151, scope: !5522)
!5533 = !DILocation(line: 2442, column: 176, scope: !5522)
!5534 = !DILocation(line: 2442, column: 107, scope: !5522)
!5535 = !DILocation(line: 2442, column: 195, scope: !5536)
!5536 = !DILexicalBlockFile(scope: !962, file: !408, discriminator: 4)
!5537 = !DILocation(line: 2442, column: 195, scope: !973)
!5538 = !DILocation(line: 2442, column: 195, scope: !5539)
!5539 = !DILexicalBlockFile(scope: !973, file: !408, discriminator: 5)
!5540 = !DILocation(line: 2443, column: 21, scope: !962)
!5541 = !DILocation(line: 2443, column: 29, scope: !962)
!5542 = !DILocation(line: 2443, column: 38, scope: !962)
!5543 = !DILocation(line: 2444, column: 18, scope: !962)
!5544 = !DILocation(line: 2444, column: 5, scope: !962)
!5545 = !DILocation(line: 2444, column: 11, scope: !962)
!5546 = !DILocation(line: 2444, column: 16, scope: !962)
!5547 = !DILocation(line: 2446, column: 5, scope: !962)
!5548 = !DILocation(line: 2446, column: 10, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !975, file: !408, discriminator: 1)
!5550 = !DILocation(line: 2446, column: 20, scope: !975)
!5551 = !DILocation(line: 2446, column: 50, scope: !975)
!5552 = !DILocation(line: 2446, column: 56, scope: !975)
!5553 = !DILocation(line: 2446, column: 71, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !975, file: !408, line: 2446, column: 68)
!5555 = !DILocation(line: 2446, column: 88, scope: !5554)
!5556 = !DILocation(line: 2446, column: 68, scope: !5554)
!5557 = !DILocation(line: 2446, column: 98, scope: !5554)
!5558 = !DILocation(line: 2446, column: 68, scope: !975)
!5559 = !DILocation(line: 2446, column: 68, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !975, file: !408, discriminator: 2)
!5561 = !DILocation(line: 2446, column: 129, scope: !5562)
!5562 = !DILexicalBlockFile(scope: !5554, file: !408, discriminator: 3)
!5563 = !DILocation(line: 2446, column: 147, scope: !5554)
!5564 = !DILocation(line: 2446, column: 157, scope: !5554)
!5565 = !DILocation(line: 2446, column: 182, scope: !5554)
!5566 = !DILocation(line: 2446, column: 113, scope: !5554)
!5567 = !DILocation(line: 2446, column: 201, scope: !5536)
!5568 = !DILocation(line: 2446, column: 201, scope: !975)
!5569 = !DILocation(line: 2446, column: 201, scope: !5570)
!5570 = !DILexicalBlockFile(scope: !975, file: !408, discriminator: 5)
!5571 = !DILocation(line: 2447, column: 21, scope: !962)
!5572 = !DILocation(line: 2447, column: 29, scope: !962)
!5573 = !DILocation(line: 2447, column: 38, scope: !962)
!5574 = !DILocation(line: 2448, column: 18, scope: !962)
!5575 = !DILocation(line: 2448, column: 5, scope: !962)
!5576 = !DILocation(line: 2448, column: 11, scope: !962)
!5577 = !DILocation(line: 2448, column: 16, scope: !962)
!5578 = !DILocation(line: 2450, column: 9, scope: !978)
!5579 = !DILocation(line: 2450, column: 15, scope: !978)
!5580 = !DILocation(line: 2450, column: 9, scope: !962)
!5581 = !DILocation(line: 2451, column: 9, scope: !977)
!5582 = !DILocation(line: 2451, column: 19, scope: !977)
!5583 = !DILocation(line: 2452, column: 9, scope: !977)
!5584 = !DILocation(line: 2452, column: 19, scope: !977)
!5585 = !DILocation(line: 2452, column: 28, scope: !977)
!5586 = !DILocation(line: 2452, column: 34, scope: !977)
!5587 = !DILocation(line: 2453, column: 31, scope: !977)
!5588 = !DILocation(line: 2453, column: 39, scope: !977)
!5589 = !DILocation(line: 2453, column: 15, scope: !977)
!5590 = !DILocation(line: 2453, column: 13, scope: !977)
!5591 = !DILocation(line: 2454, column: 13, scope: !983)
!5592 = !DILocation(line: 2454, column: 13, scope: !977)
!5593 = !DILocation(line: 2455, column: 27, scope: !982)
!5594 = !DILocation(line: 2455, column: 33, scope: !982)
!5595 = !DILocation(line: 2455, column: 41, scope: !982)
!5596 = !DILocation(line: 2455, column: 13, scope: !982)
!5597 = !DILocation(line: 2456, column: 13, scope: !982)
!5598 = !DILocation(line: 2456, column: 18, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !981, file: !408, discriminator: 1)
!5600 = !DILocation(line: 2456, column: 28, scope: !981)
!5601 = !DILocation(line: 2456, column: 58, scope: !981)
!5602 = !DILocation(line: 2456, column: 72, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !981, file: !408, line: 2456, column: 69)
!5604 = !DILocation(line: 2456, column: 89, scope: !5603)
!5605 = !DILocation(line: 2456, column: 69, scope: !5603)
!5606 = !DILocation(line: 2456, column: 99, scope: !5603)
!5607 = !DILocation(line: 2456, column: 69, scope: !981)
!5608 = !DILocation(line: 2456, column: 69, scope: !5609)
!5609 = !DILexicalBlockFile(scope: !981, file: !408, discriminator: 2)
!5610 = !DILocation(line: 2456, column: 130, scope: !5611)
!5611 = !DILexicalBlockFile(scope: !5603, file: !408, discriminator: 3)
!5612 = !DILocation(line: 2456, column: 148, scope: !5603)
!5613 = !DILocation(line: 2456, column: 158, scope: !5603)
!5614 = !DILocation(line: 2456, column: 183, scope: !5603)
!5615 = !DILocation(line: 2456, column: 114, scope: !5603)
!5616 = !DILocation(line: 2456, column: 202, scope: !5617)
!5617 = !DILexicalBlockFile(scope: !982, file: !408, discriminator: 4)
!5618 = !DILocation(line: 2456, column: 202, scope: !981)
!5619 = !DILocation(line: 2456, column: 202, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !981, file: !408, discriminator: 5)
!5621 = !DILocation(line: 2457, column: 9, scope: !982)
!5622 = !DILocation(line: 2458, column: 13, scope: !983)
!5623 = !DILocation(line: 2459, column: 5, scope: !978)
!5624 = !DILocation(line: 2459, column: 5, scope: !977)
!5625 = !DILocation(line: 2461, column: 12, scope: !962)
!5626 = !DILocation(line: 2461, column: 5, scope: !962)
!5627 = !DILocation(line: 2464, column: 5, scope: !962)
!5628 = !DILocation(line: 2464, column: 10, scope: !5629)
!5629 = !DILexicalBlockFile(scope: !985, file: !408, discriminator: 1)
!5630 = !DILocation(line: 2464, column: 20, scope: !985)
!5631 = !DILocation(line: 2464, column: 50, scope: !985)
!5632 = !DILocation(line: 2464, column: 65, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !985, file: !408, line: 2464, column: 62)
!5634 = !DILocation(line: 2464, column: 82, scope: !5633)
!5635 = !DILocation(line: 2464, column: 62, scope: !5633)
!5636 = !DILocation(line: 2464, column: 92, scope: !5633)
!5637 = !DILocation(line: 2464, column: 62, scope: !985)
!5638 = !DILocation(line: 2464, column: 62, scope: !5639)
!5639 = !DILexicalBlockFile(scope: !985, file: !408, discriminator: 2)
!5640 = !DILocation(line: 2464, column: 123, scope: !5641)
!5641 = !DILexicalBlockFile(scope: !5633, file: !408, discriminator: 3)
!5642 = !DILocation(line: 2464, column: 141, scope: !5633)
!5643 = !DILocation(line: 2464, column: 151, scope: !5633)
!5644 = !DILocation(line: 2464, column: 176, scope: !5633)
!5645 = !DILocation(line: 2464, column: 107, scope: !5633)
!5646 = !DILocation(line: 2464, column: 195, scope: !5536)
!5647 = !DILocation(line: 2464, column: 195, scope: !985)
!5648 = !DILocation(line: 2464, column: 195, scope: !5649)
!5649 = !DILexicalBlockFile(scope: !985, file: !408, discriminator: 5)
!5650 = !DILocation(line: 2465, column: 5, scope: !962)
!5651 = !DILocation(line: 2466, column: 1, scope: !962)
!5652 = !DILocation(line: 2350, column: 40, scope: !986)
!5653 = !DILocation(line: 2350, column: 59, scope: !986)
!5654 = !DILocation(line: 2354, column: 9, scope: !986)
!5655 = !DILocation(line: 2354, column: 18, scope: !986)
!5656 = !DILocation(line: 2354, column: 44, scope: !986)
!5657 = !DILocation(line: 2354, column: 26, scope: !986)
!5658 = !DILocation(line: 2354, column: 54, scope: !986)
!5659 = !DILocation(line: 2353, column: 12, scope: !986)
!5660 = !DILocation(line: 2353, column: 5, scope: !986)
!5661 = !DILocation(line: 2358, column: 40, scope: !1015)
!5662 = !DILocation(line: 2358, column: 59, scope: !1015)
!5663 = !DILocation(line: 2362, column: 9, scope: !1015)
!5664 = !DILocation(line: 2362, column: 18, scope: !1015)
!5665 = !DILocation(line: 2362, column: 44, scope: !1015)
!5666 = !DILocation(line: 2362, column: 26, scope: !1015)
!5667 = !DILocation(line: 2362, column: 54, scope: !1015)
!5668 = !DILocation(line: 2361, column: 12, scope: !1015)
!5669 = !DILocation(line: 2361, column: 5, scope: !1015)
!5670 = !DILocation(line: 2366, column: 38, scope: !1019)
!5671 = !DILocation(line: 2366, column: 57, scope: !1019)
!5672 = !DILocation(line: 2369, column: 24, scope: !1025)
!5673 = !DILocation(line: 2369, column: 35, scope: !1025)
!5674 = !DILocation(line: 2369, column: 44, scope: !1025)
!5675 = !DILocation(line: 2369, column: 9, scope: !1019)
!5676 = !DILocation(line: 2370, column: 9, scope: !1024)
!5677 = !DILocation(line: 2370, column: 24, scope: !1024)
!5678 = !DILocation(line: 2370, column: 49, scope: !1024)
!5679 = !DILocation(line: 2370, column: 31, scope: !1024)
!5680 = !DILocation(line: 2371, column: 39, scope: !1024)
!5681 = !DILocation(line: 2371, column: 45, scope: !1024)
!5682 = !DILocation(line: 2371, column: 16, scope: !1024)
!5683 = !DILocation(line: 2371, column: 9, scope: !1024)
!5684 = !DILocation(line: 2372, column: 5, scope: !1025)
!5685 = !DILocation(line: 2374, column: 9, scope: !1027)
!5686 = !DILocation(line: 2374, column: 19, scope: !1027)
!5687 = !DILocation(line: 2375, column: 38, scope: !1027)
!5688 = !DILocation(line: 2375, column: 66, scope: !1027)
!5689 = !DILocation(line: 2375, column: 15, scope: !1027)
!5690 = !DILocation(line: 2375, column: 13, scope: !1027)
!5691 = !DILocation(line: 2376, column: 13, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !1027, file: !408, line: 2376, column: 13)
!5693 = !DILocation(line: 2376, column: 17, scope: !5692)
!5694 = !DILocation(line: 2376, column: 13, scope: !1027)
!5695 = !DILocation(line: 2377, column: 13, scope: !5692)
!5696 = !DILocation(line: 2378, column: 9, scope: !1027)
!5697 = !DILocation(line: 2378, column: 14, scope: !5698)
!5698 = !DILexicalBlockFile(scope: !1029, file: !408, discriminator: 1)
!5699 = !DILocation(line: 2378, column: 24, scope: !1029)
!5700 = !DILocation(line: 2378, column: 54, scope: !1029)
!5701 = !DILocation(line: 2378, column: 68, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !1029, file: !408, line: 2378, column: 65)
!5703 = !DILocation(line: 2378, column: 85, scope: !5702)
!5704 = !DILocation(line: 2378, column: 65, scope: !5702)
!5705 = !DILocation(line: 2378, column: 95, scope: !5702)
!5706 = !DILocation(line: 2378, column: 65, scope: !1029)
!5707 = !DILocation(line: 2378, column: 65, scope: !5708)
!5708 = !DILexicalBlockFile(scope: !1029, file: !408, discriminator: 2)
!5709 = !DILocation(line: 2378, column: 126, scope: !5710)
!5710 = !DILexicalBlockFile(scope: !5702, file: !408, discriminator: 3)
!5711 = !DILocation(line: 2378, column: 144, scope: !5702)
!5712 = !DILocation(line: 2378, column: 154, scope: !5702)
!5713 = !DILocation(line: 2378, column: 179, scope: !5702)
!5714 = !DILocation(line: 2378, column: 110, scope: !5702)
!5715 = !DILocation(line: 2378, column: 198, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !1027, file: !408, discriminator: 4)
!5717 = !DILocation(line: 2378, column: 198, scope: !1029)
!5718 = !DILocation(line: 2378, column: 198, scope: !5719)
!5719 = !DILexicalBlockFile(scope: !1029, file: !408, discriminator: 5)
!5720 = !DILocation(line: 2379, column: 9, scope: !1027)
!5721 = !DILocation(line: 2380, column: 5, scope: !1025)
!5722 = !DILocation(line: 2381, column: 1, scope: !1019)
!5723 = !DILocation(line: 2329, column: 48, scope: !990)
!5724 = !DILocation(line: 2329, column: 67, scope: !990)
!5725 = !DILocation(line: 2330, column: 49, scope: !990)
!5726 = !DILocation(line: 2330, column: 71, scope: !990)
!5727 = !DILocation(line: 2332, column: 24, scope: !1009)
!5728 = !DILocation(line: 2332, column: 35, scope: !1009)
!5729 = !DILocation(line: 2332, column: 44, scope: !1009)
!5730 = !DILocation(line: 2332, column: 9, scope: !990)
!5731 = !DILocation(line: 2333, column: 9, scope: !1008)
!5732 = !DILocation(line: 2333, column: 14, scope: !5733)
!5733 = !DILexicalBlockFile(scope: !1007, file: !408, discriminator: 1)
!5734 = !DILocation(line: 2333, column: 24, scope: !1007)
!5735 = !DILocation(line: 2333, column: 85, scope: !1007)
!5736 = !DILocation(line: 2333, column: 84, scope: !1007)
!5737 = !DILocation(line: 2333, column: 68, scope: !1007)
!5738 = !DILocation(line: 2333, column: 91, scope: !1007)
!5739 = !DILocation(line: 2333, column: 55, scope: !1007)
!5740 = !DILocation(line: 2333, column: 122, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !1007, file: !408, line: 2333, column: 119)
!5742 = !DILocation(line: 2333, column: 139, scope: !5741)
!5743 = !DILocation(line: 2333, column: 119, scope: !5741)
!5744 = !DILocation(line: 2333, column: 149, scope: !5741)
!5745 = !DILocation(line: 2333, column: 119, scope: !1007)
!5746 = !DILocation(line: 2333, column: 119, scope: !5747)
!5747 = !DILexicalBlockFile(scope: !1007, file: !408, discriminator: 2)
!5748 = !DILocation(line: 2333, column: 180, scope: !5749)
!5749 = !DILexicalBlockFile(scope: !5741, file: !408, discriminator: 3)
!5750 = !DILocation(line: 2333, column: 198, scope: !5741)
!5751 = !DILocation(line: 2333, column: 208, scope: !5741)
!5752 = !DILocation(line: 2333, column: 233, scope: !5741)
!5753 = !DILocation(line: 2333, column: 164, scope: !5741)
!5754 = !DILocation(line: 2333, column: 252, scope: !5755)
!5755 = !DILexicalBlockFile(scope: !1008, file: !408, discriminator: 4)
!5756 = !DILocation(line: 2333, column: 252, scope: !1007)
!5757 = !DILocation(line: 2334, column: 73, scope: !1008)
!5758 = !DILocation(line: 2334, column: 57, scope: !1008)
!5759 = !DILocation(line: 2334, column: 79, scope: !1008)
!5760 = !DILocation(line: 2334, column: 44, scope: !1008)
!5761 = !DILocation(line: 2334, column: 27, scope: !1008)
!5762 = !DILocation(line: 2334, column: 119, scope: !1008)
!5763 = !DILocation(line: 2334, column: 127, scope: !1008)
!5764 = !DILocation(line: 2334, column: 136, scope: !1008)
!5765 = !DILocation(line: 2334, column: 103, scope: !1008)
!5766 = !DILocation(line: 2334, column: 101, scope: !1008)
!5767 = !DILocation(line: 2334, column: 18, scope: !1008)
!5768 = !DILocation(line: 2334, column: 17, scope: !1008)
!5769 = !DILocation(line: 2334, column: 10, scope: !1008)
!5770 = !DILocation(line: 2334, column: 15, scope: !1008)
!5771 = !DILocation(line: 2335, column: 9, scope: !1008)
!5772 = !DILocation(line: 2338, column: 9, scope: !1011)
!5773 = !DILocation(line: 2338, column: 19, scope: !1011)
!5774 = !DILocation(line: 2338, column: 38, scope: !1011)
!5775 = !DILocation(line: 2338, column: 28, scope: !1011)
!5776 = !DILocation(line: 2339, column: 9, scope: !1011)
!5777 = !DILocation(line: 2339, column: 13, scope: !1011)
!5778 = !DILocation(line: 2340, column: 13, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !1011, file: !408, line: 2340, column: 13)
!5780 = !DILocation(line: 2340, column: 20, scope: !5779)
!5781 = !DILocation(line: 2340, column: 13, scope: !1011)
!5782 = !DILocation(line: 2341, column: 13, scope: !5779)
!5783 = !DILocation(line: 2342, column: 33, scope: !1011)
!5784 = !DILocation(line: 2342, column: 42, scope: !1011)
!5785 = !DILocation(line: 2342, column: 48, scope: !1011)
!5786 = !DILocation(line: 2342, column: 13, scope: !1011)
!5787 = !DILocation(line: 2342, column: 11, scope: !1011)
!5788 = !DILocation(line: 2343, column: 9, scope: !1011)
!5789 = !DILocation(line: 2343, column: 14, scope: !5790)
!5790 = !DILexicalBlockFile(scope: !1014, file: !408, discriminator: 1)
!5791 = !DILocation(line: 2343, column: 24, scope: !1014)
!5792 = !DILocation(line: 2343, column: 54, scope: !1014)
!5793 = !DILocation(line: 2343, column: 71, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !1014, file: !408, line: 2343, column: 68)
!5795 = !DILocation(line: 2343, column: 88, scope: !5794)
!5796 = !DILocation(line: 2343, column: 68, scope: !5794)
!5797 = !DILocation(line: 2343, column: 98, scope: !5794)
!5798 = !DILocation(line: 2343, column: 68, scope: !1014)
!5799 = !DILocation(line: 2343, column: 68, scope: !5800)
!5800 = !DILexicalBlockFile(scope: !1014, file: !408, discriminator: 2)
!5801 = !DILocation(line: 2343, column: 129, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !5794, file: !408, discriminator: 3)
!5803 = !DILocation(line: 2343, column: 147, scope: !5794)
!5804 = !DILocation(line: 2343, column: 157, scope: !5794)
!5805 = !DILocation(line: 2343, column: 182, scope: !5794)
!5806 = !DILocation(line: 2343, column: 113, scope: !5794)
!5807 = !DILocation(line: 2343, column: 201, scope: !5808)
!5808 = !DILexicalBlockFile(scope: !1011, file: !408, discriminator: 4)
!5809 = !DILocation(line: 2343, column: 201, scope: !1014)
!5810 = !DILocation(line: 2343, column: 201, scope: !5811)
!5811 = !DILexicalBlockFile(scope: !1014, file: !408, discriminator: 5)
!5812 = !DILocation(line: 2344, column: 16, scope: !1011)
!5813 = !DILocation(line: 2344, column: 9, scope: !1011)
!5814 = !DILocation(line: 2345, column: 5, scope: !1009)
!5815 = !DILocation(line: 2346, column: 1, scope: !990)
!5816 = !DILocation(line: 2506, column: 43, scope: !1035)
!5817 = !DILocation(line: 2506, column: 59, scope: !1035)
!5818 = !DILocation(line: 2508, column: 5, scope: !1035)
!5819 = !DILocation(line: 2508, column: 15, scope: !1035)
!5820 = !DILocation(line: 2510, column: 9, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !1035, file: !408, line: 2510, column: 9)
!5822 = !DILocation(line: 2510, column: 15, scope: !5821)
!5823 = !DILocation(line: 2510, column: 9, scope: !1035)
!5824 = !DILocation(line: 2511, column: 13, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !408, line: 2511, column: 13)
!5826 = distinct !DILexicalBlock(scope: !5821, file: !408, line: 2510, column: 21)
!5827 = !DILocation(line: 2511, column: 19, scope: !5825)
!5828 = !DILocation(line: 2511, column: 27, scope: !5825)
!5829 = !DILocation(line: 2511, column: 33, scope: !5825)
!5830 = !DILocation(line: 2511, column: 24, scope: !5825)
!5831 = !DILocation(line: 2511, column: 13, scope: !5826)
!5832 = !DILocation(line: 2512, column: 46, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !408, line: 2512, column: 17)
!5834 = distinct !DILexicalBlock(scope: !5825, file: !408, line: 2511, column: 39)
!5835 = !DILocation(line: 2512, column: 52, scope: !5833)
!5836 = !DILocation(line: 2512, column: 58, scope: !5833)
!5837 = !DILocation(line: 2512, column: 64, scope: !5833)
!5838 = !DILocation(line: 2512, column: 17, scope: !5833)
!5839 = !DILocation(line: 2512, column: 17, scope: !5834)
!5840 = !DILocation(line: 2513, column: 17, scope: !5833)
!5841 = !DILocation(line: 2514, column: 9, scope: !5834)
!5842 = !DILocation(line: 2515, column: 46, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !408, line: 2515, column: 17)
!5844 = distinct !DILexicalBlock(scope: !5825, file: !408, line: 2514, column: 16)
!5845 = !DILocation(line: 2515, column: 52, scope: !5843)
!5846 = !DILocation(line: 2515, column: 58, scope: !5843)
!5847 = !DILocation(line: 2515, column: 64, scope: !5843)
!5848 = !DILocation(line: 2515, column: 17, scope: !5843)
!5849 = !DILocation(line: 2515, column: 17, scope: !5844)
!5850 = !DILocation(line: 2516, column: 17, scope: !5843)
!5851 = !DILocation(line: 2518, column: 9, scope: !5826)
!5852 = !DILocation(line: 2518, column: 15, scope: !5826)
!5853 = !DILocation(line: 2518, column: 20, scope: !5826)
!5854 = !DILocation(line: 2519, column: 5, scope: !5826)
!5855 = !DILocation(line: 2521, column: 9, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !1035, file: !408, line: 2521, column: 9)
!5857 = !DILocation(line: 2521, column: 15, scope: !5856)
!5858 = !DILocation(line: 2521, column: 21, scope: !5856)
!5859 = !DILocation(line: 2521, column: 9, scope: !1035)
!5860 = !DILocation(line: 2523, column: 13, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5856, file: !408, line: 2521, column: 27)
!5862 = !DILocation(line: 2522, column: 9, scope: !5861)
!5863 = !DILocation(line: 2526, column: 9, scope: !5861)
!5864 = !DILocation(line: 2529, column: 5, scope: !1035)
!5865 = !DILocation(line: 2529, column: 11, scope: !1035)
!5866 = !DILocation(line: 2529, column: 16, scope: !1035)
!5867 = !DILocation(line: 2531, column: 54, scope: !1035)
!5868 = !DILocation(line: 2531, column: 60, scope: !1035)
!5869 = !DILocation(line: 2531, column: 31, scope: !1035)
!5870 = !DILocation(line: 2531, column: 37, scope: !1035)
!5871 = !DILocation(line: 2531, column: 14, scope: !1035)
!5872 = !DILocation(line: 2531, column: 46, scope: !1035)
!5873 = !DILocation(line: 2531, column: 13, scope: !1035)
!5874 = !DILocation(line: 2531, column: 10, scope: !1035)
!5875 = !DILocation(line: 2532, column: 21, scope: !1035)
!5876 = !DILocation(line: 2532, column: 29, scope: !1035)
!5877 = !DILocation(line: 2532, column: 38, scope: !1035)
!5878 = !DILocation(line: 2534, column: 5, scope: !1035)
!5879 = !DILocation(line: 2534, column: 10, scope: !5880)
!5880 = !DILexicalBlockFile(scope: !1041, file: !408, discriminator: 1)
!5881 = !DILocation(line: 2534, column: 20, scope: !1041)
!5882 = !DILocation(line: 2534, column: 50, scope: !1041)
!5883 = !DILocation(line: 2534, column: 56, scope: !1041)
!5884 = !DILocation(line: 2534, column: 71, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !1041, file: !408, line: 2534, column: 68)
!5886 = !DILocation(line: 2534, column: 88, scope: !5885)
!5887 = !DILocation(line: 2534, column: 68, scope: !5885)
!5888 = !DILocation(line: 2534, column: 98, scope: !5885)
!5889 = !DILocation(line: 2534, column: 68, scope: !1041)
!5890 = !DILocation(line: 2534, column: 68, scope: !5891)
!5891 = !DILexicalBlockFile(scope: !1041, file: !408, discriminator: 2)
!5892 = !DILocation(line: 2534, column: 129, scope: !5893)
!5893 = !DILexicalBlockFile(scope: !5885, file: !408, discriminator: 3)
!5894 = !DILocation(line: 2534, column: 147, scope: !5885)
!5895 = !DILocation(line: 2534, column: 157, scope: !5885)
!5896 = !DILocation(line: 2534, column: 182, scope: !5885)
!5897 = !DILocation(line: 2534, column: 113, scope: !5885)
!5898 = !DILocation(line: 2534, column: 201, scope: !5899)
!5899 = !DILexicalBlockFile(scope: !1035, file: !408, discriminator: 4)
!5900 = !DILocation(line: 2534, column: 201, scope: !1041)
!5901 = !DILocation(line: 2534, column: 201, scope: !5902)
!5902 = !DILexicalBlockFile(scope: !1041, file: !408, discriminator: 5)
!5903 = !DILocation(line: 2536, column: 18, scope: !1035)
!5904 = !DILocation(line: 2536, column: 24, scope: !1035)
!5905 = !DILocation(line: 2536, column: 5, scope: !1035)
!5906 = !DILocation(line: 2536, column: 11, scope: !1035)
!5907 = !DILocation(line: 2536, column: 16, scope: !1035)
!5908 = !DILocation(line: 2537, column: 18, scope: !1035)
!5909 = !DILocation(line: 2537, column: 5, scope: !1035)
!5910 = !DILocation(line: 2537, column: 11, scope: !1035)
!5911 = !DILocation(line: 2537, column: 16, scope: !1035)
!5912 = !DILocation(line: 2539, column: 9, scope: !1044)
!5913 = !DILocation(line: 2539, column: 15, scope: !1044)
!5914 = !DILocation(line: 2539, column: 9, scope: !1035)
!5915 = !DILocation(line: 2540, column: 9, scope: !1043)
!5916 = !DILocation(line: 2540, column: 19, scope: !1043)
!5917 = !DILocation(line: 2541, column: 9, scope: !1043)
!5918 = !DILocation(line: 2541, column: 19, scope: !1043)
!5919 = !DILocation(line: 2541, column: 28, scope: !1043)
!5920 = !DILocation(line: 2541, column: 34, scope: !1043)
!5921 = !DILocation(line: 2542, column: 9, scope: !1043)
!5922 = !DILocation(line: 2542, column: 19, scope: !1043)
!5923 = !DILocation(line: 2542, column: 38, scope: !1043)
!5924 = !DILocation(line: 2542, column: 44, scope: !1043)
!5925 = !DILocation(line: 2543, column: 31, scope: !1043)
!5926 = !DILocation(line: 2543, column: 39, scope: !1043)
!5927 = !DILocation(line: 2543, column: 15, scope: !1043)
!5928 = !DILocation(line: 2543, column: 13, scope: !1043)
!5929 = !DILocation(line: 2544, column: 13, scope: !1050)
!5930 = !DILocation(line: 2544, column: 13, scope: !1043)
!5931 = !DILocation(line: 2545, column: 27, scope: !1049)
!5932 = !DILocation(line: 2545, column: 33, scope: !1049)
!5933 = !DILocation(line: 2545, column: 41, scope: !1049)
!5934 = !DILocation(line: 2545, column: 13, scope: !1049)
!5935 = !DILocation(line: 2546, column: 13, scope: !1049)
!5936 = !DILocation(line: 2546, column: 18, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !1048, file: !408, discriminator: 1)
!5938 = !DILocation(line: 2546, column: 28, scope: !1048)
!5939 = !DILocation(line: 2546, column: 58, scope: !1048)
!5940 = !DILocation(line: 2546, column: 72, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !1048, file: !408, line: 2546, column: 69)
!5942 = !DILocation(line: 2546, column: 89, scope: !5941)
!5943 = !DILocation(line: 2546, column: 69, scope: !5941)
!5944 = !DILocation(line: 2546, column: 99, scope: !5941)
!5945 = !DILocation(line: 2546, column: 69, scope: !1048)
!5946 = !DILocation(line: 2546, column: 69, scope: !5947)
!5947 = !DILexicalBlockFile(scope: !1048, file: !408, discriminator: 2)
!5948 = !DILocation(line: 2546, column: 130, scope: !5949)
!5949 = !DILexicalBlockFile(scope: !5941, file: !408, discriminator: 3)
!5950 = !DILocation(line: 2546, column: 148, scope: !5941)
!5951 = !DILocation(line: 2546, column: 158, scope: !5941)
!5952 = !DILocation(line: 2546, column: 183, scope: !5941)
!5953 = !DILocation(line: 2546, column: 114, scope: !5941)
!5954 = !DILocation(line: 2546, column: 202, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !1049, file: !408, discriminator: 4)
!5956 = !DILocation(line: 2546, column: 202, scope: !1048)
!5957 = !DILocation(line: 2546, column: 202, scope: !5958)
!5958 = !DILexicalBlockFile(scope: !1048, file: !408, discriminator: 5)
!5959 = !DILocation(line: 2547, column: 9, scope: !1049)
!5960 = !DILocation(line: 2548, column: 13, scope: !1050)
!5961 = !DILocation(line: 2549, column: 5, scope: !1044)
!5962 = !DILocation(line: 2549, column: 5, scope: !1043)
!5963 = !DILocation(line: 2551, column: 21, scope: !1035)
!5964 = !DILocation(line: 2551, column: 27, scope: !1035)
!5965 = !DILocation(line: 2551, column: 35, scope: !1035)
!5966 = !DILocation(line: 2551, column: 44, scope: !1035)
!5967 = !DILocation(line: 2552, column: 24, scope: !1035)
!5968 = !DILocation(line: 2552, column: 30, scope: !1035)
!5969 = !DILocation(line: 2552, column: 5, scope: !1035)
!5970 = !DILocation(line: 2553, column: 1, scope: !1035)
!5971 = !DILocation(line: 2622, column: 37, scope: !1055)
!5972 = !DILocation(line: 2624, column: 5, scope: !1055)
!5973 = !DILocation(line: 2624, column: 15, scope: !1055)
!5974 = !DILocation(line: 2628, column: 9, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !1055, file: !408, line: 2628, column: 9)
!5976 = !DILocation(line: 2628, column: 15, scope: !5975)
!5977 = !DILocation(line: 2628, column: 9, scope: !1055)
!5978 = !DILocation(line: 2629, column: 15, scope: !5975)
!5979 = !DILocation(line: 2629, column: 21, scope: !5975)
!5980 = !DILocation(line: 2629, column: 13, scope: !5975)
!5981 = !DILocation(line: 2629, column: 9, scope: !5975)
!5982 = !DILocation(line: 2631, column: 13, scope: !5975)
!5983 = !DILocation(line: 2633, column: 21, scope: !1055)
!5984 = !DILocation(line: 2633, column: 28, scope: !1055)
!5985 = !DILocation(line: 2633, column: 37, scope: !1055)
!5986 = !DILocation(line: 2634, column: 12, scope: !1055)
!5987 = !DILocation(line: 2635, column: 1, scope: !1055)
!5988 = !DILocation(line: 2634, column: 5, scope: !1055)
!5989 = !DILocation(line: 640, column: 32, scope: !1096)
!5990 = !DILocation(line: 642, column: 25, scope: !1096)
!5991 = !DILocation(line: 642, column: 5, scope: !1096)
!5992 = !DILocation(line: 644, column: 9, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !1096, file: !408, line: 644, column: 9)
!5994 = !DILocation(line: 644, column: 15, scope: !5993)
!5995 = !DILocation(line: 644, column: 27, scope: !5993)
!5996 = !DILocation(line: 644, column: 9, scope: !1096)
!5997 = !DILocation(line: 645, column: 45, scope: !5993)
!5998 = !DILocation(line: 645, column: 32, scope: !5993)
!5999 = !DILocation(line: 645, column: 9, scope: !5993)
!6000 = !DILocation(line: 649, column: 22, scope: !1096)
!6001 = !DILocation(line: 649, column: 5, scope: !1096)
!6002 = !DILocation(line: 652, column: 19, scope: !1096)
!6003 = !DILocation(line: 652, column: 7, scope: !1096)
!6004 = !DILocation(line: 652, column: 27, scope: !1096)
!6005 = !DILocation(line: 652, column: 37, scope: !1096)
!6006 = !DILocation(line: 652, column: 57, scope: !1096)
!6007 = !DILocation(line: 652, column: 45, scope: !1096)
!6008 = !DILocation(line: 652, column: 5, scope: !1096)
!6009 = !DILocation(line: 653, column: 1, scope: !1096)
!6010 = !DILocation(line: 1447, column: 29, scope: !1101)
!6011 = !DILocation(line: 1449, column: 9, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !1101, file: !408, line: 1449, column: 9)
!6013 = !DILocation(line: 1449, column: 15, scope: !6012)
!6014 = !DILocation(line: 1449, column: 9, scope: !1101)
!6015 = !DILocation(line: 1450, column: 59, scope: !6012)
!6016 = !DILocation(line: 1450, column: 65, scope: !6012)
!6017 = !DILocation(line: 1450, column: 70, scope: !6012)
!6018 = !DILocation(line: 1450, column: 16, scope: !6012)
!6019 = !DILocation(line: 1450, column: 9, scope: !6012)
!6020 = !DILocation(line: 1452, column: 56, scope: !6012)
!6021 = !DILocation(line: 1452, column: 16, scope: !6012)
!6022 = !DILocation(line: 1452, column: 9, scope: !6012)
!6023 = !DILocation(line: 1453, column: 1, scope: !1101)
!6024 = !DILocation(line: 1783, column: 33, scope: !1209)
!6025 = !DILocation(line: 1783, column: 49, scope: !1209)
!6026 = !DILocation(line: 1785, column: 5, scope: !1209)
!6027 = !DILocation(line: 1785, column: 15, scope: !1209)
!6028 = !DILocation(line: 1786, column: 5, scope: !1209)
!6029 = !DILocation(line: 1786, column: 11, scope: !1209)
!6030 = !DILocation(line: 1788, column: 26, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !1209, file: !408, line: 1788, column: 9)
!6032 = !DILocation(line: 1788, column: 37, scope: !6031)
!6033 = !DILocation(line: 1788, column: 48, scope: !6031)
!6034 = !DILocation(line: 1788, column: 57, scope: !6031)
!6035 = !DILocation(line: 1788, column: 74, scope: !6031)
!6036 = !DILocation(line: 1788, column: 9, scope: !1209)
!6037 = !DILocation(line: 1789, column: 33, scope: !6031)
!6038 = !DILocation(line: 1789, column: 16, scope: !6031)
!6039 = !DILocation(line: 1789, column: 14, scope: !6031)
!6040 = !DILocation(line: 1789, column: 9, scope: !6031)
!6041 = !DILocation(line: 1791, column: 9, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !1209, file: !408, line: 1791, column: 9)
!6043 = !DILocation(line: 1791, column: 14, scope: !6042)
!6044 = !DILocation(line: 1791, column: 9, scope: !1209)
!6045 = !DILocation(line: 1792, column: 9, scope: !6042)
!6046 = !DILocation(line: 1795, column: 26, scope: !1218)
!6047 = !DILocation(line: 1795, column: 33, scope: !1218)
!6048 = !DILocation(line: 1795, column: 43, scope: !1218)
!6049 = !DILocation(line: 1795, column: 1337, scope: !1218)
!6050 = !DILocation(line: 1795, column: 1350, scope: !6051)
!6051 = !DILexicalBlockFile(scope: !1218, file: !408, discriminator: 1)
!6052 = !DILocation(line: 1795, column: 1368, scope: !1218)
!6053 = !DILocation(line: 1795, column: 1377, scope: !1218)
!6054 = !DILocation(line: 1795, column: 1230, scope: !1218)
!6055 = !DILocation(line: 1795, column: 1542, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !1222, file: !408, discriminator: 3)
!6057 = !DILocation(line: 1795, column: 1563, scope: !1222)
!6058 = !DILocation(line: 1795, column: 1610, scope: !1222)
!6059 = !DILocation(line: 1795, column: 1617, scope: !1222)
!6060 = !DILocation(line: 1795, column: 1630, scope: !1222)
!6061 = !DILocation(line: 1795, column: 1641, scope: !1222)
!6062 = !DILocation(line: 1795, column: 1651, scope: !1222)
!6063 = !DILocation(line: 1795, column: 1649, scope: !1222)
!6064 = !DILocation(line: 1795, column: 1708, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !1222, file: !408, line: 1795, column: 1708)
!6066 = !DILocation(line: 1795, column: 1717, scope: !6065)
!6067 = !DILocation(line: 1795, column: 1721, scope: !6065)
!6068 = !DILocation(line: 1795, column: 1724, scope: !6069)
!6069 = !DILexicalBlockFile(scope: !6065, file: !408, discriminator: 5)
!6070 = !DILocation(line: 1795, column: 1733, scope: !6065)
!6071 = !DILocation(line: 1795, column: 1708, scope: !1222)
!6072 = !DILocation(line: 1795, column: 1753, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !6074, file: !408, discriminator: 7)
!6074 = distinct !DILexicalBlock(scope: !6065, file: !408, line: 1795, column: 1739)
!6075 = !DILocation(line: 1795, column: 1763, scope: !6074)
!6076 = !DILocation(line: 1795, column: 1761, scope: !6074)
!6077 = !DILocation(line: 1795, column: 1750, scope: !6074)
!6078 = !DILocation(line: 1795, column: 1821, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6074, file: !408, line: 1795, column: 1821)
!6080 = !DILocation(line: 1795, column: 1830, scope: !6079)
!6081 = !DILocation(line: 1795, column: 1834, scope: !6079)
!6082 = !DILocation(line: 1795, column: 1837, scope: !6083)
!6083 = !DILexicalBlockFile(scope: !6079, file: !408, discriminator: 9)
!6084 = !DILocation(line: 1795, column: 1846, scope: !6079)
!6085 = !DILocation(line: 1795, column: 1821, scope: !6074)
!6086 = !DILocation(line: 1795, column: 1866, scope: !6087)
!6087 = !DILexicalBlockFile(scope: !6088, file: !408, discriminator: 11)
!6088 = distinct !DILexicalBlock(scope: !6079, file: !408, line: 1795, column: 1852)
!6089 = !DILocation(line: 1795, column: 1876, scope: !6088)
!6090 = !DILocation(line: 1795, column: 1874, scope: !6088)
!6091 = !DILocation(line: 1795, column: 1863, scope: !6088)
!6092 = !DILocation(line: 1795, column: 1934, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !408, line: 1795, column: 1934)
!6094 = !DILocation(line: 1795, column: 1943, scope: !6093)
!6095 = !DILocation(line: 1795, column: 1947, scope: !6093)
!6096 = !DILocation(line: 1795, column: 1950, scope: !6097)
!6097 = !DILexicalBlockFile(scope: !6093, file: !408, discriminator: 13)
!6098 = !DILocation(line: 1795, column: 1959, scope: !6093)
!6099 = !DILocation(line: 1795, column: 1934, scope: !6088)
!6100 = !DILocation(line: 1795, column: 1977, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !6093, file: !408, discriminator: 15)
!6102 = !DILocation(line: 1795, column: 1987, scope: !6093)
!6103 = !DILocation(line: 1795, column: 1985, scope: !6093)
!6104 = !DILocation(line: 1795, column: 1974, scope: !6093)
!6105 = !DILocation(line: 1795, column: 1965, scope: !6093)
!6106 = !DILocation(line: 1795, column: 2041, scope: !6107)
!6107 = !DILexicalBlockFile(scope: !6108, file: !408, discriminator: 17)
!6108 = !DILexicalBlockFile(scope: !6109, file: !408, discriminator: 16)
!6109 = !DILexicalBlockFile(scope: !6088, file: !408, discriminator: 14)
!6110 = !DILocation(line: 1795, column: 2043, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !6112, file: !408, discriminator: 18)
!6112 = !DILexicalBlockFile(scope: !6113, file: !408, discriminator: 12)
!6113 = !DILexicalBlockFile(scope: !6074, file: !408, discriminator: 10)
!6114 = !DILocation(line: 1795, column: 2045, scope: !6115)
!6115 = !DILexicalBlockFile(scope: !6116, file: !408, discriminator: 19)
!6116 = !DILexicalBlockFile(scope: !6117, file: !408, discriminator: 8)
!6117 = !DILexicalBlockFile(scope: !1222, file: !408, discriminator: 6)
!6118 = !DILocation(line: 1795, column: 1736, scope: !6065)
!6119 = !DILocation(line: 1795, column: 2055, scope: !1218)
!6120 = !DILocation(line: 1795, column: 2055, scope: !1222)
!6121 = !DILocation(line: 1795, column: 2080, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !6123, file: !408, discriminator: 4)
!6123 = !DILexicalBlockFile(scope: !1218, file: !408, discriminator: 2)
!6124 = !DILocation(line: 1795, column: 2062, scope: !1218)
!6125 = !DILocation(line: 1795, column: 26, scope: !6126)
!6126 = !DILexicalBlockFile(scope: !6127, file: !408, discriminator: 21)
!6127 = !DILexicalBlockFile(scope: !1218, file: !408, discriminator: 20)
!6128 = !DILocation(line: 1795, column: 2097, scope: !1219)
!6129 = !DILocation(line: 1795, column: 2097, scope: !1218)
!6130 = !DILocation(line: 1795, column: 2100, scope: !1219)
!6131 = !DILocation(line: 1795, column: 9, scope: !1209)
!6132 = !DILocation(line: 1796, column: 15, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !1219, file: !408, line: 1795, column: 2106)
!6134 = !DILocation(line: 1796, column: 21, scope: !6133)
!6135 = !DILocation(line: 1796, column: 13, scope: !6133)
!6136 = !DILocation(line: 1797, column: 25, scope: !6133)
!6137 = !DILocation(line: 1797, column: 32, scope: !6133)
!6138 = !DILocation(line: 1797, column: 41, scope: !6133)
!6139 = !DILocation(line: 1798, column: 16, scope: !6133)
!6140 = !DILocation(line: 1798, column: 9, scope: !6133)
!6141 = !DILocation(line: 1799, column: 33, scope: !1225)
!6142 = !DILocation(line: 1799, column: 40, scope: !1225)
!6143 = !DILocation(line: 1799, column: 50, scope: !1225)
!6144 = !DILocation(line: 1799, column: 1357, scope: !1225)
!6145 = !DILocation(line: 1799, column: 1370, scope: !6146)
!6146 = !DILexicalBlockFile(scope: !1225, file: !408, discriminator: 1)
!6147 = !DILocation(line: 1799, column: 1389, scope: !1225)
!6148 = !DILocation(line: 1799, column: 1398, scope: !1225)
!6149 = !DILocation(line: 1799, column: 1247, scope: !1225)
!6150 = !DILocation(line: 1799, column: 1564, scope: !6151)
!6151 = !DILexicalBlockFile(scope: !1229, file: !408, discriminator: 3)
!6152 = !DILocation(line: 1799, column: 1585, scope: !1229)
!6153 = !DILocation(line: 1799, column: 1632, scope: !1229)
!6154 = !DILocation(line: 1799, column: 1639, scope: !1229)
!6155 = !DILocation(line: 1799, column: 1652, scope: !1229)
!6156 = !DILocation(line: 1799, column: 1663, scope: !1229)
!6157 = !DILocation(line: 1799, column: 1673, scope: !1229)
!6158 = !DILocation(line: 1799, column: 1671, scope: !1229)
!6159 = !DILocation(line: 1799, column: 1731, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !1229, file: !408, line: 1799, column: 1731)
!6161 = !DILocation(line: 1799, column: 1740, scope: !6160)
!6162 = !DILocation(line: 1799, column: 1744, scope: !6160)
!6163 = !DILocation(line: 1799, column: 1747, scope: !6164)
!6164 = !DILexicalBlockFile(scope: !6160, file: !408, discriminator: 5)
!6165 = !DILocation(line: 1799, column: 1756, scope: !6160)
!6166 = !DILocation(line: 1799, column: 1731, scope: !1229)
!6167 = !DILocation(line: 1799, column: 1776, scope: !6168)
!6168 = !DILexicalBlockFile(scope: !6169, file: !408, discriminator: 7)
!6169 = distinct !DILexicalBlock(scope: !6160, file: !408, line: 1799, column: 1762)
!6170 = !DILocation(line: 1799, column: 1786, scope: !6169)
!6171 = !DILocation(line: 1799, column: 1784, scope: !6169)
!6172 = !DILocation(line: 1799, column: 1773, scope: !6169)
!6173 = !DILocation(line: 1799, column: 1845, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6169, file: !408, line: 1799, column: 1845)
!6175 = !DILocation(line: 1799, column: 1854, scope: !6174)
!6176 = !DILocation(line: 1799, column: 1858, scope: !6174)
!6177 = !DILocation(line: 1799, column: 1861, scope: !6178)
!6178 = !DILexicalBlockFile(scope: !6174, file: !408, discriminator: 9)
!6179 = !DILocation(line: 1799, column: 1870, scope: !6174)
!6180 = !DILocation(line: 1799, column: 1845, scope: !6169)
!6181 = !DILocation(line: 1799, column: 1890, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !6183, file: !408, discriminator: 11)
!6183 = distinct !DILexicalBlock(scope: !6174, file: !408, line: 1799, column: 1876)
!6184 = !DILocation(line: 1799, column: 1900, scope: !6183)
!6185 = !DILocation(line: 1799, column: 1898, scope: !6183)
!6186 = !DILocation(line: 1799, column: 1887, scope: !6183)
!6187 = !DILocation(line: 1799, column: 1959, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6183, file: !408, line: 1799, column: 1959)
!6189 = !DILocation(line: 1799, column: 1968, scope: !6188)
!6190 = !DILocation(line: 1799, column: 1972, scope: !6188)
!6191 = !DILocation(line: 1799, column: 1975, scope: !6192)
!6192 = !DILexicalBlockFile(scope: !6188, file: !408, discriminator: 13)
!6193 = !DILocation(line: 1799, column: 1984, scope: !6188)
!6194 = !DILocation(line: 1799, column: 1959, scope: !6183)
!6195 = !DILocation(line: 1799, column: 2002, scope: !6196)
!6196 = !DILexicalBlockFile(scope: !6188, file: !408, discriminator: 15)
!6197 = !DILocation(line: 1799, column: 2012, scope: !6188)
!6198 = !DILocation(line: 1799, column: 2010, scope: !6188)
!6199 = !DILocation(line: 1799, column: 1999, scope: !6188)
!6200 = !DILocation(line: 1799, column: 1990, scope: !6188)
!6201 = !DILocation(line: 1799, column: 2067, scope: !6202)
!6202 = !DILexicalBlockFile(scope: !6203, file: !408, discriminator: 17)
!6203 = !DILexicalBlockFile(scope: !6204, file: !408, discriminator: 16)
!6204 = !DILexicalBlockFile(scope: !6183, file: !408, discriminator: 14)
!6205 = !DILocation(line: 1799, column: 2069, scope: !6206)
!6206 = !DILexicalBlockFile(scope: !6207, file: !408, discriminator: 18)
!6207 = !DILexicalBlockFile(scope: !6208, file: !408, discriminator: 12)
!6208 = !DILexicalBlockFile(scope: !6169, file: !408, discriminator: 10)
!6209 = !DILocation(line: 1799, column: 2071, scope: !6210)
!6210 = !DILexicalBlockFile(scope: !6211, file: !408, discriminator: 19)
!6211 = !DILexicalBlockFile(scope: !6212, file: !408, discriminator: 8)
!6212 = !DILexicalBlockFile(scope: !1229, file: !408, discriminator: 6)
!6213 = !DILocation(line: 1799, column: 1759, scope: !6160)
!6214 = !DILocation(line: 1799, column: 2081, scope: !1225)
!6215 = !DILocation(line: 1799, column: 2081, scope: !1229)
!6216 = !DILocation(line: 1799, column: 2106, scope: !6217)
!6217 = !DILexicalBlockFile(scope: !6218, file: !408, discriminator: 4)
!6218 = !DILexicalBlockFile(scope: !1225, file: !408, discriminator: 2)
!6219 = !DILocation(line: 1799, column: 2088, scope: !1225)
!6220 = !DILocation(line: 1799, column: 33, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !6222, file: !408, discriminator: 21)
!6222 = !DILexicalBlockFile(scope: !1225, file: !408, discriminator: 20)
!6223 = !DILocation(line: 1799, column: 2124, scope: !1226)
!6224 = !DILocation(line: 1799, column: 2124, scope: !1225)
!6225 = !DILocation(line: 1799, column: 2127, scope: !1226)
!6226 = !DILocation(line: 1799, column: 16, scope: !1219)
!6227 = !DILocation(line: 1800, column: 32, scope: !1233)
!6228 = !DILocation(line: 1800, column: 15, scope: !1233)
!6229 = !DILocation(line: 1800, column: 13, scope: !1233)
!6230 = !DILocation(line: 1801, column: 9, scope: !1233)
!6231 = !DILocation(line: 1801, column: 14, scope: !6232)
!6232 = !DILexicalBlockFile(scope: !1232, file: !408, discriminator: 1)
!6233 = !DILocation(line: 1801, column: 24, scope: !1232)
!6234 = !DILocation(line: 1801, column: 55, scope: !1232)
!6235 = !DILocation(line: 1801, column: 65, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !1232, file: !408, line: 1801, column: 65)
!6237 = !DILocation(line: 1801, column: 81, scope: !6236)
!6238 = !DILocation(line: 1801, column: 65, scope: !1232)
!6239 = !DILocation(line: 1801, column: 112, scope: !6240)
!6240 = !DILexicalBlockFile(scope: !6236, file: !408, discriminator: 2)
!6241 = !DILocation(line: 1801, column: 131, scope: !6236)
!6242 = !DILocation(line: 1801, column: 140, scope: !6236)
!6243 = !DILocation(line: 1801, column: 96, scope: !6236)
!6244 = !DILocation(line: 1801, column: 145, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6246, file: !408, discriminator: 4)
!6246 = !DILexicalBlockFile(scope: !1233, file: !408, discriminator: 3)
!6247 = !DILocation(line: 1801, column: 145, scope: !1232)
!6248 = !DILocation(line: 1801, column: 145, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !1232, file: !408, discriminator: 5)
!6250 = !DILocation(line: 1802, column: 16, scope: !1233)
!6251 = !DILocation(line: 1802, column: 9, scope: !1233)
!6252 = !DILocation(line: 1806, column: 47, scope: !1209)
!6253 = !DILocation(line: 1806, column: 35, scope: !1209)
!6254 = !DILocation(line: 1806, column: 53, scope: !1209)
!6255 = !DILocation(line: 1806, column: 11, scope: !1209)
!6256 = !DILocation(line: 1806, column: 9, scope: !1209)
!6257 = !DILocation(line: 1807, column: 9, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !1209, file: !408, line: 1807, column: 9)
!6259 = !DILocation(line: 1807, column: 9, scope: !1209)
!6260 = !DILocation(line: 1808, column: 16, scope: !6258)
!6261 = !DILocation(line: 1808, column: 9, scope: !6258)
!6262 = !DILocation(line: 1811, column: 26, scope: !1235)
!6263 = !DILocation(line: 1811, column: 33, scope: !1235)
!6264 = !DILocation(line: 1811, column: 43, scope: !1235)
!6265 = !DILocation(line: 1811, column: 1350, scope: !1235)
!6266 = !DILocation(line: 1811, column: 1363, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !1235, file: !408, discriminator: 1)
!6268 = !DILocation(line: 1811, column: 1382, scope: !1235)
!6269 = !DILocation(line: 1811, column: 1391, scope: !1235)
!6270 = !DILocation(line: 1811, column: 1240, scope: !1235)
!6271 = !DILocation(line: 1811, column: 1557, scope: !6272)
!6272 = !DILexicalBlockFile(scope: !1239, file: !408, discriminator: 3)
!6273 = !DILocation(line: 1811, column: 1578, scope: !1239)
!6274 = !DILocation(line: 1811, column: 1625, scope: !1239)
!6275 = !DILocation(line: 1811, column: 1632, scope: !1239)
!6276 = !DILocation(line: 1811, column: 1645, scope: !1239)
!6277 = !DILocation(line: 1811, column: 1656, scope: !1239)
!6278 = !DILocation(line: 1811, column: 1666, scope: !1239)
!6279 = !DILocation(line: 1811, column: 1664, scope: !1239)
!6280 = !DILocation(line: 1811, column: 1724, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !1239, file: !408, line: 1811, column: 1724)
!6282 = !DILocation(line: 1811, column: 1733, scope: !6281)
!6283 = !DILocation(line: 1811, column: 1737, scope: !6281)
!6284 = !DILocation(line: 1811, column: 1740, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6281, file: !408, discriminator: 5)
!6286 = !DILocation(line: 1811, column: 1749, scope: !6281)
!6287 = !DILocation(line: 1811, column: 1724, scope: !1239)
!6288 = !DILocation(line: 1811, column: 1769, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6290, file: !408, discriminator: 7)
!6290 = distinct !DILexicalBlock(scope: !6281, file: !408, line: 1811, column: 1755)
!6291 = !DILocation(line: 1811, column: 1779, scope: !6290)
!6292 = !DILocation(line: 1811, column: 1777, scope: !6290)
!6293 = !DILocation(line: 1811, column: 1766, scope: !6290)
!6294 = !DILocation(line: 1811, column: 1838, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6290, file: !408, line: 1811, column: 1838)
!6296 = !DILocation(line: 1811, column: 1847, scope: !6295)
!6297 = !DILocation(line: 1811, column: 1851, scope: !6295)
!6298 = !DILocation(line: 1811, column: 1854, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !6295, file: !408, discriminator: 9)
!6300 = !DILocation(line: 1811, column: 1863, scope: !6295)
!6301 = !DILocation(line: 1811, column: 1838, scope: !6290)
!6302 = !DILocation(line: 1811, column: 1883, scope: !6303)
!6303 = !DILexicalBlockFile(scope: !6304, file: !408, discriminator: 11)
!6304 = distinct !DILexicalBlock(scope: !6295, file: !408, line: 1811, column: 1869)
!6305 = !DILocation(line: 1811, column: 1893, scope: !6304)
!6306 = !DILocation(line: 1811, column: 1891, scope: !6304)
!6307 = !DILocation(line: 1811, column: 1880, scope: !6304)
!6308 = !DILocation(line: 1811, column: 1952, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6304, file: !408, line: 1811, column: 1952)
!6310 = !DILocation(line: 1811, column: 1961, scope: !6309)
!6311 = !DILocation(line: 1811, column: 1965, scope: !6309)
!6312 = !DILocation(line: 1811, column: 1968, scope: !6313)
!6313 = !DILexicalBlockFile(scope: !6309, file: !408, discriminator: 13)
!6314 = !DILocation(line: 1811, column: 1977, scope: !6309)
!6315 = !DILocation(line: 1811, column: 1952, scope: !6304)
!6316 = !DILocation(line: 1811, column: 1995, scope: !6317)
!6317 = !DILexicalBlockFile(scope: !6309, file: !408, discriminator: 15)
!6318 = !DILocation(line: 1811, column: 2005, scope: !6309)
!6319 = !DILocation(line: 1811, column: 2003, scope: !6309)
!6320 = !DILocation(line: 1811, column: 1992, scope: !6309)
!6321 = !DILocation(line: 1811, column: 1983, scope: !6309)
!6322 = !DILocation(line: 1811, column: 2060, scope: !6323)
!6323 = !DILexicalBlockFile(scope: !6324, file: !408, discriminator: 17)
!6324 = !DILexicalBlockFile(scope: !6325, file: !408, discriminator: 16)
!6325 = !DILexicalBlockFile(scope: !6304, file: !408, discriminator: 14)
!6326 = !DILocation(line: 1811, column: 2062, scope: !6327)
!6327 = !DILexicalBlockFile(scope: !6328, file: !408, discriminator: 18)
!6328 = !DILexicalBlockFile(scope: !6329, file: !408, discriminator: 12)
!6329 = !DILexicalBlockFile(scope: !6290, file: !408, discriminator: 10)
!6330 = !DILocation(line: 1811, column: 2064, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6332, file: !408, discriminator: 19)
!6332 = !DILexicalBlockFile(scope: !6333, file: !408, discriminator: 8)
!6333 = !DILexicalBlockFile(scope: !1239, file: !408, discriminator: 6)
!6334 = !DILocation(line: 1811, column: 1752, scope: !6281)
!6335 = !DILocation(line: 1811, column: 2074, scope: !1235)
!6336 = !DILocation(line: 1811, column: 2074, scope: !1239)
!6337 = !DILocation(line: 1811, column: 2099, scope: !6338)
!6338 = !DILexicalBlockFile(scope: !6339, file: !408, discriminator: 4)
!6339 = !DILexicalBlockFile(scope: !1235, file: !408, discriminator: 2)
!6340 = !DILocation(line: 1811, column: 2081, scope: !1235)
!6341 = !DILocation(line: 1811, column: 26, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !6343, file: !408, discriminator: 21)
!6343 = !DILexicalBlockFile(scope: !1235, file: !408, discriminator: 20)
!6344 = !DILocation(line: 1811, column: 2117, scope: !1236)
!6345 = !DILocation(line: 1811, column: 2117, scope: !1235)
!6346 = !DILocation(line: 1811, column: 2120, scope: !1236)
!6347 = !DILocation(line: 1811, column: 9, scope: !1209)
!6348 = !DILocation(line: 1812, column: 9, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !1236, file: !408, line: 1811, column: 2126)
!6350 = !DILocation(line: 1813, column: 32, scope: !6349)
!6351 = !DILocation(line: 1813, column: 15, scope: !6349)
!6352 = !DILocation(line: 1813, column: 13, scope: !6349)
!6353 = !DILocation(line: 1814, column: 5, scope: !6349)
!6354 = !DILocation(line: 1814, column: 33, scope: !1242)
!6355 = !DILocation(line: 1814, column: 40, scope: !1242)
!6356 = !DILocation(line: 1814, column: 50, scope: !1242)
!6357 = !DILocation(line: 1814, column: 1383, scope: !1242)
!6358 = !DILocation(line: 1814, column: 1396, scope: !6359)
!6359 = !DILexicalBlockFile(scope: !1242, file: !408, discriminator: 1)
!6360 = !DILocation(line: 1814, column: 1417, scope: !1242)
!6361 = !DILocation(line: 1814, column: 1426, scope: !1242)
!6362 = !DILocation(line: 1814, column: 1267, scope: !1242)
!6363 = !DILocation(line: 1814, column: 1594, scope: !6364)
!6364 = !DILexicalBlockFile(scope: !1246, file: !408, discriminator: 3)
!6365 = !DILocation(line: 1814, column: 1615, scope: !1246)
!6366 = !DILocation(line: 1814, column: 1662, scope: !1246)
!6367 = !DILocation(line: 1814, column: 1669, scope: !1246)
!6368 = !DILocation(line: 1814, column: 1682, scope: !1246)
!6369 = !DILocation(line: 1814, column: 1693, scope: !1246)
!6370 = !DILocation(line: 1814, column: 1703, scope: !1246)
!6371 = !DILocation(line: 1814, column: 1701, scope: !1246)
!6372 = !DILocation(line: 1814, column: 1763, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !1246, file: !408, line: 1814, column: 1763)
!6374 = !DILocation(line: 1814, column: 1772, scope: !6373)
!6375 = !DILocation(line: 1814, column: 1776, scope: !6373)
!6376 = !DILocation(line: 1814, column: 1779, scope: !6377)
!6377 = !DILexicalBlockFile(scope: !6373, file: !408, discriminator: 5)
!6378 = !DILocation(line: 1814, column: 1788, scope: !6373)
!6379 = !DILocation(line: 1814, column: 1763, scope: !1246)
!6380 = !DILocation(line: 1814, column: 1808, scope: !6381)
!6381 = !DILexicalBlockFile(scope: !6382, file: !408, discriminator: 7)
!6382 = distinct !DILexicalBlock(scope: !6373, file: !408, line: 1814, column: 1794)
!6383 = !DILocation(line: 1814, column: 1818, scope: !6382)
!6384 = !DILocation(line: 1814, column: 1816, scope: !6382)
!6385 = !DILocation(line: 1814, column: 1805, scope: !6382)
!6386 = !DILocation(line: 1814, column: 1879, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6382, file: !408, line: 1814, column: 1879)
!6388 = !DILocation(line: 1814, column: 1888, scope: !6387)
!6389 = !DILocation(line: 1814, column: 1892, scope: !6387)
!6390 = !DILocation(line: 1814, column: 1895, scope: !6391)
!6391 = !DILexicalBlockFile(scope: !6387, file: !408, discriminator: 9)
!6392 = !DILocation(line: 1814, column: 1904, scope: !6387)
!6393 = !DILocation(line: 1814, column: 1879, scope: !6382)
!6394 = !DILocation(line: 1814, column: 1924, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !6396, file: !408, discriminator: 11)
!6396 = distinct !DILexicalBlock(scope: !6387, file: !408, line: 1814, column: 1910)
!6397 = !DILocation(line: 1814, column: 1934, scope: !6396)
!6398 = !DILocation(line: 1814, column: 1932, scope: !6396)
!6399 = !DILocation(line: 1814, column: 1921, scope: !6396)
!6400 = !DILocation(line: 1814, column: 1995, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6396, file: !408, line: 1814, column: 1995)
!6402 = !DILocation(line: 1814, column: 2004, scope: !6401)
!6403 = !DILocation(line: 1814, column: 2008, scope: !6401)
!6404 = !DILocation(line: 1814, column: 2011, scope: !6405)
!6405 = !DILexicalBlockFile(scope: !6401, file: !408, discriminator: 13)
!6406 = !DILocation(line: 1814, column: 2020, scope: !6401)
!6407 = !DILocation(line: 1814, column: 1995, scope: !6396)
!6408 = !DILocation(line: 1814, column: 2038, scope: !6409)
!6409 = !DILexicalBlockFile(scope: !6401, file: !408, discriminator: 15)
!6410 = !DILocation(line: 1814, column: 2048, scope: !6401)
!6411 = !DILocation(line: 1814, column: 2046, scope: !6401)
!6412 = !DILocation(line: 1814, column: 2035, scope: !6401)
!6413 = !DILocation(line: 1814, column: 2026, scope: !6401)
!6414 = !DILocation(line: 1814, column: 2105, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !6416, file: !408, discriminator: 17)
!6416 = !DILexicalBlockFile(scope: !6417, file: !408, discriminator: 16)
!6417 = !DILexicalBlockFile(scope: !6396, file: !408, discriminator: 14)
!6418 = !DILocation(line: 1814, column: 2107, scope: !6419)
!6419 = !DILexicalBlockFile(scope: !6420, file: !408, discriminator: 18)
!6420 = !DILexicalBlockFile(scope: !6421, file: !408, discriminator: 12)
!6421 = !DILexicalBlockFile(scope: !6382, file: !408, discriminator: 10)
!6422 = !DILocation(line: 1814, column: 2109, scope: !6423)
!6423 = !DILexicalBlockFile(scope: !6424, file: !408, discriminator: 19)
!6424 = !DILexicalBlockFile(scope: !6425, file: !408, discriminator: 8)
!6425 = !DILexicalBlockFile(scope: !1246, file: !408, discriminator: 6)
!6426 = !DILocation(line: 1814, column: 1791, scope: !6373)
!6427 = !DILocation(line: 1814, column: 2119, scope: !1242)
!6428 = !DILocation(line: 1814, column: 2119, scope: !1246)
!6429 = !DILocation(line: 1814, column: 2144, scope: !6430)
!6430 = !DILexicalBlockFile(scope: !6431, file: !408, discriminator: 4)
!6431 = !DILexicalBlockFile(scope: !1242, file: !408, discriminator: 2)
!6432 = !DILocation(line: 1814, column: 2126, scope: !1242)
!6433 = !DILocation(line: 1814, column: 33, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !6435, file: !408, discriminator: 21)
!6435 = !DILexicalBlockFile(scope: !1242, file: !408, discriminator: 20)
!6436 = !DILocation(line: 1814, column: 2164, scope: !1243)
!6437 = !DILocation(line: 1814, column: 2164, scope: !1242)
!6438 = !DILocation(line: 1814, column: 2167, scope: !1243)
!6439 = !DILocation(line: 1814, column: 16, scope: !1236)
!6440 = !DILocation(line: 1815, column: 9, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !1243, file: !408, line: 1814, column: 2173)
!6442 = !DILocation(line: 1816, column: 14, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6441, file: !408, line: 1816, column: 13)
!6444 = !DILocation(line: 1816, column: 20, scope: !6443)
!6445 = !DILocation(line: 1816, column: 13, scope: !6441)
!6446 = !DILocation(line: 1817, column: 30, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6448, file: !408, line: 1817, column: 17)
!6448 = distinct !DILexicalBlock(scope: !6443, file: !408, line: 1816, column: 27)
!6449 = !DILocation(line: 1817, column: 17, scope: !6447)
!6450 = !DILocation(line: 1817, column: 48, scope: !6447)
!6451 = !DILocation(line: 1817, column: 17, scope: !6448)
!6452 = !DILocation(line: 1818, column: 17, scope: !6447)
!6453 = !DILocation(line: 1819, column: 9, scope: !6448)
!6454 = !DILocation(line: 1820, column: 34, scope: !6441)
!6455 = !DILocation(line: 1820, column: 15, scope: !6441)
!6456 = !DILocation(line: 1820, column: 13, scope: !6441)
!6457 = !DILocation(line: 1821, column: 5, scope: !6441)
!6458 = !DILocation(line: 1823, column: 10, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !1209, file: !408, line: 1823, column: 9)
!6460 = !DILocation(line: 1823, column: 9, scope: !1209)
!6461 = !DILocation(line: 1824, column: 9, scope: !6459)
!6462 = !DILocation(line: 1826, column: 21, scope: !1209)
!6463 = !DILocation(line: 1826, column: 28, scope: !1209)
!6464 = !DILocation(line: 1826, column: 37, scope: !1209)
!6465 = !DILocation(line: 1827, column: 12, scope: !1209)
!6466 = !DILocation(line: 1827, column: 5, scope: !1209)
!6467 = !DILocation(line: 1828, column: 1, scope: !1209)
!6468 = !DILocation(line: 1831, column: 33, scope: !1256)
!6469 = !DILocation(line: 1831, column: 49, scope: !1256)
!6470 = !DILocation(line: 1831, column: 68, scope: !1256)
!6471 = !DILocation(line: 1833, column: 5, scope: !1256)
!6472 = !DILocation(line: 1833, column: 11, scope: !1256)
!6473 = !DILocation(line: 1834, column: 26, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !1256, file: !408, line: 1834, column: 9)
!6475 = !DILocation(line: 1834, column: 37, scope: !6474)
!6476 = !DILocation(line: 1834, column: 48, scope: !6474)
!6477 = !DILocation(line: 1834, column: 57, scope: !6474)
!6478 = !DILocation(line: 1834, column: 74, scope: !6474)
!6479 = !DILocation(line: 1834, column: 9, scope: !1256)
!6480 = !DILocation(line: 1835, column: 33, scope: !6474)
!6481 = !DILocation(line: 1835, column: 16, scope: !6474)
!6482 = !DILocation(line: 1835, column: 14, scope: !6474)
!6483 = !DILocation(line: 1835, column: 9, scope: !6474)
!6484 = !DILocation(line: 1836, column: 9, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !1256, file: !408, line: 1836, column: 9)
!6486 = !DILocation(line: 1836, column: 14, scope: !6485)
!6487 = !DILocation(line: 1836, column: 9, scope: !1256)
!6488 = !DILocation(line: 1837, column: 9, scope: !6485)
!6489 = !DILocation(line: 1839, column: 26, scope: !1265)
!6490 = !DILocation(line: 1839, column: 33, scope: !1265)
!6491 = !DILocation(line: 1839, column: 43, scope: !1265)
!6492 = !DILocation(line: 1839, column: 1337, scope: !1265)
!6493 = !DILocation(line: 1839, column: 1350, scope: !6494)
!6494 = !DILexicalBlockFile(scope: !1265, file: !408, discriminator: 1)
!6495 = !DILocation(line: 1839, column: 1368, scope: !1265)
!6496 = !DILocation(line: 1839, column: 1377, scope: !1265)
!6497 = !DILocation(line: 1839, column: 1230, scope: !1265)
!6498 = !DILocation(line: 1839, column: 1542, scope: !6499)
!6499 = !DILexicalBlockFile(scope: !1269, file: !408, discriminator: 3)
!6500 = !DILocation(line: 1839, column: 1563, scope: !1269)
!6501 = !DILocation(line: 1839, column: 1610, scope: !1269)
!6502 = !DILocation(line: 1839, column: 1617, scope: !1269)
!6503 = !DILocation(line: 1839, column: 1630, scope: !1269)
!6504 = !DILocation(line: 1839, column: 1641, scope: !1269)
!6505 = !DILocation(line: 1839, column: 1651, scope: !1269)
!6506 = !DILocation(line: 1839, column: 1649, scope: !1269)
!6507 = !DILocation(line: 1839, column: 1708, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !1269, file: !408, line: 1839, column: 1708)
!6509 = !DILocation(line: 1839, column: 1717, scope: !6508)
!6510 = !DILocation(line: 1839, column: 1721, scope: !6508)
!6511 = !DILocation(line: 1839, column: 1724, scope: !6512)
!6512 = !DILexicalBlockFile(scope: !6508, file: !408, discriminator: 5)
!6513 = !DILocation(line: 1839, column: 1733, scope: !6508)
!6514 = !DILocation(line: 1839, column: 1708, scope: !1269)
!6515 = !DILocation(line: 1839, column: 1753, scope: !6516)
!6516 = !DILexicalBlockFile(scope: !6517, file: !408, discriminator: 7)
!6517 = distinct !DILexicalBlock(scope: !6508, file: !408, line: 1839, column: 1739)
!6518 = !DILocation(line: 1839, column: 1763, scope: !6517)
!6519 = !DILocation(line: 1839, column: 1761, scope: !6517)
!6520 = !DILocation(line: 1839, column: 1750, scope: !6517)
!6521 = !DILocation(line: 1839, column: 1821, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6517, file: !408, line: 1839, column: 1821)
!6523 = !DILocation(line: 1839, column: 1830, scope: !6522)
!6524 = !DILocation(line: 1839, column: 1834, scope: !6522)
!6525 = !DILocation(line: 1839, column: 1837, scope: !6526)
!6526 = !DILexicalBlockFile(scope: !6522, file: !408, discriminator: 9)
!6527 = !DILocation(line: 1839, column: 1846, scope: !6522)
!6528 = !DILocation(line: 1839, column: 1821, scope: !6517)
!6529 = !DILocation(line: 1839, column: 1866, scope: !6530)
!6530 = !DILexicalBlockFile(scope: !6531, file: !408, discriminator: 11)
!6531 = distinct !DILexicalBlock(scope: !6522, file: !408, line: 1839, column: 1852)
!6532 = !DILocation(line: 1839, column: 1876, scope: !6531)
!6533 = !DILocation(line: 1839, column: 1874, scope: !6531)
!6534 = !DILocation(line: 1839, column: 1863, scope: !6531)
!6535 = !DILocation(line: 1839, column: 1934, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6531, file: !408, line: 1839, column: 1934)
!6537 = !DILocation(line: 1839, column: 1943, scope: !6536)
!6538 = !DILocation(line: 1839, column: 1947, scope: !6536)
!6539 = !DILocation(line: 1839, column: 1950, scope: !6540)
!6540 = !DILexicalBlockFile(scope: !6536, file: !408, discriminator: 13)
!6541 = !DILocation(line: 1839, column: 1959, scope: !6536)
!6542 = !DILocation(line: 1839, column: 1934, scope: !6531)
!6543 = !DILocation(line: 1839, column: 1977, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !6536, file: !408, discriminator: 15)
!6545 = !DILocation(line: 1839, column: 1987, scope: !6536)
!6546 = !DILocation(line: 1839, column: 1985, scope: !6536)
!6547 = !DILocation(line: 1839, column: 1974, scope: !6536)
!6548 = !DILocation(line: 1839, column: 1965, scope: !6536)
!6549 = !DILocation(line: 1839, column: 2041, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !6551, file: !408, discriminator: 17)
!6551 = !DILexicalBlockFile(scope: !6552, file: !408, discriminator: 16)
!6552 = !DILexicalBlockFile(scope: !6531, file: !408, discriminator: 14)
!6553 = !DILocation(line: 1839, column: 2043, scope: !6554)
!6554 = !DILexicalBlockFile(scope: !6555, file: !408, discriminator: 18)
!6555 = !DILexicalBlockFile(scope: !6556, file: !408, discriminator: 12)
!6556 = !DILexicalBlockFile(scope: !6517, file: !408, discriminator: 10)
!6557 = !DILocation(line: 1839, column: 2045, scope: !6558)
!6558 = !DILexicalBlockFile(scope: !6559, file: !408, discriminator: 19)
!6559 = !DILexicalBlockFile(scope: !6560, file: !408, discriminator: 8)
!6560 = !DILexicalBlockFile(scope: !1269, file: !408, discriminator: 6)
!6561 = !DILocation(line: 1839, column: 1736, scope: !6508)
!6562 = !DILocation(line: 1839, column: 2055, scope: !1265)
!6563 = !DILocation(line: 1839, column: 2055, scope: !1269)
!6564 = !DILocation(line: 1839, column: 2080, scope: !6565)
!6565 = !DILexicalBlockFile(scope: !6566, file: !408, discriminator: 4)
!6566 = !DILexicalBlockFile(scope: !1265, file: !408, discriminator: 2)
!6567 = !DILocation(line: 1839, column: 2062, scope: !1265)
!6568 = !DILocation(line: 1839, column: 26, scope: !6569)
!6569 = !DILexicalBlockFile(scope: !6570, file: !408, discriminator: 21)
!6570 = !DILexicalBlockFile(scope: !1265, file: !408, discriminator: 20)
!6571 = !DILocation(line: 1839, column: 2097, scope: !1266)
!6572 = !DILocation(line: 1839, column: 2097, scope: !1265)
!6573 = !DILocation(line: 1839, column: 2100, scope: !1266)
!6574 = !DILocation(line: 1839, column: 9, scope: !1256)
!6575 = !DILocation(line: 1840, column: 9, scope: !1273)
!6576 = !DILocation(line: 1840, column: 14, scope: !6577)
!6577 = !DILexicalBlockFile(scope: !1272, file: !408, discriminator: 1)
!6578 = !DILocation(line: 1840, column: 24, scope: !1272)
!6579 = !DILocation(line: 1840, column: 54, scope: !1272)
!6580 = !DILocation(line: 1840, column: 60, scope: !1272)
!6581 = !DILocation(line: 1840, column: 74, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !1272, file: !408, line: 1840, column: 71)
!6583 = !DILocation(line: 1840, column: 91, scope: !6582)
!6584 = !DILocation(line: 1840, column: 71, scope: !6582)
!6585 = !DILocation(line: 1840, column: 101, scope: !6582)
!6586 = !DILocation(line: 1840, column: 71, scope: !1272)
!6587 = !DILocation(line: 1840, column: 71, scope: !6588)
!6588 = !DILexicalBlockFile(scope: !1272, file: !408, discriminator: 2)
!6589 = !DILocation(line: 1840, column: 132, scope: !6590)
!6590 = !DILexicalBlockFile(scope: !6582, file: !408, discriminator: 3)
!6591 = !DILocation(line: 1840, column: 150, scope: !6582)
!6592 = !DILocation(line: 1840, column: 160, scope: !6582)
!6593 = !DILocation(line: 1840, column: 185, scope: !6582)
!6594 = !DILocation(line: 1840, column: 116, scope: !6582)
!6595 = !DILocation(line: 1840, column: 204, scope: !6596)
!6596 = !DILexicalBlockFile(scope: !1273, file: !408, discriminator: 4)
!6597 = !DILocation(line: 1840, column: 204, scope: !1272)
!6598 = !DILocation(line: 1840, column: 204, scope: !6599)
!6599 = !DILexicalBlockFile(scope: !1272, file: !408, discriminator: 5)
!6600 = !DILocation(line: 1841, column: 21, scope: !1273)
!6601 = !DILocation(line: 1841, column: 9, scope: !1273)
!6602 = !DILocation(line: 1841, column: 15, scope: !1273)
!6603 = !DILocation(line: 1841, column: 19, scope: !1273)
!6604 = !DILocation(line: 1842, column: 25, scope: !1273)
!6605 = !DILocation(line: 1842, column: 31, scope: !1273)
!6606 = !DILocation(line: 1842, column: 38, scope: !1273)
!6607 = !DILocation(line: 1842, column: 47, scope: !1273)
!6608 = !DILocation(line: 1843, column: 5, scope: !1273)
!6609 = !DILocation(line: 1843, column: 33, scope: !1275)
!6610 = !DILocation(line: 1843, column: 40, scope: !1275)
!6611 = !DILocation(line: 1843, column: 50, scope: !1275)
!6612 = !DILocation(line: 1843, column: 1357, scope: !1275)
!6613 = !DILocation(line: 1843, column: 1370, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !1275, file: !408, discriminator: 1)
!6615 = !DILocation(line: 1843, column: 1389, scope: !1275)
!6616 = !DILocation(line: 1843, column: 1398, scope: !1275)
!6617 = !DILocation(line: 1843, column: 1247, scope: !1275)
!6618 = !DILocation(line: 1843, column: 1564, scope: !6619)
!6619 = !DILexicalBlockFile(scope: !1279, file: !408, discriminator: 3)
!6620 = !DILocation(line: 1843, column: 1585, scope: !1279)
!6621 = !DILocation(line: 1843, column: 1632, scope: !1279)
!6622 = !DILocation(line: 1843, column: 1639, scope: !1279)
!6623 = !DILocation(line: 1843, column: 1652, scope: !1279)
!6624 = !DILocation(line: 1843, column: 1663, scope: !1279)
!6625 = !DILocation(line: 1843, column: 1673, scope: !1279)
!6626 = !DILocation(line: 1843, column: 1671, scope: !1279)
!6627 = !DILocation(line: 1843, column: 1731, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !1279, file: !408, line: 1843, column: 1731)
!6629 = !DILocation(line: 1843, column: 1740, scope: !6628)
!6630 = !DILocation(line: 1843, column: 1744, scope: !6628)
!6631 = !DILocation(line: 1843, column: 1747, scope: !6632)
!6632 = !DILexicalBlockFile(scope: !6628, file: !408, discriminator: 5)
!6633 = !DILocation(line: 1843, column: 1756, scope: !6628)
!6634 = !DILocation(line: 1843, column: 1731, scope: !1279)
!6635 = !DILocation(line: 1843, column: 1776, scope: !6636)
!6636 = !DILexicalBlockFile(scope: !6637, file: !408, discriminator: 7)
!6637 = distinct !DILexicalBlock(scope: !6628, file: !408, line: 1843, column: 1762)
!6638 = !DILocation(line: 1843, column: 1786, scope: !6637)
!6639 = !DILocation(line: 1843, column: 1784, scope: !6637)
!6640 = !DILocation(line: 1843, column: 1773, scope: !6637)
!6641 = !DILocation(line: 1843, column: 1845, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6637, file: !408, line: 1843, column: 1845)
!6643 = !DILocation(line: 1843, column: 1854, scope: !6642)
!6644 = !DILocation(line: 1843, column: 1858, scope: !6642)
!6645 = !DILocation(line: 1843, column: 1861, scope: !6646)
!6646 = !DILexicalBlockFile(scope: !6642, file: !408, discriminator: 9)
!6647 = !DILocation(line: 1843, column: 1870, scope: !6642)
!6648 = !DILocation(line: 1843, column: 1845, scope: !6637)
!6649 = !DILocation(line: 1843, column: 1890, scope: !6650)
!6650 = !DILexicalBlockFile(scope: !6651, file: !408, discriminator: 11)
!6651 = distinct !DILexicalBlock(scope: !6642, file: !408, line: 1843, column: 1876)
!6652 = !DILocation(line: 1843, column: 1900, scope: !6651)
!6653 = !DILocation(line: 1843, column: 1898, scope: !6651)
!6654 = !DILocation(line: 1843, column: 1887, scope: !6651)
!6655 = !DILocation(line: 1843, column: 1959, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6651, file: !408, line: 1843, column: 1959)
!6657 = !DILocation(line: 1843, column: 1968, scope: !6656)
!6658 = !DILocation(line: 1843, column: 1972, scope: !6656)
!6659 = !DILocation(line: 1843, column: 1975, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6656, file: !408, discriminator: 13)
!6661 = !DILocation(line: 1843, column: 1984, scope: !6656)
!6662 = !DILocation(line: 1843, column: 1959, scope: !6651)
!6663 = !DILocation(line: 1843, column: 2002, scope: !6664)
!6664 = !DILexicalBlockFile(scope: !6656, file: !408, discriminator: 15)
!6665 = !DILocation(line: 1843, column: 2012, scope: !6656)
!6666 = !DILocation(line: 1843, column: 2010, scope: !6656)
!6667 = !DILocation(line: 1843, column: 1999, scope: !6656)
!6668 = !DILocation(line: 1843, column: 1990, scope: !6656)
!6669 = !DILocation(line: 1843, column: 2067, scope: !6670)
!6670 = !DILexicalBlockFile(scope: !6671, file: !408, discriminator: 17)
!6671 = !DILexicalBlockFile(scope: !6672, file: !408, discriminator: 16)
!6672 = !DILexicalBlockFile(scope: !6651, file: !408, discriminator: 14)
!6673 = !DILocation(line: 1843, column: 2069, scope: !6674)
!6674 = !DILexicalBlockFile(scope: !6675, file: !408, discriminator: 18)
!6675 = !DILexicalBlockFile(scope: !6676, file: !408, discriminator: 12)
!6676 = !DILexicalBlockFile(scope: !6637, file: !408, discriminator: 10)
!6677 = !DILocation(line: 1843, column: 2071, scope: !6678)
!6678 = !DILexicalBlockFile(scope: !6679, file: !408, discriminator: 19)
!6679 = !DILexicalBlockFile(scope: !6680, file: !408, discriminator: 8)
!6680 = !DILexicalBlockFile(scope: !1279, file: !408, discriminator: 6)
!6681 = !DILocation(line: 1843, column: 1759, scope: !6628)
!6682 = !DILocation(line: 1843, column: 2081, scope: !1275)
!6683 = !DILocation(line: 1843, column: 2081, scope: !1279)
!6684 = !DILocation(line: 1843, column: 2106, scope: !6685)
!6685 = !DILexicalBlockFile(scope: !6686, file: !408, discriminator: 4)
!6686 = !DILexicalBlockFile(scope: !1275, file: !408, discriminator: 2)
!6687 = !DILocation(line: 1843, column: 2088, scope: !1275)
!6688 = !DILocation(line: 1843, column: 33, scope: !6689)
!6689 = !DILexicalBlockFile(scope: !6690, file: !408, discriminator: 21)
!6690 = !DILexicalBlockFile(scope: !1275, file: !408, discriminator: 20)
!6691 = !DILocation(line: 1843, column: 2124, scope: !1276)
!6692 = !DILocation(line: 1843, column: 2124, scope: !1275)
!6693 = !DILocation(line: 1843, column: 2127, scope: !1276)
!6694 = !DILocation(line: 1843, column: 16, scope: !1266)
!6695 = !DILocation(line: 1844, column: 9, scope: !1283)
!6696 = !DILocation(line: 1844, column: 14, scope: !6697)
!6697 = !DILexicalBlockFile(scope: !1282, file: !408, discriminator: 1)
!6698 = !DILocation(line: 1844, column: 24, scope: !1282)
!6699 = !DILocation(line: 1844, column: 84, scope: !1282)
!6700 = !DILocation(line: 1844, column: 90, scope: !1282)
!6701 = !DILocation(line: 1844, column: 68, scope: !1282)
!6702 = !DILocation(line: 1844, column: 96, scope: !1282)
!6703 = !DILocation(line: 1844, column: 55, scope: !1282)
!6704 = !DILocation(line: 1844, column: 127, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !1282, file: !408, line: 1844, column: 124)
!6706 = !DILocation(line: 1844, column: 144, scope: !6705)
!6707 = !DILocation(line: 1844, column: 124, scope: !6705)
!6708 = !DILocation(line: 1844, column: 154, scope: !6705)
!6709 = !DILocation(line: 1844, column: 124, scope: !1282)
!6710 = !DILocation(line: 1844, column: 124, scope: !6711)
!6711 = !DILexicalBlockFile(scope: !1282, file: !408, discriminator: 2)
!6712 = !DILocation(line: 1844, column: 185, scope: !6713)
!6713 = !DILexicalBlockFile(scope: !6705, file: !408, discriminator: 3)
!6714 = !DILocation(line: 1844, column: 203, scope: !6705)
!6715 = !DILocation(line: 1844, column: 213, scope: !6705)
!6716 = !DILocation(line: 1844, column: 238, scope: !6705)
!6717 = !DILocation(line: 1844, column: 169, scope: !6705)
!6718 = !DILocation(line: 1844, column: 257, scope: !6719)
!6719 = !DILexicalBlockFile(scope: !1283, file: !408, discriminator: 4)
!6720 = !DILocation(line: 1844, column: 257, scope: !1282)
!6721 = !DILocation(line: 1844, column: 257, scope: !6722)
!6722 = !DILexicalBlockFile(scope: !1282, file: !408, discriminator: 5)
!6723 = !DILocation(line: 1845, column: 22, scope: !1283)
!6724 = !DILocation(line: 1845, column: 9, scope: !1283)
!6725 = !DILocation(line: 1845, column: 15, scope: !1283)
!6726 = !DILocation(line: 1845, column: 20, scope: !1283)
!6727 = !DILocation(line: 1846, column: 25, scope: !1283)
!6728 = !DILocation(line: 1846, column: 31, scope: !1283)
!6729 = !DILocation(line: 1846, column: 39, scope: !1283)
!6730 = !DILocation(line: 1846, column: 48, scope: !1283)
!6731 = !DILocation(line: 1847, column: 5, scope: !1283)
!6732 = !DILocation(line: 1847, column: 33, scope: !1285)
!6733 = !DILocation(line: 1847, column: 40, scope: !1285)
!6734 = !DILocation(line: 1847, column: 50, scope: !1285)
!6735 = !DILocation(line: 1847, column: 1357, scope: !1285)
!6736 = !DILocation(line: 1847, column: 1370, scope: !6737)
!6737 = !DILexicalBlockFile(scope: !1285, file: !408, discriminator: 1)
!6738 = !DILocation(line: 1847, column: 1389, scope: !1285)
!6739 = !DILocation(line: 1847, column: 1398, scope: !1285)
!6740 = !DILocation(line: 1847, column: 1247, scope: !1285)
!6741 = !DILocation(line: 1847, column: 1564, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !1289, file: !408, discriminator: 3)
!6743 = !DILocation(line: 1847, column: 1585, scope: !1289)
!6744 = !DILocation(line: 1847, column: 1632, scope: !1289)
!6745 = !DILocation(line: 1847, column: 1639, scope: !1289)
!6746 = !DILocation(line: 1847, column: 1652, scope: !1289)
!6747 = !DILocation(line: 1847, column: 1663, scope: !1289)
!6748 = !DILocation(line: 1847, column: 1673, scope: !1289)
!6749 = !DILocation(line: 1847, column: 1671, scope: !1289)
!6750 = !DILocation(line: 1847, column: 1731, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !1289, file: !408, line: 1847, column: 1731)
!6752 = !DILocation(line: 1847, column: 1740, scope: !6751)
!6753 = !DILocation(line: 1847, column: 1744, scope: !6751)
!6754 = !DILocation(line: 1847, column: 1747, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !6751, file: !408, discriminator: 5)
!6756 = !DILocation(line: 1847, column: 1756, scope: !6751)
!6757 = !DILocation(line: 1847, column: 1731, scope: !1289)
!6758 = !DILocation(line: 1847, column: 1776, scope: !6759)
!6759 = !DILexicalBlockFile(scope: !6760, file: !408, discriminator: 7)
!6760 = distinct !DILexicalBlock(scope: !6751, file: !408, line: 1847, column: 1762)
!6761 = !DILocation(line: 1847, column: 1786, scope: !6760)
!6762 = !DILocation(line: 1847, column: 1784, scope: !6760)
!6763 = !DILocation(line: 1847, column: 1773, scope: !6760)
!6764 = !DILocation(line: 1847, column: 1845, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6760, file: !408, line: 1847, column: 1845)
!6766 = !DILocation(line: 1847, column: 1854, scope: !6765)
!6767 = !DILocation(line: 1847, column: 1858, scope: !6765)
!6768 = !DILocation(line: 1847, column: 1861, scope: !6769)
!6769 = !DILexicalBlockFile(scope: !6765, file: !408, discriminator: 9)
!6770 = !DILocation(line: 1847, column: 1870, scope: !6765)
!6771 = !DILocation(line: 1847, column: 1845, scope: !6760)
!6772 = !DILocation(line: 1847, column: 1890, scope: !6773)
!6773 = !DILexicalBlockFile(scope: !6774, file: !408, discriminator: 11)
!6774 = distinct !DILexicalBlock(scope: !6765, file: !408, line: 1847, column: 1876)
!6775 = !DILocation(line: 1847, column: 1900, scope: !6774)
!6776 = !DILocation(line: 1847, column: 1898, scope: !6774)
!6777 = !DILocation(line: 1847, column: 1887, scope: !6774)
!6778 = !DILocation(line: 1847, column: 1959, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6774, file: !408, line: 1847, column: 1959)
!6780 = !DILocation(line: 1847, column: 1968, scope: !6779)
!6781 = !DILocation(line: 1847, column: 1972, scope: !6779)
!6782 = !DILocation(line: 1847, column: 1975, scope: !6783)
!6783 = !DILexicalBlockFile(scope: !6779, file: !408, discriminator: 13)
!6784 = !DILocation(line: 1847, column: 1984, scope: !6779)
!6785 = !DILocation(line: 1847, column: 1959, scope: !6774)
!6786 = !DILocation(line: 1847, column: 2002, scope: !6787)
!6787 = !DILexicalBlockFile(scope: !6779, file: !408, discriminator: 15)
!6788 = !DILocation(line: 1847, column: 2012, scope: !6779)
!6789 = !DILocation(line: 1847, column: 2010, scope: !6779)
!6790 = !DILocation(line: 1847, column: 1999, scope: !6779)
!6791 = !DILocation(line: 1847, column: 1990, scope: !6779)
!6792 = !DILocation(line: 1847, column: 2067, scope: !6793)
!6793 = !DILexicalBlockFile(scope: !6794, file: !408, discriminator: 17)
!6794 = !DILexicalBlockFile(scope: !6795, file: !408, discriminator: 16)
!6795 = !DILexicalBlockFile(scope: !6774, file: !408, discriminator: 14)
!6796 = !DILocation(line: 1847, column: 2069, scope: !6797)
!6797 = !DILexicalBlockFile(scope: !6798, file: !408, discriminator: 18)
!6798 = !DILexicalBlockFile(scope: !6799, file: !408, discriminator: 12)
!6799 = !DILexicalBlockFile(scope: !6760, file: !408, discriminator: 10)
!6800 = !DILocation(line: 1847, column: 2071, scope: !6801)
!6801 = !DILexicalBlockFile(scope: !6802, file: !408, discriminator: 19)
!6802 = !DILexicalBlockFile(scope: !6803, file: !408, discriminator: 8)
!6803 = !DILexicalBlockFile(scope: !1289, file: !408, discriminator: 6)
!6804 = !DILocation(line: 1847, column: 1759, scope: !6751)
!6805 = !DILocation(line: 1847, column: 2081, scope: !1285)
!6806 = !DILocation(line: 1847, column: 2081, scope: !1289)
!6807 = !DILocation(line: 1847, column: 2106, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !6809, file: !408, discriminator: 4)
!6809 = !DILexicalBlockFile(scope: !1285, file: !408, discriminator: 2)
!6810 = !DILocation(line: 1847, column: 2088, scope: !1285)
!6811 = !DILocation(line: 1847, column: 33, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !6813, file: !408, discriminator: 21)
!6813 = !DILexicalBlockFile(scope: !1285, file: !408, discriminator: 20)
!6814 = !DILocation(line: 1847, column: 2124, scope: !1286)
!6815 = !DILocation(line: 1847, column: 2124, scope: !1285)
!6816 = !DILocation(line: 1847, column: 2127, scope: !1286)
!6817 = !DILocation(line: 1847, column: 16, scope: !1276)
!6818 = !DILocation(line: 1848, column: 9, scope: !1293)
!6819 = !DILocation(line: 1848, column: 14, scope: !6820)
!6820 = !DILexicalBlockFile(scope: !1292, file: !408, discriminator: 1)
!6821 = !DILocation(line: 1848, column: 24, scope: !1292)
!6822 = !DILocation(line: 1848, column: 84, scope: !1292)
!6823 = !DILocation(line: 1848, column: 90, scope: !1292)
!6824 = !DILocation(line: 1848, column: 68, scope: !1292)
!6825 = !DILocation(line: 1848, column: 96, scope: !1292)
!6826 = !DILocation(line: 1848, column: 55, scope: !1292)
!6827 = !DILocation(line: 1848, column: 127, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !1292, file: !408, line: 1848, column: 124)
!6829 = !DILocation(line: 1848, column: 144, scope: !6828)
!6830 = !DILocation(line: 1848, column: 124, scope: !6828)
!6831 = !DILocation(line: 1848, column: 154, scope: !6828)
!6832 = !DILocation(line: 1848, column: 124, scope: !1292)
!6833 = !DILocation(line: 1848, column: 124, scope: !6834)
!6834 = !DILexicalBlockFile(scope: !1292, file: !408, discriminator: 2)
!6835 = !DILocation(line: 1848, column: 185, scope: !6836)
!6836 = !DILexicalBlockFile(scope: !6828, file: !408, discriminator: 3)
!6837 = !DILocation(line: 1848, column: 203, scope: !6828)
!6838 = !DILocation(line: 1848, column: 213, scope: !6828)
!6839 = !DILocation(line: 1848, column: 238, scope: !6828)
!6840 = !DILocation(line: 1848, column: 169, scope: !6828)
!6841 = !DILocation(line: 1848, column: 257, scope: !6842)
!6842 = !DILexicalBlockFile(scope: !1293, file: !408, discriminator: 4)
!6843 = !DILocation(line: 1848, column: 257, scope: !1292)
!6844 = !DILocation(line: 1848, column: 257, scope: !6845)
!6845 = !DILexicalBlockFile(scope: !1292, file: !408, discriminator: 5)
!6846 = !DILocation(line: 1849, column: 22, scope: !1293)
!6847 = !DILocation(line: 1849, column: 9, scope: !1293)
!6848 = !DILocation(line: 1849, column: 15, scope: !1293)
!6849 = !DILocation(line: 1849, column: 20, scope: !1293)
!6850 = !DILocation(line: 1850, column: 25, scope: !1293)
!6851 = !DILocation(line: 1850, column: 31, scope: !1293)
!6852 = !DILocation(line: 1850, column: 39, scope: !1293)
!6853 = !DILocation(line: 1850, column: 48, scope: !1293)
!6854 = !DILocation(line: 1851, column: 5, scope: !1293)
!6855 = !DILocation(line: 1851, column: 33, scope: !1295)
!6856 = !DILocation(line: 1851, column: 40, scope: !1295)
!6857 = !DILocation(line: 1851, column: 50, scope: !1295)
!6858 = !DILocation(line: 1851, column: 1383, scope: !1295)
!6859 = !DILocation(line: 1851, column: 1396, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !1295, file: !408, discriminator: 1)
!6861 = !DILocation(line: 1851, column: 1417, scope: !1295)
!6862 = !DILocation(line: 1851, column: 1426, scope: !1295)
!6863 = !DILocation(line: 1851, column: 1267, scope: !1295)
!6864 = !DILocation(line: 1851, column: 1594, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !1299, file: !408, discriminator: 3)
!6866 = !DILocation(line: 1851, column: 1615, scope: !1299)
!6867 = !DILocation(line: 1851, column: 1662, scope: !1299)
!6868 = !DILocation(line: 1851, column: 1669, scope: !1299)
!6869 = !DILocation(line: 1851, column: 1682, scope: !1299)
!6870 = !DILocation(line: 1851, column: 1693, scope: !1299)
!6871 = !DILocation(line: 1851, column: 1703, scope: !1299)
!6872 = !DILocation(line: 1851, column: 1701, scope: !1299)
!6873 = !DILocation(line: 1851, column: 1763, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !1299, file: !408, line: 1851, column: 1763)
!6875 = !DILocation(line: 1851, column: 1772, scope: !6874)
!6876 = !DILocation(line: 1851, column: 1776, scope: !6874)
!6877 = !DILocation(line: 1851, column: 1779, scope: !6878)
!6878 = !DILexicalBlockFile(scope: !6874, file: !408, discriminator: 5)
!6879 = !DILocation(line: 1851, column: 1788, scope: !6874)
!6880 = !DILocation(line: 1851, column: 1763, scope: !1299)
!6881 = !DILocation(line: 1851, column: 1808, scope: !6882)
!6882 = !DILexicalBlockFile(scope: !6883, file: !408, discriminator: 7)
!6883 = distinct !DILexicalBlock(scope: !6874, file: !408, line: 1851, column: 1794)
!6884 = !DILocation(line: 1851, column: 1818, scope: !6883)
!6885 = !DILocation(line: 1851, column: 1816, scope: !6883)
!6886 = !DILocation(line: 1851, column: 1805, scope: !6883)
!6887 = !DILocation(line: 1851, column: 1879, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6883, file: !408, line: 1851, column: 1879)
!6889 = !DILocation(line: 1851, column: 1888, scope: !6888)
!6890 = !DILocation(line: 1851, column: 1892, scope: !6888)
!6891 = !DILocation(line: 1851, column: 1895, scope: !6892)
!6892 = !DILexicalBlockFile(scope: !6888, file: !408, discriminator: 9)
!6893 = !DILocation(line: 1851, column: 1904, scope: !6888)
!6894 = !DILocation(line: 1851, column: 1879, scope: !6883)
!6895 = !DILocation(line: 1851, column: 1924, scope: !6896)
!6896 = !DILexicalBlockFile(scope: !6897, file: !408, discriminator: 11)
!6897 = distinct !DILexicalBlock(scope: !6888, file: !408, line: 1851, column: 1910)
!6898 = !DILocation(line: 1851, column: 1934, scope: !6897)
!6899 = !DILocation(line: 1851, column: 1932, scope: !6897)
!6900 = !DILocation(line: 1851, column: 1921, scope: !6897)
!6901 = !DILocation(line: 1851, column: 1995, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6897, file: !408, line: 1851, column: 1995)
!6903 = !DILocation(line: 1851, column: 2004, scope: !6902)
!6904 = !DILocation(line: 1851, column: 2008, scope: !6902)
!6905 = !DILocation(line: 1851, column: 2011, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !6902, file: !408, discriminator: 13)
!6907 = !DILocation(line: 1851, column: 2020, scope: !6902)
!6908 = !DILocation(line: 1851, column: 1995, scope: !6897)
!6909 = !DILocation(line: 1851, column: 2038, scope: !6910)
!6910 = !DILexicalBlockFile(scope: !6902, file: !408, discriminator: 15)
!6911 = !DILocation(line: 1851, column: 2048, scope: !6902)
!6912 = !DILocation(line: 1851, column: 2046, scope: !6902)
!6913 = !DILocation(line: 1851, column: 2035, scope: !6902)
!6914 = !DILocation(line: 1851, column: 2026, scope: !6902)
!6915 = !DILocation(line: 1851, column: 2105, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6917, file: !408, discriminator: 17)
!6917 = !DILexicalBlockFile(scope: !6918, file: !408, discriminator: 16)
!6918 = !DILexicalBlockFile(scope: !6897, file: !408, discriminator: 14)
!6919 = !DILocation(line: 1851, column: 2107, scope: !6920)
!6920 = !DILexicalBlockFile(scope: !6921, file: !408, discriminator: 18)
!6921 = !DILexicalBlockFile(scope: !6922, file: !408, discriminator: 12)
!6922 = !DILexicalBlockFile(scope: !6883, file: !408, discriminator: 10)
!6923 = !DILocation(line: 1851, column: 2109, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6925, file: !408, discriminator: 19)
!6925 = !DILexicalBlockFile(scope: !6926, file: !408, discriminator: 8)
!6926 = !DILexicalBlockFile(scope: !1299, file: !408, discriminator: 6)
!6927 = !DILocation(line: 1851, column: 1791, scope: !6874)
!6928 = !DILocation(line: 1851, column: 2119, scope: !1295)
!6929 = !DILocation(line: 1851, column: 2119, scope: !1299)
!6930 = !DILocation(line: 1851, column: 2144, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !6932, file: !408, discriminator: 4)
!6932 = !DILexicalBlockFile(scope: !1295, file: !408, discriminator: 2)
!6933 = !DILocation(line: 1851, column: 2126, scope: !1295)
!6934 = !DILocation(line: 1851, column: 33, scope: !6935)
!6935 = !DILexicalBlockFile(scope: !6936, file: !408, discriminator: 21)
!6936 = !DILexicalBlockFile(scope: !1295, file: !408, discriminator: 20)
!6937 = !DILocation(line: 1851, column: 2164, scope: !1296)
!6938 = !DILocation(line: 1851, column: 2164, scope: !1295)
!6939 = !DILocation(line: 1851, column: 2167, scope: !1296)
!6940 = !DILocation(line: 1851, column: 16, scope: !1286)
!6941 = !DILocation(line: 1852, column: 14, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !1303, file: !408, line: 1852, column: 13)
!6943 = !DILocation(line: 1852, column: 20, scope: !6942)
!6944 = !DILocation(line: 1852, column: 13, scope: !1303)
!6945 = !DILocation(line: 1853, column: 30, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !408, line: 1853, column: 17)
!6947 = distinct !DILexicalBlock(scope: !6942, file: !408, line: 1852, column: 27)
!6948 = !DILocation(line: 1853, column: 17, scope: !6946)
!6949 = !DILocation(line: 1853, column: 48, scope: !6946)
!6950 = !DILocation(line: 1853, column: 17, scope: !6947)
!6951 = !DILocation(line: 1854, column: 17, scope: !6946)
!6952 = !DILocation(line: 1855, column: 9, scope: !6947)
!6953 = !DILocation(line: 1856, column: 9, scope: !1303)
!6954 = !DILocation(line: 1856, column: 14, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !1302, file: !408, discriminator: 1)
!6956 = !DILocation(line: 1856, column: 24, scope: !1302)
!6957 = !DILocation(line: 1856, column: 54, scope: !1302)
!6958 = !DILocation(line: 1856, column: 60, scope: !1302)
!6959 = !DILocation(line: 1856, column: 67, scope: !1302)
!6960 = !DILocation(line: 1856, column: 84, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !1302, file: !408, line: 1856, column: 81)
!6962 = !DILocation(line: 1856, column: 101, scope: !6961)
!6963 = !DILocation(line: 1856, column: 81, scope: !6961)
!6964 = !DILocation(line: 1856, column: 111, scope: !6961)
!6965 = !DILocation(line: 1856, column: 81, scope: !1302)
!6966 = !DILocation(line: 1856, column: 81, scope: !6967)
!6967 = !DILexicalBlockFile(scope: !1302, file: !408, discriminator: 2)
!6968 = !DILocation(line: 1856, column: 142, scope: !6969)
!6969 = !DILexicalBlockFile(scope: !6961, file: !408, discriminator: 3)
!6970 = !DILocation(line: 1856, column: 160, scope: !6961)
!6971 = !DILocation(line: 1856, column: 170, scope: !6961)
!6972 = !DILocation(line: 1856, column: 195, scope: !6961)
!6973 = !DILocation(line: 1856, column: 126, scope: !6961)
!6974 = !DILocation(line: 1856, column: 214, scope: !6975)
!6975 = !DILexicalBlockFile(scope: !1303, file: !408, discriminator: 4)
!6976 = !DILocation(line: 1856, column: 214, scope: !1302)
!6977 = !DILocation(line: 1856, column: 214, scope: !6978)
!6978 = !DILexicalBlockFile(scope: !1302, file: !408, discriminator: 5)
!6979 = !DILocation(line: 1857, column: 31, scope: !1303)
!6980 = !DILocation(line: 1857, column: 9, scope: !1303)
!6981 = !DILocation(line: 1857, column: 15, scope: !1303)
!6982 = !DILocation(line: 1857, column: 22, scope: !1303)
!6983 = !DILocation(line: 1857, column: 29, scope: !1303)
!6984 = !DILocation(line: 1858, column: 25, scope: !1303)
!6985 = !DILocation(line: 1858, column: 31, scope: !1303)
!6986 = !DILocation(line: 1858, column: 38, scope: !1303)
!6987 = !DILocation(line: 1858, column: 48, scope: !1303)
!6988 = !DILocation(line: 1858, column: 57, scope: !1303)
!6989 = !DILocation(line: 1859, column: 5, scope: !1303)
!6990 = !DILocation(line: 1860, column: 25, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !1296, file: !408, line: 1859, column: 12)
!6992 = !DILocation(line: 1860, column: 9, scope: !6991)
!6993 = !DILocation(line: 1862, column: 9, scope: !6991)
!6994 = !DILocation(line: 1865, column: 5, scope: !1256)
!6995 = !DILocation(line: 1866, column: 1, scope: !1256)
!6996 = !DILocation(line: 609, column: 36, scope: !1304)
!6997 = !DILocation(line: 609, column: 52, scope: !1304)
!6998 = !DILocation(line: 609, column: 65, scope: !1304)
!6999 = !DILocation(line: 611, column: 5, scope: !1304)
!7000 = !DILocation(line: 611, column: 14, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !1313, file: !408, discriminator: 1)
!7002 = !DILocation(line: 611, column: 20, scope: !1313)
!7003 = !DILocation(line: 611, column: 14, scope: !1313)
!7004 = !DILocation(line: 611, column: 14, scope: !1314)
!7005 = !DILocation(line: 611, column: 27, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !1312, file: !408, discriminator: 2)
!7007 = !DILocation(line: 611, column: 31, scope: !1312)
!7008 = !DILocation(line: 611, column: 38, scope: !1312)
!7009 = !DILocation(line: 611, column: 57, scope: !1312)
!7010 = !DILocation(line: 611, column: 63, scope: !1312)
!7011 = !DILocation(line: 611, column: 69, scope: !1312)
!7012 = !DILocation(line: 611, column: 79, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !1312, file: !408, line: 611, column: 79)
!7014 = !DILocation(line: 611, column: 79, scope: !1312)
!7015 = !DILocation(line: 611, column: 92, scope: !7016)
!7016 = !DILexicalBlockFile(scope: !7013, file: !408, discriminator: 4)
!7017 = !DILocation(line: 611, column: 85, scope: !7013)
!7018 = !DILocation(line: 611, column: 98, scope: !7019)
!7019 = !DILexicalBlockFile(scope: !1313, file: !408, discriminator: 5)
!7020 = !DILocation(line: 611, column: 98, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !7022, file: !408, discriminator: 7)
!7022 = !DILexicalBlockFile(scope: !1313, file: !408, discriminator: 6)
!7023 = !DILocation(line: 611, column: 98, scope: !1312)
!7024 = !DILocation(line: 611, column: 100, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !7026, file: !408, discriminator: 8)
!7026 = !DILexicalBlockFile(scope: !1314, file: !408, discriminator: 3)
!7027 = !DILocation(line: 612, column: 5, scope: !1304)
!7028 = !DILocation(line: 612, column: 44, scope: !7029)
!7029 = !DILexicalBlockFile(scope: !1317, file: !408, discriminator: 1)
!7030 = !DILocation(line: 612, column: 50, scope: !1317)
!7031 = !DILocation(line: 612, column: 28, scope: !1317)
!7032 = !DILocation(line: 612, column: 56, scope: !1317)
!7033 = !DILocation(line: 612, column: 15, scope: !1317)
!7034 = !DILocation(line: 612, column: 14, scope: !1318)
!7035 = !DILocation(line: 612, column: 80, scope: !7036)
!7036 = !DILexicalBlockFile(scope: !1316, file: !408, discriminator: 2)
!7037 = !DILocation(line: 612, column: 84, scope: !1316)
!7038 = !DILocation(line: 612, column: 91, scope: !1316)
!7039 = !DILocation(line: 612, column: 140, scope: !1316)
!7040 = !DILocation(line: 612, column: 146, scope: !1316)
!7041 = !DILocation(line: 612, column: 124, scope: !1316)
!7042 = !DILocation(line: 612, column: 152, scope: !1316)
!7043 = !DILocation(line: 612, column: 111, scope: !1316)
!7044 = !DILocation(line: 612, column: 175, scope: !1316)
!7045 = !DILocation(line: 612, column: 185, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !1316, file: !408, line: 612, column: 185)
!7047 = !DILocation(line: 612, column: 185, scope: !1316)
!7048 = !DILocation(line: 612, column: 198, scope: !7049)
!7049 = !DILexicalBlockFile(scope: !7046, file: !408, discriminator: 4)
!7050 = !DILocation(line: 612, column: 191, scope: !7046)
!7051 = !DILocation(line: 612, column: 204, scope: !7052)
!7052 = !DILexicalBlockFile(scope: !1317, file: !408, discriminator: 5)
!7053 = !DILocation(line: 612, column: 204, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !7055, file: !408, discriminator: 7)
!7055 = !DILexicalBlockFile(scope: !1317, file: !408, discriminator: 6)
!7056 = !DILocation(line: 612, column: 204, scope: !1316)
!7057 = !DILocation(line: 612, column: 206, scope: !7058)
!7058 = !DILexicalBlockFile(scope: !7059, file: !408, discriminator: 8)
!7059 = !DILexicalBlockFile(scope: !1318, file: !408, discriminator: 3)
!7060 = !DILocation(line: 613, column: 5, scope: !1304)
!7061 = !DILocation(line: 613, column: 44, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !1321, file: !408, discriminator: 1)
!7063 = !DILocation(line: 613, column: 50, scope: !1321)
!7064 = !DILocation(line: 613, column: 28, scope: !1321)
!7065 = !DILocation(line: 613, column: 56, scope: !1321)
!7066 = !DILocation(line: 613, column: 15, scope: !1321)
!7067 = !DILocation(line: 613, column: 14, scope: !1322)
!7068 = !DILocation(line: 613, column: 80, scope: !7069)
!7069 = !DILexicalBlockFile(scope: !1320, file: !408, discriminator: 2)
!7070 = !DILocation(line: 613, column: 84, scope: !1320)
!7071 = !DILocation(line: 613, column: 91, scope: !1320)
!7072 = !DILocation(line: 613, column: 140, scope: !1320)
!7073 = !DILocation(line: 613, column: 146, scope: !1320)
!7074 = !DILocation(line: 613, column: 124, scope: !1320)
!7075 = !DILocation(line: 613, column: 152, scope: !1320)
!7076 = !DILocation(line: 613, column: 111, scope: !1320)
!7077 = !DILocation(line: 613, column: 175, scope: !1320)
!7078 = !DILocation(line: 613, column: 185, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !1320, file: !408, line: 613, column: 185)
!7080 = !DILocation(line: 613, column: 185, scope: !1320)
!7081 = !DILocation(line: 613, column: 198, scope: !7082)
!7082 = !DILexicalBlockFile(scope: !7079, file: !408, discriminator: 4)
!7083 = !DILocation(line: 613, column: 191, scope: !7079)
!7084 = !DILocation(line: 613, column: 204, scope: !7085)
!7085 = !DILexicalBlockFile(scope: !1321, file: !408, discriminator: 5)
!7086 = !DILocation(line: 613, column: 204, scope: !7087)
!7087 = !DILexicalBlockFile(scope: !7088, file: !408, discriminator: 7)
!7088 = !DILexicalBlockFile(scope: !1321, file: !408, discriminator: 6)
!7089 = !DILocation(line: 613, column: 204, scope: !1320)
!7090 = !DILocation(line: 613, column: 206, scope: !7091)
!7091 = !DILexicalBlockFile(scope: !7092, file: !408, discriminator: 8)
!7092 = !DILexicalBlockFile(scope: !1322, file: !408, discriminator: 3)
!7093 = !DILocation(line: 615, column: 9, scope: !1325)
!7094 = !DILocation(line: 615, column: 15, scope: !1325)
!7095 = !DILocation(line: 615, column: 9, scope: !1304)
!7096 = !DILocation(line: 616, column: 9, scope: !1324)
!7097 = !DILocation(line: 616, column: 13, scope: !1324)
!7098 = !DILocation(line: 617, column: 9, scope: !1324)
!7099 = !DILocation(line: 617, column: 18, scope: !7100)
!7100 = !DILexicalBlockFile(scope: !1328, file: !408, discriminator: 1)
!7101 = !DILocation(line: 617, column: 24, scope: !1328)
!7102 = !DILocation(line: 617, column: 31, scope: !1328)
!7103 = !DILocation(line: 617, column: 18, scope: !1328)
!7104 = !DILocation(line: 617, column: 18, scope: !1329)
!7105 = !DILocation(line: 617, column: 41, scope: !7106)
!7106 = !DILexicalBlockFile(scope: !1327, file: !408, discriminator: 2)
!7107 = !DILocation(line: 617, column: 45, scope: !1327)
!7108 = !DILocation(line: 617, column: 52, scope: !1327)
!7109 = !DILocation(line: 617, column: 71, scope: !1327)
!7110 = !DILocation(line: 617, column: 77, scope: !1327)
!7111 = !DILocation(line: 617, column: 84, scope: !1327)
!7112 = !DILocation(line: 617, column: 93, scope: !1327)
!7113 = !DILocation(line: 617, column: 103, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !1327, file: !408, line: 617, column: 103)
!7115 = !DILocation(line: 617, column: 103, scope: !1327)
!7116 = !DILocation(line: 617, column: 116, scope: !7117)
!7117 = !DILexicalBlockFile(scope: !7114, file: !408, discriminator: 4)
!7118 = !DILocation(line: 617, column: 109, scope: !7114)
!7119 = !DILocation(line: 617, column: 122, scope: !7120)
!7120 = !DILexicalBlockFile(scope: !1328, file: !408, discriminator: 5)
!7121 = !DILocation(line: 617, column: 122, scope: !7122)
!7122 = !DILexicalBlockFile(scope: !7123, file: !408, discriminator: 7)
!7123 = !DILexicalBlockFile(scope: !1328, file: !408, discriminator: 6)
!7124 = !DILocation(line: 617, column: 122, scope: !1327)
!7125 = !DILocation(line: 617, column: 124, scope: !7126)
!7126 = !DILexicalBlockFile(scope: !7127, file: !408, discriminator: 8)
!7127 = !DILexicalBlockFile(scope: !1329, file: !408, discriminator: 3)
!7128 = !DILocation(line: 617, column: 124, scope: !7129)
!7129 = !DILexicalBlockFile(scope: !1329, file: !408, discriminator: 9)
!7130 = !DILocation(line: 619, column: 16, scope: !1335)
!7131 = !DILocation(line: 619, column: 14, scope: !1335)
!7132 = !DILocation(line: 619, column: 21, scope: !7133)
!7133 = !DILexicalBlockFile(scope: !7134, file: !408, discriminator: 2)
!7134 = !DILexicalBlockFile(scope: !1334, file: !408, discriminator: 1)
!7135 = !DILocation(line: 619, column: 25, scope: !1334)
!7136 = !DILocation(line: 619, column: 31, scope: !1334)
!7137 = !DILocation(line: 619, column: 38, scope: !1334)
!7138 = !DILocation(line: 619, column: 23, scope: !1334)
!7139 = !DILocation(line: 619, column: 9, scope: !1335)
!7140 = !DILocation(line: 620, column: 13, scope: !1334)
!7141 = !DILocation(line: 620, column: 44, scope: !7142)
!7142 = !DILexicalBlockFile(scope: !1332, file: !408, discriminator: 1)
!7143 = !DILocation(line: 620, column: 22, scope: !1332)
!7144 = !DILocation(line: 620, column: 28, scope: !1332)
!7145 = !DILocation(line: 620, column: 35, scope: !1332)
!7146 = !DILocation(line: 620, column: 22, scope: !1333)
!7147 = !DILocation(line: 620, column: 50, scope: !7148)
!7148 = !DILexicalBlockFile(scope: !1331, file: !408, discriminator: 2)
!7149 = !DILocation(line: 620, column: 54, scope: !1331)
!7150 = !DILocation(line: 620, column: 61, scope: !1331)
!7151 = !DILocation(line: 620, column: 102, scope: !1331)
!7152 = !DILocation(line: 620, column: 80, scope: !1331)
!7153 = !DILocation(line: 620, column: 86, scope: !1331)
!7154 = !DILocation(line: 620, column: 93, scope: !1331)
!7155 = !DILocation(line: 620, column: 107, scope: !1331)
!7156 = !DILocation(line: 620, column: 117, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !1331, file: !408, line: 620, column: 117)
!7158 = !DILocation(line: 620, column: 117, scope: !1331)
!7159 = !DILocation(line: 620, column: 130, scope: !7160)
!7160 = !DILexicalBlockFile(scope: !7157, file: !408, discriminator: 4)
!7161 = !DILocation(line: 620, column: 123, scope: !7157)
!7162 = !DILocation(line: 620, column: 136, scope: !7163)
!7163 = !DILexicalBlockFile(scope: !1332, file: !408, discriminator: 5)
!7164 = !DILocation(line: 620, column: 136, scope: !7165)
!7165 = !DILexicalBlockFile(scope: !7166, file: !408, discriminator: 7)
!7166 = !DILexicalBlockFile(scope: !1332, file: !408, discriminator: 6)
!7167 = !DILocation(line: 620, column: 136, scope: !1331)
!7168 = !DILocation(line: 620, column: 138, scope: !7169)
!7169 = !DILexicalBlockFile(scope: !7170, file: !408, discriminator: 8)
!7170 = !DILexicalBlockFile(scope: !1333, file: !408, discriminator: 3)
!7171 = !DILocation(line: 620, column: 138, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !1333, file: !408, discriminator: 9)
!7173 = !DILocation(line: 620, column: 138, scope: !7174)
!7174 = !DILexicalBlockFile(scope: !1333, file: !408, discriminator: 10)
!7175 = !DILocation(line: 619, column: 46, scope: !1334)
!7176 = !DILocation(line: 619, column: 9, scope: !1334)
!7177 = !DILocation(line: 621, column: 5, scope: !1325)
!7178 = !DILocation(line: 621, column: 5, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !1325, file: !408, discriminator: 1)
!7180 = !DILocation(line: 621, column: 5, scope: !1324)
!7181 = !DILocation(line: 622, column: 5, scope: !1304)
!7182 = !DILocation(line: 623, column: 1, scope: !1304)
!7183 = !DILocation(line: 626, column: 33, scope: !1336)
!7184 = !DILocation(line: 628, column: 5, scope: !1336)
!7185 = !DILocation(line: 628, column: 10, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !1342, file: !408, discriminator: 1)
!7187 = !DILocation(line: 628, column: 20, scope: !1342)
!7188 = !DILocation(line: 628, column: 43, scope: !1342)
!7189 = !DILocation(line: 628, column: 49, scope: !1342)
!7190 = !DILocation(line: 628, column: 59, scope: !1346)
!7191 = !DILocation(line: 628, column: 67, scope: !1346)
!7192 = !DILocation(line: 628, column: 59, scope: !1342)
!7193 = !DILocation(line: 628, column: 85, scope: !7194)
!7194 = !DILexicalBlockFile(scope: !1345, file: !408, discriminator: 2)
!7195 = !DILocation(line: 628, column: 91, scope: !1345)
!7196 = !DILocation(line: 628, column: 96, scope: !1345)
!7197 = !DILocation(line: 628, column: 110, scope: !1345)
!7198 = !DILocation(line: 628, column: 115, scope: !7199)
!7199 = !DILexicalBlockFile(scope: !1344, file: !408, discriminator: 4)
!7200 = !DILocation(line: 628, column: 125, scope: !1344)
!7201 = !DILocation(line: 628, column: 155, scope: !1344)
!7202 = !DILocation(line: 628, column: 173, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !1344, file: !408, line: 628, column: 170)
!7204 = !DILocation(line: 628, column: 190, scope: !7203)
!7205 = !DILocation(line: 628, column: 170, scope: !7203)
!7206 = !DILocation(line: 628, column: 200, scope: !7203)
!7207 = !DILocation(line: 628, column: 170, scope: !1344)
!7208 = !DILocation(line: 628, column: 170, scope: !7209)
!7209 = !DILexicalBlockFile(scope: !1344, file: !408, discriminator: 5)
!7210 = !DILocation(line: 628, column: 231, scope: !7211)
!7211 = !DILexicalBlockFile(scope: !7203, file: !408, discriminator: 6)
!7212 = !DILocation(line: 628, column: 249, scope: !7203)
!7213 = !DILocation(line: 628, column: 259, scope: !7203)
!7214 = !DILocation(line: 628, column: 284, scope: !7203)
!7215 = !DILocation(line: 628, column: 215, scope: !7203)
!7216 = !DILocation(line: 628, column: 303, scope: !7217)
!7217 = !DILexicalBlockFile(scope: !1345, file: !408, discriminator: 7)
!7218 = !DILocation(line: 628, column: 303, scope: !1344)
!7219 = !DILocation(line: 628, column: 303, scope: !7220)
!7220 = !DILexicalBlockFile(scope: !1344, file: !408, discriminator: 8)
!7221 = !DILocation(line: 628, column: 316, scope: !7222)
!7222 = !DILexicalBlockFile(scope: !1345, file: !408, discriminator: 9)
!7223 = !DILocation(line: 628, column: 318, scope: !7224)
!7224 = !DILexicalBlockFile(scope: !7225, file: !408, discriminator: 10)
!7225 = !DILexicalBlockFile(scope: !1336, file: !408, discriminator: 3)
!7226 = !DILocation(line: 628, column: 318, scope: !1342)
!7227 = !DILocation(line: 629, column: 24, scope: !1336)
!7228 = !DILocation(line: 629, column: 30, scope: !1336)
!7229 = !DILocation(line: 629, column: 5, scope: !1336)
!7230 = !DILocation(line: 630, column: 24, scope: !1336)
!7231 = !DILocation(line: 630, column: 30, scope: !1336)
!7232 = !DILocation(line: 630, column: 5, scope: !1336)
!7233 = !DILocation(line: 635, column: 19, scope: !1336)
!7234 = !DILocation(line: 635, column: 5, scope: !1336)
!7235 = !DILocation(line: 636, column: 5, scope: !1336)
!7236 = !DILocation(line: 372, column: 24, scope: !1701)
!7237 = !DILocation(line: 372, column: 40, scope: !1701)
!7238 = !DILocation(line: 372, column: 56, scope: !1701)
!7239 = !DILocation(line: 374, column: 5, scope: !1701)
!7240 = !DILocation(line: 374, column: 15, scope: !1701)
!7241 = !DILocation(line: 375, column: 5, scope: !1701)
!7242 = !DILocation(line: 375, column: 15, scope: !1701)
!7243 = !DILocation(line: 376, column: 5, scope: !1701)
!7244 = !DILocation(line: 376, column: 15, scope: !1701)
!7245 = !DILocation(line: 377, column: 5, scope: !1701)
!7246 = !DILocation(line: 377, column: 20, scope: !1701)
!7247 = !DILocation(line: 379, column: 27, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !1701, file: !408, line: 379, column: 9)
!7249 = !DILocation(line: 379, column: 10, scope: !7248)
!7250 = !DILocation(line: 379, column: 9, scope: !1701)
!7251 = !DILocation(line: 380, column: 9, scope: !7248)
!7252 = !DILocation(line: 382, column: 9, scope: !1717)
!7253 = !DILocation(line: 382, column: 9, scope: !1701)
!7254 = !DILocation(line: 384, column: 30, scope: !1716)
!7255 = !DILocation(line: 384, column: 18, scope: !1716)
!7256 = !DILocation(line: 384, column: 16, scope: !1716)
!7257 = !DILocation(line: 385, column: 14, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !1716, file: !408, line: 385, column: 13)
!7259 = !DILocation(line: 385, column: 13, scope: !1716)
!7260 = !DILocation(line: 386, column: 13, scope: !7258)
!7261 = !DILocation(line: 387, column: 13, scope: !1715)
!7262 = !DILocation(line: 387, column: 13, scope: !1716)
!7263 = !DILocation(line: 388, column: 31, scope: !1713)
!7264 = !DILocation(line: 388, column: 39, scope: !1713)
!7265 = !DILocation(line: 388, column: 17, scope: !1713)
!7266 = !DILocation(line: 388, column: 45, scope: !1713)
!7267 = !DILocation(line: 388, column: 17, scope: !1714)
!7268 = !DILocation(line: 389, column: 17, scope: !1712)
!7269 = !DILocation(line: 389, column: 22, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !1711, file: !408, discriminator: 1)
!7271 = !DILocation(line: 389, column: 32, scope: !1711)
!7272 = !DILocation(line: 389, column: 62, scope: !1711)
!7273 = !DILocation(line: 389, column: 79, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !1711, file: !408, line: 389, column: 76)
!7275 = !DILocation(line: 389, column: 96, scope: !7274)
!7276 = !DILocation(line: 389, column: 76, scope: !7274)
!7277 = !DILocation(line: 389, column: 106, scope: !7274)
!7278 = !DILocation(line: 389, column: 76, scope: !1711)
!7279 = !DILocation(line: 389, column: 76, scope: !7280)
!7280 = !DILexicalBlockFile(scope: !1711, file: !408, discriminator: 2)
!7281 = !DILocation(line: 389, column: 137, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !7274, file: !408, discriminator: 3)
!7283 = !DILocation(line: 389, column: 155, scope: !7274)
!7284 = !DILocation(line: 389, column: 165, scope: !7274)
!7285 = !DILocation(line: 389, column: 190, scope: !7274)
!7286 = !DILocation(line: 389, column: 121, scope: !7274)
!7287 = !DILocation(line: 389, column: 209, scope: !7288)
!7288 = !DILexicalBlockFile(scope: !1712, file: !408, discriminator: 4)
!7289 = !DILocation(line: 389, column: 209, scope: !1711)
!7290 = !DILocation(line: 389, column: 209, scope: !7291)
!7291 = !DILexicalBlockFile(scope: !1711, file: !408, discriminator: 5)
!7292 = !DILocation(line: 390, column: 17, scope: !1712)
!7293 = !DILocation(line: 392, column: 9, scope: !1714)
!7294 = !DILocation(line: 393, column: 5, scope: !1716)
!7295 = !DILocation(line: 393, column: 16, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !1717, file: !408, line: 393, column: 16)
!7297 = !DILocation(line: 393, column: 16, scope: !1717)
!7298 = !DILocation(line: 395, column: 43, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7296, file: !408, line: 393, column: 22)
!7300 = !DILocation(line: 395, column: 18, scope: !7299)
!7301 = !DILocation(line: 395, column: 16, scope: !7299)
!7302 = !DILocation(line: 396, column: 14, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !408, line: 396, column: 13)
!7304 = !DILocation(line: 396, column: 13, scope: !7299)
!7305 = !DILocation(line: 397, column: 13, scope: !7303)
!7306 = !DILocation(line: 398, column: 5, scope: !7299)
!7307 = !DILocation(line: 400, column: 34, scope: !1701)
!7308 = !DILocation(line: 400, column: 17, scope: !1701)
!7309 = !DILocation(line: 400, column: 15, scope: !1701)
!7310 = !DILocation(line: 402, column: 9, scope: !1723)
!7311 = !DILocation(line: 402, column: 16, scope: !1723)
!7312 = !DILocation(line: 402, column: 30, scope: !1723)
!7313 = !DILocation(line: 402, column: 48, scope: !7314)
!7314 = !DILexicalBlockFile(scope: !1723, file: !408, discriminator: 1)
!7315 = !DILocation(line: 402, column: 34, scope: !1723)
!7316 = !DILocation(line: 402, column: 9, scope: !1701)
!7317 = !DILocation(line: 403, column: 26, scope: !1721)
!7318 = !DILocation(line: 403, column: 37, scope: !1721)
!7319 = !DILocation(line: 403, column: 13, scope: !1721)
!7320 = !DILocation(line: 403, column: 45, scope: !1721)
!7321 = !DILocation(line: 403, column: 13, scope: !1722)
!7322 = !DILocation(line: 404, column: 13, scope: !1720)
!7323 = !DILocation(line: 404, column: 18, scope: !7324)
!7324 = !DILexicalBlockFile(scope: !1719, file: !408, discriminator: 1)
!7325 = !DILocation(line: 404, column: 28, scope: !1719)
!7326 = !DILocation(line: 404, column: 58, scope: !1719)
!7327 = !DILocation(line: 404, column: 75, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !1719, file: !408, line: 404, column: 72)
!7329 = !DILocation(line: 404, column: 92, scope: !7328)
!7330 = !DILocation(line: 404, column: 72, scope: !7328)
!7331 = !DILocation(line: 404, column: 102, scope: !7328)
!7332 = !DILocation(line: 404, column: 72, scope: !1719)
!7333 = !DILocation(line: 404, column: 72, scope: !7334)
!7334 = !DILexicalBlockFile(scope: !1719, file: !408, discriminator: 2)
!7335 = !DILocation(line: 404, column: 133, scope: !7336)
!7336 = !DILexicalBlockFile(scope: !7328, file: !408, discriminator: 3)
!7337 = !DILocation(line: 404, column: 151, scope: !7328)
!7338 = !DILocation(line: 404, column: 161, scope: !7328)
!7339 = !DILocation(line: 404, column: 186, scope: !7328)
!7340 = !DILocation(line: 404, column: 117, scope: !7328)
!7341 = !DILocation(line: 404, column: 205, scope: !7342)
!7342 = !DILexicalBlockFile(scope: !1720, file: !408, discriminator: 4)
!7343 = !DILocation(line: 404, column: 205, scope: !1719)
!7344 = !DILocation(line: 404, column: 205, scope: !7345)
!7345 = !DILexicalBlockFile(scope: !1719, file: !408, discriminator: 5)
!7346 = !DILocation(line: 405, column: 13, scope: !1720)
!7347 = !DILocation(line: 407, column: 5, scope: !1722)
!7348 = !DILocation(line: 410, column: 5, scope: !1701)
!7349 = !DILocation(line: 410, column: 10, scope: !7350)
!7350 = !DILexicalBlockFile(scope: !1725, file: !408, discriminator: 1)
!7351 = !DILocation(line: 410, column: 20, scope: !1725)
!7352 = !DILocation(line: 410, column: 51, scope: !1725)
!7353 = !DILocation(line: 410, column: 64, scope: !1728)
!7354 = !DILocation(line: 410, column: 80, scope: !1728)
!7355 = !DILocation(line: 410, column: 64, scope: !1725)
!7356 = !DILocation(line: 410, column: 95, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !1728, file: !408, discriminator: 2)
!7358 = !DILocation(line: 410, column: 100, scope: !7359)
!7359 = !DILexicalBlockFile(scope: !1727, file: !408, discriminator: 4)
!7360 = !DILocation(line: 410, column: 110, scope: !1727)
!7361 = !DILocation(line: 410, column: 140, scope: !1727)
!7362 = !DILocation(line: 410, column: 166, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !1727, file: !408, line: 410, column: 163)
!7364 = !DILocation(line: 410, column: 183, scope: !7363)
!7365 = !DILocation(line: 410, column: 163, scope: !7363)
!7366 = !DILocation(line: 410, column: 193, scope: !7363)
!7367 = !DILocation(line: 410, column: 163, scope: !1727)
!7368 = !DILocation(line: 410, column: 163, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !1727, file: !408, discriminator: 5)
!7370 = !DILocation(line: 410, column: 224, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7363, file: !408, discriminator: 6)
!7372 = !DILocation(line: 410, column: 242, scope: !7363)
!7373 = !DILocation(line: 410, column: 252, scope: !7363)
!7374 = !DILocation(line: 410, column: 277, scope: !7363)
!7375 = !DILocation(line: 410, column: 208, scope: !7363)
!7376 = !DILocation(line: 410, column: 296, scope: !7377)
!7377 = !DILexicalBlockFile(scope: !1728, file: !408, discriminator: 7)
!7378 = !DILocation(line: 410, column: 296, scope: !1727)
!7379 = !DILocation(line: 410, column: 296, scope: !7380)
!7380 = !DILexicalBlockFile(scope: !1727, file: !408, discriminator: 8)
!7381 = !DILocation(line: 410, column: 296, scope: !7382)
!7382 = !DILexicalBlockFile(scope: !1727, file: !408, discriminator: 9)
!7383 = !DILocation(line: 410, column: 309, scope: !7384)
!7384 = !DILexicalBlockFile(scope: !7385, file: !408, discriminator: 10)
!7385 = !DILexicalBlockFile(scope: !1701, file: !408, discriminator: 3)
!7386 = !DILocation(line: 410, column: 309, scope: !1725)
!7387 = !DILocation(line: 410, column: 309, scope: !7388)
!7388 = !DILexicalBlockFile(scope: !1725, file: !408, discriminator: 11)
!7389 = !DILocation(line: 413, column: 11, scope: !1701)
!7390 = !DILocation(line: 413, column: 22, scope: !1701)
!7391 = !DILocation(line: 413, column: 9, scope: !1701)
!7392 = !DILocation(line: 414, column: 21, scope: !1701)
!7393 = !DILocation(line: 414, column: 28, scope: !1701)
!7394 = !DILocation(line: 414, column: 37, scope: !1701)
!7395 = !DILocation(line: 415, column: 22, scope: !1701)
!7396 = !DILocation(line: 415, column: 5, scope: !1701)
!7397 = !DILocation(line: 415, column: 16, scope: !1701)
!7398 = !DILocation(line: 415, column: 20, scope: !1701)
!7399 = !DILocation(line: 416, column: 5, scope: !1701)
!7400 = !DILocation(line: 416, column: 10, scope: !7401)
!7401 = !DILexicalBlockFile(scope: !1730, file: !408, discriminator: 1)
!7402 = !DILocation(line: 416, column: 20, scope: !1730)
!7403 = !DILocation(line: 416, column: 50, scope: !1730)
!7404 = !DILocation(line: 416, column: 64, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !1730, file: !408, line: 416, column: 61)
!7406 = !DILocation(line: 416, column: 81, scope: !7405)
!7407 = !DILocation(line: 416, column: 61, scope: !7405)
!7408 = !DILocation(line: 416, column: 91, scope: !7405)
!7409 = !DILocation(line: 416, column: 61, scope: !1730)
!7410 = !DILocation(line: 416, column: 61, scope: !7411)
!7411 = !DILexicalBlockFile(scope: !1730, file: !408, discriminator: 2)
!7412 = !DILocation(line: 416, column: 122, scope: !7413)
!7413 = !DILexicalBlockFile(scope: !7405, file: !408, discriminator: 3)
!7414 = !DILocation(line: 416, column: 140, scope: !7405)
!7415 = !DILocation(line: 416, column: 150, scope: !7405)
!7416 = !DILocation(line: 416, column: 175, scope: !7405)
!7417 = !DILocation(line: 416, column: 106, scope: !7405)
!7418 = !DILocation(line: 416, column: 194, scope: !7419)
!7419 = !DILexicalBlockFile(scope: !1701, file: !408, discriminator: 4)
!7420 = !DILocation(line: 416, column: 194, scope: !1730)
!7421 = !DILocation(line: 416, column: 194, scope: !7422)
!7422 = !DILexicalBlockFile(scope: !1730, file: !408, discriminator: 5)
!7423 = !DILocation(line: 418, column: 11, scope: !1701)
!7424 = !DILocation(line: 418, column: 22, scope: !1701)
!7425 = !DILocation(line: 418, column: 9, scope: !1701)
!7426 = !DILocation(line: 419, column: 51, scope: !1701)
!7427 = !DILocation(line: 420, column: 5, scope: !1701)
!7428 = !DILocation(line: 420, column: 16, scope: !1701)
!7429 = !DILocation(line: 420, column: 21, scope: !1701)
!7430 = !DILocation(line: 421, column: 5, scope: !1701)
!7431 = !DILocation(line: 421, column: 10, scope: !7432)
!7432 = !DILexicalBlockFile(scope: !1732, file: !408, discriminator: 1)
!7433 = !DILocation(line: 421, column: 20, scope: !1732)
!7434 = !DILocation(line: 421, column: 80, scope: !1732)
!7435 = !DILocation(line: 421, column: 64, scope: !1732)
!7436 = !DILocation(line: 421, column: 85, scope: !1732)
!7437 = !DILocation(line: 421, column: 51, scope: !1732)
!7438 = !DILocation(line: 421, column: 116, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !1732, file: !408, line: 421, column: 113)
!7440 = !DILocation(line: 421, column: 133, scope: !7439)
!7441 = !DILocation(line: 421, column: 113, scope: !7439)
!7442 = !DILocation(line: 421, column: 143, scope: !7439)
!7443 = !DILocation(line: 421, column: 113, scope: !1732)
!7444 = !DILocation(line: 421, column: 113, scope: !7445)
!7445 = !DILexicalBlockFile(scope: !1732, file: !408, discriminator: 2)
!7446 = !DILocation(line: 421, column: 174, scope: !7447)
!7447 = !DILexicalBlockFile(scope: !7439, file: !408, discriminator: 3)
!7448 = !DILocation(line: 421, column: 192, scope: !7439)
!7449 = !DILocation(line: 421, column: 202, scope: !7439)
!7450 = !DILocation(line: 421, column: 227, scope: !7439)
!7451 = !DILocation(line: 421, column: 158, scope: !7439)
!7452 = !DILocation(line: 421, column: 246, scope: !7419)
!7453 = !DILocation(line: 421, column: 246, scope: !1732)
!7454 = !DILocation(line: 421, column: 246, scope: !7455)
!7455 = !DILexicalBlockFile(scope: !1732, file: !408, discriminator: 5)
!7456 = !DILocation(line: 423, column: 11, scope: !1701)
!7457 = !DILocation(line: 423, column: 22, scope: !1701)
!7458 = !DILocation(line: 423, column: 9, scope: !1701)
!7459 = !DILocation(line: 424, column: 51, scope: !1701)
!7460 = !DILocation(line: 425, column: 5, scope: !1701)
!7461 = !DILocation(line: 425, column: 16, scope: !1701)
!7462 = !DILocation(line: 425, column: 21, scope: !1701)
!7463 = !DILocation(line: 426, column: 5, scope: !1701)
!7464 = !DILocation(line: 426, column: 10, scope: !7465)
!7465 = !DILexicalBlockFile(scope: !1734, file: !408, discriminator: 1)
!7466 = !DILocation(line: 426, column: 20, scope: !1734)
!7467 = !DILocation(line: 426, column: 80, scope: !1734)
!7468 = !DILocation(line: 426, column: 64, scope: !1734)
!7469 = !DILocation(line: 426, column: 85, scope: !1734)
!7470 = !DILocation(line: 426, column: 51, scope: !1734)
!7471 = !DILocation(line: 426, column: 116, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !1734, file: !408, line: 426, column: 113)
!7473 = !DILocation(line: 426, column: 133, scope: !7472)
!7474 = !DILocation(line: 426, column: 113, scope: !7472)
!7475 = !DILocation(line: 426, column: 143, scope: !7472)
!7476 = !DILocation(line: 426, column: 113, scope: !1734)
!7477 = !DILocation(line: 426, column: 113, scope: !7478)
!7478 = !DILexicalBlockFile(scope: !1734, file: !408, discriminator: 2)
!7479 = !DILocation(line: 426, column: 174, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !7472, file: !408, discriminator: 3)
!7481 = !DILocation(line: 426, column: 192, scope: !7472)
!7482 = !DILocation(line: 426, column: 202, scope: !7472)
!7483 = !DILocation(line: 426, column: 227, scope: !7472)
!7484 = !DILocation(line: 426, column: 158, scope: !7472)
!7485 = !DILocation(line: 426, column: 246, scope: !7419)
!7486 = !DILocation(line: 426, column: 246, scope: !1734)
!7487 = !DILocation(line: 426, column: 246, scope: !7488)
!7488 = !DILexicalBlockFile(scope: !1734, file: !408, discriminator: 5)
!7489 = !DILocation(line: 428, column: 5, scope: !1701)
!7490 = !DILocation(line: 429, column: 1, scope: !1701)
!7491 = !DILocation(line: 313, column: 27, scope: !1735)
!7492 = !DILocation(line: 313, column: 43, scope: !1735)
!7493 = !DILocation(line: 313, column: 59, scope: !1735)
!7494 = !DILocation(line: 315, column: 5, scope: !1735)
!7495 = !DILocation(line: 315, column: 20, scope: !1735)
!7496 = !DILocation(line: 315, column: 41, scope: !1735)
!7497 = !DILocation(line: 315, column: 47, scope: !1735)
!7498 = !DILocation(line: 315, column: 56, scope: !1735)
!7499 = !DILocation(line: 315, column: 24, scope: !1735)
!7500 = !DILocation(line: 316, column: 9, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !1735, file: !408, line: 316, column: 9)
!7502 = !DILocation(line: 316, column: 11, scope: !7501)
!7503 = !DILocation(line: 316, column: 9, scope: !1735)
!7504 = !DILocation(line: 317, column: 55, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7501, file: !408, line: 316, column: 26)
!7506 = !DILocation(line: 318, column: 9, scope: !7505)
!7507 = !DILocation(line: 318, column: 12, scope: !7505)
!7508 = !DILocation(line: 318, column: 16, scope: !7505)
!7509 = !DILocation(line: 320, column: 55, scope: !7505)
!7510 = !DILocation(line: 321, column: 9, scope: !7505)
!7511 = !DILocation(line: 321, column: 12, scope: !7505)
!7512 = !DILocation(line: 321, column: 17, scope: !7505)
!7513 = !DILocation(line: 323, column: 55, scope: !7505)
!7514 = !DILocation(line: 324, column: 9, scope: !7505)
!7515 = !DILocation(line: 324, column: 12, scope: !7505)
!7516 = !DILocation(line: 324, column: 17, scope: !7505)
!7517 = !DILocation(line: 326, column: 9, scope: !7505)
!7518 = !DILocation(line: 326, column: 12, scope: !7505)
!7519 = !DILocation(line: 326, column: 18, scope: !7505)
!7520 = !DILocation(line: 327, column: 9, scope: !7505)
!7521 = !DILocation(line: 327, column: 12, scope: !7505)
!7522 = !DILocation(line: 327, column: 24, scope: !7505)
!7523 = !DILocation(line: 328, column: 5, scope: !7505)
!7524 = !DILocation(line: 329, column: 24, scope: !1735)
!7525 = !DILocation(line: 329, column: 12, scope: !1735)
!7526 = !DILocation(line: 330, column: 1, scope: !1735)
!7527 = !DILocation(line: 329, column: 5, scope: !1735)
!7528 = !DILocation(line: 1373, column: 31, scope: !1104)
!7529 = !DILocation(line: 1375, column: 10, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !1104, file: !408, line: 1375, column: 9)
!7531 = !DILocation(line: 1375, column: 16, scope: !7530)
!7532 = !DILocation(line: 1375, column: 9, scope: !1104)
!7533 = !DILocation(line: 1376, column: 9, scope: !7530)
!7534 = !DILocation(line: 1378, column: 12, scope: !1104)
!7535 = !DILocation(line: 1378, column: 18, scope: !1104)
!7536 = !DILocation(line: 1378, column: 25, scope: !1104)
!7537 = !DILocation(line: 1378, column: 5, scope: !1104)
!7538 = !DILocation(line: 1379, column: 1, scope: !1104)
!7539 = !DILocation(line: 1294, column: 27, scope: !1109)
!7540 = !DILocation(line: 1294, column: 45, scope: !1109)
!7541 = !DILocation(line: 1296, column: 5, scope: !1109)
!7542 = !DILocation(line: 1296, column: 20, scope: !1109)
!7543 = !DILocation(line: 1296, column: 44, scope: !1109)
!7544 = !DILocation(line: 1296, column: 27, scope: !1109)
!7545 = !DILocation(line: 1298, column: 10, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !1109, file: !408, line: 1298, column: 9)
!7547 = !DILocation(line: 1298, column: 16, scope: !7546)
!7548 = !DILocation(line: 1298, column: 22, scope: !7546)
!7549 = !DILocation(line: 1298, column: 25, scope: !7550)
!7550 = !DILexicalBlockFile(scope: !7546, file: !408, discriminator: 1)
!7551 = !DILocation(line: 1298, column: 31, scope: !7546)
!7552 = !DILocation(line: 1298, column: 35, scope: !7546)
!7553 = !DILocation(line: 1298, column: 38, scope: !7554)
!7554 = !DILexicalBlockFile(scope: !7546, file: !408, discriminator: 2)
!7555 = !DILocation(line: 1298, column: 47, scope: !7546)
!7556 = !DILocation(line: 1298, column: 53, scope: !7546)
!7557 = !DILocation(line: 1298, column: 60, scope: !7546)
!7558 = !DILocation(line: 1298, column: 44, scope: !7546)
!7559 = !DILocation(line: 1298, column: 9, scope: !1109)
!7560 = !DILocation(line: 1300, column: 13, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7546, file: !408, line: 1298, column: 68)
!7562 = !DILocation(line: 1299, column: 9, scope: !7561)
!7563 = !DILocation(line: 1303, column: 9, scope: !7561)
!7564 = !DILocation(line: 1306, column: 43, scope: !1109)
!7565 = !DILocation(line: 1306, column: 21, scope: !1109)
!7566 = !DILocation(line: 1306, column: 27, scope: !1109)
!7567 = !DILocation(line: 1306, column: 34, scope: !1109)
!7568 = !DILocation(line: 1306, column: 53, scope: !1109)
!7569 = !DILocation(line: 1306, column: 62, scope: !1109)
!7570 = !DILocation(line: 1307, column: 34, scope: !1109)
!7571 = !DILocation(line: 1307, column: 12, scope: !1109)
!7572 = !DILocation(line: 1307, column: 18, scope: !1109)
!7573 = !DILocation(line: 1307, column: 25, scope: !1109)
!7574 = !DILocation(line: 1307, column: 5, scope: !1109)
!7575 = !DILocation(line: 1308, column: 1, scope: !1109)
!7576 = !DILocation(line: 1481, column: 27, scope: !1114)
!7577 = !DILocation(line: 1481, column: 45, scope: !1114)
!7578 = !DILocation(line: 1481, column: 62, scope: !1114)
!7579 = !DILocation(line: 1483, column: 5, scope: !1114)
!7580 = !DILocation(line: 1483, column: 20, scope: !1114)
!7581 = !DILocation(line: 1483, column: 44, scope: !1114)
!7582 = !DILocation(line: 1483, column: 27, scope: !1114)
!7583 = !DILocation(line: 1484, column: 5, scope: !1114)
!7584 = !DILocation(line: 1484, column: 9, scope: !1114)
!7585 = !DILocation(line: 1485, column: 5, scope: !1114)
!7586 = !DILocation(line: 1485, column: 15, scope: !1114)
!7587 = !DILocation(line: 1487, column: 10, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !1114, file: !408, line: 1487, column: 9)
!7589 = !DILocation(line: 1487, column: 16, scope: !7588)
!7590 = !DILocation(line: 1487, column: 22, scope: !7588)
!7591 = !DILocation(line: 1487, column: 25, scope: !7592)
!7592 = !DILexicalBlockFile(scope: !7588, file: !408, discriminator: 1)
!7593 = !DILocation(line: 1487, column: 31, scope: !7588)
!7594 = !DILocation(line: 1487, column: 35, scope: !7588)
!7595 = !DILocation(line: 1487, column: 38, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !7588, file: !408, discriminator: 2)
!7597 = !DILocation(line: 1487, column: 47, scope: !7588)
!7598 = !DILocation(line: 1487, column: 53, scope: !7588)
!7599 = !DILocation(line: 1487, column: 60, scope: !7588)
!7600 = !DILocation(line: 1487, column: 44, scope: !7588)
!7601 = !DILocation(line: 1487, column: 9, scope: !1114)
!7602 = !DILocation(line: 1489, column: 13, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7588, file: !408, line: 1487, column: 68)
!7604 = !DILocation(line: 1488, column: 9, scope: !7603)
!7605 = !DILocation(line: 1491, column: 9, scope: !7603)
!7606 = !DILocation(line: 1494, column: 33, scope: !1114)
!7607 = !DILocation(line: 1494, column: 11, scope: !1114)
!7608 = !DILocation(line: 1494, column: 17, scope: !1114)
!7609 = !DILocation(line: 1494, column: 24, scope: !1114)
!7610 = !DILocation(line: 1494, column: 9, scope: !1114)
!7611 = !DILocation(line: 1496, column: 9, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !1114, file: !408, line: 1496, column: 9)
!7613 = !DILocation(line: 1496, column: 9, scope: !1114)
!7614 = !DILocation(line: 1497, column: 25, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !408, line: 1496, column: 15)
!7616 = !DILocation(line: 1497, column: 33, scope: !7615)
!7617 = !DILocation(line: 1497, column: 42, scope: !7615)
!7618 = !DILocation(line: 1498, column: 40, scope: !7615)
!7619 = !DILocation(line: 1498, column: 31, scope: !7615)
!7620 = !DILocation(line: 1498, column: 9, scope: !7615)
!7621 = !DILocation(line: 1498, column: 15, scope: !7615)
!7622 = !DILocation(line: 1498, column: 22, scope: !7615)
!7623 = !DILocation(line: 1498, column: 38, scope: !7615)
!7624 = !DILocation(line: 1499, column: 5, scope: !7615)
!7625 = !DILocation(line: 1500, column: 9, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7612, file: !408, line: 1499, column: 12)
!7627 = !DILocation(line: 1500, column: 15, scope: !7626)
!7628 = !DILocation(line: 1500, column: 22, scope: !7626)
!7629 = !DILocation(line: 1500, column: 28, scope: !7626)
!7630 = !DILocation(line: 1501, column: 18, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7626, file: !408, line: 1501, column: 9)
!7632 = !DILocation(line: 1501, column: 16, scope: !7631)
!7633 = !DILocation(line: 1501, column: 14, scope: !7631)
!7634 = !DILocation(line: 1501, column: 25, scope: !7635)
!7635 = !DILexicalBlockFile(scope: !7636, file: !408, discriminator: 2)
!7636 = !DILexicalBlockFile(scope: !7637, file: !408, discriminator: 1)
!7637 = distinct !DILexicalBlock(scope: !7631, file: !408, line: 1501, column: 9)
!7638 = !DILocation(line: 1501, column: 29, scope: !7637)
!7639 = !DILocation(line: 1501, column: 35, scope: !7637)
!7640 = !DILocation(line: 1501, column: 42, scope: !7637)
!7641 = !DILocation(line: 1501, column: 27, scope: !7637)
!7642 = !DILocation(line: 1501, column: 9, scope: !7631)
!7643 = !DILocation(line: 1502, column: 62, scope: !7637)
!7644 = !DILocation(line: 1502, column: 63, scope: !7637)
!7645 = !DILocation(line: 1502, column: 40, scope: !7637)
!7646 = !DILocation(line: 1502, column: 46, scope: !7637)
!7647 = !DILocation(line: 1502, column: 53, scope: !7637)
!7648 = !DILocation(line: 1502, column: 35, scope: !7637)
!7649 = !DILocation(line: 1502, column: 13, scope: !7637)
!7650 = !DILocation(line: 1502, column: 19, scope: !7637)
!7651 = !DILocation(line: 1502, column: 26, scope: !7637)
!7652 = !DILocation(line: 1502, column: 38, scope: !7637)
!7653 = !DILocation(line: 1501, column: 51, scope: !7637)
!7654 = !DILocation(line: 1501, column: 9, scope: !7637)
!7655 = !DILocation(line: 1505, column: 5, scope: !1114)
!7656 = !DILocation(line: 1505, column: 10, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !1123, file: !408, discriminator: 1)
!7658 = !DILocation(line: 1505, column: 20, scope: !1123)
!7659 = !DILocation(line: 1505, column: 50, scope: !1123)
!7660 = !DILocation(line: 1505, column: 64, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !1123, file: !408, line: 1505, column: 61)
!7662 = !DILocation(line: 1505, column: 81, scope: !7661)
!7663 = !DILocation(line: 1505, column: 61, scope: !7661)
!7664 = !DILocation(line: 1505, column: 91, scope: !7661)
!7665 = !DILocation(line: 1505, column: 61, scope: !1123)
!7666 = !DILocation(line: 1505, column: 61, scope: !7667)
!7667 = !DILexicalBlockFile(scope: !1123, file: !408, discriminator: 2)
!7668 = !DILocation(line: 1505, column: 122, scope: !7669)
!7669 = !DILexicalBlockFile(scope: !7661, file: !408, discriminator: 3)
!7670 = !DILocation(line: 1505, column: 140, scope: !7661)
!7671 = !DILocation(line: 1505, column: 150, scope: !7661)
!7672 = !DILocation(line: 1505, column: 175, scope: !7661)
!7673 = !DILocation(line: 1505, column: 106, scope: !7661)
!7674 = !DILocation(line: 1505, column: 194, scope: !7675)
!7675 = !DILexicalBlockFile(scope: !1114, file: !408, discriminator: 4)
!7676 = !DILocation(line: 1505, column: 194, scope: !1123)
!7677 = !DILocation(line: 1505, column: 194, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !1123, file: !408, discriminator: 5)
!7679 = !DILocation(line: 1507, column: 5, scope: !1114)
!7680 = !DILocation(line: 1508, column: 1, scope: !1114)
!7681 = !DILocation(line: 1511, column: 26, scope: !1124)
!7682 = !DILocation(line: 1511, column: 43, scope: !1124)
!7683 = !DILocation(line: 1513, column: 5, scope: !1124)
!7684 = !DILocation(line: 1513, column: 20, scope: !1124)
!7685 = !DILocation(line: 1513, column: 44, scope: !1124)
!7686 = !DILocation(line: 1513, column: 27, scope: !1124)
!7687 = !DILocation(line: 1515, column: 11, scope: !1131)
!7688 = !DILocation(line: 1515, column: 18, scope: !1131)
!7689 = !DILocation(line: 1515, column: 27, scope: !1131)
!7690 = !{!2706, !2621, i64 96}
!7691 = !DILocation(line: 1515, column: 40, scope: !1131)
!7692 = !DILocation(line: 1515, column: 54, scope: !1131)
!7693 = !DILocation(line: 1515, column: 58, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !1131, file: !408, discriminator: 1)
!7695 = !DILocation(line: 1515, column: 65, scope: !1131)
!7696 = !DILocation(line: 1515, column: 74, scope: !1131)
!7697 = !DILocation(line: 1515, column: 88, scope: !1131)
!7698 = !{!7699, !2621, i64 264}
!7699 = !{!"", !2621, i64 0, !2621, i64 8, !2621, i64 16, !2621, i64 24, !2621, i64 32, !2621, i64 40, !2621, i64 48, !2621, i64 56, !2621, i64 64, !2621, i64 72, !2621, i64 80, !2621, i64 88, !2621, i64 96, !2621, i64 104, !2621, i64 112, !2621, i64 120, !2621, i64 128, !2621, i64 136, !2621, i64 144, !2621, i64 152, !2621, i64 160, !2621, i64 168, !2621, i64 176, !2621, i64 184, !2621, i64 192, !2621, i64 200, !2621, i64 208, !2621, i64 216, !2621, i64 224, !2621, i64 232, !2621, i64 240, !2621, i64 248, !2621, i64 256, !2621, i64 264}
!7700 = !DILocation(line: 1515, column: 97, scope: !1131)
!7701 = !DILocation(line: 1515, column: 9, scope: !1124)
!7702 = !DILocation(line: 1516, column: 9, scope: !1130)
!7703 = !DILocation(line: 1516, column: 20, scope: !1130)
!7704 = !DILocation(line: 1516, column: 43, scope: !1130)
!7705 = !DILocation(line: 1516, column: 49, scope: !1130)
!7706 = !DILocation(line: 1516, column: 24, scope: !1130)
!7707 = !DILocation(line: 1518, column: 13, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !1130, file: !408, line: 1518, column: 13)
!7709 = !DILocation(line: 1518, column: 15, scope: !7708)
!7710 = !DILocation(line: 1518, column: 21, scope: !7708)
!7711 = !DILocation(line: 1518, column: 24, scope: !7712)
!7712 = !DILexicalBlockFile(scope: !7708, file: !408, discriminator: 1)
!7713 = !DILocation(line: 1518, column: 13, scope: !1130)
!7714 = !DILocation(line: 1519, column: 13, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7708, file: !408, line: 1518, column: 42)
!7716 = !DILocation(line: 1521, column: 13, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !1130, file: !408, line: 1521, column: 13)
!7718 = !DILocation(line: 1521, column: 15, scope: !7717)
!7719 = !DILocation(line: 1521, column: 19, scope: !7717)
!7720 = !DILocation(line: 1521, column: 22, scope: !7721)
!7721 = !DILexicalBlockFile(scope: !7717, file: !408, discriminator: 1)
!7722 = !DILocation(line: 1521, column: 28, scope: !7717)
!7723 = !DILocation(line: 1521, column: 22, scope: !7717)
!7724 = !DILocation(line: 1521, column: 13, scope: !1130)
!7725 = !DILocation(line: 1522, column: 18, scope: !7717)
!7726 = !DILocation(line: 1522, column: 24, scope: !7717)
!7727 = !DILocation(line: 1522, column: 31, scope: !7717)
!7728 = !DILocation(line: 1522, column: 15, scope: !7717)
!7729 = !DILocation(line: 1522, column: 13, scope: !7717)
!7730 = !DILocation(line: 1523, column: 32, scope: !1130)
!7731 = !DILocation(line: 1523, column: 39, scope: !1130)
!7732 = !DILocation(line: 1523, column: 16, scope: !1130)
!7733 = !DILocation(line: 1523, column: 9, scope: !1130)
!7734 = !DILocation(line: 1524, column: 5, scope: !1131)
!7735 = !DILocation(line: 1525, column: 29, scope: !1134)
!7736 = !DILocation(line: 1525, column: 37, scope: !1134)
!7737 = !DILocation(line: 1525, column: 46, scope: !1134)
!7738 = !DILocation(line: 1525, column: 14, scope: !1131)
!7739 = !DILocation(line: 1526, column: 9, scope: !1133)
!7740 = !DILocation(line: 1526, column: 20, scope: !1133)
!7741 = !DILocation(line: 1526, column: 27, scope: !1133)
!7742 = !DILocation(line: 1526, column: 33, scope: !1133)
!7743 = !DILocation(line: 1526, column: 39, scope: !1133)
!7744 = !DILocation(line: 1526, column: 49, scope: !1133)
!7745 = !DILocation(line: 1526, column: 54, scope: !1133)
!7746 = !DILocation(line: 1527, column: 9, scope: !1133)
!7747 = !DILocation(line: 1527, column: 19, scope: !1133)
!7748 = !DILocation(line: 1529, column: 14, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !1133, file: !408, line: 1529, column: 13)
!7750 = !DILocation(line: 1529, column: 20, scope: !7749)
!7751 = !DILocation(line: 1529, column: 13, scope: !1133)
!7752 = !DILocation(line: 1530, column: 20, scope: !7749)
!7753 = !DILocation(line: 1530, column: 13, scope: !7749)
!7754 = !DILocation(line: 1532, column: 34, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !1133, file: !408, line: 1532, column: 13)
!7756 = !DILocation(line: 1533, column: 17, scope: !7755)
!7757 = !DILocation(line: 1533, column: 23, scope: !7755)
!7758 = !DILocation(line: 1533, column: 30, scope: !7755)
!7759 = !DILocation(line: 1532, column: 13, scope: !7755)
!7760 = !DILocation(line: 1534, column: 50, scope: !7755)
!7761 = !DILocation(line: 1532, column: 13, scope: !1133)
!7762 = !DILocation(line: 1535, column: 13, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7755, file: !408, line: 1534, column: 55)
!7764 = !DILocation(line: 1538, column: 13, scope: !1146)
!7765 = !DILocation(line: 1538, column: 22, scope: !1146)
!7766 = !DILocation(line: 1538, column: 13, scope: !1133)
!7767 = !DILocation(line: 1539, column: 20, scope: !1146)
!7768 = !DILocation(line: 1539, column: 13, scope: !1146)
!7769 = !DILocation(line: 1541, column: 31, scope: !1145)
!7770 = !DILocation(line: 1541, column: 20, scope: !1145)
!7771 = !DILocation(line: 1541, column: 18, scope: !1145)
!7772 = !DILocation(line: 1542, column: 18, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !1145, file: !408, line: 1542, column: 17)
!7774 = !DILocation(line: 1542, column: 17, scope: !1145)
!7775 = !DILocation(line: 1543, column: 17, scope: !7773)
!7776 = !DILocation(line: 1545, column: 24, scope: !1144)
!7777 = !DILocation(line: 1545, column: 22, scope: !1144)
!7778 = !DILocation(line: 1545, column: 33, scope: !1144)
!7779 = !DILocation(line: 1545, column: 18, scope: !1144)
!7780 = !DILocation(line: 1545, column: 38, scope: !7781)
!7781 = !DILexicalBlockFile(scope: !7782, file: !408, discriminator: 2)
!7782 = !DILexicalBlockFile(scope: !1143, file: !408, discriminator: 1)
!7783 = !DILocation(line: 1545, column: 42, scope: !1143)
!7784 = !DILocation(line: 1545, column: 40, scope: !1143)
!7785 = !DILocation(line: 1545, column: 13, scope: !1144)
!7786 = !DILocation(line: 1547, column: 17, scope: !1142)
!7787 = !DILocation(line: 1547, column: 27, scope: !1142)
!7788 = !DILocation(line: 1547, column: 56, scope: !1142)
!7789 = !DILocation(line: 1547, column: 34, scope: !1142)
!7790 = !DILocation(line: 1547, column: 40, scope: !1142)
!7791 = !DILocation(line: 1547, column: 47, scope: !1142)
!7792 = !DILocation(line: 1548, column: 33, scope: !1142)
!7793 = !DILocation(line: 1548, column: 41, scope: !1142)
!7794 = !DILocation(line: 1548, column: 50, scope: !1142)
!7795 = !DILocation(line: 1549, column: 58, scope: !1142)
!7796 = !DILocation(line: 1549, column: 52, scope: !1142)
!7797 = !DILocation(line: 1549, column: 36, scope: !1142)
!7798 = !DILocation(line: 1549, column: 19, scope: !1142)
!7799 = !DILocation(line: 1549, column: 44, scope: !1142)
!7800 = !DILocation(line: 1549, column: 18, scope: !1142)
!7801 = !DILocation(line: 1549, column: 55, scope: !1142)
!7802 = !DILocation(line: 1550, column: 13, scope: !1143)
!7803 = !DILocation(line: 1550, column: 13, scope: !1142)
!7804 = !DILocation(line: 1546, column: 25, scope: !1143)
!7805 = !DILocation(line: 1546, column: 22, scope: !1143)
!7806 = !DILocation(line: 1546, column: 32, scope: !1143)
!7807 = !DILocation(line: 1545, column: 13, scope: !1143)
!7808 = !DILocation(line: 1552, column: 20, scope: !1145)
!7809 = !DILocation(line: 1552, column: 13, scope: !1145)
!7810 = !DILocation(line: 1554, column: 5, scope: !1134)
!7811 = !DILocation(line: 1556, column: 25, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !1134, file: !408, line: 1555, column: 10)
!7813 = !DILocation(line: 1556, column: 9, scope: !7812)
!7814 = !DILocation(line: 1558, column: 9, scope: !7812)
!7815 = !DILocation(line: 1560, column: 1, scope: !1124)
!7816 = !DILocation(line: 1563, column: 30, scope: !1147)
!7817 = !DILocation(line: 1563, column: 47, scope: !1147)
!7818 = !DILocation(line: 1563, column: 63, scope: !1147)
!7819 = !DILocation(line: 1565, column: 5, scope: !1147)
!7820 = !DILocation(line: 1565, column: 20, scope: !1147)
!7821 = !DILocation(line: 1565, column: 44, scope: !1147)
!7822 = !DILocation(line: 1565, column: 27, scope: !1147)
!7823 = !DILocation(line: 1567, column: 11, scope: !1155)
!7824 = !DILocation(line: 1567, column: 18, scope: !1155)
!7825 = !DILocation(line: 1567, column: 27, scope: !1155)
!7826 = !DILocation(line: 1567, column: 40, scope: !1155)
!7827 = !DILocation(line: 1567, column: 54, scope: !1155)
!7828 = !DILocation(line: 1567, column: 58, scope: !7829)
!7829 = !DILexicalBlockFile(scope: !1155, file: !408, discriminator: 1)
!7830 = !DILocation(line: 1567, column: 65, scope: !1155)
!7831 = !DILocation(line: 1567, column: 74, scope: !1155)
!7832 = !DILocation(line: 1567, column: 88, scope: !1155)
!7833 = !DILocation(line: 1567, column: 97, scope: !1155)
!7834 = !DILocation(line: 1567, column: 9, scope: !1147)
!7835 = !DILocation(line: 1568, column: 9, scope: !1154)
!7836 = !DILocation(line: 1568, column: 20, scope: !1154)
!7837 = !DILocation(line: 1568, column: 43, scope: !1154)
!7838 = !DILocation(line: 1568, column: 49, scope: !1154)
!7839 = !DILocation(line: 1568, column: 24, scope: !1154)
!7840 = !DILocation(line: 1570, column: 13, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !1154, file: !408, line: 1570, column: 13)
!7842 = !DILocation(line: 1570, column: 15, scope: !7841)
!7843 = !DILocation(line: 1570, column: 21, scope: !7841)
!7844 = !DILocation(line: 1570, column: 24, scope: !7845)
!7845 = !DILexicalBlockFile(scope: !7841, file: !408, discriminator: 1)
!7846 = !DILocation(line: 1570, column: 13, scope: !1154)
!7847 = !DILocation(line: 1571, column: 13, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7841, file: !408, line: 1570, column: 42)
!7849 = !DILocation(line: 1573, column: 13, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !1154, file: !408, line: 1573, column: 13)
!7851 = !DILocation(line: 1573, column: 15, scope: !7850)
!7852 = !DILocation(line: 1573, column: 19, scope: !7850)
!7853 = !DILocation(line: 1573, column: 22, scope: !7854)
!7854 = !DILexicalBlockFile(scope: !7850, file: !408, discriminator: 1)
!7855 = !DILocation(line: 1573, column: 28, scope: !7850)
!7856 = !DILocation(line: 1573, column: 22, scope: !7850)
!7857 = !DILocation(line: 1573, column: 13, scope: !1154)
!7858 = !DILocation(line: 1574, column: 18, scope: !7850)
!7859 = !DILocation(line: 1574, column: 24, scope: !7850)
!7860 = !DILocation(line: 1574, column: 31, scope: !7850)
!7861 = !DILocation(line: 1574, column: 15, scope: !7850)
!7862 = !DILocation(line: 1574, column: 13, scope: !7850)
!7863 = !DILocation(line: 1575, column: 32, scope: !1154)
!7864 = !DILocation(line: 1575, column: 39, scope: !1154)
!7865 = !DILocation(line: 1575, column: 42, scope: !1154)
!7866 = !DILocation(line: 1575, column: 16, scope: !1154)
!7867 = !DILocation(line: 1575, column: 9, scope: !1154)
!7868 = !DILocation(line: 1576, column: 5, scope: !1155)
!7869 = !DILocation(line: 1577, column: 29, scope: !1158)
!7870 = !DILocation(line: 1577, column: 37, scope: !1158)
!7871 = !DILocation(line: 1577, column: 46, scope: !1158)
!7872 = !DILocation(line: 1577, column: 14, scope: !1155)
!7873 = !DILocation(line: 1578, column: 9, scope: !1157)
!7874 = !DILocation(line: 1578, column: 20, scope: !1157)
!7875 = !DILocation(line: 1578, column: 27, scope: !1157)
!7876 = !DILocation(line: 1578, column: 33, scope: !1157)
!7877 = !DILocation(line: 1578, column: 39, scope: !1157)
!7878 = !DILocation(line: 1578, column: 49, scope: !1157)
!7879 = !DILocation(line: 1578, column: 57, scope: !1157)
!7880 = !DILocation(line: 1578, column: 62, scope: !1157)
!7881 = !DILocation(line: 1580, column: 9, scope: !1157)
!7882 = !DILocation(line: 1580, column: 19, scope: !1157)
!7883 = !DILocation(line: 1581, column: 9, scope: !1157)
!7884 = !DILocation(line: 1581, column: 19, scope: !1157)
!7885 = !DILocation(line: 1583, column: 14, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1583, column: 13)
!7887 = !DILocation(line: 1583, column: 20, scope: !7886)
!7888 = !DILocation(line: 1583, column: 13, scope: !1157)
!7889 = !DILocation(line: 1584, column: 30, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !408, line: 1584, column: 17)
!7891 = distinct !DILexicalBlock(scope: !7886, file: !408, line: 1583, column: 27)
!7892 = !DILocation(line: 1584, column: 17, scope: !7890)
!7893 = !DILocation(line: 1584, column: 48, scope: !7890)
!7894 = !DILocation(line: 1584, column: 17, scope: !7891)
!7895 = !DILocation(line: 1585, column: 17, scope: !7890)
!7896 = !DILocation(line: 1586, column: 9, scope: !7891)
!7897 = !DILocation(line: 1588, column: 34, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1588, column: 13)
!7899 = !DILocation(line: 1589, column: 17, scope: !7898)
!7900 = !DILocation(line: 1589, column: 23, scope: !7898)
!7901 = !DILocation(line: 1589, column: 30, scope: !7898)
!7902 = !DILocation(line: 1588, column: 13, scope: !7898)
!7903 = !DILocation(line: 1590, column: 50, scope: !7898)
!7904 = !DILocation(line: 1588, column: 13, scope: !1157)
!7905 = !DILocation(line: 1591, column: 13, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7898, file: !408, line: 1590, column: 55)
!7907 = !DILocation(line: 1594, column: 13, scope: !1169)
!7908 = !DILocation(line: 1594, column: 19, scope: !1169)
!7909 = !DILocation(line: 1594, column: 13, scope: !1157)
!7910 = !DILocation(line: 1596, column: 13, scope: !1168)
!7911 = !DILocation(line: 1596, column: 20, scope: !1168)
!7912 = !DILocation(line: 1597, column: 13, scope: !1168)
!7913 = !DILocation(line: 1597, column: 24, scope: !1168)
!7914 = !DILocation(line: 1599, column: 17, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !1168, file: !408, line: 1599, column: 17)
!7916 = !DILocation(line: 1599, column: 26, scope: !7915)
!7917 = !DILocation(line: 1599, column: 17, scope: !1168)
!7918 = !DILocation(line: 1600, column: 17, scope: !7915)
!7919 = !DILocation(line: 1605, column: 17, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !1168, file: !408, line: 1605, column: 17)
!7921 = !DILocation(line: 1605, column: 22, scope: !7920)
!7922 = !DILocation(line: 1605, column: 17, scope: !1168)
!7923 = !DILocation(line: 1606, column: 24, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7920, file: !408, line: 1605, column: 27)
!7925 = !DILocation(line: 1606, column: 30, scope: !7924)
!7926 = !DILocation(line: 1606, column: 22, scope: !7924)
!7927 = !DILocation(line: 1607, column: 25, scope: !7924)
!7928 = !DILocation(line: 1607, column: 32, scope: !7924)
!7929 = !DILocation(line: 1607, column: 40, scope: !7924)
!7930 = !DILocation(line: 1607, column: 49, scope: !7924)
!7931 = !DILocation(line: 1607, column: 37, scope: !7924)
!7932 = !DILocation(line: 1607, column: 30, scope: !7924)
!7933 = !DILocation(line: 1607, column: 54, scope: !7924)
!7934 = !DILocation(line: 1607, column: 23, scope: !7924)
!7935 = !DILocation(line: 1608, column: 25, scope: !7924)
!7936 = !DILocation(line: 1608, column: 24, scope: !7924)
!7937 = !DILocation(line: 1608, column: 22, scope: !7924)
!7938 = !DILocation(line: 1609, column: 13, scope: !7924)
!7939 = !DILocation(line: 1616, column: 40, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !1168, file: !408, line: 1616, column: 17)
!7941 = !DILocation(line: 1616, column: 29, scope: !7940)
!7942 = !DILocation(line: 1616, column: 27, scope: !7940)
!7943 = !DILocation(line: 1616, column: 17, scope: !1168)
!7944 = !DILocation(line: 1617, column: 17, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7940, file: !408, line: 1616, column: 52)
!7946 = !DILocation(line: 1618, column: 17, scope: !7945)
!7947 = !DILocation(line: 1628, column: 24, scope: !1174)
!7948 = !DILocation(line: 1628, column: 22, scope: !1174)
!7949 = !DILocation(line: 1628, column: 33, scope: !1174)
!7950 = !DILocation(line: 1628, column: 18, scope: !1174)
!7951 = !DILocation(line: 1628, column: 38, scope: !7952)
!7952 = !DILexicalBlockFile(scope: !7953, file: !408, discriminator: 2)
!7953 = !DILexicalBlockFile(scope: !1173, file: !408, discriminator: 1)
!7954 = !DILocation(line: 1628, column: 52, scope: !1173)
!7955 = !DILocation(line: 1628, column: 42, scope: !1173)
!7956 = !DILocation(line: 1628, column: 13, scope: !1174)
!7957 = !DILocation(line: 1632, column: 17, scope: !1172)
!7958 = !DILocation(line: 1632, column: 28, scope: !1172)
!7959 = !DILocation(line: 1632, column: 40, scope: !1172)
!7960 = !DILocation(line: 1632, column: 45, scope: !1172)
!7961 = !DILocation(line: 1633, column: 21, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !1172, file: !408, line: 1633, column: 21)
!7963 = !DILocation(line: 1633, column: 27, scope: !7962)
!7964 = !DILocation(line: 1633, column: 25, scope: !7962)
!7965 = !DILocation(line: 1633, column: 43, scope: !7962)
!7966 = !DILocation(line: 1633, column: 49, scope: !7962)
!7967 = !DILocation(line: 1633, column: 56, scope: !7962)
!7968 = !DILocation(line: 1633, column: 35, scope: !7962)
!7969 = !DILocation(line: 1633, column: 32, scope: !7962)
!7970 = !DILocation(line: 1633, column: 21, scope: !1172)
!7971 = !DILocation(line: 1634, column: 33, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7962, file: !408, line: 1633, column: 64)
!7973 = !DILocation(line: 1634, column: 39, scope: !7972)
!7974 = !DILocation(line: 1634, column: 46, scope: !7972)
!7975 = !DILocation(line: 1634, column: 55, scope: !7972)
!7976 = !DILocation(line: 1634, column: 53, scope: !7972)
!7977 = !DILocation(line: 1634, column: 59, scope: !7972)
!7978 = !DILocation(line: 1634, column: 31, scope: !7972)
!7979 = !DILocation(line: 1635, column: 17, scope: !7972)
!7980 = !DILocation(line: 1637, column: 83, scope: !1172)
!7981 = !DILocation(line: 1637, column: 61, scope: !1172)
!7982 = !DILocation(line: 1637, column: 67, scope: !1172)
!7983 = !DILocation(line: 1637, column: 74, scope: !1172)
!7984 = !DILocation(line: 1637, column: 55, scope: !1172)
!7985 = !DILocation(line: 1637, column: 36, scope: !1172)
!7986 = !DILocation(line: 1637, column: 19, scope: !1172)
!7987 = !DILocation(line: 1637, column: 47, scope: !1172)
!7988 = !DILocation(line: 1637, column: 18, scope: !1172)
!7989 = !DILocation(line: 1637, column: 58, scope: !1172)
!7990 = !DILocation(line: 1640, column: 21, scope: !1172)
!7991 = !DILocation(line: 1640, column: 27, scope: !1172)
!7992 = !DILocation(line: 1640, column: 34, scope: !1172)
!7993 = !DILocation(line: 1640, column: 45, scope: !1172)
!7994 = !DILocation(line: 1640, column: 43, scope: !1172)
!7995 = !DILocation(line: 1640, column: 51, scope: !1172)
!7996 = !DILocation(line: 1640, column: 49, scope: !1172)
!7997 = !DILocation(line: 1639, column: 17, scope: !1172)
!7998 = !DILocation(line: 1641, column: 21, scope: !1172)
!7999 = !DILocation(line: 1641, column: 27, scope: !1172)
!8000 = !DILocation(line: 1641, column: 34, scope: !1172)
!8001 = !DILocation(line: 1641, column: 45, scope: !1172)
!8002 = !DILocation(line: 1641, column: 43, scope: !1172)
!8003 = !DILocation(line: 1641, column: 49, scope: !1172)
!8004 = !DILocation(line: 1642, column: 21, scope: !1172)
!8005 = !DILocation(line: 1642, column: 31, scope: !1172)
!8006 = !DILocation(line: 1643, column: 13, scope: !1173)
!8007 = !DILocation(line: 1643, column: 13, scope: !1172)
!8008 = !DILocation(line: 1628, column: 65, scope: !1173)
!8009 = !DILocation(line: 1628, column: 62, scope: !1173)
!8010 = !DILocation(line: 1628, column: 71, scope: !1173)
!8011 = !DILocation(line: 1628, column: 13, scope: !1173)
!8012 = !DILocation(line: 1646, column: 19, scope: !1168)
!8013 = !DILocation(line: 1646, column: 35, scope: !1168)
!8014 = !DILocation(line: 1646, column: 46, scope: !1168)
!8015 = !DILocation(line: 1646, column: 44, scope: !1168)
!8016 = !DILocation(line: 1646, column: 25, scope: !1168)
!8017 = !DILocation(line: 1646, column: 17, scope: !1168)
!8018 = !DILocation(line: 1647, column: 17, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !1168, file: !408, line: 1647, column: 17)
!8020 = !DILocation(line: 1647, column: 31, scope: !8019)
!8021 = !DILocation(line: 1647, column: 37, scope: !8019)
!8022 = !DILocation(line: 1647, column: 44, scope: !8019)
!8023 = !DILocation(line: 1647, column: 23, scope: !8019)
!8024 = !DILocation(line: 1647, column: 21, scope: !8019)
!8025 = !DILocation(line: 1647, column: 17, scope: !1168)
!8026 = !DILocation(line: 1649, column: 21, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8019, file: !408, line: 1647, column: 52)
!8028 = !DILocation(line: 1649, column: 27, scope: !8027)
!8029 = !DILocation(line: 1649, column: 34, scope: !8027)
!8030 = !DILocation(line: 1649, column: 45, scope: !8027)
!8031 = !DILocation(line: 1649, column: 43, scope: !8027)
!8032 = !DILocation(line: 1649, column: 51, scope: !8027)
!8033 = !DILocation(line: 1649, column: 49, scope: !8027)
!8034 = !DILocation(line: 1648, column: 17, scope: !8027)
!8035 = !DILocation(line: 1650, column: 21, scope: !8027)
!8036 = !DILocation(line: 1650, column: 27, scope: !8027)
!8037 = !DILocation(line: 1650, column: 34, scope: !8027)
!8038 = !DILocation(line: 1650, column: 45, scope: !8027)
!8039 = !DILocation(line: 1650, column: 43, scope: !8027)
!8040 = !DILocation(line: 1651, column: 22, scope: !8027)
!8041 = !DILocation(line: 1651, column: 28, scope: !8027)
!8042 = !DILocation(line: 1651, column: 35, scope: !8027)
!8043 = !DILocation(line: 1651, column: 44, scope: !8027)
!8044 = !DILocation(line: 1651, column: 42, scope: !8027)
!8045 = !DILocation(line: 1651, column: 49, scope: !8027)
!8046 = !DILocation(line: 1652, column: 13, scope: !8027)
!8047 = !DILocation(line: 1654, column: 36, scope: !1168)
!8048 = !DILocation(line: 1654, column: 13, scope: !1168)
!8049 = !DILocation(line: 1654, column: 19, scope: !1168)
!8050 = !DILocation(line: 1654, column: 26, scope: !1168)
!8051 = !DILocation(line: 1654, column: 33, scope: !1168)
!8052 = !DILocation(line: 1657, column: 13, scope: !1168)
!8053 = !DILocation(line: 1657, column: 18, scope: !8054)
!8054 = !DILexicalBlockFile(scope: !1176, file: !408, discriminator: 1)
!8055 = !DILocation(line: 1657, column: 28, scope: !1176)
!8056 = !DILocation(line: 1657, column: 59, scope: !1176)
!8057 = !DILocation(line: 1657, column: 73, scope: !1179)
!8058 = !DILocation(line: 1657, column: 89, scope: !1179)
!8059 = !DILocation(line: 1657, column: 73, scope: !1176)
!8060 = !DILocation(line: 1657, column: 104, scope: !8061)
!8061 = !DILexicalBlockFile(scope: !1179, file: !408, discriminator: 2)
!8062 = !DILocation(line: 1657, column: 109, scope: !8063)
!8063 = !DILexicalBlockFile(scope: !1178, file: !408, discriminator: 4)
!8064 = !DILocation(line: 1657, column: 119, scope: !1178)
!8065 = !DILocation(line: 1657, column: 149, scope: !1178)
!8066 = !DILocation(line: 1657, column: 175, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !1178, file: !408, line: 1657, column: 172)
!8068 = !DILocation(line: 1657, column: 192, scope: !8067)
!8069 = !DILocation(line: 1657, column: 172, scope: !8067)
!8070 = !DILocation(line: 1657, column: 202, scope: !8067)
!8071 = !DILocation(line: 1657, column: 172, scope: !1178)
!8072 = !DILocation(line: 1657, column: 172, scope: !8073)
!8073 = !DILexicalBlockFile(scope: !1178, file: !408, discriminator: 5)
!8074 = !DILocation(line: 1657, column: 233, scope: !8075)
!8075 = !DILexicalBlockFile(scope: !8067, file: !408, discriminator: 6)
!8076 = !DILocation(line: 1657, column: 251, scope: !8067)
!8077 = !DILocation(line: 1657, column: 261, scope: !8067)
!8078 = !DILocation(line: 1657, column: 286, scope: !8067)
!8079 = !DILocation(line: 1657, column: 217, scope: !8067)
!8080 = !DILocation(line: 1657, column: 305, scope: !8081)
!8081 = !DILexicalBlockFile(scope: !1179, file: !408, discriminator: 7)
!8082 = !DILocation(line: 1657, column: 305, scope: !1178)
!8083 = !DILocation(line: 1657, column: 305, scope: !8084)
!8084 = !DILexicalBlockFile(scope: !1178, file: !408, discriminator: 8)
!8085 = !DILocation(line: 1657, column: 305, scope: !8086)
!8086 = !DILexicalBlockFile(scope: !1178, file: !408, discriminator: 9)
!8087 = !DILocation(line: 1657, column: 318, scope: !8088)
!8088 = !DILexicalBlockFile(scope: !8089, file: !408, discriminator: 10)
!8089 = !DILexicalBlockFile(scope: !1168, file: !408, discriminator: 3)
!8090 = !DILocation(line: 1657, column: 318, scope: !1176)
!8091 = !DILocation(line: 1657, column: 318, scope: !8092)
!8092 = !DILexicalBlockFile(scope: !1176, file: !408, discriminator: 11)
!8093 = !DILocation(line: 1658, column: 13, scope: !1168)
!8094 = !DILocation(line: 1659, column: 9, scope: !1169)
!8095 = !DILocation(line: 1662, column: 35, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !1169, file: !408, line: 1660, column: 14)
!8097 = !DILocation(line: 1662, column: 19, scope: !8096)
!8098 = !DILocation(line: 1662, column: 17, scope: !8096)
!8099 = !DILocation(line: 1663, column: 18, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8096, file: !408, line: 1663, column: 17)
!8101 = !DILocation(line: 1663, column: 17, scope: !8096)
!8102 = !DILocation(line: 1665, column: 21, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8100, file: !408, line: 1663, column: 23)
!8104 = !DILocation(line: 1666, column: 72, scope: !8103)
!8105 = !DILocation(line: 1666, column: 81, scope: !8103)
!8106 = !DILocation(line: 1666, column: 91, scope: !8103)
!8107 = !DILocation(line: 1664, column: 17, scope: !8103)
!8108 = !DILocation(line: 1668, column: 17, scope: !8103)
!8109 = !DILocation(line: 1670, column: 38, scope: !8096)
!8110 = !DILocation(line: 1670, column: 22, scope: !8096)
!8111 = !DILocation(line: 1670, column: 20, scope: !8096)
!8112 = !DILocation(line: 1673, column: 13, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1673, column: 13)
!8114 = !DILocation(line: 1673, column: 18, scope: !8113)
!8115 = !DILocation(line: 1673, column: 23, scope: !8113)
!8116 = !DILocation(line: 1673, column: 26, scope: !8117)
!8117 = !DILexicalBlockFile(scope: !8113, file: !408, discriminator: 1)
!8118 = !DILocation(line: 1673, column: 36, scope: !8113)
!8119 = !DILocation(line: 1673, column: 33, scope: !8113)
!8120 = !DILocation(line: 1673, column: 13, scope: !1157)
!8121 = !DILocation(line: 1675, column: 26, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8113, file: !408, line: 1674, column: 9)
!8123 = !DILocation(line: 1678, column: 17, scope: !8122)
!8124 = !DILocation(line: 1678, column: 25, scope: !8122)
!8125 = !DILocation(line: 1675, column: 13, scope: !8122)
!8126 = !DILocation(line: 1680, column: 13, scope: !8122)
!8127 = !DILocation(line: 1684, column: 13, scope: !1187)
!8128 = !DILocation(line: 1684, column: 22, scope: !1187)
!8129 = !DILocation(line: 1684, column: 20, scope: !1187)
!8130 = !DILocation(line: 1684, column: 13, scope: !1157)
!8131 = !DILocation(line: 1685, column: 32, scope: !1185)
!8132 = !DILocation(line: 1685, column: 38, scope: !1185)
!8133 = !DILocation(line: 1685, column: 47, scope: !1185)
!8134 = !DILocation(line: 1685, column: 45, scope: !1185)
!8135 = !DILocation(line: 1685, column: 17, scope: !1185)
!8136 = !DILocation(line: 1685, column: 57, scope: !1185)
!8137 = !DILocation(line: 1685, column: 17, scope: !1186)
!8138 = !DILocation(line: 1686, column: 21, scope: !1183)
!8139 = !DILocation(line: 1686, column: 21, scope: !1184)
!8140 = !DILocation(line: 1687, column: 21, scope: !1182)
!8141 = !DILocation(line: 1687, column: 26, scope: !8142)
!8142 = !DILexicalBlockFile(scope: !1181, file: !408, discriminator: 1)
!8143 = !DILocation(line: 1687, column: 36, scope: !1181)
!8144 = !DILocation(line: 1687, column: 66, scope: !1181)
!8145 = !DILocation(line: 1687, column: 80, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !1181, file: !408, line: 1687, column: 77)
!8147 = !DILocation(line: 1687, column: 97, scope: !8146)
!8148 = !DILocation(line: 1687, column: 77, scope: !8146)
!8149 = !DILocation(line: 1687, column: 107, scope: !8146)
!8150 = !DILocation(line: 1687, column: 77, scope: !1181)
!8151 = !DILocation(line: 1687, column: 77, scope: !8152)
!8152 = !DILexicalBlockFile(scope: !1181, file: !408, discriminator: 2)
!8153 = !DILocation(line: 1687, column: 138, scope: !8154)
!8154 = !DILexicalBlockFile(scope: !8146, file: !408, discriminator: 3)
!8155 = !DILocation(line: 1687, column: 156, scope: !8146)
!8156 = !DILocation(line: 1687, column: 166, scope: !8146)
!8157 = !DILocation(line: 1687, column: 191, scope: !8146)
!8158 = !DILocation(line: 1687, column: 122, scope: !8146)
!8159 = !DILocation(line: 1687, column: 210, scope: !8160)
!8160 = !DILexicalBlockFile(scope: !1182, file: !408, discriminator: 4)
!8161 = !DILocation(line: 1687, column: 210, scope: !1181)
!8162 = !DILocation(line: 1687, column: 210, scope: !8163)
!8163 = !DILexicalBlockFile(scope: !1181, file: !408, discriminator: 5)
!8164 = !DILocation(line: 1688, column: 17, scope: !1182)
!8165 = !DILocation(line: 1689, column: 17, scope: !1184)
!8166 = !DILocation(line: 1691, column: 9, scope: !1186)
!8167 = !DILocation(line: 1693, column: 13, scope: !1195)
!8168 = !DILocation(line: 1693, column: 22, scope: !1195)
!8169 = !DILocation(line: 1693, column: 13, scope: !1157)
!8170 = !DILocation(line: 1697, column: 34, scope: !1194)
!8171 = !DILocation(line: 1697, column: 23, scope: !1194)
!8172 = !DILocation(line: 1697, column: 21, scope: !1194)
!8173 = !DILocation(line: 1698, column: 18, scope: !1193)
!8174 = !DILocation(line: 1698, column: 17, scope: !1194)
!8175 = !DILocation(line: 1699, column: 21, scope: !1191)
!8176 = !DILocation(line: 1699, column: 21, scope: !1192)
!8177 = !DILocation(line: 1700, column: 21, scope: !1190)
!8178 = !DILocation(line: 1700, column: 26, scope: !8179)
!8179 = !DILexicalBlockFile(scope: !1189, file: !408, discriminator: 1)
!8180 = !DILocation(line: 1700, column: 36, scope: !1189)
!8181 = !DILocation(line: 1700, column: 66, scope: !1189)
!8182 = !DILocation(line: 1700, column: 80, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !1189, file: !408, line: 1700, column: 77)
!8184 = !DILocation(line: 1700, column: 97, scope: !8183)
!8185 = !DILocation(line: 1700, column: 77, scope: !8183)
!8186 = !DILocation(line: 1700, column: 107, scope: !8183)
!8187 = !DILocation(line: 1700, column: 77, scope: !1189)
!8188 = !DILocation(line: 1700, column: 77, scope: !8189)
!8189 = !DILexicalBlockFile(scope: !1189, file: !408, discriminator: 2)
!8190 = !DILocation(line: 1700, column: 138, scope: !8191)
!8191 = !DILexicalBlockFile(scope: !8183, file: !408, discriminator: 3)
!8192 = !DILocation(line: 1700, column: 156, scope: !8183)
!8193 = !DILocation(line: 1700, column: 166, scope: !8183)
!8194 = !DILocation(line: 1700, column: 191, scope: !8183)
!8195 = !DILocation(line: 1700, column: 122, scope: !8183)
!8196 = !DILocation(line: 1700, column: 210, scope: !8197)
!8197 = !DILexicalBlockFile(scope: !1190, file: !408, discriminator: 4)
!8198 = !DILocation(line: 1700, column: 210, scope: !1189)
!8199 = !DILocation(line: 1700, column: 210, scope: !8200)
!8200 = !DILexicalBlockFile(scope: !1189, file: !408, discriminator: 5)
!8201 = !DILocation(line: 1701, column: 17, scope: !1190)
!8202 = !DILocation(line: 1702, column: 17, scope: !1192)
!8203 = !DILocation(line: 1704, column: 24, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !1194, file: !408, line: 1704, column: 13)
!8205 = !DILocation(line: 1704, column: 22, scope: !8204)
!8206 = !DILocation(line: 1704, column: 33, scope: !8204)
!8207 = !DILocation(line: 1704, column: 18, scope: !8204)
!8208 = !DILocation(line: 1704, column: 38, scope: !8209)
!8209 = !DILexicalBlockFile(scope: !8210, file: !408, discriminator: 2)
!8210 = !DILexicalBlockFile(scope: !8211, file: !408, discriminator: 1)
!8211 = distinct !DILexicalBlock(scope: !8204, file: !408, line: 1704, column: 13)
!8212 = !DILocation(line: 1704, column: 42, scope: !8211)
!8213 = !DILocation(line: 1704, column: 40, scope: !8211)
!8214 = !DILocation(line: 1704, column: 13, scope: !8204)
!8215 = !DILocation(line: 1706, column: 83, scope: !8211)
!8216 = !DILocation(line: 1706, column: 61, scope: !8211)
!8217 = !DILocation(line: 1706, column: 67, scope: !8211)
!8218 = !DILocation(line: 1706, column: 74, scope: !8211)
!8219 = !DILocation(line: 1706, column: 55, scope: !8211)
!8220 = !DILocation(line: 1706, column: 36, scope: !8211)
!8221 = !DILocation(line: 1706, column: 19, scope: !8211)
!8222 = !DILocation(line: 1706, column: 47, scope: !8211)
!8223 = !DILocation(line: 1706, column: 18, scope: !8211)
!8224 = !DILocation(line: 1706, column: 58, scope: !8211)
!8225 = !DILocation(line: 1706, column: 17, scope: !8211)
!8226 = !DILocation(line: 1705, column: 25, scope: !8211)
!8227 = !DILocation(line: 1705, column: 22, scope: !8211)
!8228 = !DILocation(line: 1705, column: 32, scope: !8211)
!8229 = !DILocation(line: 1704, column: 13, scope: !8211)
!8230 = !DILocation(line: 1707, column: 9, scope: !1194)
!8231 = !DILocation(line: 1709, column: 13, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !1157, file: !408, line: 1709, column: 13)
!8233 = !DILocation(line: 1709, column: 22, scope: !8232)
!8234 = !DILocation(line: 1709, column: 20, scope: !8232)
!8235 = !DILocation(line: 1709, column: 13, scope: !1157)
!8236 = !DILocation(line: 1711, column: 22, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8238, file: !408, line: 1711, column: 13)
!8238 = distinct !DILexicalBlock(scope: !8232, file: !408, line: 1709, column: 32)
!8239 = !DILocation(line: 1711, column: 20, scope: !8237)
!8240 = !DILocation(line: 1711, column: 18, scope: !8237)
!8241 = !DILocation(line: 1711, column: 28, scope: !8242)
!8242 = !DILexicalBlockFile(scope: !8243, file: !408, discriminator: 2)
!8243 = !DILexicalBlockFile(scope: !8244, file: !408, discriminator: 1)
!8244 = distinct !DILexicalBlock(scope: !8237, file: !408, line: 1711, column: 13)
!8245 = !DILocation(line: 1711, column: 32, scope: !8244)
!8246 = !DILocation(line: 1711, column: 38, scope: !8244)
!8247 = !DILocation(line: 1711, column: 45, scope: !8244)
!8248 = !DILocation(line: 1711, column: 30, scope: !8244)
!8249 = !DILocation(line: 1711, column: 13, scope: !8237)
!8250 = !DILocation(line: 1712, column: 86, scope: !8244)
!8251 = !DILocation(line: 1712, column: 64, scope: !8244)
!8252 = !DILocation(line: 1712, column: 70, scope: !8244)
!8253 = !DILocation(line: 1712, column: 77, scope: !8244)
!8254 = !DILocation(line: 1712, column: 39, scope: !8244)
!8255 = !DILocation(line: 1712, column: 43, scope: !8244)
!8256 = !DILocation(line: 1712, column: 41, scope: !8244)
!8257 = !DILocation(line: 1712, column: 52, scope: !8244)
!8258 = !DILocation(line: 1712, column: 50, scope: !8244)
!8259 = !DILocation(line: 1712, column: 17, scope: !8244)
!8260 = !DILocation(line: 1712, column: 23, scope: !8244)
!8261 = !DILocation(line: 1712, column: 30, scope: !8244)
!8262 = !DILocation(line: 1712, column: 62, scope: !8244)
!8263 = !DILocation(line: 1711, column: 54, scope: !8244)
!8264 = !DILocation(line: 1711, column: 13, scope: !8244)
!8265 = !DILocation(line: 1713, column: 9, scope: !8238)
!8266 = !DILocation(line: 1713, column: 20, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8232, file: !408, line: 1713, column: 20)
!8268 = !DILocation(line: 1713, column: 29, scope: !8267)
!8269 = !DILocation(line: 1713, column: 27, scope: !8267)
!8270 = !DILocation(line: 1713, column: 20, scope: !8232)
!8271 = !DILocation(line: 1715, column: 22, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !408, line: 1715, column: 13)
!8273 = distinct !DILexicalBlock(scope: !8267, file: !408, line: 1713, column: 39)
!8274 = !DILocation(line: 1715, column: 28, scope: !8272)
!8275 = !DILocation(line: 1715, column: 35, scope: !8272)
!8276 = !DILocation(line: 1715, column: 41, scope: !8272)
!8277 = !DILocation(line: 1715, column: 20, scope: !8272)
!8278 = !DILocation(line: 1715, column: 18, scope: !8272)
!8279 = !DILocation(line: 1715, column: 45, scope: !8280)
!8280 = !DILexicalBlockFile(scope: !8281, file: !408, discriminator: 2)
!8281 = !DILexicalBlockFile(scope: !8282, file: !408, discriminator: 1)
!8282 = distinct !DILexicalBlock(scope: !8272, file: !408, line: 1715, column: 13)
!8283 = !DILocation(line: 1715, column: 50, scope: !8282)
!8284 = !DILocation(line: 1715, column: 47, scope: !8282)
!8285 = !DILocation(line: 1715, column: 13, scope: !8272)
!8286 = !DILocation(line: 1716, column: 86, scope: !8282)
!8287 = !DILocation(line: 1716, column: 64, scope: !8282)
!8288 = !DILocation(line: 1716, column: 70, scope: !8282)
!8289 = !DILocation(line: 1716, column: 77, scope: !8282)
!8290 = !DILocation(line: 1716, column: 39, scope: !8282)
!8291 = !DILocation(line: 1716, column: 43, scope: !8282)
!8292 = !DILocation(line: 1716, column: 41, scope: !8282)
!8293 = !DILocation(line: 1716, column: 52, scope: !8282)
!8294 = !DILocation(line: 1716, column: 50, scope: !8282)
!8295 = !DILocation(line: 1716, column: 17, scope: !8282)
!8296 = !DILocation(line: 1716, column: 23, scope: !8282)
!8297 = !DILocation(line: 1716, column: 30, scope: !8282)
!8298 = !DILocation(line: 1716, column: 62, scope: !8282)
!8299 = !DILocation(line: 1715, column: 57, scope: !8282)
!8300 = !DILocation(line: 1715, column: 13, scope: !8282)
!8301 = !DILocation(line: 1717, column: 9, scope: !8273)
!8302 = !DILocation(line: 1720, column: 20, scope: !1199)
!8303 = !DILocation(line: 1720, column: 18, scope: !1199)
!8304 = !DILocation(line: 1720, column: 29, scope: !1199)
!8305 = !DILocation(line: 1720, column: 14, scope: !1199)
!8306 = !DILocation(line: 1720, column: 34, scope: !8307)
!8307 = !DILexicalBlockFile(scope: !8308, file: !408, discriminator: 2)
!8308 = !DILexicalBlockFile(scope: !1198, file: !408, discriminator: 1)
!8309 = !DILocation(line: 1720, column: 38, scope: !1198)
!8310 = !DILocation(line: 1720, column: 36, scope: !1198)
!8311 = !DILocation(line: 1720, column: 9, scope: !1199)
!8312 = !DILocation(line: 1722, column: 13, scope: !1197)
!8313 = !DILocation(line: 1722, column: 23, scope: !1197)
!8314 = !DILocation(line: 1722, column: 51, scope: !1197)
!8315 = !DILocation(line: 1722, column: 58, scope: !1197)
!8316 = !DILocation(line: 1722, column: 69, scope: !1197)
!8317 = !DILocation(line: 1722, column: 78, scope: !1197)
!8318 = !DILocation(line: 1722, column: 95, scope: !1197)
!8319 = !DILocation(line: 1722, column: 34, scope: !1197)
!8320 = !DILocation(line: 1722, column: 137, scope: !8321)
!8321 = !DILexicalBlockFile(scope: !1197, file: !408, discriminator: 1)
!8322 = !DILocation(line: 1722, column: 122, scope: !1197)
!8323 = !DILocation(line: 1722, column: 105, scope: !1197)
!8324 = !DILocation(line: 1722, column: 129, scope: !1197)
!8325 = !DILocation(line: 1722, column: 104, scope: !1197)
!8326 = !DILocation(line: 1722, column: 178, scope: !8327)
!8327 = !DILexicalBlockFile(scope: !1197, file: !408, discriminator: 2)
!8328 = !DILocation(line: 1722, column: 163, scope: !1197)
!8329 = !DILocation(line: 1722, column: 145, scope: !1197)
!8330 = !DILocation(line: 1722, column: 170, scope: !1197)
!8331 = !DILocation(line: 1722, column: 144, scope: !1197)
!8332 = !DILocation(line: 1722, column: 23, scope: !8333)
!8333 = !DILexicalBlockFile(scope: !8334, file: !408, discriminator: 4)
!8334 = !DILexicalBlockFile(scope: !1197, file: !408, discriminator: 3)
!8335 = !DILocation(line: 1723, column: 29, scope: !1197)
!8336 = !DILocation(line: 1723, column: 40, scope: !1197)
!8337 = !DILocation(line: 1723, column: 49, scope: !1197)
!8338 = !DILocation(line: 1724, column: 42, scope: !1197)
!8339 = !DILocation(line: 1724, column: 35, scope: !1197)
!8340 = !DILocation(line: 1724, column: 13, scope: !1197)
!8341 = !DILocation(line: 1724, column: 19, scope: !1197)
!8342 = !DILocation(line: 1724, column: 26, scope: !1197)
!8343 = !DILocation(line: 1724, column: 40, scope: !1197)
!8344 = !DILocation(line: 1725, column: 9, scope: !1198)
!8345 = !DILocation(line: 1725, column: 9, scope: !1197)
!8346 = !DILocation(line: 1721, column: 21, scope: !1198)
!8347 = !DILocation(line: 1721, column: 18, scope: !1198)
!8348 = !DILocation(line: 1721, column: 28, scope: !1198)
!8349 = !DILocation(line: 1720, column: 9, scope: !1198)
!8350 = !DILocation(line: 1727, column: 32, scope: !1157)
!8351 = !DILocation(line: 1727, column: 41, scope: !1157)
!8352 = !DILocation(line: 1727, column: 39, scope: !1157)
!8353 = !DILocation(line: 1727, column: 9, scope: !1157)
!8354 = !DILocation(line: 1727, column: 15, scope: !1157)
!8355 = !DILocation(line: 1727, column: 22, scope: !1157)
!8356 = !DILocation(line: 1727, column: 29, scope: !1157)
!8357 = !DILocation(line: 1729, column: 13, scope: !1203)
!8358 = !DILocation(line: 1729, column: 13, scope: !1157)
!8359 = !DILocation(line: 1730, column: 13, scope: !1202)
!8360 = !DILocation(line: 1730, column: 18, scope: !8361)
!8361 = !DILexicalBlockFile(scope: !1201, file: !408, discriminator: 1)
!8362 = !DILocation(line: 1730, column: 28, scope: !1201)
!8363 = !DILocation(line: 1730, column: 58, scope: !1201)
!8364 = !DILocation(line: 1730, column: 72, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !1201, file: !408, line: 1730, column: 69)
!8366 = !DILocation(line: 1730, column: 89, scope: !8365)
!8367 = !DILocation(line: 1730, column: 69, scope: !8365)
!8368 = !DILocation(line: 1730, column: 99, scope: !8365)
!8369 = !DILocation(line: 1730, column: 69, scope: !1201)
!8370 = !DILocation(line: 1730, column: 69, scope: !8371)
!8371 = !DILexicalBlockFile(scope: !1201, file: !408, discriminator: 2)
!8372 = !DILocation(line: 1730, column: 130, scope: !8373)
!8373 = !DILexicalBlockFile(scope: !8365, file: !408, discriminator: 3)
!8374 = !DILocation(line: 1730, column: 148, scope: !8365)
!8375 = !DILocation(line: 1730, column: 158, scope: !8365)
!8376 = !DILocation(line: 1730, column: 183, scope: !8365)
!8377 = !DILocation(line: 1730, column: 114, scope: !8365)
!8378 = !DILocation(line: 1730, column: 202, scope: !8379)
!8379 = !DILexicalBlockFile(scope: !1202, file: !408, discriminator: 4)
!8380 = !DILocation(line: 1730, column: 202, scope: !1201)
!8381 = !DILocation(line: 1730, column: 202, scope: !8382)
!8382 = !DILexicalBlockFile(scope: !1201, file: !408, discriminator: 5)
!8383 = !DILocation(line: 1731, column: 9, scope: !1202)
!8384 = !DILocation(line: 1734, column: 9, scope: !1157)
!8385 = !DILocation(line: 1734, column: 14, scope: !8386)
!8386 = !DILexicalBlockFile(scope: !1205, file: !408, discriminator: 1)
!8387 = !DILocation(line: 1734, column: 24, scope: !1205)
!8388 = !DILocation(line: 1734, column: 55, scope: !1205)
!8389 = !DILocation(line: 1734, column: 69, scope: !1208)
!8390 = !DILocation(line: 1734, column: 85, scope: !1208)
!8391 = !DILocation(line: 1734, column: 69, scope: !1205)
!8392 = !DILocation(line: 1734, column: 100, scope: !8393)
!8393 = !DILexicalBlockFile(scope: !1208, file: !408, discriminator: 2)
!8394 = !DILocation(line: 1734, column: 105, scope: !8395)
!8395 = !DILexicalBlockFile(scope: !1207, file: !408, discriminator: 4)
!8396 = !DILocation(line: 1734, column: 115, scope: !1207)
!8397 = !DILocation(line: 1734, column: 145, scope: !1207)
!8398 = !DILocation(line: 1734, column: 171, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !1207, file: !408, line: 1734, column: 168)
!8400 = !DILocation(line: 1734, column: 188, scope: !8399)
!8401 = !DILocation(line: 1734, column: 168, scope: !8399)
!8402 = !DILocation(line: 1734, column: 198, scope: !8399)
!8403 = !DILocation(line: 1734, column: 168, scope: !1207)
!8404 = !DILocation(line: 1734, column: 168, scope: !8405)
!8405 = !DILexicalBlockFile(scope: !1207, file: !408, discriminator: 5)
!8406 = !DILocation(line: 1734, column: 229, scope: !8407)
!8407 = !DILexicalBlockFile(scope: !8399, file: !408, discriminator: 6)
!8408 = !DILocation(line: 1734, column: 247, scope: !8399)
!8409 = !DILocation(line: 1734, column: 257, scope: !8399)
!8410 = !DILocation(line: 1734, column: 282, scope: !8399)
!8411 = !DILocation(line: 1734, column: 213, scope: !8399)
!8412 = !DILocation(line: 1734, column: 301, scope: !8413)
!8413 = !DILexicalBlockFile(scope: !1208, file: !408, discriminator: 7)
!8414 = !DILocation(line: 1734, column: 301, scope: !1207)
!8415 = !DILocation(line: 1734, column: 301, scope: !8416)
!8416 = !DILexicalBlockFile(scope: !1207, file: !408, discriminator: 8)
!8417 = !DILocation(line: 1734, column: 301, scope: !8418)
!8418 = !DILexicalBlockFile(scope: !1207, file: !408, discriminator: 9)
!8419 = !DILocation(line: 1734, column: 314, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !8421, file: !408, discriminator: 10)
!8421 = !DILexicalBlockFile(scope: !1157, file: !408, discriminator: 3)
!8422 = !DILocation(line: 1734, column: 314, scope: !1205)
!8423 = !DILocation(line: 1734, column: 314, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !1205, file: !408, discriminator: 11)
!8425 = !DILocation(line: 1736, column: 9, scope: !1157)
!8426 = !DILocation(line: 1737, column: 5, scope: !1158)
!8427 = !DILocation(line: 1739, column: 25, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !1158, file: !408, line: 1738, column: 10)
!8429 = !DILocation(line: 1739, column: 9, scope: !8428)
!8430 = !DILocation(line: 1741, column: 9, scope: !8428)
!8431 = !DILocation(line: 1743, column: 1, scope: !1147)
!8432 = !DILocation(line: 501, column: 35, scope: !1248)
!8433 = !DILocation(line: 506, column: 5, scope: !1248)
!8434 = !DILocation(line: 506, column: 15, scope: !1248)
!8435 = !DILocation(line: 506, column: 21, scope: !1248)
!8436 = !DILocation(line: 506, column: 27, scope: !1248)
!8437 = !DILocation(line: 506, column: 34, scope: !1248)
!8438 = !DILocation(line: 508, column: 9, scope: !1255)
!8439 = !DILocation(line: 508, column: 13, scope: !1255)
!8440 = !DILocation(line: 508, column: 9, scope: !1248)
!8441 = !DILocation(line: 510, column: 15, scope: !1254)
!8442 = !DILocation(line: 510, column: 13, scope: !1254)
!8443 = !DILocation(line: 511, column: 14, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !1254, file: !408, line: 511, column: 13)
!8445 = !DILocation(line: 511, column: 13, scope: !1254)
!8446 = !DILocation(line: 512, column: 13, scope: !8444)
!8447 = !DILocation(line: 513, column: 9, scope: !1254)
!8448 = !DILocation(line: 513, column: 14, scope: !8449)
!8449 = !DILexicalBlockFile(scope: !1253, file: !408, discriminator: 1)
!8450 = !DILocation(line: 513, column: 24, scope: !1253)
!8451 = !DILocation(line: 513, column: 82, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !1253, file: !408, line: 513, column: 79)
!8453 = !DILocation(line: 513, column: 99, scope: !8452)
!8454 = !DILocation(line: 513, column: 79, scope: !8452)
!8455 = !DILocation(line: 513, column: 109, scope: !8452)
!8456 = !DILocation(line: 513, column: 79, scope: !1253)
!8457 = !DILocation(line: 513, column: 79, scope: !8458)
!8458 = !DILexicalBlockFile(scope: !1253, file: !408, discriminator: 2)
!8459 = !DILocation(line: 513, column: 140, scope: !8460)
!8460 = !DILexicalBlockFile(scope: !8452, file: !408, discriminator: 3)
!8461 = !DILocation(line: 513, column: 158, scope: !8452)
!8462 = !DILocation(line: 513, column: 168, scope: !8452)
!8463 = !DILocation(line: 513, column: 193, scope: !8452)
!8464 = !DILocation(line: 513, column: 124, scope: !8452)
!8465 = !DILocation(line: 513, column: 212, scope: !8466)
!8466 = !DILexicalBlockFile(scope: !1254, file: !408, discriminator: 4)
!8467 = !DILocation(line: 513, column: 212, scope: !1253)
!8468 = !DILocation(line: 513, column: 212, scope: !8469)
!8469 = !DILexicalBlockFile(scope: !1253, file: !408, discriminator: 5)
!8470 = !DILocation(line: 514, column: 31, scope: !1254)
!8471 = !DILocation(line: 514, column: 9, scope: !1254)
!8472 = !DILocation(line: 514, column: 15, scope: !1254)
!8473 = !DILocation(line: 514, column: 22, scope: !1254)
!8474 = !DILocation(line: 514, column: 29, scope: !1254)
!8475 = !DILocation(line: 515, column: 5, scope: !1254)
!8476 = !DILocation(line: 517, column: 12, scope: !1248)
!8477 = !DILocation(line: 517, column: 5, scope: !1248)
!8478 = !DILocation(line: 518, column: 1, scope: !1248)
!8479 = !DILocation(line: 65, column: 42, scope: !1347)
!8480 = !DILocation(line: 67, column: 10, scope: !1354)
!8481 = !DILocation(line: 67, column: 9, scope: !1354)
!8482 = !DILocation(line: 67, column: 9, scope: !1347)
!8483 = !DILocation(line: 68, column: 9, scope: !1353)
!8484 = !DILocation(line: 68, column: 19, scope: !1353)
!8485 = !DILocation(line: 68, column: 56, scope: !1353)
!8486 = !DILocation(line: 68, column: 55, scope: !1353)
!8487 = !DILocation(line: 68, column: 39, scope: !1353)
!8488 = !DILocation(line: 68, column: 59, scope: !1353)
!8489 = !DILocation(line: 68, column: 26, scope: !1353)
!8490 = !DILocation(line: 69, column: 10, scope: !1353)
!8491 = !DILocation(line: 69, column: 12, scope: !1353)
!8492 = !DILocation(line: 70, column: 9, scope: !1353)
!8493 = !DILocation(line: 70, column: 14, scope: !8494)
!8494 = !DILexicalBlockFile(scope: !1356, file: !408, discriminator: 1)
!8495 = !DILocation(line: 70, column: 24, scope: !1356)
!8496 = !DILocation(line: 70, column: 54, scope: !1356)
!8497 = !DILocation(line: 70, column: 68, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !1356, file: !408, line: 70, column: 65)
!8499 = !DILocation(line: 70, column: 85, scope: !8498)
!8500 = !DILocation(line: 70, column: 65, scope: !8498)
!8501 = !DILocation(line: 70, column: 95, scope: !8498)
!8502 = !DILocation(line: 70, column: 65, scope: !1356)
!8503 = !DILocation(line: 70, column: 65, scope: !8504)
!8504 = !DILexicalBlockFile(scope: !1356, file: !408, discriminator: 2)
!8505 = !DILocation(line: 70, column: 126, scope: !8506)
!8506 = !DILexicalBlockFile(scope: !8498, file: !408, discriminator: 3)
!8507 = !DILocation(line: 70, column: 144, scope: !8498)
!8508 = !DILocation(line: 70, column: 154, scope: !8498)
!8509 = !DILocation(line: 70, column: 179, scope: !8498)
!8510 = !DILocation(line: 70, column: 110, scope: !8498)
!8511 = !DILocation(line: 70, column: 198, scope: !8512)
!8512 = !DILexicalBlockFile(scope: !1353, file: !408, discriminator: 4)
!8513 = !DILocation(line: 70, column: 198, scope: !1356)
!8514 = !DILocation(line: 70, column: 198, scope: !8515)
!8515 = !DILexicalBlockFile(scope: !1356, file: !408, discriminator: 5)
!8516 = !DILocation(line: 71, column: 5, scope: !1354)
!8517 = !DILocation(line: 71, column: 5, scope: !1353)
!8518 = !DILocation(line: 72, column: 1, scope: !1347)
!8519 = !DILocation(line: 251, column: 30, scope: !1357)
!8520 = !DILocation(line: 253, column: 5, scope: !1357)
!8521 = !DILocation(line: 253, column: 25, scope: !1357)
!8522 = !DILocation(line: 254, column: 5, scope: !1357)
!8523 = !DILocation(line: 254, column: 9, scope: !1357)
!8524 = !DILocation(line: 256, column: 10, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !1357, file: !408, line: 256, column: 9)
!8526 = !DILocation(line: 256, column: 16, scope: !8525)
!8527 = !DILocation(line: 256, column: 9, scope: !1357)
!8528 = !DILocation(line: 257, column: 9, scope: !8525)
!8529 = !DILocation(line: 261, column: 15, scope: !1357)
!8530 = !DILocation(line: 261, column: 21, scope: !1357)
!8531 = !DILocation(line: 261, column: 13, scope: !1357)
!8532 = !DILocation(line: 262, column: 5, scope: !1357)
!8533 = !DILocation(line: 262, column: 11, scope: !1357)
!8534 = !DILocation(line: 262, column: 17, scope: !1357)
!8535 = !DILocation(line: 264, column: 5, scope: !1357)
!8536 = !DILocation(line: 264, column: 10, scope: !8537)
!8537 = !DILexicalBlockFile(scope: !1363, file: !408, discriminator: 1)
!8538 = !DILocation(line: 264, column: 20, scope: !1363)
!8539 = !DILocation(line: 264, column: 50, scope: !1363)
!8540 = !DILocation(line: 264, column: 59, scope: !1363)
!8541 = !DILocation(line: 264, column: 76, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !1363, file: !408, line: 264, column: 73)
!8543 = !DILocation(line: 264, column: 93, scope: !8542)
!8544 = !DILocation(line: 264, column: 73, scope: !8542)
!8545 = !DILocation(line: 264, column: 103, scope: !8542)
!8546 = !DILocation(line: 264, column: 73, scope: !1363)
!8547 = !DILocation(line: 264, column: 73, scope: !8548)
!8548 = !DILexicalBlockFile(scope: !1363, file: !408, discriminator: 2)
!8549 = !DILocation(line: 264, column: 134, scope: !8550)
!8550 = !DILexicalBlockFile(scope: !8542, file: !408, discriminator: 3)
!8551 = !DILocation(line: 264, column: 152, scope: !8542)
!8552 = !DILocation(line: 264, column: 162, scope: !8542)
!8553 = !DILocation(line: 264, column: 187, scope: !8542)
!8554 = !DILocation(line: 264, column: 118, scope: !8542)
!8555 = !DILocation(line: 264, column: 206, scope: !8556)
!8556 = !DILexicalBlockFile(scope: !1357, file: !408, discriminator: 4)
!8557 = !DILocation(line: 264, column: 206, scope: !1363)
!8558 = !DILocation(line: 264, column: 206, scope: !8559)
!8559 = !DILexicalBlockFile(scope: !1363, file: !408, discriminator: 5)
!8560 = !DILocation(line: 266, column: 12, scope: !1367)
!8561 = !DILocation(line: 266, column: 10, scope: !1367)
!8562 = !DILocation(line: 266, column: 17, scope: !8563)
!8563 = !DILexicalBlockFile(scope: !8564, file: !408, discriminator: 2)
!8564 = !DILexicalBlockFile(scope: !1366, file: !408, discriminator: 1)
!8565 = !DILocation(line: 266, column: 21, scope: !1366)
!8566 = !DILocation(line: 266, column: 30, scope: !1366)
!8567 = !DILocation(line: 266, column: 19, scope: !1366)
!8568 = !DILocation(line: 266, column: 5, scope: !1367)
!8569 = !DILocation(line: 267, column: 9, scope: !1366)
!8570 = !DILocation(line: 267, column: 14, scope: !8571)
!8571 = !DILexicalBlockFile(scope: !1365, file: !408, discriminator: 1)
!8572 = !DILocation(line: 267, column: 24, scope: !1365)
!8573 = !DILocation(line: 267, column: 72, scope: !1365)
!8574 = !DILocation(line: 267, column: 54, scope: !1365)
!8575 = !DILocation(line: 267, column: 63, scope: !1365)
!8576 = !DILocation(line: 267, column: 85, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !1365, file: !408, line: 267, column: 82)
!8578 = !DILocation(line: 267, column: 102, scope: !8577)
!8579 = !DILocation(line: 267, column: 82, scope: !8577)
!8580 = !DILocation(line: 267, column: 112, scope: !8577)
!8581 = !DILocation(line: 267, column: 82, scope: !1365)
!8582 = !DILocation(line: 267, column: 82, scope: !8583)
!8583 = !DILexicalBlockFile(scope: !1365, file: !408, discriminator: 2)
!8584 = !DILocation(line: 267, column: 143, scope: !8585)
!8585 = !DILexicalBlockFile(scope: !8577, file: !408, discriminator: 3)
!8586 = !DILocation(line: 267, column: 161, scope: !8577)
!8587 = !DILocation(line: 267, column: 171, scope: !8577)
!8588 = !DILocation(line: 267, column: 196, scope: !8577)
!8589 = !DILocation(line: 267, column: 127, scope: !8577)
!8590 = !DILocation(line: 267, column: 215, scope: !8591)
!8591 = !DILexicalBlockFile(scope: !1366, file: !408, discriminator: 4)
!8592 = !DILocation(line: 267, column: 215, scope: !1365)
!8593 = !DILocation(line: 267, column: 215, scope: !8594)
!8594 = !DILexicalBlockFile(scope: !1365, file: !408, discriminator: 5)
!8595 = !DILocation(line: 267, column: 215, scope: !8596)
!8596 = !DILexicalBlockFile(scope: !1365, file: !408, discriminator: 6)
!8597 = !DILocation(line: 266, column: 39, scope: !1366)
!8598 = !DILocation(line: 266, column: 5, scope: !1366)
!8599 = !DILocation(line: 269, column: 9, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !1357, file: !408, line: 269, column: 9)
!8601 = !DILocation(line: 269, column: 18, scope: !8600)
!8602 = !DILocation(line: 269, column: 30, scope: !8600)
!8603 = !DILocation(line: 269, column: 39, scope: !8600)
!8604 = !DILocation(line: 269, column: 27, scope: !8600)
!8605 = !DILocation(line: 269, column: 9, scope: !1357)
!8606 = !DILocation(line: 270, column: 23, scope: !8600)
!8607 = !DILocation(line: 270, column: 32, scope: !8600)
!8608 = !DILocation(line: 270, column: 9, scope: !8600)
!8609 = !DILocation(line: 272, column: 19, scope: !1357)
!8610 = !DILocation(line: 272, column: 5, scope: !1357)
!8611 = !DILocation(line: 273, column: 1, scope: !1357)
!8612 = !DILocation(line: 273, column: 1, scope: !8613)
!8613 = !DILexicalBlockFile(scope: !1357, file: !408, discriminator: 1)
!8614 = !DILocation(line: 671, column: 36, scope: !1368)
!8615 = !DILocation(line: 671, column: 52, scope: !1368)
!8616 = !DILocation(line: 673, column: 27, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !1368, file: !408, line: 673, column: 9)
!8618 = !DILocation(line: 673, column: 10, scope: !8617)
!8619 = !DILocation(line: 673, column: 9, scope: !1368)
!8620 = !DILocation(line: 674, column: 9, scope: !8617)
!8621 = !DILocation(line: 676, column: 19, scope: !1368)
!8622 = !DILocation(line: 676, column: 5, scope: !1368)
!8623 = !DILocation(line: 678, column: 51, scope: !1368)
!8624 = !DILocation(line: 679, column: 5, scope: !1368)
!8625 = !DILocation(line: 679, column: 10, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !1373, file: !408, discriminator: 1)
!8627 = !DILocation(line: 679, column: 20, scope: !1373)
!8628 = !DILocation(line: 679, column: 80, scope: !1373)
!8629 = !DILocation(line: 679, column: 86, scope: !1373)
!8630 = !DILocation(line: 679, column: 64, scope: !1373)
!8631 = !DILocation(line: 679, column: 92, scope: !1373)
!8632 = !DILocation(line: 679, column: 51, scope: !1373)
!8633 = !DILocation(line: 679, column: 123, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !1373, file: !408, line: 679, column: 120)
!8635 = !DILocation(line: 679, column: 140, scope: !8634)
!8636 = !DILocation(line: 679, column: 120, scope: !8634)
!8637 = !DILocation(line: 679, column: 150, scope: !8634)
!8638 = !DILocation(line: 679, column: 120, scope: !1373)
!8639 = !DILocation(line: 679, column: 120, scope: !8640)
!8640 = !DILexicalBlockFile(scope: !1373, file: !408, discriminator: 2)
!8641 = !DILocation(line: 679, column: 181, scope: !8642)
!8642 = !DILexicalBlockFile(scope: !8634, file: !408, discriminator: 3)
!8643 = !DILocation(line: 679, column: 199, scope: !8634)
!8644 = !DILocation(line: 679, column: 209, scope: !8634)
!8645 = !DILocation(line: 679, column: 234, scope: !8634)
!8646 = !DILocation(line: 679, column: 165, scope: !8634)
!8647 = !DILocation(line: 679, column: 253, scope: !8648)
!8648 = !DILexicalBlockFile(scope: !1368, file: !408, discriminator: 4)
!8649 = !DILocation(line: 679, column: 253, scope: !1373)
!8650 = !DILocation(line: 680, column: 5, scope: !1368)
!8651 = !DILocation(line: 680, column: 11, scope: !1368)
!8652 = !DILocation(line: 680, column: 16, scope: !1368)
!8653 = !DILocation(line: 682, column: 51, scope: !1368)
!8654 = !DILocation(line: 683, column: 5, scope: !1368)
!8655 = !DILocation(line: 683, column: 10, scope: !8656)
!8656 = !DILexicalBlockFile(scope: !1375, file: !408, discriminator: 1)
!8657 = !DILocation(line: 683, column: 20, scope: !1375)
!8658 = !DILocation(line: 683, column: 80, scope: !1375)
!8659 = !DILocation(line: 683, column: 86, scope: !1375)
!8660 = !DILocation(line: 683, column: 64, scope: !1375)
!8661 = !DILocation(line: 683, column: 92, scope: !1375)
!8662 = !DILocation(line: 683, column: 51, scope: !1375)
!8663 = !DILocation(line: 683, column: 123, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !1375, file: !408, line: 683, column: 120)
!8665 = !DILocation(line: 683, column: 140, scope: !8664)
!8666 = !DILocation(line: 683, column: 120, scope: !8664)
!8667 = !DILocation(line: 683, column: 150, scope: !8664)
!8668 = !DILocation(line: 683, column: 120, scope: !1375)
!8669 = !DILocation(line: 683, column: 120, scope: !8670)
!8670 = !DILexicalBlockFile(scope: !1375, file: !408, discriminator: 2)
!8671 = !DILocation(line: 683, column: 181, scope: !8672)
!8672 = !DILexicalBlockFile(scope: !8664, file: !408, discriminator: 3)
!8673 = !DILocation(line: 683, column: 199, scope: !8664)
!8674 = !DILocation(line: 683, column: 209, scope: !8664)
!8675 = !DILocation(line: 683, column: 234, scope: !8664)
!8676 = !DILocation(line: 683, column: 165, scope: !8664)
!8677 = !DILocation(line: 683, column: 253, scope: !8648)
!8678 = !DILocation(line: 683, column: 253, scope: !1375)
!8679 = !DILocation(line: 684, column: 5, scope: !1368)
!8680 = !DILocation(line: 684, column: 11, scope: !1368)
!8681 = !DILocation(line: 684, column: 16, scope: !1368)
!8682 = !DILocation(line: 686, column: 58, scope: !1368)
!8683 = !DILocation(line: 686, column: 5, scope: !1368)
!8684 = !DILocation(line: 687, column: 1, scope: !1368)
!8685 = !DILocation(line: 1214, column: 28, scope: !1376)
!8686 = !DILocation(line: 1214, column: 44, scope: !1376)
!8687 = !DILocation(line: 1214, column: 60, scope: !1376)
!8688 = !DILocation(line: 1216, column: 5, scope: !1376)
!8689 = !DILocation(line: 1216, column: 15, scope: !1376)
!8690 = !DILocation(line: 1219, column: 5, scope: !1376)
!8691 = !DILocation(line: 1219, column: 15, scope: !1376)
!8692 = !DILocation(line: 1220, column: 5, scope: !1376)
!8693 = !DILocation(line: 1220, column: 15, scope: !1376)
!8694 = !DILocation(line: 1222, column: 38, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !1376, file: !408, line: 1222, column: 9)
!8696 = !DILocation(line: 1222, column: 44, scope: !8695)
!8697 = !DILocation(line: 1222, column: 10, scope: !8695)
!8698 = !DILocation(line: 1222, column: 9, scope: !1376)
!8699 = !DILocation(line: 1224, column: 9, scope: !8695)
!8700 = !DILocation(line: 1226, column: 10, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !1376, file: !408, line: 1226, column: 9)
!8702 = !DILocation(line: 1226, column: 16, scope: !8701)
!8703 = !DILocation(line: 1226, column: 22, scope: !8701)
!8704 = !DILocation(line: 1226, column: 25, scope: !8705)
!8705 = !DILexicalBlockFile(scope: !8701, file: !408, discriminator: 1)
!8706 = !DILocation(line: 1226, column: 31, scope: !8701)
!8707 = !DILocation(line: 1226, column: 38, scope: !8701)
!8708 = !DILocation(line: 1226, column: 45, scope: !8701)
!8709 = !DILocation(line: 1226, column: 9, scope: !1376)
!8710 = !DILocation(line: 1227, column: 17, scope: !8701)
!8711 = !DILocation(line: 1227, column: 15, scope: !8701)
!8712 = !DILocation(line: 1227, column: 9, scope: !8701)
!8713 = !DILocation(line: 1229, column: 32, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8701, file: !408, line: 1228, column: 10)
!8715 = !DILocation(line: 1229, column: 38, scope: !8714)
!8716 = !DILocation(line: 1229, column: 45, scope: !8714)
!8717 = !DILocation(line: 1229, column: 53, scope: !8714)
!8718 = !DILocation(line: 1229, column: 17, scope: !8714)
!8719 = !DILocation(line: 1229, column: 15, scope: !8714)
!8720 = !DILocation(line: 1230, column: 14, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8714, file: !408, line: 1230, column: 13)
!8722 = !DILocation(line: 1230, column: 13, scope: !8714)
!8723 = !DILocation(line: 1231, column: 21, scope: !8721)
!8724 = !DILocation(line: 1231, column: 19, scope: !8721)
!8725 = !DILocation(line: 1231, column: 13, scope: !8721)
!8726 = !DILocation(line: 1234, column: 21, scope: !1376)
!8727 = !DILocation(line: 1234, column: 30, scope: !1376)
!8728 = !DILocation(line: 1234, column: 39, scope: !1376)
!8729 = !DILocation(line: 1235, column: 12, scope: !1376)
!8730 = !DILocation(line: 1235, column: 5, scope: !1376)
!8731 = !DILocation(line: 1236, column: 1, scope: !1376)
!8732 = !DILocation(line: 1456, column: 28, scope: !1386)
!8733 = !DILocation(line: 1456, column: 44, scope: !1386)
!8734 = !DILocation(line: 1458, column: 5, scope: !1386)
!8735 = !DILocation(line: 1458, column: 15, scope: !1386)
!8736 = !DILocation(line: 1460, column: 5, scope: !1386)
!8737 = !DILocation(line: 1460, column: 15, scope: !1386)
!8738 = !DILocation(line: 1461, column: 5, scope: !1386)
!8739 = !DILocation(line: 1461, column: 15, scope: !1386)
!8740 = !DILocation(line: 1462, column: 27, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !1386, file: !408, line: 1462, column: 9)
!8742 = !DILocation(line: 1462, column: 10, scope: !8741)
!8743 = !DILocation(line: 1462, column: 9, scope: !1386)
!8744 = !DILocation(line: 1463, column: 9, scope: !8741)
!8745 = !DILocation(line: 1465, column: 10, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !1386, file: !408, line: 1465, column: 9)
!8747 = !DILocation(line: 1465, column: 16, scope: !8746)
!8748 = !DILocation(line: 1465, column: 9, scope: !1386)
!8749 = !DILocation(line: 1466, column: 26, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8751, file: !408, line: 1466, column: 13)
!8751 = distinct !DILexicalBlock(scope: !8746, file: !408, line: 1465, column: 23)
!8752 = !DILocation(line: 1466, column: 13, scope: !8750)
!8753 = !DILocation(line: 1466, column: 44, scope: !8750)
!8754 = !DILocation(line: 1466, column: 13, scope: !8751)
!8755 = !DILocation(line: 1467, column: 13, scope: !8750)
!8756 = !DILocation(line: 1468, column: 5, scope: !8751)
!8757 = !DILocation(line: 1470, column: 33, scope: !1386)
!8758 = !DILocation(line: 1470, column: 14, scope: !1386)
!8759 = !DILocation(line: 1470, column: 12, scope: !1386)
!8760 = !DILocation(line: 1471, column: 10, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !1386, file: !408, line: 1471, column: 9)
!8762 = !DILocation(line: 1471, column: 9, scope: !1386)
!8763 = !DILocation(line: 1472, column: 9, scope: !8761)
!8764 = !DILocation(line: 1474, column: 24, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !1386, file: !408, line: 1474, column: 9)
!8766 = !DILocation(line: 1474, column: 32, scope: !8765)
!8767 = !DILocation(line: 1474, column: 37, scope: !8765)
!8768 = !DILocation(line: 1474, column: 9, scope: !8765)
!8769 = !DILocation(line: 1474, column: 44, scope: !8765)
!8770 = !DILocation(line: 1474, column: 9, scope: !1386)
!8771 = !DILocation(line: 1475, column: 9, scope: !8765)
!8772 = !DILocation(line: 1477, column: 58, scope: !1386)
!8773 = !DILocation(line: 1477, column: 5, scope: !1386)
!8774 = !DILocation(line: 1478, column: 1, scope: !1386)
!8775 = !DILocation(line: 1078, column: 29, scope: !1393)
!8776 = !DILocation(line: 1078, column: 45, scope: !1393)
!8777 = !DILocation(line: 1078, column: 61, scope: !1393)
!8778 = !DILocation(line: 1080, column: 5, scope: !1393)
!8779 = !DILocation(line: 1080, column: 9, scope: !1393)
!8780 = !DILocation(line: 1081, column: 5, scope: !1393)
!8781 = !DILocation(line: 1081, column: 15, scope: !1393)
!8782 = !DILocation(line: 1082, column: 5, scope: !1393)
!8783 = !DILocation(line: 1082, column: 15, scope: !1393)
!8784 = !DILocation(line: 1084, column: 5, scope: !1393)
!8785 = !DILocation(line: 1084, column: 23, scope: !1393)
!8786 = !DILocation(line: 1084, column: 68, scope: !1393)
!8787 = !DILocation(line: 1084, column: 50, scope: !1393)
!8788 = !DILocation(line: 1084, column: 29, scope: !1393)
!8789 = !DILocation(line: 1086, column: 38, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !1393, file: !408, line: 1086, column: 9)
!8791 = !DILocation(line: 1086, column: 44, scope: !8790)
!8792 = !DILocation(line: 1086, column: 10, scope: !8790)
!8793 = !DILocation(line: 1086, column: 9, scope: !1393)
!8794 = !DILocation(line: 1088, column: 9, scope: !8790)
!8795 = !DILocation(line: 1090, column: 19, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !1393, file: !408, line: 1090, column: 9)
!8797 = !DILocation(line: 1090, column: 9, scope: !8796)
!8798 = !DILocation(line: 1090, column: 24, scope: !8796)
!8799 = !DILocation(line: 1090, column: 27, scope: !8800)
!8800 = !DILexicalBlockFile(scope: !8796, file: !408, discriminator: 1)
!8801 = !DILocation(line: 1090, column: 38, scope: !8796)
!8802 = !DILocation(line: 1090, column: 9, scope: !1393)
!8803 = !DILocation(line: 1093, column: 13, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8796, file: !408, line: 1090, column: 60)
!8805 = !DILocation(line: 1093, column: 17, scope: !8804)
!8806 = !DILocation(line: 1093, column: 53, scope: !8804)
!8807 = !DILocation(line: 1093, column: 59, scope: !8804)
!8808 = !DILocation(line: 1093, column: 64, scope: !8804)
!8809 = !DILocation(line: 1092, column: 16, scope: !8804)
!8810 = !DILocation(line: 1092, column: 9, scope: !8804)
!8811 = !DILocation(line: 1097, column: 10, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !1393, file: !408, line: 1097, column: 9)
!8813 = !DILocation(line: 1097, column: 16, scope: !8812)
!8814 = !DILocation(line: 1097, column: 9, scope: !1393)
!8815 = !DILocation(line: 1098, column: 62, scope: !8812)
!8816 = !DILocation(line: 1098, column: 9, scope: !8812)
!8817 = !DILocation(line: 1100, column: 12, scope: !1405)
!8818 = !DILocation(line: 1100, column: 10, scope: !1405)
!8819 = !DILocation(line: 1100, column: 17, scope: !8820)
!8820 = !DILexicalBlockFile(scope: !8821, file: !408, discriminator: 2)
!8821 = !DILexicalBlockFile(scope: !1404, file: !408, discriminator: 1)
!8822 = !DILocation(line: 1100, column: 21, scope: !1404)
!8823 = !DILocation(line: 1100, column: 27, scope: !1404)
!8824 = !DILocation(line: 1100, column: 34, scope: !1404)
!8825 = !DILocation(line: 1100, column: 19, scope: !1404)
!8826 = !DILocation(line: 1100, column: 5, scope: !1405)
!8827 = !DILocation(line: 1101, column: 9, scope: !1403)
!8828 = !DILocation(line: 1101, column: 19, scope: !1403)
!8829 = !DILocation(line: 1101, column: 48, scope: !1403)
!8830 = !DILocation(line: 1101, column: 26, scope: !1403)
!8831 = !DILocation(line: 1101, column: 32, scope: !1403)
!8832 = !DILocation(line: 1101, column: 39, scope: !1403)
!8833 = !DILocation(line: 1102, column: 28, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !1403, file: !408, line: 1102, column: 13)
!8835 = !DILocation(line: 1102, column: 36, scope: !8834)
!8836 = !DILocation(line: 1102, column: 45, scope: !8834)
!8837 = !DILocation(line: 1102, column: 63, scope: !8834)
!8838 = !DILocation(line: 1103, column: 55, scope: !8834)
!8839 = !DILocation(line: 1103, column: 39, scope: !8834)
!8840 = !DILocation(line: 1103, column: 62, scope: !8834)
!8841 = !DILocation(line: 1103, column: 67, scope: !8834)
!8842 = !DILocation(line: 1103, column: 13, scope: !8834)
!8843 = !DILocation(line: 1103, column: 75, scope: !8834)
!8844 = !DILocation(line: 1102, column: 13, scope: !1403)
!8845 = !DILocation(line: 1104, column: 29, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8834, file: !408, line: 1103, column: 81)
!8847 = !DILocation(line: 1104, column: 37, scope: !8846)
!8848 = !DILocation(line: 1104, column: 46, scope: !8846)
!8849 = !DILocation(line: 1105, column: 20, scope: !8846)
!8850 = !DILocation(line: 1105, column: 13, scope: !8846)
!8851 = !DILocation(line: 1107, column: 5, scope: !1404)
!8852 = !DILocation(line: 1107, column: 5, scope: !8821)
!8853 = !DILocation(line: 1107, column: 5, scope: !1403)
!8854 = !DILocation(line: 1100, column: 43, scope: !1404)
!8855 = !DILocation(line: 1100, column: 5, scope: !1404)
!8856 = !DILocation(line: 1109, column: 58, scope: !1393)
!8857 = !DILocation(line: 1109, column: 5, scope: !1393)
!8858 = !DILocation(line: 1110, column: 1, scope: !1393)
!8859 = !DILocation(line: 1113, column: 33, scope: !1424)
!8860 = !DILocation(line: 1113, column: 49, scope: !1424)
!8861 = !DILocation(line: 1113, column: 65, scope: !1424)
!8862 = !DILocation(line: 1115, column: 5, scope: !1424)
!8863 = !DILocation(line: 1115, column: 9, scope: !1424)
!8864 = !DILocation(line: 1116, column: 5, scope: !1424)
!8865 = !DILocation(line: 1116, column: 15, scope: !1424)
!8866 = !DILocation(line: 1117, column: 5, scope: !1424)
!8867 = !DILocation(line: 1117, column: 15, scope: !1424)
!8868 = !DILocation(line: 1118, column: 5, scope: !1424)
!8869 = !DILocation(line: 1118, column: 15, scope: !1424)
!8870 = !DILocation(line: 1121, column: 5, scope: !1424)
!8871 = !DILocation(line: 1121, column: 23, scope: !1424)
!8872 = !DILocation(line: 1121, column: 68, scope: !1424)
!8873 = !DILocation(line: 1121, column: 50, scope: !1424)
!8874 = !DILocation(line: 1121, column: 29, scope: !1424)
!8875 = !DILocation(line: 1123, column: 38, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !1424, file: !408, line: 1123, column: 9)
!8877 = !DILocation(line: 1123, column: 44, scope: !8876)
!8878 = !DILocation(line: 1123, column: 10, scope: !8876)
!8879 = !DILocation(line: 1123, column: 9, scope: !1424)
!8880 = !DILocation(line: 1125, column: 9, scope: !8876)
!8881 = !DILocation(line: 1127, column: 19, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !1424, file: !408, line: 1127, column: 9)
!8883 = !DILocation(line: 1127, column: 9, scope: !8882)
!8884 = !DILocation(line: 1127, column: 24, scope: !8882)
!8885 = !DILocation(line: 1127, column: 27, scope: !8886)
!8886 = !DILexicalBlockFile(scope: !8882, file: !408, discriminator: 1)
!8887 = !DILocation(line: 1127, column: 38, scope: !8882)
!8888 = !DILocation(line: 1127, column: 9, scope: !1424)
!8889 = !DILocation(line: 1129, column: 13, scope: !8882)
!8890 = !DILocation(line: 1129, column: 17, scope: !8882)
!8891 = !DILocation(line: 1129, column: 58, scope: !8882)
!8892 = !DILocation(line: 1129, column: 64, scope: !8882)
!8893 = !DILocation(line: 1129, column: 69, scope: !8882)
!8894 = !DILocation(line: 1129, column: 84, scope: !8882)
!8895 = !DILocation(line: 1128, column: 16, scope: !8882)
!8896 = !DILocation(line: 1128, column: 9, scope: !8882)
!8897 = !DILocation(line: 1132, column: 10, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !1424, file: !408, line: 1132, column: 9)
!8899 = !DILocation(line: 1132, column: 16, scope: !8898)
!8900 = !DILocation(line: 1132, column: 9, scope: !1424)
!8901 = !DILocation(line: 1133, column: 25, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8898, file: !408, line: 1132, column: 23)
!8903 = !DILocation(line: 1133, column: 42, scope: !8902)
!8904 = !DILocation(line: 1133, column: 51, scope: !8902)
!8905 = !DILocation(line: 1134, column: 16, scope: !8902)
!8906 = !DILocation(line: 1134, column: 9, scope: !8902)
!8907 = !DILocation(line: 1137, column: 12, scope: !1437)
!8908 = !DILocation(line: 1137, column: 10, scope: !1437)
!8909 = !DILocation(line: 1137, column: 17, scope: !8910)
!8910 = !DILexicalBlockFile(scope: !8911, file: !408, discriminator: 2)
!8911 = !DILexicalBlockFile(scope: !1436, file: !408, discriminator: 1)
!8912 = !DILocation(line: 1137, column: 21, scope: !1436)
!8913 = !DILocation(line: 1137, column: 27, scope: !1436)
!8914 = !DILocation(line: 1137, column: 34, scope: !1436)
!8915 = !DILocation(line: 1137, column: 19, scope: !1436)
!8916 = !DILocation(line: 1137, column: 5, scope: !1437)
!8917 = !DILocation(line: 1138, column: 9, scope: !1435)
!8918 = !DILocation(line: 1138, column: 24, scope: !1435)
!8919 = !DILocation(line: 1138, column: 70, scope: !1435)
!8920 = !DILocation(line: 1138, column: 48, scope: !1435)
!8921 = !DILocation(line: 1138, column: 54, scope: !1435)
!8922 = !DILocation(line: 1138, column: 61, scope: !1435)
!8923 = !DILocation(line: 1138, column: 31, scope: !1435)
!8924 = !DILocation(line: 1139, column: 28, scope: !1440)
!8925 = !DILocation(line: 1139, column: 16, scope: !1440)
!8926 = !DILocation(line: 1139, column: 36, scope: !1440)
!8927 = !DILocation(line: 1139, column: 45, scope: !1440)
!8928 = !DILocation(line: 1139, column: 63, scope: !1440)
!8929 = !DILocation(line: 1140, column: 39, scope: !1440)
!8930 = !DILocation(line: 1140, column: 45, scope: !1440)
!8931 = !DILocation(line: 1140, column: 50, scope: !1440)
!8932 = !DILocation(line: 1140, column: 14, scope: !1440)
!8933 = !DILocation(line: 1140, column: 58, scope: !1440)
!8934 = !DILocation(line: 1139, column: 13, scope: !1435)
!8935 = !DILocation(line: 1141, column: 13, scope: !1439)
!8936 = !DILocation(line: 1141, column: 23, scope: !1439)
!8937 = !DILocation(line: 1141, column: 47, scope: !1439)
!8938 = !DILocation(line: 1141, column: 30, scope: !1439)
!8939 = !DILocation(line: 1142, column: 17, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !1439, file: !408, line: 1142, column: 17)
!8941 = !DILocation(line: 1142, column: 22, scope: !8940)
!8942 = !DILocation(line: 1142, column: 17, scope: !1439)
!8943 = !DILocation(line: 1143, column: 24, scope: !8940)
!8944 = !DILocation(line: 1143, column: 17, scope: !8940)
!8945 = !DILocation(line: 1144, column: 13, scope: !1439)
!8946 = !DILocation(line: 1144, column: 18, scope: !8947)
!8947 = !DILexicalBlockFile(scope: !1442, file: !408, discriminator: 1)
!8948 = !DILocation(line: 1144, column: 28, scope: !1442)
!8949 = !DILocation(line: 1144, column: 59, scope: !1442)
!8950 = !DILocation(line: 1144, column: 70, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !1442, file: !408, line: 1144, column: 70)
!8952 = !DILocation(line: 1144, column: 86, scope: !8951)
!8953 = !DILocation(line: 1144, column: 70, scope: !1442)
!8954 = !DILocation(line: 1144, column: 117, scope: !8955)
!8955 = !DILexicalBlockFile(scope: !8951, file: !408, discriminator: 2)
!8956 = !DILocation(line: 1144, column: 136, scope: !8951)
!8957 = !DILocation(line: 1144, column: 145, scope: !8951)
!8958 = !DILocation(line: 1144, column: 101, scope: !8951)
!8959 = !DILocation(line: 1144, column: 150, scope: !8960)
!8960 = !DILexicalBlockFile(scope: !8961, file: !408, discriminator: 4)
!8961 = !DILexicalBlockFile(scope: !1439, file: !408, discriminator: 3)
!8962 = !DILocation(line: 1144, column: 150, scope: !1442)
!8963 = !DILocation(line: 1144, column: 150, scope: !8964)
!8964 = !DILexicalBlockFile(scope: !1442, file: !408, discriminator: 5)
!8965 = !DILocation(line: 1145, column: 20, scope: !1439)
!8966 = !DILocation(line: 1145, column: 13, scope: !1439)
!8967 = !DILocation(line: 1146, column: 9, scope: !1440)
!8968 = !DILocation(line: 1147, column: 5, scope: !1436)
!8969 = !DILocation(line: 1147, column: 5, scope: !8911)
!8970 = !DILocation(line: 1147, column: 5, scope: !1435)
!8971 = !DILocation(line: 1137, column: 43, scope: !1436)
!8972 = !DILocation(line: 1137, column: 5, scope: !1436)
!8973 = !DILocation(line: 1149, column: 21, scope: !1424)
!8974 = !DILocation(line: 1149, column: 38, scope: !1424)
!8975 = !DILocation(line: 1149, column: 47, scope: !1424)
!8976 = !DILocation(line: 1150, column: 12, scope: !1424)
!8977 = !DILocation(line: 1150, column: 5, scope: !1424)
!8978 = !DILocation(line: 1151, column: 1, scope: !1424)
!8979 = !DILocation(line: 1154, column: 32, scope: !1443)
!8980 = !DILocation(line: 1154, column: 48, scope: !1443)
!8981 = !DILocation(line: 1154, column: 64, scope: !1443)
!8982 = !DILocation(line: 1156, column: 5, scope: !1443)
!8983 = !DILocation(line: 1156, column: 9, scope: !1443)
!8984 = !DILocation(line: 1157, column: 5, scope: !1443)
!8985 = !DILocation(line: 1157, column: 15, scope: !1443)
!8986 = !DILocation(line: 1158, column: 5, scope: !1443)
!8987 = !DILocation(line: 1158, column: 15, scope: !1443)
!8988 = !DILocation(line: 1159, column: 5, scope: !1443)
!8989 = !DILocation(line: 1159, column: 15, scope: !1443)
!8990 = !DILocation(line: 1161, column: 5, scope: !1443)
!8991 = !DILocation(line: 1161, column: 23, scope: !1443)
!8992 = !DILocation(line: 1161, column: 68, scope: !1443)
!8993 = !DILocation(line: 1161, column: 50, scope: !1443)
!8994 = !DILocation(line: 1161, column: 29, scope: !1443)
!8995 = !DILocation(line: 1163, column: 38, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !1443, file: !408, line: 1163, column: 9)
!8997 = !DILocation(line: 1163, column: 44, scope: !8996)
!8998 = !DILocation(line: 1163, column: 10, scope: !8996)
!8999 = !DILocation(line: 1163, column: 9, scope: !1443)
!9000 = !DILocation(line: 1165, column: 9, scope: !8996)
!9001 = !DILocation(line: 1167, column: 19, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !1443, file: !408, line: 1167, column: 9)
!9003 = !DILocation(line: 1167, column: 9, scope: !9002)
!9004 = !DILocation(line: 1167, column: 24, scope: !9002)
!9005 = !DILocation(line: 1167, column: 27, scope: !9006)
!9006 = !DILexicalBlockFile(scope: !9002, file: !408, discriminator: 1)
!9007 = !DILocation(line: 1167, column: 38, scope: !9002)
!9008 = !DILocation(line: 1167, column: 9, scope: !1443)
!9009 = !DILocation(line: 1170, column: 13, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9002, file: !408, line: 1167, column: 60)
!9011 = !DILocation(line: 1170, column: 17, scope: !9010)
!9012 = !DILocation(line: 1170, column: 56, scope: !9010)
!9013 = !DILocation(line: 1170, column: 62, scope: !9010)
!9014 = !DILocation(line: 1170, column: 67, scope: !9010)
!9015 = !DILocation(line: 1169, column: 16, scope: !9010)
!9016 = !DILocation(line: 1169, column: 9, scope: !9010)
!9017 = !DILocation(line: 1174, column: 11, scope: !1443)
!9018 = !DILocation(line: 1174, column: 9, scope: !1443)
!9019 = !DILocation(line: 1175, column: 10, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !1443, file: !408, line: 1175, column: 9)
!9021 = !DILocation(line: 1175, column: 9, scope: !1443)
!9022 = !DILocation(line: 1176, column: 9, scope: !9020)
!9023 = !DILocation(line: 1178, column: 10, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !1443, file: !408, line: 1178, column: 9)
!9025 = !DILocation(line: 1178, column: 16, scope: !9024)
!9026 = !DILocation(line: 1178, column: 9, scope: !1443)
!9027 = !DILocation(line: 1179, column: 16, scope: !9024)
!9028 = !DILocation(line: 1179, column: 9, scope: !9024)
!9029 = !DILocation(line: 1181, column: 12, scope: !1456)
!9030 = !DILocation(line: 1181, column: 10, scope: !1456)
!9031 = !DILocation(line: 1181, column: 17, scope: !9032)
!9032 = !DILexicalBlockFile(scope: !9033, file: !408, discriminator: 2)
!9033 = !DILexicalBlockFile(scope: !1455, file: !408, discriminator: 1)
!9034 = !DILocation(line: 1181, column: 21, scope: !1455)
!9035 = !DILocation(line: 1181, column: 27, scope: !1455)
!9036 = !DILocation(line: 1181, column: 34, scope: !1455)
!9037 = !DILocation(line: 1181, column: 19, scope: !1455)
!9038 = !DILocation(line: 1181, column: 5, scope: !1456)
!9039 = !DILocation(line: 1182, column: 9, scope: !1454)
!9040 = !DILocation(line: 1182, column: 19, scope: !1454)
!9041 = !DILocation(line: 1182, column: 48, scope: !1454)
!9042 = !DILocation(line: 1182, column: 26, scope: !1454)
!9043 = !DILocation(line: 1182, column: 32, scope: !1454)
!9044 = !DILocation(line: 1182, column: 39, scope: !1454)
!9045 = !DILocation(line: 1183, column: 28, scope: !1462)
!9046 = !DILocation(line: 1183, column: 36, scope: !1462)
!9047 = !DILocation(line: 1183, column: 45, scope: !1462)
!9048 = !DILocation(line: 1183, column: 63, scope: !1462)
!9049 = !DILocation(line: 1184, column: 55, scope: !1462)
!9050 = !DILocation(line: 1184, column: 39, scope: !1462)
!9051 = !DILocation(line: 1184, column: 62, scope: !1462)
!9052 = !DILocation(line: 1184, column: 67, scope: !1462)
!9053 = !DILocation(line: 1184, column: 13, scope: !1462)
!9054 = !DILocation(line: 1184, column: 75, scope: !1462)
!9055 = !DILocation(line: 1183, column: 13, scope: !1454)
!9056 = !DILocation(line: 1185, column: 31, scope: !1460)
!9057 = !DILocation(line: 1185, column: 36, scope: !1460)
!9058 = !DILocation(line: 1185, column: 17, scope: !1460)
!9059 = !DILocation(line: 1185, column: 42, scope: !1460)
!9060 = !DILocation(line: 1185, column: 17, scope: !1461)
!9061 = !DILocation(line: 1186, column: 17, scope: !1459)
!9062 = !DILocation(line: 1186, column: 22, scope: !9063)
!9063 = !DILexicalBlockFile(scope: !1458, file: !408, discriminator: 1)
!9064 = !DILocation(line: 1186, column: 32, scope: !1458)
!9065 = !DILocation(line: 1186, column: 62, scope: !1458)
!9066 = !DILocation(line: 1186, column: 76, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !1458, file: !408, line: 1186, column: 73)
!9068 = !DILocation(line: 1186, column: 93, scope: !9067)
!9069 = !DILocation(line: 1186, column: 73, scope: !9067)
!9070 = !DILocation(line: 1186, column: 103, scope: !9067)
!9071 = !DILocation(line: 1186, column: 73, scope: !1458)
!9072 = !DILocation(line: 1186, column: 73, scope: !9073)
!9073 = !DILexicalBlockFile(scope: !1458, file: !408, discriminator: 2)
!9074 = !DILocation(line: 1186, column: 134, scope: !9075)
!9075 = !DILexicalBlockFile(scope: !9067, file: !408, discriminator: 3)
!9076 = !DILocation(line: 1186, column: 152, scope: !9067)
!9077 = !DILocation(line: 1186, column: 162, scope: !9067)
!9078 = !DILocation(line: 1186, column: 187, scope: !9067)
!9079 = !DILocation(line: 1186, column: 118, scope: !9067)
!9080 = !DILocation(line: 1186, column: 206, scope: !9081)
!9081 = !DILexicalBlockFile(scope: !1459, file: !408, discriminator: 4)
!9082 = !DILocation(line: 1186, column: 206, scope: !1458)
!9083 = !DILocation(line: 1186, column: 206, scope: !9084)
!9084 = !DILexicalBlockFile(scope: !1458, file: !408, discriminator: 5)
!9085 = !DILocation(line: 1187, column: 17, scope: !1459)
!9086 = !DILocation(line: 1189, column: 9, scope: !1461)
!9087 = !DILocation(line: 1190, column: 5, scope: !1455)
!9088 = !DILocation(line: 1190, column: 5, scope: !9033)
!9089 = !DILocation(line: 1190, column: 5, scope: !1454)
!9090 = !DILocation(line: 1181, column: 43, scope: !1455)
!9091 = !DILocation(line: 1181, column: 5, scope: !1455)
!9092 = !DILocation(line: 1192, column: 12, scope: !1443)
!9093 = !DILocation(line: 1192, column: 5, scope: !1443)
!9094 = !DILocation(line: 1193, column: 1, scope: !1443)
!9095 = !DILocation(line: 658, column: 31, scope: !1463)
!9096 = !DILocation(line: 658, column: 47, scope: !1463)
!9097 = !DILocation(line: 660, column: 5, scope: !1463)
!9098 = !DILocation(line: 660, column: 15, scope: !1463)
!9099 = !DILocation(line: 661, column: 27, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !1463, file: !408, line: 661, column: 9)
!9101 = !DILocation(line: 661, column: 10, scope: !9100)
!9102 = !DILocation(line: 661, column: 9, scope: !1463)
!9103 = !DILocation(line: 662, column: 9, scope: !9100)
!9104 = !DILocation(line: 664, column: 32, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !1463, file: !408, line: 664, column: 9)
!9106 = !DILocation(line: 664, column: 38, scope: !9105)
!9107 = !DILocation(line: 664, column: 9, scope: !9105)
!9108 = !DILocation(line: 664, column: 47, scope: !9105)
!9109 = !DILocation(line: 664, column: 9, scope: !1463)
!9110 = !DILocation(line: 665, column: 9, scope: !9105)
!9111 = !DILocation(line: 667, column: 58, scope: !1463)
!9112 = !DILocation(line: 667, column: 5, scope: !1463)
!9113 = !DILocation(line: 668, column: 1, scope: !1463)
!9114 = !DILocation(line: 1036, column: 31, scope: !1468)
!9115 = !DILocation(line: 1036, column: 47, scope: !1468)
!9116 = !DILocation(line: 1038, column: 5, scope: !1468)
!9117 = !DILocation(line: 1038, column: 15, scope: !1468)
!9118 = !DILocation(line: 1039, column: 5, scope: !1468)
!9119 = !DILocation(line: 1039, column: 16, scope: !1468)
!9120 = !DILocation(line: 1039, column: 19, scope: !1468)
!9121 = !DILocation(line: 1041, column: 5, scope: !1468)
!9122 = !DILocation(line: 1041, column: 15, scope: !1468)
!9123 = !DILocation(line: 1042, column: 27, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !1468, file: !408, line: 1042, column: 9)
!9125 = !DILocation(line: 1042, column: 10, scope: !9124)
!9126 = !DILocation(line: 1042, column: 9, scope: !1468)
!9127 = !DILocation(line: 1043, column: 9, scope: !9124)
!9128 = !DILocation(line: 1045, column: 27, scope: !1468)
!9129 = !DILocation(line: 1045, column: 11, scope: !1468)
!9130 = !DILocation(line: 1045, column: 9, scope: !1468)
!9131 = !DILocation(line: 1046, column: 10, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !1468, file: !408, line: 1046, column: 9)
!9133 = !DILocation(line: 1046, column: 9, scope: !1468)
!9134 = !DILocation(line: 1048, column: 13, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9132, file: !408, line: 1046, column: 15)
!9136 = !DILocation(line: 1049, column: 64, scope: !9135)
!9137 = !DILocation(line: 1049, column: 74, scope: !9135)
!9138 = !DILocation(line: 1049, column: 84, scope: !9135)
!9139 = !DILocation(line: 1047, column: 9, scope: !9135)
!9140 = !DILocation(line: 1051, column: 9, scope: !9135)
!9141 = !DILocation(line: 1054, column: 30, scope: !1468)
!9142 = !DILocation(line: 1054, column: 14, scope: !1468)
!9143 = !DILocation(line: 1054, column: 12, scope: !1468)
!9144 = !DILocation(line: 1055, column: 12, scope: !1479)
!9145 = !DILocation(line: 1055, column: 10, scope: !1479)
!9146 = !DILocation(line: 1055, column: 17, scope: !9147)
!9147 = !DILexicalBlockFile(scope: !9148, file: !408, discriminator: 2)
!9148 = !DILexicalBlockFile(scope: !1478, file: !408, discriminator: 1)
!9149 = !DILocation(line: 1055, column: 21, scope: !1478)
!9150 = !DILocation(line: 1055, column: 19, scope: !1478)
!9151 = !DILocation(line: 1055, column: 5, scope: !1479)
!9152 = !DILocation(line: 1056, column: 9, scope: !1477)
!9153 = !DILocation(line: 1056, column: 19, scope: !1477)
!9154 = !DILocation(line: 1056, column: 47, scope: !1477)
!9155 = !DILocation(line: 1056, column: 54, scope: !1477)
!9156 = !DILocation(line: 1056, column: 65, scope: !1477)
!9157 = !DILocation(line: 1056, column: 74, scope: !1477)
!9158 = !DILocation(line: 1056, column: 91, scope: !1477)
!9159 = !DILocation(line: 1056, column: 30, scope: !1477)
!9160 = !DILocation(line: 1056, column: 133, scope: !9161)
!9161 = !DILexicalBlockFile(scope: !1477, file: !408, discriminator: 1)
!9162 = !DILocation(line: 1056, column: 118, scope: !1477)
!9163 = !DILocation(line: 1056, column: 101, scope: !1477)
!9164 = !DILocation(line: 1056, column: 125, scope: !1477)
!9165 = !DILocation(line: 1056, column: 100, scope: !1477)
!9166 = !DILocation(line: 1056, column: 174, scope: !9167)
!9167 = !DILexicalBlockFile(scope: !1477, file: !408, discriminator: 2)
!9168 = !DILocation(line: 1056, column: 159, scope: !1477)
!9169 = !DILocation(line: 1056, column: 141, scope: !1477)
!9170 = !DILocation(line: 1056, column: 166, scope: !1477)
!9171 = !DILocation(line: 1056, column: 140, scope: !1477)
!9172 = !DILocation(line: 1056, column: 19, scope: !9173)
!9173 = !DILexicalBlockFile(scope: !9174, file: !408, discriminator: 4)
!9174 = !DILexicalBlockFile(scope: !1477, file: !408, discriminator: 3)
!9175 = !DILocation(line: 1057, column: 34, scope: !1483)
!9176 = !DILocation(line: 1057, column: 14, scope: !1483)
!9177 = !DILocation(line: 1057, column: 13, scope: !1477)
!9178 = !DILocation(line: 1058, column: 13, scope: !1482)
!9179 = !DILocation(line: 1058, column: 18, scope: !9180)
!9180 = !DILexicalBlockFile(scope: !1481, file: !408, discriminator: 1)
!9181 = !DILocation(line: 1058, column: 28, scope: !1481)
!9182 = !DILocation(line: 1058, column: 58, scope: !1481)
!9183 = !DILocation(line: 1058, column: 72, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !1481, file: !408, line: 1058, column: 69)
!9185 = !DILocation(line: 1058, column: 89, scope: !9184)
!9186 = !DILocation(line: 1058, column: 69, scope: !9184)
!9187 = !DILocation(line: 1058, column: 99, scope: !9184)
!9188 = !DILocation(line: 1058, column: 69, scope: !1481)
!9189 = !DILocation(line: 1058, column: 69, scope: !9190)
!9190 = !DILexicalBlockFile(scope: !1481, file: !408, discriminator: 2)
!9191 = !DILocation(line: 1058, column: 130, scope: !9192)
!9192 = !DILexicalBlockFile(scope: !9184, file: !408, discriminator: 3)
!9193 = !DILocation(line: 1058, column: 148, scope: !9184)
!9194 = !DILocation(line: 1058, column: 158, scope: !9184)
!9195 = !DILocation(line: 1058, column: 183, scope: !9184)
!9196 = !DILocation(line: 1058, column: 114, scope: !9184)
!9197 = !DILocation(line: 1058, column: 202, scope: !9198)
!9198 = !DILexicalBlockFile(scope: !1482, file: !408, discriminator: 4)
!9199 = !DILocation(line: 1058, column: 202, scope: !1481)
!9200 = !DILocation(line: 1058, column: 202, scope: !9201)
!9201 = !DILexicalBlockFile(scope: !1481, file: !408, discriminator: 5)
!9202 = !DILocation(line: 1060, column: 17, scope: !1482)
!9203 = !DILocation(line: 1062, column: 31, scope: !1482)
!9204 = !DILocation(line: 1062, column: 42, scope: !1482)
!9205 = !DILocation(line: 1062, column: 52, scope: !1482)
!9206 = !DILocation(line: 1059, column: 13, scope: !1482)
!9207 = !DILocation(line: 1063, column: 13, scope: !1482)
!9208 = !DILocation(line: 1066, column: 36, scope: !1487)
!9209 = !DILocation(line: 1066, column: 42, scope: !1487)
!9210 = !DILocation(line: 1066, column: 13, scope: !1487)
!9211 = !DILocation(line: 1066, column: 51, scope: !1487)
!9212 = !DILocation(line: 1066, column: 13, scope: !1477)
!9213 = !DILocation(line: 1067, column: 13, scope: !1486)
!9214 = !DILocation(line: 1067, column: 18, scope: !9215)
!9215 = !DILexicalBlockFile(scope: !1485, file: !408, discriminator: 1)
!9216 = !DILocation(line: 1067, column: 28, scope: !1485)
!9217 = !DILocation(line: 1067, column: 58, scope: !1485)
!9218 = !DILocation(line: 1067, column: 72, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !1485, file: !408, line: 1067, column: 69)
!9220 = !DILocation(line: 1067, column: 89, scope: !9219)
!9221 = !DILocation(line: 1067, column: 69, scope: !9219)
!9222 = !DILocation(line: 1067, column: 99, scope: !9219)
!9223 = !DILocation(line: 1067, column: 69, scope: !1485)
!9224 = !DILocation(line: 1067, column: 69, scope: !9225)
!9225 = !DILexicalBlockFile(scope: !1485, file: !408, discriminator: 2)
!9226 = !DILocation(line: 1067, column: 130, scope: !9227)
!9227 = !DILexicalBlockFile(scope: !9219, file: !408, discriminator: 3)
!9228 = !DILocation(line: 1067, column: 148, scope: !9219)
!9229 = !DILocation(line: 1067, column: 158, scope: !9219)
!9230 = !DILocation(line: 1067, column: 183, scope: !9219)
!9231 = !DILocation(line: 1067, column: 114, scope: !9219)
!9232 = !DILocation(line: 1067, column: 202, scope: !9233)
!9233 = !DILexicalBlockFile(scope: !1486, file: !408, discriminator: 4)
!9234 = !DILocation(line: 1067, column: 202, scope: !1485)
!9235 = !DILocation(line: 1067, column: 202, scope: !9236)
!9236 = !DILexicalBlockFile(scope: !1485, file: !408, discriminator: 5)
!9237 = !DILocation(line: 1068, column: 13, scope: !1486)
!9238 = !DILocation(line: 1070, column: 5, scope: !1478)
!9239 = !DILocation(line: 1070, column: 5, scope: !9148)
!9240 = !DILocation(line: 1070, column: 5, scope: !1477)
!9241 = !DILocation(line: 1055, column: 30, scope: !1478)
!9242 = !DILocation(line: 1055, column: 5, scope: !1478)
!9243 = !DILocation(line: 1072, column: 5, scope: !1468)
!9244 = !DILocation(line: 1072, column: 10, scope: !9245)
!9245 = !DILexicalBlockFile(scope: !1489, file: !408, discriminator: 1)
!9246 = !DILocation(line: 1072, column: 20, scope: !1489)
!9247 = !DILocation(line: 1072, column: 50, scope: !1489)
!9248 = !DILocation(line: 1072, column: 64, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !1489, file: !408, line: 1072, column: 61)
!9250 = !DILocation(line: 1072, column: 81, scope: !9249)
!9251 = !DILocation(line: 1072, column: 61, scope: !9249)
!9252 = !DILocation(line: 1072, column: 91, scope: !9249)
!9253 = !DILocation(line: 1072, column: 61, scope: !1489)
!9254 = !DILocation(line: 1072, column: 61, scope: !9255)
!9255 = !DILexicalBlockFile(scope: !1489, file: !408, discriminator: 2)
!9256 = !DILocation(line: 1072, column: 122, scope: !9257)
!9257 = !DILexicalBlockFile(scope: !9249, file: !408, discriminator: 3)
!9258 = !DILocation(line: 1072, column: 140, scope: !9249)
!9259 = !DILocation(line: 1072, column: 150, scope: !9249)
!9260 = !DILocation(line: 1072, column: 175, scope: !9249)
!9261 = !DILocation(line: 1072, column: 106, scope: !9249)
!9262 = !DILocation(line: 1072, column: 194, scope: !9263)
!9263 = !DILexicalBlockFile(scope: !1468, file: !408, discriminator: 4)
!9264 = !DILocation(line: 1072, column: 194, scope: !1489)
!9265 = !DILocation(line: 1072, column: 194, scope: !9266)
!9266 = !DILexicalBlockFile(scope: !1489, file: !408, discriminator: 5)
!9267 = !DILocation(line: 1074, column: 58, scope: !1468)
!9268 = !DILocation(line: 1074, column: 5, scope: !1468)
!9269 = !DILocation(line: 1075, column: 1, scope: !1468)
!9270 = !DILocation(line: 1311, column: 31, scope: !1490)
!9271 = !DILocation(line: 1311, column: 47, scope: !1490)
!9272 = !DILocation(line: 1313, column: 5, scope: !1490)
!9273 = !DILocation(line: 1313, column: 9, scope: !1490)
!9274 = !DILocation(line: 1315, column: 5, scope: !1490)
!9275 = !DILocation(line: 1315, column: 9, scope: !1490)
!9276 = !DILocation(line: 1316, column: 5, scope: !1490)
!9277 = !DILocation(line: 1316, column: 15, scope: !1490)
!9278 = !DILocation(line: 1317, column: 27, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !1490, file: !408, line: 1317, column: 9)
!9280 = !DILocation(line: 1317, column: 10, scope: !9279)
!9281 = !DILocation(line: 1317, column: 9, scope: !1490)
!9282 = !DILocation(line: 1319, column: 9, scope: !9279)
!9283 = !DILocation(line: 1321, column: 10, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !1490, file: !408, line: 1321, column: 9)
!9285 = !DILocation(line: 1321, column: 16, scope: !9284)
!9286 = !DILocation(line: 1321, column: 9, scope: !1490)
!9287 = !DILocation(line: 1322, column: 26, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9289, file: !408, line: 1322, column: 13)
!9289 = distinct !DILexicalBlock(scope: !9284, file: !408, line: 1321, column: 23)
!9290 = !DILocation(line: 1322, column: 13, scope: !9288)
!9291 = !DILocation(line: 1322, column: 44, scope: !9288)
!9292 = !DILocation(line: 1322, column: 13, scope: !9289)
!9293 = !DILocation(line: 1323, column: 13, scope: !9288)
!9294 = !DILocation(line: 1324, column: 5, scope: !9289)
!9295 = !DILocation(line: 1326, column: 9, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !1490, file: !408, line: 1326, column: 9)
!9297 = !DILocation(line: 1326, column: 15, scope: !9296)
!9298 = !DILocation(line: 1326, column: 9, scope: !1490)
!9299 = !DILocation(line: 1327, column: 18, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9296, file: !408, line: 1326, column: 20)
!9301 = !DILocation(line: 1327, column: 24, scope: !9300)
!9302 = !DILocation(line: 1327, column: 31, scope: !9300)
!9303 = !DILocation(line: 1327, column: 15, scope: !9300)
!9304 = !DILocation(line: 1328, column: 13, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9300, file: !408, line: 1328, column: 13)
!9306 = !DILocation(line: 1328, column: 19, scope: !9305)
!9307 = !DILocation(line: 1328, column: 13, scope: !9300)
!9308 = !DILocation(line: 1329, column: 19, scope: !9305)
!9309 = !DILocation(line: 1329, column: 13, scope: !9305)
!9310 = !DILocation(line: 1330, column: 5, scope: !9300)
!9311 = !DILocation(line: 1331, column: 9, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !1490, file: !408, line: 1331, column: 9)
!9313 = !DILocation(line: 1331, column: 17, scope: !9312)
!9314 = !DILocation(line: 1331, column: 23, scope: !9312)
!9315 = !DILocation(line: 1331, column: 30, scope: !9312)
!9316 = !DILocation(line: 1331, column: 15, scope: !9312)
!9317 = !DILocation(line: 1331, column: 9, scope: !1490)
!9318 = !DILocation(line: 1332, column: 17, scope: !9312)
!9319 = !DILocation(line: 1332, column: 23, scope: !9312)
!9320 = !DILocation(line: 1332, column: 30, scope: !9312)
!9321 = !DILocation(line: 1332, column: 15, scope: !9312)
!9322 = !DILocation(line: 1332, column: 9, scope: !9312)
!9323 = !DILocation(line: 1334, column: 24, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !1490, file: !408, line: 1334, column: 9)
!9325 = !DILocation(line: 1334, column: 9, scope: !9324)
!9326 = !DILocation(line: 1334, column: 33, scope: !9324)
!9327 = !DILocation(line: 1334, column: 9, scope: !1490)
!9328 = !DILocation(line: 1335, column: 9, scope: !9324)
!9329 = !DILocation(line: 1337, column: 14, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !1490, file: !408, line: 1337, column: 5)
!9331 = !DILocation(line: 1337, column: 20, scope: !9330)
!9332 = !DILocation(line: 1337, column: 27, scope: !9330)
!9333 = !DILocation(line: 1337, column: 12, scope: !9330)
!9334 = !DILocation(line: 1337, column: 10, scope: !9330)
!9335 = !DILocation(line: 1337, column: 35, scope: !9336)
!9336 = !DILexicalBlockFile(scope: !9337, file: !408, discriminator: 2)
!9337 = !DILexicalBlockFile(scope: !9338, file: !408, discriminator: 1)
!9338 = distinct !DILexicalBlock(scope: !9330, file: !408, line: 1337, column: 5)
!9339 = !DILocation(line: 1337, column: 39, scope: !9338)
!9340 = !DILocation(line: 1337, column: 37, scope: !9338)
!9341 = !DILocation(line: 1337, column: 5, scope: !9330)
!9342 = !DILocation(line: 1338, column: 58, scope: !9338)
!9343 = !DILocation(line: 1338, column: 59, scope: !9338)
!9344 = !DILocation(line: 1338, column: 36, scope: !9338)
!9345 = !DILocation(line: 1338, column: 42, scope: !9338)
!9346 = !DILocation(line: 1338, column: 49, scope: !9338)
!9347 = !DILocation(line: 1338, column: 31, scope: !9338)
!9348 = !DILocation(line: 1338, column: 9, scope: !9338)
!9349 = !DILocation(line: 1338, column: 15, scope: !9338)
!9350 = !DILocation(line: 1338, column: 22, scope: !9338)
!9351 = !DILocation(line: 1338, column: 34, scope: !9338)
!9352 = !DILocation(line: 1337, column: 47, scope: !9338)
!9353 = !DILocation(line: 1337, column: 5, scope: !9338)
!9354 = !DILocation(line: 1340, column: 21, scope: !1490)
!9355 = !DILocation(line: 1340, column: 32, scope: !1490)
!9356 = !DILocation(line: 1340, column: 41, scope: !1490)
!9357 = !DILocation(line: 1341, column: 36, scope: !1490)
!9358 = !DILocation(line: 1341, column: 27, scope: !1490)
!9359 = !DILocation(line: 1341, column: 5, scope: !1490)
!9360 = !DILocation(line: 1341, column: 11, scope: !1490)
!9361 = !DILocation(line: 1341, column: 18, scope: !1490)
!9362 = !DILocation(line: 1341, column: 34, scope: !1490)
!9363 = !DILocation(line: 1343, column: 5, scope: !1490)
!9364 = !DILocation(line: 1343, column: 11, scope: !1490)
!9365 = !DILocation(line: 1343, column: 18, scope: !1490)
!9366 = !DILocation(line: 1343, column: 24, scope: !1490)
!9367 = !DILocation(line: 1345, column: 58, scope: !1490)
!9368 = !DILocation(line: 1345, column: 5, scope: !1490)
!9369 = !DILocation(line: 1346, column: 1, scope: !1490)
!9370 = !DILocation(line: 1403, column: 31, scope: !1497)
!9371 = !DILocation(line: 1403, column: 47, scope: !1497)
!9372 = !DILocation(line: 1405, column: 5, scope: !1497)
!9373 = !DILocation(line: 1405, column: 9, scope: !1497)
!9374 = !DILocation(line: 1407, column: 5, scope: !1497)
!9375 = !DILocation(line: 1407, column: 15, scope: !1497)
!9376 = !DILocation(line: 1408, column: 27, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !1497, file: !408, line: 1408, column: 9)
!9378 = !DILocation(line: 1408, column: 10, scope: !9377)
!9379 = !DILocation(line: 1408, column: 9, scope: !1497)
!9380 = !DILocation(line: 1409, column: 9, scope: !9377)
!9381 = !DILocation(line: 1411, column: 10, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !1497, file: !408, line: 1411, column: 9)
!9383 = !DILocation(line: 1411, column: 16, scope: !9382)
!9384 = !DILocation(line: 1411, column: 9, scope: !1497)
!9385 = !DILocation(line: 1414, column: 13, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9382, file: !408, line: 1411, column: 23)
!9387 = !DILocation(line: 1413, column: 9, scope: !9386)
!9388 = !DILocation(line: 1417, column: 9, scope: !9386)
!9389 = !DILocation(line: 1420, column: 12, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !1497, file: !408, line: 1420, column: 5)
!9391 = !DILocation(line: 1420, column: 10, scope: !9390)
!9392 = !DILocation(line: 1420, column: 17, scope: !9393)
!9393 = !DILexicalBlockFile(scope: !9394, file: !408, discriminator: 2)
!9394 = !DILexicalBlockFile(scope: !9395, file: !408, discriminator: 1)
!9395 = distinct !DILexicalBlock(scope: !9390, file: !408, line: 1420, column: 5)
!9396 = !DILocation(line: 1420, column: 21, scope: !9395)
!9397 = !DILocation(line: 1420, column: 27, scope: !9395)
!9398 = !DILocation(line: 1420, column: 34, scope: !9395)
!9399 = !DILocation(line: 1420, column: 19, scope: !9395)
!9400 = !DILocation(line: 1420, column: 5, scope: !9390)
!9401 = !DILocation(line: 1421, column: 35, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !408, line: 1421, column: 13)
!9403 = distinct !DILexicalBlock(scope: !9395, file: !408, line: 1420, column: 47)
!9404 = !DILocation(line: 1421, column: 13, scope: !9402)
!9405 = !DILocation(line: 1421, column: 19, scope: !9402)
!9406 = !DILocation(line: 1421, column: 26, scope: !9402)
!9407 = !DILocation(line: 1421, column: 41, scope: !9402)
!9408 = !DILocation(line: 1421, column: 38, scope: !9402)
!9409 = !DILocation(line: 1421, column: 13, scope: !9403)
!9410 = !DILocation(line: 1422, column: 13, scope: !9402)
!9411 = !DILocation(line: 1423, column: 60, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9403, file: !408, line: 1423, column: 13)
!9413 = !DILocation(line: 1423, column: 38, scope: !9412)
!9414 = !DILocation(line: 1423, column: 44, scope: !9412)
!9415 = !DILocation(line: 1423, column: 51, scope: !9412)
!9416 = !DILocation(line: 1423, column: 64, scope: !9412)
!9417 = !DILocation(line: 1423, column: 13, scope: !9412)
!9418 = !DILocation(line: 1423, column: 76, scope: !9412)
!9419 = !DILocation(line: 1423, column: 13, scope: !9403)
!9420 = !DILocation(line: 1424, column: 13, scope: !9412)
!9421 = !DILocation(line: 1425, column: 5, scope: !9403)
!9422 = !DILocation(line: 1420, column: 43, scope: !9395)
!9423 = !DILocation(line: 1420, column: 5, scope: !9395)
!9424 = !DILocation(line: 1427, column: 9, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !1497, file: !408, line: 1427, column: 9)
!9426 = !DILocation(line: 1427, column: 14, scope: !9425)
!9427 = !DILocation(line: 1427, column: 20, scope: !9425)
!9428 = !DILocation(line: 1427, column: 27, scope: !9425)
!9429 = !DILocation(line: 1427, column: 11, scope: !9425)
!9430 = !DILocation(line: 1427, column: 9, scope: !1497)
!9431 = !DILocation(line: 1430, column: 13, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9425, file: !408, line: 1427, column: 35)
!9433 = !DILocation(line: 1429, column: 9, scope: !9432)
!9434 = !DILocation(line: 1433, column: 9, scope: !9432)
!9435 = !DILocation(line: 1436, column: 5, scope: !1497)
!9436 = !DILocation(line: 1436, column: 10, scope: !9437)
!9437 = !DILexicalBlockFile(scope: !1504, file: !408, discriminator: 1)
!9438 = !DILocation(line: 1436, column: 20, scope: !1504)
!9439 = !DILocation(line: 1436, column: 72, scope: !1504)
!9440 = !DILocation(line: 1436, column: 50, scope: !1504)
!9441 = !DILocation(line: 1436, column: 56, scope: !1504)
!9442 = !DILocation(line: 1436, column: 63, scope: !1504)
!9443 = !DILocation(line: 1436, column: 85, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !1504, file: !408, line: 1436, column: 82)
!9445 = !DILocation(line: 1436, column: 102, scope: !9444)
!9446 = !DILocation(line: 1436, column: 82, scope: !9444)
!9447 = !DILocation(line: 1436, column: 112, scope: !9444)
!9448 = !DILocation(line: 1436, column: 82, scope: !1504)
!9449 = !DILocation(line: 1436, column: 82, scope: !9450)
!9450 = !DILexicalBlockFile(scope: !1504, file: !408, discriminator: 2)
!9451 = !DILocation(line: 1436, column: 143, scope: !9452)
!9452 = !DILexicalBlockFile(scope: !9444, file: !408, discriminator: 3)
!9453 = !DILocation(line: 1436, column: 161, scope: !9444)
!9454 = !DILocation(line: 1436, column: 171, scope: !9444)
!9455 = !DILocation(line: 1436, column: 196, scope: !9444)
!9456 = !DILocation(line: 1436, column: 127, scope: !9444)
!9457 = !DILocation(line: 1436, column: 215, scope: !9458)
!9458 = !DILexicalBlockFile(scope: !1497, file: !408, discriminator: 4)
!9459 = !DILocation(line: 1436, column: 215, scope: !1504)
!9460 = !DILocation(line: 1436, column: 215, scope: !9461)
!9461 = !DILexicalBlockFile(scope: !1504, file: !408, discriminator: 5)
!9462 = !DILocation(line: 1438, column: 5, scope: !1497)
!9463 = !DILocation(line: 1438, column: 11, scope: !1497)
!9464 = !DILocation(line: 1438, column: 18, scope: !1497)
!9465 = !DILocation(line: 1438, column: 24, scope: !1497)
!9466 = !DILocation(line: 1440, column: 5, scope: !1497)
!9467 = !DILocation(line: 1440, column: 12, scope: !9468)
!9468 = !DILexicalBlockFile(scope: !9469, file: !408, discriminator: 2)
!9469 = !DILexicalBlockFile(scope: !9470, file: !408, discriminator: 1)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !408, line: 1440, column: 5)
!9471 = distinct !DILexicalBlock(scope: !1497, file: !408, line: 1440, column: 5)
!9472 = !DILocation(line: 1440, column: 16, scope: !9470)
!9473 = !DILocation(line: 1440, column: 22, scope: !9470)
!9474 = !DILocation(line: 1440, column: 29, scope: !9470)
!9475 = !DILocation(line: 1440, column: 14, scope: !9470)
!9476 = !DILocation(line: 1440, column: 5, scope: !9471)
!9477 = !DILocation(line: 1441, column: 58, scope: !9470)
!9478 = !DILocation(line: 1441, column: 59, scope: !9470)
!9479 = !DILocation(line: 1441, column: 36, scope: !9470)
!9480 = !DILocation(line: 1441, column: 42, scope: !9470)
!9481 = !DILocation(line: 1441, column: 49, scope: !9470)
!9482 = !DILocation(line: 1441, column: 31, scope: !9470)
!9483 = !DILocation(line: 1441, column: 9, scope: !9470)
!9484 = !DILocation(line: 1441, column: 15, scope: !9470)
!9485 = !DILocation(line: 1441, column: 22, scope: !9470)
!9486 = !DILocation(line: 1441, column: 34, scope: !9470)
!9487 = !DILocation(line: 1440, column: 38, scope: !9470)
!9488 = !DILocation(line: 1440, column: 5, scope: !9470)
!9489 = !DILocation(line: 1443, column: 58, scope: !1497)
!9490 = !DILocation(line: 1443, column: 5, scope: !1497)
!9491 = !DILocation(line: 1444, column: 1, scope: !1497)
!9492 = !DILocation(line: 1271, column: 29, scope: !1505)
!9493 = !DILocation(line: 1271, column: 45, scope: !1505)
!9494 = !DILocation(line: 1271, column: 61, scope: !1505)
!9495 = !DILocation(line: 1273, column: 5, scope: !1505)
!9496 = !DILocation(line: 1273, column: 15, scope: !1505)
!9497 = !DILocation(line: 1276, column: 38, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !1505, file: !408, line: 1276, column: 9)
!9499 = !DILocation(line: 1276, column: 44, scope: !9498)
!9500 = !DILocation(line: 1276, column: 10, scope: !9498)
!9501 = !DILocation(line: 1276, column: 9, scope: !1505)
!9502 = !DILocation(line: 1277, column: 9, scope: !9498)
!9503 = !DILocation(line: 1279, column: 31, scope: !1505)
!9504 = !DILocation(line: 1279, column: 37, scope: !1505)
!9505 = !DILocation(line: 1279, column: 12, scope: !1505)
!9506 = !DILocation(line: 1279, column: 5, scope: !1505)
!9507 = !DILocation(line: 1280, column: 1, scope: !1505)
!9508 = !DILocation(line: 1284, column: 33, scope: !1529)
!9509 = !DILocation(line: 1284, column: 49, scope: !1529)
!9510 = !DILocation(line: 1286, column: 27, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !1529, file: !408, line: 1286, column: 9)
!9512 = !DILocation(line: 1286, column: 10, scope: !9511)
!9513 = !DILocation(line: 1286, column: 9, scope: !1529)
!9514 = !DILocation(line: 1287, column: 9, scope: !9511)
!9515 = !DILocation(line: 1289, column: 31, scope: !1529)
!9516 = !DILocation(line: 1289, column: 12, scope: !1529)
!9517 = !DILocation(line: 1289, column: 5, scope: !1529)
!9518 = !DILocation(line: 1290, column: 1, scope: !1529)
!9519 = !DILocation(line: 1196, column: 33, scope: !1533)
!9520 = !DILocation(line: 1196, column: 49, scope: !1533)
!9521 = !DILocation(line: 1196, column: 65, scope: !1533)
!9522 = !DILocation(line: 1198, column: 5, scope: !1533)
!9523 = !DILocation(line: 1198, column: 15, scope: !1533)
!9524 = !DILocation(line: 1199, column: 5, scope: !1533)
!9525 = !DILocation(line: 1199, column: 15, scope: !1533)
!9526 = !DILocation(line: 1202, column: 5, scope: !1533)
!9527 = !DILocation(line: 1202, column: 23, scope: !1533)
!9528 = !DILocation(line: 1202, column: 68, scope: !1533)
!9529 = !DILocation(line: 1202, column: 50, scope: !1533)
!9530 = !DILocation(line: 1202, column: 29, scope: !1533)
!9531 = !DILocation(line: 1204, column: 38, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !1533, file: !408, line: 1204, column: 9)
!9533 = !DILocation(line: 1204, column: 44, scope: !9532)
!9534 = !DILocation(line: 1204, column: 10, scope: !9532)
!9535 = !DILocation(line: 1204, column: 9, scope: !1533)
!9536 = !DILocation(line: 1206, column: 9, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9532, file: !408, line: 1205, column: 58)
!9538 = !DILocation(line: 1210, column: 9, scope: !1533)
!9539 = !DILocation(line: 1210, column: 13, scope: !1533)
!9540 = !DILocation(line: 1210, column: 53, scope: !1533)
!9541 = !DILocation(line: 1210, column: 59, scope: !1533)
!9542 = !DILocation(line: 1210, column: 64, scope: !1533)
!9543 = !DILocation(line: 1209, column: 12, scope: !1533)
!9544 = !DILocation(line: 1209, column: 5, scope: !1533)
!9545 = !DILocation(line: 1211, column: 1, scope: !1533)
!9546 = !DILocation(line: 1239, column: 36, scope: !1541)
!9547 = !DILocation(line: 1239, column: 52, scope: !1541)
!9548 = !DILocation(line: 1241, column: 5, scope: !1541)
!9549 = !DILocation(line: 1241, column: 9, scope: !1541)
!9550 = !DILocation(line: 1242, column: 5, scope: !1541)
!9551 = !DILocation(line: 1242, column: 15, scope: !1541)
!9552 = !DILocation(line: 1246, column: 27, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !1541, file: !408, line: 1246, column: 9)
!9554 = !DILocation(line: 1246, column: 10, scope: !9553)
!9555 = !DILocation(line: 1246, column: 9, scope: !1541)
!9556 = !DILocation(line: 1247, column: 9, scope: !9553)
!9557 = !DILocation(line: 1249, column: 10, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !1541, file: !408, line: 1249, column: 9)
!9559 = !DILocation(line: 1249, column: 16, scope: !9558)
!9560 = !DILocation(line: 1249, column: 9, scope: !1541)
!9561 = !DILocation(line: 1250, column: 16, scope: !9558)
!9562 = !DILocation(line: 1250, column: 9, scope: !9558)
!9563 = !DILocation(line: 1252, column: 23, scope: !1541)
!9564 = !DILocation(line: 1252, column: 29, scope: !1541)
!9565 = !DILocation(line: 1252, column: 36, scope: !1541)
!9566 = !DILocation(line: 1252, column: 12, scope: !1541)
!9567 = !DILocation(line: 1252, column: 10, scope: !1541)
!9568 = !DILocation(line: 1253, column: 10, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !1541, file: !408, line: 1253, column: 9)
!9570 = !DILocation(line: 1253, column: 9, scope: !1541)
!9571 = !DILocation(line: 1254, column: 9, scope: !9569)
!9572 = !DILocation(line: 1256, column: 12, scope: !1550)
!9573 = !DILocation(line: 1256, column: 10, scope: !1550)
!9574 = !DILocation(line: 1256, column: 17, scope: !9575)
!9575 = !DILexicalBlockFile(scope: !9576, file: !408, discriminator: 2)
!9576 = !DILexicalBlockFile(scope: !1549, file: !408, discriminator: 1)
!9577 = !DILocation(line: 1256, column: 21, scope: !1549)
!9578 = !DILocation(line: 1256, column: 27, scope: !1549)
!9579 = !DILocation(line: 1256, column: 34, scope: !1549)
!9580 = !DILocation(line: 1256, column: 19, scope: !1549)
!9581 = !DILocation(line: 1256, column: 5, scope: !1550)
!9582 = !DILocation(line: 1257, column: 9, scope: !1548)
!9583 = !DILocation(line: 1257, column: 19, scope: !1548)
!9584 = !DILocation(line: 1257, column: 48, scope: !1548)
!9585 = !DILocation(line: 1257, column: 26, scope: !1548)
!9586 = !DILocation(line: 1257, column: 32, scope: !1548)
!9587 = !DILocation(line: 1257, column: 39, scope: !1548)
!9588 = !DILocation(line: 1258, column: 25, scope: !1548)
!9589 = !DILocation(line: 1258, column: 33, scope: !1548)
!9590 = !DILocation(line: 1258, column: 42, scope: !1548)
!9591 = !DILocation(line: 1259, column: 50, scope: !1548)
!9592 = !DILocation(line: 1259, column: 44, scope: !1548)
!9593 = !DILocation(line: 1259, column: 10, scope: !1548)
!9594 = !DILocation(line: 1259, column: 28, scope: !1548)
!9595 = !DILocation(line: 1259, column: 11, scope: !1548)
!9596 = !DILocation(line: 1259, column: 36, scope: !1548)
!9597 = !DILocation(line: 1259, column: 47, scope: !1548)
!9598 = !DILocation(line: 1260, column: 5, scope: !1549)
!9599 = !DILocation(line: 1260, column: 5, scope: !1548)
!9600 = !DILocation(line: 1256, column: 43, scope: !1549)
!9601 = !DILocation(line: 1256, column: 5, scope: !1549)
!9602 = !DILocation(line: 1262, column: 12, scope: !1541)
!9603 = !DILocation(line: 1262, column: 5, scope: !1541)
!9604 = !DILocation(line: 1263, column: 1, scope: !1541)
!9605 = !DILocation(line: 1349, column: 30, scope: !1551)
!9606 = !DILocation(line: 1349, column: 46, scope: !1551)
!9607 = !DILocation(line: 1351, column: 27, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !1551, file: !408, line: 1351, column: 9)
!9609 = !DILocation(line: 1351, column: 10, scope: !9608)
!9610 = !DILocation(line: 1351, column: 9, scope: !1551)
!9611 = !DILocation(line: 1352, column: 9, scope: !9608)
!9612 = !DILocation(line: 1354, column: 10, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !1551, file: !408, line: 1354, column: 9)
!9614 = !DILocation(line: 1354, column: 16, scope: !9613)
!9615 = !DILocation(line: 1354, column: 22, scope: !9613)
!9616 = !DILocation(line: 1354, column: 25, scope: !9617)
!9617 = !DILexicalBlockFile(scope: !9613, file: !408, discriminator: 1)
!9618 = !DILocation(line: 1354, column: 31, scope: !9613)
!9619 = !DILocation(line: 1354, column: 38, scope: !9613)
!9620 = !DILocation(line: 1354, column: 45, scope: !9613)
!9621 = !DILocation(line: 1354, column: 9, scope: !1551)
!9622 = !DILocation(line: 1355, column: 16, scope: !9613)
!9623 = !DILocation(line: 1355, column: 9, scope: !9613)
!9624 = !DILocation(line: 1357, column: 25, scope: !1551)
!9625 = !DILocation(line: 1357, column: 31, scope: !1551)
!9626 = !DILocation(line: 1357, column: 38, scope: !1551)
!9627 = !DILocation(line: 1357, column: 12, scope: !1551)
!9628 = !DILocation(line: 1357, column: 5, scope: !1551)
!9629 = !DILocation(line: 1358, column: 1, scope: !1551)
!9630 = !DILocation(line: 1361, column: 29, scope: !1555)
!9631 = !DILocation(line: 1361, column: 45, scope: !1555)
!9632 = !DILocation(line: 1363, column: 27, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !1555, file: !408, line: 1363, column: 9)
!9634 = !DILocation(line: 1363, column: 10, scope: !9633)
!9635 = !DILocation(line: 1363, column: 9, scope: !1555)
!9636 = !DILocation(line: 1364, column: 9, scope: !9633)
!9637 = !DILocation(line: 1366, column: 10, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !1555, file: !408, line: 1366, column: 9)
!9639 = !DILocation(line: 1366, column: 16, scope: !9638)
!9640 = !DILocation(line: 1366, column: 22, scope: !9638)
!9641 = !DILocation(line: 1366, column: 25, scope: !9642)
!9642 = !DILexicalBlockFile(scope: !9638, file: !408, discriminator: 1)
!9643 = !DILocation(line: 1366, column: 31, scope: !9638)
!9644 = !DILocation(line: 1366, column: 38, scope: !9638)
!9645 = !DILocation(line: 1366, column: 45, scope: !9638)
!9646 = !DILocation(line: 1366, column: 9, scope: !1555)
!9647 = !DILocation(line: 1367, column: 16, scope: !9638)
!9648 = !DILocation(line: 1367, column: 9, scope: !9638)
!9649 = !DILocation(line: 1369, column: 24, scope: !1555)
!9650 = !DILocation(line: 1369, column: 30, scope: !1555)
!9651 = !DILocation(line: 1369, column: 37, scope: !1555)
!9652 = !DILocation(line: 1369, column: 12, scope: !1555)
!9653 = !DILocation(line: 1369, column: 5, scope: !1555)
!9654 = !DILocation(line: 1370, column: 1, scope: !1555)
!9655 = !DILocation(line: 1382, column: 31, scope: !1559)
!9656 = !DILocation(line: 1382, column: 47, scope: !1559)
!9657 = !DILocation(line: 1382, column: 63, scope: !1559)
!9658 = !DILocation(line: 1384, column: 5, scope: !1559)
!9659 = !DILocation(line: 1384, column: 15, scope: !1559)
!9660 = !DILocation(line: 1386, column: 5, scope: !1559)
!9661 = !DILocation(line: 1386, column: 15, scope: !1559)
!9662 = !DILocation(line: 1387, column: 5, scope: !1559)
!9663 = !DILocation(line: 1387, column: 15, scope: !1559)
!9664 = !DILocation(line: 1388, column: 27, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !1559, file: !408, line: 1388, column: 9)
!9666 = !DILocation(line: 1388, column: 10, scope: !9665)
!9667 = !DILocation(line: 1388, column: 9, scope: !1559)
!9668 = !DILocation(line: 1389, column: 9, scope: !9665)
!9669 = !DILocation(line: 1391, column: 26, scope: !1559)
!9670 = !DILocation(line: 1391, column: 14, scope: !1559)
!9671 = !DILocation(line: 1391, column: 12, scope: !1559)
!9672 = !DILocation(line: 1392, column: 10, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !1559, file: !408, line: 1392, column: 9)
!9674 = !DILocation(line: 1392, column: 9, scope: !1559)
!9675 = !DILocation(line: 1393, column: 9, scope: !9673)
!9676 = !DILocation(line: 1395, column: 31, scope: !1559)
!9677 = !DILocation(line: 1395, column: 36, scope: !1559)
!9678 = !DILocation(line: 1395, column: 12, scope: !1559)
!9679 = !DILocation(line: 1395, column: 10, scope: !1559)
!9680 = !DILocation(line: 1397, column: 5, scope: !1559)
!9681 = !DILocation(line: 1397, column: 10, scope: !9682)
!9682 = !DILexicalBlockFile(scope: !1568, file: !408, discriminator: 1)
!9683 = !DILocation(line: 1397, column: 20, scope: !1568)
!9684 = !DILocation(line: 1397, column: 50, scope: !1568)
!9685 = !DILocation(line: 1397, column: 67, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !1568, file: !408, line: 1397, column: 64)
!9687 = !DILocation(line: 1397, column: 84, scope: !9686)
!9688 = !DILocation(line: 1397, column: 64, scope: !9686)
!9689 = !DILocation(line: 1397, column: 94, scope: !9686)
!9690 = !DILocation(line: 1397, column: 64, scope: !1568)
!9691 = !DILocation(line: 1397, column: 64, scope: !9692)
!9692 = !DILexicalBlockFile(scope: !1568, file: !408, discriminator: 2)
!9693 = !DILocation(line: 1397, column: 125, scope: !9694)
!9694 = !DILexicalBlockFile(scope: !9686, file: !408, discriminator: 3)
!9695 = !DILocation(line: 1397, column: 143, scope: !9686)
!9696 = !DILocation(line: 1397, column: 153, scope: !9686)
!9697 = !DILocation(line: 1397, column: 178, scope: !9686)
!9698 = !DILocation(line: 1397, column: 109, scope: !9686)
!9699 = !DILocation(line: 1397, column: 197, scope: !9700)
!9700 = !DILexicalBlockFile(scope: !1559, file: !408, discriminator: 4)
!9701 = !DILocation(line: 1397, column: 197, scope: !1568)
!9702 = !DILocation(line: 1397, column: 197, scope: !9703)
!9703 = !DILexicalBlockFile(scope: !1568, file: !408, discriminator: 5)
!9704 = !DILocation(line: 1399, column: 12, scope: !1559)
!9705 = !DILocation(line: 1399, column: 5, scope: !1559)
!9706 = !DILocation(line: 1400, column: 1, scope: !1559)
!9707 = !DILocation(line: 690, column: 29, scope: !1569)
!9708 = !DILocation(line: 690, column: 45, scope: !1569)
!9709 = !DILocation(line: 692, column: 5, scope: !1569)
!9710 = !DILocation(line: 692, column: 9, scope: !1569)
!9711 = !DILocation(line: 693, column: 5, scope: !1569)
!9712 = !DILocation(line: 693, column: 20, scope: !1569)
!9713 = !DILocation(line: 695, column: 27, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !1569, file: !408, line: 695, column: 9)
!9715 = !DILocation(line: 695, column: 10, scope: !9714)
!9716 = !DILocation(line: 695, column: 9, scope: !1569)
!9717 = !DILocation(line: 696, column: 9, scope: !9714)
!9718 = !DILocation(line: 699, column: 9, scope: !1569)
!9719 = !DILocation(line: 699, column: 15, scope: !1569)
!9720 = !DILocation(line: 699, column: 21, scope: !1569)
!9721 = !DILocation(line: 699, column: 27, scope: !1569)
!9722 = !DILocation(line: 699, column: 20, scope: !1569)
!9723 = !DILocation(line: 699, column: 36, scope: !9724)
!9724 = !DILexicalBlockFile(scope: !1569, file: !408, discriminator: 1)
!9725 = !DILocation(line: 699, column: 42, scope: !1569)
!9726 = !DILocation(line: 699, column: 49, scope: !1569)
!9727 = !DILocation(line: 699, column: 20, scope: !9728)
!9728 = !DILexicalBlockFile(scope: !1569, file: !408, discriminator: 2)
!9729 = !DILocation(line: 698, column: 32, scope: !1569)
!9730 = !DILocation(line: 698, column: 15, scope: !1569)
!9731 = !DILocation(line: 698, column: 13, scope: !1569)
!9732 = !DILocation(line: 700, column: 10, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !1569, file: !408, line: 700, column: 9)
!9734 = !DILocation(line: 700, column: 9, scope: !1569)
!9735 = !DILocation(line: 701, column: 9, scope: !9733)
!9736 = !DILocation(line: 703, column: 5, scope: !1569)
!9737 = !DILocation(line: 703, column: 10, scope: !9738)
!9738 = !DILexicalBlockFile(scope: !1576, file: !408, discriminator: 1)
!9739 = !DILocation(line: 703, column: 20, scope: !1576)
!9740 = !DILocation(line: 703, column: 80, scope: !1576)
!9741 = !DILocation(line: 703, column: 89, scope: !1576)
!9742 = !DILocation(line: 703, column: 64, scope: !1576)
!9743 = !DILocation(line: 703, column: 95, scope: !1576)
!9744 = !DILocation(line: 703, column: 51, scope: !1576)
!9745 = !DILocation(line: 703, column: 126, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !1576, file: !408, line: 703, column: 123)
!9747 = !DILocation(line: 703, column: 143, scope: !9746)
!9748 = !DILocation(line: 703, column: 123, scope: !9746)
!9749 = !DILocation(line: 703, column: 153, scope: !9746)
!9750 = !DILocation(line: 703, column: 123, scope: !1576)
!9751 = !DILocation(line: 703, column: 123, scope: !9752)
!9752 = !DILexicalBlockFile(scope: !1576, file: !408, discriminator: 2)
!9753 = !DILocation(line: 703, column: 184, scope: !9754)
!9754 = !DILexicalBlockFile(scope: !9746, file: !408, discriminator: 3)
!9755 = !DILocation(line: 703, column: 202, scope: !9746)
!9756 = !DILocation(line: 703, column: 212, scope: !9746)
!9757 = !DILocation(line: 703, column: 237, scope: !9746)
!9758 = !DILocation(line: 703, column: 168, scope: !9746)
!9759 = !DILocation(line: 703, column: 256, scope: !9760)
!9760 = !DILexicalBlockFile(scope: !1569, file: !408, discriminator: 4)
!9761 = !DILocation(line: 703, column: 256, scope: !1576)
!9762 = !DILocation(line: 703, column: 256, scope: !9763)
!9763 = !DILexicalBlockFile(scope: !1576, file: !408, discriminator: 5)
!9764 = !DILocation(line: 704, column: 21, scope: !1569)
!9765 = !DILocation(line: 704, column: 27, scope: !1569)
!9766 = !DILocation(line: 704, column: 5, scope: !1569)
!9767 = !DILocation(line: 704, column: 14, scope: !1569)
!9768 = !DILocation(line: 704, column: 19, scope: !1569)
!9769 = !DILocation(line: 705, column: 51, scope: !1569)
!9770 = !DILocation(line: 705, column: 60, scope: !1569)
!9771 = !DILocation(line: 705, column: 35, scope: !1569)
!9772 = !DILocation(line: 705, column: 66, scope: !1569)
!9773 = !DILocation(line: 705, column: 22, scope: !1569)
!9774 = !DILocation(line: 705, column: 90, scope: !1569)
!9775 = !DILocation(line: 705, column: 99, scope: !1569)
!9776 = !DILocation(line: 707, column: 5, scope: !1569)
!9777 = !DILocation(line: 707, column: 10, scope: !9778)
!9778 = !DILexicalBlockFile(scope: !1578, file: !408, discriminator: 1)
!9779 = !DILocation(line: 707, column: 20, scope: !1578)
!9780 = !DILocation(line: 707, column: 80, scope: !1578)
!9781 = !DILocation(line: 707, column: 89, scope: !1578)
!9782 = !DILocation(line: 707, column: 64, scope: !1578)
!9783 = !DILocation(line: 707, column: 95, scope: !1578)
!9784 = !DILocation(line: 707, column: 51, scope: !1578)
!9785 = !DILocation(line: 707, column: 126, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !1578, file: !408, line: 707, column: 123)
!9787 = !DILocation(line: 707, column: 143, scope: !9786)
!9788 = !DILocation(line: 707, column: 123, scope: !9786)
!9789 = !DILocation(line: 707, column: 153, scope: !9786)
!9790 = !DILocation(line: 707, column: 123, scope: !1578)
!9791 = !DILocation(line: 707, column: 123, scope: !9792)
!9792 = !DILexicalBlockFile(scope: !1578, file: !408, discriminator: 2)
!9793 = !DILocation(line: 707, column: 184, scope: !9794)
!9794 = !DILexicalBlockFile(scope: !9786, file: !408, discriminator: 3)
!9795 = !DILocation(line: 707, column: 202, scope: !9786)
!9796 = !DILocation(line: 707, column: 212, scope: !9786)
!9797 = !DILocation(line: 707, column: 237, scope: !9786)
!9798 = !DILocation(line: 707, column: 168, scope: !9786)
!9799 = !DILocation(line: 707, column: 256, scope: !9760)
!9800 = !DILocation(line: 707, column: 256, scope: !1578)
!9801 = !DILocation(line: 707, column: 256, scope: !9802)
!9802 = !DILexicalBlockFile(scope: !1578, file: !408, discriminator: 5)
!9803 = !DILocation(line: 708, column: 21, scope: !1569)
!9804 = !DILocation(line: 708, column: 27, scope: !1569)
!9805 = !DILocation(line: 708, column: 5, scope: !1569)
!9806 = !DILocation(line: 708, column: 14, scope: !1569)
!9807 = !DILocation(line: 708, column: 19, scope: !1569)
!9808 = !DILocation(line: 709, column: 51, scope: !1569)
!9809 = !DILocation(line: 709, column: 60, scope: !1569)
!9810 = !DILocation(line: 709, column: 35, scope: !1569)
!9811 = !DILocation(line: 709, column: 66, scope: !1569)
!9812 = !DILocation(line: 709, column: 22, scope: !1569)
!9813 = !DILocation(line: 709, column: 90, scope: !1569)
!9814 = !DILocation(line: 709, column: 99, scope: !1569)
!9815 = !DILocation(line: 711, column: 9, scope: !1584)
!9816 = !DILocation(line: 711, column: 15, scope: !1584)
!9817 = !DILocation(line: 711, column: 9, scope: !1569)
!9818 = !DILocation(line: 712, column: 28, scope: !1582)
!9819 = !DILocation(line: 712, column: 37, scope: !1582)
!9820 = !DILocation(line: 712, column: 43, scope: !1582)
!9821 = !DILocation(line: 712, column: 50, scope: !1582)
!9822 = !DILocation(line: 712, column: 13, scope: !1582)
!9823 = !DILocation(line: 712, column: 58, scope: !1582)
!9824 = !DILocation(line: 712, column: 13, scope: !1583)
!9825 = !DILocation(line: 713, column: 13, scope: !1581)
!9826 = !DILocation(line: 713, column: 18, scope: !9827)
!9827 = !DILexicalBlockFile(scope: !1580, file: !408, discriminator: 1)
!9828 = !DILocation(line: 713, column: 28, scope: !1580)
!9829 = !DILocation(line: 713, column: 58, scope: !1580)
!9830 = !DILocation(line: 713, column: 45, scope: !1580)
!9831 = !DILocation(line: 713, column: 76, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !1580, file: !408, line: 713, column: 73)
!9833 = !DILocation(line: 713, column: 93, scope: !9832)
!9834 = !DILocation(line: 713, column: 73, scope: !9832)
!9835 = !DILocation(line: 713, column: 103, scope: !9832)
!9836 = !DILocation(line: 713, column: 73, scope: !1580)
!9837 = !DILocation(line: 713, column: 73, scope: !9838)
!9838 = !DILexicalBlockFile(scope: !1580, file: !408, discriminator: 2)
!9839 = !DILocation(line: 713, column: 134, scope: !9840)
!9840 = !DILexicalBlockFile(scope: !9832, file: !408, discriminator: 3)
!9841 = !DILocation(line: 713, column: 152, scope: !9832)
!9842 = !DILocation(line: 713, column: 162, scope: !9832)
!9843 = !DILocation(line: 713, column: 187, scope: !9832)
!9844 = !DILocation(line: 713, column: 118, scope: !9832)
!9845 = !DILocation(line: 713, column: 206, scope: !9846)
!9846 = !DILexicalBlockFile(scope: !1581, file: !408, discriminator: 4)
!9847 = !DILocation(line: 713, column: 206, scope: !1580)
!9848 = !DILocation(line: 713, column: 206, scope: !9849)
!9849 = !DILexicalBlockFile(scope: !1580, file: !408, discriminator: 5)
!9850 = !DILocation(line: 714, column: 13, scope: !1581)
!9851 = !DILocation(line: 717, column: 16, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !1583, file: !408, line: 717, column: 9)
!9853 = !DILocation(line: 717, column: 14, scope: !9852)
!9854 = !DILocation(line: 717, column: 21, scope: !9855)
!9855 = !DILexicalBlockFile(scope: !9856, file: !408, discriminator: 2)
!9856 = !DILexicalBlockFile(scope: !9857, file: !408, discriminator: 1)
!9857 = distinct !DILexicalBlock(scope: !9852, file: !408, line: 717, column: 9)
!9858 = !DILocation(line: 717, column: 25, scope: !9857)
!9859 = !DILocation(line: 717, column: 31, scope: !9857)
!9860 = !DILocation(line: 717, column: 38, scope: !9857)
!9861 = !DILocation(line: 717, column: 23, scope: !9857)
!9862 = !DILocation(line: 717, column: 9, scope: !9852)
!9863 = !DILocation(line: 718, column: 51, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9857, file: !408, line: 717, column: 51)
!9865 = !DILocation(line: 718, column: 29, scope: !9864)
!9866 = !DILocation(line: 718, column: 35, scope: !9864)
!9867 = !DILocation(line: 718, column: 42, scope: !9864)
!9868 = !DILocation(line: 718, column: 57, scope: !9864)
!9869 = !DILocation(line: 718, column: 66, scope: !9864)
!9870 = !DILocation(line: 719, column: 65, scope: !9864)
!9871 = !DILocation(line: 719, column: 43, scope: !9864)
!9872 = !DILocation(line: 719, column: 49, scope: !9864)
!9873 = !DILocation(line: 719, column: 56, scope: !9864)
!9874 = !DILocation(line: 719, column: 38, scope: !9864)
!9875 = !DILocation(line: 719, column: 13, scope: !9864)
!9876 = !DILocation(line: 719, column: 22, scope: !9864)
!9877 = !DILocation(line: 719, column: 29, scope: !9864)
!9878 = !DILocation(line: 719, column: 41, scope: !9864)
!9879 = !DILocation(line: 720, column: 9, scope: !9864)
!9880 = !DILocation(line: 717, column: 47, scope: !9857)
!9881 = !DILocation(line: 717, column: 9, scope: !9857)
!9882 = !DILocation(line: 722, column: 34, scope: !1583)
!9883 = !DILocation(line: 722, column: 40, scope: !1583)
!9884 = !DILocation(line: 722, column: 47, scope: !1583)
!9885 = !DILocation(line: 722, column: 9, scope: !1583)
!9886 = !DILocation(line: 722, column: 18, scope: !1583)
!9887 = !DILocation(line: 722, column: 25, scope: !1583)
!9888 = !DILocation(line: 722, column: 32, scope: !1583)
!9889 = !DILocation(line: 723, column: 5, scope: !1583)
!9890 = !DILocation(line: 725, column: 24, scope: !1569)
!9891 = !DILocation(line: 725, column: 12, scope: !1569)
!9892 = !DILocation(line: 725, column: 5, scope: !1569)
!9893 = !DILocation(line: 726, column: 1, scope: !1569)
!9894 = !DILocation(line: 729, column: 33, scope: !1585)
!9895 = !DILocation(line: 729, column: 49, scope: !1585)
!9896 = !DILocation(line: 731, column: 5, scope: !1585)
!9897 = !DILocation(line: 731, column: 9, scope: !1585)
!9898 = !DILocation(line: 732, column: 5, scope: !1585)
!9899 = !DILocation(line: 732, column: 20, scope: !1585)
!9900 = !DILocation(line: 733, column: 5, scope: !1585)
!9901 = !DILocation(line: 733, column: 15, scope: !1585)
!9902 = !DILocation(line: 734, column: 5, scope: !1585)
!9903 = !DILocation(line: 734, column: 15, scope: !1585)
!9904 = !DILocation(line: 735, column: 5, scope: !1585)
!9905 = !DILocation(line: 735, column: 15, scope: !1585)
!9906 = !DILocation(line: 736, column: 5, scope: !1585)
!9907 = !DILocation(line: 736, column: 15, scope: !1585)
!9908 = !DILocation(line: 737, column: 5, scope: !1585)
!9909 = !DILocation(line: 737, column: 15, scope: !1585)
!9910 = !DILocation(line: 739, column: 5, scope: !1585)
!9911 = !DILocation(line: 739, column: 15, scope: !1585)
!9912 = !DILocation(line: 740, column: 27, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 740, column: 9)
!9914 = !DILocation(line: 740, column: 10, scope: !9913)
!9915 = !DILocation(line: 740, column: 9, scope: !1585)
!9916 = !DILocation(line: 741, column: 9, scope: !9913)
!9917 = !DILocation(line: 743, column: 20, scope: !1585)
!9918 = !DILocation(line: 743, column: 26, scope: !1585)
!9919 = !DILocation(line: 743, column: 31, scope: !1585)
!9920 = !DILocation(line: 743, column: 11, scope: !1585)
!9921 = !DILocation(line: 743, column: 9, scope: !1585)
!9922 = !DILocation(line: 744, column: 10, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 744, column: 9)
!9924 = !DILocation(line: 744, column: 9, scope: !1585)
!9925 = !DILocation(line: 745, column: 9, scope: !9923)
!9926 = !DILocation(line: 747, column: 9, scope: !1602)
!9927 = !DILocation(line: 747, column: 15, scope: !1602)
!9928 = !DILocation(line: 747, column: 9, scope: !1585)
!9929 = !DILocation(line: 748, column: 27, scope: !1601)
!9930 = !DILocation(line: 748, column: 33, scope: !1601)
!9931 = !DILocation(line: 748, column: 40, scope: !1601)
!9932 = !DILocation(line: 748, column: 48, scope: !1601)
!9933 = !DILocation(line: 748, column: 18, scope: !1601)
!9934 = !DILocation(line: 748, column: 16, scope: !1601)
!9935 = !DILocation(line: 749, column: 14, scope: !1600)
!9936 = !DILocation(line: 749, column: 13, scope: !1601)
!9937 = !DILocation(line: 750, column: 13, scope: !1599)
!9938 = !DILocation(line: 750, column: 18, scope: !9939)
!9939 = !DILexicalBlockFile(scope: !1598, file: !408, discriminator: 1)
!9940 = !DILocation(line: 750, column: 28, scope: !1598)
!9941 = !DILocation(line: 750, column: 58, scope: !1598)
!9942 = !DILocation(line: 750, column: 72, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !1598, file: !408, line: 750, column: 69)
!9944 = !DILocation(line: 750, column: 89, scope: !9943)
!9945 = !DILocation(line: 750, column: 69, scope: !9943)
!9946 = !DILocation(line: 750, column: 99, scope: !9943)
!9947 = !DILocation(line: 750, column: 69, scope: !1598)
!9948 = !DILocation(line: 750, column: 69, scope: !9949)
!9949 = !DILexicalBlockFile(scope: !1598, file: !408, discriminator: 2)
!9950 = !DILocation(line: 750, column: 130, scope: !9951)
!9951 = !DILexicalBlockFile(scope: !9943, file: !408, discriminator: 3)
!9952 = !DILocation(line: 750, column: 148, scope: !9943)
!9953 = !DILocation(line: 750, column: 158, scope: !9943)
!9954 = !DILocation(line: 750, column: 183, scope: !9943)
!9955 = !DILocation(line: 750, column: 114, scope: !9943)
!9956 = !DILocation(line: 750, column: 202, scope: !9957)
!9957 = !DILexicalBlockFile(scope: !1599, file: !408, discriminator: 4)
!9958 = !DILocation(line: 750, column: 202, scope: !1598)
!9959 = !DILocation(line: 750, column: 202, scope: !9960)
!9960 = !DILexicalBlockFile(scope: !1598, file: !408, discriminator: 5)
!9961 = !DILocation(line: 751, column: 13, scope: !1599)
!9962 = !DILocation(line: 753, column: 5, scope: !1601)
!9963 = !DILocation(line: 754, column: 55, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !1602, file: !408, line: 753, column: 12)
!9965 = !DILocation(line: 755, column: 16, scope: !9964)
!9966 = !DILocation(line: 758, column: 51, scope: !1585)
!9967 = !DILocation(line: 758, column: 56, scope: !1585)
!9968 = !DILocation(line: 758, column: 32, scope: !1585)
!9969 = !DILocation(line: 758, column: 15, scope: !1585)
!9970 = !DILocation(line: 758, column: 13, scope: !1585)
!9971 = !DILocation(line: 760, column: 5, scope: !1585)
!9972 = !DILocation(line: 760, column: 10, scope: !9973)
!9973 = !DILexicalBlockFile(scope: !1604, file: !408, discriminator: 1)
!9974 = !DILocation(line: 760, column: 20, scope: !1604)
!9975 = !DILocation(line: 760, column: 50, scope: !1604)
!9976 = !DILocation(line: 760, column: 64, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !1604, file: !408, line: 760, column: 61)
!9978 = !DILocation(line: 760, column: 81, scope: !9977)
!9979 = !DILocation(line: 760, column: 61, scope: !9977)
!9980 = !DILocation(line: 760, column: 91, scope: !9977)
!9981 = !DILocation(line: 760, column: 61, scope: !1604)
!9982 = !DILocation(line: 760, column: 61, scope: !9983)
!9983 = !DILexicalBlockFile(scope: !1604, file: !408, discriminator: 2)
!9984 = !DILocation(line: 760, column: 122, scope: !9985)
!9985 = !DILexicalBlockFile(scope: !9977, file: !408, discriminator: 3)
!9986 = !DILocation(line: 760, column: 140, scope: !9977)
!9987 = !DILocation(line: 760, column: 150, scope: !9977)
!9988 = !DILocation(line: 760, column: 175, scope: !9977)
!9989 = !DILocation(line: 760, column: 106, scope: !9977)
!9990 = !DILocation(line: 760, column: 194, scope: !9991)
!9991 = !DILexicalBlockFile(scope: !1585, file: !408, discriminator: 4)
!9992 = !DILocation(line: 760, column: 194, scope: !1604)
!9993 = !DILocation(line: 760, column: 194, scope: !9994)
!9994 = !DILexicalBlockFile(scope: !1604, file: !408, discriminator: 5)
!9995 = !DILocation(line: 761, column: 5, scope: !1585)
!9996 = !DILocation(line: 761, column: 10, scope: !9997)
!9997 = !DILexicalBlockFile(scope: !1606, file: !408, discriminator: 1)
!9998 = !DILocation(line: 761, column: 20, scope: !1606)
!9999 = !DILocation(line: 761, column: 50, scope: !1606)
!10000 = !DILocation(line: 761, column: 67, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !1606, file: !408, line: 761, column: 64)
!10002 = !DILocation(line: 761, column: 84, scope: !10001)
!10003 = !DILocation(line: 761, column: 64, scope: !10001)
!10004 = !DILocation(line: 761, column: 94, scope: !10001)
!10005 = !DILocation(line: 761, column: 64, scope: !1606)
!10006 = !DILocation(line: 761, column: 64, scope: !10007)
!10007 = !DILexicalBlockFile(scope: !1606, file: !408, discriminator: 2)
!10008 = !DILocation(line: 761, column: 125, scope: !10009)
!10009 = !DILexicalBlockFile(scope: !10001, file: !408, discriminator: 3)
!10010 = !DILocation(line: 761, column: 143, scope: !10001)
!10011 = !DILocation(line: 761, column: 153, scope: !10001)
!10012 = !DILocation(line: 761, column: 178, scope: !10001)
!10013 = !DILocation(line: 761, column: 109, scope: !10001)
!10014 = !DILocation(line: 761, column: 197, scope: !9991)
!10015 = !DILocation(line: 761, column: 197, scope: !1606)
!10016 = !DILocation(line: 761, column: 197, scope: !10017)
!10017 = !DILexicalBlockFile(scope: !1606, file: !408, discriminator: 5)
!10018 = !DILocation(line: 763, column: 10, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 763, column: 9)
!10020 = !DILocation(line: 763, column: 9, scope: !1585)
!10021 = !DILocation(line: 764, column: 9, scope: !10019)
!10022 = !DILocation(line: 766, column: 51, scope: !1585)
!10023 = !DILocation(line: 766, column: 57, scope: !1585)
!10024 = !DILocation(line: 766, column: 35, scope: !1585)
!10025 = !DILocation(line: 766, column: 63, scope: !1585)
!10026 = !DILocation(line: 766, column: 22, scope: !1585)
!10027 = !DILocation(line: 766, column: 85, scope: !1585)
!10028 = !DILocation(line: 766, column: 12, scope: !1585)
!10029 = !DILocation(line: 766, column: 10, scope: !1585)
!10030 = !DILocation(line: 767, column: 10, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 767, column: 9)
!10032 = !DILocation(line: 767, column: 9, scope: !1585)
!10033 = !DILocation(line: 768, column: 9, scope: !10031)
!10034 = !DILocation(line: 769, column: 5, scope: !1585)
!10035 = !DILocation(line: 769, column: 10, scope: !10036)
!10036 = !DILexicalBlockFile(scope: !1608, file: !408, discriminator: 1)
!10037 = !DILocation(line: 769, column: 20, scope: !1608)
!10038 = !DILocation(line: 769, column: 50, scope: !1608)
!10039 = !DILocation(line: 769, column: 59, scope: !1608)
!10040 = !DILocation(line: 769, column: 74, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !1608, file: !408, line: 769, column: 71)
!10042 = !DILocation(line: 769, column: 91, scope: !10041)
!10043 = !DILocation(line: 769, column: 71, scope: !10041)
!10044 = !DILocation(line: 769, column: 101, scope: !10041)
!10045 = !DILocation(line: 769, column: 71, scope: !1608)
!10046 = !DILocation(line: 769, column: 71, scope: !10047)
!10047 = !DILexicalBlockFile(scope: !1608, file: !408, discriminator: 2)
!10048 = !DILocation(line: 769, column: 132, scope: !10049)
!10049 = !DILexicalBlockFile(scope: !10041, file: !408, discriminator: 3)
!10050 = !DILocation(line: 769, column: 150, scope: !10041)
!10051 = !DILocation(line: 769, column: 160, scope: !10041)
!10052 = !DILocation(line: 769, column: 185, scope: !10041)
!10053 = !DILocation(line: 769, column: 116, scope: !10041)
!10054 = !DILocation(line: 769, column: 204, scope: !9991)
!10055 = !DILocation(line: 769, column: 204, scope: !1608)
!10056 = !DILocation(line: 769, column: 204, scope: !10057)
!10057 = !DILexicalBlockFile(scope: !1608, file: !408, discriminator: 5)
!10058 = !DILocation(line: 770, column: 77, scope: !1585)
!10059 = !DILocation(line: 770, column: 61, scope: !1585)
!10060 = !DILocation(line: 770, column: 83, scope: !1585)
!10061 = !DILocation(line: 770, column: 48, scope: !1585)
!10062 = !DILocation(line: 770, column: 31, scope: !1585)
!10063 = !DILocation(line: 770, column: 125, scope: !1585)
!10064 = !DILocation(line: 770, column: 131, scope: !1585)
!10065 = !DILocation(line: 770, column: 109, scope: !1585)
!10066 = !DILocation(line: 770, column: 137, scope: !1585)
!10067 = !DILocation(line: 770, column: 105, scope: !1585)
!10068 = !DILocation(line: 770, column: 22, scope: !1585)
!10069 = !DILocation(line: 770, column: 21, scope: !1585)
!10070 = !DILocation(line: 770, column: 5, scope: !1585)
!10071 = !DILocation(line: 770, column: 14, scope: !1585)
!10072 = !DILocation(line: 770, column: 19, scope: !1585)
!10073 = !DILocation(line: 772, column: 51, scope: !1585)
!10074 = !DILocation(line: 772, column: 57, scope: !1585)
!10075 = !DILocation(line: 772, column: 35, scope: !1585)
!10076 = !DILocation(line: 772, column: 63, scope: !1585)
!10077 = !DILocation(line: 772, column: 22, scope: !1585)
!10078 = !DILocation(line: 772, column: 85, scope: !1585)
!10079 = !DILocation(line: 772, column: 12, scope: !1585)
!10080 = !DILocation(line: 772, column: 10, scope: !1585)
!10081 = !DILocation(line: 773, column: 10, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 773, column: 9)
!10083 = !DILocation(line: 773, column: 9, scope: !1585)
!10084 = !DILocation(line: 774, column: 9, scope: !10082)
!10085 = !DILocation(line: 775, column: 5, scope: !1585)
!10086 = !DILocation(line: 775, column: 10, scope: !10087)
!10087 = !DILexicalBlockFile(scope: !1610, file: !408, discriminator: 1)
!10088 = !DILocation(line: 775, column: 20, scope: !1610)
!10089 = !DILocation(line: 775, column: 50, scope: !1610)
!10090 = !DILocation(line: 775, column: 59, scope: !1610)
!10091 = !DILocation(line: 775, column: 74, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !1610, file: !408, line: 775, column: 71)
!10093 = !DILocation(line: 775, column: 91, scope: !10092)
!10094 = !DILocation(line: 775, column: 71, scope: !10092)
!10095 = !DILocation(line: 775, column: 101, scope: !10092)
!10096 = !DILocation(line: 775, column: 71, scope: !1610)
!10097 = !DILocation(line: 775, column: 71, scope: !10098)
!10098 = !DILexicalBlockFile(scope: !1610, file: !408, discriminator: 2)
!10099 = !DILocation(line: 775, column: 132, scope: !10100)
!10100 = !DILexicalBlockFile(scope: !10092, file: !408, discriminator: 3)
!10101 = !DILocation(line: 775, column: 150, scope: !10092)
!10102 = !DILocation(line: 775, column: 160, scope: !10092)
!10103 = !DILocation(line: 775, column: 185, scope: !10092)
!10104 = !DILocation(line: 775, column: 116, scope: !10092)
!10105 = !DILocation(line: 775, column: 204, scope: !9991)
!10106 = !DILocation(line: 775, column: 204, scope: !1610)
!10107 = !DILocation(line: 775, column: 204, scope: !10108)
!10108 = !DILexicalBlockFile(scope: !1610, file: !408, discriminator: 5)
!10109 = !DILocation(line: 776, column: 77, scope: !1585)
!10110 = !DILocation(line: 776, column: 61, scope: !1585)
!10111 = !DILocation(line: 776, column: 83, scope: !1585)
!10112 = !DILocation(line: 776, column: 48, scope: !1585)
!10113 = !DILocation(line: 776, column: 31, scope: !1585)
!10114 = !DILocation(line: 776, column: 125, scope: !1585)
!10115 = !DILocation(line: 776, column: 131, scope: !1585)
!10116 = !DILocation(line: 776, column: 109, scope: !1585)
!10117 = !DILocation(line: 776, column: 137, scope: !1585)
!10118 = !DILocation(line: 776, column: 105, scope: !1585)
!10119 = !DILocation(line: 776, column: 22, scope: !1585)
!10120 = !DILocation(line: 776, column: 21, scope: !1585)
!10121 = !DILocation(line: 776, column: 5, scope: !1585)
!10122 = !DILocation(line: 776, column: 14, scope: !1585)
!10123 = !DILocation(line: 776, column: 19, scope: !1585)
!10124 = !DILocation(line: 778, column: 9, scope: !1616)
!10125 = !DILocation(line: 778, column: 15, scope: !1616)
!10126 = !DILocation(line: 778, column: 9, scope: !1585)
!10127 = !DILocation(line: 779, column: 28, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !1615, file: !408, line: 779, column: 13)
!10129 = !DILocation(line: 779, column: 37, scope: !10128)
!10130 = !DILocation(line: 779, column: 43, scope: !10128)
!10131 = !DILocation(line: 779, column: 50, scope: !10128)
!10132 = !DILocation(line: 779, column: 13, scope: !10128)
!10133 = !DILocation(line: 779, column: 58, scope: !10128)
!10134 = !DILocation(line: 779, column: 13, scope: !1615)
!10135 = !DILocation(line: 780, column: 13, scope: !10128)
!10136 = !DILocation(line: 782, column: 16, scope: !1614)
!10137 = !DILocation(line: 782, column: 14, scope: !1614)
!10138 = !DILocation(line: 782, column: 21, scope: !10139)
!10139 = !DILexicalBlockFile(scope: !10140, file: !408, discriminator: 2)
!10140 = !DILexicalBlockFile(scope: !1613, file: !408, discriminator: 1)
!10141 = !DILocation(line: 782, column: 25, scope: !1613)
!10142 = !DILocation(line: 782, column: 31, scope: !1613)
!10143 = !DILocation(line: 782, column: 38, scope: !1613)
!10144 = !DILocation(line: 782, column: 23, scope: !1613)
!10145 = !DILocation(line: 782, column: 9, scope: !1614)
!10146 = !DILocation(line: 783, column: 13, scope: !1612)
!10147 = !DILocation(line: 783, column: 23, scope: !1612)
!10148 = !DILocation(line: 783, column: 62, scope: !1612)
!10149 = !DILocation(line: 783, column: 40, scope: !1612)
!10150 = !DILocation(line: 783, column: 46, scope: !1612)
!10151 = !DILocation(line: 783, column: 53, scope: !1612)
!10152 = !DILocation(line: 783, column: 66, scope: !1612)
!10153 = !DILocation(line: 783, column: 31, scope: !1612)
!10154 = !DILocation(line: 784, column: 18, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !1612, file: !408, line: 784, column: 17)
!10156 = !DILocation(line: 784, column: 17, scope: !1612)
!10157 = !DILocation(line: 785, column: 42, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10155, file: !408, line: 784, column: 25)
!10159 = !DILocation(line: 785, column: 17, scope: !10158)
!10160 = !DILocation(line: 785, column: 26, scope: !10158)
!10161 = !DILocation(line: 785, column: 33, scope: !10158)
!10162 = !DILocation(line: 785, column: 40, scope: !10158)
!10163 = !DILocation(line: 786, column: 17, scope: !10158)
!10164 = !DILocation(line: 788, column: 43, scope: !1612)
!10165 = !DILocation(line: 788, column: 38, scope: !1612)
!10166 = !DILocation(line: 788, column: 13, scope: !1612)
!10167 = !DILocation(line: 788, column: 22, scope: !1612)
!10168 = !DILocation(line: 788, column: 29, scope: !1612)
!10169 = !DILocation(line: 788, column: 41, scope: !1612)
!10170 = !DILocation(line: 789, column: 9, scope: !1613)
!10171 = !DILocation(line: 789, column: 9, scope: !10140)
!10172 = !DILocation(line: 789, column: 9, scope: !1612)
!10173 = !DILocation(line: 782, column: 47, scope: !1613)
!10174 = !DILocation(line: 782, column: 9, scope: !1613)
!10175 = !DILocation(line: 791, column: 34, scope: !1615)
!10176 = !DILocation(line: 791, column: 40, scope: !1615)
!10177 = !DILocation(line: 791, column: 47, scope: !1615)
!10178 = !DILocation(line: 791, column: 9, scope: !1615)
!10179 = !DILocation(line: 791, column: 18, scope: !1615)
!10180 = !DILocation(line: 791, column: 25, scope: !1615)
!10181 = !DILocation(line: 791, column: 32, scope: !1615)
!10182 = !DILocation(line: 792, column: 5, scope: !1615)
!10183 = !DILocation(line: 795, column: 44, scope: !1585)
!10184 = !DILocation(line: 795, column: 29, scope: !1585)
!10185 = !DILocation(line: 795, column: 10, scope: !1585)
!10186 = !DILocation(line: 795, column: 8, scope: !1585)
!10187 = !DILocation(line: 796, column: 10, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 796, column: 9)
!10189 = !DILocation(line: 796, column: 9, scope: !1585)
!10190 = !DILocation(line: 797, column: 9, scope: !10188)
!10191 = !DILocation(line: 799, column: 24, scope: !1585)
!10192 = !DILocation(line: 799, column: 30, scope: !1585)
!10193 = !DILocation(line: 799, column: 46, scope: !1585)
!10194 = !DILocation(line: 799, column: 34, scope: !1585)
!10195 = !DILocation(line: 799, column: 9, scope: !1585)
!10196 = !DILocation(line: 799, column: 7, scope: !1585)
!10197 = !DILocation(line: 801, column: 5, scope: !1585)
!10198 = !DILocation(line: 801, column: 10, scope: !10199)
!10199 = !DILexicalBlockFile(scope: !1618, file: !408, discriminator: 1)
!10200 = !DILocation(line: 801, column: 20, scope: !1618)
!10201 = !DILocation(line: 801, column: 50, scope: !1618)
!10202 = !DILocation(line: 801, column: 63, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !1618, file: !408, line: 801, column: 60)
!10204 = !DILocation(line: 801, column: 80, scope: !10203)
!10205 = !DILocation(line: 801, column: 60, scope: !10203)
!10206 = !DILocation(line: 801, column: 90, scope: !10203)
!10207 = !DILocation(line: 801, column: 60, scope: !1618)
!10208 = !DILocation(line: 801, column: 60, scope: !10209)
!10209 = !DILexicalBlockFile(scope: !1618, file: !408, discriminator: 2)
!10210 = !DILocation(line: 801, column: 121, scope: !10211)
!10211 = !DILexicalBlockFile(scope: !10203, file: !408, discriminator: 3)
!10212 = !DILocation(line: 801, column: 139, scope: !10203)
!10213 = !DILocation(line: 801, column: 149, scope: !10203)
!10214 = !DILocation(line: 801, column: 174, scope: !10203)
!10215 = !DILocation(line: 801, column: 105, scope: !10203)
!10216 = !DILocation(line: 801, column: 193, scope: !9991)
!10217 = !DILocation(line: 801, column: 193, scope: !1618)
!10218 = !DILocation(line: 801, column: 193, scope: !10219)
!10219 = !DILexicalBlockFile(scope: !1618, file: !408, discriminator: 5)
!10220 = !DILocation(line: 803, column: 9, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !1585, file: !408, line: 803, column: 9)
!10222 = !DILocation(line: 803, column: 11, scope: !10221)
!10223 = !DILocation(line: 803, column: 9, scope: !1585)
!10224 = !DILocation(line: 804, column: 9, scope: !10221)
!10225 = !DILocation(line: 806, column: 24, scope: !1585)
!10226 = !DILocation(line: 806, column: 12, scope: !1585)
!10227 = !DILocation(line: 806, column: 5, scope: !1585)
!10228 = !DILocation(line: 809, column: 5, scope: !1585)
!10229 = !DILocation(line: 809, column: 10, scope: !10230)
!10230 = !DILexicalBlockFile(scope: !1620, file: !408, discriminator: 1)
!10231 = !DILocation(line: 809, column: 20, scope: !1620)
!10232 = !DILocation(line: 809, column: 50, scope: !1620)
!10233 = !DILocation(line: 809, column: 37, scope: !1620)
!10234 = !DILocation(line: 809, column: 68, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !1620, file: !408, line: 809, column: 65)
!10236 = !DILocation(line: 809, column: 85, scope: !10235)
!10237 = !DILocation(line: 809, column: 65, scope: !10235)
!10238 = !DILocation(line: 809, column: 95, scope: !10235)
!10239 = !DILocation(line: 809, column: 65, scope: !1620)
!10240 = !DILocation(line: 809, column: 65, scope: !10241)
!10241 = !DILexicalBlockFile(scope: !1620, file: !408, discriminator: 2)
!10242 = !DILocation(line: 809, column: 126, scope: !10243)
!10243 = !DILexicalBlockFile(scope: !10235, file: !408, discriminator: 3)
!10244 = !DILocation(line: 809, column: 144, scope: !10235)
!10245 = !DILocation(line: 809, column: 154, scope: !10235)
!10246 = !DILocation(line: 809, column: 179, scope: !10235)
!10247 = !DILocation(line: 809, column: 110, scope: !10235)
!10248 = !DILocation(line: 809, column: 198, scope: !9991)
!10249 = !DILocation(line: 809, column: 198, scope: !1620)
!10250 = !DILocation(line: 809, column: 198, scope: !10251)
!10251 = !DILexicalBlockFile(scope: !1620, file: !408, discriminator: 5)
!10252 = !DILocation(line: 810, column: 5, scope: !1585)
!10253 = !DILocation(line: 811, column: 1, scope: !1585)
!10254 = !DILocation(line: 814, column: 26, scope: !1630)
!10255 = !DILocation(line: 814, column: 44, scope: !1630)
!10256 = !DILocation(line: 816, column: 5, scope: !1630)
!10257 = !DILocation(line: 816, column: 20, scope: !1630)
!10258 = !DILocation(line: 816, column: 43, scope: !1630)
!10259 = !DILocation(line: 816, column: 27, scope: !1630)
!10260 = !DILocation(line: 817, column: 5, scope: !1630)
!10261 = !DILocation(line: 817, column: 16, scope: !1630)
!10262 = !DILocation(line: 818, column: 9, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !1630, file: !408, line: 818, column: 9)
!10264 = !DILocation(line: 818, column: 15, scope: !10263)
!10265 = !DILocation(line: 818, column: 9, scope: !1630)
!10266 = !DILocation(line: 819, column: 16, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10263, file: !408, line: 818, column: 22)
!10268 = !DILocation(line: 820, column: 13, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10267, file: !408, line: 820, column: 13)
!10270 = !DILocation(line: 820, column: 19, scope: !10269)
!10271 = !DILocation(line: 820, column: 26, scope: !10269)
!10272 = !DILocation(line: 820, column: 38, scope: !10269)
!10273 = !DILocation(line: 820, column: 44, scope: !10269)
!10274 = !DILocation(line: 820, column: 51, scope: !10269)
!10275 = !DILocation(line: 820, column: 35, scope: !10269)
!10276 = !DILocation(line: 820, column: 13, scope: !10267)
!10277 = !DILocation(line: 821, column: 43, scope: !10269)
!10278 = !DILocation(line: 821, column: 49, scope: !10269)
!10279 = !DILocation(line: 821, column: 56, scope: !10269)
!10280 = !DILocation(line: 821, column: 41, scope: !10269)
!10281 = !DILocation(line: 821, column: 20, scope: !10269)
!10282 = !DILocation(line: 821, column: 13, scope: !10269)
!10283 = !DILocation(line: 822, column: 5, scope: !10267)
!10284 = !DILocation(line: 823, column: 31, scope: !1630)
!10285 = !DILocation(line: 823, column: 12, scope: !1630)
!10286 = !DILocation(line: 824, column: 1, scope: !1630)
!10287 = !DILocation(line: 823, column: 5, scope: !1630)
!10288 = !DILocation(line: 840, column: 33, scope: !1636)
!10289 = !DILocation(line: 842, column: 5, scope: !1636)
!10290 = !DILocation(line: 842, column: 9, scope: !1636)
!10291 = !DILocation(line: 842, column: 12, scope: !1636)
!10292 = !DILocation(line: 843, column: 5, scope: !1636)
!10293 = !DILocation(line: 843, column: 15, scope: !1636)
!10294 = !DILocation(line: 843, column: 43, scope: !1636)
!10295 = !DILocation(line: 846, column: 27, scope: !1636)
!10296 = !DILocation(line: 846, column: 33, scope: !1636)
!10297 = !DILocation(line: 846, column: 41, scope: !10298)
!10298 = !DILexicalBlockFile(scope: !1636, file: !408, discriminator: 1)
!10299 = !DILocation(line: 846, column: 47, scope: !1636)
!10300 = !DILocation(line: 846, column: 54, scope: !1636)
!10301 = !DILocation(line: 846, column: 27, scope: !10302)
!10302 = !DILexicalBlockFile(scope: !1636, file: !408, discriminator: 2)
!10303 = !DILocation(line: 846, column: 27, scope: !10304)
!10304 = !DILexicalBlockFile(scope: !10305, file: !408, discriminator: 4)
!10305 = !DILexicalBlockFile(scope: !1636, file: !408, discriminator: 3)
!10306 = !DILocation(line: 846, column: 16, scope: !1636)
!10307 = !DILocation(line: 846, column: 14, scope: !1636)
!10308 = !DILocation(line: 847, column: 10, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !1636, file: !408, line: 847, column: 9)
!10310 = !DILocation(line: 847, column: 9, scope: !1636)
!10311 = !DILocation(line: 848, column: 9, scope: !10309)
!10312 = !DILocation(line: 849, column: 12, scope: !1646)
!10313 = !DILocation(line: 849, column: 10, scope: !1646)
!10314 = !DILocation(line: 849, column: 17, scope: !10315)
!10315 = !DILexicalBlockFile(scope: !10316, file: !408, discriminator: 2)
!10316 = !DILexicalBlockFile(scope: !1645, file: !408, discriminator: 1)
!10317 = !DILocation(line: 849, column: 38, scope: !1645)
!10318 = !DILocation(line: 849, column: 23, scope: !1645)
!10319 = !DILocation(line: 849, column: 50, scope: !1645)
!10320 = !DILocation(line: 849, column: 19, scope: !1645)
!10321 = !DILocation(line: 849, column: 5, scope: !1646)
!10322 = !DILocation(line: 850, column: 9, scope: !1644)
!10323 = !DILocation(line: 850, column: 19, scope: !1644)
!10324 = !DILocation(line: 850, column: 49, scope: !1644)
!10325 = !DILocation(line: 850, column: 27, scope: !1644)
!10326 = !DILocation(line: 850, column: 33, scope: !1644)
!10327 = !DILocation(line: 850, column: 40, scope: !1644)
!10328 = !DILocation(line: 851, column: 25, scope: !1644)
!10329 = !DILocation(line: 851, column: 34, scope: !1644)
!10330 = !DILocation(line: 851, column: 43, scope: !1644)
!10331 = !DILocation(line: 852, column: 54, scope: !1644)
!10332 = !DILocation(line: 852, column: 48, scope: !1644)
!10333 = !DILocation(line: 852, column: 10, scope: !1644)
!10334 = !DILocation(line: 852, column: 28, scope: !1644)
!10335 = !DILocation(line: 852, column: 11, scope: !1644)
!10336 = !DILocation(line: 852, column: 40, scope: !1644)
!10337 = !DILocation(line: 852, column: 51, scope: !1644)
!10338 = !DILocation(line: 853, column: 5, scope: !1645)
!10339 = !DILocation(line: 853, column: 5, scope: !1644)
!10340 = !DILocation(line: 849, column: 61, scope: !1645)
!10341 = !DILocation(line: 849, column: 5, scope: !1645)
!10342 = !DILocation(line: 856, column: 17, scope: !1636)
!10343 = !DILocation(line: 856, column: 23, scope: !1636)
!10344 = !DILocation(line: 856, column: 29, scope: !1636)
!10345 = !DILocation(line: 856, column: 43, scope: !1636)
!10346 = !DILocation(line: 856, column: 46, scope: !10302)
!10347 = !DILocation(line: 856, column: 52, scope: !1636)
!10348 = !DILocation(line: 856, column: 59, scope: !1636)
!10349 = !DILocation(line: 856, column: 66, scope: !1636)
!10350 = !DILocation(line: 856, column: 43, scope: !10351)
!10351 = !DILexicalBlockFile(scope: !10298, file: !408, discriminator: 3)
!10352 = !DILocation(line: 856, column: 14, scope: !1636)
!10353 = !DILocation(line: 857, column: 9, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !1636, file: !408, line: 857, column: 9)
!10355 = !DILocation(line: 857, column: 9, scope: !1636)
!10356 = !DILocation(line: 859, column: 45, scope: !10354)
!10357 = !DILocation(line: 859, column: 51, scope: !10354)
!10358 = !DILocation(line: 860, column: 51, scope: !10354)
!10359 = !DILocation(line: 862, column: 76, scope: !10354)
!10360 = !DILocation(line: 862, column: 82, scope: !10354)
!10361 = !DILocation(line: 862, column: 60, scope: !10354)
!10362 = !DILocation(line: 862, column: 88, scope: !10354)
!10363 = !DILocation(line: 862, column: 47, scope: !10354)
!10364 = !DILocation(line: 863, column: 76, scope: !10354)
!10365 = !DILocation(line: 863, column: 82, scope: !10354)
!10366 = !DILocation(line: 863, column: 60, scope: !10354)
!10367 = !DILocation(line: 863, column: 88, scope: !10354)
!10368 = !DILocation(line: 863, column: 47, scope: !10354)
!10369 = !DILocation(line: 858, column: 24, scope: !10354)
!10370 = !DILocation(line: 858, column: 22, scope: !10354)
!10371 = !DILocation(line: 858, column: 9, scope: !10354)
!10372 = !DILocation(line: 866, column: 45, scope: !10354)
!10373 = !DILocation(line: 866, column: 51, scope: !10354)
!10374 = !DILocation(line: 867, column: 51, scope: !10354)
!10375 = !DILocation(line: 868, column: 48, scope: !10354)
!10376 = !DILocation(line: 868, column: 54, scope: !10354)
!10377 = !DILocation(line: 868, column: 61, scope: !10354)
!10378 = !DILocation(line: 869, column: 76, scope: !10354)
!10379 = !DILocation(line: 869, column: 82, scope: !10354)
!10380 = !DILocation(line: 869, column: 60, scope: !10354)
!10381 = !DILocation(line: 869, column: 88, scope: !10354)
!10382 = !DILocation(line: 869, column: 47, scope: !10354)
!10383 = !DILocation(line: 870, column: 76, scope: !10354)
!10384 = !DILocation(line: 870, column: 82, scope: !10354)
!10385 = !DILocation(line: 870, column: 60, scope: !10354)
!10386 = !DILocation(line: 870, column: 88, scope: !10354)
!10387 = !DILocation(line: 870, column: 47, scope: !10354)
!10388 = !DILocation(line: 865, column: 24, scope: !10354)
!10389 = !DILocation(line: 865, column: 22, scope: !10354)
!10390 = !DILocation(line: 871, column: 9, scope: !1650)
!10391 = !DILocation(line: 871, column: 9, scope: !1636)
!10392 = !DILocation(line: 872, column: 9, scope: !1649)
!10393 = !DILocation(line: 872, column: 14, scope: !10394)
!10394 = !DILexicalBlockFile(scope: !1648, file: !408, discriminator: 1)
!10395 = !DILocation(line: 872, column: 24, scope: !1648)
!10396 = !DILocation(line: 872, column: 54, scope: !1648)
!10397 = !DILocation(line: 872, column: 73, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !1648, file: !408, line: 872, column: 70)
!10399 = !DILocation(line: 872, column: 90, scope: !10398)
!10400 = !DILocation(line: 872, column: 70, scope: !10398)
!10401 = !DILocation(line: 872, column: 100, scope: !10398)
!10402 = !DILocation(line: 872, column: 70, scope: !1648)
!10403 = !DILocation(line: 872, column: 70, scope: !10404)
!10404 = !DILexicalBlockFile(scope: !1648, file: !408, discriminator: 2)
!10405 = !DILocation(line: 872, column: 131, scope: !10406)
!10406 = !DILexicalBlockFile(scope: !10398, file: !408, discriminator: 3)
!10407 = !DILocation(line: 872, column: 149, scope: !10398)
!10408 = !DILocation(line: 872, column: 159, scope: !10398)
!10409 = !DILocation(line: 872, column: 184, scope: !10398)
!10410 = !DILocation(line: 872, column: 115, scope: !10398)
!10411 = !DILocation(line: 872, column: 203, scope: !10412)
!10412 = !DILexicalBlockFile(scope: !1649, file: !408, discriminator: 4)
!10413 = !DILocation(line: 872, column: 203, scope: !1648)
!10414 = !DILocation(line: 872, column: 203, scope: !10415)
!10415 = !DILexicalBlockFile(scope: !1648, file: !408, discriminator: 5)
!10416 = !DILocation(line: 873, column: 16, scope: !1649)
!10417 = !DILocation(line: 873, column: 9, scope: !1649)
!10418 = !DILocation(line: 876, column: 16, scope: !1654)
!10419 = !DILocation(line: 876, column: 14, scope: !1654)
!10420 = !DILocation(line: 876, column: 21, scope: !10421)
!10421 = !DILexicalBlockFile(scope: !10422, file: !408, discriminator: 2)
!10422 = !DILexicalBlockFile(scope: !1653, file: !408, discriminator: 1)
!10423 = !DILocation(line: 876, column: 42, scope: !1653)
!10424 = !DILocation(line: 876, column: 27, scope: !1653)
!10425 = !DILocation(line: 876, column: 54, scope: !1653)
!10426 = !DILocation(line: 876, column: 23, scope: !1653)
!10427 = !DILocation(line: 876, column: 9, scope: !1654)
!10428 = !DILocation(line: 877, column: 13, scope: !1653)
!10429 = !DILocation(line: 877, column: 18, scope: !10430)
!10430 = !DILexicalBlockFile(scope: !1652, file: !408, discriminator: 1)
!10431 = !DILocation(line: 877, column: 28, scope: !1652)
!10432 = !DILocation(line: 877, column: 97, scope: !1652)
!10433 = !DILocation(line: 877, column: 59, scope: !1652)
!10434 = !DILocation(line: 877, column: 77, scope: !1652)
!10435 = !DILocation(line: 877, column: 60, scope: !1652)
!10436 = !DILocation(line: 877, column: 89, scope: !1652)
!10437 = !DILocation(line: 877, column: 111, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !1652, file: !408, line: 877, column: 108)
!10439 = !DILocation(line: 877, column: 128, scope: !10438)
!10440 = !DILocation(line: 877, column: 108, scope: !10438)
!10441 = !DILocation(line: 877, column: 138, scope: !10438)
!10442 = !DILocation(line: 877, column: 108, scope: !1652)
!10443 = !DILocation(line: 877, column: 108, scope: !10444)
!10444 = !DILexicalBlockFile(scope: !1652, file: !408, discriminator: 2)
!10445 = !DILocation(line: 877, column: 169, scope: !10446)
!10446 = !DILexicalBlockFile(scope: !10438, file: !408, discriminator: 3)
!10447 = !DILocation(line: 877, column: 187, scope: !10438)
!10448 = !DILocation(line: 877, column: 197, scope: !10438)
!10449 = !DILocation(line: 877, column: 222, scope: !10438)
!10450 = !DILocation(line: 877, column: 153, scope: !10438)
!10451 = !DILocation(line: 877, column: 241, scope: !10452)
!10452 = !DILexicalBlockFile(scope: !1653, file: !408, discriminator: 4)
!10453 = !DILocation(line: 877, column: 241, scope: !1652)
!10454 = !DILocation(line: 877, column: 241, scope: !10455)
!10455 = !DILexicalBlockFile(scope: !1652, file: !408, discriminator: 5)
!10456 = !DILocation(line: 877, column: 241, scope: !10457)
!10457 = !DILexicalBlockFile(scope: !1652, file: !408, discriminator: 6)
!10458 = !DILocation(line: 876, column: 65, scope: !1653)
!10459 = !DILocation(line: 876, column: 9, scope: !1653)
!10460 = !DILocation(line: 878, column: 9, scope: !1655)
!10461 = !DILocation(line: 878, column: 14, scope: !10462)
!10462 = !DILexicalBlockFile(scope: !1657, file: !408, discriminator: 1)
!10463 = !DILocation(line: 878, column: 24, scope: !1657)
!10464 = !DILocation(line: 878, column: 54, scope: !1657)
!10465 = !DILocation(line: 878, column: 73, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !1657, file: !408, line: 878, column: 70)
!10467 = !DILocation(line: 878, column: 90, scope: !10466)
!10468 = !DILocation(line: 878, column: 70, scope: !10466)
!10469 = !DILocation(line: 878, column: 100, scope: !10466)
!10470 = !DILocation(line: 878, column: 70, scope: !1657)
!10471 = !DILocation(line: 878, column: 70, scope: !10472)
!10472 = !DILexicalBlockFile(scope: !1657, file: !408, discriminator: 2)
!10473 = !DILocation(line: 878, column: 131, scope: !10474)
!10474 = !DILexicalBlockFile(scope: !10466, file: !408, discriminator: 3)
!10475 = !DILocation(line: 878, column: 149, scope: !10466)
!10476 = !DILocation(line: 878, column: 159, scope: !10466)
!10477 = !DILocation(line: 878, column: 184, scope: !10466)
!10478 = !DILocation(line: 878, column: 115, scope: !10466)
!10479 = !DILocation(line: 878, column: 203, scope: !10480)
!10480 = !DILexicalBlockFile(scope: !1655, file: !408, discriminator: 4)
!10481 = !DILocation(line: 878, column: 203, scope: !1657)
!10482 = !DILocation(line: 878, column: 203, scope: !10483)
!10483 = !DILexicalBlockFile(scope: !1657, file: !408, discriminator: 5)
!10484 = !DILocation(line: 880, column: 9, scope: !1655)
!10485 = !DILocation(line: 882, column: 1, scope: !1636)
!10486 = !DILocation(line: 981, column: 33, scope: !1658)
!10487 = !DILocation(line: 981, column: 49, scope: !1658)
!10488 = !DILocation(line: 983, column: 25, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !1658, file: !408, line: 983, column: 9)
!10490 = !DILocation(line: 983, column: 34, scope: !10489)
!10491 = !DILocation(line: 983, column: 43, scope: !10489)
!10492 = !DILocation(line: 983, column: 9, scope: !1658)
!10493 = !DILocation(line: 984, column: 22, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10489, file: !408, line: 983, column: 61)
!10495 = !DILocation(line: 986, column: 22, scope: !10494)
!10496 = !DILocation(line: 984, column: 9, scope: !10494)
!10497 = !DILocation(line: 987, column: 9, scope: !10494)
!10498 = !DILocation(line: 990, column: 45, scope: !10489)
!10499 = !DILocation(line: 990, column: 51, scope: !10489)
!10500 = !DILocation(line: 990, column: 16, scope: !10489)
!10501 = !DILocation(line: 990, column: 9, scope: !10489)
!10502 = !DILocation(line: 991, column: 1, scope: !1658)
!10503 = !DILocation(line: 994, column: 21, scope: !1406)
!10504 = !DILocation(line: 996, column: 5, scope: !1406)
!10505 = !DILocation(line: 996, column: 16, scope: !1406)
!10506 = !DILocation(line: 997, column: 5, scope: !1406)
!10507 = !DILocation(line: 997, column: 9, scope: !1406)
!10508 = !DILocation(line: 1004, column: 26, scope: !1413)
!10509 = !DILocation(line: 1004, column: 33, scope: !1413)
!10510 = !DILocation(line: 1004, column: 44, scope: !1413)
!10511 = !DILocation(line: 1004, column: 53, scope: !1413)
!10512 = !DILocation(line: 1004, column: 70, scope: !1413)
!10513 = !DILocation(line: 1004, column: 9, scope: !1406)
!10514 = !DILocation(line: 1005, column: 9, scope: !1412)
!10515 = !DILocation(line: 1005, column: 26, scope: !1412)
!10516 = !DILocation(line: 1005, column: 80, scope: !1412)
!10517 = !DILocation(line: 1005, column: 62, scope: !1412)
!10518 = !DILocation(line: 1005, column: 87, scope: !1412)
!10519 = !{!10520, !2633, i64 16}
!10520 = !{!"", !2632, i64 0, !2633, i64 16, !2633, i64 24, !10521, i64 32, !2621, i64 40}
!10521 = !{!"", !2708, i64 0, !2708, i64 0, !2708, i64 0, !2708, i64 0, !2708, i64 0, !2708, i64 1}
!10522 = !DILocation(line: 1006, column: 9, scope: !1412)
!10523 = !DILocation(line: 1006, column: 15, scope: !1412)
!10524 = !DILocation(line: 1006, column: 56, scope: !1412)
!10525 = !DILocation(line: 1006, column: 39, scope: !1412)
!10526 = !DILocation(line: 1006, column: 63, scope: !1412)
!10527 = !DILocation(line: 1006, column: 69, scope: !1412)
!10528 = !DILocation(line: 1006, column: 37, scope: !1412)
!10529 = !DILocation(line: 1006, column: 127, scope: !10530)
!10530 = !DILexicalBlockFile(scope: !1412, file: !408, discriminator: 1)
!10531 = !DILocation(line: 1006, column: 111, scope: !1412)
!10532 = !DILocation(line: 1006, column: 133, scope: !1412)
!10533 = !DILocation(line: 1006, column: 139, scope: !1412)
!10534 = !DILocation(line: 1006, column: 81, scope: !1412)
!10535 = !DILocation(line: 1006, column: 174, scope: !10536)
!10536 = !DILexicalBlockFile(scope: !1412, file: !408, discriminator: 3)
!10537 = !DILocation(line: 1006, column: 157, scope: !1412)
!10538 = !DILocation(line: 1006, column: 179, scope: !1412)
!10539 = !DILocation(line: 1006, column: 149, scope: !1412)
!10540 = !DILocation(line: 1006, column: 222, scope: !10541)
!10541 = !DILexicalBlockFile(scope: !1412, file: !408, discriminator: 4)
!10542 = !DILocation(line: 1006, column: 196, scope: !1412)
!10543 = !DILocation(line: 1006, column: 227, scope: !1412)
!10544 = !DILocation(line: 1006, column: 188, scope: !1412)
!10545 = !DILocation(line: 1006, column: 37, scope: !10546)
!10546 = !DILexicalBlockFile(scope: !10547, file: !408, discriminator: 6)
!10547 = !DILexicalBlockFile(scope: !1412, file: !408, discriminator: 5)
!10548 = !DILocation(line: 1006, column: 274, scope: !10549)
!10549 = !DILexicalBlockFile(scope: !1412, file: !408, discriminator: 2)
!10550 = !DILocation(line: 1006, column: 254, scope: !1412)
!10551 = !DILocation(line: 1006, column: 281, scope: !1412)
!10552 = !DILocation(line: 1006, column: 286, scope: !1412)
!10553 = !DILocation(line: 1006, column: 15, scope: !10554)
!10554 = !DILexicalBlockFile(scope: !10555, file: !408, discriminator: 8)
!10555 = !DILexicalBlockFile(scope: !1412, file: !408, discriminator: 7)
!10556 = !DILocation(line: 1007, column: 9, scope: !1412)
!10557 = !DILocation(line: 1007, column: 22, scope: !1412)
!10558 = !DILocation(line: 1007, column: 77, scope: !1412)
!10559 = !DILocation(line: 1007, column: 59, scope: !1412)
!10560 = !DILocation(line: 1007, column: 84, scope: !1412)
!10561 = !DILocation(line: 1007, column: 90, scope: !1412)
!10562 = !DILocation(line: 1008, column: 16, scope: !1420)
!10563 = !DILocation(line: 1008, column: 14, scope: !1420)
!10564 = !DILocation(line: 1008, column: 21, scope: !10565)
!10565 = !DILexicalBlockFile(scope: !10566, file: !408, discriminator: 2)
!10566 = !DILexicalBlockFile(scope: !1419, file: !408, discriminator: 1)
!10567 = !DILocation(line: 1008, column: 25, scope: !1419)
!10568 = !DILocation(line: 1008, column: 23, scope: !1419)
!10569 = !DILocation(line: 1008, column: 9, scope: !1420)
!10570 = !DILocation(line: 1009, column: 13, scope: !1418)
!10571 = !DILocation(line: 1009, column: 21, scope: !1418)
!10572 = !DILocation(line: 1009, column: 39, scope: !1418)
!10573 = !DILocation(line: 1009, column: 45, scope: !1418)
!10574 = !DILocation(line: 1009, column: 38, scope: !1418)
!10575 = !DILocation(line: 1009, column: 98, scope: !10576)
!10576 = !DILexicalBlockFile(scope: !1418, file: !408, discriminator: 1)
!10577 = !DILocation(line: 1009, column: 90, scope: !1418)
!10578 = !DILocation(line: 1009, column: 71, scope: !1418)
!10579 = !DILocation(line: 1009, column: 106, scope: !10580)
!10580 = !DILexicalBlockFile(scope: !1418, file: !408, discriminator: 2)
!10581 = !DILocation(line: 1009, column: 112, scope: !1418)
!10582 = !DILocation(line: 1009, column: 105, scope: !1418)
!10583 = !DILocation(line: 1009, column: 165, scope: !10584)
!10584 = !DILexicalBlockFile(scope: !1418, file: !408, discriminator: 4)
!10585 = !DILocation(line: 1009, column: 157, scope: !1418)
!10586 = !DILocation(line: 1009, column: 139, scope: !1418)
!10587 = !DILocation(line: 1009, column: 138, scope: !1418)
!10588 = !{!10589, !10589, i64 0}
!10589 = !{!"short", !2622, i64 0}
!10590 = !DILocation(line: 1009, column: 198, scope: !10591)
!10591 = !DILexicalBlockFile(scope: !1418, file: !408, discriminator: 5)
!10592 = !DILocation(line: 1009, column: 190, scope: !1418)
!10593 = !DILocation(line: 1009, column: 172, scope: !1418)
!10594 = !DILocation(line: 1009, column: 171, scope: !1418)
!10595 = !DILocation(line: 1009, column: 38, scope: !10596)
!10596 = !DILexicalBlockFile(scope: !10597, file: !408, discriminator: 7)
!10597 = !DILexicalBlockFile(scope: !1418, file: !408, discriminator: 6)
!10598 = !DILocation(line: 1009, column: 21, scope: !10599)
!10599 = !DILexicalBlockFile(scope: !10600, file: !408, discriminator: 8)
!10600 = !DILexicalBlockFile(scope: !1418, file: !408, discriminator: 3)
!10601 = !DILocation(line: 1010, column: 17, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !1418, file: !408, line: 1010, column: 17)
!10603 = !DILocation(line: 1010, column: 20, scope: !10602)
!10604 = !DILocation(line: 1010, column: 17, scope: !1418)
!10605 = !DILocation(line: 1011, column: 23, scope: !10602)
!10606 = !DILocation(line: 1011, column: 17, scope: !10602)
!10607 = !DILocation(line: 1012, column: 22, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10602, file: !408, line: 1012, column: 22)
!10609 = !DILocation(line: 1012, column: 25, scope: !10608)
!10610 = !DILocation(line: 1012, column: 22, scope: !10602)
!10611 = !DILocation(line: 1013, column: 23, scope: !10608)
!10612 = !DILocation(line: 1013, column: 17, scope: !10608)
!10613 = !DILocation(line: 1014, column: 22, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10608, file: !408, line: 1014, column: 22)
!10615 = !DILocation(line: 1014, column: 28, scope: !10614)
!10616 = !DILocation(line: 1014, column: 32, scope: !10617)
!10617 = !DILexicalBlockFile(scope: !10614, file: !408, discriminator: 1)
!10618 = !DILocation(line: 1014, column: 35, scope: !10614)
!10619 = !DILocation(line: 1014, column: 42, scope: !10614)
!10620 = !DILocation(line: 1014, column: 45, scope: !10621)
!10621 = !DILexicalBlockFile(scope: !10614, file: !408, discriminator: 2)
!10622 = !DILocation(line: 1014, column: 48, scope: !10614)
!10623 = !DILocation(line: 1014, column: 55, scope: !10614)
!10624 = !DILocation(line: 1014, column: 58, scope: !10625)
!10625 = !DILexicalBlockFile(scope: !10614, file: !408, discriminator: 3)
!10626 = !DILocation(line: 1014, column: 61, scope: !10614)
!10627 = !DILocation(line: 1014, column: 68, scope: !10614)
!10628 = !DILocation(line: 1014, column: 71, scope: !10629)
!10629 = !DILexicalBlockFile(scope: !10614, file: !408, discriminator: 4)
!10630 = !DILocation(line: 1014, column: 74, scope: !10614)
!10631 = !DILocation(line: 1014, column: 81, scope: !10614)
!10632 = !DILocation(line: 1014, column: 84, scope: !10633)
!10633 = !DILexicalBlockFile(scope: !10614, file: !408, discriminator: 5)
!10634 = !DILocation(line: 1014, column: 87, scope: !10614)
!10635 = !DILocation(line: 1014, column: 22, scope: !10608)
!10636 = !DILocation(line: 1015, column: 17, scope: !10614)
!10637 = !DILocation(line: 1016, column: 9, scope: !1419)
!10638 = !DILocation(line: 1016, column: 9, scope: !10566)
!10639 = !DILocation(line: 1016, column: 9, scope: !1418)
!10640 = !DILocation(line: 1008, column: 31, scope: !1419)
!10641 = !DILocation(line: 1008, column: 9, scope: !1419)
!10642 = !DILocation(line: 1017, column: 9, scope: !1412)
!10643 = !DILocation(line: 1018, column: 5, scope: !1413)
!10644 = !DILocation(line: 1019, column: 26, scope: !1423)
!10645 = !DILocation(line: 1019, column: 33, scope: !1423)
!10646 = !DILocation(line: 1019, column: 44, scope: !1423)
!10647 = !DILocation(line: 1019, column: 53, scope: !1423)
!10648 = !DILocation(line: 1019, column: 70, scope: !1423)
!10649 = !DILocation(line: 1019, column: 9, scope: !1406)
!10650 = !DILocation(line: 1020, column: 9, scope: !1422)
!10651 = !DILocation(line: 1020, column: 15, scope: !1422)
!10652 = !DILocation(line: 1020, column: 54, scope: !1422)
!10653 = !DILocation(line: 1020, column: 36, scope: !1422)
!10654 = !DILocation(line: 1020, column: 61, scope: !1422)
!10655 = !DILocation(line: 1020, column: 34, scope: !1422)
!10656 = !DILocation(line: 1021, column: 16, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !1422, file: !408, line: 1021, column: 9)
!10658 = !DILocation(line: 1021, column: 14, scope: !10657)
!10659 = !DILocation(line: 1021, column: 21, scope: !10660)
!10660 = !DILexicalBlockFile(scope: !10661, file: !408, discriminator: 2)
!10661 = !DILexicalBlockFile(scope: !10662, file: !408, discriminator: 1)
!10662 = distinct !DILexicalBlock(scope: !10657, file: !408, line: 1021, column: 9)
!10663 = !DILocation(line: 1021, column: 56, scope: !10662)
!10664 = !DILocation(line: 1021, column: 41, scope: !10662)
!10665 = !DILocation(line: 1021, column: 63, scope: !10662)
!10666 = !DILocation(line: 1021, column: 23, scope: !10662)
!10667 = !DILocation(line: 1021, column: 9, scope: !10657)
!10668 = !DILocation(line: 1022, column: 19, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !408, line: 1022, column: 17)
!10670 = distinct !DILexicalBlock(scope: !10662, file: !408, line: 1021, column: 79)
!10671 = !DILocation(line: 1022, column: 17, scope: !10669)
!10672 = !DILocation(line: 1022, column: 22, scope: !10669)
!10673 = !DILocation(line: 1022, column: 17, scope: !10670)
!10674 = !DILocation(line: 1023, column: 23, scope: !10669)
!10675 = !DILocation(line: 1023, column: 17, scope: !10669)
!10676 = !DILocation(line: 1024, column: 24, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10669, file: !408, line: 1024, column: 22)
!10678 = !DILocation(line: 1024, column: 22, scope: !10677)
!10679 = !DILocation(line: 1024, column: 27, scope: !10677)
!10680 = !DILocation(line: 1024, column: 22, scope: !10669)
!10681 = !DILocation(line: 1025, column: 23, scope: !10677)
!10682 = !DILocation(line: 1025, column: 17, scope: !10677)
!10683 = !DILocation(line: 1026, column: 22, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10677, file: !408, line: 1026, column: 22)
!10685 = !DILocation(line: 1026, column: 28, scope: !10684)
!10686 = !DILocation(line: 1026, column: 34, scope: !10687)
!10687 = !DILexicalBlockFile(scope: !10684, file: !408, discriminator: 1)
!10688 = !DILocation(line: 1026, column: 32, scope: !10684)
!10689 = !DILocation(line: 1026, column: 37, scope: !10684)
!10690 = !DILocation(line: 1026, column: 44, scope: !10684)
!10691 = !DILocation(line: 1026, column: 49, scope: !10692)
!10692 = !DILexicalBlockFile(scope: !10684, file: !408, discriminator: 2)
!10693 = !DILocation(line: 1026, column: 47, scope: !10684)
!10694 = !DILocation(line: 1026, column: 52, scope: !10684)
!10695 = !DILocation(line: 1026, column: 59, scope: !10684)
!10696 = !DILocation(line: 1026, column: 64, scope: !10697)
!10697 = !DILexicalBlockFile(scope: !10684, file: !408, discriminator: 3)
!10698 = !DILocation(line: 1026, column: 62, scope: !10684)
!10699 = !DILocation(line: 1026, column: 67, scope: !10684)
!10700 = !DILocation(line: 1026, column: 74, scope: !10684)
!10701 = !DILocation(line: 1026, column: 79, scope: !10702)
!10702 = !DILexicalBlockFile(scope: !10684, file: !408, discriminator: 4)
!10703 = !DILocation(line: 1026, column: 77, scope: !10684)
!10704 = !DILocation(line: 1026, column: 82, scope: !10684)
!10705 = !DILocation(line: 1026, column: 89, scope: !10684)
!10706 = !DILocation(line: 1026, column: 94, scope: !10707)
!10707 = !DILexicalBlockFile(scope: !10684, file: !408, discriminator: 5)
!10708 = !DILocation(line: 1026, column: 92, scope: !10684)
!10709 = !DILocation(line: 1026, column: 97, scope: !10684)
!10710 = !DILocation(line: 1026, column: 22, scope: !10677)
!10711 = !DILocation(line: 1027, column: 17, scope: !10684)
!10712 = !DILocation(line: 1028, column: 9, scope: !10670)
!10713 = !DILocation(line: 1021, column: 75, scope: !10662)
!10714 = !DILocation(line: 1021, column: 9, scope: !10662)
!10715 = !DILocation(line: 1029, column: 9, scope: !1422)
!10716 = !DILocation(line: 1030, column: 5, scope: !1423)
!10717 = !DILocation(line: 1032, column: 5, scope: !1406)
!10718 = !DILocation(line: 1033, column: 1, scope: !1406)
!10719 = !DILocation(line: 2163, column: 35, scope: !1511)
!10720 = !DILocation(line: 2163, column: 51, scope: !1511)
!10721 = !DILocation(line: 2163, column: 60, scope: !1511)
!10722 = !DILocation(line: 2165, column: 5, scope: !1511)
!10723 = !DILocation(line: 2165, column: 24, scope: !1511)
!10724 = !DILocation(line: 2166, column: 5, scope: !1511)
!10725 = !DILocation(line: 2166, column: 15, scope: !1511)
!10726 = !DILocation(line: 2168, column: 34, scope: !1511)
!10727 = !DILocation(line: 2168, column: 12, scope: !1511)
!10728 = !DILocation(line: 2168, column: 8, scope: !1511)
!10729 = !DILocation(line: 2169, column: 10, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !1511, file: !408, line: 2169, column: 9)
!10731 = !DILocation(line: 2169, column: 9, scope: !1511)
!10732 = !DILocation(line: 2170, column: 9, scope: !10730)
!10733 = !DILocation(line: 2172, column: 26, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !1511, file: !408, line: 2172, column: 9)
!10735 = !DILocation(line: 2172, column: 33, scope: !10734)
!10736 = !DILocation(line: 2172, column: 44, scope: !10734)
!10737 = !DILocation(line: 2172, column: 53, scope: !10734)
!10738 = !DILocation(line: 2172, column: 70, scope: !10734)
!10739 = !DILocation(line: 2172, column: 9, scope: !1511)
!10740 = !DILocation(line: 2173, column: 16, scope: !10734)
!10741 = !DILocation(line: 2173, column: 14, scope: !10734)
!10742 = !DILocation(line: 2173, column: 9, scope: !10734)
!10743 = !DILocation(line: 2174, column: 31, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10734, file: !408, line: 2174, column: 14)
!10745 = !DILocation(line: 2174, column: 38, scope: !10744)
!10746 = !DILocation(line: 2174, column: 49, scope: !10744)
!10747 = !DILocation(line: 2174, column: 58, scope: !10744)
!10748 = !DILocation(line: 2174, column: 75, scope: !10744)
!10749 = !DILocation(line: 2174, column: 14, scope: !10734)
!10750 = !DILocation(line: 2175, column: 16, scope: !10744)
!10751 = !DILocation(line: 2175, column: 14, scope: !10744)
!10752 = !DILocation(line: 2175, column: 9, scope: !10744)
!10753 = !DILocation(line: 2177, column: 9, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !1511, file: !408, line: 2177, column: 9)
!10755 = !DILocation(line: 2177, column: 14, scope: !10754)
!10756 = !DILocation(line: 2177, column: 42, scope: !10757)
!10757 = !DILexicalBlockFile(scope: !10754, file: !408, discriminator: 1)
!10758 = !DILocation(line: 2177, column: 47, scope: !10754)
!10759 = !DILocation(line: 2177, column: 17, scope: !10754)
!10760 = !DILocation(line: 2177, column: 56, scope: !10754)
!10761 = !DILocation(line: 2177, column: 9, scope: !1511)
!10762 = !DILocation(line: 2178, column: 13, scope: !10754)
!10763 = !DILocation(line: 2178, column: 9, scope: !10754)
!10764 = !DILocation(line: 2179, column: 5, scope: !1511)
!10765 = !DILocation(line: 2179, column: 10, scope: !10766)
!10766 = !DILexicalBlockFile(scope: !1521, file: !408, discriminator: 1)
!10767 = !DILocation(line: 2179, column: 20, scope: !1521)
!10768 = !DILocation(line: 2179, column: 51, scope: !1521)
!10769 = !DILocation(line: 2179, column: 62, scope: !1524)
!10770 = !DILocation(line: 2179, column: 78, scope: !1524)
!10771 = !DILocation(line: 2179, column: 62, scope: !1521)
!10772 = !DILocation(line: 2179, column: 93, scope: !10773)
!10773 = !DILexicalBlockFile(scope: !1524, file: !408, discriminator: 2)
!10774 = !DILocation(line: 2179, column: 98, scope: !10775)
!10775 = !DILexicalBlockFile(scope: !1523, file: !408, discriminator: 4)
!10776 = !DILocation(line: 2179, column: 108, scope: !1523)
!10777 = !DILocation(line: 2179, column: 138, scope: !1523)
!10778 = !DILocation(line: 2179, column: 164, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !1523, file: !408, line: 2179, column: 161)
!10780 = !DILocation(line: 2179, column: 181, scope: !10779)
!10781 = !DILocation(line: 2179, column: 161, scope: !10779)
!10782 = !DILocation(line: 2179, column: 191, scope: !10779)
!10783 = !DILocation(line: 2179, column: 161, scope: !1523)
!10784 = !DILocation(line: 2179, column: 161, scope: !10785)
!10785 = !DILexicalBlockFile(scope: !1523, file: !408, discriminator: 5)
!10786 = !DILocation(line: 2179, column: 222, scope: !10787)
!10787 = !DILexicalBlockFile(scope: !10779, file: !408, discriminator: 6)
!10788 = !DILocation(line: 2179, column: 240, scope: !10779)
!10789 = !DILocation(line: 2179, column: 250, scope: !10779)
!10790 = !DILocation(line: 2179, column: 275, scope: !10779)
!10791 = !DILocation(line: 2179, column: 206, scope: !10779)
!10792 = !DILocation(line: 2179, column: 294, scope: !10793)
!10793 = !DILexicalBlockFile(scope: !1524, file: !408, discriminator: 7)
!10794 = !DILocation(line: 2179, column: 294, scope: !1523)
!10795 = !DILocation(line: 2179, column: 294, scope: !10796)
!10796 = !DILexicalBlockFile(scope: !1523, file: !408, discriminator: 8)
!10797 = !DILocation(line: 2179, column: 294, scope: !10798)
!10798 = !DILexicalBlockFile(scope: !1523, file: !408, discriminator: 9)
!10799 = !DILocation(line: 2179, column: 307, scope: !10800)
!10800 = !DILexicalBlockFile(scope: !10801, file: !408, discriminator: 10)
!10801 = !DILexicalBlockFile(scope: !1511, file: !408, discriminator: 3)
!10802 = !DILocation(line: 2179, column: 307, scope: !1521)
!10803 = !DILocation(line: 2179, column: 307, scope: !10804)
!10804 = !DILexicalBlockFile(scope: !1521, file: !408, discriminator: 11)
!10805 = !DILocation(line: 2181, column: 21, scope: !1511)
!10806 = !DILocation(line: 2181, column: 28, scope: !1511)
!10807 = !DILocation(line: 2181, column: 37, scope: !1511)
!10808 = !DILocation(line: 2182, column: 22, scope: !1511)
!10809 = !DILocation(line: 2182, column: 5, scope: !1511)
!10810 = !DILocation(line: 2182, column: 9, scope: !1511)
!10811 = !DILocation(line: 2182, column: 20, scope: !1511)
!10812 = !DILocation(line: 2183, column: 5, scope: !1511)
!10813 = !DILocation(line: 2183, column: 9, scope: !1511)
!10814 = !DILocation(line: 2183, column: 19, scope: !1511)
!10815 = !DILocation(line: 2184, column: 19, scope: !1511)
!10816 = !DILocation(line: 2184, column: 5, scope: !1511)
!10817 = !DILocation(line: 2184, column: 9, scope: !1511)
!10818 = !DILocation(line: 2184, column: 17, scope: !1511)
!10819 = !DILocation(line: 2185, column: 21, scope: !1511)
!10820 = !DILocation(line: 2185, column: 8, scope: !1511)
!10821 = !DILocation(line: 2185, column: 29, scope: !1511)
!10822 = !DILocation(line: 2185, column: 38, scope: !1511)
!10823 = !DILocation(line: 2186, column: 24, scope: !1511)
!10824 = !DILocation(line: 2186, column: 5, scope: !1511)
!10825 = !DILocation(line: 2186, column: 9, scope: !1511)
!10826 = !DILocation(line: 2186, column: 22, scope: !1511)
!10827 = !DILocation(line: 2188, column: 23, scope: !1511)
!10828 = !DILocation(line: 2188, column: 5, scope: !1511)
!10829 = !DILocation(line: 2190, column: 24, scope: !1511)
!10830 = !DILocation(line: 2190, column: 5, scope: !1511)
!10831 = !DILocation(line: 2190, column: 9, scope: !1511)
!10832 = !DILocation(line: 2190, column: 22, scope: !1511)
!10833 = !DILocation(line: 2191, column: 9, scope: !1528)
!10834 = !DILocation(line: 2191, column: 13, scope: !1528)
!10835 = !DILocation(line: 2191, column: 26, scope: !1528)
!10836 = !DILocation(line: 2191, column: 9, scope: !1511)
!10837 = !DILocation(line: 2192, column: 9, scope: !1527)
!10838 = !DILocation(line: 2192, column: 14, scope: !10839)
!10839 = !DILexicalBlockFile(scope: !1526, file: !408, discriminator: 1)
!10840 = !DILocation(line: 2192, column: 24, scope: !1526)
!10841 = !DILocation(line: 2192, column: 54, scope: !1526)
!10842 = !DILocation(line: 2192, column: 41, scope: !1526)
!10843 = !DILocation(line: 2192, column: 67, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !1526, file: !408, line: 2192, column: 64)
!10845 = !DILocation(line: 2192, column: 84, scope: !10844)
!10846 = !DILocation(line: 2192, column: 64, scope: !10844)
!10847 = !DILocation(line: 2192, column: 94, scope: !10844)
!10848 = !DILocation(line: 2192, column: 64, scope: !1526)
!10849 = !DILocation(line: 2192, column: 64, scope: !10850)
!10850 = !DILexicalBlockFile(scope: !1526, file: !408, discriminator: 2)
!10851 = !DILocation(line: 2192, column: 125, scope: !10852)
!10852 = !DILexicalBlockFile(scope: !10844, file: !408, discriminator: 3)
!10853 = !DILocation(line: 2192, column: 143, scope: !10844)
!10854 = !DILocation(line: 2192, column: 153, scope: !10844)
!10855 = !DILocation(line: 2192, column: 178, scope: !10844)
!10856 = !DILocation(line: 2192, column: 109, scope: !10844)
!10857 = !DILocation(line: 2192, column: 197, scope: !10858)
!10858 = !DILexicalBlockFile(scope: !1527, file: !408, discriminator: 4)
!10859 = !DILocation(line: 2192, column: 197, scope: !1526)
!10860 = !DILocation(line: 2192, column: 197, scope: !10861)
!10861 = !DILexicalBlockFile(scope: !1526, file: !408, discriminator: 5)
!10862 = !DILocation(line: 2193, column: 9, scope: !1527)
!10863 = !DILocation(line: 2194, column: 9, scope: !1527)
!10864 = !DILocation(line: 2196, column: 5, scope: !1511)
!10865 = !DILocation(line: 2196, column: 9, scope: !1511)
!10866 = !DILocation(line: 2196, column: 23, scope: !1511)
!10867 = !DILocation(line: 2196, column: 30, scope: !1511)
!10868 = !DILocation(line: 2197, column: 5, scope: !1511)
!10869 = !DILocation(line: 2197, column: 9, scope: !1511)
!10870 = !DILocation(line: 2197, column: 23, scope: !1511)
!10871 = !DILocation(line: 2197, column: 35, scope: !1511)
!10872 = !DILocation(line: 2198, column: 5, scope: !1511)
!10873 = !DILocation(line: 2198, column: 9, scope: !1511)
!10874 = !DILocation(line: 2198, column: 23, scope: !1511)
!10875 = !DILocation(line: 2198, column: 28, scope: !1511)
!10876 = !DILocation(line: 2200, column: 24, scope: !1511)
!10877 = !DILocation(line: 2200, column: 12, scope: !1511)
!10878 = !DILocation(line: 2200, column: 5, scope: !1511)
!10879 = !DILocation(line: 2201, column: 1, scope: !1511)
!10880 = !DILocation(line: 130, column: 20, scope: !1621)
!10881 = !DILocation(line: 130, column: 38, scope: !1621)
!10882 = !DILocation(line: 133, column: 5, scope: !1621)
!10883 = !DILocation(line: 133, column: 15, scope: !1621)
!10884 = !DILocation(line: 134, column: 5, scope: !1621)
!10885 = !DILocation(line: 134, column: 15, scope: !1621)
!10886 = !DILocation(line: 135, column: 5, scope: !1621)
!10887 = !DILocation(line: 135, column: 23, scope: !1621)
!10888 = !DILocation(line: 135, column: 68, scope: !1621)
!10889 = !DILocation(line: 135, column: 50, scope: !1621)
!10890 = !DILocation(line: 135, column: 29, scope: !1621)
!10891 = !DILocation(line: 137, column: 10, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !1621, file: !408, line: 137, column: 9)
!10893 = !DILocation(line: 137, column: 14, scope: !10892)
!10894 = !DILocation(line: 137, column: 9, scope: !1621)
!10895 = !DILocation(line: 139, column: 13, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10892, file: !408, line: 137, column: 28)
!10897 = !DILocation(line: 138, column: 9, scope: !10896)
!10898 = !DILocation(line: 142, column: 9, scope: !10896)
!10899 = !DILocation(line: 145, column: 28, scope: !1621)
!10900 = !DILocation(line: 145, column: 36, scope: !1621)
!10901 = !DILocation(line: 145, column: 12, scope: !1621)
!10902 = !DILocation(line: 145, column: 10, scope: !1621)
!10903 = !DILocation(line: 146, column: 10, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !1621, file: !408, line: 146, column: 9)
!10905 = !DILocation(line: 146, column: 9, scope: !1621)
!10906 = !DILocation(line: 147, column: 9, scope: !10904)
!10907 = !DILocation(line: 148, column: 34, scope: !1621)
!10908 = !DILocation(line: 148, column: 38, scope: !1621)
!10909 = !DILocation(line: 148, column: 52, scope: !1621)
!10910 = !DILocation(line: 148, column: 14, scope: !1621)
!10911 = !DILocation(line: 148, column: 12, scope: !1621)
!10912 = !DILocation(line: 149, column: 5, scope: !1621)
!10913 = !DILocation(line: 149, column: 10, scope: !10914)
!10914 = !DILexicalBlockFile(scope: !1629, file: !408, discriminator: 1)
!10915 = !DILocation(line: 149, column: 20, scope: !1629)
!10916 = !DILocation(line: 149, column: 50, scope: !1629)
!10917 = !DILocation(line: 149, column: 65, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !1629, file: !408, line: 149, column: 62)
!10919 = !DILocation(line: 149, column: 82, scope: !10918)
!10920 = !DILocation(line: 149, column: 62, scope: !10918)
!10921 = !DILocation(line: 149, column: 92, scope: !10918)
!10922 = !DILocation(line: 149, column: 62, scope: !1629)
!10923 = !DILocation(line: 149, column: 62, scope: !10924)
!10924 = !DILexicalBlockFile(scope: !1629, file: !408, discriminator: 2)
!10925 = !DILocation(line: 149, column: 123, scope: !10926)
!10926 = !DILexicalBlockFile(scope: !10918, file: !408, discriminator: 3)
!10927 = !DILocation(line: 149, column: 141, scope: !10918)
!10928 = !DILocation(line: 149, column: 151, scope: !10918)
!10929 = !DILocation(line: 149, column: 176, scope: !10918)
!10930 = !DILocation(line: 149, column: 107, scope: !10918)
!10931 = !DILocation(line: 149, column: 195, scope: !10932)
!10932 = !DILexicalBlockFile(scope: !1621, file: !408, discriminator: 4)
!10933 = !DILocation(line: 149, column: 195, scope: !1629)
!10934 = !DILocation(line: 149, column: 195, scope: !10935)
!10935 = !DILexicalBlockFile(scope: !1629, file: !408, discriminator: 5)
!10936 = !DILocation(line: 150, column: 12, scope: !1621)
!10937 = !DILocation(line: 150, column: 5, scope: !1621)
!10938 = !DILocation(line: 151, column: 1, scope: !1621)
!10939 = !DILocation(line: 956, column: 45, scope: !1662)
!10940 = !DILocation(line: 956, column: 61, scope: !1662)
!10941 = !DILocation(line: 960, column: 5, scope: !1662)
!10942 = !DILocation(line: 960, column: 15, scope: !1662)
!10943 = !DILocation(line: 961, column: 5, scope: !1662)
!10944 = !DILocation(line: 961, column: 15, scope: !1662)
!10945 = !DILocation(line: 961, column: 21, scope: !1662)
!10946 = !DILocation(line: 961, column: 30, scope: !1662)
!10947 = !DILocation(line: 961, column: 37, scope: !1662)
!10948 = !DILocation(line: 961, column: 44, scope: !1662)
!10949 = !DILocation(line: 962, column: 5, scope: !1662)
!10950 = !DILocation(line: 962, column: 15, scope: !1662)
!10951 = !DILocation(line: 964, column: 43, scope: !1662)
!10952 = !DILocation(line: 964, column: 32, scope: !1662)
!10953 = !DILocation(line: 964, column: 25, scope: !1662)
!10954 = !DILocation(line: 964, column: 18, scope: !1662)
!10955 = !DILocation(line: 964, column: 9, scope: !1662)
!10956 = !DILocation(line: 965, column: 12, scope: !1662)
!10957 = !DILocation(line: 965, column: 10, scope: !1662)
!10958 = !DILocation(line: 966, column: 10, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !1662, file: !408, line: 966, column: 9)
!10960 = !DILocation(line: 966, column: 9, scope: !1662)
!10961 = !DILocation(line: 967, column: 9, scope: !10959)
!10962 = !DILocation(line: 969, column: 37, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !1662, file: !408, line: 969, column: 9)
!10964 = !DILocation(line: 969, column: 43, scope: !10963)
!10965 = !DILocation(line: 969, column: 9, scope: !10963)
!10966 = !DILocation(line: 969, column: 9, scope: !1662)
!10967 = !DILocation(line: 971, column: 51, scope: !10963)
!10968 = !DILocation(line: 971, column: 57, scope: !10963)
!10969 = !DILocation(line: 971, column: 62, scope: !10963)
!10970 = !DILocation(line: 971, column: 70, scope: !10963)
!10971 = !DILocation(line: 972, column: 51, scope: !10963)
!10972 = !DILocation(line: 972, column: 57, scope: !10963)
!10973 = !DILocation(line: 971, column: 18, scope: !10963)
!10974 = !DILocation(line: 971, column: 16, scope: !10963)
!10975 = !DILocation(line: 971, column: 9, scope: !10963)
!10976 = !DILocation(line: 974, column: 16, scope: !10963)
!10977 = !DILocation(line: 976, column: 5, scope: !1662)
!10978 = !DILocation(line: 976, column: 10, scope: !10979)
!10979 = !DILexicalBlockFile(scope: !1674, file: !408, discriminator: 1)
!10980 = !DILocation(line: 976, column: 20, scope: !1674)
!10981 = !DILocation(line: 976, column: 50, scope: !1674)
!10982 = !DILocation(line: 976, column: 65, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !1674, file: !408, line: 976, column: 62)
!10984 = !DILocation(line: 976, column: 82, scope: !10983)
!10985 = !DILocation(line: 976, column: 62, scope: !10983)
!10986 = !DILocation(line: 976, column: 92, scope: !10983)
!10987 = !DILocation(line: 976, column: 62, scope: !1674)
!10988 = !DILocation(line: 976, column: 62, scope: !10989)
!10989 = !DILexicalBlockFile(scope: !1674, file: !408, discriminator: 2)
!10990 = !DILocation(line: 976, column: 123, scope: !10991)
!10991 = !DILexicalBlockFile(scope: !10983, file: !408, discriminator: 3)
!10992 = !DILocation(line: 976, column: 141, scope: !10983)
!10993 = !DILocation(line: 976, column: 151, scope: !10983)
!10994 = !DILocation(line: 976, column: 176, scope: !10983)
!10995 = !DILocation(line: 976, column: 107, scope: !10983)
!10996 = !DILocation(line: 976, column: 195, scope: !10997)
!10997 = !DILexicalBlockFile(scope: !1662, file: !408, discriminator: 4)
!10998 = !DILocation(line: 976, column: 195, scope: !1674)
!10999 = !DILocation(line: 976, column: 195, scope: !11000)
!11000 = !DILexicalBlockFile(scope: !1674, file: !408, discriminator: 5)
!11001 = !DILocation(line: 977, column: 12, scope: !1662)
!11002 = !DILocation(line: 977, column: 5, scope: !1662)
!11003 = !DILocation(line: 978, column: 1, scope: !1662)
!11004 = !DILocation(line: 885, column: 49, scope: !1675)
!11005 = !DILocation(line: 886, column: 44, scope: !1675)
!11006 = !DILocation(line: 887, column: 44, scope: !1675)
!11007 = !DILocation(line: 888, column: 44, scope: !1675)
!11008 = !DILocation(line: 889, column: 44, scope: !1675)
!11009 = !DILocation(line: 890, column: 44, scope: !1675)
!11010 = !DILocation(line: 892, column: 5, scope: !1675)
!11011 = !DILocation(line: 892, column: 16, scope: !1675)
!11012 = !DILocation(line: 892, column: 19, scope: !1675)
!11013 = !DILocation(line: 894, column: 10, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !1675, file: !408, line: 894, column: 9)
!11015 = !DILocation(line: 894, column: 9, scope: !1675)
!11016 = !DILocation(line: 895, column: 25, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11014, file: !408, line: 894, column: 15)
!11018 = !DILocation(line: 895, column: 9, scope: !11017)
!11019 = !DILocation(line: 896, column: 9, scope: !11017)
!11020 = !DILocation(line: 899, column: 5, scope: !1675)
!11021 = !DILocation(line: 899, column: 10, scope: !11022)
!11022 = !DILexicalBlockFile(scope: !1688, file: !408, discriminator: 1)
!11023 = !DILocation(line: 899, column: 20, scope: !1688)
!11024 = !DILocation(line: 899, column: 43, scope: !1688)
!11025 = !DILocation(line: 899, column: 49, scope: !1688)
!11026 = !DILocation(line: 899, column: 59, scope: !1692)
!11027 = !DILocation(line: 899, column: 67, scope: !1692)
!11028 = !DILocation(line: 899, column: 59, scope: !1688)
!11029 = !DILocation(line: 899, column: 85, scope: !11030)
!11030 = !DILexicalBlockFile(scope: !1691, file: !408, discriminator: 2)
!11031 = !DILocation(line: 899, column: 91, scope: !1691)
!11032 = !DILocation(line: 899, column: 96, scope: !1691)
!11033 = !DILocation(line: 899, column: 110, scope: !1691)
!11034 = !DILocation(line: 899, column: 115, scope: !11035)
!11035 = !DILexicalBlockFile(scope: !1690, file: !408, discriminator: 4)
!11036 = !DILocation(line: 899, column: 125, scope: !1690)
!11037 = !DILocation(line: 899, column: 155, scope: !1690)
!11038 = !DILocation(line: 899, column: 173, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !1690, file: !408, line: 899, column: 170)
!11040 = !DILocation(line: 899, column: 190, scope: !11039)
!11041 = !DILocation(line: 899, column: 170, scope: !11039)
!11042 = !DILocation(line: 899, column: 200, scope: !11039)
!11043 = !DILocation(line: 899, column: 170, scope: !1690)
!11044 = !DILocation(line: 899, column: 170, scope: !11045)
!11045 = !DILexicalBlockFile(scope: !1690, file: !408, discriminator: 5)
!11046 = !DILocation(line: 899, column: 231, scope: !11047)
!11047 = !DILexicalBlockFile(scope: !11039, file: !408, discriminator: 6)
!11048 = !DILocation(line: 899, column: 249, scope: !11039)
!11049 = !DILocation(line: 899, column: 259, scope: !11039)
!11050 = !DILocation(line: 899, column: 284, scope: !11039)
!11051 = !DILocation(line: 899, column: 215, scope: !11039)
!11052 = !DILocation(line: 899, column: 303, scope: !11053)
!11053 = !DILexicalBlockFile(scope: !1691, file: !408, discriminator: 7)
!11054 = !DILocation(line: 899, column: 303, scope: !1690)
!11055 = !DILocation(line: 899, column: 303, scope: !11056)
!11056 = !DILexicalBlockFile(scope: !1690, file: !408, discriminator: 8)
!11057 = !DILocation(line: 899, column: 316, scope: !11058)
!11058 = !DILexicalBlockFile(scope: !1691, file: !408, discriminator: 9)
!11059 = !DILocation(line: 899, column: 318, scope: !11060)
!11060 = !DILexicalBlockFile(scope: !11061, file: !408, discriminator: 10)
!11061 = !DILexicalBlockFile(scope: !1675, file: !408, discriminator: 3)
!11062 = !DILocation(line: 899, column: 318, scope: !1688)
!11063 = !DILocation(line: 899, column: 318, scope: !11064)
!11064 = !DILexicalBlockFile(scope: !1688, file: !408, discriminator: 11)
!11065 = !DILocation(line: 900, column: 17, scope: !1675)
!11066 = !DILocation(line: 900, column: 5, scope: !1675)
!11067 = !DILocation(line: 900, column: 11, scope: !1675)
!11068 = !DILocation(line: 900, column: 15, scope: !1675)
!11069 = !DILocation(line: 901, column: 21, scope: !1675)
!11070 = !DILocation(line: 901, column: 27, scope: !1675)
!11071 = !DILocation(line: 901, column: 34, scope: !1675)
!11072 = !DILocation(line: 901, column: 43, scope: !1675)
!11073 = !DILocation(line: 903, column: 24, scope: !1675)
!11074 = !DILocation(line: 903, column: 30, scope: !1675)
!11075 = !DILocation(line: 903, column: 5, scope: !1675)
!11076 = !DILocation(line: 904, column: 18, scope: !1675)
!11077 = !DILocation(line: 904, column: 81, scope: !11078)
!11078 = !DILexicalBlockFile(scope: !1675, file: !408, discriminator: 1)
!11079 = !DILocation(line: 904, column: 65, scope: !1675)
!11080 = !DILocation(line: 904, column: 87, scope: !1675)
!11081 = !DILocation(line: 904, column: 52, scope: !1675)
!11082 = !DILocation(line: 904, column: 35, scope: !1675)
!11083 = !DILocation(line: 904, column: 127, scope: !1675)
!11084 = !DILocation(line: 904, column: 135, scope: !1675)
!11085 = !DILocation(line: 904, column: 144, scope: !1675)
!11086 = !DILocation(line: 904, column: 111, scope: !1675)
!11087 = !DILocation(line: 904, column: 109, scope: !1675)
!11088 = !DILocation(line: 904, column: 26, scope: !1675)
!11089 = !DILocation(line: 904, column: 18, scope: !11090)
!11090 = !DILexicalBlockFile(scope: !1675, file: !408, discriminator: 2)
!11091 = !DILocation(line: 904, column: 18, scope: !11092)
!11092 = !DILexicalBlockFile(scope: !11061, file: !408, discriminator: 4)
!11093 = !DILocation(line: 904, column: 5, scope: !1675)
!11094 = !DILocation(line: 904, column: 11, scope: !1675)
!11095 = !DILocation(line: 904, column: 16, scope: !1675)
!11096 = !DILocation(line: 905, column: 51, scope: !1675)
!11097 = !DILocation(line: 905, column: 57, scope: !1675)
!11098 = !DILocation(line: 905, column: 35, scope: !1675)
!11099 = !DILocation(line: 905, column: 63, scope: !1675)
!11100 = !DILocation(line: 905, column: 22, scope: !1675)
!11101 = !DILocation(line: 905, column: 87, scope: !1675)
!11102 = !DILocation(line: 905, column: 96, scope: !1675)
!11103 = !DILocation(line: 907, column: 24, scope: !1675)
!11104 = !DILocation(line: 907, column: 30, scope: !1675)
!11105 = !DILocation(line: 907, column: 5, scope: !1675)
!11106 = !DILocation(line: 908, column: 18, scope: !1675)
!11107 = !DILocation(line: 908, column: 81, scope: !11078)
!11108 = !DILocation(line: 908, column: 65, scope: !1675)
!11109 = !DILocation(line: 908, column: 87, scope: !1675)
!11110 = !DILocation(line: 908, column: 52, scope: !1675)
!11111 = !DILocation(line: 908, column: 35, scope: !1675)
!11112 = !DILocation(line: 908, column: 127, scope: !1675)
!11113 = !DILocation(line: 908, column: 135, scope: !1675)
!11114 = !DILocation(line: 908, column: 144, scope: !1675)
!11115 = !DILocation(line: 908, column: 111, scope: !1675)
!11116 = !DILocation(line: 908, column: 109, scope: !1675)
!11117 = !DILocation(line: 908, column: 26, scope: !1675)
!11118 = !DILocation(line: 908, column: 18, scope: !11090)
!11119 = !DILocation(line: 908, column: 18, scope: !11092)
!11120 = !DILocation(line: 908, column: 5, scope: !1675)
!11121 = !DILocation(line: 908, column: 11, scope: !1675)
!11122 = !DILocation(line: 908, column: 16, scope: !1675)
!11123 = !DILocation(line: 909, column: 51, scope: !1675)
!11124 = !DILocation(line: 909, column: 57, scope: !1675)
!11125 = !DILocation(line: 909, column: 35, scope: !1675)
!11126 = !DILocation(line: 909, column: 63, scope: !1675)
!11127 = !DILocation(line: 909, column: 22, scope: !1675)
!11128 = !DILocation(line: 909, column: 87, scope: !1675)
!11129 = !DILocation(line: 909, column: 96, scope: !1675)
!11130 = !DILocation(line: 912, column: 10, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !1675, file: !408, line: 912, column: 9)
!11132 = !DILocation(line: 912, column: 19, scope: !11131)
!11133 = !DILocation(line: 912, column: 23, scope: !11134)
!11134 = !DILexicalBlockFile(scope: !11131, file: !408, discriminator: 1)
!11135 = !DILocation(line: 912, column: 9, scope: !1675)
!11136 = !DILocation(line: 913, column: 62, scope: !11131)
!11137 = !DILocation(line: 913, column: 9, scope: !11131)
!11138 = !DILocation(line: 916, column: 9, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !1675, file: !408, line: 916, column: 9)
!11140 = !DILocation(line: 916, column: 9, scope: !1675)
!11141 = !DILocation(line: 917, column: 31, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !408, line: 917, column: 13)
!11143 = distinct !DILexicalBlock(scope: !11139, file: !408, line: 916, column: 19)
!11144 = !DILocation(line: 917, column: 43, scope: !11142)
!11145 = !DILocation(line: 917, column: 54, scope: !11142)
!11146 = !DILocation(line: 917, column: 63, scope: !11142)
!11147 = !DILocation(line: 917, column: 80, scope: !11142)
!11148 = !DILocation(line: 917, column: 13, scope: !11143)
!11149 = !DILocation(line: 918, column: 29, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11142, file: !408, line: 917, column: 87)
!11151 = !DILocation(line: 918, column: 13, scope: !11150)
!11152 = !DILocation(line: 919, column: 13, scope: !11150)
!11153 = !DILocation(line: 921, column: 33, scope: !11143)
!11154 = !DILocation(line: 921, column: 21, scope: !11143)
!11155 = !DILocation(line: 921, column: 19, scope: !11143)
!11156 = !DILocation(line: 922, column: 5, scope: !11143)
!11157 = !DILocation(line: 924, column: 19, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11139, file: !408, line: 923, column: 10)
!11159 = !DILocation(line: 928, column: 24, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !1675, file: !408, line: 928, column: 9)
!11161 = !DILocation(line: 928, column: 30, scope: !11160)
!11162 = !DILocation(line: 928, column: 9, scope: !11160)
!11163 = !DILocation(line: 928, column: 9, scope: !1675)
!11164 = !DILocation(line: 929, column: 9, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11160, file: !408, line: 928, column: 42)
!11166 = !DILocation(line: 934, column: 12, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !1675, file: !408, line: 934, column: 5)
!11168 = !DILocation(line: 934, column: 10, scope: !11167)
!11169 = !DILocation(line: 934, column: 17, scope: !11170)
!11170 = !DILexicalBlockFile(scope: !11171, file: !408, discriminator: 2)
!11171 = !DILexicalBlockFile(scope: !11172, file: !408, discriminator: 1)
!11172 = distinct !DILexicalBlock(scope: !11167, file: !408, line: 934, column: 5)
!11173 = !DILocation(line: 934, column: 21, scope: !11172)
!11174 = !DILocation(line: 934, column: 19, scope: !11172)
!11175 = !DILocation(line: 934, column: 5, scope: !11167)
!11176 = !DILocation(line: 935, column: 75, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11172, file: !408, line: 934, column: 37)
!11178 = !DILocation(line: 935, column: 55, scope: !11177)
!11179 = !DILocation(line: 935, column: 38, scope: !11177)
!11180 = !DILocation(line: 935, column: 67, scope: !11177)
!11181 = !DILocation(line: 935, column: 37, scope: !11177)
!11182 = !DILocation(line: 935, column: 31, scope: !11177)
!11183 = !DILocation(line: 935, column: 9, scope: !11177)
!11184 = !DILocation(line: 935, column: 15, scope: !11177)
!11185 = !DILocation(line: 935, column: 22, scope: !11177)
!11186 = !DILocation(line: 935, column: 34, scope: !11177)
!11187 = !DILocation(line: 936, column: 47, scope: !11177)
!11188 = !DILocation(line: 936, column: 25, scope: !11177)
!11189 = !DILocation(line: 936, column: 31, scope: !11177)
!11190 = !DILocation(line: 936, column: 38, scope: !11177)
!11191 = !DILocation(line: 936, column: 53, scope: !11177)
!11192 = !DILocation(line: 936, column: 62, scope: !11177)
!11193 = !DILocation(line: 937, column: 5, scope: !11177)
!11194 = !DILocation(line: 934, column: 33, scope: !11172)
!11195 = !DILocation(line: 934, column: 5, scope: !11172)
!11196 = !DILocation(line: 939, column: 27, scope: !1675)
!11197 = !DILocation(line: 939, column: 5, scope: !1675)
!11198 = !DILocation(line: 939, column: 11, scope: !1675)
!11199 = !DILocation(line: 939, column: 18, scope: !1675)
!11200 = !DILocation(line: 939, column: 25, scope: !1675)
!11201 = !DILocation(line: 940, column: 30, scope: !1675)
!11202 = !DILocation(line: 940, column: 5, scope: !1675)
!11203 = !DILocation(line: 940, column: 11, scope: !1675)
!11204 = !DILocation(line: 940, column: 18, scope: !1675)
!11205 = !DILocation(line: 940, column: 28, scope: !1675)
!11206 = !DILocation(line: 943, column: 9, scope: !1696)
!11207 = !DILocation(line: 943, column: 9, scope: !1675)
!11208 = !DILocation(line: 944, column: 9, scope: !1695)
!11209 = !DILocation(line: 944, column: 14, scope: !11210)
!11210 = !DILexicalBlockFile(scope: !1694, file: !408, discriminator: 1)
!11211 = !DILocation(line: 944, column: 24, scope: !1694)
!11212 = !DILocation(line: 944, column: 47, scope: !1694)
!11213 = !DILocation(line: 944, column: 53, scope: !1694)
!11214 = !DILocation(line: 944, column: 60, scope: !1694)
!11215 = !DILocation(line: 944, column: 73, scope: !1700)
!11216 = !DILocation(line: 944, column: 81, scope: !1700)
!11217 = !DILocation(line: 944, column: 73, scope: !1694)
!11218 = !DILocation(line: 944, column: 99, scope: !11219)
!11219 = !DILexicalBlockFile(scope: !1699, file: !408, discriminator: 2)
!11220 = !DILocation(line: 944, column: 105, scope: !1699)
!11221 = !DILocation(line: 944, column: 112, scope: !1699)
!11222 = !DILocation(line: 944, column: 120, scope: !1699)
!11223 = !DILocation(line: 944, column: 134, scope: !1699)
!11224 = !DILocation(line: 944, column: 139, scope: !11225)
!11225 = !DILexicalBlockFile(scope: !1698, file: !408, discriminator: 4)
!11226 = !DILocation(line: 944, column: 149, scope: !1698)
!11227 = !DILocation(line: 944, column: 179, scope: !1698)
!11228 = !DILocation(line: 944, column: 197, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !1698, file: !408, line: 944, column: 194)
!11230 = !DILocation(line: 944, column: 214, scope: !11229)
!11231 = !DILocation(line: 944, column: 194, scope: !11229)
!11232 = !DILocation(line: 944, column: 224, scope: !11229)
!11233 = !DILocation(line: 944, column: 194, scope: !1698)
!11234 = !DILocation(line: 944, column: 194, scope: !11235)
!11235 = !DILexicalBlockFile(scope: !1698, file: !408, discriminator: 5)
!11236 = !DILocation(line: 944, column: 255, scope: !11237)
!11237 = !DILexicalBlockFile(scope: !11229, file: !408, discriminator: 6)
!11238 = !DILocation(line: 944, column: 273, scope: !11229)
!11239 = !DILocation(line: 944, column: 283, scope: !11229)
!11240 = !DILocation(line: 944, column: 308, scope: !11229)
!11241 = !DILocation(line: 944, column: 239, scope: !11229)
!11242 = !DILocation(line: 944, column: 327, scope: !11243)
!11243 = !DILexicalBlockFile(scope: !1699, file: !408, discriminator: 7)
!11244 = !DILocation(line: 944, column: 327, scope: !1698)
!11245 = !DILocation(line: 944, column: 327, scope: !11246)
!11246 = !DILexicalBlockFile(scope: !1698, file: !408, discriminator: 8)
!11247 = !DILocation(line: 944, column: 340, scope: !11248)
!11248 = !DILexicalBlockFile(scope: !1699, file: !408, discriminator: 9)
!11249 = !DILocation(line: 944, column: 342, scope: !11250)
!11250 = !DILexicalBlockFile(scope: !11251, file: !408, discriminator: 10)
!11251 = !DILexicalBlockFile(scope: !1695, file: !408, discriminator: 3)
!11252 = !DILocation(line: 944, column: 342, scope: !1694)
!11253 = !DILocation(line: 944, column: 342, scope: !11254)
!11254 = !DILexicalBlockFile(scope: !1694, file: !408, discriminator: 11)
!11255 = !DILocation(line: 945, column: 31, scope: !1695)
!11256 = !DILocation(line: 945, column: 9, scope: !1695)
!11257 = !DILocation(line: 945, column: 15, scope: !1695)
!11258 = !DILocation(line: 945, column: 22, scope: !1695)
!11259 = !DILocation(line: 945, column: 29, scope: !1695)
!11260 = !DILocation(line: 946, column: 25, scope: !1695)
!11261 = !DILocation(line: 946, column: 35, scope: !1695)
!11262 = !DILocation(line: 946, column: 44, scope: !1695)
!11263 = !DILocation(line: 947, column: 5, scope: !1695)
!11264 = !DILocation(line: 949, column: 58, scope: !1675)
!11265 = !DILocation(line: 949, column: 5, scope: !1675)
!11266 = !DILocation(line: 950, column: 1, scope: !1675)
!11267 = !DILocation(line: 3341, column: 36, scope: !1741)
!11268 = !DILocation(line: 3343, column: 25, scope: !1741)
!11269 = !DILocation(line: 3343, column: 5, scope: !1741)
!11270 = !DILocation(line: 3344, column: 24, scope: !1741)
!11271 = !DILocation(line: 3344, column: 5, scope: !1741)
!11272 = !DILocation(line: 3345, column: 19, scope: !1741)
!11273 = !DILocation(line: 3345, column: 7, scope: !1741)
!11274 = !DILocation(line: 3345, column: 27, scope: !1741)
!11275 = !DILocation(line: 3345, column: 37, scope: !1741)
!11276 = !DILocation(line: 3345, column: 57, scope: !1741)
!11277 = !DILocation(line: 3345, column: 45, scope: !1741)
!11278 = !DILocation(line: 3345, column: 5, scope: !1741)
!11279 = !DILocation(line: 3346, column: 1, scope: !1741)
!11280 = !DILocation(line: 3618, column: 37, scope: !1746)
!11281 = !DILocation(line: 3618, column: 53, scope: !1746)
!11282 = !DILocation(line: 3620, column: 26, scope: !1754)
!11283 = !DILocation(line: 3620, column: 37, scope: !1754)
!11284 = !DILocation(line: 3620, column: 48, scope: !1754)
!11285 = !DILocation(line: 3620, column: 57, scope: !1754)
!11286 = !DILocation(line: 3620, column: 74, scope: !1754)
!11287 = !DILocation(line: 3620, column: 9, scope: !1746)
!11288 = !DILocation(line: 3621, column: 9, scope: !1753)
!11289 = !DILocation(line: 3621, column: 19, scope: !1753)
!11290 = !DILocation(line: 3622, column: 46, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !1753, file: !408, line: 3622, column: 13)
!11292 = !DILocation(line: 3622, column: 13, scope: !11291)
!11293 = !DILocation(line: 3622, column: 65, scope: !11291)
!11294 = !DILocation(line: 3622, column: 13, scope: !1753)
!11295 = !DILocation(line: 3623, column: 19, scope: !11291)
!11296 = !DILocation(line: 3623, column: 25, scope: !11291)
!11297 = !{!11298, !2621, i64 32}
!11298 = !{!"", !2632, i64 0, !2621, i64 16, !2621, i64 24, !2621, i64 32, !2621, i64 40, !2621, i64 48, !2621, i64 56, !2621, i64 64, !2621, i64 72, !2621, i64 80, !2621, i64 88, !2621, i64 96}
!11299 = !DILocation(line: 3623, column: 17, scope: !11291)
!11300 = !DILocation(line: 3623, column: 13, scope: !11291)
!11301 = !DILocation(line: 3624, column: 51, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11291, file: !408, line: 3624, column: 18)
!11303 = !DILocation(line: 3624, column: 18, scope: !11302)
!11304 = !DILocation(line: 3624, column: 70, scope: !11302)
!11305 = !DILocation(line: 3624, column: 18, scope: !11291)
!11306 = !DILocation(line: 3625, column: 19, scope: !11302)
!11307 = !DILocation(line: 3625, column: 25, scope: !11302)
!11308 = !{!11298, !2621, i64 24}
!11309 = !DILocation(line: 3625, column: 17, scope: !11302)
!11310 = !DILocation(line: 3625, column: 13, scope: !11302)
!11311 = !DILocation(line: 3626, column: 51, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11302, file: !408, line: 3626, column: 18)
!11313 = !DILocation(line: 3626, column: 18, scope: !11312)
!11314 = !DILocation(line: 3626, column: 71, scope: !11312)
!11315 = !DILocation(line: 3626, column: 18, scope: !11302)
!11316 = !DILocation(line: 3627, column: 20, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11312, file: !408, line: 3626, column: 77)
!11318 = !DILocation(line: 3627, column: 13, scope: !11317)
!11319 = !DILocation(line: 3632, column: 13, scope: !11312)
!11320 = !DILocation(line: 3634, column: 25, scope: !1753)
!11321 = !DILocation(line: 3634, column: 32, scope: !1753)
!11322 = !DILocation(line: 3634, column: 41, scope: !1753)
!11323 = !DILocation(line: 3635, column: 16, scope: !1753)
!11324 = !DILocation(line: 3635, column: 9, scope: !1753)
!11325 = !DILocation(line: 3636, column: 5, scope: !1754)
!11326 = !DILocation(line: 3620, column: 78, scope: !11327)
!11327 = !DILexicalBlockFile(scope: !1754, file: !408, discriminator: 1)
!11328 = !DILocation(line: 3638, column: 48, scope: !1746)
!11329 = !DILocation(line: 3638, column: 36, scope: !1746)
!11330 = !DILocation(line: 3638, column: 54, scope: !1746)
!11331 = !DILocation(line: 3638, column: 12, scope: !1746)
!11332 = !DILocation(line: 3638, column: 5, scope: !1746)
!11333 = !DILocation(line: 3639, column: 1, scope: !1746)
!11334 = !DILocation(line: 3304, column: 40, scope: !1755)
!11335 = !DILocation(line: 3304, column: 56, scope: !1755)
!11336 = !DILocation(line: 3304, column: 69, scope: !1755)
!11337 = !DILocation(line: 3306, column: 5, scope: !1755)
!11338 = !DILocation(line: 3306, column: 14, scope: !11339)
!11339 = !DILexicalBlockFile(scope: !1764, file: !408, discriminator: 1)
!11340 = !DILocation(line: 3306, column: 20, scope: !1764)
!11341 = !{!11298, !2621, i64 96}
!11342 = !DILocation(line: 3306, column: 14, scope: !1764)
!11343 = !DILocation(line: 3306, column: 14, scope: !1765)
!11344 = !DILocation(line: 3306, column: 36, scope: !11345)
!11345 = !DILexicalBlockFile(scope: !1763, file: !408, discriminator: 2)
!11346 = !DILocation(line: 3306, column: 40, scope: !1763)
!11347 = !DILocation(line: 3306, column: 47, scope: !1763)
!11348 = !DILocation(line: 3306, column: 66, scope: !1763)
!11349 = !DILocation(line: 3306, column: 72, scope: !1763)
!11350 = !DILocation(line: 3306, column: 87, scope: !1763)
!11351 = !DILocation(line: 3306, column: 97, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !1763, file: !408, line: 3306, column: 97)
!11353 = !DILocation(line: 3306, column: 97, scope: !1763)
!11354 = !DILocation(line: 3306, column: 110, scope: !11355)
!11355 = !DILexicalBlockFile(scope: !11352, file: !408, discriminator: 4)
!11356 = !DILocation(line: 3306, column: 103, scope: !11352)
!11357 = !DILocation(line: 3306, column: 116, scope: !11358)
!11358 = !DILexicalBlockFile(scope: !1764, file: !408, discriminator: 5)
!11359 = !DILocation(line: 3306, column: 116, scope: !11360)
!11360 = !DILexicalBlockFile(scope: !11361, file: !408, discriminator: 7)
!11361 = !DILexicalBlockFile(scope: !1764, file: !408, discriminator: 6)
!11362 = !DILocation(line: 3306, column: 116, scope: !1763)
!11363 = !DILocation(line: 3306, column: 118, scope: !11364)
!11364 = !DILexicalBlockFile(scope: !11365, file: !408, discriminator: 8)
!11365 = !DILexicalBlockFile(scope: !1765, file: !408, discriminator: 3)
!11366 = !DILocation(line: 3307, column: 5, scope: !1755)
!11367 = !DILocation(line: 3307, column: 14, scope: !11368)
!11368 = !DILexicalBlockFile(scope: !1768, file: !408, discriminator: 1)
!11369 = !DILocation(line: 3307, column: 20, scope: !1768)
!11370 = !{!11298, !2621, i64 80}
!11371 = !DILocation(line: 3307, column: 14, scope: !1768)
!11372 = !DILocation(line: 3307, column: 14, scope: !1769)
!11373 = !DILocation(line: 3307, column: 33, scope: !11374)
!11374 = !DILexicalBlockFile(scope: !1767, file: !408, discriminator: 2)
!11375 = !DILocation(line: 3307, column: 37, scope: !1767)
!11376 = !DILocation(line: 3307, column: 44, scope: !1767)
!11377 = !DILocation(line: 3307, column: 63, scope: !1767)
!11378 = !DILocation(line: 3307, column: 69, scope: !1767)
!11379 = !DILocation(line: 3307, column: 81, scope: !1767)
!11380 = !DILocation(line: 3307, column: 91, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !1767, file: !408, line: 3307, column: 91)
!11382 = !DILocation(line: 3307, column: 91, scope: !1767)
!11383 = !DILocation(line: 3307, column: 104, scope: !11384)
!11384 = !DILexicalBlockFile(scope: !11381, file: !408, discriminator: 4)
!11385 = !DILocation(line: 3307, column: 97, scope: !11381)
!11386 = !DILocation(line: 3307, column: 110, scope: !11387)
!11387 = !DILexicalBlockFile(scope: !1768, file: !408, discriminator: 5)
!11388 = !DILocation(line: 3307, column: 110, scope: !11389)
!11389 = !DILexicalBlockFile(scope: !11390, file: !408, discriminator: 7)
!11390 = !DILexicalBlockFile(scope: !1768, file: !408, discriminator: 6)
!11391 = !DILocation(line: 3307, column: 110, scope: !1767)
!11392 = !DILocation(line: 3307, column: 112, scope: !11393)
!11393 = !DILexicalBlockFile(scope: !11394, file: !408, discriminator: 8)
!11394 = !DILexicalBlockFile(scope: !1769, file: !408, discriminator: 3)
!11395 = !DILocation(line: 3308, column: 5, scope: !1755)
!11396 = !DILocation(line: 3308, column: 14, scope: !11397)
!11397 = !DILexicalBlockFile(scope: !1772, file: !408, discriminator: 1)
!11398 = !DILocation(line: 3308, column: 20, scope: !1772)
!11399 = !{!11298, !2621, i64 72}
!11400 = !DILocation(line: 3308, column: 14, scope: !1772)
!11401 = !DILocation(line: 3308, column: 14, scope: !1773)
!11402 = !DILocation(line: 3308, column: 38, scope: !11403)
!11403 = !DILexicalBlockFile(scope: !1771, file: !408, discriminator: 2)
!11404 = !DILocation(line: 3308, column: 42, scope: !1771)
!11405 = !DILocation(line: 3308, column: 49, scope: !1771)
!11406 = !DILocation(line: 3308, column: 68, scope: !1771)
!11407 = !DILocation(line: 3308, column: 74, scope: !1771)
!11408 = !DILocation(line: 3308, column: 91, scope: !1771)
!11409 = !DILocation(line: 3308, column: 101, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !1771, file: !408, line: 3308, column: 101)
!11411 = !DILocation(line: 3308, column: 101, scope: !1771)
!11412 = !DILocation(line: 3308, column: 114, scope: !11413)
!11413 = !DILexicalBlockFile(scope: !11410, file: !408, discriminator: 4)
!11414 = !DILocation(line: 3308, column: 107, scope: !11410)
!11415 = !DILocation(line: 3308, column: 120, scope: !11416)
!11416 = !DILexicalBlockFile(scope: !1772, file: !408, discriminator: 5)
!11417 = !DILocation(line: 3308, column: 120, scope: !11418)
!11418 = !DILexicalBlockFile(scope: !11419, file: !408, discriminator: 7)
!11419 = !DILexicalBlockFile(scope: !1772, file: !408, discriminator: 6)
!11420 = !DILocation(line: 3308, column: 120, scope: !1771)
!11421 = !DILocation(line: 3308, column: 122, scope: !11422)
!11422 = !DILexicalBlockFile(scope: !11423, file: !408, discriminator: 8)
!11423 = !DILexicalBlockFile(scope: !1773, file: !408, discriminator: 3)
!11424 = !DILocation(line: 3309, column: 5, scope: !1755)
!11425 = !DILocation(line: 3309, column: 14, scope: !11426)
!11426 = !DILexicalBlockFile(scope: !1776, file: !408, discriminator: 1)
!11427 = !DILocation(line: 3309, column: 20, scope: !1776)
!11428 = !{!11298, !2621, i64 64}
!11429 = !DILocation(line: 3309, column: 14, scope: !1776)
!11430 = !DILocation(line: 3309, column: 14, scope: !1777)
!11431 = !DILocation(line: 3309, column: 34, scope: !11432)
!11432 = !DILexicalBlockFile(scope: !1775, file: !408, discriminator: 2)
!11433 = !DILocation(line: 3309, column: 38, scope: !1775)
!11434 = !DILocation(line: 3309, column: 45, scope: !1775)
!11435 = !DILocation(line: 3309, column: 64, scope: !1775)
!11436 = !DILocation(line: 3309, column: 70, scope: !1775)
!11437 = !DILocation(line: 3309, column: 83, scope: !1775)
!11438 = !DILocation(line: 3309, column: 93, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !1775, file: !408, line: 3309, column: 93)
!11440 = !DILocation(line: 3309, column: 93, scope: !1775)
!11441 = !DILocation(line: 3309, column: 106, scope: !11442)
!11442 = !DILexicalBlockFile(scope: !11439, file: !408, discriminator: 4)
!11443 = !DILocation(line: 3309, column: 99, scope: !11439)
!11444 = !DILocation(line: 3309, column: 112, scope: !11445)
!11445 = !DILexicalBlockFile(scope: !1776, file: !408, discriminator: 5)
!11446 = !DILocation(line: 3309, column: 112, scope: !11447)
!11447 = !DILexicalBlockFile(scope: !11448, file: !408, discriminator: 7)
!11448 = !DILexicalBlockFile(scope: !1776, file: !408, discriminator: 6)
!11449 = !DILocation(line: 3309, column: 112, scope: !1775)
!11450 = !DILocation(line: 3309, column: 114, scope: !11451)
!11451 = !DILexicalBlockFile(scope: !11452, file: !408, discriminator: 8)
!11452 = !DILexicalBlockFile(scope: !1777, file: !408, discriminator: 3)
!11453 = !DILocation(line: 3310, column: 5, scope: !1755)
!11454 = !DILocation(line: 3310, column: 14, scope: !11455)
!11455 = !DILexicalBlockFile(scope: !1780, file: !408, discriminator: 1)
!11456 = !DILocation(line: 3310, column: 20, scope: !1780)
!11457 = !{!11298, !2621, i64 56}
!11458 = !DILocation(line: 3310, column: 14, scope: !1780)
!11459 = !DILocation(line: 3310, column: 14, scope: !1781)
!11460 = !DILocation(line: 3310, column: 35, scope: !11461)
!11461 = !DILexicalBlockFile(scope: !1779, file: !408, discriminator: 2)
!11462 = !DILocation(line: 3310, column: 39, scope: !1779)
!11463 = !DILocation(line: 3310, column: 46, scope: !1779)
!11464 = !DILocation(line: 3310, column: 65, scope: !1779)
!11465 = !DILocation(line: 3310, column: 71, scope: !1779)
!11466 = !DILocation(line: 3310, column: 85, scope: !1779)
!11467 = !DILocation(line: 3310, column: 95, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !1779, file: !408, line: 3310, column: 95)
!11469 = !DILocation(line: 3310, column: 95, scope: !1779)
!11470 = !DILocation(line: 3310, column: 108, scope: !11471)
!11471 = !DILexicalBlockFile(scope: !11468, file: !408, discriminator: 4)
!11472 = !DILocation(line: 3310, column: 101, scope: !11468)
!11473 = !DILocation(line: 3310, column: 114, scope: !11474)
!11474 = !DILexicalBlockFile(scope: !1780, file: !408, discriminator: 5)
!11475 = !DILocation(line: 3310, column: 114, scope: !11476)
!11476 = !DILexicalBlockFile(scope: !11477, file: !408, discriminator: 7)
!11477 = !DILexicalBlockFile(scope: !1780, file: !408, discriminator: 6)
!11478 = !DILocation(line: 3310, column: 114, scope: !1779)
!11479 = !DILocation(line: 3310, column: 116, scope: !11480)
!11480 = !DILexicalBlockFile(scope: !11481, file: !408, discriminator: 8)
!11481 = !DILexicalBlockFile(scope: !1781, file: !408, discriminator: 3)
!11482 = !DILocation(line: 3311, column: 5, scope: !1755)
!11483 = !DILocation(line: 3311, column: 14, scope: !11484)
!11484 = !DILexicalBlockFile(scope: !1784, file: !408, discriminator: 1)
!11485 = !DILocation(line: 3311, column: 20, scope: !1784)
!11486 = !{!11298, !2621, i64 48}
!11487 = !DILocation(line: 3311, column: 14, scope: !1784)
!11488 = !DILocation(line: 3311, column: 14, scope: !1785)
!11489 = !DILocation(line: 3311, column: 36, scope: !11490)
!11490 = !DILexicalBlockFile(scope: !1783, file: !408, discriminator: 2)
!11491 = !DILocation(line: 3311, column: 40, scope: !1783)
!11492 = !DILocation(line: 3311, column: 47, scope: !1783)
!11493 = !DILocation(line: 3311, column: 66, scope: !1783)
!11494 = !DILocation(line: 3311, column: 72, scope: !1783)
!11495 = !DILocation(line: 3311, column: 87, scope: !1783)
!11496 = !DILocation(line: 3311, column: 97, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !1783, file: !408, line: 3311, column: 97)
!11498 = !DILocation(line: 3311, column: 97, scope: !1783)
!11499 = !DILocation(line: 3311, column: 110, scope: !11500)
!11500 = !DILexicalBlockFile(scope: !11497, file: !408, discriminator: 4)
!11501 = !DILocation(line: 3311, column: 103, scope: !11497)
!11502 = !DILocation(line: 3311, column: 116, scope: !11503)
!11503 = !DILexicalBlockFile(scope: !1784, file: !408, discriminator: 5)
!11504 = !DILocation(line: 3311, column: 116, scope: !11505)
!11505 = !DILexicalBlockFile(scope: !11506, file: !408, discriminator: 7)
!11506 = !DILexicalBlockFile(scope: !1784, file: !408, discriminator: 6)
!11507 = !DILocation(line: 3311, column: 116, scope: !1783)
!11508 = !DILocation(line: 3311, column: 118, scope: !11509)
!11509 = !DILexicalBlockFile(scope: !11510, file: !408, discriminator: 8)
!11510 = !DILexicalBlockFile(scope: !1785, file: !408, discriminator: 3)
!11511 = !DILocation(line: 3313, column: 5, scope: !1755)
!11512 = !DILocation(line: 3313, column: 14, scope: !11513)
!11513 = !DILexicalBlockFile(scope: !1788, file: !408, discriminator: 1)
!11514 = !DILocation(line: 3313, column: 20, scope: !1788)
!11515 = !DILocation(line: 3313, column: 14, scope: !1788)
!11516 = !DILocation(line: 3313, column: 14, scope: !1789)
!11517 = !DILocation(line: 3313, column: 30, scope: !11518)
!11518 = !DILexicalBlockFile(scope: !1787, file: !408, discriminator: 2)
!11519 = !DILocation(line: 3313, column: 34, scope: !1787)
!11520 = !DILocation(line: 3313, column: 41, scope: !1787)
!11521 = !DILocation(line: 3313, column: 60, scope: !1787)
!11522 = !DILocation(line: 3313, column: 66, scope: !1787)
!11523 = !DILocation(line: 3313, column: 75, scope: !1787)
!11524 = !DILocation(line: 3313, column: 85, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !1787, file: !408, line: 3313, column: 85)
!11526 = !DILocation(line: 3313, column: 85, scope: !1787)
!11527 = !DILocation(line: 3313, column: 98, scope: !11528)
!11528 = !DILexicalBlockFile(scope: !11525, file: !408, discriminator: 4)
!11529 = !DILocation(line: 3313, column: 91, scope: !11525)
!11530 = !DILocation(line: 3313, column: 104, scope: !11531)
!11531 = !DILexicalBlockFile(scope: !1788, file: !408, discriminator: 5)
!11532 = !DILocation(line: 3313, column: 104, scope: !11533)
!11533 = !DILexicalBlockFile(scope: !11534, file: !408, discriminator: 7)
!11534 = !DILexicalBlockFile(scope: !1788, file: !408, discriminator: 6)
!11535 = !DILocation(line: 3313, column: 104, scope: !1787)
!11536 = !DILocation(line: 3313, column: 106, scope: !11537)
!11537 = !DILexicalBlockFile(scope: !11538, file: !408, discriminator: 8)
!11538 = !DILexicalBlockFile(scope: !1789, file: !408, discriminator: 3)
!11539 = !DILocation(line: 3314, column: 5, scope: !1755)
!11540 = !DILocation(line: 3314, column: 14, scope: !11541)
!11541 = !DILexicalBlockFile(scope: !1792, file: !408, discriminator: 1)
!11542 = !DILocation(line: 3314, column: 20, scope: !1792)
!11543 = !DILocation(line: 3314, column: 14, scope: !1792)
!11544 = !DILocation(line: 3314, column: 14, scope: !1793)
!11545 = !DILocation(line: 3314, column: 30, scope: !11546)
!11546 = !DILexicalBlockFile(scope: !1791, file: !408, discriminator: 2)
!11547 = !DILocation(line: 3314, column: 34, scope: !1791)
!11548 = !DILocation(line: 3314, column: 41, scope: !1791)
!11549 = !DILocation(line: 3314, column: 60, scope: !1791)
!11550 = !DILocation(line: 3314, column: 66, scope: !1791)
!11551 = !DILocation(line: 3314, column: 75, scope: !1791)
!11552 = !DILocation(line: 3314, column: 85, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !1791, file: !408, line: 3314, column: 85)
!11554 = !DILocation(line: 3314, column: 85, scope: !1791)
!11555 = !DILocation(line: 3314, column: 98, scope: !11556)
!11556 = !DILexicalBlockFile(scope: !11553, file: !408, discriminator: 4)
!11557 = !DILocation(line: 3314, column: 91, scope: !11553)
!11558 = !DILocation(line: 3314, column: 104, scope: !11559)
!11559 = !DILexicalBlockFile(scope: !1792, file: !408, discriminator: 5)
!11560 = !DILocation(line: 3314, column: 104, scope: !11561)
!11561 = !DILexicalBlockFile(scope: !11562, file: !408, discriminator: 7)
!11562 = !DILexicalBlockFile(scope: !1792, file: !408, discriminator: 6)
!11563 = !DILocation(line: 3314, column: 104, scope: !1791)
!11564 = !DILocation(line: 3314, column: 106, scope: !11565)
!11565 = !DILexicalBlockFile(scope: !11566, file: !408, discriminator: 8)
!11566 = !DILexicalBlockFile(scope: !1793, file: !408, discriminator: 3)
!11567 = !DILocation(line: 3315, column: 5, scope: !1755)
!11568 = !DILocation(line: 3315, column: 14, scope: !11569)
!11569 = !DILexicalBlockFile(scope: !1796, file: !408, discriminator: 1)
!11570 = !DILocation(line: 3315, column: 20, scope: !1796)
!11571 = !{!11298, !2621, i64 40}
!11572 = !DILocation(line: 3315, column: 14, scope: !1796)
!11573 = !DILocation(line: 3315, column: 14, scope: !1797)
!11574 = !DILocation(line: 3315, column: 29, scope: !11575)
!11575 = !DILexicalBlockFile(scope: !1795, file: !408, discriminator: 2)
!11576 = !DILocation(line: 3315, column: 33, scope: !1795)
!11577 = !DILocation(line: 3315, column: 40, scope: !1795)
!11578 = !DILocation(line: 3315, column: 59, scope: !1795)
!11579 = !DILocation(line: 3315, column: 65, scope: !1795)
!11580 = !DILocation(line: 3315, column: 73, scope: !1795)
!11581 = !DILocation(line: 3315, column: 83, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !1795, file: !408, line: 3315, column: 83)
!11583 = !DILocation(line: 3315, column: 83, scope: !1795)
!11584 = !DILocation(line: 3315, column: 96, scope: !11585)
!11585 = !DILexicalBlockFile(scope: !11582, file: !408, discriminator: 4)
!11586 = !DILocation(line: 3315, column: 89, scope: !11582)
!11587 = !DILocation(line: 3315, column: 102, scope: !11588)
!11588 = !DILexicalBlockFile(scope: !1796, file: !408, discriminator: 5)
!11589 = !DILocation(line: 3315, column: 102, scope: !11590)
!11590 = !DILexicalBlockFile(scope: !11591, file: !408, discriminator: 7)
!11591 = !DILexicalBlockFile(scope: !1796, file: !408, discriminator: 6)
!11592 = !DILocation(line: 3315, column: 102, scope: !1795)
!11593 = !DILocation(line: 3315, column: 104, scope: !11594)
!11594 = !DILexicalBlockFile(scope: !11595, file: !408, discriminator: 8)
!11595 = !DILexicalBlockFile(scope: !1797, file: !408, discriminator: 3)
!11596 = !DILocation(line: 3317, column: 5, scope: !1755)
!11597 = !DILocation(line: 3318, column: 1, scope: !1755)
!11598 = !DILocation(line: 3321, column: 37, scope: !1798)
!11599 = !DILocation(line: 3323, column: 6, scope: !1798)
!11600 = !DILocation(line: 3323, column: 18, scope: !1798)
!11601 = !{!2752, !2621, i64 72}
!11602 = !DILocation(line: 3323, column: 30, scope: !1798)
!11603 = !DILocation(line: 3323, column: 36, scope: !1798)
!11604 = !{!11298, !2621, i64 16}
!11605 = !DILocation(line: 3323, column: 5, scope: !1798)
!11606 = !DILocation(line: 3325, column: 5, scope: !1798)
!11607 = !DILocation(line: 3325, column: 10, scope: !11608)
!11608 = !DILexicalBlockFile(scope: !1804, file: !408, discriminator: 1)
!11609 = !DILocation(line: 3325, column: 20, scope: !1804)
!11610 = !DILocation(line: 3325, column: 43, scope: !1804)
!11611 = !DILocation(line: 3325, column: 49, scope: !1804)
!11612 = !DILocation(line: 3325, column: 68, scope: !1808)
!11613 = !DILocation(line: 3325, column: 76, scope: !1808)
!11614 = !DILocation(line: 3325, column: 68, scope: !1804)
!11615 = !DILocation(line: 3325, column: 94, scope: !11616)
!11616 = !DILexicalBlockFile(scope: !1807, file: !408, discriminator: 2)
!11617 = !DILocation(line: 3325, column: 100, scope: !1807)
!11618 = !DILocation(line: 3325, column: 114, scope: !1807)
!11619 = !DILocation(line: 3325, column: 128, scope: !1807)
!11620 = !DILocation(line: 3325, column: 133, scope: !11621)
!11621 = !DILexicalBlockFile(scope: !1806, file: !408, discriminator: 4)
!11622 = !DILocation(line: 3325, column: 143, scope: !1806)
!11623 = !DILocation(line: 3325, column: 173, scope: !1806)
!11624 = !DILocation(line: 3325, column: 191, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !1806, file: !408, line: 3325, column: 188)
!11626 = !DILocation(line: 3325, column: 208, scope: !11625)
!11627 = !DILocation(line: 3325, column: 188, scope: !11625)
!11628 = !DILocation(line: 3325, column: 218, scope: !11625)
!11629 = !DILocation(line: 3325, column: 188, scope: !1806)
!11630 = !DILocation(line: 3325, column: 188, scope: !11631)
!11631 = !DILexicalBlockFile(scope: !1806, file: !408, discriminator: 5)
!11632 = !DILocation(line: 3325, column: 249, scope: !11633)
!11633 = !DILexicalBlockFile(scope: !11625, file: !408, discriminator: 6)
!11634 = !DILocation(line: 3325, column: 267, scope: !11625)
!11635 = !DILocation(line: 3325, column: 277, scope: !11625)
!11636 = !DILocation(line: 3325, column: 302, scope: !11625)
!11637 = !DILocation(line: 3325, column: 233, scope: !11625)
!11638 = !DILocation(line: 3325, column: 321, scope: !11639)
!11639 = !DILexicalBlockFile(scope: !1807, file: !408, discriminator: 7)
!11640 = !DILocation(line: 3325, column: 321, scope: !1806)
!11641 = !DILocation(line: 3325, column: 321, scope: !11642)
!11642 = !DILexicalBlockFile(scope: !1806, file: !408, discriminator: 8)
!11643 = !DILocation(line: 3325, column: 334, scope: !11644)
!11644 = !DILexicalBlockFile(scope: !1807, file: !408, discriminator: 9)
!11645 = !DILocation(line: 3325, column: 336, scope: !11646)
!11646 = !DILexicalBlockFile(scope: !11647, file: !408, discriminator: 10)
!11647 = !DILexicalBlockFile(scope: !1798, file: !408, discriminator: 3)
!11648 = !DILocation(line: 3325, column: 336, scope: !1804)
!11649 = !DILocation(line: 3326, column: 5, scope: !1798)
!11650 = !DILocation(line: 3326, column: 10, scope: !11651)
!11651 = !DILexicalBlockFile(scope: !1810, file: !408, discriminator: 1)
!11652 = !DILocation(line: 3326, column: 20, scope: !1810)
!11653 = !DILocation(line: 3326, column: 43, scope: !1810)
!11654 = !DILocation(line: 3326, column: 49, scope: !1810)
!11655 = !DILocation(line: 3326, column: 65, scope: !1814)
!11656 = !DILocation(line: 3326, column: 73, scope: !1814)
!11657 = !DILocation(line: 3326, column: 65, scope: !1810)
!11658 = !DILocation(line: 3326, column: 91, scope: !11659)
!11659 = !DILexicalBlockFile(scope: !1813, file: !408, discriminator: 2)
!11660 = !DILocation(line: 3326, column: 97, scope: !1813)
!11661 = !DILocation(line: 3326, column: 108, scope: !1813)
!11662 = !DILocation(line: 3326, column: 122, scope: !1813)
!11663 = !DILocation(line: 3326, column: 127, scope: !11664)
!11664 = !DILexicalBlockFile(scope: !1812, file: !408, discriminator: 4)
!11665 = !DILocation(line: 3326, column: 137, scope: !1812)
!11666 = !DILocation(line: 3326, column: 167, scope: !1812)
!11667 = !DILocation(line: 3326, column: 185, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !1812, file: !408, line: 3326, column: 182)
!11669 = !DILocation(line: 3326, column: 202, scope: !11668)
!11670 = !DILocation(line: 3326, column: 182, scope: !11668)
!11671 = !DILocation(line: 3326, column: 212, scope: !11668)
!11672 = !DILocation(line: 3326, column: 182, scope: !1812)
!11673 = !DILocation(line: 3326, column: 182, scope: !11674)
!11674 = !DILexicalBlockFile(scope: !1812, file: !408, discriminator: 5)
!11675 = !DILocation(line: 3326, column: 243, scope: !11676)
!11676 = !DILexicalBlockFile(scope: !11668, file: !408, discriminator: 6)
!11677 = !DILocation(line: 3326, column: 261, scope: !11668)
!11678 = !DILocation(line: 3326, column: 271, scope: !11668)
!11679 = !DILocation(line: 3326, column: 296, scope: !11668)
!11680 = !DILocation(line: 3326, column: 227, scope: !11668)
!11681 = !DILocation(line: 3326, column: 315, scope: !11682)
!11682 = !DILexicalBlockFile(scope: !1813, file: !408, discriminator: 7)
!11683 = !DILocation(line: 3326, column: 315, scope: !1812)
!11684 = !DILocation(line: 3326, column: 315, scope: !11685)
!11685 = !DILexicalBlockFile(scope: !1812, file: !408, discriminator: 8)
!11686 = !DILocation(line: 3326, column: 328, scope: !11687)
!11687 = !DILexicalBlockFile(scope: !1813, file: !408, discriminator: 9)
!11688 = !DILocation(line: 3326, column: 330, scope: !11646)
!11689 = !DILocation(line: 3326, column: 330, scope: !1810)
!11690 = !DILocation(line: 3327, column: 5, scope: !1798)
!11691 = !DILocation(line: 3327, column: 10, scope: !11692)
!11692 = !DILexicalBlockFile(scope: !1816, file: !408, discriminator: 1)
!11693 = !DILocation(line: 3327, column: 20, scope: !1816)
!11694 = !DILocation(line: 3327, column: 43, scope: !1816)
!11695 = !DILocation(line: 3327, column: 49, scope: !1816)
!11696 = !DILocation(line: 3327, column: 70, scope: !1820)
!11697 = !DILocation(line: 3327, column: 78, scope: !1820)
!11698 = !DILocation(line: 3327, column: 70, scope: !1816)
!11699 = !DILocation(line: 3327, column: 96, scope: !11700)
!11700 = !DILexicalBlockFile(scope: !1819, file: !408, discriminator: 2)
!11701 = !DILocation(line: 3327, column: 102, scope: !1819)
!11702 = !DILocation(line: 3327, column: 118, scope: !1819)
!11703 = !DILocation(line: 3327, column: 132, scope: !1819)
!11704 = !DILocation(line: 3327, column: 137, scope: !11705)
!11705 = !DILexicalBlockFile(scope: !1818, file: !408, discriminator: 4)
!11706 = !DILocation(line: 3327, column: 147, scope: !1818)
!11707 = !DILocation(line: 3327, column: 177, scope: !1818)
!11708 = !DILocation(line: 3327, column: 195, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !1818, file: !408, line: 3327, column: 192)
!11710 = !DILocation(line: 3327, column: 212, scope: !11709)
!11711 = !DILocation(line: 3327, column: 192, scope: !11709)
!11712 = !DILocation(line: 3327, column: 222, scope: !11709)
!11713 = !DILocation(line: 3327, column: 192, scope: !1818)
!11714 = !DILocation(line: 3327, column: 192, scope: !11715)
!11715 = !DILexicalBlockFile(scope: !1818, file: !408, discriminator: 5)
!11716 = !DILocation(line: 3327, column: 253, scope: !11717)
!11717 = !DILexicalBlockFile(scope: !11709, file: !408, discriminator: 6)
!11718 = !DILocation(line: 3327, column: 271, scope: !11709)
!11719 = !DILocation(line: 3327, column: 281, scope: !11709)
!11720 = !DILocation(line: 3327, column: 306, scope: !11709)
!11721 = !DILocation(line: 3327, column: 237, scope: !11709)
!11722 = !DILocation(line: 3327, column: 325, scope: !11723)
!11723 = !DILexicalBlockFile(scope: !1819, file: !408, discriminator: 7)
!11724 = !DILocation(line: 3327, column: 325, scope: !1818)
!11725 = !DILocation(line: 3327, column: 325, scope: !11726)
!11726 = !DILexicalBlockFile(scope: !1818, file: !408, discriminator: 8)
!11727 = !DILocation(line: 3327, column: 338, scope: !11728)
!11728 = !DILexicalBlockFile(scope: !1819, file: !408, discriminator: 9)
!11729 = !DILocation(line: 3327, column: 340, scope: !11646)
!11730 = !DILocation(line: 3327, column: 340, scope: !1816)
!11731 = !DILocation(line: 3328, column: 5, scope: !1798)
!11732 = !DILocation(line: 3328, column: 10, scope: !11733)
!11733 = !DILexicalBlockFile(scope: !1822, file: !408, discriminator: 1)
!11734 = !DILocation(line: 3328, column: 20, scope: !1822)
!11735 = !DILocation(line: 3328, column: 43, scope: !1822)
!11736 = !DILocation(line: 3328, column: 49, scope: !1822)
!11737 = !DILocation(line: 3328, column: 66, scope: !1826)
!11738 = !DILocation(line: 3328, column: 74, scope: !1826)
!11739 = !DILocation(line: 3328, column: 66, scope: !1822)
!11740 = !DILocation(line: 3328, column: 92, scope: !11741)
!11741 = !DILexicalBlockFile(scope: !1825, file: !408, discriminator: 2)
!11742 = !DILocation(line: 3328, column: 98, scope: !1825)
!11743 = !DILocation(line: 3328, column: 110, scope: !1825)
!11744 = !DILocation(line: 3328, column: 124, scope: !1825)
!11745 = !DILocation(line: 3328, column: 129, scope: !11746)
!11746 = !DILexicalBlockFile(scope: !1824, file: !408, discriminator: 4)
!11747 = !DILocation(line: 3328, column: 139, scope: !1824)
!11748 = !DILocation(line: 3328, column: 169, scope: !1824)
!11749 = !DILocation(line: 3328, column: 187, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !1824, file: !408, line: 3328, column: 184)
!11751 = !DILocation(line: 3328, column: 204, scope: !11750)
!11752 = !DILocation(line: 3328, column: 184, scope: !11750)
!11753 = !DILocation(line: 3328, column: 214, scope: !11750)
!11754 = !DILocation(line: 3328, column: 184, scope: !1824)
!11755 = !DILocation(line: 3328, column: 184, scope: !11756)
!11756 = !DILexicalBlockFile(scope: !1824, file: !408, discriminator: 5)
!11757 = !DILocation(line: 3328, column: 245, scope: !11758)
!11758 = !DILexicalBlockFile(scope: !11750, file: !408, discriminator: 6)
!11759 = !DILocation(line: 3328, column: 263, scope: !11750)
!11760 = !DILocation(line: 3328, column: 273, scope: !11750)
!11761 = !DILocation(line: 3328, column: 298, scope: !11750)
!11762 = !DILocation(line: 3328, column: 229, scope: !11750)
!11763 = !DILocation(line: 3328, column: 317, scope: !11764)
!11764 = !DILexicalBlockFile(scope: !1825, file: !408, discriminator: 7)
!11765 = !DILocation(line: 3328, column: 317, scope: !1824)
!11766 = !DILocation(line: 3328, column: 317, scope: !11767)
!11767 = !DILexicalBlockFile(scope: !1824, file: !408, discriminator: 8)
!11768 = !DILocation(line: 3328, column: 330, scope: !11769)
!11769 = !DILexicalBlockFile(scope: !1825, file: !408, discriminator: 9)
!11770 = !DILocation(line: 3328, column: 332, scope: !11646)
!11771 = !DILocation(line: 3328, column: 332, scope: !1822)
!11772 = !DILocation(line: 3329, column: 5, scope: !1798)
!11773 = !DILocation(line: 3329, column: 10, scope: !11774)
!11774 = !DILexicalBlockFile(scope: !1828, file: !408, discriminator: 1)
!11775 = !DILocation(line: 3329, column: 20, scope: !1828)
!11776 = !DILocation(line: 3329, column: 43, scope: !1828)
!11777 = !DILocation(line: 3329, column: 49, scope: !1828)
!11778 = !DILocation(line: 3329, column: 67, scope: !1832)
!11779 = !DILocation(line: 3329, column: 75, scope: !1832)
!11780 = !DILocation(line: 3329, column: 67, scope: !1828)
!11781 = !DILocation(line: 3329, column: 93, scope: !11782)
!11782 = !DILexicalBlockFile(scope: !1831, file: !408, discriminator: 2)
!11783 = !DILocation(line: 3329, column: 99, scope: !1831)
!11784 = !DILocation(line: 3329, column: 112, scope: !1831)
!11785 = !DILocation(line: 3329, column: 126, scope: !1831)
!11786 = !DILocation(line: 3329, column: 131, scope: !11787)
!11787 = !DILexicalBlockFile(scope: !1830, file: !408, discriminator: 4)
!11788 = !DILocation(line: 3329, column: 141, scope: !1830)
!11789 = !DILocation(line: 3329, column: 171, scope: !1830)
!11790 = !DILocation(line: 3329, column: 189, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !1830, file: !408, line: 3329, column: 186)
!11792 = !DILocation(line: 3329, column: 206, scope: !11791)
!11793 = !DILocation(line: 3329, column: 186, scope: !11791)
!11794 = !DILocation(line: 3329, column: 216, scope: !11791)
!11795 = !DILocation(line: 3329, column: 186, scope: !1830)
!11796 = !DILocation(line: 3329, column: 186, scope: !11797)
!11797 = !DILexicalBlockFile(scope: !1830, file: !408, discriminator: 5)
!11798 = !DILocation(line: 3329, column: 247, scope: !11799)
!11799 = !DILexicalBlockFile(scope: !11791, file: !408, discriminator: 6)
!11800 = !DILocation(line: 3329, column: 265, scope: !11791)
!11801 = !DILocation(line: 3329, column: 275, scope: !11791)
!11802 = !DILocation(line: 3329, column: 300, scope: !11791)
!11803 = !DILocation(line: 3329, column: 231, scope: !11791)
!11804 = !DILocation(line: 3329, column: 319, scope: !11805)
!11805 = !DILexicalBlockFile(scope: !1831, file: !408, discriminator: 7)
!11806 = !DILocation(line: 3329, column: 319, scope: !1830)
!11807 = !DILocation(line: 3329, column: 319, scope: !11808)
!11808 = !DILexicalBlockFile(scope: !1830, file: !408, discriminator: 8)
!11809 = !DILocation(line: 3329, column: 332, scope: !11810)
!11810 = !DILexicalBlockFile(scope: !1831, file: !408, discriminator: 9)
!11811 = !DILocation(line: 3329, column: 334, scope: !11646)
!11812 = !DILocation(line: 3329, column: 334, scope: !1828)
!11813 = !DILocation(line: 3330, column: 5, scope: !1798)
!11814 = !DILocation(line: 3330, column: 10, scope: !11815)
!11815 = !DILexicalBlockFile(scope: !1834, file: !408, discriminator: 1)
!11816 = !DILocation(line: 3330, column: 20, scope: !1834)
!11817 = !DILocation(line: 3330, column: 43, scope: !1834)
!11818 = !DILocation(line: 3330, column: 49, scope: !1834)
!11819 = !DILocation(line: 3330, column: 68, scope: !1838)
!11820 = !DILocation(line: 3330, column: 76, scope: !1838)
!11821 = !DILocation(line: 3330, column: 68, scope: !1834)
!11822 = !DILocation(line: 3330, column: 94, scope: !11823)
!11823 = !DILexicalBlockFile(scope: !1837, file: !408, discriminator: 2)
!11824 = !DILocation(line: 3330, column: 100, scope: !1837)
!11825 = !DILocation(line: 3330, column: 114, scope: !1837)
!11826 = !DILocation(line: 3330, column: 128, scope: !1837)
!11827 = !DILocation(line: 3330, column: 133, scope: !11828)
!11828 = !DILexicalBlockFile(scope: !1836, file: !408, discriminator: 4)
!11829 = !DILocation(line: 3330, column: 143, scope: !1836)
!11830 = !DILocation(line: 3330, column: 173, scope: !1836)
!11831 = !DILocation(line: 3330, column: 191, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !1836, file: !408, line: 3330, column: 188)
!11833 = !DILocation(line: 3330, column: 208, scope: !11832)
!11834 = !DILocation(line: 3330, column: 188, scope: !11832)
!11835 = !DILocation(line: 3330, column: 218, scope: !11832)
!11836 = !DILocation(line: 3330, column: 188, scope: !1836)
!11837 = !DILocation(line: 3330, column: 188, scope: !11838)
!11838 = !DILexicalBlockFile(scope: !1836, file: !408, discriminator: 5)
!11839 = !DILocation(line: 3330, column: 249, scope: !11840)
!11840 = !DILexicalBlockFile(scope: !11832, file: !408, discriminator: 6)
!11841 = !DILocation(line: 3330, column: 267, scope: !11832)
!11842 = !DILocation(line: 3330, column: 277, scope: !11832)
!11843 = !DILocation(line: 3330, column: 302, scope: !11832)
!11844 = !DILocation(line: 3330, column: 233, scope: !11832)
!11845 = !DILocation(line: 3330, column: 321, scope: !11846)
!11846 = !DILexicalBlockFile(scope: !1837, file: !408, discriminator: 7)
!11847 = !DILocation(line: 3330, column: 321, scope: !1836)
!11848 = !DILocation(line: 3330, column: 321, scope: !11849)
!11849 = !DILexicalBlockFile(scope: !1836, file: !408, discriminator: 8)
!11850 = !DILocation(line: 3330, column: 334, scope: !11851)
!11851 = !DILexicalBlockFile(scope: !1837, file: !408, discriminator: 9)
!11852 = !DILocation(line: 3330, column: 336, scope: !11646)
!11853 = !DILocation(line: 3330, column: 336, scope: !1834)
!11854 = !DILocation(line: 3331, column: 5, scope: !1798)
!11855 = !DILocation(line: 3331, column: 10, scope: !11856)
!11856 = !DILexicalBlockFile(scope: !1840, file: !408, discriminator: 1)
!11857 = !DILocation(line: 3331, column: 20, scope: !1840)
!11858 = !DILocation(line: 3331, column: 43, scope: !1840)
!11859 = !DILocation(line: 3331, column: 49, scope: !1840)
!11860 = !{!11298, !2621, i64 88}
!11861 = !DILocation(line: 3331, column: 70, scope: !1844)
!11862 = !DILocation(line: 3331, column: 78, scope: !1844)
!11863 = !DILocation(line: 3331, column: 70, scope: !1840)
!11864 = !DILocation(line: 3331, column: 96, scope: !11865)
!11865 = !DILexicalBlockFile(scope: !1843, file: !408, discriminator: 2)
!11866 = !DILocation(line: 3331, column: 102, scope: !1843)
!11867 = !DILocation(line: 3331, column: 118, scope: !1843)
!11868 = !DILocation(line: 3331, column: 132, scope: !1843)
!11869 = !DILocation(line: 3331, column: 137, scope: !11870)
!11870 = !DILexicalBlockFile(scope: !1842, file: !408, discriminator: 4)
!11871 = !DILocation(line: 3331, column: 147, scope: !1842)
!11872 = !DILocation(line: 3331, column: 177, scope: !1842)
!11873 = !DILocation(line: 3331, column: 195, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !1842, file: !408, line: 3331, column: 192)
!11875 = !DILocation(line: 3331, column: 212, scope: !11874)
!11876 = !DILocation(line: 3331, column: 192, scope: !11874)
!11877 = !DILocation(line: 3331, column: 222, scope: !11874)
!11878 = !DILocation(line: 3331, column: 192, scope: !1842)
!11879 = !DILocation(line: 3331, column: 192, scope: !11880)
!11880 = !DILexicalBlockFile(scope: !1842, file: !408, discriminator: 5)
!11881 = !DILocation(line: 3331, column: 253, scope: !11882)
!11882 = !DILexicalBlockFile(scope: !11874, file: !408, discriminator: 6)
!11883 = !DILocation(line: 3331, column: 271, scope: !11874)
!11884 = !DILocation(line: 3331, column: 281, scope: !11874)
!11885 = !DILocation(line: 3331, column: 306, scope: !11874)
!11886 = !DILocation(line: 3331, column: 237, scope: !11874)
!11887 = !DILocation(line: 3331, column: 325, scope: !11888)
!11888 = !DILexicalBlockFile(scope: !1843, file: !408, discriminator: 7)
!11889 = !DILocation(line: 3331, column: 325, scope: !1842)
!11890 = !DILocation(line: 3331, column: 325, scope: !11891)
!11891 = !DILexicalBlockFile(scope: !1842, file: !408, discriminator: 8)
!11892 = !DILocation(line: 3331, column: 338, scope: !11893)
!11893 = !DILexicalBlockFile(scope: !1843, file: !408, discriminator: 9)
!11894 = !DILocation(line: 3331, column: 340, scope: !11646)
!11895 = !DILocation(line: 3331, column: 340, scope: !1840)
!11896 = !DILocation(line: 3333, column: 5, scope: !1798)
!11897 = !DILocation(line: 3333, column: 10, scope: !11898)
!11898 = !DILexicalBlockFile(scope: !1846, file: !408, discriminator: 1)
!11899 = !DILocation(line: 3333, column: 20, scope: !1846)
!11900 = !DILocation(line: 3333, column: 43, scope: !1846)
!11901 = !DILocation(line: 3333, column: 49, scope: !1846)
!11902 = !DILocation(line: 3333, column: 62, scope: !1850)
!11903 = !DILocation(line: 3333, column: 70, scope: !1850)
!11904 = !DILocation(line: 3333, column: 62, scope: !1846)
!11905 = !DILocation(line: 3333, column: 88, scope: !11906)
!11906 = !DILexicalBlockFile(scope: !1849, file: !408, discriminator: 2)
!11907 = !DILocation(line: 3333, column: 94, scope: !1849)
!11908 = !DILocation(line: 3333, column: 102, scope: !1849)
!11909 = !DILocation(line: 3333, column: 116, scope: !1849)
!11910 = !DILocation(line: 3333, column: 121, scope: !11911)
!11911 = !DILexicalBlockFile(scope: !1848, file: !408, discriminator: 4)
!11912 = !DILocation(line: 3333, column: 131, scope: !1848)
!11913 = !DILocation(line: 3333, column: 161, scope: !1848)
!11914 = !DILocation(line: 3333, column: 179, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !1848, file: !408, line: 3333, column: 176)
!11916 = !DILocation(line: 3333, column: 196, scope: !11915)
!11917 = !DILocation(line: 3333, column: 176, scope: !11915)
!11918 = !DILocation(line: 3333, column: 206, scope: !11915)
!11919 = !DILocation(line: 3333, column: 176, scope: !1848)
!11920 = !DILocation(line: 3333, column: 176, scope: !11921)
!11921 = !DILexicalBlockFile(scope: !1848, file: !408, discriminator: 5)
!11922 = !DILocation(line: 3333, column: 237, scope: !11923)
!11923 = !DILexicalBlockFile(scope: !11915, file: !408, discriminator: 6)
!11924 = !DILocation(line: 3333, column: 255, scope: !11915)
!11925 = !DILocation(line: 3333, column: 265, scope: !11915)
!11926 = !DILocation(line: 3333, column: 290, scope: !11915)
!11927 = !DILocation(line: 3333, column: 221, scope: !11915)
!11928 = !DILocation(line: 3333, column: 309, scope: !11929)
!11929 = !DILexicalBlockFile(scope: !1849, file: !408, discriminator: 7)
!11930 = !DILocation(line: 3333, column: 309, scope: !1848)
!11931 = !DILocation(line: 3333, column: 309, scope: !11932)
!11932 = !DILexicalBlockFile(scope: !1848, file: !408, discriminator: 8)
!11933 = !DILocation(line: 3333, column: 322, scope: !11934)
!11934 = !DILexicalBlockFile(scope: !1849, file: !408, discriminator: 9)
!11935 = !DILocation(line: 3333, column: 324, scope: !11646)
!11936 = !DILocation(line: 3333, column: 324, scope: !1846)
!11937 = !DILocation(line: 3334, column: 5, scope: !1798)
!11938 = !DILocation(line: 3334, column: 10, scope: !11939)
!11939 = !DILexicalBlockFile(scope: !1852, file: !408, discriminator: 1)
!11940 = !DILocation(line: 3334, column: 20, scope: !1852)
!11941 = !DILocation(line: 3334, column: 43, scope: !1852)
!11942 = !DILocation(line: 3334, column: 49, scope: !1852)
!11943 = !DILocation(line: 3334, column: 62, scope: !1856)
!11944 = !DILocation(line: 3334, column: 70, scope: !1856)
!11945 = !DILocation(line: 3334, column: 62, scope: !1852)
!11946 = !DILocation(line: 3334, column: 88, scope: !11947)
!11947 = !DILexicalBlockFile(scope: !1855, file: !408, discriminator: 2)
!11948 = !DILocation(line: 3334, column: 94, scope: !1855)
!11949 = !DILocation(line: 3334, column: 102, scope: !1855)
!11950 = !DILocation(line: 3334, column: 116, scope: !1855)
!11951 = !DILocation(line: 3334, column: 121, scope: !11952)
!11952 = !DILexicalBlockFile(scope: !1854, file: !408, discriminator: 4)
!11953 = !DILocation(line: 3334, column: 131, scope: !1854)
!11954 = !DILocation(line: 3334, column: 161, scope: !1854)
!11955 = !DILocation(line: 3334, column: 179, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !1854, file: !408, line: 3334, column: 176)
!11957 = !DILocation(line: 3334, column: 196, scope: !11956)
!11958 = !DILocation(line: 3334, column: 176, scope: !11956)
!11959 = !DILocation(line: 3334, column: 206, scope: !11956)
!11960 = !DILocation(line: 3334, column: 176, scope: !1854)
!11961 = !DILocation(line: 3334, column: 176, scope: !11962)
!11962 = !DILexicalBlockFile(scope: !1854, file: !408, discriminator: 5)
!11963 = !DILocation(line: 3334, column: 237, scope: !11964)
!11964 = !DILexicalBlockFile(scope: !11956, file: !408, discriminator: 6)
!11965 = !DILocation(line: 3334, column: 255, scope: !11956)
!11966 = !DILocation(line: 3334, column: 265, scope: !11956)
!11967 = !DILocation(line: 3334, column: 290, scope: !11956)
!11968 = !DILocation(line: 3334, column: 221, scope: !11956)
!11969 = !DILocation(line: 3334, column: 309, scope: !11970)
!11970 = !DILexicalBlockFile(scope: !1855, file: !408, discriminator: 7)
!11971 = !DILocation(line: 3334, column: 309, scope: !1854)
!11972 = !DILocation(line: 3334, column: 309, scope: !11973)
!11973 = !DILexicalBlockFile(scope: !1854, file: !408, discriminator: 8)
!11974 = !DILocation(line: 3334, column: 322, scope: !11975)
!11975 = !DILexicalBlockFile(scope: !1855, file: !408, discriminator: 9)
!11976 = !DILocation(line: 3334, column: 324, scope: !11646)
!11977 = !DILocation(line: 3334, column: 324, scope: !1852)
!11978 = !DILocation(line: 3335, column: 5, scope: !1798)
!11979 = !DILocation(line: 3335, column: 10, scope: !11980)
!11980 = !DILexicalBlockFile(scope: !1858, file: !408, discriminator: 1)
!11981 = !DILocation(line: 3335, column: 20, scope: !1858)
!11982 = !DILocation(line: 3335, column: 43, scope: !1858)
!11983 = !DILocation(line: 3335, column: 49, scope: !1858)
!11984 = !DILocation(line: 3335, column: 61, scope: !1862)
!11985 = !DILocation(line: 3335, column: 69, scope: !1862)
!11986 = !DILocation(line: 3335, column: 61, scope: !1858)
!11987 = !DILocation(line: 3335, column: 87, scope: !11988)
!11988 = !DILexicalBlockFile(scope: !1861, file: !408, discriminator: 2)
!11989 = !DILocation(line: 3335, column: 93, scope: !1861)
!11990 = !DILocation(line: 3335, column: 100, scope: !1861)
!11991 = !DILocation(line: 3335, column: 114, scope: !1861)
!11992 = !DILocation(line: 3335, column: 119, scope: !11993)
!11993 = !DILexicalBlockFile(scope: !1860, file: !408, discriminator: 4)
!11994 = !DILocation(line: 3335, column: 129, scope: !1860)
!11995 = !DILocation(line: 3335, column: 159, scope: !1860)
!11996 = !DILocation(line: 3335, column: 177, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !1860, file: !408, line: 3335, column: 174)
!11998 = !DILocation(line: 3335, column: 194, scope: !11997)
!11999 = !DILocation(line: 3335, column: 174, scope: !11997)
!12000 = !DILocation(line: 3335, column: 204, scope: !11997)
!12001 = !DILocation(line: 3335, column: 174, scope: !1860)
!12002 = !DILocation(line: 3335, column: 174, scope: !12003)
!12003 = !DILexicalBlockFile(scope: !1860, file: !408, discriminator: 5)
!12004 = !DILocation(line: 3335, column: 235, scope: !12005)
!12005 = !DILexicalBlockFile(scope: !11997, file: !408, discriminator: 6)
!12006 = !DILocation(line: 3335, column: 253, scope: !11997)
!12007 = !DILocation(line: 3335, column: 263, scope: !11997)
!12008 = !DILocation(line: 3335, column: 288, scope: !11997)
!12009 = !DILocation(line: 3335, column: 219, scope: !11997)
!12010 = !DILocation(line: 3335, column: 307, scope: !12011)
!12011 = !DILexicalBlockFile(scope: !1861, file: !408, discriminator: 7)
!12012 = !DILocation(line: 3335, column: 307, scope: !1860)
!12013 = !DILocation(line: 3335, column: 307, scope: !12014)
!12014 = !DILexicalBlockFile(scope: !1860, file: !408, discriminator: 8)
!12015 = !DILocation(line: 3335, column: 320, scope: !12016)
!12016 = !DILexicalBlockFile(scope: !1861, file: !408, discriminator: 9)
!12017 = !DILocation(line: 3335, column: 322, scope: !11646)
!12018 = !DILocation(line: 3335, column: 322, scope: !1858)
!12019 = !DILocation(line: 3337, column: 5, scope: !1798)
!12020 = !DILocation(line: 3213, column: 26, scope: !2129)
!12021 = !DILocation(line: 3213, column: 42, scope: !2129)
!12022 = !DILocation(line: 3213, column: 58, scope: !2129)
!12023 = !DILocation(line: 3215, column: 5, scope: !2129)
!12024 = !DILocation(line: 3215, column: 22, scope: !2129)
!12025 = !DILocation(line: 3215, column: 51, scope: !2129)
!12026 = !DILocation(line: 3215, column: 32, scope: !2129)
!12027 = !DILocation(line: 3216, column: 5, scope: !2129)
!12028 = !DILocation(line: 3216, column: 15, scope: !2129)
!12029 = !DILocation(line: 3216, column: 37, scope: !2129)
!12030 = !DILocation(line: 3217, column: 5, scope: !2129)
!12031 = !DILocation(line: 3217, column: 11, scope: !2129)
!12032 = !DILocation(line: 3220, column: 38, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !2129, file: !408, line: 3220, column: 9)
!12034 = !DILocation(line: 3220, column: 44, scope: !12033)
!12035 = !DILocation(line: 3220, column: 10, scope: !12033)
!12036 = !DILocation(line: 3220, column: 9, scope: !2129)
!12037 = !DILocation(line: 3222, column: 9, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12033, file: !408, line: 3221, column: 66)
!12039 = !DILocation(line: 3225, column: 23, scope: !2129)
!12040 = !DILocation(line: 3225, column: 5, scope: !2129)
!12041 = !DILocation(line: 3225, column: 14, scope: !2129)
!12042 = !DILocation(line: 3225, column: 21, scope: !2129)
!12043 = !DILocation(line: 3226, column: 10, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !2129, file: !408, line: 3226, column: 9)
!12045 = !DILocation(line: 3226, column: 19, scope: !12044)
!12046 = !DILocation(line: 3226, column: 9, scope: !2129)
!12047 = !DILocation(line: 3227, column: 9, scope: !12044)
!12048 = !DILocation(line: 3229, column: 22, scope: !2129)
!12049 = !DILocation(line: 3229, column: 5, scope: !2129)
!12050 = !DILocation(line: 3229, column: 14, scope: !2129)
!12051 = !DILocation(line: 3229, column: 20, scope: !2129)
!12052 = !DILocation(line: 3230, column: 10, scope: !2141)
!12053 = !DILocation(line: 3230, column: 19, scope: !2141)
!12054 = !DILocation(line: 3230, column: 9, scope: !2129)
!12055 = !DILocation(line: 3231, column: 9, scope: !2140)
!12056 = !DILocation(line: 3231, column: 14, scope: !12057)
!12057 = !DILexicalBlockFile(scope: !2139, file: !408, discriminator: 1)
!12058 = !DILocation(line: 3231, column: 24, scope: !2139)
!12059 = !DILocation(line: 3231, column: 47, scope: !2139)
!12060 = !DILocation(line: 3231, column: 56, scope: !2139)
!12061 = !DILocation(line: 3231, column: 69, scope: !2145)
!12062 = !DILocation(line: 3231, column: 77, scope: !2145)
!12063 = !DILocation(line: 3231, column: 69, scope: !2139)
!12064 = !DILocation(line: 3231, column: 95, scope: !12065)
!12065 = !DILexicalBlockFile(scope: !2144, file: !408, discriminator: 2)
!12066 = !DILocation(line: 3231, column: 104, scope: !2144)
!12067 = !DILocation(line: 3231, column: 112, scope: !2144)
!12068 = !DILocation(line: 3231, column: 126, scope: !2144)
!12069 = !DILocation(line: 3231, column: 131, scope: !12070)
!12070 = !DILexicalBlockFile(scope: !2143, file: !408, discriminator: 4)
!12071 = !DILocation(line: 3231, column: 141, scope: !2143)
!12072 = !DILocation(line: 3231, column: 171, scope: !2143)
!12073 = !DILocation(line: 3231, column: 189, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !2143, file: !408, line: 3231, column: 186)
!12075 = !DILocation(line: 3231, column: 206, scope: !12074)
!12076 = !DILocation(line: 3231, column: 186, scope: !12074)
!12077 = !DILocation(line: 3231, column: 216, scope: !12074)
!12078 = !DILocation(line: 3231, column: 186, scope: !2143)
!12079 = !DILocation(line: 3231, column: 186, scope: !12080)
!12080 = !DILexicalBlockFile(scope: !2143, file: !408, discriminator: 5)
!12081 = !DILocation(line: 3231, column: 247, scope: !12082)
!12082 = !DILexicalBlockFile(scope: !12074, file: !408, discriminator: 6)
!12083 = !DILocation(line: 3231, column: 265, scope: !12074)
!12084 = !DILocation(line: 3231, column: 275, scope: !12074)
!12085 = !DILocation(line: 3231, column: 300, scope: !12074)
!12086 = !DILocation(line: 3231, column: 231, scope: !12074)
!12087 = !DILocation(line: 3231, column: 319, scope: !12088)
!12088 = !DILexicalBlockFile(scope: !2144, file: !408, discriminator: 7)
!12089 = !DILocation(line: 3231, column: 319, scope: !2143)
!12090 = !DILocation(line: 3231, column: 319, scope: !12091)
!12091 = !DILexicalBlockFile(scope: !2143, file: !408, discriminator: 8)
!12092 = !DILocation(line: 3231, column: 332, scope: !12093)
!12093 = !DILexicalBlockFile(scope: !2144, file: !408, discriminator: 9)
!12094 = !DILocation(line: 3231, column: 334, scope: !12095)
!12095 = !DILexicalBlockFile(scope: !12096, file: !408, discriminator: 10)
!12096 = !DILexicalBlockFile(scope: !2140, file: !408, discriminator: 3)
!12097 = !DILocation(line: 3231, column: 334, scope: !2139)
!12098 = !DILocation(line: 3231, column: 334, scope: !12099)
!12099 = !DILexicalBlockFile(scope: !2139, file: !408, discriminator: 11)
!12100 = !DILocation(line: 3232, column: 9, scope: !2140)
!12101 = !DILocation(line: 3235, column: 24, scope: !2129)
!12102 = !DILocation(line: 3235, column: 36, scope: !2129)
!12103 = !{!2752, !2621, i64 64}
!12104 = !DILocation(line: 3235, column: 53, scope: !2129)
!12105 = !DILocation(line: 3235, column: 23, scope: !2129)
!12106 = !DILocation(line: 3235, column: 5, scope: !2129)
!12107 = !DILocation(line: 3235, column: 14, scope: !2129)
!12108 = !DILocation(line: 3235, column: 21, scope: !2129)
!12109 = !DILocation(line: 3236, column: 10, scope: !2149)
!12110 = !DILocation(line: 3236, column: 19, scope: !2149)
!12111 = !DILocation(line: 3236, column: 9, scope: !2129)
!12112 = !DILocation(line: 3237, column: 9, scope: !2148)
!12113 = !DILocation(line: 3237, column: 14, scope: !12114)
!12114 = !DILexicalBlockFile(scope: !2147, file: !408, discriminator: 1)
!12115 = !DILocation(line: 3237, column: 24, scope: !2147)
!12116 = !DILocation(line: 3237, column: 47, scope: !2147)
!12117 = !DILocation(line: 3237, column: 56, scope: !2147)
!12118 = !DILocation(line: 3237, column: 69, scope: !2153)
!12119 = !DILocation(line: 3237, column: 77, scope: !2153)
!12120 = !DILocation(line: 3237, column: 69, scope: !2147)
!12121 = !DILocation(line: 3237, column: 95, scope: !12122)
!12122 = !DILexicalBlockFile(scope: !2152, file: !408, discriminator: 2)
!12123 = !DILocation(line: 3237, column: 104, scope: !2152)
!12124 = !DILocation(line: 3237, column: 112, scope: !2152)
!12125 = !DILocation(line: 3237, column: 126, scope: !2152)
!12126 = !DILocation(line: 3237, column: 131, scope: !12127)
!12127 = !DILexicalBlockFile(scope: !2151, file: !408, discriminator: 4)
!12128 = !DILocation(line: 3237, column: 141, scope: !2151)
!12129 = !DILocation(line: 3237, column: 171, scope: !2151)
!12130 = !DILocation(line: 3237, column: 189, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !2151, file: !408, line: 3237, column: 186)
!12132 = !DILocation(line: 3237, column: 206, scope: !12131)
!12133 = !DILocation(line: 3237, column: 186, scope: !12131)
!12134 = !DILocation(line: 3237, column: 216, scope: !12131)
!12135 = !DILocation(line: 3237, column: 186, scope: !2151)
!12136 = !DILocation(line: 3237, column: 186, scope: !12137)
!12137 = !DILexicalBlockFile(scope: !2151, file: !408, discriminator: 5)
!12138 = !DILocation(line: 3237, column: 247, scope: !12139)
!12139 = !DILexicalBlockFile(scope: !12131, file: !408, discriminator: 6)
!12140 = !DILocation(line: 3237, column: 265, scope: !12131)
!12141 = !DILocation(line: 3237, column: 275, scope: !12131)
!12142 = !DILocation(line: 3237, column: 300, scope: !12131)
!12143 = !DILocation(line: 3237, column: 231, scope: !12131)
!12144 = !DILocation(line: 3237, column: 319, scope: !12145)
!12145 = !DILexicalBlockFile(scope: !2152, file: !408, discriminator: 7)
!12146 = !DILocation(line: 3237, column: 319, scope: !2151)
!12147 = !DILocation(line: 3237, column: 319, scope: !12148)
!12148 = !DILexicalBlockFile(scope: !2151, file: !408, discriminator: 8)
!12149 = !DILocation(line: 3237, column: 332, scope: !12150)
!12150 = !DILexicalBlockFile(scope: !2152, file: !408, discriminator: 9)
!12151 = !DILocation(line: 3237, column: 334, scope: !12152)
!12152 = !DILexicalBlockFile(scope: !12153, file: !408, discriminator: 10)
!12153 = !DILexicalBlockFile(scope: !2148, file: !408, discriminator: 3)
!12154 = !DILocation(line: 3237, column: 334, scope: !2147)
!12155 = !DILocation(line: 3237, column: 334, scope: !12156)
!12156 = !DILexicalBlockFile(scope: !2147, file: !408, discriminator: 11)
!12157 = !DILocation(line: 3238, column: 9, scope: !2148)
!12158 = !DILocation(line: 3238, column: 14, scope: !12159)
!12159 = !DILexicalBlockFile(scope: !2155, file: !408, discriminator: 1)
!12160 = !DILocation(line: 3238, column: 24, scope: !2155)
!12161 = !DILocation(line: 3238, column: 47, scope: !2155)
!12162 = !DILocation(line: 3238, column: 56, scope: !2155)
!12163 = !DILocation(line: 3238, column: 68, scope: !2159)
!12164 = !DILocation(line: 3238, column: 76, scope: !2159)
!12165 = !DILocation(line: 3238, column: 68, scope: !2155)
!12166 = !DILocation(line: 3238, column: 94, scope: !12167)
!12167 = !DILexicalBlockFile(scope: !2158, file: !408, discriminator: 2)
!12168 = !DILocation(line: 3238, column: 103, scope: !2158)
!12169 = !DILocation(line: 3238, column: 110, scope: !2158)
!12170 = !DILocation(line: 3238, column: 124, scope: !2158)
!12171 = !DILocation(line: 3238, column: 129, scope: !12172)
!12172 = !DILexicalBlockFile(scope: !2157, file: !408, discriminator: 4)
!12173 = !DILocation(line: 3238, column: 139, scope: !2157)
!12174 = !DILocation(line: 3238, column: 169, scope: !2157)
!12175 = !DILocation(line: 3238, column: 187, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !2157, file: !408, line: 3238, column: 184)
!12177 = !DILocation(line: 3238, column: 204, scope: !12176)
!12178 = !DILocation(line: 3238, column: 184, scope: !12176)
!12179 = !DILocation(line: 3238, column: 214, scope: !12176)
!12180 = !DILocation(line: 3238, column: 184, scope: !2157)
!12181 = !DILocation(line: 3238, column: 184, scope: !12182)
!12182 = !DILexicalBlockFile(scope: !2157, file: !408, discriminator: 5)
!12183 = !DILocation(line: 3238, column: 245, scope: !12184)
!12184 = !DILexicalBlockFile(scope: !12176, file: !408, discriminator: 6)
!12185 = !DILocation(line: 3238, column: 263, scope: !12176)
!12186 = !DILocation(line: 3238, column: 273, scope: !12176)
!12187 = !DILocation(line: 3238, column: 298, scope: !12176)
!12188 = !DILocation(line: 3238, column: 229, scope: !12176)
!12189 = !DILocation(line: 3238, column: 317, scope: !12190)
!12190 = !DILexicalBlockFile(scope: !2158, file: !408, discriminator: 7)
!12191 = !DILocation(line: 3238, column: 317, scope: !2157)
!12192 = !DILocation(line: 3238, column: 317, scope: !12193)
!12193 = !DILexicalBlockFile(scope: !2157, file: !408, discriminator: 8)
!12194 = !DILocation(line: 3238, column: 330, scope: !12195)
!12195 = !DILexicalBlockFile(scope: !2158, file: !408, discriminator: 9)
!12196 = !DILocation(line: 3238, column: 332, scope: !12152)
!12197 = !DILocation(line: 3238, column: 332, scope: !2155)
!12198 = !DILocation(line: 3238, column: 332, scope: !12199)
!12199 = !DILexicalBlockFile(scope: !2155, file: !408, discriminator: 11)
!12200 = !DILocation(line: 3239, column: 9, scope: !2148)
!12201 = !DILocation(line: 3240, column: 9, scope: !2148)
!12202 = !DILocation(line: 3243, column: 9, scope: !2165)
!12203 = !DILocation(line: 3243, column: 9, scope: !2129)
!12204 = !DILocation(line: 3244, column: 25, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !2165, file: !408, line: 3243, column: 17)
!12206 = !DILocation(line: 3244, column: 35, scope: !12205)
!12207 = !DILocation(line: 3244, column: 44, scope: !12205)
!12208 = !DILocation(line: 3245, column: 5, scope: !12205)
!12209 = !DILocation(line: 3246, column: 18, scope: !2164)
!12210 = !DILocation(line: 3246, column: 16, scope: !2164)
!12211 = !DILocation(line: 3247, column: 14, scope: !2163)
!12212 = !DILocation(line: 3247, column: 13, scope: !2164)
!12213 = !DILocation(line: 3248, column: 13, scope: !2162)
!12214 = !DILocation(line: 3248, column: 18, scope: !12215)
!12215 = !DILexicalBlockFile(scope: !2161, file: !408, discriminator: 1)
!12216 = !DILocation(line: 3248, column: 28, scope: !2161)
!12217 = !DILocation(line: 3248, column: 51, scope: !2161)
!12218 = !DILocation(line: 3248, column: 60, scope: !2161)
!12219 = !DILocation(line: 3248, column: 73, scope: !2169)
!12220 = !DILocation(line: 3248, column: 81, scope: !2169)
!12221 = !DILocation(line: 3248, column: 73, scope: !2161)
!12222 = !DILocation(line: 3248, column: 99, scope: !12223)
!12223 = !DILexicalBlockFile(scope: !2168, file: !408, discriminator: 2)
!12224 = !DILocation(line: 3248, column: 108, scope: !2168)
!12225 = !DILocation(line: 3248, column: 116, scope: !2168)
!12226 = !DILocation(line: 3248, column: 130, scope: !2168)
!12227 = !DILocation(line: 3248, column: 135, scope: !12228)
!12228 = !DILexicalBlockFile(scope: !2167, file: !408, discriminator: 4)
!12229 = !DILocation(line: 3248, column: 145, scope: !2167)
!12230 = !DILocation(line: 3248, column: 175, scope: !2167)
!12231 = !DILocation(line: 3248, column: 193, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !2167, file: !408, line: 3248, column: 190)
!12233 = !DILocation(line: 3248, column: 210, scope: !12232)
!12234 = !DILocation(line: 3248, column: 190, scope: !12232)
!12235 = !DILocation(line: 3248, column: 220, scope: !12232)
!12236 = !DILocation(line: 3248, column: 190, scope: !2167)
!12237 = !DILocation(line: 3248, column: 190, scope: !12238)
!12238 = !DILexicalBlockFile(scope: !2167, file: !408, discriminator: 5)
!12239 = !DILocation(line: 3248, column: 251, scope: !12240)
!12240 = !DILexicalBlockFile(scope: !12232, file: !408, discriminator: 6)
!12241 = !DILocation(line: 3248, column: 269, scope: !12232)
!12242 = !DILocation(line: 3248, column: 279, scope: !12232)
!12243 = !DILocation(line: 3248, column: 304, scope: !12232)
!12244 = !DILocation(line: 3248, column: 235, scope: !12232)
!12245 = !DILocation(line: 3248, column: 323, scope: !12246)
!12246 = !DILexicalBlockFile(scope: !2168, file: !408, discriminator: 7)
!12247 = !DILocation(line: 3248, column: 323, scope: !2167)
!12248 = !DILocation(line: 3248, column: 323, scope: !12249)
!12249 = !DILexicalBlockFile(scope: !2167, file: !408, discriminator: 8)
!12250 = !DILocation(line: 3248, column: 336, scope: !12251)
!12251 = !DILexicalBlockFile(scope: !2168, file: !408, discriminator: 9)
!12252 = !DILocation(line: 3248, column: 338, scope: !12253)
!12253 = !DILexicalBlockFile(scope: !12254, file: !408, discriminator: 10)
!12254 = !DILexicalBlockFile(scope: !2162, file: !408, discriminator: 3)
!12255 = !DILocation(line: 3248, column: 338, scope: !2161)
!12256 = !DILocation(line: 3248, column: 338, scope: !12257)
!12257 = !DILexicalBlockFile(scope: !2161, file: !408, discriminator: 11)
!12258 = !DILocation(line: 3249, column: 13, scope: !2162)
!12259 = !DILocation(line: 3249, column: 18, scope: !12260)
!12260 = !DILexicalBlockFile(scope: !2171, file: !408, discriminator: 1)
!12261 = !DILocation(line: 3249, column: 28, scope: !2171)
!12262 = !DILocation(line: 3249, column: 51, scope: !2171)
!12263 = !DILocation(line: 3249, column: 60, scope: !2171)
!12264 = !DILocation(line: 3249, column: 72, scope: !2175)
!12265 = !DILocation(line: 3249, column: 80, scope: !2175)
!12266 = !DILocation(line: 3249, column: 72, scope: !2171)
!12267 = !DILocation(line: 3249, column: 98, scope: !12268)
!12268 = !DILexicalBlockFile(scope: !2174, file: !408, discriminator: 2)
!12269 = !DILocation(line: 3249, column: 107, scope: !2174)
!12270 = !DILocation(line: 3249, column: 114, scope: !2174)
!12271 = !DILocation(line: 3249, column: 128, scope: !2174)
!12272 = !DILocation(line: 3249, column: 133, scope: !12273)
!12273 = !DILexicalBlockFile(scope: !2173, file: !408, discriminator: 4)
!12274 = !DILocation(line: 3249, column: 143, scope: !2173)
!12275 = !DILocation(line: 3249, column: 173, scope: !2173)
!12276 = !DILocation(line: 3249, column: 191, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !2173, file: !408, line: 3249, column: 188)
!12278 = !DILocation(line: 3249, column: 208, scope: !12277)
!12279 = !DILocation(line: 3249, column: 188, scope: !12277)
!12280 = !DILocation(line: 3249, column: 218, scope: !12277)
!12281 = !DILocation(line: 3249, column: 188, scope: !2173)
!12282 = !DILocation(line: 3249, column: 188, scope: !12283)
!12283 = !DILexicalBlockFile(scope: !2173, file: !408, discriminator: 5)
!12284 = !DILocation(line: 3249, column: 249, scope: !12285)
!12285 = !DILexicalBlockFile(scope: !12277, file: !408, discriminator: 6)
!12286 = !DILocation(line: 3249, column: 267, scope: !12277)
!12287 = !DILocation(line: 3249, column: 277, scope: !12277)
!12288 = !DILocation(line: 3249, column: 302, scope: !12277)
!12289 = !DILocation(line: 3249, column: 233, scope: !12277)
!12290 = !DILocation(line: 3249, column: 321, scope: !12291)
!12291 = !DILexicalBlockFile(scope: !2174, file: !408, discriminator: 7)
!12292 = !DILocation(line: 3249, column: 321, scope: !2173)
!12293 = !DILocation(line: 3249, column: 321, scope: !12294)
!12294 = !DILexicalBlockFile(scope: !2173, file: !408, discriminator: 8)
!12295 = !DILocation(line: 3249, column: 334, scope: !12296)
!12296 = !DILexicalBlockFile(scope: !2174, file: !408, discriminator: 9)
!12297 = !DILocation(line: 3249, column: 336, scope: !12253)
!12298 = !DILocation(line: 3249, column: 336, scope: !2171)
!12299 = !DILocation(line: 3249, column: 336, scope: !12300)
!12300 = !DILexicalBlockFile(scope: !2171, file: !408, discriminator: 11)
!12301 = !DILocation(line: 3250, column: 14, scope: !2162)
!12302 = !DILocation(line: 3250, column: 26, scope: !2162)
!12303 = !DILocation(line: 3250, column: 38, scope: !2162)
!12304 = !DILocation(line: 3250, column: 47, scope: !2162)
!12305 = !DILocation(line: 3250, column: 13, scope: !2162)
!12306 = !DILocation(line: 3251, column: 13, scope: !2162)
!12307 = !DILocation(line: 3254, column: 23, scope: !2129)
!12308 = !DILocation(line: 3254, column: 5, scope: !2129)
!12309 = !DILocation(line: 3254, column: 14, scope: !2129)
!12310 = !DILocation(line: 3254, column: 21, scope: !2129)
!12311 = !DILocation(line: 3256, column: 52, scope: !2129)
!12312 = !DILocation(line: 3256, column: 29, scope: !2129)
!12313 = !DILocation(line: 3256, column: 5, scope: !2129)
!12314 = !DILocation(line: 3256, column: 14, scope: !2129)
!12315 = !DILocation(line: 3256, column: 27, scope: !2129)
!12316 = !DILocation(line: 3257, column: 51, scope: !2129)
!12317 = !DILocation(line: 3257, column: 28, scope: !2129)
!12318 = !DILocation(line: 3257, column: 5, scope: !2129)
!12319 = !DILocation(line: 3257, column: 14, scope: !2129)
!12320 = !DILocation(line: 3257, column: 26, scope: !2129)
!12321 = !DILocation(line: 3258, column: 50, scope: !2129)
!12322 = !DILocation(line: 3258, column: 27, scope: !2129)
!12323 = !DILocation(line: 3258, column: 5, scope: !2129)
!12324 = !DILocation(line: 3258, column: 14, scope: !2129)
!12325 = !DILocation(line: 3258, column: 25, scope: !2129)
!12326 = !DILocation(line: 3259, column: 54, scope: !2129)
!12327 = !DILocation(line: 3259, column: 31, scope: !2129)
!12328 = !DILocation(line: 3259, column: 5, scope: !2129)
!12329 = !DILocation(line: 3259, column: 14, scope: !2129)
!12330 = !DILocation(line: 3259, column: 29, scope: !2129)
!12331 = !DILocation(line: 3260, column: 49, scope: !2129)
!12332 = !DILocation(line: 3260, column: 26, scope: !2129)
!12333 = !DILocation(line: 3260, column: 5, scope: !2129)
!12334 = !DILocation(line: 3260, column: 14, scope: !2129)
!12335 = !DILocation(line: 3260, column: 24, scope: !2129)
!12336 = !DILocation(line: 3261, column: 52, scope: !2129)
!12337 = !DILocation(line: 3261, column: 29, scope: !2129)
!12338 = !DILocation(line: 3261, column: 5, scope: !2129)
!12339 = !DILocation(line: 3261, column: 14, scope: !2129)
!12340 = !DILocation(line: 3261, column: 27, scope: !2129)
!12341 = !DILocation(line: 3262, column: 54, scope: !2129)
!12342 = !DILocation(line: 3262, column: 31, scope: !2129)
!12343 = !DILocation(line: 3262, column: 5, scope: !2129)
!12344 = !DILocation(line: 3262, column: 14, scope: !2129)
!12345 = !DILocation(line: 3262, column: 29, scope: !2129)
!12346 = !DILocation(line: 3264, column: 5, scope: !2129)
!12347 = !DILocation(line: 3267, column: 6, scope: !2129)
!12348 = !DILocation(line: 3267, column: 18, scope: !2129)
!12349 = !{!2752, !2621, i64 136}
!12350 = !DILocation(line: 3267, column: 31, scope: !2129)
!12351 = !DILocation(line: 3267, column: 40, scope: !2129)
!12352 = !DILocation(line: 3267, column: 48, scope: !2129)
!12353 = !DILocation(line: 3267, column: 5, scope: !2129)
!12354 = !DILocation(line: 3268, column: 6, scope: !2129)
!12355 = !DILocation(line: 3268, column: 18, scope: !2129)
!12356 = !{!2752, !2621, i64 104}
!12357 = !DILocation(line: 3269, column: 9, scope: !2129)
!12358 = !DILocation(line: 3269, column: 18, scope: !2129)
!12359 = !DILocation(line: 3268, column: 5, scope: !2129)
!12360 = !DILocation(line: 3273, column: 6, scope: !2129)
!12361 = !DILocation(line: 3273, column: 18, scope: !2129)
!12362 = !{!2752, !2621, i64 96}
!12363 = !DILocation(line: 3274, column: 9, scope: !2129)
!12364 = !DILocation(line: 3274, column: 18, scope: !2129)
!12365 = !DILocation(line: 3273, column: 5, scope: !2129)
!12366 = !DILocation(line: 3277, column: 6, scope: !2129)
!12367 = !DILocation(line: 3277, column: 18, scope: !2129)
!12368 = !{!2752, !2621, i64 80}
!12369 = !DILocation(line: 3278, column: 9, scope: !2129)
!12370 = !DILocation(line: 3278, column: 18, scope: !2129)
!12371 = !DILocation(line: 3277, column: 5, scope: !2129)
!12372 = !DILocation(line: 3281, column: 9, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !2129, file: !408, line: 3281, column: 9)
!12374 = !DILocation(line: 3281, column: 18, scope: !12373)
!12375 = !DILocation(line: 3281, column: 9, scope: !2129)
!12376 = !DILocation(line: 3282, column: 10, scope: !12373)
!12377 = !DILocation(line: 3282, column: 22, scope: !12373)
!12378 = !{!2752, !2621, i64 88}
!12379 = !DILocation(line: 3283, column: 13, scope: !12373)
!12380 = !DILocation(line: 3283, column: 22, scope: !12373)
!12381 = !DILocation(line: 3282, column: 9, scope: !12373)
!12382 = !DILocation(line: 3286, column: 9, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !2129, file: !408, line: 3286, column: 9)
!12384 = !DILocation(line: 3286, column: 18, scope: !12383)
!12385 = !DILocation(line: 3286, column: 9, scope: !2129)
!12386 = !DILocation(line: 3287, column: 10, scope: !12383)
!12387 = !DILocation(line: 3287, column: 22, scope: !12383)
!12388 = !{!2752, !2621, i64 120}
!12389 = !DILocation(line: 3288, column: 13, scope: !12383)
!12390 = !DILocation(line: 3288, column: 22, scope: !12383)
!12391 = !DILocation(line: 3287, column: 9, scope: !12383)
!12392 = !DILocation(line: 3291, column: 6, scope: !2129)
!12393 = !DILocation(line: 3291, column: 18, scope: !2129)
!12394 = !{!2752, !2621, i64 144}
!12395 = !DILocation(line: 3292, column: 9, scope: !2129)
!12396 = !DILocation(line: 3292, column: 18, scope: !2129)
!12397 = !DILocation(line: 3291, column: 5, scope: !2129)
!12398 = !DILocation(line: 3295, column: 6, scope: !2129)
!12399 = !DILocation(line: 3295, column: 18, scope: !2129)
!12400 = !{!2752, !2621, i64 128}
!12401 = !DILocation(line: 3296, column: 9, scope: !2129)
!12402 = !DILocation(line: 3296, column: 18, scope: !2129)
!12403 = !DILocation(line: 3297, column: 10, scope: !2129)
!12404 = !DILocation(line: 3297, column: 22, scope: !2129)
!12405 = !{!2752, !2621, i64 160}
!12406 = !DILocation(line: 3295, column: 5, scope: !2129)
!12407 = !DILocation(line: 3300, column: 5, scope: !2129)
!12408 = !DILocation(line: 3301, column: 1, scope: !2129)
!12409 = !DILocation(line: 3199, column: 29, scope: !2421)
!12410 = !DILocation(line: 3199, column: 45, scope: !2421)
!12411 = !DILocation(line: 3199, column: 61, scope: !2421)
!12412 = !DILocation(line: 3201, column: 5, scope: !2421)
!12413 = !DILocation(line: 3201, column: 22, scope: !2421)
!12414 = !DILocation(line: 3201, column: 48, scope: !2421)
!12415 = !DILocation(line: 3201, column: 54, scope: !2421)
!12416 = !DILocation(line: 3201, column: 63, scope: !2421)
!12417 = !DILocation(line: 3201, column: 29, scope: !2421)
!12418 = !DILocation(line: 3202, column: 9, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !2421, file: !408, line: 3202, column: 9)
!12420 = !DILocation(line: 3202, column: 9, scope: !2421)
!12421 = !DILocation(line: 3203, column: 9, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12419, file: !408, line: 3202, column: 15)
!12423 = !DILocation(line: 3203, column: 15, scope: !12422)
!12424 = !DILocation(line: 3203, column: 22, scope: !12422)
!12425 = !DILocation(line: 3204, column: 39, scope: !12422)
!12426 = !DILocation(line: 3204, column: 45, scope: !12422)
!12427 = !DILocation(line: 3204, column: 51, scope: !12422)
!12428 = !DILocation(line: 3204, column: 24, scope: !12422)
!12429 = !DILocation(line: 3204, column: 30, scope: !12422)
!12430 = !DILocation(line: 3204, column: 37, scope: !12422)
!12431 = !DILocation(line: 3204, column: 9, scope: !12422)
!12432 = !DILocation(line: 3204, column: 15, scope: !12422)
!12433 = !DILocation(line: 3204, column: 22, scope: !12422)
!12434 = !DILocation(line: 3205, column: 50, scope: !12422)
!12435 = !DILocation(line: 3205, column: 56, scope: !12422)
!12436 = !DILocation(line: 3205, column: 67, scope: !12422)
!12437 = !DILocation(line: 3205, column: 30, scope: !12422)
!12438 = !DILocation(line: 3205, column: 36, scope: !12422)
!12439 = !DILocation(line: 3205, column: 48, scope: !12422)
!12440 = !DILocation(line: 3205, column: 9, scope: !12422)
!12441 = !DILocation(line: 3205, column: 15, scope: !12422)
!12442 = !DILocation(line: 3205, column: 28, scope: !12422)
!12443 = !DILocation(line: 3206, column: 50, scope: !12422)
!12444 = !DILocation(line: 3206, column: 56, scope: !12422)
!12445 = !DILocation(line: 3206, column: 69, scope: !12422)
!12446 = !DILocation(line: 3206, column: 32, scope: !12422)
!12447 = !DILocation(line: 3206, column: 38, scope: !12422)
!12448 = !DILocation(line: 3206, column: 48, scope: !12422)
!12449 = !DILocation(line: 3206, column: 9, scope: !12422)
!12450 = !DILocation(line: 3206, column: 15, scope: !12422)
!12451 = !DILocation(line: 3206, column: 30, scope: !12422)
!12452 = !DILocation(line: 3207, column: 9, scope: !12422)
!12453 = !DILocation(line: 3207, column: 15, scope: !12422)
!12454 = !DILocation(line: 3207, column: 30, scope: !12422)
!12455 = !DILocation(line: 3208, column: 5, scope: !12422)
!12456 = !DILocation(line: 3209, column: 24, scope: !2421)
!12457 = !DILocation(line: 3209, column: 12, scope: !2421)
!12458 = !DILocation(line: 3210, column: 1, scope: !2421)
!12459 = !DILocation(line: 3209, column: 5, scope: !2421)
!12460 = !DILocation(line: 3399, column: 33, scope: !1863)
!12461 = !DILocation(line: 3399, column: 49, scope: !1863)
!12462 = !DILocation(line: 3403, column: 26, scope: !1869)
!12463 = !DILocation(line: 3403, column: 33, scope: !1869)
!12464 = !DILocation(line: 3403, column: 44, scope: !1869)
!12465 = !DILocation(line: 3403, column: 53, scope: !1869)
!12466 = !DILocation(line: 3403, column: 70, scope: !1869)
!12467 = !DILocation(line: 3403, column: 9, scope: !1863)
!12468 = !DILocation(line: 3404, column: 9, scope: !1868)
!12469 = !DILocation(line: 3404, column: 20, scope: !1868)
!12470 = !DILocation(line: 3405, column: 9, scope: !1868)
!12471 = !DILocation(line: 3405, column: 21, scope: !1868)
!12472 = !DILocation(line: 3405, column: 52, scope: !1868)
!12473 = !DILocation(line: 3405, column: 28, scope: !1868)
!12474 = !DILocation(line: 3406, column: 13, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !1868, file: !408, line: 3406, column: 13)
!12476 = !DILocation(line: 3406, column: 18, scope: !12475)
!12477 = !DILocation(line: 3406, column: 13, scope: !1868)
!12478 = !DILocation(line: 3407, column: 13, scope: !12475)
!12479 = !DILocation(line: 3408, column: 13, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !1868, file: !408, line: 3408, column: 13)
!12481 = !DILocation(line: 3408, column: 22, scope: !12480)
!12482 = !DILocation(line: 3408, column: 13, scope: !1868)
!12483 = !DILocation(line: 3409, column: 29, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12480, file: !408, line: 3408, column: 36)
!12485 = !DILocation(line: 3409, column: 13, scope: !12484)
!12486 = !DILocation(line: 3410, column: 13, scope: !12484)
!12487 = !DILocation(line: 3413, column: 16, scope: !1868)
!12488 = !DILocation(line: 3413, column: 28, scope: !1868)
!12489 = !{!2752, !2621, i64 152}
!12490 = !DILocation(line: 3413, column: 41, scope: !1868)
!12491 = !DILocation(line: 3413, column: 47, scope: !1868)
!12492 = !DILocation(line: 3413, column: 15, scope: !1868)
!12493 = !DILocation(line: 3414, column: 28, scope: !1868)
!12494 = !DILocation(line: 3414, column: 34, scope: !1868)
!12495 = !DILocation(line: 3414, column: 45, scope: !1868)
!12496 = !DILocation(line: 3414, column: 40, scope: !1868)
!12497 = !DILocation(line: 3414, column: 16, scope: !1868)
!12498 = !DILocation(line: 3414, column: 9, scope: !1868)
!12499 = !DILocation(line: 3415, column: 5, scope: !1869)
!12500 = !DILocation(line: 3417, column: 9, scope: !1872)
!12501 = !DILocation(line: 3417, column: 19, scope: !1872)
!12502 = !DILocation(line: 3418, column: 9, scope: !1872)
!12503 = !DILocation(line: 3418, column: 19, scope: !1872)
!12504 = !DILocation(line: 3419, column: 32, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !1872, file: !408, line: 3419, column: 13)
!12506 = !DILocation(line: 3419, column: 13, scope: !12505)
!12507 = !DILocation(line: 3419, column: 47, scope: !12505)
!12508 = !DILocation(line: 3419, column: 13, scope: !1872)
!12509 = !DILocation(line: 3420, column: 13, scope: !12505)
!12510 = !DILocation(line: 3421, column: 18, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !1872, file: !408, line: 3421, column: 13)
!12512 = !{!12513, !2633, i64 16}
!12513 = !{!"bufferinfo", !2621, i64 0, !2621, i64 8, !2633, i64 16, !2633, i64 24, !2708, i64 32, !2708, i64 36, !2621, i64 40, !2621, i64 48, !2621, i64 56, !2621, i64 64, !2621, i64 72}
!12514 = !DILocation(line: 3421, column: 22, scope: !12511)
!12515 = !DILocation(line: 3421, column: 13, scope: !1872)
!12516 = !DILocation(line: 3422, column: 13, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12511, file: !408, line: 3421, column: 36)
!12518 = !DILocation(line: 3423, column: 29, scope: !12517)
!12519 = !DILocation(line: 3423, column: 13, scope: !12517)
!12520 = !DILocation(line: 3424, column: 13, scope: !12517)
!12521 = !DILocation(line: 3426, column: 27, scope: !1872)
!12522 = !DILocation(line: 3426, column: 38, scope: !1872)
!12523 = !{!12513, !2621, i64 0}
!12524 = !DILocation(line: 3426, column: 53, scope: !1872)
!12525 = !DILocation(line: 3426, column: 43, scope: !1872)
!12526 = !DILocation(line: 3426, column: 15, scope: !1872)
!12527 = !DILocation(line: 3426, column: 13, scope: !1872)
!12528 = !DILocation(line: 3427, column: 9, scope: !1872)
!12529 = !DILocation(line: 3428, column: 16, scope: !1872)
!12530 = !DILocation(line: 3428, column: 9, scope: !1872)
!12531 = !DILocation(line: 3429, column: 5, scope: !1869)
!12532 = !DILocation(line: 3430, column: 1, scope: !1863)
!12533 = !DILocation(line: 3373, column: 34, scope: !1924)
!12534 = !DILocation(line: 3373, column: 50, scope: !1924)
!12535 = !DILocation(line: 3377, column: 5, scope: !1924)
!12536 = !DILocation(line: 3377, column: 15, scope: !1924)
!12537 = !DILocation(line: 3378, column: 27, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !1924, file: !408, line: 3378, column: 9)
!12539 = !DILocation(line: 3378, column: 10, scope: !12538)
!12540 = !DILocation(line: 3378, column: 9, scope: !1924)
!12541 = !DILocation(line: 3379, column: 9, scope: !12538)
!12542 = !DILocation(line: 3381, column: 23, scope: !1924)
!12543 = !DILocation(line: 3381, column: 11, scope: !1924)
!12544 = !DILocation(line: 3381, column: 9, scope: !1924)
!12545 = !DILocation(line: 3382, column: 10, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !1924, file: !408, line: 3382, column: 9)
!12547 = !DILocation(line: 3382, column: 9, scope: !1924)
!12548 = !DILocation(line: 3383, column: 9, scope: !12546)
!12549 = !DILocation(line: 3385, column: 24, scope: !1932)
!12550 = !DILocation(line: 3385, column: 30, scope: !1932)
!12551 = !DILocation(line: 3385, column: 40, scope: !1932)
!12552 = !DILocation(line: 3385, column: 49, scope: !1932)
!12553 = !DILocation(line: 3385, column: 9, scope: !1924)
!12554 = !DILocation(line: 3386, column: 9, scope: !1931)
!12555 = !DILocation(line: 3386, column: 14, scope: !12556)
!12556 = !DILexicalBlockFile(scope: !1930, file: !408, discriminator: 1)
!12557 = !DILocation(line: 3386, column: 24, scope: !1930)
!12558 = !DILocation(line: 3386, column: 54, scope: !1930)
!12559 = !DILocation(line: 3386, column: 68, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !1930, file: !408, line: 3386, column: 65)
!12561 = !DILocation(line: 3386, column: 85, scope: !12560)
!12562 = !DILocation(line: 3386, column: 65, scope: !12560)
!12563 = !DILocation(line: 3386, column: 95, scope: !12560)
!12564 = !DILocation(line: 3386, column: 65, scope: !1930)
!12565 = !DILocation(line: 3386, column: 65, scope: !12566)
!12566 = !DILexicalBlockFile(scope: !1930, file: !408, discriminator: 2)
!12567 = !DILocation(line: 3386, column: 126, scope: !12568)
!12568 = !DILexicalBlockFile(scope: !12560, file: !408, discriminator: 3)
!12569 = !DILocation(line: 3386, column: 144, scope: !12560)
!12570 = !DILocation(line: 3386, column: 154, scope: !12560)
!12571 = !DILocation(line: 3386, column: 179, scope: !12560)
!12572 = !DILocation(line: 3386, column: 110, scope: !12560)
!12573 = !DILocation(line: 3386, column: 198, scope: !12574)
!12574 = !DILexicalBlockFile(scope: !1931, file: !408, discriminator: 4)
!12575 = !DILocation(line: 3386, column: 198, scope: !1930)
!12576 = !DILocation(line: 3386, column: 198, scope: !12577)
!12577 = !DILexicalBlockFile(scope: !1930, file: !408, discriminator: 5)
!12578 = !DILocation(line: 3387, column: 54, scope: !1931)
!12579 = !DILocation(line: 3387, column: 60, scope: !1931)
!12580 = !DILocation(line: 3387, column: 33, scope: !1931)
!12581 = !DILocation(line: 3387, column: 16, scope: !1931)
!12582 = !DILocation(line: 3387, column: 9, scope: !1931)
!12583 = !DILocation(line: 3389, column: 14, scope: !1936)
!12584 = !DILocation(line: 3389, column: 20, scope: !1936)
!12585 = !DILocation(line: 3389, column: 14, scope: !1932)
!12586 = !DILocation(line: 3390, column: 9, scope: !1935)
!12587 = !DILocation(line: 3390, column: 14, scope: !12588)
!12588 = !DILexicalBlockFile(scope: !1934, file: !408, discriminator: 1)
!12589 = !DILocation(line: 3390, column: 24, scope: !1934)
!12590 = !DILocation(line: 3390, column: 54, scope: !1934)
!12591 = !DILocation(line: 3390, column: 68, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !1934, file: !408, line: 3390, column: 65)
!12593 = !DILocation(line: 3390, column: 85, scope: !12592)
!12594 = !DILocation(line: 3390, column: 65, scope: !12592)
!12595 = !DILocation(line: 3390, column: 95, scope: !12592)
!12596 = !DILocation(line: 3390, column: 65, scope: !1934)
!12597 = !DILocation(line: 3390, column: 65, scope: !12598)
!12598 = !DILexicalBlockFile(scope: !1934, file: !408, discriminator: 2)
!12599 = !DILocation(line: 3390, column: 126, scope: !12600)
!12600 = !DILexicalBlockFile(scope: !12592, file: !408, discriminator: 3)
!12601 = !DILocation(line: 3390, column: 144, scope: !12592)
!12602 = !DILocation(line: 3390, column: 154, scope: !12592)
!12603 = !DILocation(line: 3390, column: 179, scope: !12592)
!12604 = !DILocation(line: 3390, column: 110, scope: !12592)
!12605 = !DILocation(line: 3390, column: 198, scope: !12606)
!12606 = !DILexicalBlockFile(scope: !1935, file: !408, discriminator: 4)
!12607 = !DILocation(line: 3390, column: 198, scope: !1934)
!12608 = !DILocation(line: 3390, column: 198, scope: !12609)
!12609 = !DILexicalBlockFile(scope: !1934, file: !408, discriminator: 5)
!12610 = !DILocation(line: 3391, column: 38, scope: !1935)
!12611 = !DILocation(line: 3391, column: 44, scope: !1935)
!12612 = !DILocation(line: 3391, column: 16, scope: !1935)
!12613 = !DILocation(line: 3391, column: 9, scope: !1935)
!12614 = !DILocation(line: 3394, column: 16, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !1936, file: !408, line: 3393, column: 10)
!12616 = !DILocation(line: 3394, column: 9, scope: !12615)
!12617 = !DILocation(line: 3396, column: 1, scope: !1924)
!12618 = !DILocation(line: 3433, column: 40, scope: !1937)
!12619 = !DILocation(line: 3433, column: 56, scope: !1937)
!12620 = !DILocation(line: 3436, column: 5, scope: !1937)
!12621 = !DILocation(line: 3436, column: 15, scope: !1937)
!12622 = !DILocation(line: 3437, column: 5, scope: !1937)
!12623 = !DILocation(line: 3437, column: 15, scope: !1937)
!12624 = !DILocation(line: 3438, column: 5, scope: !1937)
!12625 = !DILocation(line: 3438, column: 15, scope: !1937)
!12626 = !DILocation(line: 3439, column: 5, scope: !1937)
!12627 = !DILocation(line: 3439, column: 15, scope: !1937)
!12628 = !DILocation(line: 3441, column: 5, scope: !1937)
!12629 = !DILocation(line: 3441, column: 15, scope: !1937)
!12630 = !DILocation(line: 3442, column: 27, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !1937, file: !408, line: 3442, column: 9)
!12632 = !DILocation(line: 3442, column: 10, scope: !12631)
!12633 = !DILocation(line: 3442, column: 9, scope: !1937)
!12634 = !DILocation(line: 3443, column: 9, scope: !12631)
!12635 = !DILocation(line: 3445, column: 37, scope: !1937)
!12636 = !DILocation(line: 3445, column: 14, scope: !1937)
!12637 = !DILocation(line: 3445, column: 12, scope: !1937)
!12638 = !DILocation(line: 3446, column: 10, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !1937, file: !408, line: 3446, column: 9)
!12640 = !DILocation(line: 3446, column: 9, scope: !1937)
!12641 = !DILocation(line: 3447, column: 9, scope: !12639)
!12642 = !DILocation(line: 3450, column: 5, scope: !1937)
!12643 = !DILocation(line: 3452, column: 40, scope: !1950)
!12644 = !DILocation(line: 3452, column: 18, scope: !1950)
!12645 = !DILocation(line: 3452, column: 16, scope: !1950)
!12646 = !DILocation(line: 3454, column: 14, scope: !1949)
!12647 = !DILocation(line: 3454, column: 13, scope: !1950)
!12648 = !DILocation(line: 3456, column: 13, scope: !1948)
!12649 = !DILocation(line: 3456, column: 18, scope: !12650)
!12650 = !DILexicalBlockFile(scope: !1947, file: !408, discriminator: 1)
!12651 = !DILocation(line: 3456, column: 28, scope: !1947)
!12652 = !DILocation(line: 3456, column: 58, scope: !1947)
!12653 = !DILocation(line: 3456, column: 75, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !1947, file: !408, line: 3456, column: 72)
!12655 = !DILocation(line: 3456, column: 92, scope: !12654)
!12656 = !DILocation(line: 3456, column: 72, scope: !12654)
!12657 = !DILocation(line: 3456, column: 102, scope: !12654)
!12658 = !DILocation(line: 3456, column: 72, scope: !1947)
!12659 = !DILocation(line: 3456, column: 72, scope: !12660)
!12660 = !DILexicalBlockFile(scope: !1947, file: !408, discriminator: 2)
!12661 = !DILocation(line: 3456, column: 133, scope: !12662)
!12662 = !DILexicalBlockFile(scope: !12654, file: !408, discriminator: 3)
!12663 = !DILocation(line: 3456, column: 151, scope: !12654)
!12664 = !DILocation(line: 3456, column: 161, scope: !12654)
!12665 = !DILocation(line: 3456, column: 186, scope: !12654)
!12666 = !DILocation(line: 3456, column: 117, scope: !12654)
!12667 = !DILocation(line: 3456, column: 205, scope: !12668)
!12668 = !DILexicalBlockFile(scope: !1948, file: !408, discriminator: 4)
!12669 = !DILocation(line: 3456, column: 205, scope: !1947)
!12670 = !DILocation(line: 3456, column: 205, scope: !12671)
!12671 = !DILexicalBlockFile(scope: !1947, file: !408, discriminator: 5)
!12672 = !DILocation(line: 3457, column: 13, scope: !1948)
!12673 = !DILocation(line: 3460, column: 28, scope: !1958)
!12674 = !DILocation(line: 3460, column: 38, scope: !1958)
!12675 = !DILocation(line: 3460, column: 47, scope: !1958)
!12676 = !DILocation(line: 3460, column: 13, scope: !1950)
!12677 = !DILocation(line: 3462, column: 65, scope: !1956)
!12678 = !DILocation(line: 3462, column: 47, scope: !1956)
!12679 = !DILocation(line: 3462, column: 75, scope: !1956)
!12680 = !DILocation(line: 3462, column: 83, scope: !1956)
!12681 = !DILocation(line: 3462, column: 17, scope: !1957)
!12682 = !DILocation(line: 3463, column: 17, scope: !1955)
!12683 = !DILocation(line: 3463, column: 22, scope: !12684)
!12684 = !DILexicalBlockFile(scope: !1954, file: !408, discriminator: 1)
!12685 = !DILocation(line: 3463, column: 32, scope: !1954)
!12686 = !DILocation(line: 3463, column: 62, scope: !1954)
!12687 = !DILocation(line: 3463, column: 79, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !1954, file: !408, line: 3463, column: 76)
!12689 = !DILocation(line: 3463, column: 96, scope: !12688)
!12690 = !DILocation(line: 3463, column: 76, scope: !12688)
!12691 = !DILocation(line: 3463, column: 106, scope: !12688)
!12692 = !DILocation(line: 3463, column: 76, scope: !1954)
!12693 = !DILocation(line: 3463, column: 76, scope: !12694)
!12694 = !DILexicalBlockFile(scope: !1954, file: !408, discriminator: 2)
!12695 = !DILocation(line: 3463, column: 137, scope: !12696)
!12696 = !DILexicalBlockFile(scope: !12688, file: !408, discriminator: 3)
!12697 = !DILocation(line: 3463, column: 155, scope: !12688)
!12698 = !DILocation(line: 3463, column: 165, scope: !12688)
!12699 = !DILocation(line: 3463, column: 190, scope: !12688)
!12700 = !DILocation(line: 3463, column: 121, scope: !12688)
!12701 = !DILocation(line: 3463, column: 209, scope: !12702)
!12702 = !DILexicalBlockFile(scope: !1955, file: !408, discriminator: 4)
!12703 = !DILocation(line: 3463, column: 209, scope: !1954)
!12704 = !DILocation(line: 3463, column: 209, scope: !12705)
!12705 = !DILexicalBlockFile(scope: !1954, file: !408, discriminator: 5)
!12706 = !DILocation(line: 3464, column: 17, scope: !1955)
!12707 = !DILocation(line: 3466, column: 46, scope: !1957)
!12708 = !DILocation(line: 3466, column: 20, scope: !1957)
!12709 = !DILocation(line: 3466, column: 18, scope: !1957)
!12710 = !DILocation(line: 3467, column: 13, scope: !1957)
!12711 = !DILocation(line: 3467, column: 18, scope: !12712)
!12712 = !DILexicalBlockFile(scope: !1960, file: !408, discriminator: 1)
!12713 = !DILocation(line: 3467, column: 28, scope: !1960)
!12714 = !DILocation(line: 3467, column: 58, scope: !1960)
!12715 = !DILocation(line: 3467, column: 75, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !1960, file: !408, line: 3467, column: 72)
!12717 = !DILocation(line: 3467, column: 92, scope: !12716)
!12718 = !DILocation(line: 3467, column: 72, scope: !12716)
!12719 = !DILocation(line: 3467, column: 102, scope: !12716)
!12720 = !DILocation(line: 3467, column: 72, scope: !1960)
!12721 = !DILocation(line: 3467, column: 72, scope: !12722)
!12722 = !DILexicalBlockFile(scope: !1960, file: !408, discriminator: 2)
!12723 = !DILocation(line: 3467, column: 133, scope: !12724)
!12724 = !DILexicalBlockFile(scope: !12716, file: !408, discriminator: 3)
!12725 = !DILocation(line: 3467, column: 151, scope: !12716)
!12726 = !DILocation(line: 3467, column: 161, scope: !12716)
!12727 = !DILocation(line: 3467, column: 186, scope: !12716)
!12728 = !DILocation(line: 3467, column: 117, scope: !12716)
!12729 = !DILocation(line: 3467, column: 205, scope: !12730)
!12730 = !DILexicalBlockFile(scope: !1957, file: !408, discriminator: 4)
!12731 = !DILocation(line: 3467, column: 205, scope: !1960)
!12732 = !DILocation(line: 3467, column: 205, scope: !12733)
!12733 = !DILexicalBlockFile(scope: !1960, file: !408, discriminator: 5)
!12734 = !DILocation(line: 3468, column: 18, scope: !1964)
!12735 = !DILocation(line: 3468, column: 17, scope: !1957)
!12736 = !DILocation(line: 3470, column: 17, scope: !1963)
!12737 = !DILocation(line: 3470, column: 22, scope: !12738)
!12738 = !DILexicalBlockFile(scope: !1962, file: !408, discriminator: 1)
!12739 = !DILocation(line: 3470, column: 32, scope: !1962)
!12740 = !DILocation(line: 3470, column: 62, scope: !1962)
!12741 = !DILocation(line: 3470, column: 79, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !1962, file: !408, line: 3470, column: 76)
!12743 = !DILocation(line: 3470, column: 96, scope: !12742)
!12744 = !DILocation(line: 3470, column: 76, scope: !12742)
!12745 = !DILocation(line: 3470, column: 106, scope: !12742)
!12746 = !DILocation(line: 3470, column: 76, scope: !1962)
!12747 = !DILocation(line: 3470, column: 76, scope: !12748)
!12748 = !DILexicalBlockFile(scope: !1962, file: !408, discriminator: 2)
!12749 = !DILocation(line: 3470, column: 137, scope: !12750)
!12750 = !DILexicalBlockFile(scope: !12742, file: !408, discriminator: 3)
!12751 = !DILocation(line: 3470, column: 155, scope: !12742)
!12752 = !DILocation(line: 3470, column: 165, scope: !12742)
!12753 = !DILocation(line: 3470, column: 190, scope: !12742)
!12754 = !DILocation(line: 3470, column: 121, scope: !12742)
!12755 = !DILocation(line: 3470, column: 209, scope: !12756)
!12756 = !DILexicalBlockFile(scope: !1963, file: !408, discriminator: 4)
!12757 = !DILocation(line: 3470, column: 209, scope: !1962)
!12758 = !DILocation(line: 3470, column: 209, scope: !12759)
!12759 = !DILexicalBlockFile(scope: !1962, file: !408, discriminator: 5)
!12760 = !DILocation(line: 3471, column: 17, scope: !1963)
!12761 = !DILocation(line: 3473, column: 22, scope: !1957)
!12762 = !DILocation(line: 3473, column: 20, scope: !1957)
!12763 = !DILocation(line: 3474, column: 9, scope: !1957)
!12764 = !DILocation(line: 3475, column: 34, scope: !1968)
!12765 = !DILocation(line: 3475, column: 44, scope: !1968)
!12766 = !DILocation(line: 3475, column: 53, scope: !1968)
!12767 = !DILocation(line: 3475, column: 71, scope: !1968)
!12768 = !DILocation(line: 3475, column: 105, scope: !12769)
!12769 = !DILexicalBlockFile(scope: !1968, file: !408, discriminator: 1)
!12770 = !DILocation(line: 3475, column: 90, scope: !1968)
!12771 = !DILocation(line: 3475, column: 115, scope: !1968)
!12772 = !DILocation(line: 3475, column: 125, scope: !1968)
!12773 = !DILocation(line: 3475, column: 18, scope: !1958)
!12774 = !DILocation(line: 3476, column: 13, scope: !1967)
!12775 = !DILocation(line: 3476, column: 18, scope: !12776)
!12776 = !DILexicalBlockFile(scope: !1966, file: !408, discriminator: 1)
!12777 = !DILocation(line: 3476, column: 28, scope: !1966)
!12778 = !DILocation(line: 3476, column: 58, scope: !1966)
!12779 = !DILocation(line: 3476, column: 75, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !1966, file: !408, line: 3476, column: 72)
!12781 = !DILocation(line: 3476, column: 92, scope: !12780)
!12782 = !DILocation(line: 3476, column: 72, scope: !12780)
!12783 = !DILocation(line: 3476, column: 102, scope: !12780)
!12784 = !DILocation(line: 3476, column: 72, scope: !1966)
!12785 = !DILocation(line: 3476, column: 72, scope: !12786)
!12786 = !DILexicalBlockFile(scope: !1966, file: !408, discriminator: 2)
!12787 = !DILocation(line: 3476, column: 133, scope: !12788)
!12788 = !DILexicalBlockFile(scope: !12780, file: !408, discriminator: 3)
!12789 = !DILocation(line: 3476, column: 151, scope: !12780)
!12790 = !DILocation(line: 3476, column: 161, scope: !12780)
!12791 = !DILocation(line: 3476, column: 186, scope: !12780)
!12792 = !DILocation(line: 3476, column: 117, scope: !12780)
!12793 = !DILocation(line: 3476, column: 205, scope: !12794)
!12794 = !DILexicalBlockFile(scope: !1967, file: !408, discriminator: 4)
!12795 = !DILocation(line: 3476, column: 205, scope: !1966)
!12796 = !DILocation(line: 3476, column: 205, scope: !12797)
!12797 = !DILexicalBlockFile(scope: !1966, file: !408, discriminator: 5)
!12798 = !DILocation(line: 3477, column: 13, scope: !1967)
!12799 = !DILocation(line: 3481, column: 13, scope: !1950)
!12800 = !DILocation(line: 3481, column: 54, scope: !1950)
!12801 = !DILocation(line: 3481, column: 36, scope: !1950)
!12802 = !DILocation(line: 3481, column: 64, scope: !1950)
!12803 = !DILocation(line: 3481, column: 34, scope: !1950)
!12804 = !DILocation(line: 3481, column: 106, scope: !1950)
!12805 = !DILocation(line: 3481, column: 91, scope: !1950)
!12806 = !DILocation(line: 3481, column: 116, scope: !1950)
!12807 = !DILocation(line: 3481, column: 75, scope: !1950)
!12808 = !DILocation(line: 3480, column: 15, scope: !1950)
!12809 = !DILocation(line: 3480, column: 13, scope: !1950)
!12810 = !DILocation(line: 3484, column: 9, scope: !1950)
!12811 = !DILocation(line: 3484, column: 14, scope: !12812)
!12812 = !DILexicalBlockFile(scope: !1970, file: !408, discriminator: 1)
!12813 = !DILocation(line: 3484, column: 24, scope: !1970)
!12814 = !DILocation(line: 3484, column: 54, scope: !1970)
!12815 = !DILocation(line: 3484, column: 71, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !1970, file: !408, line: 3484, column: 68)
!12817 = !DILocation(line: 3484, column: 88, scope: !12816)
!12818 = !DILocation(line: 3484, column: 68, scope: !12816)
!12819 = !DILocation(line: 3484, column: 98, scope: !12816)
!12820 = !DILocation(line: 3484, column: 68, scope: !1970)
!12821 = !DILocation(line: 3484, column: 68, scope: !12822)
!12822 = !DILexicalBlockFile(scope: !1970, file: !408, discriminator: 2)
!12823 = !DILocation(line: 3484, column: 129, scope: !12824)
!12824 = !DILexicalBlockFile(scope: !12816, file: !408, discriminator: 3)
!12825 = !DILocation(line: 3484, column: 147, scope: !12816)
!12826 = !DILocation(line: 3484, column: 157, scope: !12816)
!12827 = !DILocation(line: 3484, column: 182, scope: !12816)
!12828 = !DILocation(line: 3484, column: 113, scope: !12816)
!12829 = !DILocation(line: 3484, column: 201, scope: !12830)
!12830 = !DILexicalBlockFile(scope: !1950, file: !408, discriminator: 4)
!12831 = !DILocation(line: 3484, column: 201, scope: !1970)
!12832 = !DILocation(line: 3484, column: 201, scope: !12833)
!12833 = !DILexicalBlockFile(scope: !1970, file: !408, discriminator: 5)
!12834 = !DILocation(line: 3486, column: 14, scope: !1974)
!12835 = !DILocation(line: 3486, column: 13, scope: !1950)
!12836 = !DILocation(line: 3487, column: 13, scope: !1973)
!12837 = !DILocation(line: 3487, column: 18, scope: !12838)
!12838 = !DILexicalBlockFile(scope: !1972, file: !408, discriminator: 1)
!12839 = !DILocation(line: 3487, column: 28, scope: !1972)
!12840 = !DILocation(line: 3487, column: 58, scope: !1972)
!12841 = !DILocation(line: 3487, column: 75, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !1972, file: !408, line: 3487, column: 72)
!12843 = !DILocation(line: 3487, column: 92, scope: !12842)
!12844 = !DILocation(line: 3487, column: 72, scope: !12842)
!12845 = !DILocation(line: 3487, column: 102, scope: !12842)
!12846 = !DILocation(line: 3487, column: 72, scope: !1972)
!12847 = !DILocation(line: 3487, column: 72, scope: !12848)
!12848 = !DILexicalBlockFile(scope: !1972, file: !408, discriminator: 2)
!12849 = !DILocation(line: 3487, column: 133, scope: !12850)
!12850 = !DILexicalBlockFile(scope: !12842, file: !408, discriminator: 3)
!12851 = !DILocation(line: 3487, column: 151, scope: !12842)
!12852 = !DILocation(line: 3487, column: 161, scope: !12842)
!12853 = !DILocation(line: 3487, column: 186, scope: !12842)
!12854 = !DILocation(line: 3487, column: 117, scope: !12842)
!12855 = !DILocation(line: 3487, column: 205, scope: !12856)
!12856 = !DILexicalBlockFile(scope: !1973, file: !408, discriminator: 4)
!12857 = !DILocation(line: 3487, column: 205, scope: !1972)
!12858 = !DILocation(line: 3487, column: 205, scope: !12859)
!12859 = !DILexicalBlockFile(scope: !1972, file: !408, discriminator: 5)
!12860 = !DILocation(line: 3488, column: 13, scope: !1973)
!12861 = !DILocation(line: 3490, column: 9, scope: !1950)
!12862 = !DILocation(line: 3490, column: 14, scope: !12863)
!12863 = !DILexicalBlockFile(scope: !1976, file: !408, discriminator: 1)
!12864 = !DILocation(line: 3490, column: 24, scope: !1976)
!12865 = !DILocation(line: 3490, column: 54, scope: !1976)
!12866 = !DILocation(line: 3490, column: 68, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !1976, file: !408, line: 3490, column: 65)
!12868 = !DILocation(line: 3490, column: 85, scope: !12867)
!12869 = !DILocation(line: 3490, column: 65, scope: !12867)
!12870 = !DILocation(line: 3490, column: 95, scope: !12867)
!12871 = !DILocation(line: 3490, column: 65, scope: !1976)
!12872 = !DILocation(line: 3490, column: 65, scope: !12873)
!12873 = !DILexicalBlockFile(scope: !1976, file: !408, discriminator: 2)
!12874 = !DILocation(line: 3490, column: 126, scope: !12875)
!12875 = !DILexicalBlockFile(scope: !12867, file: !408, discriminator: 3)
!12876 = !DILocation(line: 3490, column: 144, scope: !12867)
!12877 = !DILocation(line: 3490, column: 154, scope: !12867)
!12878 = !DILocation(line: 3490, column: 179, scope: !12867)
!12879 = !DILocation(line: 3490, column: 110, scope: !12867)
!12880 = !DILocation(line: 3490, column: 198, scope: !12830)
!12881 = !DILocation(line: 3490, column: 198, scope: !1976)
!12882 = !DILocation(line: 3490, column: 198, scope: !12883)
!12883 = !DILexicalBlockFile(scope: !1976, file: !408, discriminator: 5)
!12884 = !DILocation(line: 3450, column: 5, scope: !1951)
!12885 = !DILocation(line: 3494, column: 5, scope: !1937)
!12886 = !DILocation(line: 3494, column: 10, scope: !12887)
!12887 = !DILexicalBlockFile(scope: !1978, file: !408, discriminator: 1)
!12888 = !DILocation(line: 3494, column: 20, scope: !1978)
!12889 = !DILocation(line: 3494, column: 50, scope: !1978)
!12890 = !DILocation(line: 3494, column: 67, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !1978, file: !408, line: 3494, column: 64)
!12892 = !DILocation(line: 3494, column: 84, scope: !12891)
!12893 = !DILocation(line: 3494, column: 64, scope: !12891)
!12894 = !DILocation(line: 3494, column: 94, scope: !12891)
!12895 = !DILocation(line: 3494, column: 64, scope: !1978)
!12896 = !DILocation(line: 3494, column: 64, scope: !12897)
!12897 = !DILexicalBlockFile(scope: !1978, file: !408, discriminator: 2)
!12898 = !DILocation(line: 3494, column: 125, scope: !12899)
!12899 = !DILexicalBlockFile(scope: !12891, file: !408, discriminator: 3)
!12900 = !DILocation(line: 3494, column: 143, scope: !12891)
!12901 = !DILocation(line: 3494, column: 153, scope: !12891)
!12902 = !DILocation(line: 3494, column: 178, scope: !12891)
!12903 = !DILocation(line: 3494, column: 109, scope: !12891)
!12904 = !DILocation(line: 3494, column: 197, scope: !12905)
!12905 = !DILexicalBlockFile(scope: !1937, file: !408, discriminator: 4)
!12906 = !DILocation(line: 3494, column: 197, scope: !1978)
!12907 = !DILocation(line: 3494, column: 197, scope: !12908)
!12908 = !DILexicalBlockFile(scope: !1978, file: !408, discriminator: 5)
!12909 = !DILocation(line: 3496, column: 23, scope: !1937)
!12910 = !DILocation(line: 3496, column: 11, scope: !1937)
!12911 = !DILocation(line: 3496, column: 9, scope: !1937)
!12912 = !DILocation(line: 3498, column: 9, scope: !1982)
!12913 = !DILocation(line: 3498, column: 13, scope: !1982)
!12914 = !DILocation(line: 3498, column: 31, scope: !12915)
!12915 = !DILexicalBlockFile(scope: !1982, file: !408, discriminator: 1)
!12916 = !DILocation(line: 3498, column: 37, scope: !1982)
!12917 = !DILocation(line: 3498, column: 47, scope: !1982)
!12918 = !DILocation(line: 3498, column: 56, scope: !1982)
!12919 = !DILocation(line: 3498, column: 9, scope: !1937)
!12920 = !DILocation(line: 3499, column: 9, scope: !1981)
!12921 = !DILocation(line: 3499, column: 14, scope: !12922)
!12922 = !DILexicalBlockFile(scope: !1980, file: !408, discriminator: 1)
!12923 = !DILocation(line: 3499, column: 24, scope: !1980)
!12924 = !DILocation(line: 3499, column: 54, scope: !1980)
!12925 = !DILocation(line: 3499, column: 68, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !1980, file: !408, line: 3499, column: 65)
!12927 = !DILocation(line: 3499, column: 85, scope: !12926)
!12928 = !DILocation(line: 3499, column: 65, scope: !12926)
!12929 = !DILocation(line: 3499, column: 95, scope: !12926)
!12930 = !DILocation(line: 3499, column: 65, scope: !1980)
!12931 = !DILocation(line: 3499, column: 65, scope: !12932)
!12932 = !DILexicalBlockFile(scope: !1980, file: !408, discriminator: 2)
!12933 = !DILocation(line: 3499, column: 126, scope: !12934)
!12934 = !DILexicalBlockFile(scope: !12926, file: !408, discriminator: 3)
!12935 = !DILocation(line: 3499, column: 144, scope: !12926)
!12936 = !DILocation(line: 3499, column: 154, scope: !12926)
!12937 = !DILocation(line: 3499, column: 179, scope: !12926)
!12938 = !DILocation(line: 3499, column: 110, scope: !12926)
!12939 = !DILocation(line: 3499, column: 198, scope: !12940)
!12940 = !DILexicalBlockFile(scope: !1981, file: !408, discriminator: 4)
!12941 = !DILocation(line: 3499, column: 198, scope: !1980)
!12942 = !DILocation(line: 3499, column: 198, scope: !12943)
!12943 = !DILexicalBlockFile(scope: !1980, file: !408, discriminator: 5)
!12944 = !DILocation(line: 3500, column: 54, scope: !1981)
!12945 = !DILocation(line: 3500, column: 60, scope: !1981)
!12946 = !DILocation(line: 3500, column: 33, scope: !1981)
!12947 = !DILocation(line: 3500, column: 16, scope: !1981)
!12948 = !DILocation(line: 3500, column: 9, scope: !1981)
!12949 = !DILocation(line: 3503, column: 12, scope: !1937)
!12950 = !DILocation(line: 3503, column: 5, scope: !1937)
!12951 = !DILocation(line: 3504, column: 1, scope: !1937)
!12952 = !DILocation(line: 3513, column: 38, scope: !1983)
!12953 = !DILocation(line: 3513, column: 54, scope: !1983)
!12954 = !DILocation(line: 3516, column: 5, scope: !1983)
!12955 = !DILocation(line: 3516, column: 16, scope: !1983)
!12956 = !DILocation(line: 3516, column: 19, scope: !1983)
!12957 = !DILocation(line: 3517, column: 5, scope: !1983)
!12958 = !DILocation(line: 3517, column: 24, scope: !1983)
!12959 = !DILocation(line: 3519, column: 5, scope: !1983)
!12960 = !DILocation(line: 3519, column: 15, scope: !1983)
!12961 = !DILocation(line: 3520, column: 5, scope: !1983)
!12962 = !DILocation(line: 3520, column: 15, scope: !1983)
!12963 = !DILocation(line: 3521, column: 5, scope: !1983)
!12964 = !DILocation(line: 3521, column: 15, scope: !1983)
!12965 = !DILocation(line: 3522, column: 27, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3522, column: 9)
!12967 = !DILocation(line: 3522, column: 10, scope: !12966)
!12968 = !DILocation(line: 3522, column: 9, scope: !1983)
!12969 = !DILocation(line: 3524, column: 9, scope: !12966)
!12970 = !DILocation(line: 3526, column: 25, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3526, column: 9)
!12972 = !DILocation(line: 3526, column: 31, scope: !12971)
!12973 = !DILocation(line: 3526, column: 41, scope: !12971)
!12974 = !DILocation(line: 3526, column: 50, scope: !12971)
!12975 = !DILocation(line: 3526, column: 9, scope: !1983)
!12976 = !DILocation(line: 3528, column: 13, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12971, file: !408, line: 3526, column: 73)
!12978 = !DILocation(line: 3527, column: 9, scope: !12977)
!12979 = !DILocation(line: 3532, column: 9, scope: !12977)
!12980 = !DILocation(line: 3535, column: 35, scope: !1983)
!12981 = !DILocation(line: 3535, column: 41, scope: !1983)
!12982 = !DILocation(line: 3535, column: 14, scope: !1983)
!12983 = !DILocation(line: 3535, column: 12, scope: !1983)
!12984 = !DILocation(line: 3537, column: 21, scope: !1983)
!12985 = !DILocation(line: 3537, column: 37, scope: !1983)
!12986 = !DILocation(line: 3537, column: 46, scope: !1983)
!12987 = !DILocation(line: 3538, column: 5, scope: !1983)
!12988 = !DILocation(line: 3538, column: 10, scope: !12989)
!12989 = !DILexicalBlockFile(scope: !1994, file: !408, discriminator: 1)
!12990 = !DILocation(line: 3538, column: 20, scope: !1994)
!12991 = !DILocation(line: 3538, column: 51, scope: !1994)
!12992 = !DILocation(line: 3538, column: 59, scope: !1994)
!12993 = !DILocation(line: 3538, column: 72, scope: !1997)
!12994 = !DILocation(line: 3538, column: 88, scope: !1997)
!12995 = !DILocation(line: 3538, column: 72, scope: !1994)
!12996 = !DILocation(line: 3538, column: 103, scope: !12997)
!12997 = !DILexicalBlockFile(scope: !1997, file: !408, discriminator: 2)
!12998 = !DILocation(line: 3538, column: 108, scope: !12999)
!12999 = !DILexicalBlockFile(scope: !1996, file: !408, discriminator: 4)
!13000 = !DILocation(line: 3538, column: 118, scope: !1996)
!13001 = !DILocation(line: 3538, column: 148, scope: !1996)
!13002 = !DILocation(line: 3538, column: 174, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !1996, file: !408, line: 3538, column: 171)
!13004 = !DILocation(line: 3538, column: 191, scope: !13003)
!13005 = !DILocation(line: 3538, column: 171, scope: !13003)
!13006 = !DILocation(line: 3538, column: 201, scope: !13003)
!13007 = !DILocation(line: 3538, column: 171, scope: !1996)
!13008 = !DILocation(line: 3538, column: 171, scope: !13009)
!13009 = !DILexicalBlockFile(scope: !1996, file: !408, discriminator: 5)
!13010 = !DILocation(line: 3538, column: 232, scope: !13011)
!13011 = !DILexicalBlockFile(scope: !13003, file: !408, discriminator: 6)
!13012 = !DILocation(line: 3538, column: 250, scope: !13003)
!13013 = !DILocation(line: 3538, column: 260, scope: !13003)
!13014 = !DILocation(line: 3538, column: 285, scope: !13003)
!13015 = !DILocation(line: 3538, column: 216, scope: !13003)
!13016 = !DILocation(line: 3538, column: 304, scope: !13017)
!13017 = !DILexicalBlockFile(scope: !1997, file: !408, discriminator: 7)
!13018 = !DILocation(line: 3538, column: 304, scope: !1996)
!13019 = !DILocation(line: 3538, column: 304, scope: !13020)
!13020 = !DILexicalBlockFile(scope: !1996, file: !408, discriminator: 8)
!13021 = !DILocation(line: 3538, column: 304, scope: !13022)
!13022 = !DILexicalBlockFile(scope: !1996, file: !408, discriminator: 9)
!13023 = !DILocation(line: 3538, column: 317, scope: !13024)
!13024 = !DILexicalBlockFile(scope: !13025, file: !408, discriminator: 10)
!13025 = !DILexicalBlockFile(scope: !1983, file: !408, discriminator: 3)
!13026 = !DILocation(line: 3538, column: 317, scope: !1994)
!13027 = !DILocation(line: 3538, column: 317, scope: !13028)
!13028 = !DILexicalBlockFile(scope: !1994, file: !408, discriminator: 11)
!13029 = !DILocation(line: 3539, column: 22, scope: !1983)
!13030 = !DILocation(line: 3539, column: 5, scope: !1983)
!13031 = !DILocation(line: 3539, column: 13, scope: !1983)
!13032 = !DILocation(line: 3539, column: 20, scope: !1983)
!13033 = !DILocation(line: 3542, column: 5, scope: !1983)
!13034 = !DILocation(line: 3542, column: 10, scope: !13035)
!13035 = !DILexicalBlockFile(scope: !1999, file: !408, discriminator: 1)
!13036 = !DILocation(line: 3542, column: 20, scope: !1999)
!13037 = !DILocation(line: 3542, column: 43, scope: !1999)
!13038 = !DILocation(line: 3542, column: 51, scope: !1999)
!13039 = !DILocation(line: 3542, column: 73, scope: !2003)
!13040 = !DILocation(line: 3542, column: 81, scope: !2003)
!13041 = !DILocation(line: 3542, column: 73, scope: !1999)
!13042 = !DILocation(line: 3542, column: 99, scope: !13043)
!13043 = !DILexicalBlockFile(scope: !2002, file: !408, discriminator: 2)
!13044 = !DILocation(line: 3542, column: 107, scope: !2002)
!13045 = !DILocation(line: 3542, column: 124, scope: !2002)
!13046 = !DILocation(line: 3542, column: 138, scope: !2002)
!13047 = !DILocation(line: 3542, column: 143, scope: !13048)
!13048 = !DILexicalBlockFile(scope: !2001, file: !408, discriminator: 4)
!13049 = !DILocation(line: 3542, column: 153, scope: !2001)
!13050 = !DILocation(line: 3542, column: 183, scope: !2001)
!13051 = !DILocation(line: 3542, column: 201, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !2001, file: !408, line: 3542, column: 198)
!13053 = !DILocation(line: 3542, column: 218, scope: !13052)
!13054 = !DILocation(line: 3542, column: 198, scope: !13052)
!13055 = !DILocation(line: 3542, column: 228, scope: !13052)
!13056 = !DILocation(line: 3542, column: 198, scope: !2001)
!13057 = !DILocation(line: 3542, column: 198, scope: !13058)
!13058 = !DILexicalBlockFile(scope: !2001, file: !408, discriminator: 5)
!13059 = !DILocation(line: 3542, column: 259, scope: !13060)
!13060 = !DILexicalBlockFile(scope: !13052, file: !408, discriminator: 6)
!13061 = !DILocation(line: 3542, column: 277, scope: !13052)
!13062 = !DILocation(line: 3542, column: 287, scope: !13052)
!13063 = !DILocation(line: 3542, column: 312, scope: !13052)
!13064 = !DILocation(line: 3542, column: 243, scope: !13052)
!13065 = !DILocation(line: 3542, column: 331, scope: !13066)
!13066 = !DILexicalBlockFile(scope: !2002, file: !408, discriminator: 7)
!13067 = !DILocation(line: 3542, column: 331, scope: !2001)
!13068 = !DILocation(line: 3542, column: 331, scope: !13069)
!13069 = !DILexicalBlockFile(scope: !2001, file: !408, discriminator: 8)
!13070 = !DILocation(line: 3542, column: 344, scope: !13071)
!13071 = !DILexicalBlockFile(scope: !2002, file: !408, discriminator: 9)
!13072 = !DILocation(line: 3542, column: 346, scope: !13024)
!13073 = !DILocation(line: 3542, column: 346, scope: !1999)
!13074 = !DILocation(line: 3542, column: 346, scope: !13075)
!13075 = !DILexicalBlockFile(scope: !1999, file: !408, discriminator: 11)
!13076 = !DILocation(line: 3543, column: 5, scope: !1983)
!13077 = !DILocation(line: 3543, column: 10, scope: !13078)
!13078 = !DILexicalBlockFile(scope: !2005, file: !408, discriminator: 1)
!13079 = !DILocation(line: 3543, column: 20, scope: !2005)
!13080 = !DILocation(line: 3543, column: 43, scope: !2005)
!13081 = !DILocation(line: 3543, column: 51, scope: !2005)
!13082 = !DILocation(line: 3543, column: 71, scope: !2009)
!13083 = !DILocation(line: 3543, column: 79, scope: !2009)
!13084 = !DILocation(line: 3543, column: 71, scope: !2005)
!13085 = !DILocation(line: 3543, column: 97, scope: !13086)
!13086 = !DILexicalBlockFile(scope: !2008, file: !408, discriminator: 2)
!13087 = !DILocation(line: 3543, column: 105, scope: !2008)
!13088 = !DILocation(line: 3543, column: 120, scope: !2008)
!13089 = !DILocation(line: 3543, column: 134, scope: !2008)
!13090 = !DILocation(line: 3543, column: 139, scope: !13091)
!13091 = !DILexicalBlockFile(scope: !2007, file: !408, discriminator: 4)
!13092 = !DILocation(line: 3543, column: 149, scope: !2007)
!13093 = !DILocation(line: 3543, column: 179, scope: !2007)
!13094 = !DILocation(line: 3543, column: 197, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !2007, file: !408, line: 3543, column: 194)
!13096 = !DILocation(line: 3543, column: 214, scope: !13095)
!13097 = !DILocation(line: 3543, column: 194, scope: !13095)
!13098 = !DILocation(line: 3543, column: 224, scope: !13095)
!13099 = !DILocation(line: 3543, column: 194, scope: !2007)
!13100 = !DILocation(line: 3543, column: 194, scope: !13101)
!13101 = !DILexicalBlockFile(scope: !2007, file: !408, discriminator: 5)
!13102 = !DILocation(line: 3543, column: 255, scope: !13103)
!13103 = !DILexicalBlockFile(scope: !13095, file: !408, discriminator: 6)
!13104 = !DILocation(line: 3543, column: 273, scope: !13095)
!13105 = !DILocation(line: 3543, column: 283, scope: !13095)
!13106 = !DILocation(line: 3543, column: 308, scope: !13095)
!13107 = !DILocation(line: 3543, column: 239, scope: !13095)
!13108 = !DILocation(line: 3543, column: 327, scope: !13109)
!13109 = !DILexicalBlockFile(scope: !2008, file: !408, discriminator: 7)
!13110 = !DILocation(line: 3543, column: 327, scope: !2007)
!13111 = !DILocation(line: 3543, column: 327, scope: !13112)
!13112 = !DILexicalBlockFile(scope: !2007, file: !408, discriminator: 8)
!13113 = !DILocation(line: 3543, column: 340, scope: !13114)
!13114 = !DILexicalBlockFile(scope: !2008, file: !408, discriminator: 9)
!13115 = !DILocation(line: 3543, column: 342, scope: !13024)
!13116 = !DILocation(line: 3543, column: 342, scope: !2005)
!13117 = !DILocation(line: 3543, column: 342, scope: !13118)
!13118 = !DILexicalBlockFile(scope: !2005, file: !408, discriminator: 11)
!13119 = !DILocation(line: 3544, column: 5, scope: !1983)
!13120 = !DILocation(line: 3544, column: 10, scope: !13121)
!13121 = !DILexicalBlockFile(scope: !2011, file: !408, discriminator: 1)
!13122 = !DILocation(line: 3544, column: 20, scope: !2011)
!13123 = !DILocation(line: 3544, column: 43, scope: !2011)
!13124 = !DILocation(line: 3544, column: 51, scope: !2011)
!13125 = !DILocation(line: 3544, column: 76, scope: !2015)
!13126 = !DILocation(line: 3544, column: 84, scope: !2015)
!13127 = !DILocation(line: 3544, column: 76, scope: !2011)
!13128 = !DILocation(line: 3544, column: 102, scope: !13129)
!13129 = !DILexicalBlockFile(scope: !2014, file: !408, discriminator: 2)
!13130 = !DILocation(line: 3544, column: 110, scope: !2014)
!13131 = !DILocation(line: 3544, column: 130, scope: !2014)
!13132 = !DILocation(line: 3544, column: 144, scope: !2014)
!13133 = !DILocation(line: 3544, column: 149, scope: !13134)
!13134 = !DILexicalBlockFile(scope: !2013, file: !408, discriminator: 4)
!13135 = !DILocation(line: 3544, column: 159, scope: !2013)
!13136 = !DILocation(line: 3544, column: 189, scope: !2013)
!13137 = !DILocation(line: 3544, column: 207, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !2013, file: !408, line: 3544, column: 204)
!13139 = !DILocation(line: 3544, column: 224, scope: !13138)
!13140 = !DILocation(line: 3544, column: 204, scope: !13138)
!13141 = !DILocation(line: 3544, column: 234, scope: !13138)
!13142 = !DILocation(line: 3544, column: 204, scope: !2013)
!13143 = !DILocation(line: 3544, column: 204, scope: !13144)
!13144 = !DILexicalBlockFile(scope: !2013, file: !408, discriminator: 5)
!13145 = !DILocation(line: 3544, column: 265, scope: !13146)
!13146 = !DILexicalBlockFile(scope: !13138, file: !408, discriminator: 6)
!13147 = !DILocation(line: 3544, column: 283, scope: !13138)
!13148 = !DILocation(line: 3544, column: 293, scope: !13138)
!13149 = !DILocation(line: 3544, column: 318, scope: !13138)
!13150 = !DILocation(line: 3544, column: 249, scope: !13138)
!13151 = !DILocation(line: 3544, column: 337, scope: !13152)
!13152 = !DILexicalBlockFile(scope: !2014, file: !408, discriminator: 7)
!13153 = !DILocation(line: 3544, column: 337, scope: !2013)
!13154 = !DILocation(line: 3544, column: 337, scope: !13155)
!13155 = !DILexicalBlockFile(scope: !2013, file: !408, discriminator: 8)
!13156 = !DILocation(line: 3544, column: 350, scope: !13157)
!13157 = !DILexicalBlockFile(scope: !2014, file: !408, discriminator: 9)
!13158 = !DILocation(line: 3544, column: 352, scope: !13024)
!13159 = !DILocation(line: 3544, column: 352, scope: !2011)
!13160 = !DILocation(line: 3544, column: 352, scope: !13161)
!13161 = !DILexicalBlockFile(scope: !2011, file: !408, discriminator: 11)
!13162 = !DILocation(line: 3545, column: 5, scope: !1983)
!13163 = !DILocation(line: 3545, column: 10, scope: !13164)
!13164 = !DILexicalBlockFile(scope: !2017, file: !408, discriminator: 1)
!13165 = !DILocation(line: 3545, column: 20, scope: !2017)
!13166 = !DILocation(line: 3545, column: 43, scope: !2017)
!13167 = !DILocation(line: 3545, column: 51, scope: !2017)
!13168 = !DILocation(line: 3545, column: 74, scope: !2021)
!13169 = !DILocation(line: 3545, column: 82, scope: !2021)
!13170 = !DILocation(line: 3545, column: 74, scope: !2017)
!13171 = !DILocation(line: 3545, column: 100, scope: !13172)
!13172 = !DILexicalBlockFile(scope: !2020, file: !408, discriminator: 2)
!13173 = !DILocation(line: 3545, column: 108, scope: !2020)
!13174 = !DILocation(line: 3545, column: 126, scope: !2020)
!13175 = !DILocation(line: 3545, column: 140, scope: !2020)
!13176 = !DILocation(line: 3545, column: 145, scope: !13177)
!13177 = !DILexicalBlockFile(scope: !2019, file: !408, discriminator: 4)
!13178 = !DILocation(line: 3545, column: 155, scope: !2019)
!13179 = !DILocation(line: 3545, column: 185, scope: !2019)
!13180 = !DILocation(line: 3545, column: 203, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !2019, file: !408, line: 3545, column: 200)
!13182 = !DILocation(line: 3545, column: 220, scope: !13181)
!13183 = !DILocation(line: 3545, column: 200, scope: !13181)
!13184 = !DILocation(line: 3545, column: 230, scope: !13181)
!13185 = !DILocation(line: 3545, column: 200, scope: !2019)
!13186 = !DILocation(line: 3545, column: 200, scope: !13187)
!13187 = !DILexicalBlockFile(scope: !2019, file: !408, discriminator: 5)
!13188 = !DILocation(line: 3545, column: 261, scope: !13189)
!13189 = !DILexicalBlockFile(scope: !13181, file: !408, discriminator: 6)
!13190 = !DILocation(line: 3545, column: 279, scope: !13181)
!13191 = !DILocation(line: 3545, column: 289, scope: !13181)
!13192 = !DILocation(line: 3545, column: 314, scope: !13181)
!13193 = !DILocation(line: 3545, column: 245, scope: !13181)
!13194 = !DILocation(line: 3545, column: 333, scope: !13195)
!13195 = !DILexicalBlockFile(scope: !2020, file: !408, discriminator: 7)
!13196 = !DILocation(line: 3545, column: 333, scope: !2019)
!13197 = !DILocation(line: 3545, column: 333, scope: !13198)
!13198 = !DILexicalBlockFile(scope: !2019, file: !408, discriminator: 8)
!13199 = !DILocation(line: 3545, column: 346, scope: !13200)
!13200 = !DILexicalBlockFile(scope: !2020, file: !408, discriminator: 9)
!13201 = !DILocation(line: 3545, column: 348, scope: !13024)
!13202 = !DILocation(line: 3545, column: 348, scope: !2017)
!13203 = !DILocation(line: 3545, column: 348, scope: !13204)
!13204 = !DILexicalBlockFile(scope: !2017, file: !408, discriminator: 11)
!13205 = !DILocation(line: 3547, column: 9, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3547, column: 9)
!13207 = !DILocation(line: 3547, column: 26, scope: !13206)
!13208 = !DILocation(line: 3547, column: 9, scope: !1983)
!13209 = !DILocation(line: 3549, column: 33, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13206, file: !408, line: 3547, column: 48)
!13211 = !DILocation(line: 3549, column: 9, scope: !13210)
!13212 = !DILocation(line: 3549, column: 17, scope: !13210)
!13213 = !DILocation(line: 3549, column: 31, scope: !13210)
!13214 = !DILocation(line: 3550, column: 62, scope: !13210)
!13215 = !DILocation(line: 3550, column: 9, scope: !13210)
!13216 = !DILocation(line: 3553, column: 40, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !1983, file: !408, line: 3553, column: 9)
!13218 = !DILocation(line: 3553, column: 24, scope: !13217)
!13219 = !DILocation(line: 3553, column: 22, scope: !13217)
!13220 = !DILocation(line: 3553, column: 9, scope: !1983)
!13221 = !DILocation(line: 3555, column: 9, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13217, file: !408, line: 3554, column: 71)
!13223 = !DILocation(line: 3558, column: 30, scope: !1983)
!13224 = !DILocation(line: 3558, column: 14, scope: !1983)
!13225 = !DILocation(line: 3558, column: 12, scope: !1983)
!13226 = !DILocation(line: 3559, column: 12, scope: !2025)
!13227 = !DILocation(line: 3559, column: 10, scope: !2025)
!13228 = !DILocation(line: 3559, column: 17, scope: !13229)
!13229 = !DILexicalBlockFile(scope: !13230, file: !408, discriminator: 2)
!13230 = !DILexicalBlockFile(scope: !2024, file: !408, discriminator: 1)
!13231 = !DILocation(line: 3559, column: 21, scope: !2024)
!13232 = !DILocation(line: 3559, column: 19, scope: !2024)
!13233 = !DILocation(line: 3559, column: 5, scope: !2025)
!13234 = !DILocation(line: 3560, column: 9, scope: !2023)
!13235 = !DILocation(line: 3560, column: 19, scope: !2023)
!13236 = !DILocation(line: 3560, column: 54, scope: !2023)
!13237 = !DILocation(line: 3560, column: 68, scope: !2023)
!13238 = !DILocation(line: 3560, column: 79, scope: !2023)
!13239 = !DILocation(line: 3560, column: 88, scope: !2023)
!13240 = !DILocation(line: 3560, column: 105, scope: !2023)
!13241 = !DILocation(line: 3560, column: 37, scope: !2023)
!13242 = !DILocation(line: 3560, column: 154, scope: !13243)
!13243 = !DILexicalBlockFile(scope: !2023, file: !408, discriminator: 1)
!13244 = !DILocation(line: 3560, column: 132, scope: !2023)
!13245 = !DILocation(line: 3560, column: 115, scope: !2023)
!13246 = !DILocation(line: 3560, column: 146, scope: !2023)
!13247 = !DILocation(line: 3560, column: 114, scope: !2023)
!13248 = !DILocation(line: 3560, column: 202, scope: !13249)
!13249 = !DILexicalBlockFile(scope: !2023, file: !408, discriminator: 2)
!13250 = !DILocation(line: 3560, column: 180, scope: !2023)
!13251 = !DILocation(line: 3560, column: 162, scope: !2023)
!13252 = !DILocation(line: 3560, column: 194, scope: !2023)
!13253 = !DILocation(line: 3560, column: 161, scope: !2023)
!13254 = !DILocation(line: 3560, column: 19, scope: !13255)
!13255 = !DILexicalBlockFile(scope: !13256, file: !408, discriminator: 4)
!13256 = !DILexicalBlockFile(scope: !2023, file: !408, discriminator: 3)
!13257 = !DILocation(line: 3561, column: 9, scope: !2023)
!13258 = !DILocation(line: 3561, column: 15, scope: !2023)
!13259 = !DILocation(line: 3562, column: 30, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !2023, file: !408, line: 3562, column: 13)
!13261 = !DILocation(line: 3562, column: 48, scope: !13260)
!13262 = !DILocation(line: 3562, column: 59, scope: !13260)
!13263 = !DILocation(line: 3562, column: 68, scope: !13260)
!13264 = !DILocation(line: 3562, column: 85, scope: !13260)
!13265 = !DILocation(line: 3562, column: 13, scope: !2023)
!13266 = !DILocation(line: 3563, column: 43, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13260, file: !408, line: 3562, column: 92)
!13268 = !DILocation(line: 3563, column: 26, scope: !13267)
!13269 = !DILocation(line: 3563, column: 24, scope: !13267)
!13270 = !DILocation(line: 3564, column: 9, scope: !13267)
!13271 = !DILocation(line: 3564, column: 37, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13260, file: !408, line: 3564, column: 20)
!13273 = !DILocation(line: 3564, column: 55, scope: !13272)
!13274 = !DILocation(line: 3564, column: 66, scope: !13272)
!13275 = !DILocation(line: 3564, column: 75, scope: !13272)
!13276 = !DILocation(line: 3564, column: 92, scope: !13272)
!13277 = !DILocation(line: 3564, column: 20, scope: !13260)
!13278 = !DILocation(line: 3565, column: 61, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13272, file: !408, line: 3564, column: 99)
!13280 = !DILocation(line: 3565, column: 43, scope: !13279)
!13281 = !DILocation(line: 3565, column: 79, scope: !13279)
!13282 = !DILocation(line: 3565, column: 41, scope: !13279)
!13283 = !DILocation(line: 3565, column: 24, scope: !13279)
!13284 = !DILocation(line: 3566, column: 9, scope: !13279)
!13285 = !DILocation(line: 3568, column: 13, scope: !2030)
!13286 = !DILocation(line: 3568, column: 24, scope: !2030)
!13287 = !DILocation(line: 3568, column: 13, scope: !2023)
!13288 = !DILocation(line: 3569, column: 13, scope: !2029)
!13289 = !DILocation(line: 3569, column: 18, scope: !13290)
!13290 = !DILexicalBlockFile(scope: !2028, file: !408, discriminator: 1)
!13291 = !DILocation(line: 3569, column: 28, scope: !2028)
!13292 = !DILocation(line: 3569, column: 58, scope: !2028)
!13293 = !DILocation(line: 3569, column: 79, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !2028, file: !408, line: 3569, column: 76)
!13295 = !DILocation(line: 3569, column: 96, scope: !13294)
!13296 = !DILocation(line: 3569, column: 76, scope: !13294)
!13297 = !DILocation(line: 3569, column: 106, scope: !13294)
!13298 = !DILocation(line: 3569, column: 76, scope: !2028)
!13299 = !DILocation(line: 3569, column: 76, scope: !13300)
!13300 = !DILexicalBlockFile(scope: !2028, file: !408, discriminator: 2)
!13301 = !DILocation(line: 3569, column: 137, scope: !13302)
!13302 = !DILexicalBlockFile(scope: !13294, file: !408, discriminator: 3)
!13303 = !DILocation(line: 3569, column: 155, scope: !13294)
!13304 = !DILocation(line: 3569, column: 165, scope: !13294)
!13305 = !DILocation(line: 3569, column: 190, scope: !13294)
!13306 = !DILocation(line: 3569, column: 121, scope: !13294)
!13307 = !DILocation(line: 3569, column: 209, scope: !13308)
!13308 = !DILexicalBlockFile(scope: !2029, file: !408, discriminator: 4)
!13309 = !DILocation(line: 3569, column: 209, scope: !2028)
!13310 = !DILocation(line: 3569, column: 209, scope: !13311)
!13311 = !DILexicalBlockFile(scope: !2028, file: !408, discriminator: 5)
!13312 = !DILocation(line: 3570, column: 26, scope: !2029)
!13313 = !DILocation(line: 3570, column: 13, scope: !2029)
!13314 = !DILocation(line: 3571, column: 13, scope: !2029)
!13315 = !DILocation(line: 3572, column: 37, scope: !2032)
!13316 = !DILocation(line: 3572, column: 44, scope: !2032)
!13317 = !DILocation(line: 3572, column: 54, scope: !2032)
!13318 = !DILocation(line: 3572, column: 1458, scope: !2032)
!13319 = !DILocation(line: 3572, column: 1471, scope: !13320)
!13320 = !DILexicalBlockFile(scope: !2032, file: !408, discriminator: 1)
!13321 = !DILocation(line: 3572, column: 1491, scope: !2032)
!13322 = !DILocation(line: 3572, column: 1500, scope: !2032)
!13323 = !DILocation(line: 3572, column: 1345, scope: !2032)
!13324 = !DILocation(line: 3572, column: 1691, scope: !13325)
!13325 = !DILexicalBlockFile(scope: !2036, file: !408, discriminator: 3)
!13326 = !DILocation(line: 3572, column: 1712, scope: !2036)
!13327 = !DILocation(line: 3572, column: 1759, scope: !2036)
!13328 = !DILocation(line: 3572, column: 1772, scope: !2036)
!13329 = !DILocation(line: 3572, column: 1785, scope: !2036)
!13330 = !DILocation(line: 3572, column: 1796, scope: !2036)
!13331 = !DILocation(line: 3572, column: 1806, scope: !2036)
!13332 = !DILocation(line: 3572, column: 1804, scope: !2036)
!13333 = !DILocation(line: 3572, column: 1865, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !2036, file: !408, line: 3572, column: 1865)
!13335 = !DILocation(line: 3572, column: 1874, scope: !13334)
!13336 = !DILocation(line: 3572, column: 1878, scope: !13334)
!13337 = !DILocation(line: 3572, column: 1881, scope: !13338)
!13338 = !DILexicalBlockFile(scope: !13334, file: !408, discriminator: 5)
!13339 = !DILocation(line: 3572, column: 1890, scope: !13334)
!13340 = !DILocation(line: 3572, column: 1865, scope: !2036)
!13341 = !DILocation(line: 3572, column: 1910, scope: !13342)
!13342 = !DILexicalBlockFile(scope: !13343, file: !408, discriminator: 7)
!13343 = distinct !DILexicalBlock(scope: !13334, file: !408, line: 3572, column: 1896)
!13344 = !DILocation(line: 3572, column: 1920, scope: !13343)
!13345 = !DILocation(line: 3572, column: 1918, scope: !13343)
!13346 = !DILocation(line: 3572, column: 1907, scope: !13343)
!13347 = !DILocation(line: 3572, column: 1980, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13343, file: !408, line: 3572, column: 1980)
!13349 = !DILocation(line: 3572, column: 1989, scope: !13348)
!13350 = !DILocation(line: 3572, column: 1993, scope: !13348)
!13351 = !DILocation(line: 3572, column: 1996, scope: !13352)
!13352 = !DILexicalBlockFile(scope: !13348, file: !408, discriminator: 9)
!13353 = !DILocation(line: 3572, column: 2005, scope: !13348)
!13354 = !DILocation(line: 3572, column: 1980, scope: !13343)
!13355 = !DILocation(line: 3572, column: 2025, scope: !13356)
!13356 = !DILexicalBlockFile(scope: !13357, file: !408, discriminator: 11)
!13357 = distinct !DILexicalBlock(scope: !13348, file: !408, line: 3572, column: 2011)
!13358 = !DILocation(line: 3572, column: 2035, scope: !13357)
!13359 = !DILocation(line: 3572, column: 2033, scope: !13357)
!13360 = !DILocation(line: 3572, column: 2022, scope: !13357)
!13361 = !DILocation(line: 3572, column: 2095, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13357, file: !408, line: 3572, column: 2095)
!13363 = !DILocation(line: 3572, column: 2104, scope: !13362)
!13364 = !DILocation(line: 3572, column: 2108, scope: !13362)
!13365 = !DILocation(line: 3572, column: 2111, scope: !13366)
!13366 = !DILexicalBlockFile(scope: !13362, file: !408, discriminator: 13)
!13367 = !DILocation(line: 3572, column: 2120, scope: !13362)
!13368 = !DILocation(line: 3572, column: 2095, scope: !13357)
!13369 = !DILocation(line: 3572, column: 2138, scope: !13370)
!13370 = !DILexicalBlockFile(scope: !13362, file: !408, discriminator: 15)
!13371 = !DILocation(line: 3572, column: 2148, scope: !13362)
!13372 = !DILocation(line: 3572, column: 2146, scope: !13362)
!13373 = !DILocation(line: 3572, column: 2135, scope: !13362)
!13374 = !DILocation(line: 3572, column: 2126, scope: !13362)
!13375 = !DILocation(line: 3572, column: 2204, scope: !13376)
!13376 = !DILexicalBlockFile(scope: !13377, file: !408, discriminator: 17)
!13377 = !DILexicalBlockFile(scope: !13378, file: !408, discriminator: 16)
!13378 = !DILexicalBlockFile(scope: !13357, file: !408, discriminator: 14)
!13379 = !DILocation(line: 3572, column: 2206, scope: !13380)
!13380 = !DILexicalBlockFile(scope: !13381, file: !408, discriminator: 18)
!13381 = !DILexicalBlockFile(scope: !13382, file: !408, discriminator: 12)
!13382 = !DILexicalBlockFile(scope: !13343, file: !408, discriminator: 10)
!13383 = !DILocation(line: 3572, column: 2208, scope: !13384)
!13384 = !DILexicalBlockFile(scope: !13385, file: !408, discriminator: 19)
!13385 = !DILexicalBlockFile(scope: !13386, file: !408, discriminator: 8)
!13386 = !DILexicalBlockFile(scope: !2036, file: !408, discriminator: 6)
!13387 = !DILocation(line: 3572, column: 1893, scope: !13334)
!13388 = !DILocation(line: 3572, column: 2218, scope: !2032)
!13389 = !DILocation(line: 3572, column: 2218, scope: !2036)
!13390 = !DILocation(line: 3572, column: 2243, scope: !13391)
!13391 = !DILexicalBlockFile(scope: !13392, file: !408, discriminator: 4)
!13392 = !DILexicalBlockFile(scope: !2032, file: !408, discriminator: 2)
!13393 = !DILocation(line: 3572, column: 2225, scope: !2032)
!13394 = !DILocation(line: 3572, column: 37, scope: !13395)
!13395 = !DILexicalBlockFile(scope: !13396, file: !408, discriminator: 21)
!13396 = !DILexicalBlockFile(scope: !2032, file: !408, discriminator: 20)
!13397 = !DILocation(line: 3572, column: 2268, scope: !2033)
!13398 = !DILocation(line: 3572, column: 2268, scope: !2032)
!13399 = !DILocation(line: 3572, column: 2271, scope: !2033)
!13400 = !DILocation(line: 3572, column: 20, scope: !2030)
!13401 = !DILocation(line: 3573, column: 29, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !2033, file: !408, line: 3572, column: 2277)
!13403 = !DILocation(line: 3573, column: 47, scope: !13402)
!13404 = !DILocation(line: 3573, column: 56, scope: !13402)
!13405 = !DILocation(line: 3574, column: 39, scope: !13402)
!13406 = !DILocation(line: 3574, column: 13, scope: !13402)
!13407 = !DILocation(line: 3574, column: 21, scope: !13402)
!13408 = !DILocation(line: 3574, column: 37, scope: !13402)
!13409 = !DILocation(line: 3575, column: 9, scope: !13402)
!13410 = !DILocation(line: 3575, column: 37, scope: !2039)
!13411 = !DILocation(line: 3575, column: 44, scope: !2039)
!13412 = !DILocation(line: 3575, column: 54, scope: !2039)
!13413 = !DILocation(line: 3575, column: 1432, scope: !2039)
!13414 = !DILocation(line: 3575, column: 1445, scope: !13415)
!13415 = !DILexicalBlockFile(scope: !2039, file: !408, discriminator: 1)
!13416 = !DILocation(line: 3575, column: 1463, scope: !2039)
!13417 = !DILocation(line: 3575, column: 1472, scope: !2039)
!13418 = !DILocation(line: 3575, column: 1325, scope: !2039)
!13419 = !DILocation(line: 3575, column: 1661, scope: !13420)
!13420 = !DILexicalBlockFile(scope: !2043, file: !408, discriminator: 3)
!13421 = !DILocation(line: 3575, column: 1682, scope: !2043)
!13422 = !DILocation(line: 3575, column: 1729, scope: !2043)
!13423 = !DILocation(line: 3575, column: 1742, scope: !2043)
!13424 = !DILocation(line: 3575, column: 1755, scope: !2043)
!13425 = !DILocation(line: 3575, column: 1766, scope: !2043)
!13426 = !DILocation(line: 3575, column: 1776, scope: !2043)
!13427 = !DILocation(line: 3575, column: 1774, scope: !2043)
!13428 = !DILocation(line: 3575, column: 1833, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !2043, file: !408, line: 3575, column: 1833)
!13430 = !DILocation(line: 3575, column: 1842, scope: !13429)
!13431 = !DILocation(line: 3575, column: 1846, scope: !13429)
!13432 = !DILocation(line: 3575, column: 1849, scope: !13433)
!13433 = !DILexicalBlockFile(scope: !13429, file: !408, discriminator: 5)
!13434 = !DILocation(line: 3575, column: 1858, scope: !13429)
!13435 = !DILocation(line: 3575, column: 1833, scope: !2043)
!13436 = !DILocation(line: 3575, column: 1878, scope: !13437)
!13437 = !DILexicalBlockFile(scope: !13438, file: !408, discriminator: 7)
!13438 = distinct !DILexicalBlock(scope: !13429, file: !408, line: 3575, column: 1864)
!13439 = !DILocation(line: 3575, column: 1888, scope: !13438)
!13440 = !DILocation(line: 3575, column: 1886, scope: !13438)
!13441 = !DILocation(line: 3575, column: 1875, scope: !13438)
!13442 = !DILocation(line: 3575, column: 1946, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13438, file: !408, line: 3575, column: 1946)
!13444 = !DILocation(line: 3575, column: 1955, scope: !13443)
!13445 = !DILocation(line: 3575, column: 1959, scope: !13443)
!13446 = !DILocation(line: 3575, column: 1962, scope: !13447)
!13447 = !DILexicalBlockFile(scope: !13443, file: !408, discriminator: 9)
!13448 = !DILocation(line: 3575, column: 1971, scope: !13443)
!13449 = !DILocation(line: 3575, column: 1946, scope: !13438)
!13450 = !DILocation(line: 3575, column: 1991, scope: !13451)
!13451 = !DILexicalBlockFile(scope: !13452, file: !408, discriminator: 11)
!13452 = distinct !DILexicalBlock(scope: !13443, file: !408, line: 3575, column: 1977)
!13453 = !DILocation(line: 3575, column: 2001, scope: !13452)
!13454 = !DILocation(line: 3575, column: 1999, scope: !13452)
!13455 = !DILocation(line: 3575, column: 1988, scope: !13452)
!13456 = !DILocation(line: 3575, column: 2059, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13452, file: !408, line: 3575, column: 2059)
!13458 = !DILocation(line: 3575, column: 2068, scope: !13457)
!13459 = !DILocation(line: 3575, column: 2072, scope: !13457)
!13460 = !DILocation(line: 3575, column: 2075, scope: !13461)
!13461 = !DILexicalBlockFile(scope: !13457, file: !408, discriminator: 13)
!13462 = !DILocation(line: 3575, column: 2084, scope: !13457)
!13463 = !DILocation(line: 3575, column: 2059, scope: !13452)
!13464 = !DILocation(line: 3575, column: 2102, scope: !13465)
!13465 = !DILexicalBlockFile(scope: !13457, file: !408, discriminator: 15)
!13466 = !DILocation(line: 3575, column: 2112, scope: !13457)
!13467 = !DILocation(line: 3575, column: 2110, scope: !13457)
!13468 = !DILocation(line: 3575, column: 2099, scope: !13457)
!13469 = !DILocation(line: 3575, column: 2090, scope: !13457)
!13470 = !DILocation(line: 3575, column: 2166, scope: !13471)
!13471 = !DILexicalBlockFile(scope: !13472, file: !408, discriminator: 17)
!13472 = !DILexicalBlockFile(scope: !13473, file: !408, discriminator: 16)
!13473 = !DILexicalBlockFile(scope: !13452, file: !408, discriminator: 14)
!13474 = !DILocation(line: 3575, column: 2168, scope: !13475)
!13475 = !DILexicalBlockFile(scope: !13476, file: !408, discriminator: 18)
!13476 = !DILexicalBlockFile(scope: !13477, file: !408, discriminator: 12)
!13477 = !DILexicalBlockFile(scope: !13438, file: !408, discriminator: 10)
!13478 = !DILocation(line: 3575, column: 2170, scope: !13479)
!13479 = !DILexicalBlockFile(scope: !13480, file: !408, discriminator: 19)
!13480 = !DILexicalBlockFile(scope: !13481, file: !408, discriminator: 8)
!13481 = !DILexicalBlockFile(scope: !2043, file: !408, discriminator: 6)
!13482 = !DILocation(line: 3575, column: 1861, scope: !13429)
!13483 = !DILocation(line: 3575, column: 2180, scope: !2039)
!13484 = !DILocation(line: 3575, column: 2180, scope: !2043)
!13485 = !DILocation(line: 3575, column: 2205, scope: !13486)
!13486 = !DILexicalBlockFile(scope: !13487, file: !408, discriminator: 4)
!13487 = !DILexicalBlockFile(scope: !2039, file: !408, discriminator: 2)
!13488 = !DILocation(line: 3575, column: 2187, scope: !2039)
!13489 = !DILocation(line: 3575, column: 37, scope: !13490)
!13490 = !DILexicalBlockFile(scope: !13491, file: !408, discriminator: 21)
!13491 = !DILexicalBlockFile(scope: !2039, file: !408, discriminator: 20)
!13492 = !DILocation(line: 3575, column: 2228, scope: !2040)
!13493 = !DILocation(line: 3575, column: 2228, scope: !2039)
!13494 = !DILocation(line: 3575, column: 2231, scope: !2040)
!13495 = !DILocation(line: 3575, column: 20, scope: !2033)
!13496 = !DILocation(line: 3576, column: 29, scope: !2047)
!13497 = !DILocation(line: 3576, column: 47, scope: !2047)
!13498 = !DILocation(line: 3576, column: 56, scope: !2047)
!13499 = !DILocation(line: 3577, column: 13, scope: !2047)
!13500 = !DILocation(line: 3577, column: 18, scope: !13501)
!13501 = !DILexicalBlockFile(scope: !2046, file: !408, discriminator: 1)
!13502 = !DILocation(line: 3577, column: 28, scope: !2046)
!13503 = !DILocation(line: 3577, column: 59, scope: !2046)
!13504 = !DILocation(line: 3577, column: 67, scope: !2046)
!13505 = !DILocation(line: 3577, column: 87, scope: !2050)
!13506 = !DILocation(line: 3577, column: 103, scope: !2050)
!13507 = !DILocation(line: 3577, column: 87, scope: !2046)
!13508 = !DILocation(line: 3577, column: 118, scope: !13509)
!13509 = !DILexicalBlockFile(scope: !2050, file: !408, discriminator: 2)
!13510 = !DILocation(line: 3577, column: 123, scope: !13511)
!13511 = !DILexicalBlockFile(scope: !2049, file: !408, discriminator: 4)
!13512 = !DILocation(line: 3577, column: 133, scope: !2049)
!13513 = !DILocation(line: 3577, column: 163, scope: !2049)
!13514 = !DILocation(line: 3577, column: 189, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !2049, file: !408, line: 3577, column: 186)
!13516 = !DILocation(line: 3577, column: 206, scope: !13515)
!13517 = !DILocation(line: 3577, column: 186, scope: !13515)
!13518 = !DILocation(line: 3577, column: 216, scope: !13515)
!13519 = !DILocation(line: 3577, column: 186, scope: !2049)
!13520 = !DILocation(line: 3577, column: 186, scope: !13521)
!13521 = !DILexicalBlockFile(scope: !2049, file: !408, discriminator: 5)
!13522 = !DILocation(line: 3577, column: 247, scope: !13523)
!13523 = !DILexicalBlockFile(scope: !13515, file: !408, discriminator: 6)
!13524 = !DILocation(line: 3577, column: 265, scope: !13515)
!13525 = !DILocation(line: 3577, column: 275, scope: !13515)
!13526 = !DILocation(line: 3577, column: 300, scope: !13515)
!13527 = !DILocation(line: 3577, column: 231, scope: !13515)
!13528 = !DILocation(line: 3577, column: 319, scope: !13529)
!13529 = !DILexicalBlockFile(scope: !2050, file: !408, discriminator: 7)
!13530 = !DILocation(line: 3577, column: 319, scope: !2049)
!13531 = !DILocation(line: 3577, column: 319, scope: !13532)
!13532 = !DILexicalBlockFile(scope: !2049, file: !408, discriminator: 8)
!13533 = !DILocation(line: 3577, column: 319, scope: !13534)
!13534 = !DILexicalBlockFile(scope: !2049, file: !408, discriminator: 9)
!13535 = !DILocation(line: 3577, column: 332, scope: !13536)
!13536 = !DILexicalBlockFile(scope: !13537, file: !408, discriminator: 10)
!13537 = !DILexicalBlockFile(scope: !2047, file: !408, discriminator: 3)
!13538 = !DILocation(line: 3577, column: 332, scope: !2046)
!13539 = !DILocation(line: 3577, column: 332, scope: !13540)
!13540 = !DILexicalBlockFile(scope: !2046, file: !408, discriminator: 11)
!13541 = !DILocation(line: 3578, column: 37, scope: !2047)
!13542 = !DILocation(line: 3578, column: 13, scope: !2047)
!13543 = !DILocation(line: 3578, column: 21, scope: !2047)
!13544 = !DILocation(line: 3578, column: 35, scope: !2047)
!13545 = !DILocation(line: 3579, column: 9, scope: !2047)
!13546 = !DILocation(line: 3579, column: 37, scope: !2052)
!13547 = !DILocation(line: 3579, column: 44, scope: !2052)
!13548 = !DILocation(line: 3579, column: 54, scope: !2052)
!13549 = !DILocation(line: 3579, column: 1497, scope: !2052)
!13550 = !DILocation(line: 3579, column: 1510, scope: !13551)
!13551 = !DILexicalBlockFile(scope: !2052, file: !408, discriminator: 1)
!13552 = !DILocation(line: 3579, column: 1533, scope: !2052)
!13553 = !DILocation(line: 3579, column: 1542, scope: !2052)
!13554 = !DILocation(line: 3579, column: 1375, scope: !2052)
!13555 = !DILocation(line: 3579, column: 1736, scope: !13556)
!13556 = !DILexicalBlockFile(scope: !2056, file: !408, discriminator: 3)
!13557 = !DILocation(line: 3579, column: 1757, scope: !2056)
!13558 = !DILocation(line: 3579, column: 1804, scope: !2056)
!13559 = !DILocation(line: 3579, column: 1817, scope: !2056)
!13560 = !DILocation(line: 3579, column: 1830, scope: !2056)
!13561 = !DILocation(line: 3579, column: 1841, scope: !2056)
!13562 = !DILocation(line: 3579, column: 1851, scope: !2056)
!13563 = !DILocation(line: 3579, column: 1849, scope: !2056)
!13564 = !DILocation(line: 3579, column: 1913, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !2056, file: !408, line: 3579, column: 1913)
!13566 = !DILocation(line: 3579, column: 1922, scope: !13565)
!13567 = !DILocation(line: 3579, column: 1926, scope: !13565)
!13568 = !DILocation(line: 3579, column: 1929, scope: !13569)
!13569 = !DILexicalBlockFile(scope: !13565, file: !408, discriminator: 5)
!13570 = !DILocation(line: 3579, column: 1938, scope: !13565)
!13571 = !DILocation(line: 3579, column: 1913, scope: !2056)
!13572 = !DILocation(line: 3579, column: 1958, scope: !13573)
!13573 = !DILexicalBlockFile(scope: !13574, file: !408, discriminator: 7)
!13574 = distinct !DILexicalBlock(scope: !13565, file: !408, line: 3579, column: 1944)
!13575 = !DILocation(line: 3579, column: 1968, scope: !13574)
!13576 = !DILocation(line: 3579, column: 1966, scope: !13574)
!13577 = !DILocation(line: 3579, column: 1955, scope: !13574)
!13578 = !DILocation(line: 3579, column: 2031, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13574, file: !408, line: 3579, column: 2031)
!13580 = !DILocation(line: 3579, column: 2040, scope: !13579)
!13581 = !DILocation(line: 3579, column: 2044, scope: !13579)
!13582 = !DILocation(line: 3579, column: 2047, scope: !13583)
!13583 = !DILexicalBlockFile(scope: !13579, file: !408, discriminator: 9)
!13584 = !DILocation(line: 3579, column: 2056, scope: !13579)
!13585 = !DILocation(line: 3579, column: 2031, scope: !13574)
!13586 = !DILocation(line: 3579, column: 2076, scope: !13587)
!13587 = !DILexicalBlockFile(scope: !13588, file: !408, discriminator: 11)
!13588 = distinct !DILexicalBlock(scope: !13579, file: !408, line: 3579, column: 2062)
!13589 = !DILocation(line: 3579, column: 2086, scope: !13588)
!13590 = !DILocation(line: 3579, column: 2084, scope: !13588)
!13591 = !DILocation(line: 3579, column: 2073, scope: !13588)
!13592 = !DILocation(line: 3579, column: 2149, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13588, file: !408, line: 3579, column: 2149)
!13594 = !DILocation(line: 3579, column: 2158, scope: !13593)
!13595 = !DILocation(line: 3579, column: 2162, scope: !13593)
!13596 = !DILocation(line: 3579, column: 2165, scope: !13597)
!13597 = !DILexicalBlockFile(scope: !13593, file: !408, discriminator: 13)
!13598 = !DILocation(line: 3579, column: 2174, scope: !13593)
!13599 = !DILocation(line: 3579, column: 2149, scope: !13588)
!13600 = !DILocation(line: 3579, column: 2192, scope: !13601)
!13601 = !DILexicalBlockFile(scope: !13593, file: !408, discriminator: 15)
!13602 = !DILocation(line: 3579, column: 2202, scope: !13593)
!13603 = !DILocation(line: 3579, column: 2200, scope: !13593)
!13604 = !DILocation(line: 3579, column: 2189, scope: !13593)
!13605 = !DILocation(line: 3579, column: 2180, scope: !13593)
!13606 = !DILocation(line: 3579, column: 2261, scope: !13607)
!13607 = !DILexicalBlockFile(scope: !13608, file: !408, discriminator: 17)
!13608 = !DILexicalBlockFile(scope: !13609, file: !408, discriminator: 16)
!13609 = !DILexicalBlockFile(scope: !13588, file: !408, discriminator: 14)
!13610 = !DILocation(line: 3579, column: 2263, scope: !13611)
!13611 = !DILexicalBlockFile(scope: !13612, file: !408, discriminator: 18)
!13612 = !DILexicalBlockFile(scope: !13613, file: !408, discriminator: 12)
!13613 = !DILexicalBlockFile(scope: !13574, file: !408, discriminator: 10)
!13614 = !DILocation(line: 3579, column: 2265, scope: !13615)
!13615 = !DILexicalBlockFile(scope: !13616, file: !408, discriminator: 19)
!13616 = !DILexicalBlockFile(scope: !13617, file: !408, discriminator: 8)
!13617 = !DILexicalBlockFile(scope: !2056, file: !408, discriminator: 6)
!13618 = !DILocation(line: 3579, column: 1941, scope: !13565)
!13619 = !DILocation(line: 3579, column: 2275, scope: !2052)
!13620 = !DILocation(line: 3579, column: 2275, scope: !2056)
!13621 = !DILocation(line: 3579, column: 2300, scope: !13622)
!13622 = !DILexicalBlockFile(scope: !13623, file: !408, discriminator: 4)
!13623 = !DILexicalBlockFile(scope: !2052, file: !408, discriminator: 2)
!13624 = !DILocation(line: 3579, column: 2282, scope: !2052)
!13625 = !DILocation(line: 3579, column: 37, scope: !13626)
!13626 = !DILexicalBlockFile(scope: !13627, file: !408, discriminator: 21)
!13627 = !DILexicalBlockFile(scope: !2052, file: !408, discriminator: 20)
!13628 = !DILocation(line: 3579, column: 2328, scope: !2053)
!13629 = !DILocation(line: 3579, column: 2328, scope: !2052)
!13630 = !DILocation(line: 3579, column: 2331, scope: !2053)
!13631 = !DILocation(line: 3579, column: 20, scope: !2040)
!13632 = !DILocation(line: 3580, column: 29, scope: !2060)
!13633 = !DILocation(line: 3580, column: 47, scope: !2060)
!13634 = !DILocation(line: 3580, column: 56, scope: !2060)
!13635 = !DILocation(line: 3581, column: 13, scope: !2060)
!13636 = !DILocation(line: 3581, column: 18, scope: !13637)
!13637 = !DILexicalBlockFile(scope: !2059, file: !408, discriminator: 1)
!13638 = !DILocation(line: 3581, column: 28, scope: !2059)
!13639 = !DILocation(line: 3581, column: 59, scope: !2059)
!13640 = !DILocation(line: 3581, column: 67, scope: !2059)
!13641 = !DILocation(line: 3581, column: 92, scope: !2063)
!13642 = !DILocation(line: 3581, column: 108, scope: !2063)
!13643 = !DILocation(line: 3581, column: 92, scope: !2059)
!13644 = !DILocation(line: 3581, column: 123, scope: !13645)
!13645 = !DILexicalBlockFile(scope: !2063, file: !408, discriminator: 2)
!13646 = !DILocation(line: 3581, column: 128, scope: !13647)
!13647 = !DILexicalBlockFile(scope: !2062, file: !408, discriminator: 4)
!13648 = !DILocation(line: 3581, column: 138, scope: !2062)
!13649 = !DILocation(line: 3581, column: 168, scope: !2062)
!13650 = !DILocation(line: 3581, column: 194, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !2062, file: !408, line: 3581, column: 191)
!13652 = !DILocation(line: 3581, column: 211, scope: !13651)
!13653 = !DILocation(line: 3581, column: 191, scope: !13651)
!13654 = !DILocation(line: 3581, column: 221, scope: !13651)
!13655 = !DILocation(line: 3581, column: 191, scope: !2062)
!13656 = !DILocation(line: 3581, column: 191, scope: !13657)
!13657 = !DILexicalBlockFile(scope: !2062, file: !408, discriminator: 5)
!13658 = !DILocation(line: 3581, column: 252, scope: !13659)
!13659 = !DILexicalBlockFile(scope: !13651, file: !408, discriminator: 6)
!13660 = !DILocation(line: 3581, column: 270, scope: !13651)
!13661 = !DILocation(line: 3581, column: 280, scope: !13651)
!13662 = !DILocation(line: 3581, column: 305, scope: !13651)
!13663 = !DILocation(line: 3581, column: 236, scope: !13651)
!13664 = !DILocation(line: 3581, column: 324, scope: !13665)
!13665 = !DILexicalBlockFile(scope: !2063, file: !408, discriminator: 7)
!13666 = !DILocation(line: 3581, column: 324, scope: !2062)
!13667 = !DILocation(line: 3581, column: 324, scope: !13668)
!13668 = !DILexicalBlockFile(scope: !2062, file: !408, discriminator: 8)
!13669 = !DILocation(line: 3581, column: 324, scope: !13670)
!13670 = !DILexicalBlockFile(scope: !2062, file: !408, discriminator: 9)
!13671 = !DILocation(line: 3581, column: 337, scope: !13672)
!13672 = !DILexicalBlockFile(scope: !13673, file: !408, discriminator: 10)
!13673 = !DILexicalBlockFile(scope: !2060, file: !408, discriminator: 3)
!13674 = !DILocation(line: 3581, column: 337, scope: !2059)
!13675 = !DILocation(line: 3581, column: 337, scope: !13676)
!13676 = !DILexicalBlockFile(scope: !2059, file: !408, discriminator: 11)
!13677 = !DILocation(line: 3582, column: 42, scope: !2060)
!13678 = !DILocation(line: 3582, column: 13, scope: !2060)
!13679 = !DILocation(line: 3582, column: 21, scope: !2060)
!13680 = !DILocation(line: 3582, column: 40, scope: !2060)
!13681 = !DILocation(line: 3583, column: 14, scope: !2060)
!13682 = !DILocation(line: 3583, column: 26, scope: !2060)
!13683 = !{!2752, !2621, i64 112}
!13684 = !DILocation(line: 3584, column: 17, scope: !2060)
!13685 = !DILocation(line: 3584, column: 23, scope: !2060)
!13686 = !DILocation(line: 3583, column: 13, scope: !2060)
!13687 = !DILocation(line: 3588, column: 9, scope: !2060)
!13688 = !DILocation(line: 3588, column: 37, scope: !2065)
!13689 = !DILocation(line: 3588, column: 44, scope: !2065)
!13690 = !DILocation(line: 3588, column: 54, scope: !2065)
!13691 = !DILocation(line: 3588, column: 1471, scope: !2065)
!13692 = !DILocation(line: 3588, column: 1484, scope: !13693)
!13693 = !DILexicalBlockFile(scope: !2065, file: !408, discriminator: 1)
!13694 = !DILocation(line: 3588, column: 1505, scope: !2065)
!13695 = !DILocation(line: 3588, column: 1514, scope: !2065)
!13696 = !DILocation(line: 3588, column: 1355, scope: !2065)
!13697 = !DILocation(line: 3588, column: 1706, scope: !13698)
!13698 = !DILexicalBlockFile(scope: !2069, file: !408, discriminator: 3)
!13699 = !DILocation(line: 3588, column: 1727, scope: !2069)
!13700 = !DILocation(line: 3588, column: 1774, scope: !2069)
!13701 = !DILocation(line: 3588, column: 1787, scope: !2069)
!13702 = !DILocation(line: 3588, column: 1800, scope: !2069)
!13703 = !DILocation(line: 3588, column: 1811, scope: !2069)
!13704 = !DILocation(line: 3588, column: 1821, scope: !2069)
!13705 = !DILocation(line: 3588, column: 1819, scope: !2069)
!13706 = !DILocation(line: 3588, column: 1881, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !2069, file: !408, line: 3588, column: 1881)
!13708 = !DILocation(line: 3588, column: 1890, scope: !13707)
!13709 = !DILocation(line: 3588, column: 1894, scope: !13707)
!13710 = !DILocation(line: 3588, column: 1897, scope: !13711)
!13711 = !DILexicalBlockFile(scope: !13707, file: !408, discriminator: 5)
!13712 = !DILocation(line: 3588, column: 1906, scope: !13707)
!13713 = !DILocation(line: 3588, column: 1881, scope: !2069)
!13714 = !DILocation(line: 3588, column: 1926, scope: !13715)
!13715 = !DILexicalBlockFile(scope: !13716, file: !408, discriminator: 7)
!13716 = distinct !DILexicalBlock(scope: !13707, file: !408, line: 3588, column: 1912)
!13717 = !DILocation(line: 3588, column: 1936, scope: !13716)
!13718 = !DILocation(line: 3588, column: 1934, scope: !13716)
!13719 = !DILocation(line: 3588, column: 1923, scope: !13716)
!13720 = !DILocation(line: 3588, column: 1997, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13716, file: !408, line: 3588, column: 1997)
!13722 = !DILocation(line: 3588, column: 2006, scope: !13721)
!13723 = !DILocation(line: 3588, column: 2010, scope: !13721)
!13724 = !DILocation(line: 3588, column: 2013, scope: !13725)
!13725 = !DILexicalBlockFile(scope: !13721, file: !408, discriminator: 9)
!13726 = !DILocation(line: 3588, column: 2022, scope: !13721)
!13727 = !DILocation(line: 3588, column: 1997, scope: !13716)
!13728 = !DILocation(line: 3588, column: 2042, scope: !13729)
!13729 = !DILexicalBlockFile(scope: !13730, file: !408, discriminator: 11)
!13730 = distinct !DILexicalBlock(scope: !13721, file: !408, line: 3588, column: 2028)
!13731 = !DILocation(line: 3588, column: 2052, scope: !13730)
!13732 = !DILocation(line: 3588, column: 2050, scope: !13730)
!13733 = !DILocation(line: 3588, column: 2039, scope: !13730)
!13734 = !DILocation(line: 3588, column: 2113, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13730, file: !408, line: 3588, column: 2113)
!13736 = !DILocation(line: 3588, column: 2122, scope: !13735)
!13737 = !DILocation(line: 3588, column: 2126, scope: !13735)
!13738 = !DILocation(line: 3588, column: 2129, scope: !13739)
!13739 = !DILexicalBlockFile(scope: !13735, file: !408, discriminator: 13)
!13740 = !DILocation(line: 3588, column: 2138, scope: !13735)
!13741 = !DILocation(line: 3588, column: 2113, scope: !13730)
!13742 = !DILocation(line: 3588, column: 2156, scope: !13743)
!13743 = !DILexicalBlockFile(scope: !13735, file: !408, discriminator: 15)
!13744 = !DILocation(line: 3588, column: 2166, scope: !13735)
!13745 = !DILocation(line: 3588, column: 2164, scope: !13735)
!13746 = !DILocation(line: 3588, column: 2153, scope: !13735)
!13747 = !DILocation(line: 3588, column: 2144, scope: !13735)
!13748 = !DILocation(line: 3588, column: 2223, scope: !13749)
!13749 = !DILexicalBlockFile(scope: !13750, file: !408, discriminator: 17)
!13750 = !DILexicalBlockFile(scope: !13751, file: !408, discriminator: 16)
!13751 = !DILexicalBlockFile(scope: !13730, file: !408, discriminator: 14)
!13752 = !DILocation(line: 3588, column: 2225, scope: !13753)
!13753 = !DILexicalBlockFile(scope: !13754, file: !408, discriminator: 18)
!13754 = !DILexicalBlockFile(scope: !13755, file: !408, discriminator: 12)
!13755 = !DILexicalBlockFile(scope: !13716, file: !408, discriminator: 10)
!13756 = !DILocation(line: 3588, column: 2227, scope: !13757)
!13757 = !DILexicalBlockFile(scope: !13758, file: !408, discriminator: 19)
!13758 = !DILexicalBlockFile(scope: !13759, file: !408, discriminator: 8)
!13759 = !DILexicalBlockFile(scope: !2069, file: !408, discriminator: 6)
!13760 = !DILocation(line: 3588, column: 1909, scope: !13707)
!13761 = !DILocation(line: 3588, column: 2237, scope: !2065)
!13762 = !DILocation(line: 3588, column: 2237, scope: !2069)
!13763 = !DILocation(line: 3588, column: 2262, scope: !13764)
!13764 = !DILexicalBlockFile(scope: !13765, file: !408, discriminator: 4)
!13765 = !DILexicalBlockFile(scope: !2065, file: !408, discriminator: 2)
!13766 = !DILocation(line: 3588, column: 2244, scope: !2065)
!13767 = !DILocation(line: 3588, column: 37, scope: !13768)
!13768 = !DILexicalBlockFile(scope: !13769, file: !408, discriminator: 21)
!13769 = !DILexicalBlockFile(scope: !2065, file: !408, discriminator: 20)
!13770 = !DILocation(line: 3588, column: 2288, scope: !2066)
!13771 = !DILocation(line: 3588, column: 2288, scope: !2065)
!13772 = !DILocation(line: 3588, column: 2291, scope: !2066)
!13773 = !DILocation(line: 3588, column: 20, scope: !2053)
!13774 = !DILocation(line: 3589, column: 29, scope: !2073)
!13775 = !DILocation(line: 3589, column: 47, scope: !2073)
!13776 = !DILocation(line: 3589, column: 56, scope: !2073)
!13777 = !DILocation(line: 3590, column: 13, scope: !2073)
!13778 = !DILocation(line: 3590, column: 18, scope: !13779)
!13779 = !DILexicalBlockFile(scope: !2072, file: !408, discriminator: 1)
!13780 = !DILocation(line: 3590, column: 28, scope: !2072)
!13781 = !DILocation(line: 3590, column: 59, scope: !2072)
!13782 = !DILocation(line: 3590, column: 67, scope: !2072)
!13783 = !DILocation(line: 3590, column: 90, scope: !2076)
!13784 = !DILocation(line: 3590, column: 106, scope: !2076)
!13785 = !DILocation(line: 3590, column: 90, scope: !2072)
!13786 = !DILocation(line: 3590, column: 121, scope: !13787)
!13787 = !DILexicalBlockFile(scope: !2076, file: !408, discriminator: 2)
!13788 = !DILocation(line: 3590, column: 126, scope: !13789)
!13789 = !DILexicalBlockFile(scope: !2075, file: !408, discriminator: 4)
!13790 = !DILocation(line: 3590, column: 136, scope: !2075)
!13791 = !DILocation(line: 3590, column: 166, scope: !2075)
!13792 = !DILocation(line: 3590, column: 192, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !2075, file: !408, line: 3590, column: 189)
!13794 = !DILocation(line: 3590, column: 209, scope: !13793)
!13795 = !DILocation(line: 3590, column: 189, scope: !13793)
!13796 = !DILocation(line: 3590, column: 219, scope: !13793)
!13797 = !DILocation(line: 3590, column: 189, scope: !2075)
!13798 = !DILocation(line: 3590, column: 189, scope: !13799)
!13799 = !DILexicalBlockFile(scope: !2075, file: !408, discriminator: 5)
!13800 = !DILocation(line: 3590, column: 250, scope: !13801)
!13801 = !DILexicalBlockFile(scope: !13793, file: !408, discriminator: 6)
!13802 = !DILocation(line: 3590, column: 268, scope: !13793)
!13803 = !DILocation(line: 3590, column: 278, scope: !13793)
!13804 = !DILocation(line: 3590, column: 303, scope: !13793)
!13805 = !DILocation(line: 3590, column: 234, scope: !13793)
!13806 = !DILocation(line: 3590, column: 322, scope: !13807)
!13807 = !DILexicalBlockFile(scope: !2076, file: !408, discriminator: 7)
!13808 = !DILocation(line: 3590, column: 322, scope: !2075)
!13809 = !DILocation(line: 3590, column: 322, scope: !13810)
!13810 = !DILexicalBlockFile(scope: !2075, file: !408, discriminator: 8)
!13811 = !DILocation(line: 3590, column: 322, scope: !13812)
!13812 = !DILexicalBlockFile(scope: !2075, file: !408, discriminator: 9)
!13813 = !DILocation(line: 3590, column: 335, scope: !13814)
!13814 = !DILexicalBlockFile(scope: !13815, file: !408, discriminator: 10)
!13815 = !DILexicalBlockFile(scope: !2073, file: !408, discriminator: 3)
!13816 = !DILocation(line: 3590, column: 335, scope: !2072)
!13817 = !DILocation(line: 3590, column: 335, scope: !13818)
!13818 = !DILexicalBlockFile(scope: !2072, file: !408, discriminator: 11)
!13819 = !DILocation(line: 3591, column: 40, scope: !2073)
!13820 = !DILocation(line: 3591, column: 13, scope: !2073)
!13821 = !DILocation(line: 3591, column: 21, scope: !2073)
!13822 = !DILocation(line: 3591, column: 38, scope: !2073)
!13823 = !DILocation(line: 3592, column: 14, scope: !2073)
!13824 = !DILocation(line: 3592, column: 26, scope: !2073)
!13825 = !DILocation(line: 3593, column: 17, scope: !2073)
!13826 = !DILocation(line: 3593, column: 23, scope: !2073)
!13827 = !DILocation(line: 3592, column: 13, scope: !2073)
!13828 = !DILocation(line: 3597, column: 9, scope: !2073)
!13829 = !DILocation(line: 3598, column: 13, scope: !2079)
!13830 = !DILocation(line: 3598, column: 18, scope: !13831)
!13831 = !DILexicalBlockFile(scope: !2078, file: !408, discriminator: 1)
!13832 = !DILocation(line: 3598, column: 28, scope: !2078)
!13833 = !DILocation(line: 3598, column: 58, scope: !2078)
!13834 = !DILocation(line: 3598, column: 79, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !2078, file: !408, line: 3598, column: 76)
!13836 = !DILocation(line: 3598, column: 96, scope: !13835)
!13837 = !DILocation(line: 3598, column: 76, scope: !13835)
!13838 = !DILocation(line: 3598, column: 106, scope: !13835)
!13839 = !DILocation(line: 3598, column: 76, scope: !2078)
!13840 = !DILocation(line: 3598, column: 76, scope: !13841)
!13841 = !DILexicalBlockFile(scope: !2078, file: !408, discriminator: 2)
!13842 = !DILocation(line: 3598, column: 137, scope: !13843)
!13843 = !DILexicalBlockFile(scope: !13835, file: !408, discriminator: 3)
!13844 = !DILocation(line: 3598, column: 155, scope: !13835)
!13845 = !DILocation(line: 3598, column: 165, scope: !13835)
!13846 = !DILocation(line: 3598, column: 190, scope: !13835)
!13847 = !DILocation(line: 3598, column: 121, scope: !13835)
!13848 = !DILocation(line: 3598, column: 209, scope: !13849)
!13849 = !DILexicalBlockFile(scope: !2079, file: !408, discriminator: 4)
!13850 = !DILocation(line: 3598, column: 209, scope: !2078)
!13851 = !DILocation(line: 3598, column: 209, scope: !13852)
!13852 = !DILexicalBlockFile(scope: !2078, file: !408, discriminator: 5)
!13853 = !DILocation(line: 3599, column: 26, scope: !2079)
!13854 = !DILocation(line: 3599, column: 66, scope: !2079)
!13855 = !DILocation(line: 3599, column: 13, scope: !2079)
!13856 = !DILocation(line: 3600, column: 13, scope: !2079)
!13857 = !DILocation(line: 3602, column: 5, scope: !2024)
!13858 = !DILocation(line: 3602, column: 5, scope: !13230)
!13859 = !DILocation(line: 3602, column: 5, scope: !2023)
!13860 = !DILocation(line: 3559, column: 29, scope: !2024)
!13861 = !DILocation(line: 3559, column: 5, scope: !2024)
!13862 = !DILocation(line: 3604, column: 5, scope: !1983)
!13863 = !DILocation(line: 3604, column: 10, scope: !13864)
!13864 = !DILexicalBlockFile(scope: !2081, file: !408, discriminator: 1)
!13865 = !DILocation(line: 3604, column: 20, scope: !2081)
!13866 = !DILocation(line: 3604, column: 50, scope: !2081)
!13867 = !DILocation(line: 3604, column: 71, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !2081, file: !408, line: 3604, column: 68)
!13869 = !DILocation(line: 3604, column: 88, scope: !13868)
!13870 = !DILocation(line: 3604, column: 68, scope: !13868)
!13871 = !DILocation(line: 3604, column: 98, scope: !13868)
!13872 = !DILocation(line: 3604, column: 68, scope: !2081)
!13873 = !DILocation(line: 3604, column: 68, scope: !13874)
!13874 = !DILexicalBlockFile(scope: !2081, file: !408, discriminator: 2)
!13875 = !DILocation(line: 3604, column: 129, scope: !13876)
!13876 = !DILexicalBlockFile(scope: !13868, file: !408, discriminator: 3)
!13877 = !DILocation(line: 3604, column: 147, scope: !13868)
!13878 = !DILocation(line: 3604, column: 157, scope: !13868)
!13879 = !DILocation(line: 3604, column: 182, scope: !13868)
!13880 = !DILocation(line: 3604, column: 113, scope: !13868)
!13881 = !DILocation(line: 3604, column: 201, scope: !13882)
!13882 = !DILexicalBlockFile(scope: !1983, file: !408, discriminator: 4)
!13883 = !DILocation(line: 3604, column: 201, scope: !2081)
!13884 = !DILocation(line: 3604, column: 201, scope: !13885)
!13885 = !DILexicalBlockFile(scope: !2081, file: !408, discriminator: 5)
!13886 = !DILocation(line: 3605, column: 58, scope: !1983)
!13887 = !DILocation(line: 3605, column: 5, scope: !1983)
!13888 = !DILocation(line: 3606, column: 1, scope: !1983)
!13889 = !DILocation(line: 3507, column: 36, scope: !2125)
!13890 = !DILocation(line: 3507, column: 52, scope: !2125)
!13891 = !DILocation(line: 3509, column: 58, scope: !2125)
!13892 = !DILocation(line: 3509, column: 5, scope: !2125)
!13893 = !DILocation(line: 3349, column: 30, scope: !1874)
!13894 = !DILocation(line: 3349, column: 48, scope: !1874)
!13895 = !DILocation(line: 3349, column: 58, scope: !1874)
!13896 = !DILocation(line: 3349, column: 72, scope: !1874)
!13897 = !DILocation(line: 3351, column: 5, scope: !1874)
!13898 = !DILocation(line: 3351, column: 9, scope: !1874)
!13899 = !DILocation(line: 3354, column: 11, scope: !1874)
!13900 = !DILocation(line: 3354, column: 23, scope: !1874)
!13901 = !{!2752, !2621, i64 56}
!13902 = !DILocation(line: 3354, column: 30, scope: !1874)
!13903 = !DILocation(line: 3354, column: 36, scope: !1874)
!13904 = !DILocation(line: 3354, column: 44, scope: !1874)
!13905 = !DILocation(line: 3354, column: 50, scope: !1874)
!13906 = !DILocation(line: 3354, column: 60, scope: !1874)
!13907 = !DILocation(line: 3354, column: 10, scope: !1874)
!13908 = !DILocation(line: 3354, column: 8, scope: !1874)
!13909 = !DILocation(line: 3356, column: 9, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !1874, file: !408, line: 3356, column: 9)
!13911 = !DILocation(line: 3356, column: 9, scope: !1874)
!13912 = !DILocation(line: 3357, column: 9, scope: !13910)
!13913 = !DILocation(line: 3359, column: 10, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !1874, file: !408, line: 3359, column: 9)
!13915 = !DILocation(line: 3359, column: 9, scope: !1874)
!13916 = !DILocation(line: 3361, column: 14, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13914, file: !408, line: 3359, column: 14)
!13918 = !DILocation(line: 3361, column: 26, scope: !13917)
!13919 = !{!2752, !2621, i64 32}
!13920 = !DILocation(line: 3361, column: 40, scope: !13917)
!13921 = !DILocation(line: 3361, column: 46, scope: !13917)
!13922 = !DILocation(line: 3361, column: 13, scope: !13917)
!13923 = !DILocation(line: 3362, column: 14, scope: !13917)
!13924 = !DILocation(line: 3362, column: 26, scope: !13917)
!13925 = !{!2752, !2621, i64 48}
!13926 = !DILocation(line: 3362, column: 46, scope: !13917)
!13927 = !DILocation(line: 3362, column: 52, scope: !13917)
!13928 = !DILocation(line: 3362, column: 13, scope: !13917)
!13929 = !DILocation(line: 3363, column: 14, scope: !13917)
!13930 = !DILocation(line: 3363, column: 26, scope: !13917)
!13931 = !{!2752, !2621, i64 40}
!13932 = !DILocation(line: 3363, column: 48, scope: !13917)
!13933 = !DILocation(line: 3363, column: 54, scope: !13917)
!13934 = !DILocation(line: 3363, column: 13, scope: !13917)
!13935 = !DILocation(line: 3360, column: 9, scope: !13917)
!13936 = !DILocation(line: 3366, column: 9, scope: !13917)
!13937 = !DILocation(line: 3369, column: 58, scope: !1874)
!13938 = !DILocation(line: 3369, column: 5, scope: !1874)
!13939 = !DILocation(line: 3370, column: 1, scope: !1874)
!13940 = !DILocation(line: 2822, column: 32, scope: !1883)
!13941 = !DILocation(line: 2822, column: 48, scope: !1883)
!13942 = !DILocation(line: 2822, column: 58, scope: !1883)
!13943 = !DILocation(line: 2822, column: 72, scope: !1883)
!13944 = !DILocation(line: 2824, column: 5, scope: !1883)
!13945 = !DILocation(line: 2824, column: 15, scope: !1883)
!13946 = !DILocation(line: 2824, column: 24, scope: !1883)
!13947 = !DILocation(line: 2824, column: 32, scope: !1883)
!13948 = !DILocation(line: 2824, column: 43, scope: !1883)
!13949 = !DILocation(line: 2825, column: 5, scope: !1883)
!13950 = !DILocation(line: 2825, column: 23, scope: !1883)
!13951 = !DILocation(line: 2825, column: 68, scope: !1883)
!13952 = !DILocation(line: 2825, column: 50, scope: !1883)
!13953 = !DILocation(line: 2825, column: 29, scope: !1883)
!13954 = !DILocation(line: 2828, column: 17, scope: !1883)
!13955 = !DILocation(line: 2828, column: 27, scope: !13956)
!13956 = !DILexicalBlockFile(scope: !1883, file: !408, discriminator: 1)
!13957 = !DILocation(line: 2828, column: 38, scope: !13958)
!13958 = !DILexicalBlockFile(scope: !1883, file: !408, discriminator: 2)
!13959 = !DILocation(line: 2828, column: 50, scope: !1883)
!13960 = !{!2752, !2621, i64 24}
!13961 = !DILocation(line: 2828, column: 63, scope: !1883)
!13962 = !DILocation(line: 2828, column: 37, scope: !1883)
!13963 = !DILocation(line: 2829, column: 17, scope: !1883)
!13964 = !DILocation(line: 2829, column: 23, scope: !1883)
!13965 = !DILocation(line: 2827, column: 14, scope: !1883)
!13966 = !DILocation(line: 2827, column: 12, scope: !1883)
!13967 = !DILocation(line: 2830, column: 9, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2830, column: 9)
!13969 = !DILocation(line: 2830, column: 16, scope: !13968)
!13970 = !DILocation(line: 2830, column: 9, scope: !1883)
!13971 = !DILocation(line: 2831, column: 9, scope: !13968)
!13972 = !DILocation(line: 2833, column: 35, scope: !1883)
!13973 = !DILocation(line: 2833, column: 39, scope: !1883)
!13974 = !DILocation(line: 2833, column: 60, scope: !1883)
!13975 = !DILocation(line: 2833, column: 13, scope: !1883)
!13976 = !DILocation(line: 2833, column: 11, scope: !1883)
!13977 = !DILocation(line: 2834, column: 5, scope: !1883)
!13978 = !DILocation(line: 2834, column: 10, scope: !13979)
!13979 = !DILexicalBlockFile(scope: !1897, file: !408, discriminator: 1)
!13980 = !DILocation(line: 2834, column: 20, scope: !1897)
!13981 = !DILocation(line: 2834, column: 50, scope: !1897)
!13982 = !DILocation(line: 2834, column: 67, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !1897, file: !408, line: 2834, column: 64)
!13984 = !DILocation(line: 2834, column: 84, scope: !13983)
!13985 = !DILocation(line: 2834, column: 64, scope: !13983)
!13986 = !DILocation(line: 2834, column: 94, scope: !13983)
!13987 = !DILocation(line: 2834, column: 64, scope: !1897)
!13988 = !DILocation(line: 2834, column: 64, scope: !13989)
!13989 = !DILexicalBlockFile(scope: !1897, file: !408, discriminator: 2)
!13990 = !DILocation(line: 2834, column: 125, scope: !13991)
!13991 = !DILexicalBlockFile(scope: !13983, file: !408, discriminator: 3)
!13992 = !DILocation(line: 2834, column: 143, scope: !13983)
!13993 = !DILocation(line: 2834, column: 153, scope: !13983)
!13994 = !DILocation(line: 2834, column: 178, scope: !13983)
!13995 = !DILocation(line: 2834, column: 109, scope: !13983)
!13996 = !DILocation(line: 2834, column: 197, scope: !13997)
!13997 = !DILexicalBlockFile(scope: !1883, file: !408, discriminator: 4)
!13998 = !DILocation(line: 2834, column: 197, scope: !1897)
!13999 = !DILocation(line: 2834, column: 197, scope: !14000)
!14000 = !DILexicalBlockFile(scope: !1897, file: !408, discriminator: 5)
!14001 = !DILocation(line: 2835, column: 10, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !1883, file: !408, line: 2835, column: 9)
!14003 = !DILocation(line: 2835, column: 9, scope: !1883)
!14004 = !DILocation(line: 2836, column: 9, scope: !14002)
!14005 = !DILocation(line: 2839, column: 34, scope: !1883)
!14006 = !DILocation(line: 2839, column: 28, scope: !1883)
!14007 = !DILocation(line: 2839, column: 12, scope: !1883)
!14008 = !DILocation(line: 2839, column: 10, scope: !1883)
!14009 = !DILocation(line: 2840, column: 10, scope: !1901)
!14010 = !DILocation(line: 2840, column: 9, scope: !1883)
!14011 = !DILocation(line: 2841, column: 9, scope: !1900)
!14012 = !DILocation(line: 2841, column: 14, scope: !14013)
!14013 = !DILexicalBlockFile(scope: !1899, file: !408, discriminator: 1)
!14014 = !DILocation(line: 2841, column: 24, scope: !1899)
!14015 = !DILocation(line: 2841, column: 54, scope: !1899)
!14016 = !DILocation(line: 2841, column: 70, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !1899, file: !408, line: 2841, column: 67)
!14018 = !DILocation(line: 2841, column: 87, scope: !14017)
!14019 = !DILocation(line: 2841, column: 67, scope: !14017)
!14020 = !DILocation(line: 2841, column: 97, scope: !14017)
!14021 = !DILocation(line: 2841, column: 67, scope: !1899)
!14022 = !DILocation(line: 2841, column: 67, scope: !14023)
!14023 = !DILexicalBlockFile(scope: !1899, file: !408, discriminator: 2)
!14024 = !DILocation(line: 2841, column: 128, scope: !14025)
!14025 = !DILexicalBlockFile(scope: !14017, file: !408, discriminator: 3)
!14026 = !DILocation(line: 2841, column: 146, scope: !14017)
!14027 = !DILocation(line: 2841, column: 156, scope: !14017)
!14028 = !DILocation(line: 2841, column: 181, scope: !14017)
!14029 = !DILocation(line: 2841, column: 112, scope: !14017)
!14030 = !DILocation(line: 2841, column: 200, scope: !14031)
!14031 = !DILexicalBlockFile(scope: !1900, file: !408, discriminator: 4)
!14032 = !DILocation(line: 2841, column: 200, scope: !1899)
!14033 = !DILocation(line: 2841, column: 200, scope: !14034)
!14034 = !DILexicalBlockFile(scope: !1899, file: !408, discriminator: 5)
!14035 = !DILocation(line: 2842, column: 9, scope: !1900)
!14036 = !DILocation(line: 2844, column: 32, scope: !1905)
!14037 = !DILocation(line: 2844, column: 47, scope: !1905)
!14038 = !DILocation(line: 2844, column: 9, scope: !1905)
!14039 = !DILocation(line: 2844, column: 53, scope: !1905)
!14040 = !DILocation(line: 2844, column: 9, scope: !1883)
!14041 = !DILocation(line: 2845, column: 9, scope: !1904)
!14042 = !DILocation(line: 2845, column: 14, scope: !14043)
!14043 = !DILexicalBlockFile(scope: !1903, file: !408, discriminator: 1)
!14044 = !DILocation(line: 2845, column: 24, scope: !1903)
!14045 = !DILocation(line: 2845, column: 54, scope: !1903)
!14046 = !DILocation(line: 2845, column: 70, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !1903, file: !408, line: 2845, column: 67)
!14048 = !DILocation(line: 2845, column: 87, scope: !14047)
!14049 = !DILocation(line: 2845, column: 67, scope: !14047)
!14050 = !DILocation(line: 2845, column: 97, scope: !14047)
!14051 = !DILocation(line: 2845, column: 67, scope: !1903)
!14052 = !DILocation(line: 2845, column: 67, scope: !14053)
!14053 = !DILexicalBlockFile(scope: !1903, file: !408, discriminator: 2)
!14054 = !DILocation(line: 2845, column: 128, scope: !14055)
!14055 = !DILexicalBlockFile(scope: !14047, file: !408, discriminator: 3)
!14056 = !DILocation(line: 2845, column: 146, scope: !14047)
!14057 = !DILocation(line: 2845, column: 156, scope: !14047)
!14058 = !DILocation(line: 2845, column: 181, scope: !14047)
!14059 = !DILocation(line: 2845, column: 112, scope: !14047)
!14060 = !DILocation(line: 2845, column: 200, scope: !14061)
!14061 = !DILexicalBlockFile(scope: !1904, file: !408, discriminator: 4)
!14062 = !DILocation(line: 2845, column: 200, scope: !1903)
!14063 = !DILocation(line: 2845, column: 200, scope: !14064)
!14064 = !DILexicalBlockFile(scope: !1903, file: !408, discriminator: 5)
!14065 = !DILocation(line: 2846, column: 9, scope: !1904)
!14066 = !DILocation(line: 2846, column: 14, scope: !14067)
!14067 = !DILexicalBlockFile(scope: !1907, file: !408, discriminator: 1)
!14068 = !DILocation(line: 2846, column: 24, scope: !1907)
!14069 = !DILocation(line: 2846, column: 54, scope: !1907)
!14070 = !DILocation(line: 2846, column: 69, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !1907, file: !408, line: 2846, column: 66)
!14072 = !DILocation(line: 2846, column: 86, scope: !14071)
!14073 = !DILocation(line: 2846, column: 66, scope: !14071)
!14074 = !DILocation(line: 2846, column: 96, scope: !14071)
!14075 = !DILocation(line: 2846, column: 66, scope: !1907)
!14076 = !DILocation(line: 2846, column: 66, scope: !14077)
!14077 = !DILexicalBlockFile(scope: !1907, file: !408, discriminator: 2)
!14078 = !DILocation(line: 2846, column: 127, scope: !14079)
!14079 = !DILexicalBlockFile(scope: !14071, file: !408, discriminator: 3)
!14080 = !DILocation(line: 2846, column: 145, scope: !14071)
!14081 = !DILocation(line: 2846, column: 155, scope: !14071)
!14082 = !DILocation(line: 2846, column: 180, scope: !14071)
!14083 = !DILocation(line: 2846, column: 111, scope: !14071)
!14084 = !DILocation(line: 2846, column: 199, scope: !14061)
!14085 = !DILocation(line: 2846, column: 199, scope: !1907)
!14086 = !DILocation(line: 2846, column: 199, scope: !14087)
!14087 = !DILexicalBlockFile(scope: !1907, file: !408, discriminator: 5)
!14088 = !DILocation(line: 2847, column: 9, scope: !1904)
!14089 = !DILocation(line: 2849, column: 5, scope: !1883)
!14090 = !DILocation(line: 2849, column: 10, scope: !14091)
!14091 = !DILexicalBlockFile(scope: !1909, file: !408, discriminator: 1)
!14092 = !DILocation(line: 2849, column: 20, scope: !1909)
!14093 = !DILocation(line: 2849, column: 50, scope: !1909)
!14094 = !DILocation(line: 2849, column: 65, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !1909, file: !408, line: 2849, column: 62)
!14096 = !DILocation(line: 2849, column: 82, scope: !14095)
!14097 = !DILocation(line: 2849, column: 62, scope: !14095)
!14098 = !DILocation(line: 2849, column: 92, scope: !14095)
!14099 = !DILocation(line: 2849, column: 62, scope: !1909)
!14100 = !DILocation(line: 2849, column: 62, scope: !14101)
!14101 = !DILexicalBlockFile(scope: !1909, file: !408, discriminator: 2)
!14102 = !DILocation(line: 2849, column: 123, scope: !14103)
!14103 = !DILexicalBlockFile(scope: !14095, file: !408, discriminator: 3)
!14104 = !DILocation(line: 2849, column: 141, scope: !14095)
!14105 = !DILocation(line: 2849, column: 151, scope: !14095)
!14106 = !DILocation(line: 2849, column: 176, scope: !14095)
!14107 = !DILocation(line: 2849, column: 107, scope: !14095)
!14108 = !DILocation(line: 2849, column: 195, scope: !13997)
!14109 = !DILocation(line: 2849, column: 195, scope: !1909)
!14110 = !DILocation(line: 2849, column: 195, scope: !14111)
!14111 = !DILexicalBlockFile(scope: !1909, file: !408, discriminator: 5)
!14112 = !DILocation(line: 2851, column: 38, scope: !1883)
!14113 = !DILocation(line: 2851, column: 44, scope: !1883)
!14114 = !DILocation(line: 2851, column: 16, scope: !1883)
!14115 = !DILocation(line: 2851, column: 14, scope: !1883)
!14116 = !DILocation(line: 2852, column: 10, scope: !1913)
!14117 = !DILocation(line: 2852, column: 9, scope: !1883)
!14118 = !DILocation(line: 2853, column: 9, scope: !1912)
!14119 = !DILocation(line: 2853, column: 14, scope: !14120)
!14120 = !DILexicalBlockFile(scope: !1911, file: !408, discriminator: 1)
!14121 = !DILocation(line: 2853, column: 24, scope: !1911)
!14122 = !DILocation(line: 2853, column: 54, scope: !1911)
!14123 = !DILocation(line: 2853, column: 70, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !1911, file: !408, line: 2853, column: 67)
!14125 = !DILocation(line: 2853, column: 87, scope: !14124)
!14126 = !DILocation(line: 2853, column: 67, scope: !14124)
!14127 = !DILocation(line: 2853, column: 97, scope: !14124)
!14128 = !DILocation(line: 2853, column: 67, scope: !1911)
!14129 = !DILocation(line: 2853, column: 67, scope: !14130)
!14130 = !DILexicalBlockFile(scope: !1911, file: !408, discriminator: 2)
!14131 = !DILocation(line: 2853, column: 128, scope: !14132)
!14132 = !DILexicalBlockFile(scope: !14124, file: !408, discriminator: 3)
!14133 = !DILocation(line: 2853, column: 146, scope: !14124)
!14134 = !DILocation(line: 2853, column: 156, scope: !14124)
!14135 = !DILocation(line: 2853, column: 181, scope: !14124)
!14136 = !DILocation(line: 2853, column: 112, scope: !14124)
!14137 = !DILocation(line: 2853, column: 200, scope: !14138)
!14138 = !DILexicalBlockFile(scope: !1912, file: !408, discriminator: 4)
!14139 = !DILocation(line: 2853, column: 200, scope: !1911)
!14140 = !DILocation(line: 2853, column: 200, scope: !14141)
!14141 = !DILexicalBlockFile(scope: !1911, file: !408, discriminator: 5)
!14142 = !DILocation(line: 2854, column: 9, scope: !1912)
!14143 = !DILocation(line: 2856, column: 32, scope: !1917)
!14144 = !DILocation(line: 2856, column: 51, scope: !1917)
!14145 = !DILocation(line: 2856, column: 9, scope: !1917)
!14146 = !DILocation(line: 2856, column: 61, scope: !1917)
!14147 = !DILocation(line: 2856, column: 9, scope: !1883)
!14148 = !DILocation(line: 2857, column: 9, scope: !1916)
!14149 = !DILocation(line: 2857, column: 14, scope: !14150)
!14150 = !DILexicalBlockFile(scope: !1915, file: !408, discriminator: 1)
!14151 = !DILocation(line: 2857, column: 24, scope: !1915)
!14152 = !DILocation(line: 2857, column: 54, scope: !1915)
!14153 = !DILocation(line: 2857, column: 70, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !1915, file: !408, line: 2857, column: 67)
!14155 = !DILocation(line: 2857, column: 87, scope: !14154)
!14156 = !DILocation(line: 2857, column: 67, scope: !14154)
!14157 = !DILocation(line: 2857, column: 97, scope: !14154)
!14158 = !DILocation(line: 2857, column: 67, scope: !1915)
!14159 = !DILocation(line: 2857, column: 67, scope: !14160)
!14160 = !DILexicalBlockFile(scope: !1915, file: !408, discriminator: 2)
!14161 = !DILocation(line: 2857, column: 128, scope: !14162)
!14162 = !DILexicalBlockFile(scope: !14154, file: !408, discriminator: 3)
!14163 = !DILocation(line: 2857, column: 146, scope: !14154)
!14164 = !DILocation(line: 2857, column: 156, scope: !14154)
!14165 = !DILocation(line: 2857, column: 181, scope: !14154)
!14166 = !DILocation(line: 2857, column: 112, scope: !14154)
!14167 = !DILocation(line: 2857, column: 200, scope: !14168)
!14168 = !DILexicalBlockFile(scope: !1916, file: !408, discriminator: 4)
!14169 = !DILocation(line: 2857, column: 200, scope: !1915)
!14170 = !DILocation(line: 2857, column: 200, scope: !14171)
!14171 = !DILexicalBlockFile(scope: !1915, file: !408, discriminator: 5)
!14172 = !DILocation(line: 2858, column: 9, scope: !1916)
!14173 = !DILocation(line: 2858, column: 14, scope: !14174)
!14174 = !DILexicalBlockFile(scope: !1919, file: !408, discriminator: 1)
!14175 = !DILocation(line: 2858, column: 24, scope: !1919)
!14176 = !DILocation(line: 2858, column: 54, scope: !1919)
!14177 = !DILocation(line: 2858, column: 73, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !1919, file: !408, line: 2858, column: 70)
!14179 = !DILocation(line: 2858, column: 90, scope: !14178)
!14180 = !DILocation(line: 2858, column: 70, scope: !14178)
!14181 = !DILocation(line: 2858, column: 100, scope: !14178)
!14182 = !DILocation(line: 2858, column: 70, scope: !1919)
!14183 = !DILocation(line: 2858, column: 70, scope: !14184)
!14184 = !DILexicalBlockFile(scope: !1919, file: !408, discriminator: 2)
!14185 = !DILocation(line: 2858, column: 131, scope: !14186)
!14186 = !DILexicalBlockFile(scope: !14178, file: !408, discriminator: 3)
!14187 = !DILocation(line: 2858, column: 149, scope: !14178)
!14188 = !DILocation(line: 2858, column: 159, scope: !14178)
!14189 = !DILocation(line: 2858, column: 184, scope: !14178)
!14190 = !DILocation(line: 2858, column: 115, scope: !14178)
!14191 = !DILocation(line: 2858, column: 203, scope: !14168)
!14192 = !DILocation(line: 2858, column: 203, scope: !1919)
!14193 = !DILocation(line: 2858, column: 203, scope: !14194)
!14194 = !DILexicalBlockFile(scope: !1919, file: !408, discriminator: 5)
!14195 = !DILocation(line: 2859, column: 9, scope: !1916)
!14196 = !DILocation(line: 2861, column: 5, scope: !1883)
!14197 = !DILocation(line: 2861, column: 10, scope: !14198)
!14198 = !DILexicalBlockFile(scope: !1921, file: !408, discriminator: 1)
!14199 = !DILocation(line: 2861, column: 20, scope: !1921)
!14200 = !DILocation(line: 2861, column: 50, scope: !1921)
!14201 = !DILocation(line: 2861, column: 69, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !1921, file: !408, line: 2861, column: 66)
!14203 = !DILocation(line: 2861, column: 86, scope: !14202)
!14204 = !DILocation(line: 2861, column: 66, scope: !14202)
!14205 = !DILocation(line: 2861, column: 96, scope: !14202)
!14206 = !DILocation(line: 2861, column: 66, scope: !1921)
!14207 = !DILocation(line: 2861, column: 66, scope: !14208)
!14208 = !DILexicalBlockFile(scope: !1921, file: !408, discriminator: 2)
!14209 = !DILocation(line: 2861, column: 127, scope: !14210)
!14210 = !DILexicalBlockFile(scope: !14202, file: !408, discriminator: 3)
!14211 = !DILocation(line: 2861, column: 145, scope: !14202)
!14212 = !DILocation(line: 2861, column: 155, scope: !14202)
!14213 = !DILocation(line: 2861, column: 180, scope: !14202)
!14214 = !DILocation(line: 2861, column: 111, scope: !14202)
!14215 = !DILocation(line: 2861, column: 199, scope: !13997)
!14216 = !DILocation(line: 2861, column: 199, scope: !1921)
!14217 = !DILocation(line: 2861, column: 199, scope: !14218)
!14218 = !DILexicalBlockFile(scope: !1921, file: !408, discriminator: 5)
!14219 = !DILocation(line: 2863, column: 21, scope: !1883)
!14220 = !DILocation(line: 2863, column: 25, scope: !1883)
!14221 = !DILocation(line: 2863, column: 41, scope: !1883)
!14222 = !DILocation(line: 2863, column: 5, scope: !1883)
!14223 = !DILocation(line: 2864, column: 5, scope: !1883)
!14224 = !DILocation(line: 2864, column: 10, scope: !14225)
!14225 = !DILexicalBlockFile(scope: !1923, file: !408, discriminator: 1)
!14226 = !DILocation(line: 2864, column: 20, scope: !1923)
!14227 = !DILocation(line: 2864, column: 50, scope: !1923)
!14228 = !DILocation(line: 2864, column: 66, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !1923, file: !408, line: 2864, column: 63)
!14230 = !DILocation(line: 2864, column: 83, scope: !14229)
!14231 = !DILocation(line: 2864, column: 63, scope: !14229)
!14232 = !DILocation(line: 2864, column: 93, scope: !14229)
!14233 = !DILocation(line: 2864, column: 63, scope: !1923)
!14234 = !DILocation(line: 2864, column: 63, scope: !14235)
!14235 = !DILexicalBlockFile(scope: !1923, file: !408, discriminator: 2)
!14236 = !DILocation(line: 2864, column: 124, scope: !14237)
!14237 = !DILexicalBlockFile(scope: !14229, file: !408, discriminator: 3)
!14238 = !DILocation(line: 2864, column: 142, scope: !14229)
!14239 = !DILocation(line: 2864, column: 152, scope: !14229)
!14240 = !DILocation(line: 2864, column: 177, scope: !14229)
!14241 = !DILocation(line: 2864, column: 108, scope: !14229)
!14242 = !DILocation(line: 2864, column: 196, scope: !13997)
!14243 = !DILocation(line: 2864, column: 196, scope: !1923)
!14244 = !DILocation(line: 2864, column: 196, scope: !14245)
!14245 = !DILexicalBlockFile(scope: !1923, file: !408, discriminator: 5)
!14246 = !DILocation(line: 2865, column: 1, scope: !1883)
!14247 = !DILocation(line: 2865, column: 1, scope: !13956)
!14248 = !DILocation(line: 3032, column: 41, scope: !2082)
!14249 = !DILocation(line: 3032, column: 63, scope: !2082)
!14250 = !DILocation(line: 3033, column: 40, scope: !2082)
!14251 = !DILocation(line: 3035, column: 5, scope: !2082)
!14252 = !DILocation(line: 3035, column: 15, scope: !2082)
!14253 = !DILocation(line: 3036, column: 5, scope: !2082)
!14254 = !DILocation(line: 3036, column: 15, scope: !2082)
!14255 = !DILocation(line: 3038, column: 9, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !2082, file: !408, line: 3038, column: 9)
!14257 = !DILocation(line: 3038, column: 9, scope: !2082)
!14258 = !DILocation(line: 3039, column: 9, scope: !14256)
!14259 = !DILocation(line: 3041, column: 9, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !2082, file: !408, line: 3041, column: 9)
!14261 = !DILocation(line: 3041, column: 9, scope: !2082)
!14262 = !DILocation(line: 3042, column: 37, scope: !14260)
!14263 = !DILocation(line: 3042, column: 49, scope: !14260)
!14264 = !DILocation(line: 3042, column: 42, scope: !14260)
!14265 = !DILocation(line: 3042, column: 16, scope: !14260)
!14266 = !DILocation(line: 3042, column: 14, scope: !14260)
!14267 = !DILocation(line: 3042, column: 9, scope: !14260)
!14268 = !DILocation(line: 3044, column: 16, scope: !14260)
!14269 = !DILocation(line: 3044, column: 14, scope: !14260)
!14270 = !DILocation(line: 3045, column: 10, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !2082, file: !408, line: 3045, column: 9)
!14272 = !DILocation(line: 3045, column: 9, scope: !2082)
!14273 = !DILocation(line: 3046, column: 9, scope: !14271)
!14274 = !DILocation(line: 3048, column: 9, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !2082, file: !408, line: 3048, column: 9)
!14276 = !DILocation(line: 3048, column: 9, scope: !2082)
!14277 = !DILocation(line: 3049, column: 40, scope: !14275)
!14278 = !DILocation(line: 3049, column: 55, scope: !14275)
!14279 = !DILocation(line: 3049, column: 48, scope: !14275)
!14280 = !DILocation(line: 3049, column: 19, scope: !14275)
!14281 = !DILocation(line: 3049, column: 17, scope: !14275)
!14282 = !DILocation(line: 3049, column: 9, scope: !14275)
!14283 = !DILocation(line: 3051, column: 19, scope: !14275)
!14284 = !DILocation(line: 3051, column: 17, scope: !14275)
!14285 = !DILocation(line: 3052, column: 10, scope: !2094)
!14286 = !DILocation(line: 3052, column: 9, scope: !2082)
!14287 = !DILocation(line: 3053, column: 9, scope: !2093)
!14288 = !DILocation(line: 3053, column: 14, scope: !14289)
!14289 = !DILexicalBlockFile(scope: !2092, file: !408, discriminator: 1)
!14290 = !DILocation(line: 3053, column: 24, scope: !2092)
!14291 = !DILocation(line: 3053, column: 54, scope: !2092)
!14292 = !DILocation(line: 3053, column: 69, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !2092, file: !408, line: 3053, column: 66)
!14294 = !DILocation(line: 3053, column: 86, scope: !14293)
!14295 = !DILocation(line: 3053, column: 66, scope: !14293)
!14296 = !DILocation(line: 3053, column: 96, scope: !14293)
!14297 = !DILocation(line: 3053, column: 66, scope: !2092)
!14298 = !DILocation(line: 3053, column: 66, scope: !14299)
!14299 = !DILexicalBlockFile(scope: !2092, file: !408, discriminator: 2)
!14300 = !DILocation(line: 3053, column: 127, scope: !14301)
!14301 = !DILexicalBlockFile(scope: !14293, file: !408, discriminator: 3)
!14302 = !DILocation(line: 3053, column: 145, scope: !14293)
!14303 = !DILocation(line: 3053, column: 155, scope: !14293)
!14304 = !DILocation(line: 3053, column: 180, scope: !14293)
!14305 = !DILocation(line: 3053, column: 111, scope: !14293)
!14306 = !DILocation(line: 3053, column: 199, scope: !14307)
!14307 = !DILexicalBlockFile(scope: !2093, file: !408, discriminator: 4)
!14308 = !DILocation(line: 3053, column: 199, scope: !2092)
!14309 = !DILocation(line: 3053, column: 199, scope: !14310)
!14310 = !DILexicalBlockFile(scope: !2092, file: !408, discriminator: 5)
!14311 = !DILocation(line: 3054, column: 9, scope: !2093)
!14312 = !DILocation(line: 3058, column: 30, scope: !2082)
!14313 = !DILocation(line: 3058, column: 36, scope: !2082)
!14314 = !DILocation(line: 3058, column: 9, scope: !2082)
!14315 = !DILocation(line: 3058, column: 47, scope: !2082)
!14316 = !DILocation(line: 3058, column: 56, scope: !2082)
!14317 = !DILocation(line: 3057, column: 5, scope: !2082)
!14318 = !DILocation(line: 3061, column: 5, scope: !2082)
!14319 = !DILocation(line: 3061, column: 10, scope: !14320)
!14320 = !DILexicalBlockFile(scope: !2096, file: !408, discriminator: 1)
!14321 = !DILocation(line: 3061, column: 20, scope: !2096)
!14322 = !DILocation(line: 3061, column: 50, scope: !2096)
!14323 = !DILocation(line: 3061, column: 68, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !2096, file: !408, line: 3061, column: 65)
!14325 = !DILocation(line: 3061, column: 85, scope: !14324)
!14326 = !DILocation(line: 3061, column: 65, scope: !14324)
!14327 = !DILocation(line: 3061, column: 95, scope: !14324)
!14328 = !DILocation(line: 3061, column: 65, scope: !2096)
!14329 = !DILocation(line: 3061, column: 65, scope: !14330)
!14330 = !DILexicalBlockFile(scope: !2096, file: !408, discriminator: 2)
!14331 = !DILocation(line: 3061, column: 126, scope: !14332)
!14332 = !DILexicalBlockFile(scope: !14324, file: !408, discriminator: 3)
!14333 = !DILocation(line: 3061, column: 144, scope: !14324)
!14334 = !DILocation(line: 3061, column: 154, scope: !14324)
!14335 = !DILocation(line: 3061, column: 179, scope: !14324)
!14336 = !DILocation(line: 3061, column: 110, scope: !14324)
!14337 = !DILocation(line: 3061, column: 198, scope: !14338)
!14338 = !DILexicalBlockFile(scope: !2082, file: !408, discriminator: 4)
!14339 = !DILocation(line: 3061, column: 198, scope: !2096)
!14340 = !DILocation(line: 3061, column: 198, scope: !14341)
!14341 = !DILexicalBlockFile(scope: !2096, file: !408, discriminator: 5)
!14342 = !DILocation(line: 3062, column: 5, scope: !2082)
!14343 = !DILocation(line: 3062, column: 10, scope: !14344)
!14344 = !DILexicalBlockFile(scope: !2098, file: !408, discriminator: 1)
!14345 = !DILocation(line: 3062, column: 20, scope: !2098)
!14346 = !DILocation(line: 3062, column: 50, scope: !2098)
!14347 = !DILocation(line: 3062, column: 65, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !2098, file: !408, line: 3062, column: 62)
!14349 = !DILocation(line: 3062, column: 82, scope: !14348)
!14350 = !DILocation(line: 3062, column: 62, scope: !14348)
!14351 = !DILocation(line: 3062, column: 92, scope: !14348)
!14352 = !DILocation(line: 3062, column: 62, scope: !2098)
!14353 = !DILocation(line: 3062, column: 62, scope: !14354)
!14354 = !DILexicalBlockFile(scope: !2098, file: !408, discriminator: 2)
!14355 = !DILocation(line: 3062, column: 123, scope: !14356)
!14356 = !DILexicalBlockFile(scope: !14348, file: !408, discriminator: 3)
!14357 = !DILocation(line: 3062, column: 141, scope: !14348)
!14358 = !DILocation(line: 3062, column: 151, scope: !14348)
!14359 = !DILocation(line: 3062, column: 176, scope: !14348)
!14360 = !DILocation(line: 3062, column: 107, scope: !14348)
!14361 = !DILocation(line: 3062, column: 195, scope: !14338)
!14362 = !DILocation(line: 3062, column: 195, scope: !2098)
!14363 = !DILocation(line: 3062, column: 195, scope: !14364)
!14364 = !DILexicalBlockFile(scope: !2098, file: !408, discriminator: 5)
!14365 = !DILocation(line: 3063, column: 1, scope: !2082)
!14366 = !DILocation(line: 3063, column: 1, scope: !14367)
!14367 = !DILexicalBlockFile(scope: !2082, file: !408, discriminator: 1)
!14368 = !DILocation(line: 3066, column: 39, scope: !2119)
!14369 = !DILocation(line: 3066, column: 61, scope: !2119)
!14370 = !DILocation(line: 3068, column: 9, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !2119, file: !408, line: 3068, column: 9)
!14372 = !DILocation(line: 3068, column: 9, scope: !2119)
!14373 = !DILocation(line: 3069, column: 9, scope: !14371)
!14374 = !DILocation(line: 3072, column: 30, scope: !2119)
!14375 = !DILocation(line: 3072, column: 36, scope: !2119)
!14376 = !DILocation(line: 3072, column: 9, scope: !2119)
!14377 = !DILocation(line: 3071, column: 5, scope: !2119)
!14378 = !DILocation(line: 3074, column: 1, scope: !2119)
!14379 = !DILocation(line: 3074, column: 1, scope: !14380)
!14380 = !DILexicalBlockFile(scope: !2119, file: !408, discriminator: 1)
!14381 = !DILocation(line: 2556, column: 49, scope: !2099)
!14382 = !DILocation(line: 2556, column: 59, scope: !2099)
!14383 = !DILocation(line: 2557, column: 40, scope: !2099)
!14384 = !DILocation(line: 2557, column: 58, scope: !2099)
!14385 = !DILocation(line: 2559, column: 5, scope: !2099)
!14386 = !DILocation(line: 2559, column: 15, scope: !2099)
!14387 = !DILocation(line: 2560, column: 5, scope: !2099)
!14388 = !DILocation(line: 2560, column: 15, scope: !2099)
!14389 = !DILocation(line: 2561, column: 5, scope: !2099)
!14390 = !DILocation(line: 2561, column: 15, scope: !2099)
!14391 = !DILocation(line: 2563, column: 10, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !2099, file: !408, line: 2563, column: 9)
!14393 = !DILocation(line: 2563, column: 16, scope: !14392)
!14394 = !DILocation(line: 2563, column: 9, scope: !2099)
!14395 = !DILocation(line: 2564, column: 9, scope: !14392)
!14396 = !DILocation(line: 2566, column: 9, scope: !14397)
!14397 = distinct !DILexicalBlock(scope: !2099, file: !408, line: 2566, column: 9)
!14398 = !DILocation(line: 2566, column: 9, scope: !2099)
!14399 = !DILocation(line: 2567, column: 14, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14401, file: !408, line: 2567, column: 13)
!14401 = distinct !DILexicalBlock(scope: !14397, file: !408, line: 2566, column: 16)
!14402 = !DILocation(line: 2567, column: 20, scope: !14400)
!14403 = !DILocation(line: 2567, column: 13, scope: !14401)
!14404 = !DILocation(line: 2568, column: 13, scope: !14400)
!14405 = !DILocation(line: 2569, column: 18, scope: !14401)
!14406 = !DILocation(line: 2569, column: 24, scope: !14401)
!14407 = !DILocation(line: 2569, column: 16, scope: !14401)
!14408 = !DILocation(line: 2570, column: 38, scope: !14401)
!14409 = !DILocation(line: 2570, column: 46, scope: !14401)
!14410 = !DILocation(line: 2570, column: 18, scope: !14401)
!14411 = !DILocation(line: 2570, column: 16, scope: !14401)
!14412 = !DILocation(line: 2571, column: 14, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14401, file: !408, line: 2571, column: 13)
!14414 = !DILocation(line: 2571, column: 13, scope: !14401)
!14415 = !DILocation(line: 2572, column: 13, scope: !14413)
!14416 = !DILocation(line: 2573, column: 25, scope: !14401)
!14417 = !DILocation(line: 2573, column: 35, scope: !14401)
!14418 = !DILocation(line: 2573, column: 44, scope: !14401)
!14419 = !DILocation(line: 2574, column: 5, scope: !14401)
!14420 = !DILocation(line: 2575, column: 14, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !408, line: 2575, column: 13)
!14422 = distinct !DILexicalBlock(scope: !14397, file: !408, line: 2574, column: 12)
!14423 = !DILocation(line: 2575, column: 20, scope: !14421)
!14424 = !DILocation(line: 2575, column: 13, scope: !14422)
!14425 = !DILocation(line: 2576, column: 13, scope: !14421)
!14426 = !DILocation(line: 2577, column: 18, scope: !14422)
!14427 = !DILocation(line: 2577, column: 24, scope: !14422)
!14428 = !DILocation(line: 2577, column: 16, scope: !14422)
!14429 = !DILocation(line: 2578, column: 25, scope: !14422)
!14430 = !DILocation(line: 2578, column: 35, scope: !14422)
!14431 = !DILocation(line: 2578, column: 44, scope: !14422)
!14432 = !DILocation(line: 2579, column: 16, scope: !14422)
!14433 = !DILocation(line: 2580, column: 25, scope: !14422)
!14434 = !DILocation(line: 2580, column: 35, scope: !14422)
!14435 = !DILocation(line: 2580, column: 44, scope: !14422)
!14436 = !DILocation(line: 2583, column: 11, scope: !2099)
!14437 = !DILocation(line: 2583, column: 9, scope: !2099)
!14438 = !DILocation(line: 2585, column: 9, scope: !2113)
!14439 = !DILocation(line: 2585, column: 9, scope: !2099)
!14440 = !DILocation(line: 2586, column: 49, scope: !2112)
!14441 = !DILocation(line: 2586, column: 29, scope: !2112)
!14442 = !DILocation(line: 2586, column: 11, scope: !2112)
!14443 = !DILocation(line: 2586, column: 36, scope: !2112)
!14444 = !DILocation(line: 2586, column: 10, scope: !2112)
!14445 = !DILocation(line: 2586, column: 47, scope: !2112)
!14446 = !DILocation(line: 2587, column: 49, scope: !2112)
!14447 = !DILocation(line: 2587, column: 29, scope: !2112)
!14448 = !DILocation(line: 2587, column: 11, scope: !2112)
!14449 = !DILocation(line: 2587, column: 36, scope: !2112)
!14450 = !DILocation(line: 2587, column: 10, scope: !2112)
!14451 = !DILocation(line: 2587, column: 47, scope: !2112)
!14452 = !DILocation(line: 2588, column: 23, scope: !2112)
!14453 = !DILocation(line: 2588, column: 29, scope: !2112)
!14454 = !DILocation(line: 2588, column: 37, scope: !2112)
!14455 = !DILocation(line: 2588, column: 9, scope: !2112)
!14456 = !DILocation(line: 2589, column: 9, scope: !2112)
!14457 = !DILocation(line: 2589, column: 14, scope: !14458)
!14458 = !DILexicalBlockFile(scope: !2111, file: !408, discriminator: 1)
!14459 = !DILocation(line: 2589, column: 24, scope: !2111)
!14460 = !DILocation(line: 2589, column: 54, scope: !2111)
!14461 = !DILocation(line: 2589, column: 68, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !2111, file: !408, line: 2589, column: 65)
!14463 = !DILocation(line: 2589, column: 85, scope: !14462)
!14464 = !DILocation(line: 2589, column: 65, scope: !14462)
!14465 = !DILocation(line: 2589, column: 95, scope: !14462)
!14466 = !DILocation(line: 2589, column: 65, scope: !2111)
!14467 = !DILocation(line: 2589, column: 65, scope: !14468)
!14468 = !DILexicalBlockFile(scope: !2111, file: !408, discriminator: 2)
!14469 = !DILocation(line: 2589, column: 126, scope: !14470)
!14470 = !DILexicalBlockFile(scope: !14462, file: !408, discriminator: 3)
!14471 = !DILocation(line: 2589, column: 144, scope: !14462)
!14472 = !DILocation(line: 2589, column: 154, scope: !14462)
!14473 = !DILocation(line: 2589, column: 179, scope: !14462)
!14474 = !DILocation(line: 2589, column: 110, scope: !14462)
!14475 = !DILocation(line: 2589, column: 198, scope: !14476)
!14476 = !DILexicalBlockFile(scope: !2112, file: !408, discriminator: 4)
!14477 = !DILocation(line: 2589, column: 198, scope: !2111)
!14478 = !DILocation(line: 2589, column: 198, scope: !14479)
!14479 = !DILexicalBlockFile(scope: !2111, file: !408, discriminator: 5)
!14480 = !DILocation(line: 2590, column: 5, scope: !2112)
!14481 = !DILocation(line: 2592, column: 9, scope: !2116)
!14482 = !DILocation(line: 2592, column: 14, scope: !14483)
!14483 = !DILexicalBlockFile(scope: !2115, file: !408, discriminator: 1)
!14484 = !DILocation(line: 2592, column: 24, scope: !2115)
!14485 = !DILocation(line: 2592, column: 54, scope: !2115)
!14486 = !DILocation(line: 2592, column: 71, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !2115, file: !408, line: 2592, column: 68)
!14488 = !DILocation(line: 2592, column: 88, scope: !14487)
!14489 = !DILocation(line: 2592, column: 68, scope: !14487)
!14490 = !DILocation(line: 2592, column: 98, scope: !14487)
!14491 = !DILocation(line: 2592, column: 68, scope: !2115)
!14492 = !DILocation(line: 2592, column: 68, scope: !14493)
!14493 = !DILexicalBlockFile(scope: !2115, file: !408, discriminator: 2)
!14494 = !DILocation(line: 2592, column: 129, scope: !14495)
!14495 = !DILexicalBlockFile(scope: !14487, file: !408, discriminator: 3)
!14496 = !DILocation(line: 2592, column: 147, scope: !14487)
!14497 = !DILocation(line: 2592, column: 157, scope: !14487)
!14498 = !DILocation(line: 2592, column: 182, scope: !14487)
!14499 = !DILocation(line: 2592, column: 113, scope: !14487)
!14500 = !DILocation(line: 2592, column: 201, scope: !14501)
!14501 = !DILexicalBlockFile(scope: !2116, file: !408, discriminator: 4)
!14502 = !DILocation(line: 2592, column: 201, scope: !2115)
!14503 = !DILocation(line: 2592, column: 201, scope: !14504)
!14504 = !DILexicalBlockFile(scope: !2115, file: !408, discriminator: 5)
!14505 = !DILocation(line: 2593, column: 9, scope: !2116)
!14506 = !DILocation(line: 2593, column: 14, scope: !14507)
!14507 = !DILexicalBlockFile(scope: !2118, file: !408, discriminator: 1)
!14508 = !DILocation(line: 2593, column: 24, scope: !2118)
!14509 = !DILocation(line: 2593, column: 54, scope: !2118)
!14510 = !DILocation(line: 2593, column: 71, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !2118, file: !408, line: 2593, column: 68)
!14512 = !DILocation(line: 2593, column: 88, scope: !14511)
!14513 = !DILocation(line: 2593, column: 68, scope: !14511)
!14514 = !DILocation(line: 2593, column: 98, scope: !14511)
!14515 = !DILocation(line: 2593, column: 68, scope: !2118)
!14516 = !DILocation(line: 2593, column: 68, scope: !14517)
!14517 = !DILexicalBlockFile(scope: !2118, file: !408, discriminator: 2)
!14518 = !DILocation(line: 2593, column: 129, scope: !14519)
!14519 = !DILexicalBlockFile(scope: !14511, file: !408, discriminator: 3)
!14520 = !DILocation(line: 2593, column: 147, scope: !14511)
!14521 = !DILocation(line: 2593, column: 157, scope: !14511)
!14522 = !DILocation(line: 2593, column: 182, scope: !14511)
!14523 = !DILocation(line: 2593, column: 113, scope: !14511)
!14524 = !DILocation(line: 2593, column: 201, scope: !14501)
!14525 = !DILocation(line: 2593, column: 201, scope: !2118)
!14526 = !DILocation(line: 2593, column: 201, scope: !14527)
!14527 = !DILexicalBlockFile(scope: !2118, file: !408, discriminator: 5)
!14528 = !DILocation(line: 2594, column: 9, scope: !2116)
!14529 = !DILocation(line: 2596, column: 1, scope: !2099)
!14530 = !DILocation(line: 2596, column: 1, scope: !14531)
!14531 = !DILexicalBlockFile(scope: !2099, file: !408, discriminator: 1)
!14532 = !DILocation(line: 2916, column: 38, scope: !2176)
!14533 = !DILocation(line: 2916, column: 60, scope: !2176)
!14534 = !DILocation(line: 2917, column: 38, scope: !2176)
!14535 = !DILocation(line: 2919, column: 5, scope: !2176)
!14536 = !DILocation(line: 2919, column: 15, scope: !2176)
!14537 = !DILocation(line: 2920, column: 5, scope: !2176)
!14538 = !DILocation(line: 2920, column: 15, scope: !2176)
!14539 = !DILocation(line: 2921, column: 5, scope: !2176)
!14540 = !DILocation(line: 2921, column: 15, scope: !2176)
!14541 = !DILocation(line: 2922, column: 5, scope: !2176)
!14542 = !DILocation(line: 2922, column: 9, scope: !2176)
!14543 = !DILocation(line: 2924, column: 9, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !2176, file: !408, line: 2924, column: 9)
!14545 = !DILocation(line: 2924, column: 9, scope: !2176)
!14546 = !DILocation(line: 2925, column: 9, scope: !14544)
!14547 = !DILocation(line: 2928, column: 25, scope: !2176)
!14548 = !DILocation(line: 2928, column: 31, scope: !2176)
!14549 = !DILocation(line: 2928, column: 11, scope: !2176)
!14550 = !DILocation(line: 2928, column: 9, scope: !2176)
!14551 = !DILocation(line: 2929, column: 10, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !2176, file: !408, line: 2929, column: 9)
!14553 = !DILocation(line: 2929, column: 9, scope: !2176)
!14554 = !DILocation(line: 2930, column: 9, scope: !14552)
!14555 = !DILocation(line: 2933, column: 9, scope: !2190)
!14556 = !DILocation(line: 2933, column: 9, scope: !2176)
!14557 = !DILocation(line: 2934, column: 18, scope: !2189)
!14558 = !DILocation(line: 2934, column: 16, scope: !2189)
!14559 = !DILocation(line: 2935, column: 14, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !2189, file: !408, line: 2935, column: 13)
!14561 = !DILocation(line: 2935, column: 13, scope: !2189)
!14562 = !DILocation(line: 2936, column: 13, scope: !14560)
!14563 = !DILocation(line: 2937, column: 9, scope: !2189)
!14564 = !DILocation(line: 2937, column: 16, scope: !14565)
!14565 = !DILexicalBlockFile(scope: !14566, file: !408, discriminator: 4)
!14566 = !DILexicalBlockFile(scope: !2189, file: !408, discriminator: 1)
!14567 = !DILocation(line: 2937, column: 29, scope: !2189)
!14568 = !DILocation(line: 2937, column: 32, scope: !14569)
!14569 = !DILexicalBlockFile(scope: !2189, file: !408, discriminator: 2)
!14570 = !DILocation(line: 2937, column: 9, scope: !14571)
!14571 = !DILexicalBlockFile(scope: !2189, file: !408, discriminator: 3)
!14572 = !DILocation(line: 2938, column: 13, scope: !2188)
!14573 = !DILocation(line: 2938, column: 23, scope: !2188)
!14574 = !DILocation(line: 2938, column: 43, scope: !2188)
!14575 = !DILocation(line: 2938, column: 49, scope: !2188)
!14576 = !DILocation(line: 2938, column: 29, scope: !2188)
!14577 = !DILocation(line: 2939, column: 13, scope: !2188)
!14578 = !DILocation(line: 2939, column: 23, scope: !2188)
!14579 = !DILocation(line: 2939, column: 52, scope: !2188)
!14580 = !DILocation(line: 2939, column: 73, scope: !2188)
!14581 = !DILocation(line: 2939, column: 66, scope: !2188)
!14582 = !DILocation(line: 2939, column: 31, scope: !2188)
!14583 = !DILocation(line: 2940, column: 18, scope: !2195)
!14584 = !DILocation(line: 2940, column: 22, scope: !2195)
!14585 = !DILocation(line: 2940, column: 26, scope: !14586)
!14586 = !DILexicalBlockFile(scope: !2195, file: !408, discriminator: 1)
!14587 = !DILocation(line: 2940, column: 17, scope: !2188)
!14588 = !DILocation(line: 2941, column: 17, scope: !2194)
!14589 = !DILocation(line: 2941, column: 22, scope: !14590)
!14590 = !DILexicalBlockFile(scope: !2193, file: !408, discriminator: 1)
!14591 = !DILocation(line: 2941, column: 32, scope: !2193)
!14592 = !DILocation(line: 2941, column: 63, scope: !2193)
!14593 = !DILocation(line: 2941, column: 75, scope: !2198)
!14594 = !DILocation(line: 2941, column: 91, scope: !2198)
!14595 = !DILocation(line: 2941, column: 75, scope: !2193)
!14596 = !DILocation(line: 2941, column: 106, scope: !14597)
!14597 = !DILexicalBlockFile(scope: !2198, file: !408, discriminator: 2)
!14598 = !DILocation(line: 2941, column: 111, scope: !14599)
!14599 = !DILexicalBlockFile(scope: !2197, file: !408, discriminator: 4)
!14600 = !DILocation(line: 2941, column: 121, scope: !2197)
!14601 = !DILocation(line: 2941, column: 151, scope: !2197)
!14602 = !DILocation(line: 2941, column: 177, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !2197, file: !408, line: 2941, column: 174)
!14604 = !DILocation(line: 2941, column: 194, scope: !14603)
!14605 = !DILocation(line: 2941, column: 174, scope: !14603)
!14606 = !DILocation(line: 2941, column: 204, scope: !14603)
!14607 = !DILocation(line: 2941, column: 174, scope: !2197)
!14608 = !DILocation(line: 2941, column: 174, scope: !14609)
!14609 = !DILexicalBlockFile(scope: !2197, file: !408, discriminator: 5)
!14610 = !DILocation(line: 2941, column: 235, scope: !14611)
!14611 = !DILexicalBlockFile(scope: !14603, file: !408, discriminator: 6)
!14612 = !DILocation(line: 2941, column: 253, scope: !14603)
!14613 = !DILocation(line: 2941, column: 263, scope: !14603)
!14614 = !DILocation(line: 2941, column: 288, scope: !14603)
!14615 = !DILocation(line: 2941, column: 219, scope: !14603)
!14616 = !DILocation(line: 2941, column: 307, scope: !14617)
!14617 = !DILexicalBlockFile(scope: !2198, file: !408, discriminator: 7)
!14618 = !DILocation(line: 2941, column: 307, scope: !2197)
!14619 = !DILocation(line: 2941, column: 307, scope: !14620)
!14620 = !DILexicalBlockFile(scope: !2197, file: !408, discriminator: 8)
!14621 = !DILocation(line: 2941, column: 307, scope: !14622)
!14622 = !DILexicalBlockFile(scope: !2197, file: !408, discriminator: 9)
!14623 = !DILocation(line: 2941, column: 320, scope: !14624)
!14624 = !DILexicalBlockFile(scope: !14625, file: !408, discriminator: 10)
!14625 = !DILexicalBlockFile(scope: !2194, file: !408, discriminator: 3)
!14626 = !DILocation(line: 2941, column: 320, scope: !2193)
!14627 = !DILocation(line: 2941, column: 320, scope: !14628)
!14628 = !DILexicalBlockFile(scope: !2193, file: !408, discriminator: 11)
!14629 = !DILocation(line: 2942, column: 17, scope: !2194)
!14630 = !DILocation(line: 2942, column: 22, scope: !14631)
!14631 = !DILexicalBlockFile(scope: !2200, file: !408, discriminator: 1)
!14632 = !DILocation(line: 2942, column: 32, scope: !2200)
!14633 = !DILocation(line: 2942, column: 63, scope: !2200)
!14634 = !DILocation(line: 2942, column: 73, scope: !2203)
!14635 = !DILocation(line: 2942, column: 89, scope: !2203)
!14636 = !DILocation(line: 2942, column: 73, scope: !2200)
!14637 = !DILocation(line: 2942, column: 104, scope: !14638)
!14638 = !DILexicalBlockFile(scope: !2203, file: !408, discriminator: 2)
!14639 = !DILocation(line: 2942, column: 109, scope: !14640)
!14640 = !DILexicalBlockFile(scope: !2202, file: !408, discriminator: 4)
!14641 = !DILocation(line: 2942, column: 119, scope: !2202)
!14642 = !DILocation(line: 2942, column: 149, scope: !2202)
!14643 = !DILocation(line: 2942, column: 175, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !2202, file: !408, line: 2942, column: 172)
!14645 = !DILocation(line: 2942, column: 192, scope: !14644)
!14646 = !DILocation(line: 2942, column: 172, scope: !14644)
!14647 = !DILocation(line: 2942, column: 202, scope: !14644)
!14648 = !DILocation(line: 2942, column: 172, scope: !2202)
!14649 = !DILocation(line: 2942, column: 172, scope: !14650)
!14650 = !DILexicalBlockFile(scope: !2202, file: !408, discriminator: 5)
!14651 = !DILocation(line: 2942, column: 233, scope: !14652)
!14652 = !DILexicalBlockFile(scope: !14644, file: !408, discriminator: 6)
!14653 = !DILocation(line: 2942, column: 251, scope: !14644)
!14654 = !DILocation(line: 2942, column: 261, scope: !14644)
!14655 = !DILocation(line: 2942, column: 286, scope: !14644)
!14656 = !DILocation(line: 2942, column: 217, scope: !14644)
!14657 = !DILocation(line: 2942, column: 305, scope: !14658)
!14658 = !DILexicalBlockFile(scope: !2203, file: !408, discriminator: 7)
!14659 = !DILocation(line: 2942, column: 305, scope: !2202)
!14660 = !DILocation(line: 2942, column: 305, scope: !14661)
!14661 = !DILexicalBlockFile(scope: !2202, file: !408, discriminator: 8)
!14662 = !DILocation(line: 2942, column: 305, scope: !14663)
!14663 = !DILexicalBlockFile(scope: !2202, file: !408, discriminator: 9)
!14664 = !DILocation(line: 2942, column: 318, scope: !14624)
!14665 = !DILocation(line: 2942, column: 318, scope: !2200)
!14666 = !DILocation(line: 2942, column: 318, scope: !14667)
!14667 = !DILexicalBlockFile(scope: !2200, file: !408, discriminator: 11)
!14668 = !DILocation(line: 2943, column: 17, scope: !2194)
!14669 = !DILocation(line: 2943, column: 22, scope: !14670)
!14670 = !DILexicalBlockFile(scope: !2205, file: !408, discriminator: 1)
!14671 = !DILocation(line: 2943, column: 32, scope: !2205)
!14672 = !DILocation(line: 2943, column: 62, scope: !2205)
!14673 = !DILocation(line: 2943, column: 79, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !2205, file: !408, line: 2943, column: 76)
!14675 = !DILocation(line: 2943, column: 96, scope: !14674)
!14676 = !DILocation(line: 2943, column: 76, scope: !14674)
!14677 = !DILocation(line: 2943, column: 106, scope: !14674)
!14678 = !DILocation(line: 2943, column: 76, scope: !2205)
!14679 = !DILocation(line: 2943, column: 76, scope: !14680)
!14680 = !DILexicalBlockFile(scope: !2205, file: !408, discriminator: 2)
!14681 = !DILocation(line: 2943, column: 137, scope: !14682)
!14682 = !DILexicalBlockFile(scope: !14674, file: !408, discriminator: 3)
!14683 = !DILocation(line: 2943, column: 155, scope: !14674)
!14684 = !DILocation(line: 2943, column: 165, scope: !14674)
!14685 = !DILocation(line: 2943, column: 190, scope: !14674)
!14686 = !DILocation(line: 2943, column: 121, scope: !14674)
!14687 = !DILocation(line: 2943, column: 209, scope: !14688)
!14688 = !DILexicalBlockFile(scope: !2194, file: !408, discriminator: 4)
!14689 = !DILocation(line: 2943, column: 209, scope: !2205)
!14690 = !DILocation(line: 2943, column: 209, scope: !14691)
!14691 = !DILexicalBlockFile(scope: !2205, file: !408, discriminator: 5)
!14692 = !DILocation(line: 2944, column: 17, scope: !2194)
!14693 = !DILocation(line: 2946, column: 33, scope: !2188)
!14694 = !DILocation(line: 2946, column: 41, scope: !2188)
!14695 = !DILocation(line: 2946, column: 46, scope: !2188)
!14696 = !DILocation(line: 2946, column: 18, scope: !2188)
!14697 = !DILocation(line: 2946, column: 16, scope: !2188)
!14698 = !DILocation(line: 2947, column: 13, scope: !2188)
!14699 = !DILocation(line: 2947, column: 18, scope: !14700)
!14700 = !DILexicalBlockFile(scope: !2207, file: !408, discriminator: 1)
!14701 = !DILocation(line: 2947, column: 28, scope: !2207)
!14702 = !DILocation(line: 2947, column: 58, scope: !2207)
!14703 = !DILocation(line: 2947, column: 74, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !2207, file: !408, line: 2947, column: 71)
!14705 = !DILocation(line: 2947, column: 91, scope: !14704)
!14706 = !DILocation(line: 2947, column: 71, scope: !14704)
!14707 = !DILocation(line: 2947, column: 101, scope: !14704)
!14708 = !DILocation(line: 2947, column: 71, scope: !2207)
!14709 = !DILocation(line: 2947, column: 71, scope: !14710)
!14710 = !DILexicalBlockFile(scope: !2207, file: !408, discriminator: 2)
!14711 = !DILocation(line: 2947, column: 132, scope: !14712)
!14712 = !DILexicalBlockFile(scope: !14704, file: !408, discriminator: 3)
!14713 = !DILocation(line: 2947, column: 150, scope: !14704)
!14714 = !DILocation(line: 2947, column: 160, scope: !14704)
!14715 = !DILocation(line: 2947, column: 185, scope: !14704)
!14716 = !DILocation(line: 2947, column: 116, scope: !14704)
!14717 = !DILocation(line: 2947, column: 204, scope: !14718)
!14718 = !DILexicalBlockFile(scope: !2188, file: !408, discriminator: 4)
!14719 = !DILocation(line: 2947, column: 204, scope: !2207)
!14720 = !DILocation(line: 2947, column: 204, scope: !14721)
!14721 = !DILexicalBlockFile(scope: !2207, file: !408, discriminator: 5)
!14722 = !DILocation(line: 2948, column: 13, scope: !2188)
!14723 = !DILocation(line: 2948, column: 18, scope: !14724)
!14724 = !DILexicalBlockFile(scope: !2209, file: !408, discriminator: 1)
!14725 = !DILocation(line: 2948, column: 28, scope: !2209)
!14726 = !DILocation(line: 2948, column: 58, scope: !2209)
!14727 = !DILocation(line: 2948, column: 72, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !2209, file: !408, line: 2948, column: 69)
!14729 = !DILocation(line: 2948, column: 89, scope: !14728)
!14730 = !DILocation(line: 2948, column: 69, scope: !14728)
!14731 = !DILocation(line: 2948, column: 99, scope: !14728)
!14732 = !DILocation(line: 2948, column: 69, scope: !2209)
!14733 = !DILocation(line: 2948, column: 69, scope: !14734)
!14734 = !DILexicalBlockFile(scope: !2209, file: !408, discriminator: 2)
!14735 = !DILocation(line: 2948, column: 130, scope: !14736)
!14736 = !DILexicalBlockFile(scope: !14728, file: !408, discriminator: 3)
!14737 = !DILocation(line: 2948, column: 148, scope: !14728)
!14738 = !DILocation(line: 2948, column: 158, scope: !14728)
!14739 = !DILocation(line: 2948, column: 183, scope: !14728)
!14740 = !DILocation(line: 2948, column: 114, scope: !14728)
!14741 = !DILocation(line: 2948, column: 202, scope: !14718)
!14742 = !DILocation(line: 2948, column: 202, scope: !2209)
!14743 = !DILocation(line: 2948, column: 202, scope: !14744)
!14744 = !DILexicalBlockFile(scope: !2209, file: !408, discriminator: 5)
!14745 = !DILocation(line: 2949, column: 17, scope: !2213)
!14746 = !DILocation(line: 2949, column: 20, scope: !2213)
!14747 = !DILocation(line: 2949, column: 17, scope: !2188)
!14748 = !DILocation(line: 2950, column: 17, scope: !2212)
!14749 = !DILocation(line: 2950, column: 22, scope: !14750)
!14750 = !DILexicalBlockFile(scope: !2211, file: !408, discriminator: 1)
!14751 = !DILocation(line: 2950, column: 32, scope: !2211)
!14752 = !DILocation(line: 2950, column: 62, scope: !2211)
!14753 = !DILocation(line: 2950, column: 79, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !2211, file: !408, line: 2950, column: 76)
!14755 = !DILocation(line: 2950, column: 96, scope: !14754)
!14756 = !DILocation(line: 2950, column: 76, scope: !14754)
!14757 = !DILocation(line: 2950, column: 106, scope: !14754)
!14758 = !DILocation(line: 2950, column: 76, scope: !2211)
!14759 = !DILocation(line: 2950, column: 76, scope: !14760)
!14760 = !DILexicalBlockFile(scope: !2211, file: !408, discriminator: 2)
!14761 = !DILocation(line: 2950, column: 137, scope: !14762)
!14762 = !DILexicalBlockFile(scope: !14754, file: !408, discriminator: 3)
!14763 = !DILocation(line: 2950, column: 155, scope: !14754)
!14764 = !DILocation(line: 2950, column: 165, scope: !14754)
!14765 = !DILocation(line: 2950, column: 190, scope: !14754)
!14766 = !DILocation(line: 2950, column: 121, scope: !14754)
!14767 = !DILocation(line: 2950, column: 209, scope: !14768)
!14768 = !DILexicalBlockFile(scope: !2212, file: !408, discriminator: 4)
!14769 = !DILocation(line: 2950, column: 209, scope: !2211)
!14770 = !DILocation(line: 2950, column: 209, scope: !14771)
!14771 = !DILexicalBlockFile(scope: !2211, file: !408, discriminator: 5)
!14772 = !DILocation(line: 2951, column: 17, scope: !2212)
!14773 = !DILocation(line: 2953, column: 23, scope: !2188)
!14774 = !DILocation(line: 2954, column: 9, scope: !2189)
!14775 = !DILocation(line: 2954, column: 9, scope: !14566)
!14776 = !DILocation(line: 2955, column: 5, scope: !2189)
!14777 = !DILocation(line: 2957, column: 18, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !2190, file: !408, line: 2955, column: 12)
!14779 = !DILocation(line: 2957, column: 16, scope: !14778)
!14780 = !DILocation(line: 2958, column: 14, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14778, file: !408, line: 2958, column: 13)
!14782 = !DILocation(line: 2958, column: 13, scope: !14778)
!14783 = !DILocation(line: 2959, column: 13, scope: !14781)
!14784 = !DILocation(line: 2962, column: 24, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !2176, file: !408, line: 2962, column: 9)
!14786 = !DILocation(line: 2962, column: 30, scope: !14785)
!14787 = !DILocation(line: 2962, column: 40, scope: !14785)
!14788 = !DILocation(line: 2962, column: 49, scope: !14785)
!14789 = !DILocation(line: 2962, column: 9, scope: !2176)
!14790 = !DILocation(line: 2964, column: 61, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14785, file: !408, line: 2962, column: 72)
!14792 = !DILocation(line: 2964, column: 67, scope: !14791)
!14793 = !DILocation(line: 2964, column: 40, scope: !14791)
!14794 = !DILocation(line: 2965, column: 40, scope: !14791)
!14795 = !DILocation(line: 2965, column: 45, scope: !14791)
!14796 = !DILocation(line: 2964, column: 15, scope: !14791)
!14797 = !DILocation(line: 2964, column: 13, scope: !14791)
!14798 = !DILocation(line: 2966, column: 5, scope: !14791)
!14799 = !DILocation(line: 2967, column: 14, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14785, file: !408, line: 2967, column: 14)
!14801 = !DILocation(line: 2967, column: 20, scope: !14800)
!14802 = !DILocation(line: 2967, column: 14, scope: !14785)
!14803 = !DILocation(line: 2968, column: 37, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14800, file: !408, line: 2967, column: 34)
!14805 = !DILocation(line: 2968, column: 43, scope: !14804)
!14806 = !DILocation(line: 2968, column: 63, scope: !14804)
!14807 = !DILocation(line: 2968, column: 68, scope: !14804)
!14808 = !DILocation(line: 2968, column: 15, scope: !14804)
!14809 = !DILocation(line: 2968, column: 13, scope: !14804)
!14810 = !DILocation(line: 2969, column: 5, scope: !14804)
!14811 = !DILocation(line: 2970, column: 13, scope: !14800)
!14812 = !DILocation(line: 2972, column: 5, scope: !2176)
!14813 = !DILocation(line: 2972, column: 10, scope: !14814)
!14814 = !DILexicalBlockFile(scope: !2215, file: !408, discriminator: 1)
!14815 = !DILocation(line: 2972, column: 20, scope: !2215)
!14816 = !DILocation(line: 2972, column: 50, scope: !2215)
!14817 = !DILocation(line: 2972, column: 64, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !2215, file: !408, line: 2972, column: 61)
!14819 = !DILocation(line: 2972, column: 81, scope: !14818)
!14820 = !DILocation(line: 2972, column: 61, scope: !14818)
!14821 = !DILocation(line: 2972, column: 91, scope: !14818)
!14822 = !DILocation(line: 2972, column: 61, scope: !2215)
!14823 = !DILocation(line: 2972, column: 61, scope: !14824)
!14824 = !DILexicalBlockFile(scope: !2215, file: !408, discriminator: 2)
!14825 = !DILocation(line: 2972, column: 122, scope: !14826)
!14826 = !DILexicalBlockFile(scope: !14818, file: !408, discriminator: 3)
!14827 = !DILocation(line: 2972, column: 140, scope: !14818)
!14828 = !DILocation(line: 2972, column: 150, scope: !14818)
!14829 = !DILocation(line: 2972, column: 175, scope: !14818)
!14830 = !DILocation(line: 2972, column: 106, scope: !14818)
!14831 = !DILocation(line: 2972, column: 194, scope: !14832)
!14832 = !DILexicalBlockFile(scope: !2176, file: !408, discriminator: 4)
!14833 = !DILocation(line: 2972, column: 194, scope: !2215)
!14834 = !DILocation(line: 2972, column: 194, scope: !14835)
!14835 = !DILexicalBlockFile(scope: !2215, file: !408, discriminator: 5)
!14836 = !DILocation(line: 2973, column: 5, scope: !2176)
!14837 = !DILocation(line: 2973, column: 10, scope: !14838)
!14838 = !DILexicalBlockFile(scope: !2217, file: !408, discriminator: 1)
!14839 = !DILocation(line: 2973, column: 20, scope: !2217)
!14840 = !DILocation(line: 2973, column: 50, scope: !2217)
!14841 = !DILocation(line: 2973, column: 67, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !2217, file: !408, line: 2973, column: 64)
!14843 = !DILocation(line: 2973, column: 84, scope: !14842)
!14844 = !DILocation(line: 2973, column: 64, scope: !14842)
!14845 = !DILocation(line: 2973, column: 94, scope: !14842)
!14846 = !DILocation(line: 2973, column: 64, scope: !2217)
!14847 = !DILocation(line: 2973, column: 64, scope: !14848)
!14848 = !DILexicalBlockFile(scope: !2217, file: !408, discriminator: 2)
!14849 = !DILocation(line: 2973, column: 125, scope: !14850)
!14850 = !DILexicalBlockFile(scope: !14842, file: !408, discriminator: 3)
!14851 = !DILocation(line: 2973, column: 143, scope: !14842)
!14852 = !DILocation(line: 2973, column: 153, scope: !14842)
!14853 = !DILocation(line: 2973, column: 178, scope: !14842)
!14854 = !DILocation(line: 2973, column: 109, scope: !14842)
!14855 = !DILocation(line: 2973, column: 197, scope: !14832)
!14856 = !DILocation(line: 2973, column: 197, scope: !2217)
!14857 = !DILocation(line: 2973, column: 197, scope: !14858)
!14858 = !DILexicalBlockFile(scope: !2217, file: !408, discriminator: 5)
!14859 = !DILocation(line: 2975, column: 5, scope: !2176)
!14860 = !DILocation(line: 2975, column: 10, scope: !14861)
!14861 = !DILexicalBlockFile(scope: !2219, file: !408, discriminator: 1)
!14862 = !DILocation(line: 2975, column: 20, scope: !2219)
!14863 = !DILocation(line: 2975, column: 51, scope: !2219)
!14864 = !DILocation(line: 2975, column: 61, scope: !2222)
!14865 = !DILocation(line: 2975, column: 77, scope: !2222)
!14866 = !DILocation(line: 2975, column: 61, scope: !2219)
!14867 = !DILocation(line: 2975, column: 92, scope: !14868)
!14868 = !DILexicalBlockFile(scope: !2222, file: !408, discriminator: 2)
!14869 = !DILocation(line: 2975, column: 97, scope: !14870)
!14870 = !DILexicalBlockFile(scope: !2221, file: !408, discriminator: 4)
!14871 = !DILocation(line: 2975, column: 107, scope: !2221)
!14872 = !DILocation(line: 2975, column: 137, scope: !2221)
!14873 = !DILocation(line: 2975, column: 163, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !2221, file: !408, line: 2975, column: 160)
!14875 = !DILocation(line: 2975, column: 180, scope: !14874)
!14876 = !DILocation(line: 2975, column: 160, scope: !14874)
!14877 = !DILocation(line: 2975, column: 190, scope: !14874)
!14878 = !DILocation(line: 2975, column: 160, scope: !2221)
!14879 = !DILocation(line: 2975, column: 160, scope: !14880)
!14880 = !DILexicalBlockFile(scope: !2221, file: !408, discriminator: 5)
!14881 = !DILocation(line: 2975, column: 221, scope: !14882)
!14882 = !DILexicalBlockFile(scope: !14874, file: !408, discriminator: 6)
!14883 = !DILocation(line: 2975, column: 239, scope: !14874)
!14884 = !DILocation(line: 2975, column: 249, scope: !14874)
!14885 = !DILocation(line: 2975, column: 274, scope: !14874)
!14886 = !DILocation(line: 2975, column: 205, scope: !14874)
!14887 = !DILocation(line: 2975, column: 293, scope: !14888)
!14888 = !DILexicalBlockFile(scope: !2222, file: !408, discriminator: 7)
!14889 = !DILocation(line: 2975, column: 293, scope: !2221)
!14890 = !DILocation(line: 2975, column: 293, scope: !14891)
!14891 = !DILexicalBlockFile(scope: !2221, file: !408, discriminator: 8)
!14892 = !DILocation(line: 2975, column: 293, scope: !14893)
!14893 = !DILexicalBlockFile(scope: !2221, file: !408, discriminator: 9)
!14894 = !DILocation(line: 2975, column: 306, scope: !14895)
!14895 = !DILexicalBlockFile(scope: !14896, file: !408, discriminator: 10)
!14896 = !DILexicalBlockFile(scope: !2176, file: !408, discriminator: 3)
!14897 = !DILocation(line: 2975, column: 306, scope: !2219)
!14898 = !DILocation(line: 2975, column: 306, scope: !14899)
!14899 = !DILexicalBlockFile(scope: !2219, file: !408, discriminator: 11)
!14900 = !DILocation(line: 2976, column: 1, scope: !2176)
!14901 = !DILocation(line: 2976, column: 1, scope: !14902)
!14902 = !DILexicalBlockFile(scope: !2176, file: !408, discriminator: 1)
!14903 = !DILocation(line: 3006, column: 36, scope: !2257)
!14904 = !DILocation(line: 3006, column: 58, scope: !2257)
!14905 = !DILocation(line: 3008, column: 5, scope: !2257)
!14906 = !DILocation(line: 3008, column: 15, scope: !2257)
!14907 = !DILocation(line: 3009, column: 5, scope: !2257)
!14908 = !DILocation(line: 3009, column: 15, scope: !2257)
!14909 = !DILocation(line: 3011, column: 9, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !2257, file: !408, line: 3011, column: 9)
!14911 = !DILocation(line: 3011, column: 9, scope: !2257)
!14912 = !DILocation(line: 3012, column: 9, scope: !14910)
!14913 = !DILocation(line: 3014, column: 24, scope: !2269)
!14914 = !DILocation(line: 3014, column: 30, scope: !2269)
!14915 = !DILocation(line: 3014, column: 40, scope: !2269)
!14916 = !DILocation(line: 3014, column: 49, scope: !2269)
!14917 = !DILocation(line: 3014, column: 9, scope: !2257)
!14918 = !DILocation(line: 3018, column: 34, scope: !2269)
!14919 = !DILocation(line: 3018, column: 40, scope: !2269)
!14920 = !DILocation(line: 3018, column: 13, scope: !2269)
!14921 = !DILocation(line: 3017, column: 15, scope: !2269)
!14922 = !DILocation(line: 3017, column: 13, scope: !2269)
!14923 = !DILocation(line: 3017, column: 9, scope: !2269)
!14924 = !DILocation(line: 3020, column: 14, scope: !2268)
!14925 = !DILocation(line: 3020, column: 20, scope: !2268)
!14926 = !DILocation(line: 3020, column: 14, scope: !2269)
!14927 = !DILocation(line: 3021, column: 29, scope: !2267)
!14928 = !DILocation(line: 3021, column: 35, scope: !2267)
!14929 = !DILocation(line: 3021, column: 15, scope: !2267)
!14930 = !DILocation(line: 3021, column: 13, scope: !2267)
!14931 = !DILocation(line: 3022, column: 13, scope: !2266)
!14932 = !DILocation(line: 3022, column: 13, scope: !2267)
!14933 = !DILocation(line: 3023, column: 41, scope: !2265)
!14934 = !DILocation(line: 3023, column: 47, scope: !2265)
!14935 = !DILocation(line: 3023, column: 64, scope: !2265)
!14936 = !DILocation(line: 3023, column: 19, scope: !2265)
!14937 = !DILocation(line: 3023, column: 17, scope: !2265)
!14938 = !DILocation(line: 3024, column: 13, scope: !2265)
!14939 = !DILocation(line: 3024, column: 18, scope: !14940)
!14940 = !DILexicalBlockFile(scope: !2264, file: !408, discriminator: 1)
!14941 = !DILocation(line: 3024, column: 28, scope: !2264)
!14942 = !DILocation(line: 3024, column: 58, scope: !2264)
!14943 = !DILocation(line: 3024, column: 72, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !2264, file: !408, line: 3024, column: 69)
!14945 = !DILocation(line: 3024, column: 89, scope: !14944)
!14946 = !DILocation(line: 3024, column: 69, scope: !14944)
!14947 = !DILocation(line: 3024, column: 99, scope: !14944)
!14948 = !DILocation(line: 3024, column: 69, scope: !2264)
!14949 = !DILocation(line: 3024, column: 69, scope: !14950)
!14950 = !DILexicalBlockFile(scope: !2264, file: !408, discriminator: 2)
!14951 = !DILocation(line: 3024, column: 130, scope: !14952)
!14952 = !DILexicalBlockFile(scope: !14944, file: !408, discriminator: 3)
!14953 = !DILocation(line: 3024, column: 148, scope: !14944)
!14954 = !DILocation(line: 3024, column: 158, scope: !14944)
!14955 = !DILocation(line: 3024, column: 183, scope: !14944)
!14956 = !DILocation(line: 3024, column: 114, scope: !14944)
!14957 = !DILocation(line: 3024, column: 202, scope: !14958)
!14958 = !DILexicalBlockFile(scope: !2265, file: !408, discriminator: 4)
!14959 = !DILocation(line: 3024, column: 202, scope: !2264)
!14960 = !DILocation(line: 3024, column: 202, scope: !14961)
!14961 = !DILexicalBlockFile(scope: !2264, file: !408, discriminator: 5)
!14962 = !DILocation(line: 3025, column: 9, scope: !2265)
!14963 = !DILocation(line: 3026, column: 5, scope: !2267)
!14964 = !DILocation(line: 3028, column: 5, scope: !2257)
!14965 = !DILocation(line: 3028, column: 10, scope: !14966)
!14966 = !DILexicalBlockFile(scope: !2271, file: !408, discriminator: 1)
!14967 = !DILocation(line: 3028, column: 20, scope: !2271)
!14968 = !DILocation(line: 3028, column: 51, scope: !2271)
!14969 = !DILocation(line: 3028, column: 61, scope: !2274)
!14970 = !DILocation(line: 3028, column: 77, scope: !2274)
!14971 = !DILocation(line: 3028, column: 61, scope: !2271)
!14972 = !DILocation(line: 3028, column: 92, scope: !14973)
!14973 = !DILexicalBlockFile(scope: !2274, file: !408, discriminator: 2)
!14974 = !DILocation(line: 3028, column: 97, scope: !14975)
!14975 = !DILexicalBlockFile(scope: !2273, file: !408, discriminator: 4)
!14976 = !DILocation(line: 3028, column: 107, scope: !2273)
!14977 = !DILocation(line: 3028, column: 137, scope: !2273)
!14978 = !DILocation(line: 3028, column: 163, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !2273, file: !408, line: 3028, column: 160)
!14980 = !DILocation(line: 3028, column: 180, scope: !14979)
!14981 = !DILocation(line: 3028, column: 160, scope: !14979)
!14982 = !DILocation(line: 3028, column: 190, scope: !14979)
!14983 = !DILocation(line: 3028, column: 160, scope: !2273)
!14984 = !DILocation(line: 3028, column: 160, scope: !14985)
!14985 = !DILexicalBlockFile(scope: !2273, file: !408, discriminator: 5)
!14986 = !DILocation(line: 3028, column: 221, scope: !14987)
!14987 = !DILexicalBlockFile(scope: !14979, file: !408, discriminator: 6)
!14988 = !DILocation(line: 3028, column: 239, scope: !14979)
!14989 = !DILocation(line: 3028, column: 249, scope: !14979)
!14990 = !DILocation(line: 3028, column: 274, scope: !14979)
!14991 = !DILocation(line: 3028, column: 205, scope: !14979)
!14992 = !DILocation(line: 3028, column: 293, scope: !14993)
!14993 = !DILexicalBlockFile(scope: !2274, file: !408, discriminator: 7)
!14994 = !DILocation(line: 3028, column: 293, scope: !2273)
!14995 = !DILocation(line: 3028, column: 293, scope: !14996)
!14996 = !DILexicalBlockFile(scope: !2273, file: !408, discriminator: 8)
!14997 = !DILocation(line: 3028, column: 293, scope: !14998)
!14998 = !DILexicalBlockFile(scope: !2273, file: !408, discriminator: 9)
!14999 = !DILocation(line: 3028, column: 306, scope: !15000)
!15000 = !DILexicalBlockFile(scope: !15001, file: !408, discriminator: 10)
!15001 = !DILexicalBlockFile(scope: !2257, file: !408, discriminator: 3)
!15002 = !DILocation(line: 3028, column: 306, scope: !2271)
!15003 = !DILocation(line: 3028, column: 306, scope: !15004)
!15004 = !DILexicalBlockFile(scope: !2271, file: !408, discriminator: 11)
!15005 = !DILocation(line: 3029, column: 1, scope: !2257)
!15006 = !DILocation(line: 3029, column: 1, scope: !15007)
!15007 = !DILexicalBlockFile(scope: !2257, file: !408, discriminator: 1)
!15008 = !DILocation(line: 2871, column: 40, scope: !2275)
!15009 = !DILocation(line: 2871, column: 62, scope: !2275)
!15010 = !DILocation(line: 2872, column: 27, scope: !2275)
!15011 = !DILocation(line: 2874, column: 5, scope: !2275)
!15012 = !DILocation(line: 2874, column: 15, scope: !2275)
!15013 = !DILocation(line: 2875, column: 5, scope: !2275)
!15014 = !DILocation(line: 2875, column: 15, scope: !2275)
!15015 = !DILocation(line: 2876, column: 5, scope: !2275)
!15016 = !DILocation(line: 2876, column: 15, scope: !2275)
!15017 = !DILocation(line: 2878, column: 9, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !2275, file: !408, line: 2878, column: 9)
!15019 = !DILocation(line: 2878, column: 18, scope: !15018)
!15020 = !DILocation(line: 2878, column: 22, scope: !15018)
!15021 = !DILocation(line: 2878, column: 25, scope: !15022)
!15022 = !DILexicalBlockFile(scope: !15018, file: !408, discriminator: 1)
!15023 = !DILocation(line: 2878, column: 36, scope: !15018)
!15024 = !DILocation(line: 2878, column: 9, scope: !2275)
!15025 = !DILocation(line: 2879, column: 9, scope: !15018)
!15026 = !DILocation(line: 2881, column: 9, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !2275, file: !408, line: 2881, column: 9)
!15028 = !DILocation(line: 2881, column: 9, scope: !2275)
!15029 = !DILocation(line: 2882, column: 9, scope: !15027)
!15030 = !DILocation(line: 2884, column: 32, scope: !2275)
!15031 = !DILocation(line: 2884, column: 40, scope: !2275)
!15032 = !DILocation(line: 2884, column: 45, scope: !2275)
!15033 = !DILocation(line: 2884, column: 54, scope: !2275)
!15034 = !DILocation(line: 2884, column: 11, scope: !2275)
!15035 = !DILocation(line: 2884, column: 9, scope: !2275)
!15036 = !DILocation(line: 2885, column: 10, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !2275, file: !408, line: 2885, column: 9)
!15038 = !DILocation(line: 2885, column: 9, scope: !2275)
!15039 = !DILocation(line: 2886, column: 9, scope: !15037)
!15040 = !DILocation(line: 2888, column: 28, scope: !2275)
!15041 = !DILocation(line: 2888, column: 34, scope: !2275)
!15042 = !DILocation(line: 2888, column: 42, scope: !2275)
!15043 = !DILocation(line: 2888, column: 13, scope: !2275)
!15044 = !DILocation(line: 2888, column: 11, scope: !2275)
!15045 = !DILocation(line: 2890, column: 9, scope: !2288)
!15046 = !DILocation(line: 2890, column: 9, scope: !2275)
!15047 = !DILocation(line: 2891, column: 28, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !2287, file: !408, line: 2891, column: 13)
!15049 = !DILocation(line: 2891, column: 34, scope: !15048)
!15050 = !DILocation(line: 2891, column: 44, scope: !15048)
!15051 = !DILocation(line: 2891, column: 53, scope: !15048)
!15052 = !DILocation(line: 2891, column: 13, scope: !2287)
!15053 = !DILocation(line: 2893, column: 38, scope: !15048)
!15054 = !DILocation(line: 2893, column: 44, scope: !15048)
!15055 = !DILocation(line: 2893, column: 17, scope: !15048)
!15056 = !DILocation(line: 2893, column: 52, scope: !15048)
!15057 = !DILocation(line: 2892, column: 19, scope: !15048)
!15058 = !DILocation(line: 2892, column: 17, scope: !15048)
!15059 = !DILocation(line: 2892, column: 13, scope: !15048)
!15060 = !DILocation(line: 2895, column: 18, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15048, file: !408, line: 2895, column: 18)
!15062 = !DILocation(line: 2895, column: 24, scope: !15061)
!15063 = !DILocation(line: 2895, column: 18, scope: !15048)
!15064 = !DILocation(line: 2896, column: 41, scope: !15061)
!15065 = !DILocation(line: 2896, column: 47, scope: !15061)
!15066 = !DILocation(line: 2896, column: 65, scope: !15061)
!15067 = !DILocation(line: 2896, column: 19, scope: !15061)
!15068 = !DILocation(line: 2896, column: 17, scope: !15061)
!15069 = !DILocation(line: 2896, column: 13, scope: !15061)
!15070 = !DILocation(line: 2898, column: 17, scope: !15061)
!15071 = !DILocation(line: 2899, column: 9, scope: !2287)
!15072 = !DILocation(line: 2899, column: 14, scope: !15073)
!15073 = !DILexicalBlockFile(scope: !2286, file: !408, discriminator: 1)
!15074 = !DILocation(line: 2899, column: 24, scope: !2286)
!15075 = !DILocation(line: 2899, column: 55, scope: !2286)
!15076 = !DILocation(line: 2899, column: 65, scope: !2291)
!15077 = !DILocation(line: 2899, column: 81, scope: !2291)
!15078 = !DILocation(line: 2899, column: 65, scope: !2286)
!15079 = !DILocation(line: 2899, column: 96, scope: !15080)
!15080 = !DILexicalBlockFile(scope: !2291, file: !408, discriminator: 2)
!15081 = !DILocation(line: 2899, column: 101, scope: !15082)
!15082 = !DILexicalBlockFile(scope: !2290, file: !408, discriminator: 4)
!15083 = !DILocation(line: 2899, column: 111, scope: !2290)
!15084 = !DILocation(line: 2899, column: 141, scope: !2290)
!15085 = !DILocation(line: 2899, column: 167, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !2290, file: !408, line: 2899, column: 164)
!15087 = !DILocation(line: 2899, column: 184, scope: !15086)
!15088 = !DILocation(line: 2899, column: 164, scope: !15086)
!15089 = !DILocation(line: 2899, column: 194, scope: !15086)
!15090 = !DILocation(line: 2899, column: 164, scope: !2290)
!15091 = !DILocation(line: 2899, column: 164, scope: !15092)
!15092 = !DILexicalBlockFile(scope: !2290, file: !408, discriminator: 5)
!15093 = !DILocation(line: 2899, column: 225, scope: !15094)
!15094 = !DILexicalBlockFile(scope: !15086, file: !408, discriminator: 6)
!15095 = !DILocation(line: 2899, column: 243, scope: !15086)
!15096 = !DILocation(line: 2899, column: 253, scope: !15086)
!15097 = !DILocation(line: 2899, column: 278, scope: !15086)
!15098 = !DILocation(line: 2899, column: 209, scope: !15086)
!15099 = !DILocation(line: 2899, column: 297, scope: !15100)
!15100 = !DILexicalBlockFile(scope: !2291, file: !408, discriminator: 7)
!15101 = !DILocation(line: 2899, column: 297, scope: !2290)
!15102 = !DILocation(line: 2899, column: 297, scope: !15103)
!15103 = !DILexicalBlockFile(scope: !2290, file: !408, discriminator: 8)
!15104 = !DILocation(line: 2899, column: 297, scope: !15105)
!15105 = !DILexicalBlockFile(scope: !2290, file: !408, discriminator: 9)
!15106 = !DILocation(line: 2899, column: 310, scope: !15107)
!15107 = !DILexicalBlockFile(scope: !15108, file: !408, discriminator: 10)
!15108 = !DILexicalBlockFile(scope: !2287, file: !408, discriminator: 3)
!15109 = !DILocation(line: 2899, column: 310, scope: !2286)
!15110 = !DILocation(line: 2899, column: 310, scope: !15111)
!15111 = !DILexicalBlockFile(scope: !2286, file: !408, discriminator: 11)
!15112 = !DILocation(line: 2900, column: 5, scope: !2287)
!15113 = !DILocation(line: 2900, column: 17, scope: !2294)
!15114 = !DILocation(line: 2900, column: 16, scope: !2288)
!15115 = !DILocation(line: 2902, column: 9, scope: !2293)
!15116 = !DILocation(line: 2902, column: 14, scope: !2293)
!15117 = !DILocation(line: 2903, column: 28, scope: !2293)
!15118 = !DILocation(line: 2903, column: 37, scope: !2293)
!15119 = !DILocation(line: 2903, column: 46, scope: !2293)
!15120 = !DILocation(line: 2903, column: 55, scope: !2293)
!15121 = !DILocation(line: 2903, column: 61, scope: !15122)
!15122 = !DILexicalBlockFile(scope: !2293, file: !408, discriminator: 1)
!15123 = !DILocation(line: 2903, column: 46, scope: !15124)
!15124 = !DILexicalBlockFile(scope: !2293, file: !408, discriminator: 2)
!15125 = !DILocation(line: 2903, column: 46, scope: !15126)
!15126 = !DILexicalBlockFile(scope: !15127, file: !408, discriminator: 4)
!15127 = !DILexicalBlockFile(scope: !2293, file: !408, discriminator: 3)
!15128 = !DILocation(line: 2903, column: 9, scope: !2293)
!15129 = !DILocation(line: 2906, column: 14, scope: !2293)
!15130 = !DILocation(line: 2906, column: 26, scope: !2293)
!15131 = !DILocation(line: 2906, column: 46, scope: !2293)
!15132 = !DILocation(line: 2906, column: 52, scope: !2293)
!15133 = !DILocation(line: 2906, column: 13, scope: !2293)
!15134 = !DILocation(line: 2907, column: 14, scope: !2293)
!15135 = !DILocation(line: 2907, column: 26, scope: !2293)
!15136 = !DILocation(line: 2907, column: 48, scope: !2293)
!15137 = !DILocation(line: 2907, column: 54, scope: !2293)
!15138 = !DILocation(line: 2907, column: 13, scope: !2293)
!15139 = !DILocation(line: 2908, column: 13, scope: !2293)
!15140 = !DILocation(line: 2904, column: 9, scope: !2293)
!15141 = !DILocation(line: 2910, column: 5, scope: !2294)
!15142 = !DILocation(line: 2910, column: 5, scope: !2293)
!15143 = !DILocation(line: 2912, column: 5, scope: !2275)
!15144 = !DILocation(line: 2912, column: 10, scope: !15145)
!15145 = !DILexicalBlockFile(scope: !2299, file: !408, discriminator: 1)
!15146 = !DILocation(line: 2912, column: 20, scope: !2299)
!15147 = !DILocation(line: 2912, column: 50, scope: !2299)
!15148 = !DILocation(line: 2912, column: 64, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !2299, file: !408, line: 2912, column: 61)
!15150 = !DILocation(line: 2912, column: 81, scope: !15149)
!15151 = !DILocation(line: 2912, column: 61, scope: !15149)
!15152 = !DILocation(line: 2912, column: 91, scope: !15149)
!15153 = !DILocation(line: 2912, column: 61, scope: !2299)
!15154 = !DILocation(line: 2912, column: 61, scope: !15155)
!15155 = !DILexicalBlockFile(scope: !2299, file: !408, discriminator: 2)
!15156 = !DILocation(line: 2912, column: 122, scope: !15157)
!15157 = !DILexicalBlockFile(scope: !15149, file: !408, discriminator: 3)
!15158 = !DILocation(line: 2912, column: 140, scope: !15149)
!15159 = !DILocation(line: 2912, column: 150, scope: !15149)
!15160 = !DILocation(line: 2912, column: 175, scope: !15149)
!15161 = !DILocation(line: 2912, column: 106, scope: !15149)
!15162 = !DILocation(line: 2912, column: 194, scope: !15163)
!15163 = !DILexicalBlockFile(scope: !2275, file: !408, discriminator: 4)
!15164 = !DILocation(line: 2912, column: 194, scope: !2299)
!15165 = !DILocation(line: 2912, column: 194, scope: !15166)
!15166 = !DILexicalBlockFile(scope: !2299, file: !408, discriminator: 5)
!15167 = !DILocation(line: 2913, column: 1, scope: !2275)
!15168 = !DILocation(line: 2913, column: 1, scope: !15169)
!15169 = !DILexicalBlockFile(scope: !2275, file: !408, discriminator: 1)
!15170 = !DILocation(line: 2979, column: 37, scope: !2300)
!15171 = !DILocation(line: 2979, column: 59, scope: !2300)
!15172 = !DILocation(line: 2980, column: 24, scope: !2300)
!15173 = !DILocation(line: 2982, column: 5, scope: !2300)
!15174 = !DILocation(line: 2982, column: 15, scope: !2300)
!15175 = !DILocation(line: 2983, column: 5, scope: !2300)
!15176 = !DILocation(line: 2983, column: 15, scope: !2300)
!15177 = !DILocation(line: 2985, column: 9, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !2300, file: !408, line: 2985, column: 9)
!15179 = !DILocation(line: 2985, column: 9, scope: !2300)
!15180 = !DILocation(line: 2986, column: 9, scope: !15178)
!15181 = !DILocation(line: 2988, column: 33, scope: !2300)
!15182 = !DILocation(line: 2988, column: 42, scope: !2300)
!15183 = !DILocation(line: 2988, column: 12, scope: !2300)
!15184 = !DILocation(line: 2988, column: 10, scope: !2300)
!15185 = !DILocation(line: 2989, column: 10, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !2300, file: !408, line: 2989, column: 9)
!15187 = !DILocation(line: 2989, column: 9, scope: !2300)
!15188 = !DILocation(line: 2990, column: 9, scope: !15186)
!15189 = !DILocation(line: 2992, column: 24, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !2300, file: !408, line: 2992, column: 9)
!15191 = !DILocation(line: 2992, column: 30, scope: !15190)
!15192 = !DILocation(line: 2992, column: 40, scope: !15190)
!15193 = !DILocation(line: 2992, column: 49, scope: !15190)
!15194 = !DILocation(line: 2992, column: 9, scope: !2300)
!15195 = !DILocation(line: 2994, column: 60, scope: !15190)
!15196 = !DILocation(line: 2994, column: 66, scope: !15190)
!15197 = !DILocation(line: 2994, column: 39, scope: !15190)
!15198 = !DILocation(line: 2994, column: 74, scope: !15190)
!15199 = !DILocation(line: 2994, column: 15, scope: !15190)
!15200 = !DILocation(line: 2994, column: 13, scope: !15190)
!15201 = !DILocation(line: 2994, column: 9, scope: !15190)
!15202 = !DILocation(line: 2995, column: 14, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15190, file: !408, line: 2995, column: 14)
!15204 = !DILocation(line: 2995, column: 20, scope: !15203)
!15205 = !DILocation(line: 2995, column: 14, scope: !15190)
!15206 = !DILocation(line: 2996, column: 37, scope: !15203)
!15207 = !DILocation(line: 2996, column: 43, scope: !15203)
!15208 = !DILocation(line: 2996, column: 61, scope: !15203)
!15209 = !DILocation(line: 2996, column: 15, scope: !15203)
!15210 = !DILocation(line: 2996, column: 13, scope: !15203)
!15211 = !DILocation(line: 2996, column: 9, scope: !15203)
!15212 = !DILocation(line: 2998, column: 13, scope: !15203)
!15213 = !DILocation(line: 3000, column: 5, scope: !2300)
!15214 = !DILocation(line: 3000, column: 10, scope: !15215)
!15215 = !DILexicalBlockFile(scope: !2308, file: !408, discriminator: 1)
!15216 = !DILocation(line: 3000, column: 20, scope: !2308)
!15217 = !DILocation(line: 3000, column: 50, scope: !2308)
!15218 = !DILocation(line: 3000, column: 65, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !2308, file: !408, line: 3000, column: 62)
!15220 = !DILocation(line: 3000, column: 82, scope: !15219)
!15221 = !DILocation(line: 3000, column: 62, scope: !15219)
!15222 = !DILocation(line: 3000, column: 92, scope: !15219)
!15223 = !DILocation(line: 3000, column: 62, scope: !2308)
!15224 = !DILocation(line: 3000, column: 62, scope: !15225)
!15225 = !DILexicalBlockFile(scope: !2308, file: !408, discriminator: 2)
!15226 = !DILocation(line: 3000, column: 123, scope: !15227)
!15227 = !DILexicalBlockFile(scope: !15219, file: !408, discriminator: 3)
!15228 = !DILocation(line: 3000, column: 141, scope: !15219)
!15229 = !DILocation(line: 3000, column: 151, scope: !15219)
!15230 = !DILocation(line: 3000, column: 176, scope: !15219)
!15231 = !DILocation(line: 3000, column: 107, scope: !15219)
!15232 = !DILocation(line: 3000, column: 195, scope: !15233)
!15233 = !DILexicalBlockFile(scope: !2300, file: !408, discriminator: 4)
!15234 = !DILocation(line: 3000, column: 195, scope: !2308)
!15235 = !DILocation(line: 3000, column: 195, scope: !15236)
!15236 = !DILexicalBlockFile(scope: !2308, file: !408, discriminator: 5)
!15237 = !DILocation(line: 3002, column: 5, scope: !2300)
!15238 = !DILocation(line: 3002, column: 10, scope: !15239)
!15239 = !DILexicalBlockFile(scope: !2310, file: !408, discriminator: 1)
!15240 = !DILocation(line: 3002, column: 20, scope: !2310)
!15241 = !DILocation(line: 3002, column: 51, scope: !2310)
!15242 = !DILocation(line: 3002, column: 61, scope: !2313)
!15243 = !DILocation(line: 3002, column: 77, scope: !2313)
!15244 = !DILocation(line: 3002, column: 61, scope: !2310)
!15245 = !DILocation(line: 3002, column: 92, scope: !15246)
!15246 = !DILexicalBlockFile(scope: !2313, file: !408, discriminator: 2)
!15247 = !DILocation(line: 3002, column: 97, scope: !15248)
!15248 = !DILexicalBlockFile(scope: !2312, file: !408, discriminator: 4)
!15249 = !DILocation(line: 3002, column: 107, scope: !2312)
!15250 = !DILocation(line: 3002, column: 137, scope: !2312)
!15251 = !DILocation(line: 3002, column: 163, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !2312, file: !408, line: 3002, column: 160)
!15253 = !DILocation(line: 3002, column: 180, scope: !15252)
!15254 = !DILocation(line: 3002, column: 160, scope: !15252)
!15255 = !DILocation(line: 3002, column: 190, scope: !15252)
!15256 = !DILocation(line: 3002, column: 160, scope: !2312)
!15257 = !DILocation(line: 3002, column: 160, scope: !15258)
!15258 = !DILexicalBlockFile(scope: !2312, file: !408, discriminator: 5)
!15259 = !DILocation(line: 3002, column: 221, scope: !15260)
!15260 = !DILexicalBlockFile(scope: !15252, file: !408, discriminator: 6)
!15261 = !DILocation(line: 3002, column: 239, scope: !15252)
!15262 = !DILocation(line: 3002, column: 249, scope: !15252)
!15263 = !DILocation(line: 3002, column: 274, scope: !15252)
!15264 = !DILocation(line: 3002, column: 205, scope: !15252)
!15265 = !DILocation(line: 3002, column: 293, scope: !15266)
!15266 = !DILexicalBlockFile(scope: !2313, file: !408, discriminator: 7)
!15267 = !DILocation(line: 3002, column: 293, scope: !2312)
!15268 = !DILocation(line: 3002, column: 293, scope: !15269)
!15269 = !DILexicalBlockFile(scope: !2312, file: !408, discriminator: 8)
!15270 = !DILocation(line: 3002, column: 293, scope: !15271)
!15271 = !DILexicalBlockFile(scope: !2312, file: !408, discriminator: 9)
!15272 = !DILocation(line: 3002, column: 306, scope: !15273)
!15273 = !DILexicalBlockFile(scope: !15274, file: !408, discriminator: 10)
!15274 = !DILexicalBlockFile(scope: !2300, file: !408, discriminator: 3)
!15275 = !DILocation(line: 3002, column: 306, scope: !2310)
!15276 = !DILocation(line: 3002, column: 306, scope: !15277)
!15277 = !DILexicalBlockFile(scope: !2310, file: !408, discriminator: 11)
!15278 = !DILocation(line: 3003, column: 1, scope: !2300)
!15279 = !DILocation(line: 3003, column: 1, scope: !15280)
!15280 = !DILexicalBlockFile(scope: !2300, file: !408, discriminator: 1)
!15281 = !DILocation(line: 3077, column: 40, scope: !2314)
!15282 = !DILocation(line: 3077, column: 62, scope: !2314)
!15283 = !DILocation(line: 3079, column: 5, scope: !2314)
!15284 = !DILocation(line: 3079, column: 15, scope: !2314)
!15285 = !DILocation(line: 3080, column: 5, scope: !2314)
!15286 = !DILocation(line: 3080, column: 15, scope: !2314)
!15287 = !DILocation(line: 3082, column: 9, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !2314, file: !408, line: 3082, column: 9)
!15289 = !DILocation(line: 3082, column: 9, scope: !2314)
!15290 = !DILocation(line: 3083, column: 9, scope: !15288)
!15291 = !DILocation(line: 3085, column: 9, scope: !2325)
!15292 = !DILocation(line: 3085, column: 15, scope: !2325)
!15293 = !DILocation(line: 3085, column: 9, scope: !2314)
!15294 = !DILocation(line: 3086, column: 40, scope: !2324)
!15295 = !DILocation(line: 3086, column: 59, scope: !2324)
!15296 = !DILocation(line: 3086, column: 52, scope: !2324)
!15297 = !DILocation(line: 3086, column: 19, scope: !2324)
!15298 = !DILocation(line: 3086, column: 17, scope: !2324)
!15299 = !DILocation(line: 3087, column: 13, scope: !2323)
!15300 = !DILocation(line: 3087, column: 13, scope: !2324)
!15301 = !DILocation(line: 3088, column: 41, scope: !2322)
!15302 = !DILocation(line: 3088, column: 47, scope: !2322)
!15303 = !DILocation(line: 3088, column: 68, scope: !2322)
!15304 = !DILocation(line: 3088, column: 19, scope: !2322)
!15305 = !DILocation(line: 3088, column: 17, scope: !2322)
!15306 = !DILocation(line: 3089, column: 13, scope: !2322)
!15307 = !DILocation(line: 3089, column: 18, scope: !15308)
!15308 = !DILexicalBlockFile(scope: !2321, file: !408, discriminator: 1)
!15309 = !DILocation(line: 3089, column: 28, scope: !2321)
!15310 = !DILocation(line: 3089, column: 59, scope: !2321)
!15311 = !DILocation(line: 3089, column: 69, scope: !2328)
!15312 = !DILocation(line: 3089, column: 85, scope: !2328)
!15313 = !DILocation(line: 3089, column: 69, scope: !2321)
!15314 = !DILocation(line: 3089, column: 100, scope: !15315)
!15315 = !DILexicalBlockFile(scope: !2328, file: !408, discriminator: 2)
!15316 = !DILocation(line: 3089, column: 105, scope: !15317)
!15317 = !DILexicalBlockFile(scope: !2327, file: !408, discriminator: 4)
!15318 = !DILocation(line: 3089, column: 115, scope: !2327)
!15319 = !DILocation(line: 3089, column: 145, scope: !2327)
!15320 = !DILocation(line: 3089, column: 171, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !2327, file: !408, line: 3089, column: 168)
!15322 = !DILocation(line: 3089, column: 188, scope: !15321)
!15323 = !DILocation(line: 3089, column: 168, scope: !15321)
!15324 = !DILocation(line: 3089, column: 198, scope: !15321)
!15325 = !DILocation(line: 3089, column: 168, scope: !2327)
!15326 = !DILocation(line: 3089, column: 168, scope: !15327)
!15327 = !DILexicalBlockFile(scope: !2327, file: !408, discriminator: 5)
!15328 = !DILocation(line: 3089, column: 229, scope: !15329)
!15329 = !DILexicalBlockFile(scope: !15321, file: !408, discriminator: 6)
!15330 = !DILocation(line: 3089, column: 247, scope: !15321)
!15331 = !DILocation(line: 3089, column: 257, scope: !15321)
!15332 = !DILocation(line: 3089, column: 282, scope: !15321)
!15333 = !DILocation(line: 3089, column: 213, scope: !15321)
!15334 = !DILocation(line: 3089, column: 301, scope: !15335)
!15335 = !DILexicalBlockFile(scope: !2328, file: !408, discriminator: 7)
!15336 = !DILocation(line: 3089, column: 301, scope: !2327)
!15337 = !DILocation(line: 3089, column: 301, scope: !15338)
!15338 = !DILexicalBlockFile(scope: !2327, file: !408, discriminator: 8)
!15339 = !DILocation(line: 3089, column: 301, scope: !15340)
!15340 = !DILexicalBlockFile(scope: !2327, file: !408, discriminator: 9)
!15341 = !DILocation(line: 3089, column: 314, scope: !15342)
!15342 = !DILexicalBlockFile(scope: !15343, file: !408, discriminator: 10)
!15343 = !DILexicalBlockFile(scope: !2322, file: !408, discriminator: 3)
!15344 = !DILocation(line: 3089, column: 314, scope: !2321)
!15345 = !DILocation(line: 3089, column: 314, scope: !15346)
!15346 = !DILexicalBlockFile(scope: !2321, file: !408, discriminator: 11)
!15347 = !DILocation(line: 3090, column: 13, scope: !2322)
!15348 = !DILocation(line: 3090, column: 18, scope: !15349)
!15349 = !DILexicalBlockFile(scope: !2330, file: !408, discriminator: 1)
!15350 = !DILocation(line: 3090, column: 28, scope: !2330)
!15351 = !DILocation(line: 3090, column: 58, scope: !2330)
!15352 = !DILocation(line: 3090, column: 76, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !2330, file: !408, line: 3090, column: 73)
!15354 = !DILocation(line: 3090, column: 93, scope: !15353)
!15355 = !DILocation(line: 3090, column: 73, scope: !15353)
!15356 = !DILocation(line: 3090, column: 103, scope: !15353)
!15357 = !DILocation(line: 3090, column: 73, scope: !2330)
!15358 = !DILocation(line: 3090, column: 73, scope: !15359)
!15359 = !DILexicalBlockFile(scope: !2330, file: !408, discriminator: 2)
!15360 = !DILocation(line: 3090, column: 134, scope: !15361)
!15361 = !DILexicalBlockFile(scope: !15353, file: !408, discriminator: 3)
!15362 = !DILocation(line: 3090, column: 152, scope: !15353)
!15363 = !DILocation(line: 3090, column: 162, scope: !15353)
!15364 = !DILocation(line: 3090, column: 187, scope: !15353)
!15365 = !DILocation(line: 3090, column: 118, scope: !15353)
!15366 = !DILocation(line: 3090, column: 206, scope: !15367)
!15367 = !DILexicalBlockFile(scope: !2322, file: !408, discriminator: 4)
!15368 = !DILocation(line: 3090, column: 206, scope: !2330)
!15369 = !DILocation(line: 3090, column: 206, scope: !15370)
!15370 = !DILexicalBlockFile(scope: !2330, file: !408, discriminator: 5)
!15371 = !DILocation(line: 3091, column: 9, scope: !2322)
!15372 = !DILocation(line: 3092, column: 5, scope: !2324)
!15373 = !DILocation(line: 3093, column: 1, scope: !2314)
!15374 = !DILocation(line: 3093, column: 1, scope: !15375)
!15375 = !DILexicalBlockFile(scope: !2314, file: !408, discriminator: 1)
!15376 = !DILocation(line: 3171, column: 35, scope: !2331)
!15377 = !DILocation(line: 3171, column: 57, scope: !2331)
!15378 = !DILocation(line: 3172, column: 34, scope: !2331)
!15379 = !DILocation(line: 3174, column: 5, scope: !2331)
!15380 = !DILocation(line: 3174, column: 15, scope: !2331)
!15381 = !DILocation(line: 3175, column: 5, scope: !2331)
!15382 = !DILocation(line: 3175, column: 15, scope: !2331)
!15383 = !DILocation(line: 3176, column: 5, scope: !2331)
!15384 = !DILocation(line: 3176, column: 15, scope: !2331)
!15385 = !DILocation(line: 3178, column: 9, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !2331, file: !408, line: 3178, column: 9)
!15387 = !DILocation(line: 3178, column: 9, scope: !2331)
!15388 = !DILocation(line: 3179, column: 9, scope: !15386)
!15389 = !DILocation(line: 3181, column: 9, scope: !2344)
!15390 = !DILocation(line: 3181, column: 15, scope: !2344)
!15391 = !DILocation(line: 3181, column: 9, scope: !2331)
!15392 = !DILocation(line: 3182, column: 39, scope: !2343)
!15393 = !DILocation(line: 3182, column: 57, scope: !2343)
!15394 = !DILocation(line: 3182, column: 50, scope: !2343)
!15395 = !DILocation(line: 3182, column: 18, scope: !2343)
!15396 = !DILocation(line: 3182, column: 16, scope: !2343)
!15397 = !DILocation(line: 3183, column: 37, scope: !2343)
!15398 = !DILocation(line: 3183, column: 53, scope: !2343)
!15399 = !DILocation(line: 3183, column: 46, scope: !2343)
!15400 = !DILocation(line: 3183, column: 16, scope: !2343)
!15401 = !DILocation(line: 3183, column: 14, scope: !2343)
!15402 = !DILocation(line: 3184, column: 13, scope: !2342)
!15403 = !DILocation(line: 3184, column: 20, scope: !2342)
!15404 = !DILocation(line: 3184, column: 23, scope: !15405)
!15405 = !DILexicalBlockFile(scope: !2342, file: !408, discriminator: 1)
!15406 = !DILocation(line: 3184, column: 13, scope: !2343)
!15407 = !DILocation(line: 3185, column: 41, scope: !2341)
!15408 = !DILocation(line: 3185, column: 47, scope: !2341)
!15409 = !DILocation(line: 3185, column: 64, scope: !2341)
!15410 = !DILocation(line: 3185, column: 72, scope: !2341)
!15411 = !DILocation(line: 3185, column: 19, scope: !2341)
!15412 = !DILocation(line: 3185, column: 17, scope: !2341)
!15413 = !DILocation(line: 3186, column: 13, scope: !2341)
!15414 = !DILocation(line: 3186, column: 18, scope: !15415)
!15415 = !DILexicalBlockFile(scope: !2340, file: !408, discriminator: 1)
!15416 = !DILocation(line: 3186, column: 28, scope: !2340)
!15417 = !DILocation(line: 3186, column: 59, scope: !2340)
!15418 = !DILocation(line: 3186, column: 69, scope: !2347)
!15419 = !DILocation(line: 3186, column: 85, scope: !2347)
!15420 = !DILocation(line: 3186, column: 69, scope: !2340)
!15421 = !DILocation(line: 3186, column: 100, scope: !15422)
!15422 = !DILexicalBlockFile(scope: !2347, file: !408, discriminator: 2)
!15423 = !DILocation(line: 3186, column: 105, scope: !15424)
!15424 = !DILexicalBlockFile(scope: !2346, file: !408, discriminator: 4)
!15425 = !DILocation(line: 3186, column: 115, scope: !2346)
!15426 = !DILocation(line: 3186, column: 145, scope: !2346)
!15427 = !DILocation(line: 3186, column: 171, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !2346, file: !408, line: 3186, column: 168)
!15429 = !DILocation(line: 3186, column: 188, scope: !15428)
!15430 = !DILocation(line: 3186, column: 168, scope: !15428)
!15431 = !DILocation(line: 3186, column: 198, scope: !15428)
!15432 = !DILocation(line: 3186, column: 168, scope: !2346)
!15433 = !DILocation(line: 3186, column: 168, scope: !15434)
!15434 = !DILexicalBlockFile(scope: !2346, file: !408, discriminator: 5)
!15435 = !DILocation(line: 3186, column: 229, scope: !15436)
!15436 = !DILexicalBlockFile(scope: !15428, file: !408, discriminator: 6)
!15437 = !DILocation(line: 3186, column: 247, scope: !15428)
!15438 = !DILocation(line: 3186, column: 257, scope: !15428)
!15439 = !DILocation(line: 3186, column: 282, scope: !15428)
!15440 = !DILocation(line: 3186, column: 213, scope: !15428)
!15441 = !DILocation(line: 3186, column: 301, scope: !15442)
!15442 = !DILexicalBlockFile(scope: !2347, file: !408, discriminator: 7)
!15443 = !DILocation(line: 3186, column: 301, scope: !2346)
!15444 = !DILocation(line: 3186, column: 301, scope: !15445)
!15445 = !DILexicalBlockFile(scope: !2346, file: !408, discriminator: 8)
!15446 = !DILocation(line: 3186, column: 301, scope: !15447)
!15447 = !DILexicalBlockFile(scope: !2346, file: !408, discriminator: 9)
!15448 = !DILocation(line: 3186, column: 314, scope: !15449)
!15449 = !DILexicalBlockFile(scope: !15450, file: !408, discriminator: 10)
!15450 = !DILexicalBlockFile(scope: !2341, file: !408, discriminator: 3)
!15451 = !DILocation(line: 3186, column: 314, scope: !2340)
!15452 = !DILocation(line: 3186, column: 314, scope: !15453)
!15453 = !DILexicalBlockFile(scope: !2340, file: !408, discriminator: 11)
!15454 = !DILocation(line: 3187, column: 13, scope: !2341)
!15455 = !DILocation(line: 3187, column: 18, scope: !15456)
!15456 = !DILexicalBlockFile(scope: !2349, file: !408, discriminator: 1)
!15457 = !DILocation(line: 3187, column: 28, scope: !2349)
!15458 = !DILocation(line: 3187, column: 58, scope: !2349)
!15459 = !DILocation(line: 3187, column: 73, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !2349, file: !408, line: 3187, column: 70)
!15461 = !DILocation(line: 3187, column: 90, scope: !15460)
!15462 = !DILocation(line: 3187, column: 70, scope: !15460)
!15463 = !DILocation(line: 3187, column: 100, scope: !15460)
!15464 = !DILocation(line: 3187, column: 70, scope: !2349)
!15465 = !DILocation(line: 3187, column: 70, scope: !15466)
!15466 = !DILexicalBlockFile(scope: !2349, file: !408, discriminator: 2)
!15467 = !DILocation(line: 3187, column: 131, scope: !15468)
!15468 = !DILexicalBlockFile(scope: !15460, file: !408, discriminator: 3)
!15469 = !DILocation(line: 3187, column: 149, scope: !15460)
!15470 = !DILocation(line: 3187, column: 159, scope: !15460)
!15471 = !DILocation(line: 3187, column: 184, scope: !15460)
!15472 = !DILocation(line: 3187, column: 115, scope: !15460)
!15473 = !DILocation(line: 3187, column: 203, scope: !15474)
!15474 = !DILexicalBlockFile(scope: !2341, file: !408, discriminator: 4)
!15475 = !DILocation(line: 3187, column: 203, scope: !2349)
!15476 = !DILocation(line: 3187, column: 203, scope: !15477)
!15477 = !DILexicalBlockFile(scope: !2349, file: !408, discriminator: 5)
!15478 = !DILocation(line: 3188, column: 13, scope: !2341)
!15479 = !DILocation(line: 3188, column: 18, scope: !15480)
!15480 = !DILexicalBlockFile(scope: !2351, file: !408, discriminator: 1)
!15481 = !DILocation(line: 3188, column: 28, scope: !2351)
!15482 = !DILocation(line: 3188, column: 58, scope: !2351)
!15483 = !DILocation(line: 3188, column: 75, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !2351, file: !408, line: 3188, column: 72)
!15485 = !DILocation(line: 3188, column: 92, scope: !15484)
!15486 = !DILocation(line: 3188, column: 72, scope: !15484)
!15487 = !DILocation(line: 3188, column: 102, scope: !15484)
!15488 = !DILocation(line: 3188, column: 72, scope: !2351)
!15489 = !DILocation(line: 3188, column: 72, scope: !15490)
!15490 = !DILexicalBlockFile(scope: !2351, file: !408, discriminator: 2)
!15491 = !DILocation(line: 3188, column: 133, scope: !15492)
!15492 = !DILexicalBlockFile(scope: !15484, file: !408, discriminator: 3)
!15493 = !DILocation(line: 3188, column: 151, scope: !15484)
!15494 = !DILocation(line: 3188, column: 161, scope: !15484)
!15495 = !DILocation(line: 3188, column: 186, scope: !15484)
!15496 = !DILocation(line: 3188, column: 117, scope: !15484)
!15497 = !DILocation(line: 3188, column: 205, scope: !15474)
!15498 = !DILocation(line: 3188, column: 205, scope: !2351)
!15499 = !DILocation(line: 3188, column: 205, scope: !15500)
!15500 = !DILexicalBlockFile(scope: !2351, file: !408, discriminator: 5)
!15501 = !DILocation(line: 3189, column: 9, scope: !2341)
!15502 = !DILocation(line: 3190, column: 13, scope: !2354)
!15503 = !DILocation(line: 3190, column: 18, scope: !15504)
!15504 = !DILexicalBlockFile(scope: !2353, file: !408, discriminator: 1)
!15505 = !DILocation(line: 3190, column: 28, scope: !2353)
!15506 = !DILocation(line: 3190, column: 59, scope: !2353)
!15507 = !DILocation(line: 3190, column: 70, scope: !2357)
!15508 = !DILocation(line: 3190, column: 86, scope: !2357)
!15509 = !DILocation(line: 3190, column: 70, scope: !2353)
!15510 = !DILocation(line: 3190, column: 101, scope: !15511)
!15511 = !DILexicalBlockFile(scope: !2357, file: !408, discriminator: 2)
!15512 = !DILocation(line: 3190, column: 106, scope: !15513)
!15513 = !DILexicalBlockFile(scope: !2356, file: !408, discriminator: 4)
!15514 = !DILocation(line: 3190, column: 116, scope: !2356)
!15515 = !DILocation(line: 3190, column: 146, scope: !2356)
!15516 = !DILocation(line: 3190, column: 172, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !2356, file: !408, line: 3190, column: 169)
!15518 = !DILocation(line: 3190, column: 189, scope: !15517)
!15519 = !DILocation(line: 3190, column: 169, scope: !15517)
!15520 = !DILocation(line: 3190, column: 199, scope: !15517)
!15521 = !DILocation(line: 3190, column: 169, scope: !2356)
!15522 = !DILocation(line: 3190, column: 169, scope: !15523)
!15523 = !DILexicalBlockFile(scope: !2356, file: !408, discriminator: 5)
!15524 = !DILocation(line: 3190, column: 230, scope: !15525)
!15525 = !DILexicalBlockFile(scope: !15517, file: !408, discriminator: 6)
!15526 = !DILocation(line: 3190, column: 248, scope: !15517)
!15527 = !DILocation(line: 3190, column: 258, scope: !15517)
!15528 = !DILocation(line: 3190, column: 283, scope: !15517)
!15529 = !DILocation(line: 3190, column: 214, scope: !15517)
!15530 = !DILocation(line: 3190, column: 302, scope: !15531)
!15531 = !DILexicalBlockFile(scope: !2357, file: !408, discriminator: 7)
!15532 = !DILocation(line: 3190, column: 302, scope: !2356)
!15533 = !DILocation(line: 3190, column: 302, scope: !15534)
!15534 = !DILexicalBlockFile(scope: !2356, file: !408, discriminator: 8)
!15535 = !DILocation(line: 3190, column: 302, scope: !15536)
!15536 = !DILexicalBlockFile(scope: !2356, file: !408, discriminator: 9)
!15537 = !DILocation(line: 3190, column: 315, scope: !15538)
!15538 = !DILexicalBlockFile(scope: !15539, file: !408, discriminator: 10)
!15539 = !DILexicalBlockFile(scope: !2354, file: !408, discriminator: 3)
!15540 = !DILocation(line: 3190, column: 315, scope: !2353)
!15541 = !DILocation(line: 3190, column: 315, scope: !15542)
!15542 = !DILexicalBlockFile(scope: !2353, file: !408, discriminator: 11)
!15543 = !DILocation(line: 3191, column: 13, scope: !2354)
!15544 = !DILocation(line: 3191, column: 18, scope: !15545)
!15545 = !DILexicalBlockFile(scope: !2359, file: !408, discriminator: 1)
!15546 = !DILocation(line: 3191, column: 28, scope: !2359)
!15547 = !DILocation(line: 3191, column: 59, scope: !2359)
!15548 = !DILocation(line: 3191, column: 72, scope: !2362)
!15549 = !DILocation(line: 3191, column: 88, scope: !2362)
!15550 = !DILocation(line: 3191, column: 72, scope: !2359)
!15551 = !DILocation(line: 3191, column: 103, scope: !15552)
!15552 = !DILexicalBlockFile(scope: !2362, file: !408, discriminator: 2)
!15553 = !DILocation(line: 3191, column: 108, scope: !15554)
!15554 = !DILexicalBlockFile(scope: !2361, file: !408, discriminator: 4)
!15555 = !DILocation(line: 3191, column: 118, scope: !2361)
!15556 = !DILocation(line: 3191, column: 148, scope: !2361)
!15557 = !DILocation(line: 3191, column: 174, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !2361, file: !408, line: 3191, column: 171)
!15559 = !DILocation(line: 3191, column: 191, scope: !15558)
!15560 = !DILocation(line: 3191, column: 171, scope: !15558)
!15561 = !DILocation(line: 3191, column: 201, scope: !15558)
!15562 = !DILocation(line: 3191, column: 171, scope: !2361)
!15563 = !DILocation(line: 3191, column: 171, scope: !15564)
!15564 = !DILexicalBlockFile(scope: !2361, file: !408, discriminator: 5)
!15565 = !DILocation(line: 3191, column: 232, scope: !15566)
!15566 = !DILexicalBlockFile(scope: !15558, file: !408, discriminator: 6)
!15567 = !DILocation(line: 3191, column: 250, scope: !15558)
!15568 = !DILocation(line: 3191, column: 260, scope: !15558)
!15569 = !DILocation(line: 3191, column: 285, scope: !15558)
!15570 = !DILocation(line: 3191, column: 216, scope: !15558)
!15571 = !DILocation(line: 3191, column: 304, scope: !15572)
!15572 = !DILexicalBlockFile(scope: !2362, file: !408, discriminator: 7)
!15573 = !DILocation(line: 3191, column: 304, scope: !2361)
!15574 = !DILocation(line: 3191, column: 304, scope: !15575)
!15575 = !DILexicalBlockFile(scope: !2361, file: !408, discriminator: 8)
!15576 = !DILocation(line: 3191, column: 304, scope: !15577)
!15577 = !DILexicalBlockFile(scope: !2361, file: !408, discriminator: 9)
!15578 = !DILocation(line: 3191, column: 317, scope: !15538)
!15579 = !DILocation(line: 3191, column: 317, scope: !2359)
!15580 = !DILocation(line: 3191, column: 317, scope: !15581)
!15581 = !DILexicalBlockFile(scope: !2359, file: !408, discriminator: 11)
!15582 = !DILocation(line: 3193, column: 5, scope: !2343)
!15583 = !DILocation(line: 3194, column: 1, scope: !2331)
!15584 = !DILocation(line: 3194, column: 1, scope: !15585)
!15585 = !DILexicalBlockFile(scope: !2331, file: !408, discriminator: 1)
!15586 = !DILocation(line: 3096, column: 46, scope: !2363)
!15587 = !DILocation(line: 3097, column: 45, scope: !2363)
!15588 = !DILocation(line: 3098, column: 45, scope: !2363)
!15589 = !DILocation(line: 3099, column: 45, scope: !2363)
!15590 = !DILocation(line: 3100, column: 33, scope: !2363)
!15591 = !DILocation(line: 3102, column: 5, scope: !2363)
!15592 = !DILocation(line: 3102, column: 15, scope: !2363)
!15593 = !DILocation(line: 3102, column: 40, scope: !2363)
!15594 = !DILocation(line: 3102, column: 28, scope: !2363)
!15595 = !DILocation(line: 3103, column: 5, scope: !2363)
!15596 = !DILocation(line: 3103, column: 15, scope: !2363)
!15597 = !DILocation(line: 3103, column: 34, scope: !2363)
!15598 = !DILocation(line: 3103, column: 46, scope: !2363)
!15599 = !DILocation(line: 3104, column: 5, scope: !2363)
!15600 = !DILocation(line: 3104, column: 15, scope: !2363)
!15601 = !DILocation(line: 3105, column: 5, scope: !2363)
!15602 = !DILocation(line: 3105, column: 15, scope: !2363)
!15603 = !DILocation(line: 3107, column: 9, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3107, column: 9)
!15605 = !DILocation(line: 3107, column: 9, scope: !2363)
!15606 = !DILocation(line: 3108, column: 9, scope: !15604)
!15607 = !DILocation(line: 3110, column: 38, scope: !2363)
!15608 = !DILocation(line: 3110, column: 44, scope: !2363)
!15609 = !DILocation(line: 3110, column: 24, scope: !2363)
!15610 = !DILocation(line: 3110, column: 22, scope: !2363)
!15611 = !DILocation(line: 3111, column: 10, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !2363, file: !408, line: 3111, column: 9)
!15613 = !DILocation(line: 3111, column: 9, scope: !2363)
!15614 = !DILocation(line: 3112, column: 9, scope: !15612)
!15615 = !DILocation(line: 3114, column: 9, scope: !2383)
!15616 = !DILocation(line: 3114, column: 9, scope: !2363)
!15617 = !DILocation(line: 3115, column: 35, scope: !2382)
!15618 = !DILocation(line: 3115, column: 41, scope: !2382)
!15619 = !DILocation(line: 3115, column: 21, scope: !2382)
!15620 = !DILocation(line: 3115, column: 19, scope: !2382)
!15621 = !DILocation(line: 3116, column: 14, scope: !2381)
!15622 = !DILocation(line: 3116, column: 13, scope: !2382)
!15623 = !DILocation(line: 3117, column: 13, scope: !2380)
!15624 = !DILocation(line: 3117, column: 18, scope: !15625)
!15625 = !DILexicalBlockFile(scope: !2379, file: !408, discriminator: 1)
!15626 = !DILocation(line: 3117, column: 28, scope: !2379)
!15627 = !DILocation(line: 3117, column: 58, scope: !2379)
!15628 = !DILocation(line: 3117, column: 85, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !2379, file: !408, line: 3117, column: 82)
!15630 = !DILocation(line: 3117, column: 102, scope: !15629)
!15631 = !DILocation(line: 3117, column: 82, scope: !15629)
!15632 = !DILocation(line: 3117, column: 112, scope: !15629)
!15633 = !DILocation(line: 3117, column: 82, scope: !2379)
!15634 = !DILocation(line: 3117, column: 82, scope: !15635)
!15635 = !DILexicalBlockFile(scope: !2379, file: !408, discriminator: 2)
!15636 = !DILocation(line: 3117, column: 143, scope: !15637)
!15637 = !DILexicalBlockFile(scope: !15629, file: !408, discriminator: 3)
!15638 = !DILocation(line: 3117, column: 161, scope: !15629)
!15639 = !DILocation(line: 3117, column: 171, scope: !15629)
!15640 = !DILocation(line: 3117, column: 196, scope: !15629)
!15641 = !DILocation(line: 3117, column: 127, scope: !15629)
!15642 = !DILocation(line: 3117, column: 215, scope: !15643)
!15643 = !DILexicalBlockFile(scope: !2380, file: !408, discriminator: 4)
!15644 = !DILocation(line: 3117, column: 215, scope: !2379)
!15645 = !DILocation(line: 3117, column: 215, scope: !15646)
!15646 = !DILexicalBlockFile(scope: !2379, file: !408, discriminator: 5)
!15647 = !DILocation(line: 3118, column: 13, scope: !2380)
!15648 = !DILocation(line: 3120, column: 5, scope: !2382)
!15649 = !DILocation(line: 3121, column: 55, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !2383, file: !408, line: 3120, column: 12)
!15651 = !DILocation(line: 3122, column: 19, scope: !15650)
!15652 = !DILocation(line: 3125, column: 9, scope: !2389)
!15653 = !DILocation(line: 3125, column: 9, scope: !2363)
!15654 = !DILocation(line: 3126, column: 35, scope: !2388)
!15655 = !DILocation(line: 3126, column: 41, scope: !2388)
!15656 = !DILocation(line: 3126, column: 21, scope: !2388)
!15657 = !DILocation(line: 3126, column: 19, scope: !2388)
!15658 = !DILocation(line: 3127, column: 14, scope: !2387)
!15659 = !DILocation(line: 3127, column: 13, scope: !2388)
!15660 = !DILocation(line: 3128, column: 13, scope: !2386)
!15661 = !DILocation(line: 3128, column: 18, scope: !15662)
!15662 = !DILexicalBlockFile(scope: !2385, file: !408, discriminator: 1)
!15663 = !DILocation(line: 3128, column: 28, scope: !2385)
!15664 = !DILocation(line: 3128, column: 58, scope: !2385)
!15665 = !DILocation(line: 3128, column: 85, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !2385, file: !408, line: 3128, column: 82)
!15667 = !DILocation(line: 3128, column: 102, scope: !15666)
!15668 = !DILocation(line: 3128, column: 82, scope: !15666)
!15669 = !DILocation(line: 3128, column: 112, scope: !15666)
!15670 = !DILocation(line: 3128, column: 82, scope: !2385)
!15671 = !DILocation(line: 3128, column: 82, scope: !15672)
!15672 = !DILexicalBlockFile(scope: !2385, file: !408, discriminator: 2)
!15673 = !DILocation(line: 3128, column: 143, scope: !15674)
!15674 = !DILexicalBlockFile(scope: !15666, file: !408, discriminator: 3)
!15675 = !DILocation(line: 3128, column: 161, scope: !15666)
!15676 = !DILocation(line: 3128, column: 171, scope: !15666)
!15677 = !DILocation(line: 3128, column: 196, scope: !15666)
!15678 = !DILocation(line: 3128, column: 127, scope: !15666)
!15679 = !DILocation(line: 3128, column: 215, scope: !15680)
!15680 = !DILexicalBlockFile(scope: !2386, file: !408, discriminator: 4)
!15681 = !DILocation(line: 3128, column: 215, scope: !2385)
!15682 = !DILocation(line: 3128, column: 215, scope: !15683)
!15683 = !DILexicalBlockFile(scope: !2385, file: !408, discriminator: 5)
!15684 = !DILocation(line: 3129, column: 13, scope: !2386)
!15685 = !DILocation(line: 3129, column: 18, scope: !15686)
!15686 = !DILexicalBlockFile(scope: !2391, file: !408, discriminator: 1)
!15687 = !DILocation(line: 3129, column: 28, scope: !2391)
!15688 = !DILocation(line: 3129, column: 58, scope: !2391)
!15689 = !DILocation(line: 3129, column: 78, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !2391, file: !408, line: 3129, column: 75)
!15691 = !DILocation(line: 3129, column: 95, scope: !15690)
!15692 = !DILocation(line: 3129, column: 75, scope: !15690)
!15693 = !DILocation(line: 3129, column: 105, scope: !15690)
!15694 = !DILocation(line: 3129, column: 75, scope: !2391)
!15695 = !DILocation(line: 3129, column: 75, scope: !15696)
!15696 = !DILexicalBlockFile(scope: !2391, file: !408, discriminator: 2)
!15697 = !DILocation(line: 3129, column: 136, scope: !15698)
!15698 = !DILexicalBlockFile(scope: !15690, file: !408, discriminator: 3)
!15699 = !DILocation(line: 3129, column: 154, scope: !15690)
!15700 = !DILocation(line: 3129, column: 164, scope: !15690)
!15701 = !DILocation(line: 3129, column: 189, scope: !15690)
!15702 = !DILocation(line: 3129, column: 120, scope: !15690)
!15703 = !DILocation(line: 3129, column: 208, scope: !15680)
!15704 = !DILocation(line: 3129, column: 208, scope: !2391)
!15705 = !DILocation(line: 3129, column: 208, scope: !15706)
!15706 = !DILexicalBlockFile(scope: !2391, file: !408, discriminator: 5)
!15707 = !DILocation(line: 3130, column: 13, scope: !2386)
!15708 = !DILocation(line: 3132, column: 5, scope: !2388)
!15709 = !DILocation(line: 3133, column: 55, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !2389, file: !408, line: 3132, column: 12)
!15711 = !DILocation(line: 3134, column: 19, scope: !15710)
!15712 = !DILocation(line: 3138, column: 9, scope: !2395)
!15713 = !DILocation(line: 3138, column: 15, scope: !2395)
!15714 = !DILocation(line: 3138, column: 9, scope: !2363)
!15715 = !DILocation(line: 3139, column: 37, scope: !2394)
!15716 = !DILocation(line: 3139, column: 43, scope: !2394)
!15717 = !DILocation(line: 3140, column: 37, scope: !2394)
!15718 = !DILocation(line: 3140, column: 55, scope: !2394)
!15719 = !DILocation(line: 3140, column: 66, scope: !2394)
!15720 = !DILocation(line: 3139, column: 15, scope: !2394)
!15721 = !DILocation(line: 3139, column: 13, scope: !2394)
!15722 = !DILocation(line: 3141, column: 9, scope: !2394)
!15723 = !DILocation(line: 3141, column: 14, scope: !15724)
!15724 = !DILexicalBlockFile(scope: !2393, file: !408, discriminator: 1)
!15725 = !DILocation(line: 3141, column: 24, scope: !2393)
!15726 = !DILocation(line: 3141, column: 47, scope: !2393)
!15727 = !DILocation(line: 3141, column: 57, scope: !2399)
!15728 = !DILocation(line: 3141, column: 65, scope: !2399)
!15729 = !DILocation(line: 3141, column: 57, scope: !2393)
!15730 = !DILocation(line: 3141, column: 88, scope: !15731)
!15731 = !DILexicalBlockFile(scope: !2398, file: !408, discriminator: 2)
!15732 = !DILocation(line: 3141, column: 102, scope: !2398)
!15733 = !DILocation(line: 3141, column: 107, scope: !15734)
!15734 = !DILexicalBlockFile(scope: !2397, file: !408, discriminator: 4)
!15735 = !DILocation(line: 3141, column: 117, scope: !2397)
!15736 = !DILocation(line: 3141, column: 147, scope: !2397)
!15737 = !DILocation(line: 3141, column: 165, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !2397, file: !408, line: 3141, column: 162)
!15739 = !DILocation(line: 3141, column: 182, scope: !15738)
!15740 = !DILocation(line: 3141, column: 162, scope: !15738)
!15741 = !DILocation(line: 3141, column: 192, scope: !15738)
!15742 = !DILocation(line: 3141, column: 162, scope: !2397)
!15743 = !DILocation(line: 3141, column: 162, scope: !15744)
!15744 = !DILexicalBlockFile(scope: !2397, file: !408, discriminator: 5)
!15745 = !DILocation(line: 3141, column: 223, scope: !15746)
!15746 = !DILexicalBlockFile(scope: !15738, file: !408, discriminator: 6)
!15747 = !DILocation(line: 3141, column: 241, scope: !15738)
!15748 = !DILocation(line: 3141, column: 251, scope: !15738)
!15749 = !DILocation(line: 3141, column: 276, scope: !15738)
!15750 = !DILocation(line: 3141, column: 207, scope: !15738)
!15751 = !DILocation(line: 3141, column: 295, scope: !15752)
!15752 = !DILexicalBlockFile(scope: !2398, file: !408, discriminator: 7)
!15753 = !DILocation(line: 3141, column: 295, scope: !2397)
!15754 = !DILocation(line: 3141, column: 295, scope: !15755)
!15755 = !DILexicalBlockFile(scope: !2397, file: !408, discriminator: 8)
!15756 = !DILocation(line: 3141, column: 308, scope: !15757)
!15757 = !DILexicalBlockFile(scope: !2398, file: !408, discriminator: 9)
!15758 = !DILocation(line: 3141, column: 310, scope: !15759)
!15759 = !DILexicalBlockFile(scope: !15760, file: !408, discriminator: 10)
!15760 = !DILexicalBlockFile(scope: !2394, file: !408, discriminator: 3)
!15761 = !DILocation(line: 3141, column: 310, scope: !2393)
!15762 = !DILocation(line: 3141, column: 310, scope: !15763)
!15763 = !DILexicalBlockFile(scope: !2393, file: !408, discriminator: 11)
!15764 = !DILocation(line: 3142, column: 5, scope: !2394)
!15765 = !DILocation(line: 3148, column: 45, scope: !2363)
!15766 = !DILocation(line: 3148, column: 22, scope: !2363)
!15767 = !DILocation(line: 3148, column: 20, scope: !2363)
!15768 = !DILocation(line: 3149, column: 9, scope: !2405)
!15769 = !DILocation(line: 3149, column: 9, scope: !2363)
!15770 = !DILocation(line: 3150, column: 29, scope: !2403)
!15771 = !DILocation(line: 3150, column: 43, scope: !2403)
!15772 = !DILocation(line: 3150, column: 52, scope: !2403)
!15773 = !DILocation(line: 3150, column: 13, scope: !2404)
!15774 = !DILocation(line: 3151, column: 30, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !2402, file: !408, line: 3151, column: 17)
!15776 = !DILocation(line: 3151, column: 17, scope: !15775)
!15777 = !DILocation(line: 3154, column: 32, scope: !15775)
!15778 = !DILocation(line: 3151, column: 17, scope: !2402)
!15779 = !DILocation(line: 3155, column: 17, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15775, file: !408, line: 3154, column: 37)
!15781 = !DILocation(line: 3157, column: 41, scope: !2402)
!15782 = !DILocation(line: 3158, column: 41, scope: !2402)
!15783 = !DILocation(line: 3158, column: 59, scope: !2402)
!15784 = !DILocation(line: 3158, column: 70, scope: !2402)
!15785 = !DILocation(line: 3157, column: 19, scope: !2402)
!15786 = !DILocation(line: 3157, column: 17, scope: !2402)
!15787 = !DILocation(line: 3159, column: 13, scope: !2402)
!15788 = !DILocation(line: 3159, column: 18, scope: !15789)
!15789 = !DILexicalBlockFile(scope: !2401, file: !408, discriminator: 1)
!15790 = !DILocation(line: 3159, column: 28, scope: !2401)
!15791 = !DILocation(line: 3159, column: 51, scope: !2401)
!15792 = !DILocation(line: 3159, column: 61, scope: !2409)
!15793 = !DILocation(line: 3159, column: 69, scope: !2409)
!15794 = !DILocation(line: 3159, column: 61, scope: !2401)
!15795 = !DILocation(line: 3159, column: 92, scope: !15796)
!15796 = !DILexicalBlockFile(scope: !2408, file: !408, discriminator: 2)
!15797 = !DILocation(line: 3159, column: 106, scope: !2408)
!15798 = !DILocation(line: 3159, column: 111, scope: !15799)
!15799 = !DILexicalBlockFile(scope: !2407, file: !408, discriminator: 4)
!15800 = !DILocation(line: 3159, column: 121, scope: !2407)
!15801 = !DILocation(line: 3159, column: 151, scope: !2407)
!15802 = !DILocation(line: 3159, column: 169, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !2407, file: !408, line: 3159, column: 166)
!15804 = !DILocation(line: 3159, column: 186, scope: !15803)
!15805 = !DILocation(line: 3159, column: 166, scope: !15803)
!15806 = !DILocation(line: 3159, column: 196, scope: !15803)
!15807 = !DILocation(line: 3159, column: 166, scope: !2407)
!15808 = !DILocation(line: 3159, column: 166, scope: !15809)
!15809 = !DILexicalBlockFile(scope: !2407, file: !408, discriminator: 5)
!15810 = !DILocation(line: 3159, column: 227, scope: !15811)
!15811 = !DILexicalBlockFile(scope: !15803, file: !408, discriminator: 6)
!15812 = !DILocation(line: 3159, column: 245, scope: !15803)
!15813 = !DILocation(line: 3159, column: 255, scope: !15803)
!15814 = !DILocation(line: 3159, column: 280, scope: !15803)
!15815 = !DILocation(line: 3159, column: 211, scope: !15803)
!15816 = !DILocation(line: 3159, column: 299, scope: !15817)
!15817 = !DILexicalBlockFile(scope: !2408, file: !408, discriminator: 7)
!15818 = !DILocation(line: 3159, column: 299, scope: !2407)
!15819 = !DILocation(line: 3159, column: 299, scope: !15820)
!15820 = !DILexicalBlockFile(scope: !2407, file: !408, discriminator: 8)
!15821 = !DILocation(line: 3159, column: 312, scope: !15822)
!15822 = !DILexicalBlockFile(scope: !2408, file: !408, discriminator: 9)
!15823 = !DILocation(line: 3159, column: 314, scope: !15824)
!15824 = !DILexicalBlockFile(scope: !15825, file: !408, discriminator: 10)
!15825 = !DILexicalBlockFile(scope: !2402, file: !408, discriminator: 3)
!15826 = !DILocation(line: 3159, column: 314, scope: !2401)
!15827 = !DILocation(line: 3159, column: 314, scope: !15828)
!15828 = !DILexicalBlockFile(scope: !2401, file: !408, discriminator: 11)
!15829 = !DILocation(line: 3160, column: 9, scope: !2402)
!15830 = !DILocation(line: 3161, column: 5, scope: !2404)
!15831 = !DILocation(line: 3149, column: 9, scope: !15832)
!15832 = !DILexicalBlockFile(scope: !2405, file: !408, discriminator: 1)
!15833 = !DILocation(line: 3164, column: 5, scope: !2363)
!15834 = !DILocation(line: 3164, column: 10, scope: !15835)
!15835 = !DILexicalBlockFile(scope: !2411, file: !408, discriminator: 1)
!15836 = !DILocation(line: 3164, column: 20, scope: !2411)
!15837 = !DILocation(line: 3164, column: 51, scope: !2411)
!15838 = !DILocation(line: 3164, column: 72, scope: !2414)
!15839 = !DILocation(line: 3164, column: 88, scope: !2414)
!15840 = !DILocation(line: 3164, column: 72, scope: !2411)
!15841 = !DILocation(line: 3164, column: 103, scope: !15842)
!15842 = !DILexicalBlockFile(scope: !2414, file: !408, discriminator: 2)
!15843 = !DILocation(line: 3164, column: 108, scope: !15844)
!15844 = !DILexicalBlockFile(scope: !2413, file: !408, discriminator: 4)
!15845 = !DILocation(line: 3164, column: 118, scope: !2413)
!15846 = !DILocation(line: 3164, column: 148, scope: !2413)
!15847 = !DILocation(line: 3164, column: 174, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !2413, file: !408, line: 3164, column: 171)
!15849 = !DILocation(line: 3164, column: 191, scope: !15848)
!15850 = !DILocation(line: 3164, column: 171, scope: !15848)
!15851 = !DILocation(line: 3164, column: 201, scope: !15848)
!15852 = !DILocation(line: 3164, column: 171, scope: !2413)
!15853 = !DILocation(line: 3164, column: 171, scope: !15854)
!15854 = !DILexicalBlockFile(scope: !2413, file: !408, discriminator: 5)
!15855 = !DILocation(line: 3164, column: 232, scope: !15856)
!15856 = !DILexicalBlockFile(scope: !15848, file: !408, discriminator: 6)
!15857 = !DILocation(line: 3164, column: 250, scope: !15848)
!15858 = !DILocation(line: 3164, column: 260, scope: !15848)
!15859 = !DILocation(line: 3164, column: 285, scope: !15848)
!15860 = !DILocation(line: 3164, column: 216, scope: !15848)
!15861 = !DILocation(line: 3164, column: 304, scope: !15862)
!15862 = !DILexicalBlockFile(scope: !2414, file: !408, discriminator: 7)
!15863 = !DILocation(line: 3164, column: 304, scope: !2413)
!15864 = !DILocation(line: 3164, column: 304, scope: !15865)
!15865 = !DILexicalBlockFile(scope: !2413, file: !408, discriminator: 8)
!15866 = !DILocation(line: 3164, column: 304, scope: !15867)
!15867 = !DILexicalBlockFile(scope: !2413, file: !408, discriminator: 9)
!15868 = !DILocation(line: 3164, column: 317, scope: !15869)
!15869 = !DILexicalBlockFile(scope: !15870, file: !408, discriminator: 10)
!15870 = !DILexicalBlockFile(scope: !2363, file: !408, discriminator: 3)
!15871 = !DILocation(line: 3164, column: 317, scope: !2411)
!15872 = !DILocation(line: 3164, column: 317, scope: !15873)
!15873 = !DILexicalBlockFile(scope: !2411, file: !408, discriminator: 11)
!15874 = !DILocation(line: 3165, column: 5, scope: !2363)
!15875 = !DILocation(line: 3165, column: 10, scope: !15876)
!15876 = !DILexicalBlockFile(scope: !2416, file: !408, discriminator: 1)
!15877 = !DILocation(line: 3165, column: 20, scope: !2416)
!15878 = !DILocation(line: 3165, column: 50, scope: !2416)
!15879 = !DILocation(line: 3165, column: 77, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !2416, file: !408, line: 3165, column: 74)
!15881 = !DILocation(line: 3165, column: 94, scope: !15880)
!15882 = !DILocation(line: 3165, column: 74, scope: !15880)
!15883 = !DILocation(line: 3165, column: 104, scope: !15880)
!15884 = !DILocation(line: 3165, column: 74, scope: !2416)
!15885 = !DILocation(line: 3165, column: 74, scope: !15886)
!15886 = !DILexicalBlockFile(scope: !2416, file: !408, discriminator: 2)
!15887 = !DILocation(line: 3165, column: 135, scope: !15888)
!15888 = !DILexicalBlockFile(scope: !15880, file: !408, discriminator: 3)
!15889 = !DILocation(line: 3165, column: 153, scope: !15880)
!15890 = !DILocation(line: 3165, column: 163, scope: !15880)
!15891 = !DILocation(line: 3165, column: 188, scope: !15880)
!15892 = !DILocation(line: 3165, column: 119, scope: !15880)
!15893 = !DILocation(line: 3165, column: 207, scope: !15894)
!15894 = !DILexicalBlockFile(scope: !2363, file: !408, discriminator: 4)
!15895 = !DILocation(line: 3165, column: 207, scope: !2416)
!15896 = !DILocation(line: 3165, column: 207, scope: !15897)
!15897 = !DILexicalBlockFile(scope: !2416, file: !408, discriminator: 5)
!15898 = !DILocation(line: 3166, column: 5, scope: !2363)
!15899 = !DILocation(line: 3166, column: 10, scope: !15900)
!15900 = !DILexicalBlockFile(scope: !2418, file: !408, discriminator: 1)
!15901 = !DILocation(line: 3166, column: 20, scope: !2418)
!15902 = !DILocation(line: 3166, column: 50, scope: !2418)
!15903 = !DILocation(line: 3166, column: 70, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !2418, file: !408, line: 3166, column: 67)
!15905 = !DILocation(line: 3166, column: 87, scope: !15904)
!15906 = !DILocation(line: 3166, column: 67, scope: !15904)
!15907 = !DILocation(line: 3166, column: 97, scope: !15904)
!15908 = !DILocation(line: 3166, column: 67, scope: !2418)
!15909 = !DILocation(line: 3166, column: 67, scope: !15910)
!15910 = !DILexicalBlockFile(scope: !2418, file: !408, discriminator: 2)
!15911 = !DILocation(line: 3166, column: 128, scope: !15912)
!15912 = !DILexicalBlockFile(scope: !15904, file: !408, discriminator: 3)
!15913 = !DILocation(line: 3166, column: 146, scope: !15904)
!15914 = !DILocation(line: 3166, column: 156, scope: !15904)
!15915 = !DILocation(line: 3166, column: 181, scope: !15904)
!15916 = !DILocation(line: 3166, column: 112, scope: !15904)
!15917 = !DILocation(line: 3166, column: 200, scope: !15894)
!15918 = !DILocation(line: 3166, column: 200, scope: !2418)
!15919 = !DILocation(line: 3166, column: 200, scope: !15920)
!15920 = !DILexicalBlockFile(scope: !2418, file: !408, discriminator: 5)
!15921 = !DILocation(line: 3167, column: 5, scope: !2363)
!15922 = !DILocation(line: 3167, column: 10, scope: !15923)
!15923 = !DILexicalBlockFile(scope: !2420, file: !408, discriminator: 1)
!15924 = !DILocation(line: 3167, column: 20, scope: !2420)
!15925 = !DILocation(line: 3167, column: 50, scope: !2420)
!15926 = !DILocation(line: 3167, column: 70, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !2420, file: !408, line: 3167, column: 67)
!15928 = !DILocation(line: 3167, column: 87, scope: !15927)
!15929 = !DILocation(line: 3167, column: 67, scope: !15927)
!15930 = !DILocation(line: 3167, column: 97, scope: !15927)
!15931 = !DILocation(line: 3167, column: 67, scope: !2420)
!15932 = !DILocation(line: 3167, column: 67, scope: !15933)
!15933 = !DILexicalBlockFile(scope: !2420, file: !408, discriminator: 2)
!15934 = !DILocation(line: 3167, column: 128, scope: !15935)
!15935 = !DILexicalBlockFile(scope: !15927, file: !408, discriminator: 3)
!15936 = !DILocation(line: 3167, column: 146, scope: !15927)
!15937 = !DILocation(line: 3167, column: 156, scope: !15927)
!15938 = !DILocation(line: 3167, column: 181, scope: !15927)
!15939 = !DILocation(line: 3167, column: 112, scope: !15927)
!15940 = !DILocation(line: 3167, column: 200, scope: !15894)
!15941 = !DILocation(line: 3167, column: 200, scope: !2420)
!15942 = !DILocation(line: 3167, column: 200, scope: !15943)
!15943 = !DILexicalBlockFile(scope: !2420, file: !408, discriminator: 5)
!15944 = !DILocation(line: 3168, column: 1, scope: !2363)
!15945 = !DILocation(line: 3168, column: 1, scope: !15946)
!15946 = !DILexicalBlockFile(scope: !2363, file: !408, discriminator: 1)
!15947 = !DILocation(line: 2749, column: 32, scope: !2223)
!15948 = !DILocation(line: 2749, column: 50, scope: !2223)
!15949 = !DILocation(line: 2754, column: 5, scope: !2223)
!15950 = !DILocation(line: 2754, column: 16, scope: !2223)
!15951 = !DILocation(line: 2754, column: 43, scope: !2223)
!15952 = !DILocation(line: 2754, column: 36, scope: !2223)
!15953 = !DILocation(line: 2755, column: 5, scope: !2223)
!15954 = !DILocation(line: 2755, column: 15, scope: !2223)
!15955 = !DILocation(line: 2756, column: 5, scope: !2223)
!15956 = !DILocation(line: 2756, column: 15, scope: !2223)
!15957 = !DILocation(line: 2759, column: 37, scope: !2223)
!15958 = !DILocation(line: 2759, column: 45, scope: !2223)
!15959 = !DILocation(line: 2759, column: 11, scope: !2223)
!15960 = !DILocation(line: 2759, column: 9, scope: !2223)
!15961 = !DILocation(line: 2760, column: 10, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !2223, file: !408, line: 2760, column: 9)
!15963 = !DILocation(line: 2760, column: 9, scope: !2223)
!15964 = !DILocation(line: 2761, column: 9, scope: !15962)
!15965 = !DILocation(line: 2763, column: 28, scope: !2223)
!15966 = !DILocation(line: 2763, column: 34, scope: !2223)
!15967 = !DILocation(line: 2763, column: 41, scope: !2223)
!15968 = !DILocation(line: 2763, column: 13, scope: !2223)
!15969 = !DILocation(line: 2763, column: 11, scope: !2223)
!15970 = !DILocation(line: 2765, column: 9, scope: !2234)
!15971 = !DILocation(line: 2765, column: 9, scope: !2223)
!15972 = !DILocation(line: 2766, column: 25, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !2234, file: !408, line: 2765, column: 16)
!15974 = !DILocation(line: 2766, column: 34, scope: !15973)
!15975 = !DILocation(line: 2766, column: 43, scope: !15973)
!15976 = !DILocation(line: 2767, column: 5, scope: !15973)
!15977 = !DILocation(line: 2771, column: 9, scope: !2233)
!15978 = !DILocation(line: 2771, column: 19, scope: !2233)
!15979 = !DILocation(line: 2772, column: 9, scope: !2233)
!15980 = !DILocation(line: 2772, column: 15, scope: !2233)
!15981 = !DILocation(line: 2773, column: 9, scope: !2233)
!15982 = !DILocation(line: 2773, column: 20, scope: !2233)
!15983 = !DILocation(line: 2776, column: 16, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !2233, file: !408, line: 2776, column: 9)
!15985 = !DILocation(line: 2776, column: 14, scope: !15984)
!15986 = !DILocation(line: 2776, column: 21, scope: !15987)
!15987 = !DILexicalBlockFile(scope: !15988, file: !408, discriminator: 2)
!15988 = !DILexicalBlockFile(scope: !15989, file: !408, discriminator: 1)
!15989 = distinct !DILexicalBlock(scope: !15984, file: !408, line: 2776, column: 9)
!15990 = !DILocation(line: 2776, column: 25, scope: !15989)
!15991 = !DILocation(line: 2776, column: 23, scope: !15989)
!15992 = !DILocation(line: 2776, column: 9, scope: !15984)
!15993 = !DILocation(line: 2777, column: 24, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15989, file: !408, line: 2777, column: 17)
!15995 = !DILocation(line: 2777, column: 17, scope: !15994)
!15996 = !DILocation(line: 2777, column: 27, scope: !15994)
!15997 = !DILocation(line: 2777, column: 17, scope: !15989)
!15998 = !DILocation(line: 2778, column: 17, scope: !15994)
!15999 = !DILocation(line: 2777, column: 30, scope: !16000)
!16000 = !DILexicalBlockFile(scope: !15994, file: !408, discriminator: 1)
!16001 = !DILocation(line: 2776, column: 32, scope: !15989)
!16002 = !DILocation(line: 2776, column: 9, scope: !15989)
!16003 = !DILocation(line: 2779, column: 13, scope: !2242)
!16004 = !DILocation(line: 2779, column: 18, scope: !2242)
!16005 = !DILocation(line: 2779, column: 15, scope: !2242)
!16006 = !DILocation(line: 2779, column: 13, scope: !2233)
!16007 = !DILocation(line: 2781, column: 57, scope: !2241)
!16008 = !DILocation(line: 2781, column: 61, scope: !2241)
!16009 = !DILocation(line: 2781, column: 19, scope: !2241)
!16010 = !DILocation(line: 2781, column: 17, scope: !2241)
!16011 = !DILocation(line: 2782, column: 17, scope: !2240)
!16012 = !DILocation(line: 2782, column: 21, scope: !2240)
!16013 = !DILocation(line: 2782, column: 17, scope: !2241)
!16014 = !DILocation(line: 2783, column: 17, scope: !2239)
!16015 = !DILocation(line: 2783, column: 22, scope: !16016)
!16016 = !DILexicalBlockFile(scope: !2238, file: !408, discriminator: 1)
!16017 = !DILocation(line: 2783, column: 32, scope: !2238)
!16018 = !DILocation(line: 2783, column: 62, scope: !2238)
!16019 = !DILocation(line: 2783, column: 76, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !2238, file: !408, line: 2783, column: 73)
!16021 = !DILocation(line: 2783, column: 93, scope: !16020)
!16022 = !DILocation(line: 2783, column: 73, scope: !16020)
!16023 = !DILocation(line: 2783, column: 103, scope: !16020)
!16024 = !DILocation(line: 2783, column: 73, scope: !2238)
!16025 = !DILocation(line: 2783, column: 73, scope: !16026)
!16026 = !DILexicalBlockFile(scope: !2238, file: !408, discriminator: 2)
!16027 = !DILocation(line: 2783, column: 134, scope: !16028)
!16028 = !DILexicalBlockFile(scope: !16020, file: !408, discriminator: 3)
!16029 = !DILocation(line: 2783, column: 152, scope: !16020)
!16030 = !DILocation(line: 2783, column: 162, scope: !16020)
!16031 = !DILocation(line: 2783, column: 187, scope: !16020)
!16032 = !DILocation(line: 2783, column: 118, scope: !16020)
!16033 = !DILocation(line: 2783, column: 206, scope: !16034)
!16034 = !DILexicalBlockFile(scope: !2239, file: !408, discriminator: 4)
!16035 = !DILocation(line: 2783, column: 206, scope: !2238)
!16036 = !DILocation(line: 2783, column: 206, scope: !16037)
!16037 = !DILexicalBlockFile(scope: !2238, file: !408, discriminator: 5)
!16038 = !DILocation(line: 2784, column: 17, scope: !2239)
!16039 = !DILocation(line: 2786, column: 52, scope: !2241)
!16040 = !DILocation(line: 2786, column: 34, scope: !2241)
!16041 = !DILocation(line: 2786, column: 59, scope: !2241)
!16042 = !DILocation(line: 2786, column: 32, scope: !2241)
!16043 = !DILocation(line: 2786, column: 15, scope: !2241)
!16044 = !DILocation(line: 2787, column: 13, scope: !2241)
!16045 = !DILocation(line: 2787, column: 18, scope: !2241)
!16046 = !DILocation(line: 2788, column: 20, scope: !2241)
!16047 = !DILocation(line: 2788, column: 21, scope: !2241)
!16048 = !DILocation(line: 2788, column: 25, scope: !2241)
!16049 = !DILocation(line: 2788, column: 33, scope: !2241)
!16050 = !DILocation(line: 2788, column: 13, scope: !2241)
!16051 = !DILocation(line: 2789, column: 17, scope: !2241)
!16052 = !DILocation(line: 2790, column: 9, scope: !2241)
!16053 = !DILocation(line: 2792, column: 29, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !2242, file: !408, line: 2790, column: 16)
!16055 = !DILocation(line: 2792, column: 36, scope: !16054)
!16056 = !DILocation(line: 2792, column: 45, scope: !16054)
!16057 = !DILocation(line: 2793, column: 19, scope: !16054)
!16058 = !DILocation(line: 2793, column: 17, scope: !16054)
!16059 = !DILocation(line: 2797, column: 48, scope: !2233)
!16060 = !DILocation(line: 2797, column: 30, scope: !2233)
!16061 = !DILocation(line: 2797, column: 55, scope: !2233)
!16062 = !DILocation(line: 2797, column: 28, scope: !2233)
!16063 = !DILocation(line: 2797, column: 11, scope: !2233)
!16064 = !DILocation(line: 2798, column: 38, scope: !2233)
!16065 = !DILocation(line: 2798, column: 41, scope: !2233)
!16066 = !DILocation(line: 2798, column: 17, scope: !2233)
!16067 = !DILocation(line: 2798, column: 15, scope: !2233)
!16068 = !DILocation(line: 2799, column: 9, scope: !2233)
!16069 = !DILocation(line: 2799, column: 14, scope: !16070)
!16070 = !DILexicalBlockFile(scope: !2244, file: !408, discriminator: 1)
!16071 = !DILocation(line: 2799, column: 24, scope: !2244)
!16072 = !DILocation(line: 2799, column: 54, scope: !2244)
!16073 = !DILocation(line: 2799, column: 68, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !2244, file: !408, line: 2799, column: 65)
!16075 = !DILocation(line: 2799, column: 85, scope: !16074)
!16076 = !DILocation(line: 2799, column: 65, scope: !16074)
!16077 = !DILocation(line: 2799, column: 95, scope: !16074)
!16078 = !DILocation(line: 2799, column: 65, scope: !2244)
!16079 = !DILocation(line: 2799, column: 65, scope: !16080)
!16080 = !DILexicalBlockFile(scope: !2244, file: !408, discriminator: 2)
!16081 = !DILocation(line: 2799, column: 126, scope: !16082)
!16082 = !DILexicalBlockFile(scope: !16074, file: !408, discriminator: 3)
!16083 = !DILocation(line: 2799, column: 144, scope: !16074)
!16084 = !DILocation(line: 2799, column: 154, scope: !16074)
!16085 = !DILocation(line: 2799, column: 179, scope: !16074)
!16086 = !DILocation(line: 2799, column: 110, scope: !16074)
!16087 = !DILocation(line: 2799, column: 198, scope: !16088)
!16088 = !DILexicalBlockFile(scope: !2233, file: !408, discriminator: 4)
!16089 = !DILocation(line: 2799, column: 198, scope: !2244)
!16090 = !DILocation(line: 2799, column: 198, scope: !16091)
!16091 = !DILexicalBlockFile(scope: !2244, file: !408, discriminator: 5)
!16092 = !DILocation(line: 2800, column: 14, scope: !2248)
!16093 = !DILocation(line: 2800, column: 13, scope: !2233)
!16094 = !DILocation(line: 2801, column: 13, scope: !2247)
!16095 = !DILocation(line: 2801, column: 18, scope: !16096)
!16096 = !DILexicalBlockFile(scope: !2246, file: !408, discriminator: 1)
!16097 = !DILocation(line: 2801, column: 28, scope: !2246)
!16098 = !DILocation(line: 2801, column: 58, scope: !2246)
!16099 = !DILocation(line: 2801, column: 72, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !2246, file: !408, line: 2801, column: 69)
!16101 = !DILocation(line: 2801, column: 89, scope: !16100)
!16102 = !DILocation(line: 2801, column: 69, scope: !16100)
!16103 = !DILocation(line: 2801, column: 99, scope: !16100)
!16104 = !DILocation(line: 2801, column: 69, scope: !2246)
!16105 = !DILocation(line: 2801, column: 69, scope: !16106)
!16106 = !DILexicalBlockFile(scope: !2246, file: !408, discriminator: 2)
!16107 = !DILocation(line: 2801, column: 130, scope: !16108)
!16108 = !DILexicalBlockFile(scope: !16100, file: !408, discriminator: 3)
!16109 = !DILocation(line: 2801, column: 148, scope: !16100)
!16110 = !DILocation(line: 2801, column: 158, scope: !16100)
!16111 = !DILocation(line: 2801, column: 183, scope: !16100)
!16112 = !DILocation(line: 2801, column: 114, scope: !16100)
!16113 = !DILocation(line: 2801, column: 202, scope: !16114)
!16114 = !DILexicalBlockFile(scope: !2247, file: !408, discriminator: 4)
!16115 = !DILocation(line: 2801, column: 202, scope: !2246)
!16116 = !DILocation(line: 2801, column: 202, scope: !16117)
!16117 = !DILexicalBlockFile(scope: !2246, file: !408, discriminator: 5)
!16118 = !DILocation(line: 2802, column: 13, scope: !2247)
!16119 = !DILocation(line: 2806, column: 28, scope: !2252)
!16120 = !DILocation(line: 2806, column: 34, scope: !2252)
!16121 = !DILocation(line: 2806, column: 41, scope: !2252)
!16122 = !DILocation(line: 2806, column: 46, scope: !2252)
!16123 = !DILocation(line: 2806, column: 13, scope: !2252)
!16124 = !DILocation(line: 2806, column: 53, scope: !2252)
!16125 = !DILocation(line: 2806, column: 13, scope: !2233)
!16126 = !DILocation(line: 2807, column: 13, scope: !2251)
!16127 = !DILocation(line: 2807, column: 18, scope: !16128)
!16128 = !DILexicalBlockFile(scope: !2250, file: !408, discriminator: 1)
!16129 = !DILocation(line: 2807, column: 28, scope: !2250)
!16130 = !DILocation(line: 2807, column: 58, scope: !2250)
!16131 = !DILocation(line: 2807, column: 72, scope: !16132)
!16132 = distinct !DILexicalBlock(scope: !2250, file: !408, line: 2807, column: 69)
!16133 = !DILocation(line: 2807, column: 89, scope: !16132)
!16134 = !DILocation(line: 2807, column: 69, scope: !16132)
!16135 = !DILocation(line: 2807, column: 99, scope: !16132)
!16136 = !DILocation(line: 2807, column: 69, scope: !2250)
!16137 = !DILocation(line: 2807, column: 69, scope: !16138)
!16138 = !DILexicalBlockFile(scope: !2250, file: !408, discriminator: 2)
!16139 = !DILocation(line: 2807, column: 130, scope: !16140)
!16140 = !DILexicalBlockFile(scope: !16132, file: !408, discriminator: 3)
!16141 = !DILocation(line: 2807, column: 148, scope: !16132)
!16142 = !DILocation(line: 2807, column: 158, scope: !16132)
!16143 = !DILocation(line: 2807, column: 183, scope: !16132)
!16144 = !DILocation(line: 2807, column: 114, scope: !16132)
!16145 = !DILocation(line: 2807, column: 202, scope: !16146)
!16146 = !DILexicalBlockFile(scope: !2251, file: !408, discriminator: 4)
!16147 = !DILocation(line: 2807, column: 202, scope: !2250)
!16148 = !DILocation(line: 2807, column: 202, scope: !16149)
!16149 = !DILexicalBlockFile(scope: !2250, file: !408, discriminator: 5)
!16150 = !DILocation(line: 2808, column: 13, scope: !2251)
!16151 = !DILocation(line: 2808, column: 18, scope: !16152)
!16152 = !DILexicalBlockFile(scope: !2254, file: !408, discriminator: 1)
!16153 = !DILocation(line: 2808, column: 28, scope: !2254)
!16154 = !DILocation(line: 2808, column: 58, scope: !2254)
!16155 = !DILocation(line: 2808, column: 74, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !2254, file: !408, line: 2808, column: 71)
!16157 = !DILocation(line: 2808, column: 91, scope: !16156)
!16158 = !DILocation(line: 2808, column: 71, scope: !16156)
!16159 = !DILocation(line: 2808, column: 101, scope: !16156)
!16160 = !DILocation(line: 2808, column: 71, scope: !2254)
!16161 = !DILocation(line: 2808, column: 71, scope: !16162)
!16162 = !DILexicalBlockFile(scope: !2254, file: !408, discriminator: 2)
!16163 = !DILocation(line: 2808, column: 132, scope: !16164)
!16164 = !DILexicalBlockFile(scope: !16156, file: !408, discriminator: 3)
!16165 = !DILocation(line: 2808, column: 150, scope: !16156)
!16166 = !DILocation(line: 2808, column: 160, scope: !16156)
!16167 = !DILocation(line: 2808, column: 185, scope: !16156)
!16168 = !DILocation(line: 2808, column: 116, scope: !16156)
!16169 = !DILocation(line: 2808, column: 204, scope: !16146)
!16170 = !DILocation(line: 2808, column: 204, scope: !2254)
!16171 = !DILocation(line: 2808, column: 204, scope: !16172)
!16172 = !DILexicalBlockFile(scope: !2254, file: !408, discriminator: 5)
!16173 = !DILocation(line: 2809, column: 13, scope: !2251)
!16174 = !DILocation(line: 2811, column: 5, scope: !2234)
!16175 = !DILocation(line: 2811, column: 5, scope: !16176)
!16176 = !DILexicalBlockFile(scope: !2234, file: !408, discriminator: 1)
!16177 = !DILocation(line: 2813, column: 5, scope: !2223)
!16178 = !DILocation(line: 2813, column: 10, scope: !16179)
!16179 = !DILexicalBlockFile(scope: !2256, file: !408, discriminator: 1)
!16180 = !DILocation(line: 2813, column: 20, scope: !2256)
!16181 = !DILocation(line: 2813, column: 50, scope: !2256)
!16182 = !DILocation(line: 2813, column: 64, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !2256, file: !408, line: 2813, column: 61)
!16184 = !DILocation(line: 2813, column: 81, scope: !16183)
!16185 = !DILocation(line: 2813, column: 61, scope: !16183)
!16186 = !DILocation(line: 2813, column: 91, scope: !16183)
!16187 = !DILocation(line: 2813, column: 61, scope: !2256)
!16188 = !DILocation(line: 2813, column: 61, scope: !16189)
!16189 = !DILexicalBlockFile(scope: !2256, file: !408, discriminator: 2)
!16190 = !DILocation(line: 2813, column: 122, scope: !16191)
!16191 = !DILexicalBlockFile(scope: !16183, file: !408, discriminator: 3)
!16192 = !DILocation(line: 2813, column: 140, scope: !16183)
!16193 = !DILocation(line: 2813, column: 150, scope: !16183)
!16194 = !DILocation(line: 2813, column: 175, scope: !16183)
!16195 = !DILocation(line: 2813, column: 106, scope: !16183)
!16196 = !DILocation(line: 2813, column: 194, scope: !16197)
!16197 = !DILexicalBlockFile(scope: !2223, file: !408, discriminator: 4)
!16198 = !DILocation(line: 2813, column: 194, scope: !2256)
!16199 = !DILocation(line: 2813, column: 194, scope: !16200)
!16200 = !DILexicalBlockFile(scope: !2256, file: !408, discriminator: 5)
!16201 = !DILocation(line: 2814, column: 12, scope: !2223)
!16202 = !DILocation(line: 2814, column: 5, scope: !2223)
!16203 = !DILocation(line: 2815, column: 1, scope: !2223)
