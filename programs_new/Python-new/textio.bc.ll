; ModuleID = 'irs-onlybc/textio.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.encodefuncentry = type { i8*, %struct._object* (%struct._object*, %struct._object*)* }
%struct.nldecoder_object = type { %struct._object, %struct._object*, %struct._object*, i8 }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }
%struct.textio = type { %struct._object, i32, i32, i64, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct._object* (%struct._object*, %struct._object*)*, i8, %struct._object*, i64, %struct._object*, i64, %struct._object*, double, %struct._object*, %struct._object*, %struct._object* }
%union._gc_head = type { %struct.anon.0 }
%struct.anon.0 = type { %union._gc_head*, %union._gc_head*, i64 }
%struct._PyIO_State = type { i32, %struct._object*, %struct._object* }
%struct.cookie_type = type { i64, i32, i32, i32, i8 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }

@.str = private unnamed_addr constant [16 x i8] c"_io._TextIOBase\00", align 1
@textiobase_doc = internal global [209 x i8] c"Base class for text I/O.\0A\0AThis class provides a character and line based interface to stream\0AI/O. There is no readinto method because Python's character strings\0Aare immutable. There is no public constructor.\0A\00", align 16
@textiobase_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @textiobase_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @textiobase_detach_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @textiobase_read, i32 1, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @textiobase_read_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @textiobase_readline, i32 1, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @textiobase_readline_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @textiobase_write, i32 1, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @textiobase_write_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@textiobase_getset = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @textiobase_encoding_get, i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @textiobase_encoding_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @textiobase_newlines_get, i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @textiobase_newlines_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @textiobase_errors_get, i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @textiobase_errors_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyIOBase_Type = external global %struct._typeobject, align 8
@PyTextIOBase_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263169, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @textiobase_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @textiobase_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([4 x %struct.PyGetSetDef], [4 x %struct.PyGetSetDef]* @textiobase_getset, i32 0, i32 0), %struct._typeobject* @PyIOBase_Type, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ValueError = external global %struct._object*, align 8
@.str.1 = private unnamed_addr constant [46 x i8] c"IncrementalNewlineDecoder.__init__ not called\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@_PyIO_str_decode = external global %struct._object*, align 8
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.2 = private unnamed_addr constant [30 x i8] c"_io.IncrementalNewlineDecoder\00", align 1
@incrementalnewlinedecoder_doc = internal global [420 x i8] c"Codec used when reading a file in universal newlines mode.  It wraps\0Aanother incremental decoder, translating \5Cr\5Cn and \5Cr into \5Cn.  It also\0Arecords the types of newlines encountered.  When used with\0Atranslate=False, it ensures that the newline sequence is returned in\0Aone piece. When used with decoder=None, it expects unicode strings as\0Adecode input and translates newlines without first invoking an external\0Adecoder.\0A\00", align 16
@incrementalnewlinedecoder_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_decode to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_reset to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@incrementalnewlinedecoder_getset = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.nldecoder_object*, i8*)* @incrementalnewlinedecoder_newlines_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyIncrementalNewlineDecoder_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.nldecoder_object*)* @incrementalnewlinedecoder_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([420 x i8], [420 x i8]* @incrementalnewlinedecoder_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @incrementalnewlinedecoder_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @incrementalnewlinedecoder_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.3 = private unnamed_addr constant [18 x i8] c"_io.TextIOWrapper\00", align 1
@textiowrapper_doc = internal global [1345 x i8] c"Character and line based layer over a BufferedIOBase object, buffer.\0A\0Aencoding gives the name of the encoding that the stream will be\0Adecoded or encoded with. It defaults to locale.getpreferredencoding(False).\0A\0Aerrors determines the strictness of encoding and decoding (see\0Ahelp(codecs.Codec) or the documentation for codecs.register) and\0Adefaults to \22strict\22.\0A\0Anewline controls how line endings are handled. It can be None, '',\0A'\5Cn', '\5Cr', and '\5Cr\5Cn'.  It works as follows:\0A\0A* On input, if newline is None, universal newlines mode is\0A  enabled. Lines in the input can end in '\5Cn', '\5Cr', or '\5Cr\5Cn', and\0A  these are translated into '\5Cn' before being returned to the\0A  caller. If it is '', universal newline mode is enabled, but line\0A  endings are returned to the caller untranslated. If it has any of\0A  the other legal values, input lines are only terminated by the given\0A  string, and the line ending is returned to the caller untranslated.\0A\0A* On output, if newline is None, any '\5Cn' characters written are\0A  translated to the system default line separator, os.linesep. If\0A  newline is '' or '\5Cn', no translation takes place. If newline is any\0A  of the other legal values, any '\5Cn' characters written are translated\0A  to the given string.\0A\0AIf line_buffering is True, a call to flush is implied when a call to\0Awrite contains a newline character.\00", align 16
@textiowrapper_methods = internal global [16 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*)* @textiowrapper_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_write to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_read to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readline to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_flush to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_close to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_fileno to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seekable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_writable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_isatty to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_tell to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_truncate to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@textiowrapper_members = internal global [5 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i32 6, i64 40, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i32 6, i64 32, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i32 0, i32 0), i32 14, i64 88, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i32 0, i32 0), i32 14, i64 96, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@textiowrapper_getset = internal global [6 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_name_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_closed_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_newlines_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_errors_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_chunk_size_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.textio*, %struct._object*, i8*)* @textiowrapper_chunk_size_set to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyTextIOWrapper_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i64 192, i64 0, void (%struct._object*)* bitcast (void (%struct.textio*)* @textiowrapper_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.textio*)* @textiowrapper_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279553, i8* getelementptr inbounds ([1345 x i8], [1345 x i8]* @textiowrapper_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.textio*, i32 (%struct._object*, i8*)*, i8*)* @textiowrapper_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.textio*)* @textiowrapper_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 176, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.textio*)* @textiowrapper_iternext to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([16 x %struct.PyMethodDef], [16 x %struct.PyMethodDef]* @textiowrapper_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([5 x %struct.PyMemberDef], [5 x %struct.PyMemberDef]* @textiowrapper_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([6 x %struct.PyGetSetDef], [6 x %struct.PyGetSetDef]* @textiowrapper_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 184, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.textio*, %struct._object*, %struct._object*)* @textiowrapper_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"detach\00", align 1
@textiobase_detach_doc = internal global [151 x i8] c"Separate the underlying buffer from the TextIOBase and return it.\0A\0AAfter the underlying buffer has been detached, the TextIO is in an\0Aunusable state.\0A\00", align 16
@.str.5 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@textiobase_read_doc = internal global [156 x i8] c"Read at most n characters from stream.\0A\0ARead from underlying buffer until we have n characters or we hit EOF.\0AIf n is negative or omitted, read until EOF.\0A\00", align 16
@.str.6 = private unnamed_addr constant [9 x i8] c"readline\00", align 1
@textiobase_readline_doc = internal global [80 x i8] c"Read until newline or EOF.\0A\0AReturns an empty string if EOF is hit immediately.\0A\00", align 16
@.str.7 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@textiobase_write_doc = internal global [119 x i8] c"Write string to stream.\0AReturns the number of characters written (which is always equal to\0Athe length of the string).\0A\00", align 16
@.str.8 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@textiobase_encoding_doc = internal global [59 x i8] c"Encoding of the text stream.\0A\0ASubclasses should override.\0A\00", align 16
@.str.9 = private unnamed_addr constant [9 x i8] c"newlines\00", align 1
@textiobase_newlines_doc = internal global [123 x i8] c"Line endings translated so far.\0A\0AOnly line endings translated during reading are considered.\0A\0ASubclasses should override.\0A\00", align 16
@.str.10 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@textiobase_errors_doc = internal global [75 x i8] c"The error setting of the decoder or encoder.\0A\0ASubclasses should override.\0A\00", align 16
@PyExc_TypeError = external global %struct._object*, align 8
@.str.11 = private unnamed_addr constant [52 x i8] c"decoder should return a string result, not '%.200s'\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"decode\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"getstate\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"setstate\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"final\00", align 1
@incrementalnewlinedecoder_decode.kwlist = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* null], align 16
@.str.18 = private unnamed_addr constant [30 x i8] c"O|i:IncrementalNewlineDecoder\00", align 1
@_PyIO_str_getstate = external global %struct._object*, align 8
@.str.19 = private unnamed_addr constant [5 x i8] c"(OK)\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"NK\00", align 1
@PyId_setstate = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), %struct._object* null }, align 8
@.str.22 = private unnamed_addr constant [7 x i8] c"((OK))\00", align 1
@_PyIO_str_reset = external global %struct._object*, align 8
@.str.23 = private unnamed_addr constant [2 x i8] c"\0D\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"sss\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"decoder\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@incrementalnewlinedecoder_init.kwlist = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* null], align 16
@.str.30 = private unnamed_addr constant [31 x i8] c"Oi|O:IncrementalNewlineDecoder\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.32 = private unnamed_addr constant [36 x i8] c"underlying buffer has been detached\00", align 1
@.str.33 = private unnamed_addr constant [38 x i8] c"I/O operation on uninitialized object\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"<_io.TextIOWrapper\00", align 1
@PyId_name = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %struct._object* null }, align 8
@PyExc_AttributeError = external global %struct._object*, align 8
@.str.35 = private unnamed_addr constant [9 x i8] c" name=%R\00", align 1
@PyId_mode = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), %struct._object* null }, align 8
@.str.36 = private unnamed_addr constant [9 x i8] c" mode=%R\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"%U encoding=%R>\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@_PyIO_str_readline = external global %struct._object*, align 8
@PyExc_IOError = external global %struct._object*, align 8
@.str.40 = private unnamed_addr constant [60 x i8] c"readline() should have returned an str object, not '%.200s'\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"I/O operation on closed file.\00", align 1
@_PyIO_empty_str = external global %struct._object*, align 8
@_PyIO_str_closed = external global %struct._object*, align 8
@_PyIO_empty_bytes = external global %struct._object*, align 8
@_PyIO_str_write = external global %struct._object*, align 8
@.str.42 = private unnamed_addr constant [13 x i8] c"not readable\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"(OO)\00", align 1
@_PyIO_str_read1 = external global %struct._object*, align 8
@_PyIO_str_read = external global %struct._object*, align 8
@.str.44 = private unnamed_addr constant [66 x i8] c"underlying %s() should have returned a bytes object, not '%.200s'\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"read1\00", align 1
@.str.46 = private unnamed_addr constant [69 x i8] c"decoder getstate() should have returned a bytes object, not '%.200s'\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"NN\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"fileno\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"seekable\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"readable\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"isatty\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"__getstate__\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"tell\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@_PyIO_str_flush = external global %struct._object*, align 8
@.str.59 = private unnamed_addr constant [8 x i8] c"U:write\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"not writable\00", align 1
@PyId_replace = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), %struct._object* null }, align 8
@_PyIO_str_encode = external global %struct._object*, align 8
@PyId_reset = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %struct._object* null }, align 8
@.str.61 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"|O&:read\00", align 1
@PyId_read = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), %struct._object* null }, align 8
@.str.63 = private unnamed_addr constant [12 x i8] c"|n:readline\00", align 1
@PyId_flush = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), %struct._object* null }, align 8
@PyId__dealloc_warn = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i32 0, i32 0), %struct._object* null }, align 8
@.str.64 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@PyId_close = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), %struct._object* null }, align 8
@.str.65 = private unnamed_addr constant [14 x i8] c"_dealloc_warn\00", align 1
@PyId_fileno = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), %struct._object* null }, align 8
@PyId_seekable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), %struct._object* null }, align 8
@PyId_readable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), %struct._object* null }, align 8
@PyId_writable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), %struct._object* null }, align 8
@PyId_isatty = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), %struct._object* null }, align 8
@.str.66 = private unnamed_addr constant [29 x i8] c"cannot serialize '%s' object\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"O|i:seek\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"underlying stream is not seekable\00", align 1
@_PyIO_zero = external global %struct._object*, align 8
@.str.69 = private unnamed_addr constant [36 x i8] c"can't do nonzero cur-relative seeks\00", align 1
@PyId_tell = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), %struct._object* null }, align 8
@.str.70 = private unnamed_addr constant [36 x i8] c"can't do nonzero end-relative seeks\00", align 1
@PyId_seek = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), %struct._object* null }, align 8
@.str.71 = private unnamed_addr constant [3 x i8] c"ii\00", align 1
@.str.72 = private unnamed_addr constant [41 x i8] c"invalid whence (%d, should be 0, 1 or 2)\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"negative seek position %R\00", align 1
@_PyIO_str_seek = external global %struct._object*, align 8
@.str.74 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.75 = private unnamed_addr constant [68 x i8] c"underlying read() should have returned a bytes object, not '%.200s'\00", align 1
@.str.76 = private unnamed_addr constant [3 x i8] c"iN\00", align 1
@PyId_decode = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), %struct._object* null }, align 8
@.str.77 = private unnamed_addr constant [3 x i8] c"Oi\00", align 1
@.str.78 = private unnamed_addr constant [36 x i8] c"can't restore logical file position\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"iy\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"((yi))\00", align 1
@_PyIO_str_setstate = external global %struct._object*, align 8
@.str.81 = private unnamed_addr constant [41 x i8] c"telling position disabled by next() call\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"(iO)\00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c"y#\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"(y#i)\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"yi\00", align 1
@.str.86 = private unnamed_addr constant [40 x i8] c"can't reconstruct logical file position\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"(O)\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"|O:truncate\00", align 1
@_PyIO_str_truncate = external global %struct._object*, align 8
@.str.89 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"line_buffering\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"_finalizing\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"closed\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"_CHUNK_SIZE\00", align 1
@_PyIO_str_newlines = external global %struct._object*, align 8
@.str.94 = private unnamed_addr constant [40 x i8] c"a strictly positive integer is required\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"newline\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"write_through\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"O|zzzii:fileio\00", align 1
@.str.98 = private unnamed_addr constant [26 x i8] c"illegal newline value: %s\00", align 1
@PyId_getpreferredencoding = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i32 0, i32 0), %struct._object* null }, align 8
@PyExc_ImportError = external global %struct._object*, align 8
@.str.99 = private unnamed_addr constant [6 x i8] c"ascii\00", align 1
@.str.100 = private unnamed_addr constant [37 x i8] c"could not determine default encoding\00", align 1
@.str.101 = private unnamed_addr constant [14 x i8] c"codecs.open()\00", align 1
@encodefuncs = internal global [10 x %struct.encodefuncentry] [%struct.encodefuncentry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @ascii_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @latin1_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf8_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf16be_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.106, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf16le_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf16_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf32be_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf32le_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf32_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry zeroinitializer], align 16
@PyBufferedReader_Type = external global %struct._typeobject, align 8
@PyBufferedWriter_Type = external global %struct._typeobject, align 8
@PyBufferedRandom_Type = external global %struct._typeobject, align 8
@PyId_raw = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), %struct._object* null }, align 8
@PyFileIO_Type = external global %struct._typeobject, align 8
@PyId_read1 = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), %struct._object* null }, align 8
@_PyIO_str_tell = external global %struct._object*, align 8
@.str.102 = private unnamed_addr constant [21 x i8] c"getpreferredencoding\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"iso8859-1\00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"utf-8\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"utf-16-be\00", align 1
@.str.106 = private unnamed_addr constant [10 x i8] c"utf-16-le\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"utf-16\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"utf-32-be\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"utf-32-le\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"utf-32\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"raw\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %myself, %struct._object* %input, i32 %final) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %input.addr = alloca %struct._object*, align 8
  %final.addr = alloca i32, align 4
  %output = alloca %struct._object*, align 8
  %output_len = alloca i64, align 8
  %self = alloca %struct.nldecoder_object*, align 8
  %cleanup.dest.slot = alloca i32
  %kind = alloca i32, align 4
  %modified = alloca %struct._object*, align 8
  %out = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %modified268 = alloca %struct._object*, align 8
  %_py_decref_tmp276 = alloca %struct._object*, align 8
  %in_str = alloca i8*, align 8
  %len = alloca i64, align 8
  %seennl = alloca i32, align 4
  %only_lf = alloca i32, align 4
  %kind301 = alloca i32, align 4
  %i = alloca i64, align 8
  %c = alloca i32, align 4
  %i421 = alloca i64, align 8
  %c427 = alloca i32, align 4
  %translated = alloca i8*, align 8
  %kind519 = alloca i32, align 4
  %in_str524 = alloca i8*, align 8
  %in = alloca i64, align 8
  %out547 = alloca i64, align 8
  %c557 = alloca i32, align 4
  %_py_decref_tmp684 = alloca %struct._object*, align 8
  %_py_decref_tmp727 = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !461, metadata !1880), !dbg !1881
  store %struct._object* %input, %struct._object** %input.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %input.addr, metadata !462, metadata !1880), !dbg !1882
  store i32 %final, i32* %final.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %final.addr, metadata !463, metadata !1880), !dbg !1885
  %0 = bitcast %struct._object** %output to i8*, !dbg !1886
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !1886
  call void @llvm.dbg.declare(metadata %struct._object** %output, metadata !464, metadata !1880), !dbg !1887
  %1 = bitcast i64* %output_len to i8*, !dbg !1888
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !1888
  call void @llvm.dbg.declare(metadata i64* %output_len, metadata !465, metadata !1880), !dbg !1889
  %2 = bitcast %struct.nldecoder_object** %self to i8*, !dbg !1890
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !1890
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self, metadata !466, metadata !1880), !dbg !1891
  %3 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !1892, !tbaa !1876
  %4 = bitcast %struct._object* %3 to %struct.nldecoder_object*, !dbg !1893
  store %struct.nldecoder_object* %4, %struct.nldecoder_object** %self, align 8, !dbg !1891, !tbaa !1876
  %5 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1894, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %5, i32 0, i32 1, !dbg !1896
  %6 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !1896, !tbaa !1897
  %cmp = icmp eq %struct._object* %6, null, !dbg !1901
  br i1 %cmp, label %if.then, label %if.end, !dbg !1902

if.then:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1903, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0)), !dbg !1905
  store %struct._object* null, %struct._object** %retval, !dbg !1906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !1906

if.end:                                           ; preds = %entry
  %8 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1907, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %8, i32 0, i32 1, !dbg !1909
  %9 = load %struct._object*, %struct._object** %decoder1, align 8, !dbg !1909, !tbaa !1897
  %cmp2 = icmp ne %struct._object* %9, @_Py_NoneStruct, !dbg !1910
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !1911

if.then.3:                                        ; preds = %if.end
  %10 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1912, !tbaa !1876
  %decoder4 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %10, i32 0, i32 1, !dbg !1914
  %11 = load %struct._object*, %struct._object** %decoder4, align 8, !dbg !1914, !tbaa !1897
  %12 = load %struct._object*, %struct._object** @_PyIO_str_decode, align 8, !dbg !1915, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %input.addr, align 8, !dbg !1916, !tbaa !1876
  %14 = load i32, i32* %final.addr, align 4, !dbg !1917, !tbaa !1883
  %tobool = icmp ne i32 %14, 0, !dbg !1917
  %cond = select i1 %tobool, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !1917
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %11, %struct._object* %12, %struct._object* %13, %struct._object* %cond, i8* null), !dbg !1918
  store %struct._object* %call, %struct._object** %output, align 8, !dbg !1919, !tbaa !1876
  br label %if.end.5, !dbg !1920

if.else:                                          ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %input.addr, align 8, !dbg !1921, !tbaa !1876
  store %struct._object* %15, %struct._object** %output, align 8, !dbg !1923, !tbaa !1876
  %16 = load %struct._object*, %struct._object** %output, align 8, !dbg !1924, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !1925
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !1926, !tbaa !1927
  %inc = add i64 %17, 1, !dbg !1926
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !1926, !tbaa !1927
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.3
  %18 = load %struct._object*, %struct._object** %output, align 8, !dbg !1928, !tbaa !1876
  %call6 = call i32 @check_decoded(%struct._object* %18), !dbg !1930
  %cmp7 = icmp slt i32 %call6, 0, !dbg !1931
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !1932

if.then.8:                                        ; preds = %if.end.5
  store %struct._object* null, %struct._object** %retval, !dbg !1933
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !1933

if.end.9:                                         ; preds = %if.end.5
  %19 = load %struct._object*, %struct._object** %output, align 8, !dbg !1934, !tbaa !1876
  %20 = bitcast %struct._object* %19 to %struct.PyASCIIObject*, !dbg !1935
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %20, i32 0, i32 1, !dbg !1936
  %21 = load i64, i64* %length, align 8, !dbg !1936, !tbaa !1937
  store i64 %21, i64* %output_len, align 8, !dbg !1940, !tbaa !1941
  %22 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1942, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %22, i32 0, i32 3, !dbg !1943
  %bf.load = load i8, i8* %pendingcr, align 8, !dbg !1943
  %bf.shl = shl i8 %bf.load, 7, !dbg !1943
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !1943
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !1943
  %tobool10 = icmp ne i32 %bf.cast, 0, !dbg !1942
  br i1 %tobool10, label %land.lhs.true, label %if.end.166, !dbg !1944

land.lhs.true:                                    ; preds = %if.end.9
  %23 = load i32, i32* %final.addr, align 4, !dbg !1945, !tbaa !1883
  %tobool11 = icmp ne i32 %23, 0, !dbg !1945
  br i1 %tobool11, label %if.then.13, label %lor.lhs.false, !dbg !1947

lor.lhs.false:                                    ; preds = %land.lhs.true
  %24 = load i64, i64* %output_len, align 8, !dbg !1948, !tbaa !1941
  %cmp12 = icmp sgt i64 %24, 0, !dbg !1950
  br i1 %cmp12, label %if.then.13, label %if.end.166, !dbg !1951

if.then.13:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %25 = bitcast i32* %kind to i8*, !dbg !1952
  call void @llvm.lifetime.start(i64 4, i8* %25) #2, !dbg !1952
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !467, metadata !1880), !dbg !1953
  %26 = bitcast %struct._object** %modified to i8*, !dbg !1954
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !1954
  call void @llvm.dbg.declare(metadata %struct._object** %modified, metadata !470, metadata !1880), !dbg !1955
  %27 = bitcast i8** %out to i8*, !dbg !1956
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !1956
  call void @llvm.dbg.declare(metadata i8** %out, metadata !471, metadata !1880), !dbg !1957
  %28 = load i64, i64* %output_len, align 8, !dbg !1958, !tbaa !1941
  %add = add i64 %28, 1, !dbg !1959
  %29 = load %struct._object*, %struct._object** %output, align 8, !dbg !1960, !tbaa !1876
  %30 = bitcast %struct._object* %29 to %struct.PyASCIIObject*, !dbg !1961
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %30, i32 0, i32 3, !dbg !1962
  %31 = bitcast %struct.anon* %state to i32*, !dbg !1963
  %bf.load14 = load i32, i32* %31, align 4, !dbg !1963
  %bf.lshr = lshr i32 %bf.load14, 6, !dbg !1963
  %bf.clear = and i32 %bf.lshr, 1, !dbg !1963
  %tobool15 = icmp ne i32 %bf.clear, 0, !dbg !1964
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !1964

cond.true:                                        ; preds = %if.then.13
  br label %cond.end.30, !dbg !1965

cond.false:                                       ; preds = %if.then.13
  %32 = load %struct._object*, %struct._object** %output, align 8, !dbg !1967, !tbaa !1876
  %33 = bitcast %struct._object* %32 to %struct.PyASCIIObject*, !dbg !1969
  %state16 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %33, i32 0, i32 3, !dbg !1970
  %34 = bitcast %struct.anon* %state16 to i32*, !dbg !1971
  %bf.load17 = load i32, i32* %34, align 4, !dbg !1971
  %bf.lshr18 = lshr i32 %bf.load17, 2, !dbg !1971
  %bf.clear19 = and i32 %bf.lshr18, 7, !dbg !1971
  %cmp20 = icmp eq i32 %bf.clear19, 1, !dbg !1972
  br i1 %cmp20, label %cond.true.21, label %cond.false.22, !dbg !1973

cond.true.21:                                     ; preds = %cond.false
  br label %cond.end, !dbg !1974

cond.false.22:                                    ; preds = %cond.false
  %35 = load %struct._object*, %struct._object** %output, align 8, !dbg !1976, !tbaa !1876
  %36 = bitcast %struct._object* %35 to %struct.PyASCIIObject*, !dbg !1978
  %state23 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %36, i32 0, i32 3, !dbg !1979
  %37 = bitcast %struct.anon* %state23 to i32*, !dbg !1980
  %bf.load24 = load i32, i32* %37, align 4, !dbg !1980
  %bf.lshr25 = lshr i32 %bf.load24, 2, !dbg !1980
  %bf.clear26 = and i32 %bf.lshr25, 7, !dbg !1980
  %cmp27 = icmp eq i32 %bf.clear26, 2, !dbg !1981
  %cond28 = select i1 %cmp27, i32 65535, i32 1114111, !dbg !1982
  br label %cond.end, !dbg !1973

cond.end:                                         ; preds = %cond.false.22, %cond.true.21
  %cond29 = phi i32 [ 255, %cond.true.21 ], [ %cond28, %cond.false.22 ], !dbg !1973
  br label %cond.end.30, !dbg !1983

cond.end.30:                                      ; preds = %cond.end, %cond.true
  %cond31 = phi i32 [ 127, %cond.true ], [ %cond29, %cond.end ], !dbg !1964
  %call32 = call %struct._object* @PyUnicode_New(i64 %add, i32 %cond31), !dbg !1986
  store %struct._object* %call32, %struct._object** %modified, align 8, !dbg !1987, !tbaa !1876
  %38 = load %struct._object*, %struct._object** %modified, align 8, !dbg !1988, !tbaa !1876
  %cmp33 = icmp eq %struct._object* %38, null, !dbg !1990
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !1991

if.then.34:                                       ; preds = %cond.end.30
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1992

if.end.35:                                        ; preds = %cond.end.30
  %39 = load %struct._object*, %struct._object** %modified, align 8, !dbg !1993, !tbaa !1876
  %40 = bitcast %struct._object* %39 to %struct.PyASCIIObject*, !dbg !1994
  %state36 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %40, i32 0, i32 3, !dbg !1995
  %41 = bitcast %struct.anon* %state36 to i32*, !dbg !1996
  %bf.load37 = load i32, i32* %41, align 4, !dbg !1996
  %bf.lshr38 = lshr i32 %bf.load37, 2, !dbg !1996
  %bf.clear39 = and i32 %bf.lshr38, 7, !dbg !1996
  store i32 %bf.clear39, i32* %kind, align 4, !dbg !1997, !tbaa !1883
  %42 = load %struct._object*, %struct._object** %modified, align 8, !dbg !1998, !tbaa !1876
  %43 = bitcast %struct._object* %42 to %struct.PyASCIIObject*, !dbg !1999
  %state40 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %43, i32 0, i32 3, !dbg !2000
  %44 = bitcast %struct.anon* %state40 to i32*, !dbg !2001
  %bf.load41 = load i32, i32* %44, align 4, !dbg !2001
  %bf.lshr42 = lshr i32 %bf.load41, 5, !dbg !2001
  %bf.clear43 = and i32 %bf.lshr42, 1, !dbg !2001
  %tobool44 = icmp ne i32 %bf.clear43, 0, !dbg !2002
  br i1 %tobool44, label %cond.true.45, label %cond.false.56, !dbg !2002

cond.true.45:                                     ; preds = %if.end.35
  %45 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2003, !tbaa !1876
  %46 = bitcast %struct._object* %45 to %struct.PyASCIIObject*, !dbg !2004
  %state46 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %46, i32 0, i32 3, !dbg !2005
  %47 = bitcast %struct.anon* %state46 to i32*, !dbg !2006
  %bf.load47 = load i32, i32* %47, align 4, !dbg !2006
  %bf.lshr48 = lshr i32 %bf.load47, 6, !dbg !2006
  %bf.clear49 = and i32 %bf.lshr48, 1, !dbg !2006
  %tobool50 = icmp ne i32 %bf.clear49, 0, !dbg !2007
  br i1 %tobool50, label %cond.true.51, label %cond.false.52, !dbg !2007

cond.true.51:                                     ; preds = %cond.true.45
  %48 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2008, !tbaa !1876
  %49 = bitcast %struct._object* %48 to %struct.PyASCIIObject*, !dbg !2009
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %49, i64 1, !dbg !2010
  %50 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !2011
  br label %cond.end.54, !dbg !2007

cond.false.52:                                    ; preds = %cond.true.45
  %51 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2012, !tbaa !1876
  %52 = bitcast %struct._object* %51 to %struct.PyCompactUnicodeObject*, !dbg !2013
  %add.ptr53 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %52, i64 1, !dbg !2014
  %53 = bitcast %struct.PyCompactUnicodeObject* %add.ptr53 to i8*, !dbg !2015
  br label %cond.end.54, !dbg !2007

cond.end.54:                                      ; preds = %cond.false.52, %cond.true.51
  %cond55 = phi i8* [ %50, %cond.true.51 ], [ %53, %cond.false.52 ], !dbg !2007
  br label %cond.end.57, !dbg !2016

cond.false.56:                                    ; preds = %if.end.35
  %54 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2017, !tbaa !1876
  %55 = bitcast %struct._object* %54 to %struct.PyUnicodeObject*, !dbg !2018
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %55, i32 0, i32 1, !dbg !2019
  %any = bitcast %union.anon* %data to i8**, !dbg !2020
  %56 = load i8*, i8** %any, align 8, !dbg !2020, !tbaa !1876
  br label %cond.end.57, !dbg !2002

cond.end.57:                                      ; preds = %cond.false.56, %cond.end.54
  %cond58 = phi i8* [ %cond55, %cond.end.54 ], [ %56, %cond.false.56 ], !dbg !2002
  store i8* %cond58, i8** %out, align 8, !dbg !2021, !tbaa !1876
  br label %do.body, !dbg !2024

do.body:                                          ; preds = %cond.end.57
  %57 = load i32, i32* %kind, align 4, !dbg !2025, !tbaa !1883
  switch i32 %57, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.81
  ], !dbg !2028

sw.bb:                                            ; preds = %do.body
  %58 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2029, !tbaa !1876
  %59 = bitcast %struct._object* %58 to %struct.PyASCIIObject*, !dbg !2033
  %state59 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %59, i32 0, i32 3, !dbg !2034
  %60 = bitcast %struct.anon* %state59 to i32*, !dbg !2035
  %bf.load60 = load i32, i32* %60, align 4, !dbg !2035
  %bf.lshr61 = lshr i32 %bf.load60, 5, !dbg !2035
  %bf.clear62 = and i32 %bf.lshr61, 1, !dbg !2035
  %tobool63 = icmp ne i32 %bf.clear62, 0, !dbg !2036
  br i1 %tobool63, label %cond.true.64, label %cond.false.76, !dbg !2036

cond.true.64:                                     ; preds = %sw.bb
  %61 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2037, !tbaa !1876
  %62 = bitcast %struct._object* %61 to %struct.PyASCIIObject*, !dbg !2039
  %state65 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %62, i32 0, i32 3, !dbg !2040
  %63 = bitcast %struct.anon* %state65 to i32*, !dbg !2041
  %bf.load66 = load i32, i32* %63, align 4, !dbg !2041
  %bf.lshr67 = lshr i32 %bf.load66, 6, !dbg !2041
  %bf.clear68 = and i32 %bf.lshr67, 1, !dbg !2041
  %tobool69 = icmp ne i32 %bf.clear68, 0, !dbg !2042
  br i1 %tobool69, label %cond.true.70, label %cond.false.72, !dbg !2042

cond.true.70:                                     ; preds = %cond.true.64
  %64 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2043, !tbaa !1876
  %65 = bitcast %struct._object* %64 to %struct.PyASCIIObject*, !dbg !2045
  %add.ptr71 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %65, i64 1, !dbg !2046
  %66 = bitcast %struct.PyASCIIObject* %add.ptr71 to i8*, !dbg !2047
  br label %cond.end.74, !dbg !2042

cond.false.72:                                    ; preds = %cond.true.64
  %67 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2048, !tbaa !1876
  %68 = bitcast %struct._object* %67 to %struct.PyCompactUnicodeObject*, !dbg !2050
  %add.ptr73 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %68, i64 1, !dbg !2051
  %69 = bitcast %struct.PyCompactUnicodeObject* %add.ptr73 to i8*, !dbg !2052
  br label %cond.end.74, !dbg !2042

cond.end.74:                                      ; preds = %cond.false.72, %cond.true.70
  %cond75 = phi i8* [ %66, %cond.true.70 ], [ %69, %cond.false.72 ], !dbg !2042
  br label %cond.end.79, !dbg !2053

cond.false.76:                                    ; preds = %sw.bb
  %70 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2056, !tbaa !1876
  %71 = bitcast %struct._object* %70 to %struct.PyUnicodeObject*, !dbg !2058
  %data77 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %71, i32 0, i32 1, !dbg !2059
  %any78 = bitcast %union.anon* %data77 to i8**, !dbg !2060
  %72 = load i8*, i8** %any78, align 8, !dbg !2060, !tbaa !1876
  br label %cond.end.79, !dbg !2036

cond.end.79:                                      ; preds = %cond.false.76, %cond.end.74
  %cond80 = phi i8* [ %cond75, %cond.end.74 ], [ %72, %cond.false.76 ], !dbg !2036
  %arrayidx = getelementptr i8, i8* %cond80, i64 0, !dbg !2061
  store i8 13, i8* %arrayidx, align 1, !dbg !2064, !tbaa !2065
  br label %sw.epilog, !dbg !2066

sw.bb.81:                                         ; preds = %do.body
  %73 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2067, !tbaa !1876
  %74 = bitcast %struct._object* %73 to %struct.PyASCIIObject*, !dbg !2070
  %state82 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %74, i32 0, i32 3, !dbg !2071
  %75 = bitcast %struct.anon* %state82 to i32*, !dbg !2072
  %bf.load83 = load i32, i32* %75, align 4, !dbg !2072
  %bf.lshr84 = lshr i32 %bf.load83, 5, !dbg !2072
  %bf.clear85 = and i32 %bf.lshr84, 1, !dbg !2072
  %tobool86 = icmp ne i32 %bf.clear85, 0, !dbg !2073
  br i1 %tobool86, label %cond.true.87, label %cond.false.99, !dbg !2073

cond.true.87:                                     ; preds = %sw.bb.81
  %76 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2074, !tbaa !1876
  %77 = bitcast %struct._object* %76 to %struct.PyASCIIObject*, !dbg !2076
  %state88 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %77, i32 0, i32 3, !dbg !2077
  %78 = bitcast %struct.anon* %state88 to i32*, !dbg !2078
  %bf.load89 = load i32, i32* %78, align 4, !dbg !2078
  %bf.lshr90 = lshr i32 %bf.load89, 6, !dbg !2078
  %bf.clear91 = and i32 %bf.lshr90, 1, !dbg !2078
  %tobool92 = icmp ne i32 %bf.clear91, 0, !dbg !2079
  br i1 %tobool92, label %cond.true.93, label %cond.false.95, !dbg !2079

cond.true.93:                                     ; preds = %cond.true.87
  %79 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2080, !tbaa !1876
  %80 = bitcast %struct._object* %79 to %struct.PyASCIIObject*, !dbg !2082
  %add.ptr94 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %80, i64 1, !dbg !2083
  %81 = bitcast %struct.PyASCIIObject* %add.ptr94 to i8*, !dbg !2084
  br label %cond.end.97, !dbg !2079

cond.false.95:                                    ; preds = %cond.true.87
  %82 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2085, !tbaa !1876
  %83 = bitcast %struct._object* %82 to %struct.PyCompactUnicodeObject*, !dbg !2087
  %add.ptr96 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %83, i64 1, !dbg !2088
  %84 = bitcast %struct.PyCompactUnicodeObject* %add.ptr96 to i8*, !dbg !2089
  br label %cond.end.97, !dbg !2079

cond.end.97:                                      ; preds = %cond.false.95, %cond.true.93
  %cond98 = phi i8* [ %81, %cond.true.93 ], [ %84, %cond.false.95 ], !dbg !2079
  br label %cond.end.102, !dbg !2090

cond.false.99:                                    ; preds = %sw.bb.81
  %85 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2093, !tbaa !1876
  %86 = bitcast %struct._object* %85 to %struct.PyUnicodeObject*, !dbg !2095
  %data100 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %86, i32 0, i32 1, !dbg !2096
  %any101 = bitcast %union.anon* %data100 to i8**, !dbg !2097
  %87 = load i8*, i8** %any101, align 8, !dbg !2097, !tbaa !1876
  br label %cond.end.102, !dbg !2073

cond.end.102:                                     ; preds = %cond.false.99, %cond.end.97
  %cond103 = phi i8* [ %cond98, %cond.end.97 ], [ %87, %cond.false.99 ], !dbg !2073
  %88 = bitcast i8* %cond103 to i16*, !dbg !2098
  %arrayidx104 = getelementptr i16, i16* %88, i64 0, !dbg !2101
  store i16 13, i16* %arrayidx104, align 2, !dbg !2102, !tbaa !2103
  br label %sw.epilog, !dbg !2105

sw.default:                                       ; preds = %do.body
  %89 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2106, !tbaa !1876
  %90 = bitcast %struct._object* %89 to %struct.PyASCIIObject*, !dbg !2109
  %state105 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %90, i32 0, i32 3, !dbg !2110
  %91 = bitcast %struct.anon* %state105 to i32*, !dbg !2111
  %bf.load106 = load i32, i32* %91, align 4, !dbg !2111
  %bf.lshr107 = lshr i32 %bf.load106, 5, !dbg !2111
  %bf.clear108 = and i32 %bf.lshr107, 1, !dbg !2111
  %tobool109 = icmp ne i32 %bf.clear108, 0, !dbg !2112
  br i1 %tobool109, label %cond.true.110, label %cond.false.122, !dbg !2112

cond.true.110:                                    ; preds = %sw.default
  %92 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2113, !tbaa !1876
  %93 = bitcast %struct._object* %92 to %struct.PyASCIIObject*, !dbg !2115
  %state111 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %93, i32 0, i32 3, !dbg !2116
  %94 = bitcast %struct.anon* %state111 to i32*, !dbg !2117
  %bf.load112 = load i32, i32* %94, align 4, !dbg !2117
  %bf.lshr113 = lshr i32 %bf.load112, 6, !dbg !2117
  %bf.clear114 = and i32 %bf.lshr113, 1, !dbg !2117
  %tobool115 = icmp ne i32 %bf.clear114, 0, !dbg !2118
  br i1 %tobool115, label %cond.true.116, label %cond.false.118, !dbg !2118

cond.true.116:                                    ; preds = %cond.true.110
  %95 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2119, !tbaa !1876
  %96 = bitcast %struct._object* %95 to %struct.PyASCIIObject*, !dbg !2121
  %add.ptr117 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %96, i64 1, !dbg !2122
  %97 = bitcast %struct.PyASCIIObject* %add.ptr117 to i8*, !dbg !2123
  br label %cond.end.120, !dbg !2118

cond.false.118:                                   ; preds = %cond.true.110
  %98 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2124, !tbaa !1876
  %99 = bitcast %struct._object* %98 to %struct.PyCompactUnicodeObject*, !dbg !2126
  %add.ptr119 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %99, i64 1, !dbg !2127
  %100 = bitcast %struct.PyCompactUnicodeObject* %add.ptr119 to i8*, !dbg !2128
  br label %cond.end.120, !dbg !2118

cond.end.120:                                     ; preds = %cond.false.118, %cond.true.116
  %cond121 = phi i8* [ %97, %cond.true.116 ], [ %100, %cond.false.118 ], !dbg !2118
  br label %cond.end.125, !dbg !2129

cond.false.122:                                   ; preds = %sw.default
  %101 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2132, !tbaa !1876
  %102 = bitcast %struct._object* %101 to %struct.PyUnicodeObject*, !dbg !2134
  %data123 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %102, i32 0, i32 1, !dbg !2135
  %any124 = bitcast %union.anon* %data123 to i8**, !dbg !2136
  %103 = load i8*, i8** %any124, align 8, !dbg !2136, !tbaa !1876
  br label %cond.end.125, !dbg !2112

cond.end.125:                                     ; preds = %cond.false.122, %cond.end.120
  %cond126 = phi i8* [ %cond121, %cond.end.120 ], [ %103, %cond.false.122 ], !dbg !2112
  %104 = bitcast i8* %cond126 to i32*, !dbg !2137
  %arrayidx127 = getelementptr i32, i32* %104, i64 0, !dbg !2140
  store i32 13, i32* %arrayidx127, align 4, !dbg !2141, !tbaa !1883
  br label %sw.epilog, !dbg !2142

sw.epilog:                                        ; preds = %cond.end.125, %cond.end.102, %cond.end.79
  br label %do.cond, !dbg !2143

do.cond:                                          ; preds = %sw.epilog
  br label %do.end, !dbg !2147

do.end:                                           ; preds = %do.cond
  %105 = load i8*, i8** %out, align 8, !dbg !2149, !tbaa !1876
  %106 = load i32, i32* %kind, align 4, !dbg !2150, !tbaa !1883
  %idx.ext = sext i32 %106 to i64, !dbg !2151
  %add.ptr128 = getelementptr i8, i8* %105, i64 %idx.ext, !dbg !2151
  %107 = load %struct._object*, %struct._object** %output, align 8, !dbg !2152, !tbaa !1876
  %108 = bitcast %struct._object* %107 to %struct.PyASCIIObject*, !dbg !2153
  %state129 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %108, i32 0, i32 3, !dbg !2154
  %109 = bitcast %struct.anon* %state129 to i32*, !dbg !2155
  %bf.load130 = load i32, i32* %109, align 4, !dbg !2155
  %bf.lshr131 = lshr i32 %bf.load130, 5, !dbg !2155
  %bf.clear132 = and i32 %bf.lshr131, 1, !dbg !2155
  %tobool133 = icmp ne i32 %bf.clear132, 0, !dbg !2156
  br i1 %tobool133, label %cond.true.134, label %cond.false.146, !dbg !2156

cond.true.134:                                    ; preds = %do.end
  %110 = load %struct._object*, %struct._object** %output, align 8, !dbg !2157, !tbaa !1876
  %111 = bitcast %struct._object* %110 to %struct.PyASCIIObject*, !dbg !2158
  %state135 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %111, i32 0, i32 3, !dbg !2159
  %112 = bitcast %struct.anon* %state135 to i32*, !dbg !2160
  %bf.load136 = load i32, i32* %112, align 4, !dbg !2160
  %bf.lshr137 = lshr i32 %bf.load136, 6, !dbg !2160
  %bf.clear138 = and i32 %bf.lshr137, 1, !dbg !2160
  %tobool139 = icmp ne i32 %bf.clear138, 0, !dbg !2161
  br i1 %tobool139, label %cond.true.140, label %cond.false.142, !dbg !2161

cond.true.140:                                    ; preds = %cond.true.134
  %113 = load %struct._object*, %struct._object** %output, align 8, !dbg !2162, !tbaa !1876
  %114 = bitcast %struct._object* %113 to %struct.PyASCIIObject*, !dbg !2163
  %add.ptr141 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %114, i64 1, !dbg !2164
  %115 = bitcast %struct.PyASCIIObject* %add.ptr141 to i8*, !dbg !2165
  br label %cond.end.144, !dbg !2161

cond.false.142:                                   ; preds = %cond.true.134
  %116 = load %struct._object*, %struct._object** %output, align 8, !dbg !2166, !tbaa !1876
  %117 = bitcast %struct._object* %116 to %struct.PyCompactUnicodeObject*, !dbg !2167
  %add.ptr143 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %117, i64 1, !dbg !2168
  %118 = bitcast %struct.PyCompactUnicodeObject* %add.ptr143 to i8*, !dbg !2169
  br label %cond.end.144, !dbg !2161

cond.end.144:                                     ; preds = %cond.false.142, %cond.true.140
  %cond145 = phi i8* [ %115, %cond.true.140 ], [ %118, %cond.false.142 ], !dbg !2161
  br label %cond.end.149, !dbg !2170

cond.false.146:                                   ; preds = %do.end
  %119 = load %struct._object*, %struct._object** %output, align 8, !dbg !2171, !tbaa !1876
  %120 = bitcast %struct._object* %119 to %struct.PyUnicodeObject*, !dbg !2172
  %data147 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %120, i32 0, i32 1, !dbg !2173
  %any148 = bitcast %union.anon* %data147 to i8**, !dbg !2174
  %121 = load i8*, i8** %any148, align 8, !dbg !2174, !tbaa !1876
  br label %cond.end.149, !dbg !2156

cond.end.149:                                     ; preds = %cond.false.146, %cond.end.144
  %cond150 = phi i8* [ %cond145, %cond.end.144 ], [ %121, %cond.false.146 ], !dbg !2156
  %122 = load i32, i32* %kind, align 4, !dbg !2175, !tbaa !1883
  %conv = sext i32 %122 to i64, !dbg !2175
  %123 = load i64, i64* %output_len, align 8, !dbg !2176, !tbaa !1941
  %mul = mul i64 %conv, %123, !dbg !2177
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr128, i8* %cond150, i64 %mul, i32 1, i1 false), !dbg !2178
  br label %do.body.151, !dbg !2179

do.body.151:                                      ; preds = %cond.end.149
  %124 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2180
  call void @llvm.lifetime.start(i64 8, i8* %124) #2, !dbg !2180
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !472, metadata !1880), !dbg !2182
  %125 = load %struct._object*, %struct._object** %output, align 8, !dbg !2183, !tbaa !1876
  store %struct._object* %125, %struct._object** %_py_decref_tmp, align 8, !dbg !2182, !tbaa !1876
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2184, !tbaa !1876
  %ob_refcnt152 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !2186
  %127 = load i64, i64* %ob_refcnt152, align 8, !dbg !2187, !tbaa !1927
  %dec = add i64 %127, -1, !dbg !2187
  store i64 %dec, i64* %ob_refcnt152, align 8, !dbg !2187, !tbaa !1927
  %cmp153 = icmp ne i64 %dec, 0, !dbg !2188
  br i1 %cmp153, label %if.then.155, label %if.else.156, !dbg !2189

if.then.155:                                      ; preds = %do.body.151
  br label %if.end.157, !dbg !2190

if.else.156:                                      ; preds = %do.body.151
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2192, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !2194
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2194, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !2196
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2196, !tbaa !2197
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2200, !tbaa !1876
  call void %130(%struct._object* %131), !dbg !2201
  br label %if.end.157

if.end.157:                                       ; preds = %if.else.156, %if.then.155
  %132 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2202
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !2202
  br label %do.cond.158, !dbg !2203

do.cond.158:                                      ; preds = %if.end.157
  br label %do.end.159, !dbg !2204

do.end.159:                                       ; preds = %do.cond.158
  %133 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2206, !tbaa !1876
  store %struct._object* %133, %struct._object** %output, align 8, !dbg !2207, !tbaa !1876
  %134 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2208, !tbaa !1876
  %pendingcr160 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %134, i32 0, i32 3, !dbg !2209
  %bf.load161 = load i8, i8* %pendingcr160, align 8, !dbg !2210
  %bf.clear162 = and i8 %bf.load161, -2, !dbg !2210
  store i8 %bf.clear162, i8* %pendingcr160, align 8, !dbg !2210
  %135 = load i64, i64* %output_len, align 8, !dbg !2211, !tbaa !1941
  %inc163 = add i64 %135, 1, !dbg !2211
  store i64 %inc163, i64* %output_len, align 8, !dbg !2211, !tbaa !1941
  store i32 0, i32* %cleanup.dest.slot, !dbg !2212
  br label %cleanup, !dbg !2212

cleanup:                                          ; preds = %if.then.34, %do.end.159
  %136 = bitcast i8** %out to i8*, !dbg !2213
  call void @llvm.lifetime.end(i64 8, i8* %136) #2, !dbg !2213
  %137 = bitcast %struct._object** %modified to i8*, !dbg !2213
  call void @llvm.lifetime.end(i64 8, i8* %137) #2, !dbg !2213
  %138 = bitcast i32* %kind to i8*, !dbg !2213
  call void @llvm.lifetime.end(i64 4, i8* %138) #2, !dbg !2213
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.739 [
    i32 0, label %cleanup.cont
    i32 2, label %error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.166, !dbg !2214

if.end.166:                                       ; preds = %cleanup.cont, %lor.lhs.false, %if.end.9
  %139 = load i32, i32* %final.addr, align 4, !dbg !2215, !tbaa !1883
  %tobool167 = icmp ne i32 %139, 0, !dbg !2215
  br i1 %tobool167, label %if.end.295, label %if.then.168, !dbg !2216

if.then.168:                                      ; preds = %if.end.166
  %140 = load i64, i64* %output_len, align 8, !dbg !2217, !tbaa !1941
  %cmp169 = icmp sgt i64 %140, 0, !dbg !2218
  br i1 %cmp169, label %land.lhs.true.171, label %if.end.294, !dbg !2219

land.lhs.true.171:                                ; preds = %if.then.168
  %141 = load %struct._object*, %struct._object** %output, align 8, !dbg !2220, !tbaa !1876
  %142 = bitcast %struct._object* %141 to %struct.PyASCIIObject*, !dbg !2222
  %state172 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %142, i32 0, i32 3, !dbg !2223
  %143 = bitcast %struct.anon* %state172 to i32*, !dbg !2224
  %bf.load173 = load i32, i32* %143, align 4, !dbg !2224
  %bf.lshr174 = lshr i32 %bf.load173, 2, !dbg !2224
  %bf.clear175 = and i32 %bf.lshr174, 7, !dbg !2224
  %cmp176 = icmp eq i32 %bf.clear175, 1, !dbg !2225
  br i1 %cmp176, label %cond.true.178, label %cond.false.203, !dbg !2226

cond.true.178:                                    ; preds = %land.lhs.true.171
  %144 = load i64, i64* %output_len, align 8, !dbg !2227, !tbaa !1941
  %sub = sub i64 %144, 1, !dbg !2229
  %145 = load %struct._object*, %struct._object** %output, align 8, !dbg !2230, !tbaa !1876
  %146 = bitcast %struct._object* %145 to %struct.PyASCIIObject*, !dbg !2231
  %state179 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %146, i32 0, i32 3, !dbg !2232
  %147 = bitcast %struct.anon* %state179 to i32*, !dbg !2233
  %bf.load180 = load i32, i32* %147, align 4, !dbg !2233
  %bf.lshr181 = lshr i32 %bf.load180, 5, !dbg !2233
  %bf.clear182 = and i32 %bf.lshr181, 1, !dbg !2233
  %tobool183 = icmp ne i32 %bf.clear182, 0, !dbg !2234
  br i1 %tobool183, label %cond.true.184, label %cond.false.196, !dbg !2234

cond.true.184:                                    ; preds = %cond.true.178
  %148 = load %struct._object*, %struct._object** %output, align 8, !dbg !2235, !tbaa !1876
  %149 = bitcast %struct._object* %148 to %struct.PyASCIIObject*, !dbg !2237
  %state185 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %149, i32 0, i32 3, !dbg !2238
  %150 = bitcast %struct.anon* %state185 to i32*, !dbg !2239
  %bf.load186 = load i32, i32* %150, align 4, !dbg !2239
  %bf.lshr187 = lshr i32 %bf.load186, 6, !dbg !2239
  %bf.clear188 = and i32 %bf.lshr187, 1, !dbg !2239
  %tobool189 = icmp ne i32 %bf.clear188, 0, !dbg !2240
  br i1 %tobool189, label %cond.true.190, label %cond.false.192, !dbg !2240

cond.true.190:                                    ; preds = %cond.true.184
  %151 = load %struct._object*, %struct._object** %output, align 8, !dbg !2241, !tbaa !1876
  %152 = bitcast %struct._object* %151 to %struct.PyASCIIObject*, !dbg !2243
  %add.ptr191 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %152, i64 1, !dbg !2244
  %153 = bitcast %struct.PyASCIIObject* %add.ptr191 to i8*, !dbg !2245
  br label %cond.end.194, !dbg !2240

cond.false.192:                                   ; preds = %cond.true.184
  %154 = load %struct._object*, %struct._object** %output, align 8, !dbg !2246, !tbaa !1876
  %155 = bitcast %struct._object* %154 to %struct.PyCompactUnicodeObject*, !dbg !2248
  %add.ptr193 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %155, i64 1, !dbg !2249
  %156 = bitcast %struct.PyCompactUnicodeObject* %add.ptr193 to i8*, !dbg !2250
  br label %cond.end.194, !dbg !2240

cond.end.194:                                     ; preds = %cond.false.192, %cond.true.190
  %cond195 = phi i8* [ %153, %cond.true.190 ], [ %156, %cond.false.192 ], !dbg !2240
  br label %cond.end.199, !dbg !2251

cond.false.196:                                   ; preds = %cond.true.178
  %157 = load %struct._object*, %struct._object** %output, align 8, !dbg !2254, !tbaa !1876
  %158 = bitcast %struct._object* %157 to %struct.PyUnicodeObject*, !dbg !2256
  %data197 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %158, i32 0, i32 1, !dbg !2257
  %any198 = bitcast %union.anon* %data197 to i8**, !dbg !2258
  %159 = load i8*, i8** %any198, align 8, !dbg !2258, !tbaa !1876
  br label %cond.end.199, !dbg !2234

cond.end.199:                                     ; preds = %cond.false.196, %cond.end.194
  %cond200 = phi i8* [ %cond195, %cond.end.194 ], [ %159, %cond.false.196 ], !dbg !2234
  %arrayidx201 = getelementptr i8, i8* %cond200, i64 %sub, !dbg !2259
  %160 = load i8, i8* %arrayidx201, align 1, !dbg !2259, !tbaa !2065
  %conv202 = zext i8 %160 to i32, !dbg !2259
  br label %cond.end.263, !dbg !2226

cond.false.203:                                   ; preds = %land.lhs.true.171
  %161 = load %struct._object*, %struct._object** %output, align 8, !dbg !2262, !tbaa !1876
  %162 = bitcast %struct._object* %161 to %struct.PyASCIIObject*, !dbg !2264
  %state204 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %162, i32 0, i32 3, !dbg !2265
  %163 = bitcast %struct.anon* %state204 to i32*, !dbg !2266
  %bf.load205 = load i32, i32* %163, align 4, !dbg !2266
  %bf.lshr206 = lshr i32 %bf.load205, 2, !dbg !2266
  %bf.clear207 = and i32 %bf.lshr206, 7, !dbg !2266
  %cmp208 = icmp eq i32 %bf.clear207, 2, !dbg !2267
  br i1 %cmp208, label %cond.true.210, label %cond.false.236, !dbg !2268

cond.true.210:                                    ; preds = %cond.false.203
  %164 = load i64, i64* %output_len, align 8, !dbg !2269, !tbaa !1941
  %sub211 = sub i64 %164, 1, !dbg !2271
  %165 = load %struct._object*, %struct._object** %output, align 8, !dbg !2272, !tbaa !1876
  %166 = bitcast %struct._object* %165 to %struct.PyASCIIObject*, !dbg !2273
  %state212 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %166, i32 0, i32 3, !dbg !2274
  %167 = bitcast %struct.anon* %state212 to i32*, !dbg !2275
  %bf.load213 = load i32, i32* %167, align 4, !dbg !2275
  %bf.lshr214 = lshr i32 %bf.load213, 5, !dbg !2275
  %bf.clear215 = and i32 %bf.lshr214, 1, !dbg !2275
  %tobool216 = icmp ne i32 %bf.clear215, 0, !dbg !2276
  br i1 %tobool216, label %cond.true.217, label %cond.false.229, !dbg !2276

cond.true.217:                                    ; preds = %cond.true.210
  %168 = load %struct._object*, %struct._object** %output, align 8, !dbg !2277, !tbaa !1876
  %169 = bitcast %struct._object* %168 to %struct.PyASCIIObject*, !dbg !2279
  %state218 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %169, i32 0, i32 3, !dbg !2280
  %170 = bitcast %struct.anon* %state218 to i32*, !dbg !2281
  %bf.load219 = load i32, i32* %170, align 4, !dbg !2281
  %bf.lshr220 = lshr i32 %bf.load219, 6, !dbg !2281
  %bf.clear221 = and i32 %bf.lshr220, 1, !dbg !2281
  %tobool222 = icmp ne i32 %bf.clear221, 0, !dbg !2282
  br i1 %tobool222, label %cond.true.223, label %cond.false.225, !dbg !2282

cond.true.223:                                    ; preds = %cond.true.217
  %171 = load %struct._object*, %struct._object** %output, align 8, !dbg !2283, !tbaa !1876
  %172 = bitcast %struct._object* %171 to %struct.PyASCIIObject*, !dbg !2285
  %add.ptr224 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %172, i64 1, !dbg !2286
  %173 = bitcast %struct.PyASCIIObject* %add.ptr224 to i8*, !dbg !2287
  br label %cond.end.227, !dbg !2282

cond.false.225:                                   ; preds = %cond.true.217
  %174 = load %struct._object*, %struct._object** %output, align 8, !dbg !2288, !tbaa !1876
  %175 = bitcast %struct._object* %174 to %struct.PyCompactUnicodeObject*, !dbg !2290
  %add.ptr226 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %175, i64 1, !dbg !2291
  %176 = bitcast %struct.PyCompactUnicodeObject* %add.ptr226 to i8*, !dbg !2292
  br label %cond.end.227, !dbg !2282

cond.end.227:                                     ; preds = %cond.false.225, %cond.true.223
  %cond228 = phi i8* [ %173, %cond.true.223 ], [ %176, %cond.false.225 ], !dbg !2282
  br label %cond.end.232, !dbg !2293

cond.false.229:                                   ; preds = %cond.true.210
  %177 = load %struct._object*, %struct._object** %output, align 8, !dbg !2296, !tbaa !1876
  %178 = bitcast %struct._object* %177 to %struct.PyUnicodeObject*, !dbg !2298
  %data230 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %178, i32 0, i32 1, !dbg !2299
  %any231 = bitcast %union.anon* %data230 to i8**, !dbg !2300
  %179 = load i8*, i8** %any231, align 8, !dbg !2300, !tbaa !1876
  br label %cond.end.232, !dbg !2276

cond.end.232:                                     ; preds = %cond.false.229, %cond.end.227
  %cond233 = phi i8* [ %cond228, %cond.end.227 ], [ %179, %cond.false.229 ], !dbg !2276
  %180 = bitcast i8* %cond233 to i16*, !dbg !2301
  %arrayidx234 = getelementptr i16, i16* %180, i64 %sub211, !dbg !2304
  %181 = load i16, i16* %arrayidx234, align 2, !dbg !2304, !tbaa !2103
  %conv235 = zext i16 %181 to i32, !dbg !2304
  br label %cond.end.261, !dbg !2268

cond.false.236:                                   ; preds = %cond.false.203
  %182 = load i64, i64* %output_len, align 8, !dbg !2305, !tbaa !1941
  %sub237 = sub i64 %182, 1, !dbg !2307
  %183 = load %struct._object*, %struct._object** %output, align 8, !dbg !2308, !tbaa !1876
  %184 = bitcast %struct._object* %183 to %struct.PyASCIIObject*, !dbg !2309
  %state238 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %184, i32 0, i32 3, !dbg !2310
  %185 = bitcast %struct.anon* %state238 to i32*, !dbg !2311
  %bf.load239 = load i32, i32* %185, align 4, !dbg !2311
  %bf.lshr240 = lshr i32 %bf.load239, 5, !dbg !2311
  %bf.clear241 = and i32 %bf.lshr240, 1, !dbg !2311
  %tobool242 = icmp ne i32 %bf.clear241, 0, !dbg !2312
  br i1 %tobool242, label %cond.true.243, label %cond.false.255, !dbg !2312

cond.true.243:                                    ; preds = %cond.false.236
  %186 = load %struct._object*, %struct._object** %output, align 8, !dbg !2313, !tbaa !1876
  %187 = bitcast %struct._object* %186 to %struct.PyASCIIObject*, !dbg !2315
  %state244 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %187, i32 0, i32 3, !dbg !2316
  %188 = bitcast %struct.anon* %state244 to i32*, !dbg !2317
  %bf.load245 = load i32, i32* %188, align 4, !dbg !2317
  %bf.lshr246 = lshr i32 %bf.load245, 6, !dbg !2317
  %bf.clear247 = and i32 %bf.lshr246, 1, !dbg !2317
  %tobool248 = icmp ne i32 %bf.clear247, 0, !dbg !2318
  br i1 %tobool248, label %cond.true.249, label %cond.false.251, !dbg !2318

cond.true.249:                                    ; preds = %cond.true.243
  %189 = load %struct._object*, %struct._object** %output, align 8, !dbg !2319, !tbaa !1876
  %190 = bitcast %struct._object* %189 to %struct.PyASCIIObject*, !dbg !2321
  %add.ptr250 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %190, i64 1, !dbg !2322
  %191 = bitcast %struct.PyASCIIObject* %add.ptr250 to i8*, !dbg !2323
  br label %cond.end.253, !dbg !2318

cond.false.251:                                   ; preds = %cond.true.243
  %192 = load %struct._object*, %struct._object** %output, align 8, !dbg !2324, !tbaa !1876
  %193 = bitcast %struct._object* %192 to %struct.PyCompactUnicodeObject*, !dbg !2326
  %add.ptr252 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %193, i64 1, !dbg !2327
  %194 = bitcast %struct.PyCompactUnicodeObject* %add.ptr252 to i8*, !dbg !2328
  br label %cond.end.253, !dbg !2318

cond.end.253:                                     ; preds = %cond.false.251, %cond.true.249
  %cond254 = phi i8* [ %191, %cond.true.249 ], [ %194, %cond.false.251 ], !dbg !2318
  br label %cond.end.258, !dbg !2329

cond.false.255:                                   ; preds = %cond.false.236
  %195 = load %struct._object*, %struct._object** %output, align 8, !dbg !2332, !tbaa !1876
  %196 = bitcast %struct._object* %195 to %struct.PyUnicodeObject*, !dbg !2334
  %data256 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %196, i32 0, i32 1, !dbg !2335
  %any257 = bitcast %union.anon* %data256 to i8**, !dbg !2336
  %197 = load i8*, i8** %any257, align 8, !dbg !2336, !tbaa !1876
  br label %cond.end.258, !dbg !2312

cond.end.258:                                     ; preds = %cond.false.255, %cond.end.253
  %cond259 = phi i8* [ %cond254, %cond.end.253 ], [ %197, %cond.false.255 ], !dbg !2312
  %198 = bitcast i8* %cond259 to i32*, !dbg !2337
  %arrayidx260 = getelementptr i32, i32* %198, i64 %sub237, !dbg !2340
  %199 = load i32, i32* %arrayidx260, align 4, !dbg !2340, !tbaa !1883
  br label %cond.end.261, !dbg !2268

cond.end.261:                                     ; preds = %cond.end.258, %cond.end.232
  %cond262 = phi i32 [ %conv235, %cond.end.232 ], [ %199, %cond.end.258 ], !dbg !2268
  br label %cond.end.263, !dbg !2341

cond.end.263:                                     ; preds = %cond.end.261, %cond.end.199
  %cond264 = phi i32 [ %conv202, %cond.end.199 ], [ %cond262, %cond.end.261 ], !dbg !2226
  %cmp265 = icmp eq i32 %cond264, 13, !dbg !2344
  br i1 %cmp265, label %if.then.267, label %if.end.294, !dbg !2347

if.then.267:                                      ; preds = %cond.end.263
  %200 = bitcast %struct._object** %modified268 to i8*, !dbg !2348
  call void @llvm.lifetime.start(i64 8, i8* %200) #2, !dbg !2348
  call void @llvm.dbg.declare(metadata %struct._object** %modified268, metadata !474, metadata !1880), !dbg !2349
  %201 = load %struct._object*, %struct._object** %output, align 8, !dbg !2350, !tbaa !1876
  %202 = load i64, i64* %output_len, align 8, !dbg !2351, !tbaa !1941
  %sub269 = sub i64 %202, 1, !dbg !2352
  %call270 = call %struct._object* @PyUnicode_Substring(%struct._object* %201, i64 0, i64 %sub269), !dbg !2353
  store %struct._object* %call270, %struct._object** %modified268, align 8, !dbg !2349, !tbaa !1876
  %203 = load %struct._object*, %struct._object** %modified268, align 8, !dbg !2354, !tbaa !1876
  %cmp271 = icmp eq %struct._object* %203, null, !dbg !2356
  br i1 %cmp271, label %if.then.273, label %if.end.274, !dbg !2357

if.then.273:                                      ; preds = %if.then.267
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.291, !dbg !2358

if.end.274:                                       ; preds = %if.then.267
  br label %do.body.275, !dbg !2359

do.body.275:                                      ; preds = %if.end.274
  %204 = bitcast %struct._object** %_py_decref_tmp276 to i8*, !dbg !2360
  call void @llvm.lifetime.start(i64 8, i8* %204) #2, !dbg !2360
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp276, metadata !479, metadata !1880), !dbg !2362
  %205 = load %struct._object*, %struct._object** %output, align 8, !dbg !2363, !tbaa !1876
  store %struct._object* %205, %struct._object** %_py_decref_tmp276, align 8, !dbg !2362, !tbaa !1876
  %206 = load %struct._object*, %struct._object** %_py_decref_tmp276, align 8, !dbg !2364, !tbaa !1876
  %ob_refcnt277 = getelementptr inbounds %struct._object, %struct._object* %206, i32 0, i32 0, !dbg !2366
  %207 = load i64, i64* %ob_refcnt277, align 8, !dbg !2367, !tbaa !1927
  %dec278 = add i64 %207, -1, !dbg !2367
  store i64 %dec278, i64* %ob_refcnt277, align 8, !dbg !2367, !tbaa !1927
  %cmp279 = icmp ne i64 %dec278, 0, !dbg !2368
  br i1 %cmp279, label %if.then.281, label %if.else.282, !dbg !2369

if.then.281:                                      ; preds = %do.body.275
  br label %if.end.285, !dbg !2370

if.else.282:                                      ; preds = %do.body.275
  %208 = load %struct._object*, %struct._object** %_py_decref_tmp276, align 8, !dbg !2372, !tbaa !1876
  %ob_type283 = getelementptr inbounds %struct._object, %struct._object* %208, i32 0, i32 1, !dbg !2374
  %209 = load %struct._typeobject*, %struct._typeobject** %ob_type283, align 8, !dbg !2374, !tbaa !2195
  %tp_dealloc284 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %209, i32 0, i32 4, !dbg !2375
  %210 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc284, align 8, !dbg !2375, !tbaa !2197
  %211 = load %struct._object*, %struct._object** %_py_decref_tmp276, align 8, !dbg !2376, !tbaa !1876
  call void %210(%struct._object* %211), !dbg !2377
  br label %if.end.285

if.end.285:                                       ; preds = %if.else.282, %if.then.281
  %212 = bitcast %struct._object** %_py_decref_tmp276 to i8*, !dbg !2378
  call void @llvm.lifetime.end(i64 8, i8* %212) #2, !dbg !2378
  br label %do.cond.286, !dbg !2380

do.cond.286:                                      ; preds = %if.end.285
  br label %do.end.287, !dbg !2381

do.end.287:                                       ; preds = %do.cond.286
  %213 = load %struct._object*, %struct._object** %modified268, align 8, !dbg !2383, !tbaa !1876
  store %struct._object* %213, %struct._object** %output, align 8, !dbg !2384, !tbaa !1876
  %214 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2385, !tbaa !1876
  %pendingcr288 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %214, i32 0, i32 3, !dbg !2386
  %bf.load289 = load i8, i8* %pendingcr288, align 8, !dbg !2387
  %bf.clear290 = and i8 %bf.load289, -2, !dbg !2387
  %bf.set = or i8 %bf.clear290, 1, !dbg !2387
  store i8 %bf.set, i8* %pendingcr288, align 8, !dbg !2387
  store i32 0, i32* %cleanup.dest.slot, !dbg !2388
  br label %cleanup.291, !dbg !2388

cleanup.291:                                      ; preds = %if.then.273, %do.end.287
  %215 = bitcast %struct._object** %modified268 to i8*, !dbg !2389
  call void @llvm.lifetime.end(i64 8, i8* %215) #2, !dbg !2389
  %cleanup.dest.292 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.292, label %cleanup.739 [
    i32 0, label %cleanup.cont.293
    i32 2, label %error
  ]

cleanup.cont.293:                                 ; preds = %cleanup.291
  br label %if.end.294, !dbg !2390

if.end.294:                                       ; preds = %cleanup.cont.293, %cond.end.263, %if.then.168
  br label %if.end.295, !dbg !2391

if.end.295:                                       ; preds = %if.end.294, %if.end.166
  %216 = bitcast i8** %in_str to i8*, !dbg !2392
  call void @llvm.lifetime.start(i64 8, i8* %216) #2, !dbg !2392
  call void @llvm.dbg.declare(metadata i8** %in_str, metadata !481, metadata !1880), !dbg !2393
  %217 = bitcast i64* %len to i8*, !dbg !2394
  call void @llvm.lifetime.start(i64 8, i8* %217) #2, !dbg !2394
  call void @llvm.dbg.declare(metadata i64* %len, metadata !483, metadata !1880), !dbg !2395
  %218 = bitcast i32* %seennl to i8*, !dbg !2396
  call void @llvm.lifetime.start(i64 4, i8* %218) #2, !dbg !2396
  call void @llvm.dbg.declare(metadata i32* %seennl, metadata !484, metadata !1880), !dbg !2397
  %219 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2398, !tbaa !1876
  %seennl296 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %219, i32 0, i32 3, !dbg !2399
  %bf.load297 = load i8, i8* %seennl296, align 8, !dbg !2399
  %bf.lshr298 = lshr i8 %bf.load297, 2, !dbg !2399
  %bf.clear299 = and i8 %bf.lshr298, 7, !dbg !2399
  %bf.cast300 = zext i8 %bf.clear299 to i32, !dbg !2399
  store i32 %bf.cast300, i32* %seennl, align 4, !dbg !2397, !tbaa !1883
  %220 = bitcast i32* %only_lf to i8*, !dbg !2400
  call void @llvm.lifetime.start(i64 4, i8* %220) #2, !dbg !2400
  call void @llvm.dbg.declare(metadata i32* %only_lf, metadata !485, metadata !1880), !dbg !2401
  store i32 0, i32* %only_lf, align 4, !dbg !2401, !tbaa !1883
  %221 = bitcast i32* %kind301 to i8*, !dbg !2402
  call void @llvm.lifetime.start(i64 4, i8* %221) #2, !dbg !2402
  call void @llvm.dbg.declare(metadata i32* %kind301, metadata !486, metadata !1880), !dbg !2403
  %222 = load %struct._object*, %struct._object** %output, align 8, !dbg !2404, !tbaa !1876
  %223 = bitcast %struct._object* %222 to %struct.PyASCIIObject*, !dbg !2405
  %state302 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %223, i32 0, i32 3, !dbg !2406
  %224 = bitcast %struct.anon* %state302 to i32*, !dbg !2407
  %bf.load303 = load i32, i32* %224, align 4, !dbg !2407
  %bf.lshr304 = lshr i32 %bf.load303, 5, !dbg !2407
  %bf.clear305 = and i32 %bf.lshr304, 1, !dbg !2407
  %tobool306 = icmp ne i32 %bf.clear305, 0, !dbg !2408
  br i1 %tobool306, label %cond.true.307, label %cond.false.319, !dbg !2408

cond.true.307:                                    ; preds = %if.end.295
  %225 = load %struct._object*, %struct._object** %output, align 8, !dbg !2409, !tbaa !1876
  %226 = bitcast %struct._object* %225 to %struct.PyASCIIObject*, !dbg !2411
  %state308 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %226, i32 0, i32 3, !dbg !2412
  %227 = bitcast %struct.anon* %state308 to i32*, !dbg !2413
  %bf.load309 = load i32, i32* %227, align 4, !dbg !2413
  %bf.lshr310 = lshr i32 %bf.load309, 6, !dbg !2413
  %bf.clear311 = and i32 %bf.lshr310, 1, !dbg !2413
  %tobool312 = icmp ne i32 %bf.clear311, 0, !dbg !2414
  br i1 %tobool312, label %cond.true.313, label %cond.false.315, !dbg !2414

cond.true.313:                                    ; preds = %cond.true.307
  %228 = load %struct._object*, %struct._object** %output, align 8, !dbg !2415, !tbaa !1876
  %229 = bitcast %struct._object* %228 to %struct.PyASCIIObject*, !dbg !2417
  %add.ptr314 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %229, i64 1, !dbg !2418
  %230 = bitcast %struct.PyASCIIObject* %add.ptr314 to i8*, !dbg !2419
  br label %cond.end.317, !dbg !2414

cond.false.315:                                   ; preds = %cond.true.307
  %231 = load %struct._object*, %struct._object** %output, align 8, !dbg !2420, !tbaa !1876
  %232 = bitcast %struct._object* %231 to %struct.PyCompactUnicodeObject*, !dbg !2422
  %add.ptr316 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %232, i64 1, !dbg !2423
  %233 = bitcast %struct.PyCompactUnicodeObject* %add.ptr316 to i8*, !dbg !2424
  br label %cond.end.317, !dbg !2414

cond.end.317:                                     ; preds = %cond.false.315, %cond.true.313
  %cond318 = phi i8* [ %230, %cond.true.313 ], [ %233, %cond.false.315 ], !dbg !2414
  br label %cond.end.322, !dbg !2425

cond.false.319:                                   ; preds = %if.end.295
  %234 = load %struct._object*, %struct._object** %output, align 8, !dbg !2428, !tbaa !1876
  %235 = bitcast %struct._object* %234 to %struct.PyUnicodeObject*, !dbg !2430
  %data320 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %235, i32 0, i32 1, !dbg !2431
  %any321 = bitcast %union.anon* %data320 to i8**, !dbg !2432
  %236 = load i8*, i8** %any321, align 8, !dbg !2432, !tbaa !1876
  br label %cond.end.322, !dbg !2408

cond.end.322:                                     ; preds = %cond.false.319, %cond.end.317
  %cond323 = phi i8* [ %cond318, %cond.end.317 ], [ %236, %cond.false.319 ], !dbg !2408
  store i8* %cond323, i8** %in_str, align 8, !dbg !2433, !tbaa !1876
  %237 = load %struct._object*, %struct._object** %output, align 8, !dbg !2436, !tbaa !1876
  %238 = bitcast %struct._object* %237 to %struct.PyASCIIObject*, !dbg !2437
  %length324 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %238, i32 0, i32 1, !dbg !2438
  %239 = load i64, i64* %length324, align 8, !dbg !2438, !tbaa !1937
  store i64 %239, i64* %len, align 8, !dbg !2439, !tbaa !1941
  %240 = load %struct._object*, %struct._object** %output, align 8, !dbg !2440, !tbaa !1876
  %241 = bitcast %struct._object* %240 to %struct.PyASCIIObject*, !dbg !2441
  %state325 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %241, i32 0, i32 3, !dbg !2442
  %242 = bitcast %struct.anon* %state325 to i32*, !dbg !2443
  %bf.load326 = load i32, i32* %242, align 4, !dbg !2443
  %bf.lshr327 = lshr i32 %bf.load326, 2, !dbg !2443
  %bf.clear328 = and i32 %bf.lshr327, 7, !dbg !2443
  store i32 %bf.clear328, i32* %kind301, align 4, !dbg !2444, !tbaa !1883
  %243 = load i64, i64* %len, align 8, !dbg !2445, !tbaa !1941
  %cmp329 = icmp eq i64 %243, 0, !dbg !2447
  br i1 %cmp329, label %if.then.331, label %if.end.332, !dbg !2448

if.then.331:                                      ; preds = %cond.end.322
  %244 = load %struct._object*, %struct._object** %output, align 8, !dbg !2449, !tbaa !1876
  store %struct._object* %244, %struct._object** %retval, !dbg !2450
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.719, !dbg !2450

if.end.332:                                       ; preds = %cond.end.322
  %245 = load i32, i32* %seennl, align 4, !dbg !2451, !tbaa !1883
  %cmp333 = icmp eq i32 %245, 2, !dbg !2453
  br i1 %cmp333, label %if.then.338, label %lor.lhs.false.335, !dbg !2454

lor.lhs.false.335:                                ; preds = %if.end.332
  %246 = load i32, i32* %seennl, align 4, !dbg !2455, !tbaa !1883
  %cmp336 = icmp eq i32 %246, 0, !dbg !2457
  br i1 %cmp336, label %if.then.338, label %if.end.344, !dbg !2458

if.then.338:                                      ; preds = %lor.lhs.false.335, %if.end.332
  %247 = load i8*, i8** %in_str, align 8, !dbg !2459, !tbaa !1876
  %248 = load i32, i32* %kind301, align 4, !dbg !2461, !tbaa !1883
  %conv339 = sext i32 %248 to i64, !dbg !2461
  %249 = load i64, i64* %len, align 8, !dbg !2462, !tbaa !1941
  %mul340 = mul i64 %conv339, %249, !dbg !2463
  %call341 = call i8* @memchr(i8* %247, i32 13, i64 %mul340) #6, !dbg !2464
  %cmp342 = icmp eq i8* %call341, null, !dbg !2465
  %conv343 = zext i1 %cmp342 to i32, !dbg !2465
  store i32 %conv343, i32* %only_lf, align 4, !dbg !2466, !tbaa !1883
  br label %if.end.344, !dbg !2467

if.end.344:                                       ; preds = %if.then.338, %lor.lhs.false.335
  %250 = load i32, i32* %only_lf, align 4, !dbg !2468, !tbaa !1883
  %tobool345 = icmp ne i32 %250, 0, !dbg !2468
  br i1 %tobool345, label %if.then.346, label %if.else.414, !dbg !2469

if.then.346:                                      ; preds = %if.end.344
  %251 = load i32, i32* %seennl, align 4, !dbg !2470, !tbaa !1883
  %cmp347 = icmp eq i32 %251, 0, !dbg !2471
  br i1 %cmp347, label %land.lhs.true.349, label %if.end.413, !dbg !2472

land.lhs.true.349:                                ; preds = %if.then.346
  %252 = load i8*, i8** %in_str, align 8, !dbg !2473, !tbaa !1876
  %253 = load i32, i32* %kind301, align 4, !dbg !2474, !tbaa !1883
  %conv350 = sext i32 %253 to i64, !dbg !2474
  %254 = load i64, i64* %len, align 8, !dbg !2475, !tbaa !1941
  %mul351 = mul i64 %conv350, %254, !dbg !2476
  %call352 = call i8* @memchr(i8* %252, i32 10, i64 %mul351) #6, !dbg !2477
  %cmp353 = icmp ne i8* %call352, null, !dbg !2478
  br i1 %cmp353, label %if.then.355, label %if.end.413, !dbg !2479

if.then.355:                                      ; preds = %land.lhs.true.349
  %255 = load i32, i32* %kind301, align 4, !dbg !2480, !tbaa !1883
  %cmp356 = icmp eq i32 %255, 1, !dbg !2481
  br i1 %cmp356, label %if.then.358, label %if.else.359, !dbg !2482

if.then.358:                                      ; preds = %if.then.355
  %256 = load i32, i32* %seennl, align 4, !dbg !2483, !tbaa !1883
  %or = or i32 %256, 2, !dbg !2483
  store i32 %or, i32* %seennl, align 4, !dbg !2483, !tbaa !1883
  br label %if.end.412, !dbg !2484

if.else.359:                                      ; preds = %if.then.355
  %257 = bitcast i64* %i to i8*, !dbg !2485
  call void @llvm.lifetime.start(i64 8, i8* %257) #2, !dbg !2485
  call void @llvm.dbg.declare(metadata i64* %i, metadata !487, metadata !1880), !dbg !2486
  store i64 0, i64* %i, align 8, !dbg !2486, !tbaa !1941
  br label %for.cond, !dbg !2487

for.cond:                                         ; preds = %cleanup.cont.411, %if.else.359
  %258 = bitcast i32* %c to i8*, !dbg !2488
  call void @llvm.lifetime.start(i64 4, i8* %258) #2, !dbg !2488
  call void @llvm.dbg.declare(metadata i32* %c, metadata !494, metadata !1880), !dbg !2489
  br label %while.cond, !dbg !2490

while.cond:                                       ; preds = %while.body, %for.cond
  %259 = load i32, i32* %kind301, align 4, !dbg !2491, !tbaa !1883
  %cmp360 = icmp eq i32 %259, 1, !dbg !2494
  br i1 %cmp360, label %cond.true.362, label %cond.false.365, !dbg !2495

cond.true.362:                                    ; preds = %while.cond
  %260 = load i64, i64* %i, align 8, !dbg !2496, !tbaa !1941
  %261 = load i8*, i8** %in_str, align 8, !dbg !2498, !tbaa !1876
  %arrayidx363 = getelementptr i8, i8* %261, i64 %260, !dbg !2499
  %262 = load i8, i8* %arrayidx363, align 1, !dbg !2499, !tbaa !2065
  %conv364 = zext i8 %262 to i32, !dbg !2499
  br label %cond.end.375, !dbg !2495

cond.false.365:                                   ; preds = %while.cond
  %263 = load i32, i32* %kind301, align 4, !dbg !2500, !tbaa !1883
  %cmp366 = icmp eq i32 %263, 2, !dbg !2502
  br i1 %cmp366, label %cond.true.368, label %cond.false.371, !dbg !2503

cond.true.368:                                    ; preds = %cond.false.365
  %264 = load i64, i64* %i, align 8, !dbg !2504, !tbaa !1941
  %265 = load i8*, i8** %in_str, align 8, !dbg !2506, !tbaa !1876
  %266 = bitcast i8* %265 to i16*, !dbg !2507
  %arrayidx369 = getelementptr i16, i16* %266, i64 %264, !dbg !2508
  %267 = load i16, i16* %arrayidx369, align 2, !dbg !2508, !tbaa !2103
  %conv370 = zext i16 %267 to i32, !dbg !2508
  br label %cond.end.373, !dbg !2503

cond.false.371:                                   ; preds = %cond.false.365
  %268 = load i64, i64* %i, align 8, !dbg !2509, !tbaa !1941
  %269 = load i8*, i8** %in_str, align 8, !dbg !2511, !tbaa !1876
  %270 = bitcast i8* %269 to i32*, !dbg !2512
  %arrayidx372 = getelementptr i32, i32* %270, i64 %268, !dbg !2513
  %271 = load i32, i32* %arrayidx372, align 4, !dbg !2513, !tbaa !1883
  br label %cond.end.373, !dbg !2503

cond.end.373:                                     ; preds = %cond.false.371, %cond.true.368
  %cond374 = phi i32 [ %conv370, %cond.true.368 ], [ %271, %cond.false.371 ], !dbg !2503
  br label %cond.end.375, !dbg !2514

cond.end.375:                                     ; preds = %cond.end.373, %cond.true.362
  %cond376 = phi i32 [ %conv364, %cond.true.362 ], [ %cond374, %cond.end.373 ], !dbg !2495
  %cmp377 = icmp ugt i32 %cond376, 10, !dbg !2517
  br i1 %cmp377, label %while.body, label %while.end, !dbg !2490

while.body:                                       ; preds = %cond.end.375
  %272 = load i64, i64* %i, align 8, !dbg !2520, !tbaa !1941
  %inc379 = add i64 %272, 1, !dbg !2520
  store i64 %inc379, i64* %i, align 8, !dbg !2520, !tbaa !1941
  br label %while.cond, !dbg !2490

while.end:                                        ; preds = %cond.end.375
  %273 = load i32, i32* %kind301, align 4, !dbg !2521, !tbaa !1883
  %cmp380 = icmp eq i32 %273, 1, !dbg !2522
  br i1 %cmp380, label %cond.true.382, label %cond.false.386, !dbg !2523

cond.true.382:                                    ; preds = %while.end
  %274 = load i64, i64* %i, align 8, !dbg !2524, !tbaa !1941
  %inc383 = add i64 %274, 1, !dbg !2524
  store i64 %inc383, i64* %i, align 8, !dbg !2524, !tbaa !1941
  %275 = load i8*, i8** %in_str, align 8, !dbg !2525, !tbaa !1876
  %arrayidx384 = getelementptr i8, i8* %275, i64 %274, !dbg !2526
  %276 = load i8, i8* %arrayidx384, align 1, !dbg !2526, !tbaa !2065
  %conv385 = zext i8 %276 to i32, !dbg !2526
  br label %cond.end.398, !dbg !2523

cond.false.386:                                   ; preds = %while.end
  %277 = load i32, i32* %kind301, align 4, !dbg !2527, !tbaa !1883
  %cmp387 = icmp eq i32 %277, 2, !dbg !2528
  br i1 %cmp387, label %cond.true.389, label %cond.false.393, !dbg !2529

cond.true.389:                                    ; preds = %cond.false.386
  %278 = load i64, i64* %i, align 8, !dbg !2530, !tbaa !1941
  %inc390 = add i64 %278, 1, !dbg !2530
  store i64 %inc390, i64* %i, align 8, !dbg !2530, !tbaa !1941
  %279 = load i8*, i8** %in_str, align 8, !dbg !2531, !tbaa !1876
  %280 = bitcast i8* %279 to i16*, !dbg !2532
  %arrayidx391 = getelementptr i16, i16* %280, i64 %278, !dbg !2533
  %281 = load i16, i16* %arrayidx391, align 2, !dbg !2533, !tbaa !2103
  %conv392 = zext i16 %281 to i32, !dbg !2533
  br label %cond.end.396, !dbg !2529

cond.false.393:                                   ; preds = %cond.false.386
  %282 = load i64, i64* %i, align 8, !dbg !2534, !tbaa !1941
  %inc394 = add i64 %282, 1, !dbg !2534
  store i64 %inc394, i64* %i, align 8, !dbg !2534, !tbaa !1941
  %283 = load i8*, i8** %in_str, align 8, !dbg !2535, !tbaa !1876
  %284 = bitcast i8* %283 to i32*, !dbg !2536
  %arrayidx395 = getelementptr i32, i32* %284, i64 %282, !dbg !2537
  %285 = load i32, i32* %arrayidx395, align 4, !dbg !2537, !tbaa !1883
  br label %cond.end.396, !dbg !2529

cond.end.396:                                     ; preds = %cond.false.393, %cond.true.389
  %cond397 = phi i32 [ %conv392, %cond.true.389 ], [ %285, %cond.false.393 ], !dbg !2529
  br label %cond.end.398, !dbg !2538

cond.end.398:                                     ; preds = %cond.end.396, %cond.true.382
  %cond399 = phi i32 [ %conv385, %cond.true.382 ], [ %cond397, %cond.end.396 ], !dbg !2523
  store i32 %cond399, i32* %c, align 4, !dbg !2540, !tbaa !1883
  %286 = load i32, i32* %c, align 4, !dbg !2542, !tbaa !1883
  %cmp400 = icmp eq i32 %286, 10, !dbg !2544
  br i1 %cmp400, label %if.then.402, label %if.end.404, !dbg !2545

if.then.402:                                      ; preds = %cond.end.398
  %287 = load i32, i32* %seennl, align 4, !dbg !2546, !tbaa !1883
  %or403 = or i32 %287, 2, !dbg !2546
  store i32 %or403, i32* %seennl, align 4, !dbg !2546, !tbaa !1883
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.409, !dbg !2548

if.end.404:                                       ; preds = %cond.end.398
  %288 = load i64, i64* %i, align 8, !dbg !2549, !tbaa !1941
  %289 = load i64, i64* %len, align 8, !dbg !2551, !tbaa !1941
  %cmp405 = icmp sge i64 %288, %289, !dbg !2552
  br i1 %cmp405, label %if.then.407, label %if.end.408, !dbg !2553

if.then.407:                                      ; preds = %if.end.404
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.409, !dbg !2554

if.end.408:                                       ; preds = %if.end.404
  store i32 0, i32* %cleanup.dest.slot, !dbg !2555
  br label %cleanup.409, !dbg !2555

cleanup.409:                                      ; preds = %if.end.408, %if.then.407, %if.then.402
  %290 = bitcast i32* %c to i8*, !dbg !2556
  call void @llvm.lifetime.end(i64 4, i8* %290) #2, !dbg !2556
  %cleanup.dest.410 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.410, label %unreachable [
    i32 0, label %cleanup.cont.411
    i32 10, label %for.end
  ]

cleanup.cont.411:                                 ; preds = %cleanup.409
  br label %for.cond, !dbg !2558

for.end:                                          ; preds = %cleanup.409
  %291 = bitcast i64* %i to i8*, !dbg !2559
  call void @llvm.lifetime.end(i64 8, i8* %291) #2, !dbg !2559
  br label %if.end.412

if.end.412:                                       ; preds = %for.end, %if.then.358
  br label %if.end.413, !dbg !2560

if.end.413:                                       ; preds = %if.end.412, %land.lhs.true.349, %if.then.346
  br label %if.end.708, !dbg !2561

if.else.414:                                      ; preds = %if.end.344
  %292 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2562, !tbaa !1876
  %translate = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %292, i32 0, i32 3, !dbg !2563
  %bf.load415 = load i8, i8* %translate, align 8, !dbg !2563
  %bf.shl416 = shl i8 %bf.load415, 6, !dbg !2563
  %bf.ashr417 = ashr i8 %bf.shl416, 7, !dbg !2563
  %bf.cast418 = sext i8 %bf.ashr417 to i32, !dbg !2563
  %tobool419 = icmp ne i32 %bf.cast418, 0, !dbg !2562
  br i1 %tobool419, label %if.else.518, label %if.then.420, !dbg !2564

if.then.420:                                      ; preds = %if.else.414
  %293 = bitcast i64* %i421 to i8*, !dbg !2565
  call void @llvm.lifetime.start(i64 8, i8* %293) #2, !dbg !2565
  call void @llvm.dbg.declare(metadata i64* %i421, metadata !498, metadata !1880), !dbg !2566
  store i64 0, i64* %i421, align 8, !dbg !2566, !tbaa !1941
  %294 = load i32, i32* %seennl, align 4, !dbg !2567, !tbaa !1883
  %cmp422 = icmp eq i32 %294, 7, !dbg !2569
  br i1 %cmp422, label %if.then.424, label %if.end.425, !dbg !2570

if.then.424:                                      ; preds = %if.then.420
  br label %endscan, !dbg !2571

if.end.425:                                       ; preds = %if.then.420
  br label %for.cond.426, !dbg !2572

for.cond.426:                                     ; preds = %cleanup.cont.516, %if.end.425
  %295 = bitcast i32* %c427 to i8*, !dbg !2573
  call void @llvm.lifetime.start(i64 4, i8* %295) #2, !dbg !2573
  call void @llvm.dbg.declare(metadata i32* %c427, metadata !501, metadata !1880), !dbg !2574
  br label %while.cond.428, !dbg !2575

while.cond.428:                                   ; preds = %while.body.448, %for.cond.426
  %296 = load i32, i32* %kind301, align 4, !dbg !2576, !tbaa !1883
  %cmp429 = icmp eq i32 %296, 1, !dbg !2579
  br i1 %cmp429, label %cond.true.431, label %cond.false.434, !dbg !2580

cond.true.431:                                    ; preds = %while.cond.428
  %297 = load i64, i64* %i421, align 8, !dbg !2581, !tbaa !1941
  %298 = load i8*, i8** %in_str, align 8, !dbg !2583, !tbaa !1876
  %arrayidx432 = getelementptr i8, i8* %298, i64 %297, !dbg !2584
  %299 = load i8, i8* %arrayidx432, align 1, !dbg !2584, !tbaa !2065
  %conv433 = zext i8 %299 to i32, !dbg !2584
  br label %cond.end.444, !dbg !2580

cond.false.434:                                   ; preds = %while.cond.428
  %300 = load i32, i32* %kind301, align 4, !dbg !2585, !tbaa !1883
  %cmp435 = icmp eq i32 %300, 2, !dbg !2587
  br i1 %cmp435, label %cond.true.437, label %cond.false.440, !dbg !2588

cond.true.437:                                    ; preds = %cond.false.434
  %301 = load i64, i64* %i421, align 8, !dbg !2589, !tbaa !1941
  %302 = load i8*, i8** %in_str, align 8, !dbg !2591, !tbaa !1876
  %303 = bitcast i8* %302 to i16*, !dbg !2592
  %arrayidx438 = getelementptr i16, i16* %303, i64 %301, !dbg !2593
  %304 = load i16, i16* %arrayidx438, align 2, !dbg !2593, !tbaa !2103
  %conv439 = zext i16 %304 to i32, !dbg !2593
  br label %cond.end.442, !dbg !2588

cond.false.440:                                   ; preds = %cond.false.434
  %305 = load i64, i64* %i421, align 8, !dbg !2594, !tbaa !1941
  %306 = load i8*, i8** %in_str, align 8, !dbg !2596, !tbaa !1876
  %307 = bitcast i8* %306 to i32*, !dbg !2597
  %arrayidx441 = getelementptr i32, i32* %307, i64 %305, !dbg !2598
  %308 = load i32, i32* %arrayidx441, align 4, !dbg !2598, !tbaa !1883
  br label %cond.end.442, !dbg !2588

cond.end.442:                                     ; preds = %cond.false.440, %cond.true.437
  %cond443 = phi i32 [ %conv439, %cond.true.437 ], [ %308, %cond.false.440 ], !dbg !2588
  br label %cond.end.444, !dbg !2599

cond.end.444:                                     ; preds = %cond.end.442, %cond.true.431
  %cond445 = phi i32 [ %conv433, %cond.true.431 ], [ %cond443, %cond.end.442 ], !dbg !2580
  %cmp446 = icmp ugt i32 %cond445, 13, !dbg !2602
  br i1 %cmp446, label %while.body.448, label %while.end.450, !dbg !2575

while.body.448:                                   ; preds = %cond.end.444
  %309 = load i64, i64* %i421, align 8, !dbg !2605, !tbaa !1941
  %inc449 = add i64 %309, 1, !dbg !2605
  store i64 %inc449, i64* %i421, align 8, !dbg !2605, !tbaa !1941
  br label %while.cond.428, !dbg !2575

while.end.450:                                    ; preds = %cond.end.444
  %310 = load i32, i32* %kind301, align 4, !dbg !2606, !tbaa !1883
  %cmp451 = icmp eq i32 %310, 1, !dbg !2607
  br i1 %cmp451, label %cond.true.453, label %cond.false.457, !dbg !2608

cond.true.453:                                    ; preds = %while.end.450
  %311 = load i64, i64* %i421, align 8, !dbg !2609, !tbaa !1941
  %inc454 = add i64 %311, 1, !dbg !2609
  store i64 %inc454, i64* %i421, align 8, !dbg !2609, !tbaa !1941
  %312 = load i8*, i8** %in_str, align 8, !dbg !2610, !tbaa !1876
  %arrayidx455 = getelementptr i8, i8* %312, i64 %311, !dbg !2611
  %313 = load i8, i8* %arrayidx455, align 1, !dbg !2611, !tbaa !2065
  %conv456 = zext i8 %313 to i32, !dbg !2611
  br label %cond.end.469, !dbg !2608

cond.false.457:                                   ; preds = %while.end.450
  %314 = load i32, i32* %kind301, align 4, !dbg !2612, !tbaa !1883
  %cmp458 = icmp eq i32 %314, 2, !dbg !2613
  br i1 %cmp458, label %cond.true.460, label %cond.false.464, !dbg !2614

cond.true.460:                                    ; preds = %cond.false.457
  %315 = load i64, i64* %i421, align 8, !dbg !2615, !tbaa !1941
  %inc461 = add i64 %315, 1, !dbg !2615
  store i64 %inc461, i64* %i421, align 8, !dbg !2615, !tbaa !1941
  %316 = load i8*, i8** %in_str, align 8, !dbg !2616, !tbaa !1876
  %317 = bitcast i8* %316 to i16*, !dbg !2617
  %arrayidx462 = getelementptr i16, i16* %317, i64 %315, !dbg !2618
  %318 = load i16, i16* %arrayidx462, align 2, !dbg !2618, !tbaa !2103
  %conv463 = zext i16 %318 to i32, !dbg !2618
  br label %cond.end.467, !dbg !2614

cond.false.464:                                   ; preds = %cond.false.457
  %319 = load i64, i64* %i421, align 8, !dbg !2619, !tbaa !1941
  %inc465 = add i64 %319, 1, !dbg !2619
  store i64 %inc465, i64* %i421, align 8, !dbg !2619, !tbaa !1941
  %320 = load i8*, i8** %in_str, align 8, !dbg !2620, !tbaa !1876
  %321 = bitcast i8* %320 to i32*, !dbg !2621
  %arrayidx466 = getelementptr i32, i32* %321, i64 %319, !dbg !2622
  %322 = load i32, i32* %arrayidx466, align 4, !dbg !2622, !tbaa !1883
  br label %cond.end.467, !dbg !2614

cond.end.467:                                     ; preds = %cond.false.464, %cond.true.460
  %cond468 = phi i32 [ %conv463, %cond.true.460 ], [ %322, %cond.false.464 ], !dbg !2614
  br label %cond.end.469, !dbg !2623

cond.end.469:                                     ; preds = %cond.end.467, %cond.true.453
  %cond470 = phi i32 [ %conv456, %cond.true.453 ], [ %cond468, %cond.end.467 ], !dbg !2608
  store i32 %cond470, i32* %c427, align 4, !dbg !2625, !tbaa !1883
  %323 = load i32, i32* %c427, align 4, !dbg !2627, !tbaa !1883
  %cmp471 = icmp eq i32 %323, 10, !dbg !2629
  br i1 %cmp471, label %if.then.473, label %if.else.475, !dbg !2630

if.then.473:                                      ; preds = %cond.end.469
  %324 = load i32, i32* %seennl, align 4, !dbg !2631, !tbaa !1883
  %or474 = or i32 %324, 2, !dbg !2631
  store i32 %or474, i32* %seennl, align 4, !dbg !2631, !tbaa !1883
  br label %if.end.505, !dbg !2632

if.else.475:                                      ; preds = %cond.end.469
  %325 = load i32, i32* %c427, align 4, !dbg !2633, !tbaa !1883
  %cmp476 = icmp eq i32 %325, 13, !dbg !2635
  br i1 %cmp476, label %if.then.478, label %if.end.504, !dbg !2636

if.then.478:                                      ; preds = %if.else.475
  %326 = load i32, i32* %kind301, align 4, !dbg !2637, !tbaa !1883
  %cmp479 = icmp eq i32 %326, 1, !dbg !2640
  br i1 %cmp479, label %cond.true.481, label %cond.false.484, !dbg !2641

cond.true.481:                                    ; preds = %if.then.478
  %327 = load i64, i64* %i421, align 8, !dbg !2642, !tbaa !1941
  %328 = load i8*, i8** %in_str, align 8, !dbg !2644, !tbaa !1876
  %arrayidx482 = getelementptr i8, i8* %328, i64 %327, !dbg !2645
  %329 = load i8, i8* %arrayidx482, align 1, !dbg !2645, !tbaa !2065
  %conv483 = zext i8 %329 to i32, !dbg !2645
  br label %cond.end.494, !dbg !2641

cond.false.484:                                   ; preds = %if.then.478
  %330 = load i32, i32* %kind301, align 4, !dbg !2646, !tbaa !1883
  %cmp485 = icmp eq i32 %330, 2, !dbg !2648
  br i1 %cmp485, label %cond.true.487, label %cond.false.490, !dbg !2649

cond.true.487:                                    ; preds = %cond.false.484
  %331 = load i64, i64* %i421, align 8, !dbg !2650, !tbaa !1941
  %332 = load i8*, i8** %in_str, align 8, !dbg !2652, !tbaa !1876
  %333 = bitcast i8* %332 to i16*, !dbg !2653
  %arrayidx488 = getelementptr i16, i16* %333, i64 %331, !dbg !2654
  %334 = load i16, i16* %arrayidx488, align 2, !dbg !2654, !tbaa !2103
  %conv489 = zext i16 %334 to i32, !dbg !2654
  br label %cond.end.492, !dbg !2649

cond.false.490:                                   ; preds = %cond.false.484
  %335 = load i64, i64* %i421, align 8, !dbg !2655, !tbaa !1941
  %336 = load i8*, i8** %in_str, align 8, !dbg !2657, !tbaa !1876
  %337 = bitcast i8* %336 to i32*, !dbg !2658
  %arrayidx491 = getelementptr i32, i32* %337, i64 %335, !dbg !2659
  %338 = load i32, i32* %arrayidx491, align 4, !dbg !2659, !tbaa !1883
  br label %cond.end.492, !dbg !2649

cond.end.492:                                     ; preds = %cond.false.490, %cond.true.487
  %cond493 = phi i32 [ %conv489, %cond.true.487 ], [ %338, %cond.false.490 ], !dbg !2649
  br label %cond.end.494, !dbg !2660

cond.end.494:                                     ; preds = %cond.end.492, %cond.true.481
  %cond495 = phi i32 [ %conv483, %cond.true.481 ], [ %cond493, %cond.end.492 ], !dbg !2641
  %cmp496 = icmp eq i32 %cond495, 10, !dbg !2663
  br i1 %cmp496, label %if.then.498, label %if.else.501, !dbg !2666

if.then.498:                                      ; preds = %cond.end.494
  %339 = load i32, i32* %seennl, align 4, !dbg !2667, !tbaa !1883
  %or499 = or i32 %339, 4, !dbg !2667
  store i32 %or499, i32* %seennl, align 4, !dbg !2667, !tbaa !1883
  %340 = load i64, i64* %i421, align 8, !dbg !2669, !tbaa !1941
  %inc500 = add i64 %340, 1, !dbg !2669
  store i64 %inc500, i64* %i421, align 8, !dbg !2669, !tbaa !1941
  br label %if.end.503, !dbg !2670

if.else.501:                                      ; preds = %cond.end.494
  %341 = load i32, i32* %seennl, align 4, !dbg !2671, !tbaa !1883
  %or502 = or i32 %341, 1, !dbg !2671
  store i32 %or502, i32* %seennl, align 4, !dbg !2671, !tbaa !1883
  br label %if.end.503

if.end.503:                                       ; preds = %if.else.501, %if.then.498
  br label %if.end.504, !dbg !2672

if.end.504:                                       ; preds = %if.end.503, %if.else.475
  br label %if.end.505

if.end.505:                                       ; preds = %if.end.504, %if.then.473
  %342 = load i64, i64* %i421, align 8, !dbg !2673, !tbaa !1941
  %343 = load i64, i64* %len, align 8, !dbg !2675, !tbaa !1941
  %cmp506 = icmp sge i64 %342, %343, !dbg !2676
  br i1 %cmp506, label %if.then.508, label %if.end.509, !dbg !2677

if.then.508:                                      ; preds = %if.end.505
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.514, !dbg !2678

if.end.509:                                       ; preds = %if.end.505
  %344 = load i32, i32* %seennl, align 4, !dbg !2679, !tbaa !1883
  %cmp510 = icmp eq i32 %344, 7, !dbg !2681
  br i1 %cmp510, label %if.then.512, label %if.end.513, !dbg !2682

if.then.512:                                      ; preds = %if.end.509
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.514, !dbg !2683

if.end.513:                                       ; preds = %if.end.509
  store i32 0, i32* %cleanup.dest.slot, !dbg !2684
  br label %cleanup.514, !dbg !2684

cleanup.514:                                      ; preds = %if.end.513, %if.then.512, %if.then.508
  %345 = bitcast i32* %c427 to i8*, !dbg !2685
  call void @llvm.lifetime.end(i64 4, i8* %345) #2, !dbg !2685
  %cleanup.dest.515 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.515, label %unreachable [
    i32 0, label %cleanup.cont.516
    i32 15, label %for.end.517
  ]

cleanup.cont.516:                                 ; preds = %cleanup.514
  br label %for.cond.426, !dbg !2687

for.end.517:                                      ; preds = %cleanup.514
  br label %endscan, !dbg !2688

endscan:                                          ; preds = %for.end.517, %if.then.424
  %346 = bitcast i64* %i421 to i8*, !dbg !2689
  call void @llvm.lifetime.end(i64 8, i8* %346) #2, !dbg !2689
  br label %if.end.707, !dbg !2690

if.else.518:                                      ; preds = %if.else.414
  %347 = bitcast i8** %translated to i8*, !dbg !2691
  call void @llvm.lifetime.start(i64 8, i8* %347) #2, !dbg !2691
  call void @llvm.dbg.declare(metadata i8** %translated, metadata !505, metadata !1880), !dbg !2692
  %348 = bitcast i32* %kind519 to i8*, !dbg !2693
  call void @llvm.lifetime.start(i64 4, i8* %348) #2, !dbg !2693
  call void @llvm.dbg.declare(metadata i32* %kind519, metadata !507, metadata !1880), !dbg !2694
  %349 = load %struct._object*, %struct._object** %output, align 8, !dbg !2695, !tbaa !1876
  %350 = bitcast %struct._object* %349 to %struct.PyASCIIObject*, !dbg !2696
  %state520 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %350, i32 0, i32 3, !dbg !2697
  %351 = bitcast %struct.anon* %state520 to i32*, !dbg !2698
  %bf.load521 = load i32, i32* %351, align 4, !dbg !2698
  %bf.lshr522 = lshr i32 %bf.load521, 2, !dbg !2698
  %bf.clear523 = and i32 %bf.lshr522, 7, !dbg !2698
  store i32 %bf.clear523, i32* %kind519, align 4, !dbg !2694, !tbaa !1883
  %352 = bitcast i8** %in_str524 to i8*, !dbg !2699
  call void @llvm.lifetime.start(i64 8, i8* %352) #2, !dbg !2699
  call void @llvm.dbg.declare(metadata i8** %in_str524, metadata !508, metadata !1880), !dbg !2700
  %353 = load %struct._object*, %struct._object** %output, align 8, !dbg !2701, !tbaa !1876
  %354 = bitcast %struct._object* %353 to %struct.PyASCIIObject*, !dbg !2702
  %state525 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %354, i32 0, i32 3, !dbg !2703
  %355 = bitcast %struct.anon* %state525 to i32*, !dbg !2704
  %bf.load526 = load i32, i32* %355, align 4, !dbg !2704
  %bf.lshr527 = lshr i32 %bf.load526, 5, !dbg !2704
  %bf.clear528 = and i32 %bf.lshr527, 1, !dbg !2704
  %tobool529 = icmp ne i32 %bf.clear528, 0, !dbg !2705
  br i1 %tobool529, label %cond.true.530, label %cond.false.542, !dbg !2705

cond.true.530:                                    ; preds = %if.else.518
  %356 = load %struct._object*, %struct._object** %output, align 8, !dbg !2706, !tbaa !1876
  %357 = bitcast %struct._object* %356 to %struct.PyASCIIObject*, !dbg !2708
  %state531 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %357, i32 0, i32 3, !dbg !2709
  %358 = bitcast %struct.anon* %state531 to i32*, !dbg !2710
  %bf.load532 = load i32, i32* %358, align 4, !dbg !2710
  %bf.lshr533 = lshr i32 %bf.load532, 6, !dbg !2710
  %bf.clear534 = and i32 %bf.lshr533, 1, !dbg !2710
  %tobool535 = icmp ne i32 %bf.clear534, 0, !dbg !2711
  br i1 %tobool535, label %cond.true.536, label %cond.false.538, !dbg !2711

cond.true.536:                                    ; preds = %cond.true.530
  %359 = load %struct._object*, %struct._object** %output, align 8, !dbg !2712, !tbaa !1876
  %360 = bitcast %struct._object* %359 to %struct.PyASCIIObject*, !dbg !2714
  %add.ptr537 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %360, i64 1, !dbg !2715
  %361 = bitcast %struct.PyASCIIObject* %add.ptr537 to i8*, !dbg !2716
  br label %cond.end.540, !dbg !2711

cond.false.538:                                   ; preds = %cond.true.530
  %362 = load %struct._object*, %struct._object** %output, align 8, !dbg !2717, !tbaa !1876
  %363 = bitcast %struct._object* %362 to %struct.PyCompactUnicodeObject*, !dbg !2719
  %add.ptr539 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %363, i64 1, !dbg !2720
  %364 = bitcast %struct.PyCompactUnicodeObject* %add.ptr539 to i8*, !dbg !2721
  br label %cond.end.540, !dbg !2711

cond.end.540:                                     ; preds = %cond.false.538, %cond.true.536
  %cond541 = phi i8* [ %361, %cond.true.536 ], [ %364, %cond.false.538 ], !dbg !2711
  br label %cond.end.545, !dbg !2722

cond.false.542:                                   ; preds = %if.else.518
  %365 = load %struct._object*, %struct._object** %output, align 8, !dbg !2725, !tbaa !1876
  %366 = bitcast %struct._object* %365 to %struct.PyUnicodeObject*, !dbg !2727
  %data543 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %366, i32 0, i32 1, !dbg !2728
  %any544 = bitcast %union.anon* %data543 to i8**, !dbg !2729
  %367 = load i8*, i8** %any544, align 8, !dbg !2729, !tbaa !1876
  br label %cond.end.545, !dbg !2705

cond.end.545:                                     ; preds = %cond.false.542, %cond.end.540
  %cond546 = phi i8* [ %cond541, %cond.end.540 ], [ %367, %cond.false.542 ], !dbg !2705
  store i8* %cond546, i8** %in_str524, align 8, !dbg !2730, !tbaa !1876
  %368 = bitcast i64* %in to i8*, !dbg !2733
  call void @llvm.lifetime.start(i64 8, i8* %368) #2, !dbg !2733
  call void @llvm.dbg.declare(metadata i64* %in, metadata !509, metadata !1880), !dbg !2734
  %369 = bitcast i64* %out547 to i8*, !dbg !2733
  call void @llvm.lifetime.start(i64 8, i8* %369) #2, !dbg !2733
  call void @llvm.dbg.declare(metadata i64* %out547, metadata !510, metadata !1880), !dbg !2735
  %370 = load i32, i32* %kind519, align 4, !dbg !2736, !tbaa !1883
  %conv548 = sext i32 %370 to i64, !dbg !2736
  %371 = load i64, i64* %len, align 8, !dbg !2737, !tbaa !1941
  %mul549 = mul i64 %conv548, %371, !dbg !2738
  %call550 = call i8* @PyMem_Malloc(i64 %mul549), !dbg !2739
  store i8* %call550, i8** %translated, align 8, !dbg !2740, !tbaa !1876
  %372 = load i8*, i8** %translated, align 8, !dbg !2741, !tbaa !1876
  %cmp551 = icmp eq i8* %372, null, !dbg !2743
  br i1 %cmp551, label %if.then.553, label %if.end.555, !dbg !2744

if.then.553:                                      ; preds = %cond.end.545
  %call554 = call %struct._object* @PyErr_NoMemory(), !dbg !2745
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.700, !dbg !2747

if.end.555:                                       ; preds = %cond.end.545
  store i64 0, i64* %out547, align 8, !dbg !2748, !tbaa !1941
  store i64 0, i64* %in, align 8, !dbg !2749, !tbaa !1941
  br label %for.cond.556, !dbg !2750

for.cond.556:                                     ; preds = %cleanup.cont.681, %cleanup.679, %if.end.555
  %373 = bitcast i32* %c557 to i8*, !dbg !2751
  call void @llvm.lifetime.start(i64 4, i8* %373) #2, !dbg !2751
  call void @llvm.dbg.declare(metadata i32* %c557, metadata !511, metadata !1880), !dbg !2752
  br label %while.cond.558, !dbg !2753

while.cond.558:                                   ; preds = %do.end.596, %for.cond.556
  %374 = load i32, i32* %kind519, align 4, !dbg !2754, !tbaa !1883
  %cmp559 = icmp eq i32 %374, 1, !dbg !2757
  br i1 %cmp559, label %cond.true.561, label %cond.false.565, !dbg !2758

cond.true.561:                                    ; preds = %while.cond.558
  %375 = load i64, i64* %in, align 8, !dbg !2759, !tbaa !1941
  %inc562 = add i64 %375, 1, !dbg !2759
  store i64 %inc562, i64* %in, align 8, !dbg !2759, !tbaa !1941
  %376 = load i8*, i8** %in_str524, align 8, !dbg !2761, !tbaa !1876
  %arrayidx563 = getelementptr i8, i8* %376, i64 %375, !dbg !2762
  %377 = load i8, i8* %arrayidx563, align 1, !dbg !2762, !tbaa !2065
  %conv564 = zext i8 %377 to i32, !dbg !2762
  br label %cond.end.577, !dbg !2758

cond.false.565:                                   ; preds = %while.cond.558
  %378 = load i32, i32* %kind519, align 4, !dbg !2763, !tbaa !1883
  %cmp566 = icmp eq i32 %378, 2, !dbg !2765
  br i1 %cmp566, label %cond.true.568, label %cond.false.572, !dbg !2766

cond.true.568:                                    ; preds = %cond.false.565
  %379 = load i64, i64* %in, align 8, !dbg !2767, !tbaa !1941
  %inc569 = add i64 %379, 1, !dbg !2767
  store i64 %inc569, i64* %in, align 8, !dbg !2767, !tbaa !1941
  %380 = load i8*, i8** %in_str524, align 8, !dbg !2769, !tbaa !1876
  %381 = bitcast i8* %380 to i16*, !dbg !2770
  %arrayidx570 = getelementptr i16, i16* %381, i64 %379, !dbg !2771
  %382 = load i16, i16* %arrayidx570, align 2, !dbg !2771, !tbaa !2103
  %conv571 = zext i16 %382 to i32, !dbg !2771
  br label %cond.end.575, !dbg !2766

cond.false.572:                                   ; preds = %cond.false.565
  %383 = load i64, i64* %in, align 8, !dbg !2772, !tbaa !1941
  %inc573 = add i64 %383, 1, !dbg !2772
  store i64 %inc573, i64* %in, align 8, !dbg !2772, !tbaa !1941
  %384 = load i8*, i8** %in_str524, align 8, !dbg !2774, !tbaa !1876
  %385 = bitcast i8* %384 to i32*, !dbg !2775
  %arrayidx574 = getelementptr i32, i32* %385, i64 %383, !dbg !2776
  %386 = load i32, i32* %arrayidx574, align 4, !dbg !2776, !tbaa !1883
  br label %cond.end.575, !dbg !2766

cond.end.575:                                     ; preds = %cond.false.572, %cond.true.568
  %cond576 = phi i32 [ %conv571, %cond.true.568 ], [ %386, %cond.false.572 ], !dbg !2766
  br label %cond.end.577, !dbg !2777

cond.end.577:                                     ; preds = %cond.end.575, %cond.true.561
  %cond578 = phi i32 [ %conv564, %cond.true.561 ], [ %cond576, %cond.end.575 ], !dbg !2758
  store i32 %cond578, i32* %c557, align 4, !dbg !2780, !tbaa !1883
  %cmp579 = icmp ugt i32 %cond578, 13, !dbg !2783
  br i1 %cmp579, label %while.body.581, label %while.end.597, !dbg !2753

while.body.581:                                   ; preds = %cond.end.577
  br label %do.body.582, !dbg !2784

do.body.582:                                      ; preds = %while.body.581
  %387 = load i32, i32* %kind519, align 4, !dbg !2785, !tbaa !1883
  switch i32 %387, label %sw.default.591 [
    i32 1, label %sw.bb.583
    i32 2, label %sw.bb.587
  ], !dbg !2788

sw.bb.583:                                        ; preds = %do.body.582
  %388 = load i32, i32* %c557, align 4, !dbg !2789, !tbaa !1883
  %conv584 = trunc i32 %388 to i8, !dbg !2793
  %389 = load i64, i64* %out547, align 8, !dbg !2794, !tbaa !1941
  %inc585 = add i64 %389, 1, !dbg !2794
  store i64 %inc585, i64* %out547, align 8, !dbg !2794, !tbaa !1941
  %390 = load i8*, i8** %translated, align 8, !dbg !2795, !tbaa !1876
  %arrayidx586 = getelementptr i8, i8* %390, i64 %389, !dbg !2796
  store i8 %conv584, i8* %arrayidx586, align 1, !dbg !2797, !tbaa !2065
  br label %sw.epilog.594, !dbg !2798

sw.bb.587:                                        ; preds = %do.body.582
  %391 = load i32, i32* %c557, align 4, !dbg !2799, !tbaa !1883
  %conv588 = trunc i32 %391 to i16, !dbg !2802
  %392 = load i64, i64* %out547, align 8, !dbg !2803, !tbaa !1941
  %inc589 = add i64 %392, 1, !dbg !2803
  store i64 %inc589, i64* %out547, align 8, !dbg !2803, !tbaa !1941
  %393 = load i8*, i8** %translated, align 8, !dbg !2804, !tbaa !1876
  %394 = bitcast i8* %393 to i16*, !dbg !2805
  %arrayidx590 = getelementptr i16, i16* %394, i64 %392, !dbg !2806
  store i16 %conv588, i16* %arrayidx590, align 2, !dbg !2807, !tbaa !2103
  br label %sw.epilog.594, !dbg !2808

sw.default.591:                                   ; preds = %do.body.582
  %395 = load i32, i32* %c557, align 4, !dbg !2809, !tbaa !1883
  %396 = load i64, i64* %out547, align 8, !dbg !2812, !tbaa !1941
  %inc592 = add i64 %396, 1, !dbg !2812
  store i64 %inc592, i64* %out547, align 8, !dbg !2812, !tbaa !1941
  %397 = load i8*, i8** %translated, align 8, !dbg !2813, !tbaa !1876
  %398 = bitcast i8* %397 to i32*, !dbg !2814
  %arrayidx593 = getelementptr i32, i32* %398, i64 %396, !dbg !2815
  store i32 %395, i32* %arrayidx593, align 4, !dbg !2816, !tbaa !1883
  br label %sw.epilog.594, !dbg !2817

sw.epilog.594:                                    ; preds = %sw.default.591, %sw.bb.587, %sw.bb.583
  br label %do.cond.595, !dbg !2818

do.cond.595:                                      ; preds = %sw.epilog.594
  br label %do.end.596, !dbg !2822

do.end.596:                                       ; preds = %do.cond.595
  br label %while.cond.558, !dbg !2753

while.end.597:                                    ; preds = %cond.end.577
  %399 = load i32, i32* %c557, align 4, !dbg !2824, !tbaa !1883
  %cmp598 = icmp eq i32 %399, 10, !dbg !2826
  br i1 %cmp598, label %if.then.600, label %if.end.617, !dbg !2827

if.then.600:                                      ; preds = %while.end.597
  br label %do.body.601, !dbg !2828

do.body.601:                                      ; preds = %if.then.600
  %400 = load i32, i32* %kind519, align 4, !dbg !2830, !tbaa !1883
  switch i32 %400, label %sw.default.610 [
    i32 1, label %sw.bb.602
    i32 2, label %sw.bb.606
  ], !dbg !2833

sw.bb.602:                                        ; preds = %do.body.601
  %401 = load i32, i32* %c557, align 4, !dbg !2834, !tbaa !1883
  %conv603 = trunc i32 %401 to i8, !dbg !2838
  %402 = load i64, i64* %out547, align 8, !dbg !2839, !tbaa !1941
  %inc604 = add i64 %402, 1, !dbg !2839
  store i64 %inc604, i64* %out547, align 8, !dbg !2839, !tbaa !1941
  %403 = load i8*, i8** %translated, align 8, !dbg !2840, !tbaa !1876
  %arrayidx605 = getelementptr i8, i8* %403, i64 %402, !dbg !2841
  store i8 %conv603, i8* %arrayidx605, align 1, !dbg !2842, !tbaa !2065
  br label %sw.epilog.613, !dbg !2843

sw.bb.606:                                        ; preds = %do.body.601
  %404 = load i32, i32* %c557, align 4, !dbg !2844, !tbaa !1883
  %conv607 = trunc i32 %404 to i16, !dbg !2847
  %405 = load i64, i64* %out547, align 8, !dbg !2848, !tbaa !1941
  %inc608 = add i64 %405, 1, !dbg !2848
  store i64 %inc608, i64* %out547, align 8, !dbg !2848, !tbaa !1941
  %406 = load i8*, i8** %translated, align 8, !dbg !2849, !tbaa !1876
  %407 = bitcast i8* %406 to i16*, !dbg !2850
  %arrayidx609 = getelementptr i16, i16* %407, i64 %405, !dbg !2851
  store i16 %conv607, i16* %arrayidx609, align 2, !dbg !2852, !tbaa !2103
  br label %sw.epilog.613, !dbg !2853

sw.default.610:                                   ; preds = %do.body.601
  %408 = load i32, i32* %c557, align 4, !dbg !2854, !tbaa !1883
  %409 = load i64, i64* %out547, align 8, !dbg !2857, !tbaa !1941
  %inc611 = add i64 %409, 1, !dbg !2857
  store i64 %inc611, i64* %out547, align 8, !dbg !2857, !tbaa !1941
  %410 = load i8*, i8** %translated, align 8, !dbg !2858, !tbaa !1876
  %411 = bitcast i8* %410 to i32*, !dbg !2859
  %arrayidx612 = getelementptr i32, i32* %411, i64 %409, !dbg !2860
  store i32 %408, i32* %arrayidx612, align 4, !dbg !2861, !tbaa !1883
  br label %sw.epilog.613, !dbg !2862

sw.epilog.613:                                    ; preds = %sw.default.610, %sw.bb.606, %sw.bb.602
  br label %do.cond.614, !dbg !2863

do.cond.614:                                      ; preds = %sw.epilog.613
  br label %do.end.615, !dbg !2867

do.end.615:                                       ; preds = %do.cond.614
  %412 = load i32, i32* %seennl, align 4, !dbg !2869, !tbaa !1883
  %or616 = or i32 %412, 2, !dbg !2869
  store i32 %or616, i32* %seennl, align 4, !dbg !2869, !tbaa !1883
  store i32 20, i32* %cleanup.dest.slot
  br label %cleanup.679, !dbg !2870

if.end.617:                                       ; preds = %while.end.597
  %413 = load i32, i32* %c557, align 4, !dbg !2871, !tbaa !1883
  %cmp618 = icmp eq i32 %413, 13, !dbg !2873
  br i1 %cmp618, label %if.then.620, label %if.end.659, !dbg !2874

if.then.620:                                      ; preds = %if.end.617
  %414 = load i32, i32* %kind519, align 4, !dbg !2875, !tbaa !1883
  %cmp621 = icmp eq i32 %414, 1, !dbg !2878
  br i1 %cmp621, label %cond.true.623, label %cond.false.626, !dbg !2879

cond.true.623:                                    ; preds = %if.then.620
  %415 = load i64, i64* %in, align 8, !dbg !2880, !tbaa !1941
  %416 = load i8*, i8** %in_str524, align 8, !dbg !2882, !tbaa !1876
  %arrayidx624 = getelementptr i8, i8* %416, i64 %415, !dbg !2883
  %417 = load i8, i8* %arrayidx624, align 1, !dbg !2883, !tbaa !2065
  %conv625 = zext i8 %417 to i32, !dbg !2883
  br label %cond.end.636, !dbg !2879

cond.false.626:                                   ; preds = %if.then.620
  %418 = load i32, i32* %kind519, align 4, !dbg !2884, !tbaa !1883
  %cmp627 = icmp eq i32 %418, 2, !dbg !2886
  br i1 %cmp627, label %cond.true.629, label %cond.false.632, !dbg !2887

cond.true.629:                                    ; preds = %cond.false.626
  %419 = load i64, i64* %in, align 8, !dbg !2888, !tbaa !1941
  %420 = load i8*, i8** %in_str524, align 8, !dbg !2890, !tbaa !1876
  %421 = bitcast i8* %420 to i16*, !dbg !2891
  %arrayidx630 = getelementptr i16, i16* %421, i64 %419, !dbg !2892
  %422 = load i16, i16* %arrayidx630, align 2, !dbg !2892, !tbaa !2103
  %conv631 = zext i16 %422 to i32, !dbg !2892
  br label %cond.end.634, !dbg !2887

cond.false.632:                                   ; preds = %cond.false.626
  %423 = load i64, i64* %in, align 8, !dbg !2893, !tbaa !1941
  %424 = load i8*, i8** %in_str524, align 8, !dbg !2895, !tbaa !1876
  %425 = bitcast i8* %424 to i32*, !dbg !2896
  %arrayidx633 = getelementptr i32, i32* %425, i64 %423, !dbg !2897
  %426 = load i32, i32* %arrayidx633, align 4, !dbg !2897, !tbaa !1883
  br label %cond.end.634, !dbg !2887

cond.end.634:                                     ; preds = %cond.false.632, %cond.true.629
  %cond635 = phi i32 [ %conv631, %cond.true.629 ], [ %426, %cond.false.632 ], !dbg !2887
  br label %cond.end.636, !dbg !2898

cond.end.636:                                     ; preds = %cond.end.634, %cond.true.623
  %cond637 = phi i32 [ %conv625, %cond.true.623 ], [ %cond635, %cond.end.634 ], !dbg !2879
  %cmp638 = icmp eq i32 %cond637, 10, !dbg !2901
  br i1 %cmp638, label %if.then.640, label %if.else.643, !dbg !2904

if.then.640:                                      ; preds = %cond.end.636
  %427 = load i64, i64* %in, align 8, !dbg !2905, !tbaa !1941
  %inc641 = add i64 %427, 1, !dbg !2905
  store i64 %inc641, i64* %in, align 8, !dbg !2905, !tbaa !1941
  %428 = load i32, i32* %seennl, align 4, !dbg !2907, !tbaa !1883
  %or642 = or i32 %428, 4, !dbg !2907
  store i32 %or642, i32* %seennl, align 4, !dbg !2907, !tbaa !1883
  br label %if.end.645, !dbg !2908

if.else.643:                                      ; preds = %cond.end.636
  %429 = load i32, i32* %seennl, align 4, !dbg !2909, !tbaa !1883
  %or644 = or i32 %429, 1, !dbg !2909
  store i32 %or644, i32* %seennl, align 4, !dbg !2909, !tbaa !1883
  br label %if.end.645

if.end.645:                                       ; preds = %if.else.643, %if.then.640
  br label %do.body.646, !dbg !2910

do.body.646:                                      ; preds = %if.end.645
  %430 = load i32, i32* %kind519, align 4, !dbg !2911, !tbaa !1883
  switch i32 %430, label %sw.default.653 [
    i32 1, label %sw.bb.647
    i32 2, label %sw.bb.650
  ], !dbg !2914

sw.bb.647:                                        ; preds = %do.body.646
  %431 = load i64, i64* %out547, align 8, !dbg !2915, !tbaa !1941
  %inc648 = add i64 %431, 1, !dbg !2915
  store i64 %inc648, i64* %out547, align 8, !dbg !2915, !tbaa !1941
  %432 = load i8*, i8** %translated, align 8, !dbg !2919, !tbaa !1876
  %arrayidx649 = getelementptr i8, i8* %432, i64 %431, !dbg !2920
  store i8 10, i8* %arrayidx649, align 1, !dbg !2921, !tbaa !2065
  br label %sw.epilog.656, !dbg !2922

sw.bb.650:                                        ; preds = %do.body.646
  %433 = load i64, i64* %out547, align 8, !dbg !2923, !tbaa !1941
  %inc651 = add i64 %433, 1, !dbg !2923
  store i64 %inc651, i64* %out547, align 8, !dbg !2923, !tbaa !1941
  %434 = load i8*, i8** %translated, align 8, !dbg !2926, !tbaa !1876
  %435 = bitcast i8* %434 to i16*, !dbg !2927
  %arrayidx652 = getelementptr i16, i16* %435, i64 %433, !dbg !2928
  store i16 10, i16* %arrayidx652, align 2, !dbg !2929, !tbaa !2103
  br label %sw.epilog.656, !dbg !2930

sw.default.653:                                   ; preds = %do.body.646
  %436 = load i64, i64* %out547, align 8, !dbg !2931, !tbaa !1941
  %inc654 = add i64 %436, 1, !dbg !2931
  store i64 %inc654, i64* %out547, align 8, !dbg !2931, !tbaa !1941
  %437 = load i8*, i8** %translated, align 8, !dbg !2934, !tbaa !1876
  %438 = bitcast i8* %437 to i32*, !dbg !2935
  %arrayidx655 = getelementptr i32, i32* %438, i64 %436, !dbg !2936
  store i32 10, i32* %arrayidx655, align 4, !dbg !2937, !tbaa !1883
  br label %sw.epilog.656, !dbg !2938

sw.epilog.656:                                    ; preds = %sw.default.653, %sw.bb.650, %sw.bb.647
  br label %do.cond.657, !dbg !2939

do.cond.657:                                      ; preds = %sw.epilog.656
  br label %do.end.658, !dbg !2943

do.end.658:                                       ; preds = %do.cond.657
  store i32 20, i32* %cleanup.dest.slot
  br label %cleanup.679, !dbg !2945

if.end.659:                                       ; preds = %if.end.617
  %439 = load i64, i64* %in, align 8, !dbg !2946, !tbaa !1941
  %440 = load i64, i64* %len, align 8, !dbg !2948, !tbaa !1941
  %cmp660 = icmp sgt i64 %439, %440, !dbg !2949
  br i1 %cmp660, label %if.then.662, label %if.end.663, !dbg !2950

if.then.662:                                      ; preds = %if.end.659
  store i32 19, i32* %cleanup.dest.slot
  br label %cleanup.679, !dbg !2951

if.end.663:                                       ; preds = %if.end.659
  br label %do.body.664, !dbg !2952

do.body.664:                                      ; preds = %if.end.663
  %441 = load i32, i32* %kind519, align 4, !dbg !2953, !tbaa !1883
  switch i32 %441, label %sw.default.673 [
    i32 1, label %sw.bb.665
    i32 2, label %sw.bb.669
  ], !dbg !2956

sw.bb.665:                                        ; preds = %do.body.664
  %442 = load i32, i32* %c557, align 4, !dbg !2957, !tbaa !1883
  %conv666 = trunc i32 %442 to i8, !dbg !2961
  %443 = load i64, i64* %out547, align 8, !dbg !2962, !tbaa !1941
  %inc667 = add i64 %443, 1, !dbg !2962
  store i64 %inc667, i64* %out547, align 8, !dbg !2962, !tbaa !1941
  %444 = load i8*, i8** %translated, align 8, !dbg !2963, !tbaa !1876
  %arrayidx668 = getelementptr i8, i8* %444, i64 %443, !dbg !2964
  store i8 %conv666, i8* %arrayidx668, align 1, !dbg !2965, !tbaa !2065
  br label %sw.epilog.676, !dbg !2966

sw.bb.669:                                        ; preds = %do.body.664
  %445 = load i32, i32* %c557, align 4, !dbg !2967, !tbaa !1883
  %conv670 = trunc i32 %445 to i16, !dbg !2970
  %446 = load i64, i64* %out547, align 8, !dbg !2971, !tbaa !1941
  %inc671 = add i64 %446, 1, !dbg !2971
  store i64 %inc671, i64* %out547, align 8, !dbg !2971, !tbaa !1941
  %447 = load i8*, i8** %translated, align 8, !dbg !2972, !tbaa !1876
  %448 = bitcast i8* %447 to i16*, !dbg !2973
  %arrayidx672 = getelementptr i16, i16* %448, i64 %446, !dbg !2974
  store i16 %conv670, i16* %arrayidx672, align 2, !dbg !2975, !tbaa !2103
  br label %sw.epilog.676, !dbg !2976

sw.default.673:                                   ; preds = %do.body.664
  %449 = load i32, i32* %c557, align 4, !dbg !2977, !tbaa !1883
  %450 = load i64, i64* %out547, align 8, !dbg !2980, !tbaa !1941
  %inc674 = add i64 %450, 1, !dbg !2980
  store i64 %inc674, i64* %out547, align 8, !dbg !2980, !tbaa !1941
  %451 = load i8*, i8** %translated, align 8, !dbg !2981, !tbaa !1876
  %452 = bitcast i8* %451 to i32*, !dbg !2982
  %arrayidx675 = getelementptr i32, i32* %452, i64 %450, !dbg !2983
  store i32 %449, i32* %arrayidx675, align 4, !dbg !2984, !tbaa !1883
  br label %sw.epilog.676, !dbg !2985

sw.epilog.676:                                    ; preds = %sw.default.673, %sw.bb.669, %sw.bb.665
  br label %do.cond.677, !dbg !2986

do.cond.677:                                      ; preds = %sw.epilog.676
  br label %do.end.678, !dbg !2990

do.end.678:                                       ; preds = %do.cond.677
  store i32 0, i32* %cleanup.dest.slot, !dbg !2992
  br label %cleanup.679, !dbg !2992

cleanup.679:                                      ; preds = %do.end.678, %if.then.662, %do.end.658, %do.end.615
  %453 = bitcast i32* %c557 to i8*, !dbg !2993
  call void @llvm.lifetime.end(i64 4, i8* %453) #2, !dbg !2993
  %cleanup.dest.680 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.680, label %unreachable [
    i32 0, label %cleanup.cont.681
    i32 20, label %for.cond.556
    i32 19, label %for.end.682
  ]

cleanup.cont.681:                                 ; preds = %cleanup.679
  br label %for.cond.556, !dbg !2995

for.end.682:                                      ; preds = %cleanup.679
  br label %do.body.683, !dbg !2996

do.body.683:                                      ; preds = %for.end.682
  %454 = bitcast %struct._object** %_py_decref_tmp684 to i8*, !dbg !2997
  call void @llvm.lifetime.start(i64 8, i8* %454) #2, !dbg !2997
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp684, metadata !515, metadata !1880), !dbg !2999
  %455 = load %struct._object*, %struct._object** %output, align 8, !dbg !3000, !tbaa !1876
  store %struct._object* %455, %struct._object** %_py_decref_tmp684, align 8, !dbg !2999, !tbaa !1876
  %456 = load %struct._object*, %struct._object** %_py_decref_tmp684, align 8, !dbg !3001, !tbaa !1876
  %ob_refcnt685 = getelementptr inbounds %struct._object, %struct._object* %456, i32 0, i32 0, !dbg !3003
  %457 = load i64, i64* %ob_refcnt685, align 8, !dbg !3004, !tbaa !1927
  %dec686 = add i64 %457, -1, !dbg !3004
  store i64 %dec686, i64* %ob_refcnt685, align 8, !dbg !3004, !tbaa !1927
  %cmp687 = icmp ne i64 %dec686, 0, !dbg !3005
  br i1 %cmp687, label %if.then.689, label %if.else.690, !dbg !3006

if.then.689:                                      ; preds = %do.body.683
  br label %if.end.693, !dbg !3007

if.else.690:                                      ; preds = %do.body.683
  %458 = load %struct._object*, %struct._object** %_py_decref_tmp684, align 8, !dbg !3009, !tbaa !1876
  %ob_type691 = getelementptr inbounds %struct._object, %struct._object* %458, i32 0, i32 1, !dbg !3011
  %459 = load %struct._typeobject*, %struct._typeobject** %ob_type691, align 8, !dbg !3011, !tbaa !2195
  %tp_dealloc692 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %459, i32 0, i32 4, !dbg !3012
  %460 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc692, align 8, !dbg !3012, !tbaa !2197
  %461 = load %struct._object*, %struct._object** %_py_decref_tmp684, align 8, !dbg !3013, !tbaa !1876
  call void %460(%struct._object* %461), !dbg !3014
  br label %if.end.693

if.end.693:                                       ; preds = %if.else.690, %if.then.689
  %462 = bitcast %struct._object** %_py_decref_tmp684 to i8*, !dbg !3015
  call void @llvm.lifetime.end(i64 8, i8* %462) #2, !dbg !3015
  br label %do.cond.694, !dbg !3016

do.cond.694:                                      ; preds = %if.end.693
  br label %do.end.695, !dbg !3017

do.end.695:                                       ; preds = %do.cond.694
  %463 = load i32, i32* %kind519, align 4, !dbg !3019, !tbaa !1883
  %464 = load i8*, i8** %translated, align 8, !dbg !3020, !tbaa !1876
  %465 = load i64, i64* %out547, align 8, !dbg !3021, !tbaa !1941
  %call696 = call %struct._object* @PyUnicode_FromKindAndData(i32 %463, i8* %464, i64 %465), !dbg !3022
  store %struct._object* %call696, %struct._object** %output, align 8, !dbg !3023, !tbaa !1876
  %466 = load i8*, i8** %translated, align 8, !dbg !3024, !tbaa !1876
  call void @PyMem_Free(i8* %466), !dbg !3025
  %467 = load %struct._object*, %struct._object** %output, align 8, !dbg !3026, !tbaa !1876
  %tobool697 = icmp ne %struct._object* %467, null, !dbg !3026
  br i1 %tobool697, label %if.end.699, label %if.then.698, !dbg !3028

if.then.698:                                      ; preds = %do.end.695
  store %struct._object* null, %struct._object** %retval, !dbg !3029
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.700, !dbg !3029

if.end.699:                                       ; preds = %do.end.695
  store i32 0, i32* %cleanup.dest.slot, !dbg !3030
  br label %cleanup.700, !dbg !3030

cleanup.700:                                      ; preds = %if.then.553, %if.end.699, %if.then.698
  %468 = bitcast i64* %out547 to i8*, !dbg !3031
  call void @llvm.lifetime.end(i64 8, i8* %468) #2, !dbg !3031
  %469 = bitcast i64* %in to i8*, !dbg !3031
  call void @llvm.lifetime.end(i64 8, i8* %469) #2, !dbg !3031
  %470 = bitcast i8** %in_str524 to i8*, !dbg !3031
  call void @llvm.lifetime.end(i64 8, i8* %470) #2, !dbg !3031
  %471 = bitcast i32* %kind519 to i8*, !dbg !3031
  call void @llvm.lifetime.end(i64 4, i8* %471) #2, !dbg !3031
  %472 = bitcast i8** %translated to i8*, !dbg !3031
  call void @llvm.lifetime.end(i64 8, i8* %472) #2, !dbg !3031
  %cleanup.dest.705 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.705, label %cleanup.719 [
    i32 0, label %cleanup.cont.706
  ]

cleanup.cont.706:                                 ; preds = %cleanup.700
  br label %if.end.707

if.end.707:                                       ; preds = %cleanup.cont.706, %endscan
  br label %if.end.708

if.end.708:                                       ; preds = %if.end.707, %if.end.413
  %473 = load i32, i32* %seennl, align 4, !dbg !3033, !tbaa !1883
  %474 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !3034, !tbaa !1876
  %seennl709 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %474, i32 0, i32 3, !dbg !3035
  %bf.load710 = load i8, i8* %seennl709, align 8, !dbg !3036
  %bf.lshr711 = lshr i8 %bf.load710, 2, !dbg !3036
  %bf.clear712 = and i8 %bf.lshr711, 7, !dbg !3036
  %bf.cast713 = zext i8 %bf.clear712 to i32, !dbg !3036
  %or714 = or i32 %bf.cast713, %473, !dbg !3036
  %475 = trunc i32 %or714 to i8, !dbg !3036
  %bf.load715 = load i8, i8* %seennl709, align 8, !dbg !3036
  %bf.value = and i8 %475, 7, !dbg !3036
  %bf.shl716 = shl i8 %bf.value, 2, !dbg !3036
  %bf.clear717 = and i8 %bf.load715, -29, !dbg !3036
  %bf.set718 = or i8 %bf.clear717, %bf.shl716, !dbg !3036
  store i8 %bf.set718, i8* %seennl709, align 8, !dbg !3036
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !3036
  store i32 0, i32* %cleanup.dest.slot, !dbg !3037
  br label %cleanup.719, !dbg !3037

cleanup.719:                                      ; preds = %if.end.708, %cleanup.700, %if.then.331
  %476 = bitcast i32* %kind301 to i8*, !dbg !3038
  call void @llvm.lifetime.end(i64 4, i8* %476) #2, !dbg !3038
  %477 = bitcast i32* %only_lf to i8*, !dbg !3038
  call void @llvm.lifetime.end(i64 4, i8* %477) #2, !dbg !3038
  %478 = bitcast i32* %seennl to i8*, !dbg !3038
  call void @llvm.lifetime.end(i64 4, i8* %478) #2, !dbg !3038
  %479 = bitcast i64* %len to i8*, !dbg !3038
  call void @llvm.lifetime.end(i64 8, i8* %479) #2, !dbg !3038
  %480 = bitcast i8** %in_str to i8*, !dbg !3038
  call void @llvm.lifetime.end(i64 8, i8* %480) #2, !dbg !3038
  %cleanup.dest.724 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.724, label %cleanup.739 [
    i32 0, label %cleanup.cont.725
    i32 2, label %error
  ]

cleanup.cont.725:                                 ; preds = %cleanup.719
  %481 = load %struct._object*, %struct._object** %output, align 8, !dbg !3040, !tbaa !1876
  store %struct._object* %481, %struct._object** %retval, !dbg !3041
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !3041

error:                                            ; preds = %cleanup.719, %cleanup.291, %cleanup
  br label %do.body.726, !dbg !3042

do.body.726:                                      ; preds = %error
  %482 = bitcast %struct._object** %_py_decref_tmp727 to i8*, !dbg !3043
  call void @llvm.lifetime.start(i64 8, i8* %482) #2, !dbg !3043
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp727, metadata !517, metadata !1880), !dbg !3045
  %483 = load %struct._object*, %struct._object** %output, align 8, !dbg !3046, !tbaa !1876
  store %struct._object* %483, %struct._object** %_py_decref_tmp727, align 8, !dbg !3045, !tbaa !1876
  %484 = load %struct._object*, %struct._object** %_py_decref_tmp727, align 8, !dbg !3047, !tbaa !1876
  %ob_refcnt728 = getelementptr inbounds %struct._object, %struct._object* %484, i32 0, i32 0, !dbg !3049
  %485 = load i64, i64* %ob_refcnt728, align 8, !dbg !3050, !tbaa !1927
  %dec729 = add i64 %485, -1, !dbg !3050
  store i64 %dec729, i64* %ob_refcnt728, align 8, !dbg !3050, !tbaa !1927
  %cmp730 = icmp ne i64 %dec729, 0, !dbg !3051
  br i1 %cmp730, label %if.then.732, label %if.else.733, !dbg !3052

if.then.732:                                      ; preds = %do.body.726
  br label %if.end.736, !dbg !3053

if.else.733:                                      ; preds = %do.body.726
  %486 = load %struct._object*, %struct._object** %_py_decref_tmp727, align 8, !dbg !3055, !tbaa !1876
  %ob_type734 = getelementptr inbounds %struct._object, %struct._object* %486, i32 0, i32 1, !dbg !3057
  %487 = load %struct._typeobject*, %struct._typeobject** %ob_type734, align 8, !dbg !3057, !tbaa !2195
  %tp_dealloc735 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %487, i32 0, i32 4, !dbg !3058
  %488 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc735, align 8, !dbg !3058, !tbaa !2197
  %489 = load %struct._object*, %struct._object** %_py_decref_tmp727, align 8, !dbg !3059, !tbaa !1876
  call void %488(%struct._object* %489), !dbg !3060
  br label %if.end.736

if.end.736:                                       ; preds = %if.else.733, %if.then.732
  %490 = bitcast %struct._object** %_py_decref_tmp727 to i8*, !dbg !3061
  call void @llvm.lifetime.end(i64 8, i8* %490) #2, !dbg !3061
  br label %do.cond.737, !dbg !3063

do.cond.737:                                      ; preds = %if.end.736
  br label %do.end.738, !dbg !3064

do.end.738:                                       ; preds = %do.cond.737
  store %struct._object* null, %struct._object** %retval, !dbg !3066
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !3066

cleanup.739:                                      ; preds = %do.end.738, %cleanup.cont.725, %cleanup.719, %cleanup.291, %cleanup, %if.then.8, %if.then
  %491 = bitcast %struct.nldecoder_object** %self to i8*, !dbg !3067
  call void @llvm.lifetime.end(i64 8, i8* %491) #2, !dbg !3067
  %492 = bitcast i64* %output_len to i8*, !dbg !3067
  call void @llvm.lifetime.end(i64 8, i8* %492) #2, !dbg !3067
  %493 = bitcast %struct._object** %output to i8*, !dbg !3067
  call void @llvm.lifetime.end(i64 8, i8* %493) #2, !dbg !3067
  %494 = load %struct._object*, %struct._object** %retval, !dbg !3067
  ret %struct._object* %494, !dbg !3067

unreachable:                                      ; preds = %cleanup.679, %cleanup.514, %cleanup.409
  unreachable
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare %struct._object* @PyObject_CallMethodObjArgs(%struct._object*, %struct._object*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @check_decoded(%struct._object* %decoded) #0 {
entry:
  %retval = alloca i32, align 4
  %decoded.addr = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  store %struct._object* %decoded, %struct._object** %decoded.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %decoded.addr, metadata !597, metadata !1880), !dbg !3068
  %0 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3069, !tbaa !1876
  %cmp = icmp eq %struct._object* %0, null, !dbg !3071
  br i1 %cmp, label %if.then, label %if.end, !dbg !3072

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3073
  br label %return, !dbg !3073

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3074, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !3075
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3075, !tbaa !2195
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19, !dbg !3076
  %3 = load i64, i64* %tp_flags, align 8, !dbg !3076, !tbaa !3077
  %and = and i64 %3, 268435456, !dbg !3078
  %cmp1 = icmp ne i64 %and, 0, !dbg !3079
  br i1 %cmp1, label %if.end.8, label %if.then.2, !dbg !3080

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3081, !tbaa !1876
  %5 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3082, !tbaa !1876
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !3083
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !3083, !tbaa !2195
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 1, !dbg !3084
  %7 = load i8*, i8** %tp_name, align 8, !dbg !3084, !tbaa !3085
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11, i32 0, i32 0), i8* %7), !dbg !3086
  br label %do.body, !dbg !3087

do.body:                                          ; preds = %if.then.2
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3088
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !3088
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !598, metadata !1880), !dbg !3090
  %9 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3091, !tbaa !1876
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !3090, !tbaa !1876
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3092, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !3094
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !3095, !tbaa !1927
  %dec = add i64 %11, -1, !dbg !3095
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3095, !tbaa !1927
  %cmp4 = icmp ne i64 %dec, 0, !dbg !3096
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !3097

if.then.5:                                        ; preds = %do.body
  br label %if.end.7, !dbg !3098

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3100, !tbaa !1876
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !3102
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !3102, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !3103
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3103, !tbaa !2197
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3104, !tbaa !1876
  call void %14(%struct._object* %15), !dbg !3105
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.5
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3106
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !3106
  br label %do.end, !dbg !3108

do.end:                                           ; preds = %if.end.7
  store i32 -1, i32* %retval, !dbg !3109
  br label %return, !dbg !3109

if.end.8:                                         ; preds = %if.end
  %17 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3110, !tbaa !1876
  %18 = bitcast %struct._object* %17 to %struct.PyASCIIObject*, !dbg !3111
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %18, i32 0, i32 3, !dbg !3112
  %19 = bitcast %struct.anon* %state to i32*, !dbg !3113
  %bf.load = load i32, i32* %19, align 4, !dbg !3113
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !3113
  %bf.clear = and i32 %bf.lshr, 1, !dbg !3113
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !3114
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3114

cond.true:                                        ; preds = %if.end.8
  br label %cond.end, !dbg !3115

cond.false:                                       ; preds = %if.end.8
  %20 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3117, !tbaa !1876
  %call9 = call i32 @_PyUnicode_Ready(%struct._object* %20), !dbg !3119
  br label %cond.end, !dbg !3114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call9, %cond.false ], !dbg !3114
  %cmp10 = icmp slt i32 %cond, 0, !dbg !3120
  br i1 %cmp10, label %if.then.11, label %if.end.23, !dbg !3123

if.then.11:                                       ; preds = %cond.end
  br label %do.body.12, !dbg !3124

do.body.12:                                       ; preds = %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !3125
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !3125
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp13, metadata !602, metadata !1880), !dbg !3127
  %22 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3128, !tbaa !1876
  store %struct._object* %22, %struct._object** %_py_decref_tmp13, align 8, !dbg !3127, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !3129, !tbaa !1876
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !3131
  %24 = load i64, i64* %ob_refcnt14, align 8, !dbg !3132, !tbaa !1927
  %dec15 = add i64 %24, -1, !dbg !3132
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !3132, !tbaa !1927
  %cmp16 = icmp ne i64 %dec15, 0, !dbg !3133
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !3134

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21, !dbg !3135

if.else.18:                                       ; preds = %do.body.12
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !3137, !tbaa !1876
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !3139
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !3139, !tbaa !2195
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !3140
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !3140, !tbaa !2197
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !3141, !tbaa !1876
  call void %27(%struct._object* %28), !dbg !3142
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %29 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !3143
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3143
  br label %do.end.22, !dbg !3145

do.end.22:                                        ; preds = %if.end.21
  store i32 -1, i32* %retval, !dbg !3146
  br label %return, !dbg !3146

if.end.23:                                        ; preds = %cond.end
  store i32 0, i32* %retval, !dbg !3147
  br label %return, !dbg !3147

return:                                           ; preds = %if.end.23, %do.end.22, %do.end, %if.then
  %30 = load i32, i32* %retval, !dbg !3148
  ret i32 %30, !dbg !3148
}

declare %struct._object* @PyUnicode_New(i64, i32) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

declare %struct._object* @PyUnicode_Substring(%struct._object*, i64, i64) #3

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #4

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

declare %struct._object* @PyUnicode_FromKindAndData(i32, i8*, i64) #3

declare void @PyMem_Free(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @incrementalnewlinedecoder_dealloc(%struct.nldecoder_object* %self) #0 {
entry:
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !610, metadata !1880), !dbg !3149
  br label %do.body, !dbg !3150

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3151
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3151
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !611, metadata !1880), !dbg !3153
  %1 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3154, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %1, i32 0, i32 1, !dbg !3155
  %2 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !3155, !tbaa !1897
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !3153, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3156, !tbaa !1876
  %cmp = icmp ne %struct._object* %3, null, !dbg !3157
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !3158

if.then:                                          ; preds = %do.body
  %4 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3159, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %4, i32 0, i32 1, !dbg !3161
  store %struct._object* null, %struct._object** %decoder1, align 8, !dbg !3162, !tbaa !1897
  br label %do.body.2, !dbg !3163

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3164
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !3164
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !613, metadata !1880), !dbg !3166
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3167, !tbaa !1876
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !3166, !tbaa !1876
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3168, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !3170
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !3171, !tbaa !1927
  %dec = add i64 %8, -1, !dbg !3171
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3171, !tbaa !1927
  %cmp3 = icmp ne i64 %dec, 0, !dbg !3172
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !3173

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !3174

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3176, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !3178
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3178, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !3179
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3179, !tbaa !2197
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3180, !tbaa !1876
  call void %11(%struct._object* %12), !dbg !3181
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3182
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !3182
  br label %do.cond, !dbg !3184

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3185

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !3187

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3189
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !3189
  br label %do.end.7, !dbg !3192

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !3193

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !3194
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !3194
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !617, metadata !1880), !dbg !3196
  %16 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3197, !tbaa !1876
  %errors = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %16, i32 0, i32 2, !dbg !3198
  %17 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3198, !tbaa !3199
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !3196, !tbaa !1876
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !3200, !tbaa !1876
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !3201
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !3202

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3203, !tbaa !1876
  %errors12 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %19, i32 0, i32 2, !dbg !3205
  store %struct._object* null, %struct._object** %errors12, align 8, !dbg !3206, !tbaa !3199
  br label %do.body.13, !dbg !3207

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !3208
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !3208
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !619, metadata !1880), !dbg !3210
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !3211, !tbaa !1876
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !3210, !tbaa !1876
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3212, !tbaa !1876
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !3214
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !3215, !tbaa !1927
  %dec16 = add i64 %23, -1, !dbg !3215
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !3215, !tbaa !1927
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !3216
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !3217

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !3218

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3220, !tbaa !1876
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !3222
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !3222, !tbaa !2195
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !3223
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !3223, !tbaa !2197
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3224, !tbaa !1876
  call void %26(%struct._object* %27), !dbg !3225
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !3226
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !3226
  br label %do.cond.23, !dbg !3228

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !3229

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !3231

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !3233
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3233
  br label %do.end.27, !dbg !3234

do.end.27:                                        ; preds = %if.end.25
  %30 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3235, !tbaa !1876
  %31 = bitcast %struct.nldecoder_object* %30 to %struct._object*, !dbg !3236
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !3237
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !3237, !tbaa !2195
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !3238
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3238, !tbaa !3239
  %34 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3240, !tbaa !1876
  %35 = bitcast %struct.nldecoder_object* %34 to %struct._object*, !dbg !3241
  %36 = bitcast %struct._object* %35 to i8*, !dbg !3241
  call void %33(i8* %36), !dbg !3242
  ret void, !dbg !3243
}

; Function Attrs: nounwind uwtable
define internal i32 @incrementalnewlinedecoder_init(%struct.nldecoder_object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %decoder = alloca %struct._object*, align 8
  %translate = alloca i32, align 4
  %errors = alloca %struct._object*, align 8
  %kwlist = alloca [4 x i8*], align 16
  %cleanup.dest.slot = alloca i32
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !674, metadata !1880), !dbg !3244
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !675, metadata !1880), !dbg !3245
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !676, metadata !1880), !dbg !3246
  %0 = bitcast %struct._object** %decoder to i8*, !dbg !3247
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3247
  call void @llvm.dbg.declare(metadata %struct._object** %decoder, metadata !677, metadata !1880), !dbg !3248
  %1 = bitcast i32* %translate to i8*, !dbg !3249
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !3249
  call void @llvm.dbg.declare(metadata i32* %translate, metadata !678, metadata !1880), !dbg !3250
  %2 = bitcast %struct._object** %errors to i8*, !dbg !3251
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3251
  call void @llvm.dbg.declare(metadata %struct._object** %errors, metadata !679, metadata !1880), !dbg !3252
  store %struct._object* null, %struct._object** %errors, align 8, !dbg !3252, !tbaa !1876
  %3 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !3253
  call void @llvm.lifetime.start(i64 32, i8* %3) #2, !dbg !3253
  call void @llvm.dbg.declare(metadata [4 x i8*]* %kwlist, metadata !680, metadata !1880), !dbg !3254
  %4 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !3254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast ([4 x i8*]* @incrementalnewlinedecoder_init.kwlist to i8*), i64 32, i32 16, i1 false), !dbg !3254
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3255, !tbaa !1876
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3257, !tbaa !1876
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %kwlist, i32 0, i32 0, !dbg !3258
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %5, %struct._object* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i8** %arraydecay, %struct._object** %decoder, i32* %translate, %struct._object** %errors), !dbg !3259
  %tobool = icmp ne i32 %call, 0, !dbg !3259
  br i1 %tobool, label %if.end, label %if.then, !dbg !3260

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3261
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3261

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !3262, !tbaa !1876
  %8 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3263, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %8, i32 0, i32 1, !dbg !3264
  store %struct._object* %7, %struct._object** %decoder1, align 8, !dbg !3265, !tbaa !1897
  %9 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !3266, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !3267
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !3268, !tbaa !1927
  %inc = add i64 %10, 1, !dbg !3268
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3268, !tbaa !1927
  %11 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3269, !tbaa !1876
  %cmp = icmp eq %struct._object* %11, null, !dbg !3271
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !3272

if.then.2:                                        ; preds = %if.end
  %call3 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0)), !dbg !3273
  %12 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3275, !tbaa !1876
  %errors4 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %12, i32 0, i32 2, !dbg !3276
  store %struct._object* %call3, %struct._object** %errors4, align 8, !dbg !3277, !tbaa !3199
  %13 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3278, !tbaa !1876
  %errors5 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %13, i32 0, i32 2, !dbg !3280
  %14 = load %struct._object*, %struct._object** %errors5, align 8, !dbg !3280, !tbaa !3199
  %cmp6 = icmp eq %struct._object* %14, null, !dbg !3281
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !3282

if.then.7:                                        ; preds = %if.then.2
  store i32 -1, i32* %retval, !dbg !3283
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3283

if.end.8:                                         ; preds = %if.then.2
  br label %if.end.12, !dbg !3284

if.else:                                          ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3285, !tbaa !1876
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !3287
  %16 = load i64, i64* %ob_refcnt9, align 8, !dbg !3288, !tbaa !1927
  %inc10 = add i64 %16, 1, !dbg !3288
  store i64 %inc10, i64* %ob_refcnt9, align 8, !dbg !3288, !tbaa !1927
  %17 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3289, !tbaa !1876
  %18 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3290, !tbaa !1876
  %errors11 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %18, i32 0, i32 2, !dbg !3291
  store %struct._object* %17, %struct._object** %errors11, align 8, !dbg !3292, !tbaa !3199
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.end.8
  %19 = load i32, i32* %translate, align 4, !dbg !3293, !tbaa !1883
  %20 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3294, !tbaa !1876
  %translate13 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %20, i32 0, i32 3, !dbg !3295
  %21 = trunc i32 %19 to i8, !dbg !3296
  %bf.load = load i8, i8* %translate13, align 8, !dbg !3296
  %bf.value = and i8 %21, 1, !dbg !3296
  %bf.shl = shl i8 %bf.value, 1, !dbg !3296
  %bf.clear = and i8 %bf.load, -3, !dbg !3296
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !3296
  store i8 %bf.set, i8* %translate13, align 8, !dbg !3296
  %bf.result.shl = shl i8 %bf.value, 7, !dbg !3296
  %bf.result.ashr = ashr i8 %bf.result.shl, 7, !dbg !3296
  %bf.result.cast = sext i8 %bf.result.ashr to i32, !dbg !3296
  %22 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3297, !tbaa !1876
  %seennl = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %22, i32 0, i32 3, !dbg !3298
  %bf.load14 = load i8, i8* %seennl, align 8, !dbg !3299
  %bf.clear15 = and i8 %bf.load14, -29, !dbg !3299
  store i8 %bf.clear15, i8* %seennl, align 8, !dbg !3299
  %23 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3300, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %23, i32 0, i32 3, !dbg !3301
  %bf.load16 = load i8, i8* %pendingcr, align 8, !dbg !3302
  %bf.clear17 = and i8 %bf.load16, -2, !dbg !3302
  store i8 %bf.clear17, i8* %pendingcr, align 8, !dbg !3302
  store i32 0, i32* %retval, !dbg !3303
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3303

cleanup:                                          ; preds = %if.end.12, %if.then.7, %if.then
  %24 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !3304
  call void @llvm.lifetime.end(i64 32, i8* %24) #2, !dbg !3304
  %25 = bitcast %struct._object** %errors to i8*, !dbg !3304
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !3304
  %26 = bitcast i32* %translate to i8*, !dbg !3304
  call void @llvm.lifetime.end(i64 4, i8* %26) #2, !dbg !3304
  %27 = bitcast %struct._object** %decoder to i8*, !dbg !3304
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !3304
  %28 = load i32, i32* %retval, !dbg !3304
  ret i32 %28, !dbg !3304
}

declare %struct._object* @PyType_GenericNew(%struct._typeobject*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define i64 @_PyIO_find_line_ending(i32 %translated, i32 %universal, %struct._object* %readnl, i32 %kind, i8* %start, i8* %end, i64* %consumed) #0 {
entry:
  %retval = alloca i64, align 8
  %translated.addr = alloca i32, align 4
  %universal.addr = alloca i32, align 4
  %readnl.addr = alloca %struct._object*, align 8
  %kind.addr = alloca i32, align 4
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %consumed.addr = alloca i64*, align 8
  %len = alloca i64, align 8
  %pos = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %s = alloca i8*, align 8
  %ch = alloca i32, align 4
  %readnl_len = alloca i64, align 8
  %nl = alloca i8*, align 8
  %pos114 = alloca i8*, align 8
  %s130 = alloca i8*, align 8
  %e = alloca i8*, align 8
  %pos133 = alloca i8*, align 8
  %i = alloca i64, align 8
  %pos142 = alloca i8*, align 8
  store i32 %translated, i32* %translated.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %translated.addr, metadata !523, metadata !1880), !dbg !3305
  store i32 %universal, i32* %universal.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %universal.addr, metadata !524, metadata !1880), !dbg !3306
  store %struct._object* %readnl, %struct._object** %readnl.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %readnl.addr, metadata !525, metadata !1880), !dbg !3307
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !526, metadata !1880), !dbg !3308
  store i8* %start, i8** %start.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !527, metadata !1880), !dbg !3309
  store i8* %end, i8** %end.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !528, metadata !1880), !dbg !3310
  store i64* %consumed, i64** %consumed.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64** %consumed.addr, metadata !529, metadata !1880), !dbg !3311
  %0 = bitcast i64* %len to i8*, !dbg !3312
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3312
  call void @llvm.dbg.declare(metadata i64* %len, metadata !530, metadata !1880), !dbg !3313
  %1 = load i8*, i8** %end.addr, align 8, !dbg !3314, !tbaa !1876
  %2 = load i8*, i8** %start.addr, align 8, !dbg !3315, !tbaa !1876
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !3316
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !3316
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3316
  %3 = load i32, i32* %kind.addr, align 4, !dbg !3317, !tbaa !1883
  %conv = sext i32 %3 to i64, !dbg !3317
  %div = sdiv i64 %sub.ptr.sub, %conv, !dbg !3318
  store i64 %div, i64* %len, align 8, !dbg !3313, !tbaa !1941
  %4 = load i32, i32* %translated.addr, align 4, !dbg !3319, !tbaa !1883
  %tobool = icmp ne i32 %4, 0, !dbg !3319
  br i1 %tobool, label %if.then, label %if.else.8, !dbg !3320

if.then:                                          ; preds = %entry
  %5 = bitcast i8** %pos to i8*, !dbg !3321
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !3321
  call void @llvm.dbg.declare(metadata i8** %pos, metadata !531, metadata !1880), !dbg !3322
  %6 = load i32, i32* %kind.addr, align 4, !dbg !3323, !tbaa !1883
  %7 = load i8*, i8** %start.addr, align 8, !dbg !3324, !tbaa !1876
  %8 = load i8*, i8** %end.addr, align 8, !dbg !3325, !tbaa !1876
  %call = call i8* @find_control_char(i32 %6, i8* %7, i8* %8, i32 10), !dbg !3326
  store i8* %call, i8** %pos, align 8, !dbg !3322, !tbaa !1876
  %9 = load i8*, i8** %pos, align 8, !dbg !3327, !tbaa !1876
  %cmp = icmp ne i8* %9, null, !dbg !3329
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !3330

if.then.2:                                        ; preds = %if.then
  %10 = load i8*, i8** %pos, align 8, !dbg !3331, !tbaa !1876
  %11 = load i8*, i8** %start.addr, align 8, !dbg !3332, !tbaa !1876
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !3333
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !3333
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !3333
  %12 = load i32, i32* %kind.addr, align 4, !dbg !3334, !tbaa !1883
  %conv6 = sext i32 %12 to i64, !dbg !3334
  %div7 = sdiv i64 %sub.ptr.sub5, %conv6, !dbg !3335
  %add = add i64 %div7, 1, !dbg !3336
  store i64 %add, i64* %retval, !dbg !3337
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3337

if.else:                                          ; preds = %if.then
  %13 = load i64, i64* %len, align 8, !dbg !3338, !tbaa !1941
  %14 = load i64*, i64** %consumed.addr, align 8, !dbg !3340, !tbaa !1876
  store i64 %13, i64* %14, align 8, !dbg !3341, !tbaa !1941
  store i64 -1, i64* %retval, !dbg !3342
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3342

cleanup:                                          ; preds = %if.else, %if.then.2
  %15 = bitcast i8** %pos to i8*, !dbg !3343
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !3343
  br label %cleanup.213

if.else.8:                                        ; preds = %entry
  %16 = load i32, i32* %universal.addr, align 4, !dbg !3344, !tbaa !1883
  %tobool9 = icmp ne i32 %16, 0, !dbg !3344
  br i1 %tobool9, label %if.then.10, label %if.else.94, !dbg !3345

if.then.10:                                       ; preds = %if.else.8
  %17 = bitcast i8** %s to i8*, !dbg !3346
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !3346
  call void @llvm.dbg.declare(metadata i8** %s, metadata !534, metadata !1880), !dbg !3347
  %18 = load i8*, i8** %start.addr, align 8, !dbg !3348, !tbaa !1876
  store i8* %18, i8** %s, align 8, !dbg !3347, !tbaa !1876
  br label %for.cond, !dbg !3349

for.cond:                                         ; preds = %cleanup.cont, %if.then.10
  %19 = bitcast i32* %ch to i8*, !dbg !3350
  call void @llvm.lifetime.start(i64 4, i8* %19) #2, !dbg !3350
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !537, metadata !1880), !dbg !3351
  br label %while.cond, !dbg !3352

while.cond:                                       ; preds = %while.body, %for.cond
  %20 = load i32, i32* %kind.addr, align 4, !dbg !3353, !tbaa !1883
  %cmp11 = icmp eq i32 %20, 1, !dbg !3356
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !3357

cond.true:                                        ; preds = %while.cond
  %21 = load i8*, i8** %s, align 8, !dbg !3358, !tbaa !1876
  %arrayidx = getelementptr i8, i8* %21, i64 0, !dbg !3360
  %22 = load i8, i8* %arrayidx, align 1, !dbg !3360, !tbaa !2065
  %conv13 = zext i8 %22 to i32, !dbg !3360
  br label %cond.end.21, !dbg !3357

cond.false:                                       ; preds = %while.cond
  %23 = load i32, i32* %kind.addr, align 4, !dbg !3361, !tbaa !1883
  %cmp14 = icmp eq i32 %23, 2, !dbg !3363
  br i1 %cmp14, label %cond.true.16, label %cond.false.19, !dbg !3364

cond.true.16:                                     ; preds = %cond.false
  %24 = load i8*, i8** %s, align 8, !dbg !3365, !tbaa !1876
  %25 = bitcast i8* %24 to i16*, !dbg !3367
  %arrayidx17 = getelementptr i16, i16* %25, i64 0, !dbg !3368
  %26 = load i16, i16* %arrayidx17, align 2, !dbg !3368, !tbaa !2103
  %conv18 = zext i16 %26 to i32, !dbg !3368
  br label %cond.end, !dbg !3364

cond.false.19:                                    ; preds = %cond.false
  %27 = load i8*, i8** %s, align 8, !dbg !3369, !tbaa !1876
  %28 = bitcast i8* %27 to i32*, !dbg !3371
  %arrayidx20 = getelementptr i32, i32* %28, i64 0, !dbg !3372
  %29 = load i32, i32* %arrayidx20, align 4, !dbg !3372, !tbaa !1883
  br label %cond.end, !dbg !3364

cond.end:                                         ; preds = %cond.false.19, %cond.true.16
  %cond = phi i32 [ %conv18, %cond.true.16 ], [ %29, %cond.false.19 ], !dbg !3364
  br label %cond.end.21, !dbg !3373

cond.end.21:                                      ; preds = %cond.end, %cond.true
  %cond22 = phi i32 [ %conv13, %cond.true ], [ %cond, %cond.end ], !dbg !3357
  %cmp23 = icmp ugt i32 %cond22, 13, !dbg !3376
  br i1 %cmp23, label %while.body, label %while.end, !dbg !3352

while.body:                                       ; preds = %cond.end.21
  %30 = load i32, i32* %kind.addr, align 4, !dbg !3379, !tbaa !1883
  %31 = load i8*, i8** %s, align 8, !dbg !3380, !tbaa !1876
  %idx.ext = sext i32 %30 to i64, !dbg !3380
  %add.ptr = getelementptr i8, i8* %31, i64 %idx.ext, !dbg !3380
  store i8* %add.ptr, i8** %s, align 8, !dbg !3380, !tbaa !1876
  br label %while.cond, !dbg !3352

while.end:                                        ; preds = %cond.end.21
  %32 = load i8*, i8** %s, align 8, !dbg !3381, !tbaa !1876
  %33 = load i8*, i8** %end.addr, align 8, !dbg !3383, !tbaa !1876
  %cmp25 = icmp uge i8* %32, %33, !dbg !3384
  br i1 %cmp25, label %if.then.27, label %if.end, !dbg !3385

if.then.27:                                       ; preds = %while.end
  %34 = load i64, i64* %len, align 8, !dbg !3386, !tbaa !1941
  %35 = load i64*, i64** %consumed.addr, align 8, !dbg !3388, !tbaa !1876
  store i64 %34, i64* %35, align 8, !dbg !3389, !tbaa !1941
  store i64 -1, i64* %retval, !dbg !3390
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3390

if.end:                                           ; preds = %while.end
  %36 = load i32, i32* %kind.addr, align 4, !dbg !3391, !tbaa !1883
  %cmp28 = icmp eq i32 %36, 1, !dbg !3392
  br i1 %cmp28, label %cond.true.30, label %cond.false.33, !dbg !3393

cond.true.30:                                     ; preds = %if.end
  %37 = load i8*, i8** %s, align 8, !dbg !3394, !tbaa !1876
  %arrayidx31 = getelementptr i8, i8* %37, i64 0, !dbg !3395
  %38 = load i8, i8* %arrayidx31, align 1, !dbg !3395, !tbaa !2065
  %conv32 = zext i8 %38 to i32, !dbg !3395
  br label %cond.end.43, !dbg !3393

cond.false.33:                                    ; preds = %if.end
  %39 = load i32, i32* %kind.addr, align 4, !dbg !3396, !tbaa !1883
  %cmp34 = icmp eq i32 %39, 2, !dbg !3397
  br i1 %cmp34, label %cond.true.36, label %cond.false.39, !dbg !3398

cond.true.36:                                     ; preds = %cond.false.33
  %40 = load i8*, i8** %s, align 8, !dbg !3399, !tbaa !1876
  %41 = bitcast i8* %40 to i16*, !dbg !3400
  %arrayidx37 = getelementptr i16, i16* %41, i64 0, !dbg !3401
  %42 = load i16, i16* %arrayidx37, align 2, !dbg !3401, !tbaa !2103
  %conv38 = zext i16 %42 to i32, !dbg !3401
  br label %cond.end.41, !dbg !3398

cond.false.39:                                    ; preds = %cond.false.33
  %43 = load i8*, i8** %s, align 8, !dbg !3402, !tbaa !1876
  %44 = bitcast i8* %43 to i32*, !dbg !3403
  %arrayidx40 = getelementptr i32, i32* %44, i64 0, !dbg !3404
  %45 = load i32, i32* %arrayidx40, align 4, !dbg !3404, !tbaa !1883
  br label %cond.end.41, !dbg !3398

cond.end.41:                                      ; preds = %cond.false.39, %cond.true.36
  %cond42 = phi i32 [ %conv38, %cond.true.36 ], [ %45, %cond.false.39 ], !dbg !3398
  br label %cond.end.43, !dbg !3405

cond.end.43:                                      ; preds = %cond.end.41, %cond.true.30
  %cond44 = phi i32 [ %conv32, %cond.true.30 ], [ %cond42, %cond.end.41 ], !dbg !3393
  store i32 %cond44, i32* %ch, align 4, !dbg !3407, !tbaa !1883
  %46 = load i32, i32* %kind.addr, align 4, !dbg !3409, !tbaa !1883
  %47 = load i8*, i8** %s, align 8, !dbg !3410, !tbaa !1876
  %idx.ext45 = sext i32 %46 to i64, !dbg !3410
  %add.ptr46 = getelementptr i8, i8* %47, i64 %idx.ext45, !dbg !3410
  store i8* %add.ptr46, i8** %s, align 8, !dbg !3410, !tbaa !1876
  %48 = load i32, i32* %ch, align 4, !dbg !3411, !tbaa !1883
  %cmp47 = icmp eq i32 %48, 10, !dbg !3413
  br i1 %cmp47, label %if.then.49, label %if.end.55, !dbg !3414

if.then.49:                                       ; preds = %cond.end.43
  %49 = load i8*, i8** %s, align 8, !dbg !3415, !tbaa !1876
  %50 = load i8*, i8** %start.addr, align 8, !dbg !3416, !tbaa !1876
  %sub.ptr.lhs.cast50 = ptrtoint i8* %49 to i64, !dbg !3417
  %sub.ptr.rhs.cast51 = ptrtoint i8* %50 to i64, !dbg !3417
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51, !dbg !3417
  %51 = load i32, i32* %kind.addr, align 4, !dbg !3418, !tbaa !1883
  %conv53 = sext i32 %51 to i64, !dbg !3418
  %div54 = sdiv i64 %sub.ptr.sub52, %conv53, !dbg !3419
  store i64 %div54, i64* %retval, !dbg !3420
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3420

if.end.55:                                        ; preds = %cond.end.43
  %52 = load i32, i32* %ch, align 4, !dbg !3421, !tbaa !1883
  %cmp56 = icmp eq i32 %52, 13, !dbg !3423
  br i1 %cmp56, label %if.then.58, label %if.end.91, !dbg !3424

if.then.58:                                       ; preds = %if.end.55
  %53 = load i32, i32* %kind.addr, align 4, !dbg !3425, !tbaa !1883
  %cmp59 = icmp eq i32 %53, 1, !dbg !3428
  br i1 %cmp59, label %cond.true.61, label %cond.false.64, !dbg !3429

cond.true.61:                                     ; preds = %if.then.58
  %54 = load i8*, i8** %s, align 8, !dbg !3430, !tbaa !1876
  %arrayidx62 = getelementptr i8, i8* %54, i64 0, !dbg !3432
  %55 = load i8, i8* %arrayidx62, align 1, !dbg !3432, !tbaa !2065
  %conv63 = zext i8 %55 to i32, !dbg !3432
  br label %cond.end.74, !dbg !3429

cond.false.64:                                    ; preds = %if.then.58
  %56 = load i32, i32* %kind.addr, align 4, !dbg !3433, !tbaa !1883
  %cmp65 = icmp eq i32 %56, 2, !dbg !3435
  br i1 %cmp65, label %cond.true.67, label %cond.false.70, !dbg !3436

cond.true.67:                                     ; preds = %cond.false.64
  %57 = load i8*, i8** %s, align 8, !dbg !3437, !tbaa !1876
  %58 = bitcast i8* %57 to i16*, !dbg !3439
  %arrayidx68 = getelementptr i16, i16* %58, i64 0, !dbg !3440
  %59 = load i16, i16* %arrayidx68, align 2, !dbg !3440, !tbaa !2103
  %conv69 = zext i16 %59 to i32, !dbg !3440
  br label %cond.end.72, !dbg !3436

cond.false.70:                                    ; preds = %cond.false.64
  %60 = load i8*, i8** %s, align 8, !dbg !3441, !tbaa !1876
  %61 = bitcast i8* %60 to i32*, !dbg !3443
  %arrayidx71 = getelementptr i32, i32* %61, i64 0, !dbg !3444
  %62 = load i32, i32* %arrayidx71, align 4, !dbg !3444, !tbaa !1883
  br label %cond.end.72, !dbg !3436

cond.end.72:                                      ; preds = %cond.false.70, %cond.true.67
  %cond73 = phi i32 [ %conv69, %cond.true.67 ], [ %62, %cond.false.70 ], !dbg !3436
  br label %cond.end.74, !dbg !3445

cond.end.74:                                      ; preds = %cond.end.72, %cond.true.61
  %cond75 = phi i32 [ %conv63, %cond.true.61 ], [ %cond73, %cond.end.72 ], !dbg !3429
  %cmp76 = icmp eq i32 %cond75, 10, !dbg !3448
  br i1 %cmp76, label %if.then.78, label %if.else.85, !dbg !3451

if.then.78:                                       ; preds = %cond.end.74
  %63 = load i8*, i8** %s, align 8, !dbg !3452, !tbaa !1876
  %64 = load i8*, i8** %start.addr, align 8, !dbg !3453, !tbaa !1876
  %sub.ptr.lhs.cast79 = ptrtoint i8* %63 to i64, !dbg !3454
  %sub.ptr.rhs.cast80 = ptrtoint i8* %64 to i64, !dbg !3454
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80, !dbg !3454
  %65 = load i32, i32* %kind.addr, align 4, !dbg !3455, !tbaa !1883
  %conv82 = sext i32 %65 to i64, !dbg !3455
  %div83 = sdiv i64 %sub.ptr.sub81, %conv82, !dbg !3456
  %add84 = add i64 %div83, 1, !dbg !3457
  store i64 %add84, i64* %retval, !dbg !3458
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3458

if.else.85:                                       ; preds = %cond.end.74
  %66 = load i8*, i8** %s, align 8, !dbg !3459, !tbaa !1876
  %67 = load i8*, i8** %start.addr, align 8, !dbg !3460, !tbaa !1876
  %sub.ptr.lhs.cast86 = ptrtoint i8* %66 to i64, !dbg !3461
  %sub.ptr.rhs.cast87 = ptrtoint i8* %67 to i64, !dbg !3461
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87, !dbg !3461
  %68 = load i32, i32* %kind.addr, align 4, !dbg !3462, !tbaa !1883
  %conv89 = sext i32 %68 to i64, !dbg !3462
  %div90 = sdiv i64 %sub.ptr.sub88, %conv89, !dbg !3463
  store i64 %div90, i64* %retval, !dbg !3464
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3464

if.end.91:                                        ; preds = %if.end.55
  store i32 0, i32* %cleanup.dest.slot, !dbg !3465
  br label %cleanup.92, !dbg !3465

cleanup.92:                                       ; preds = %if.end.91, %if.else.85, %if.then.78, %if.then.49, %if.then.27
  %69 = bitcast i32* %ch to i8*, !dbg !3466
  call void @llvm.lifetime.end(i64 4, i8* %69) #2, !dbg !3466
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.93 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup.92
  br label %for.cond, !dbg !3468

cleanup.93:                                       ; preds = %cleanup.92
  %70 = bitcast i8** %s to i8*, !dbg !3469
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !3469
  br label %cleanup.213

if.else.94:                                       ; preds = %if.else.8
  %71 = bitcast i64* %readnl_len to i8*, !dbg !3470
  call void @llvm.lifetime.start(i64 8, i8* %71) #2, !dbg !3470
  call void @llvm.dbg.declare(metadata i64* %readnl_len, metadata !541, metadata !1880), !dbg !3471
  %72 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3472, !tbaa !1876
  %73 = bitcast %struct._object* %72 to %struct.PyASCIIObject*, !dbg !3473
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %73, i32 0, i32 1, !dbg !3474
  %74 = load i64, i64* %length, align 8, !dbg !3474, !tbaa !1937
  store i64 %74, i64* %readnl_len, align 8, !dbg !3471, !tbaa !1941
  %75 = bitcast i8** %nl to i8*, !dbg !3475
  call void @llvm.lifetime.start(i64 8, i8* %75) #2, !dbg !3475
  call void @llvm.dbg.declare(metadata i8** %nl, metadata !543, metadata !1880), !dbg !3476
  %76 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3477, !tbaa !1876
  %77 = bitcast %struct._object* %76 to %struct.PyASCIIObject*, !dbg !3478
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %77, i32 0, i32 3, !dbg !3479
  %78 = bitcast %struct.anon* %state to i32*, !dbg !3480
  %bf.load = load i32, i32* %78, align 4, !dbg !3480
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !3480
  %bf.clear = and i32 %bf.lshr, 1, !dbg !3480
  %tobool95 = icmp ne i32 %bf.clear, 0, !dbg !3481
  br i1 %tobool95, label %cond.true.96, label %cond.false.108, !dbg !3481

cond.true.96:                                     ; preds = %if.else.94
  %79 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3482, !tbaa !1876
  %80 = bitcast %struct._object* %79 to %struct.PyASCIIObject*, !dbg !3484
  %state97 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %80, i32 0, i32 3, !dbg !3485
  %81 = bitcast %struct.anon* %state97 to i32*, !dbg !3486
  %bf.load98 = load i32, i32* %81, align 4, !dbg !3486
  %bf.lshr99 = lshr i32 %bf.load98, 6, !dbg !3486
  %bf.clear100 = and i32 %bf.lshr99, 1, !dbg !3486
  %tobool101 = icmp ne i32 %bf.clear100, 0, !dbg !3487
  br i1 %tobool101, label %cond.true.102, label %cond.false.104, !dbg !3487

cond.true.102:                                    ; preds = %cond.true.96
  %82 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3488, !tbaa !1876
  %83 = bitcast %struct._object* %82 to %struct.PyASCIIObject*, !dbg !3490
  %add.ptr103 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %83, i64 1, !dbg !3491
  %84 = bitcast %struct.PyASCIIObject* %add.ptr103 to i8*, !dbg !3492
  br label %cond.end.106, !dbg !3487

cond.false.104:                                   ; preds = %cond.true.96
  %85 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3493, !tbaa !1876
  %86 = bitcast %struct._object* %85 to %struct.PyCompactUnicodeObject*, !dbg !3495
  %add.ptr105 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %86, i64 1, !dbg !3496
  %87 = bitcast %struct.PyCompactUnicodeObject* %add.ptr105 to i8*, !dbg !3497
  br label %cond.end.106, !dbg !3487

cond.end.106:                                     ; preds = %cond.false.104, %cond.true.102
  %cond107 = phi i8* [ %84, %cond.true.102 ], [ %87, %cond.false.104 ], !dbg !3487
  br label %cond.end.109, !dbg !3498

cond.false.108:                                   ; preds = %if.else.94
  %88 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3501, !tbaa !1876
  %89 = bitcast %struct._object* %88 to %struct.PyUnicodeObject*, !dbg !3503
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %89, i32 0, i32 1, !dbg !3504
  %any = bitcast %union.anon* %data to i8**, !dbg !3505
  %90 = load i8*, i8** %any, align 8, !dbg !3505, !tbaa !1876
  br label %cond.end.109, !dbg !3481

cond.end.109:                                     ; preds = %cond.false.108, %cond.end.106
  %cond110 = phi i8* [ %cond107, %cond.end.106 ], [ %90, %cond.false.108 ], !dbg !3481
  store i8* %cond110, i8** %nl, align 8, !dbg !3506, !tbaa !1876
  %91 = load i64, i64* %readnl_len, align 8, !dbg !3509, !tbaa !1941
  %cmp111 = icmp eq i64 %91, 1, !dbg !3510
  br i1 %cmp111, label %if.then.113, label %if.else.129, !dbg !3511

if.then.113:                                      ; preds = %cond.end.109
  %92 = bitcast i8** %pos114 to i8*, !dbg !3512
  call void @llvm.lifetime.start(i64 8, i8* %92) #2, !dbg !3512
  call void @llvm.dbg.declare(metadata i8** %pos114, metadata !544, metadata !1880), !dbg !3513
  %93 = load i32, i32* %kind.addr, align 4, !dbg !3514, !tbaa !1883
  %94 = load i8*, i8** %start.addr, align 8, !dbg !3515, !tbaa !1876
  %95 = load i8*, i8** %end.addr, align 8, !dbg !3516, !tbaa !1876
  %96 = load i8*, i8** %nl, align 8, !dbg !3517, !tbaa !1876
  %arrayidx115 = getelementptr i8, i8* %96, i64 0, !dbg !3517
  %97 = load i8, i8* %arrayidx115, align 1, !dbg !3517, !tbaa !2065
  %conv116 = sext i8 %97 to i32, !dbg !3517
  %call117 = call i8* @find_control_char(i32 %93, i8* %94, i8* %95, i32 %conv116), !dbg !3518
  store i8* %call117, i8** %pos114, align 8, !dbg !3513, !tbaa !1876
  %98 = load i8*, i8** %pos114, align 8, !dbg !3519, !tbaa !1876
  %cmp118 = icmp ne i8* %98, null, !dbg !3521
  br i1 %cmp118, label %if.then.120, label %if.end.127, !dbg !3522

if.then.120:                                      ; preds = %if.then.113
  %99 = load i8*, i8** %pos114, align 8, !dbg !3523, !tbaa !1876
  %100 = load i8*, i8** %start.addr, align 8, !dbg !3524, !tbaa !1876
  %sub.ptr.lhs.cast121 = ptrtoint i8* %99 to i64, !dbg !3525
  %sub.ptr.rhs.cast122 = ptrtoint i8* %100 to i64, !dbg !3525
  %sub.ptr.sub123 = sub i64 %sub.ptr.lhs.cast121, %sub.ptr.rhs.cast122, !dbg !3525
  %101 = load i32, i32* %kind.addr, align 4, !dbg !3526, !tbaa !1883
  %conv124 = sext i32 %101 to i64, !dbg !3526
  %div125 = sdiv i64 %sub.ptr.sub123, %conv124, !dbg !3527
  %add126 = add i64 %div125, 1, !dbg !3528
  store i64 %add126, i64* %retval, !dbg !3529
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.128, !dbg !3529

if.end.127:                                       ; preds = %if.then.113
  %102 = load i64, i64* %len, align 8, !dbg !3530, !tbaa !1941
  %103 = load i64*, i64** %consumed.addr, align 8, !dbg !3531, !tbaa !1876
  store i64 %102, i64* %103, align 8, !dbg !3532, !tbaa !1941
  store i64 -1, i64* %retval, !dbg !3533
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.128, !dbg !3533

cleanup.128:                                      ; preds = %if.end.127, %if.then.120
  %104 = bitcast i8** %pos114 to i8*, !dbg !3534
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !3534
  br label %cleanup.211

if.else.129:                                      ; preds = %cond.end.109
  %105 = bitcast i8** %s130 to i8*, !dbg !3535
  call void @llvm.lifetime.start(i64 8, i8* %105) #2, !dbg !3535
  call void @llvm.dbg.declare(metadata i8** %s130, metadata !547, metadata !1880), !dbg !3536
  %106 = load i8*, i8** %start.addr, align 8, !dbg !3537, !tbaa !1876
  store i8* %106, i8** %s130, align 8, !dbg !3536, !tbaa !1876
  %107 = bitcast i8** %e to i8*, !dbg !3538
  call void @llvm.lifetime.start(i64 8, i8* %107) #2, !dbg !3538
  call void @llvm.dbg.declare(metadata i8** %e, metadata !549, metadata !1880), !dbg !3539
  %108 = load i8*, i8** %end.addr, align 8, !dbg !3540, !tbaa !1876
  %109 = load i64, i64* %readnl_len, align 8, !dbg !3541, !tbaa !1941
  %sub = sub i64 %109, 1, !dbg !3542
  %110 = load i32, i32* %kind.addr, align 4, !dbg !3543, !tbaa !1883
  %conv131 = sext i32 %110 to i64, !dbg !3543
  %mul = mul i64 %sub, %conv131, !dbg !3544
  %idx.neg = sub i64 0, %mul, !dbg !3545
  %add.ptr132 = getelementptr i8, i8* %108, i64 %idx.neg, !dbg !3545
  store i8* %add.ptr132, i8** %e, align 8, !dbg !3539, !tbaa !1876
  %111 = bitcast i8** %pos133 to i8*, !dbg !3546
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !3546
  call void @llvm.dbg.declare(metadata i8** %pos133, metadata !550, metadata !1880), !dbg !3547
  %112 = load i8*, i8** %e, align 8, !dbg !3548, !tbaa !1876
  %113 = load i8*, i8** %s130, align 8, !dbg !3550, !tbaa !1876
  %cmp134 = icmp ult i8* %112, %113, !dbg !3551
  br i1 %cmp134, label %if.then.136, label %if.end.137, !dbg !3552

if.then.136:                                      ; preds = %if.else.129
  %114 = load i8*, i8** %s130, align 8, !dbg !3553, !tbaa !1876
  store i8* %114, i8** %e, align 8, !dbg !3554, !tbaa !1876
  br label %if.end.137, !dbg !3555

if.end.137:                                       ; preds = %if.then.136, %if.else.129
  br label %while.cond.138, !dbg !3556

while.cond.138:                                   ; preds = %cleanup.cont.193, %if.end.137
  %115 = load i8*, i8** %s130, align 8, !dbg !3557, !tbaa !1876
  %116 = load i8*, i8** %e, align 8, !dbg !3560, !tbaa !1876
  %cmp139 = icmp ult i8* %115, %116, !dbg !3561
  br i1 %cmp139, label %while.body.141, label %while.end.194, !dbg !3556

while.body.141:                                   ; preds = %while.cond.138
  %117 = bitcast i64* %i to i8*, !dbg !3562
  call void @llvm.lifetime.start(i64 8, i8* %117) #2, !dbg !3562
  call void @llvm.dbg.declare(metadata i64* %i, metadata !551, metadata !1880), !dbg !3563
  %118 = bitcast i8** %pos142 to i8*, !dbg !3564
  call void @llvm.lifetime.start(i64 8, i8* %118) #2, !dbg !3564
  call void @llvm.dbg.declare(metadata i8** %pos142, metadata !553, metadata !1880), !dbg !3565
  %119 = load i32, i32* %kind.addr, align 4, !dbg !3566, !tbaa !1883
  %120 = load i8*, i8** %s130, align 8, !dbg !3567, !tbaa !1876
  %121 = load i8*, i8** %end.addr, align 8, !dbg !3568, !tbaa !1876
  %122 = load i8*, i8** %nl, align 8, !dbg !3569, !tbaa !1876
  %arrayidx143 = getelementptr i8, i8* %122, i64 0, !dbg !3569
  %123 = load i8, i8* %arrayidx143, align 1, !dbg !3569, !tbaa !2065
  %conv144 = sext i8 %123 to i32, !dbg !3569
  %call145 = call i8* @find_control_char(i32 %119, i8* %120, i8* %121, i32 %conv144), !dbg !3570
  store i8* %call145, i8** %pos142, align 8, !dbg !3565, !tbaa !1876
  %124 = load i8*, i8** %pos142, align 8, !dbg !3571, !tbaa !1876
  %cmp146 = icmp eq i8* %124, null, !dbg !3573
  br i1 %cmp146, label %if.then.150, label %lor.lhs.false, !dbg !3574

lor.lhs.false:                                    ; preds = %while.body.141
  %125 = load i8*, i8** %pos142, align 8, !dbg !3575, !tbaa !1876
  %126 = load i8*, i8** %e, align 8, !dbg !3577, !tbaa !1876
  %cmp148 = icmp uge i8* %125, %126, !dbg !3578
  br i1 %cmp148, label %if.then.150, label %if.end.151, !dbg !3579

if.then.150:                                      ; preds = %lor.lhs.false, %while.body.141
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.190, !dbg !3580

if.end.151:                                       ; preds = %lor.lhs.false
  store i64 1, i64* %i, align 8, !dbg !3581, !tbaa !1941
  br label %for.cond.152, !dbg !3583

for.cond.152:                                     ; preds = %for.inc, %if.end.151
  %127 = load i64, i64* %i, align 8, !dbg !3584, !tbaa !1941
  %128 = load i64, i64* %readnl_len, align 8, !dbg !3588, !tbaa !1941
  %cmp153 = icmp slt i64 %127, %128, !dbg !3589
  br i1 %cmp153, label %for.body, label %for.end, !dbg !3590

for.body:                                         ; preds = %for.cond.152
  %129 = load i32, i32* %kind.addr, align 4, !dbg !3591, !tbaa !1883
  %cmp155 = icmp eq i32 %129, 1, !dbg !3594
  br i1 %cmp155, label %cond.true.157, label %cond.false.160, !dbg !3595

cond.true.157:                                    ; preds = %for.body
  %130 = load i64, i64* %i, align 8, !dbg !3596, !tbaa !1941
  %131 = load i8*, i8** %pos142, align 8, !dbg !3598, !tbaa !1876
  %arrayidx158 = getelementptr i8, i8* %131, i64 %130, !dbg !3599
  %132 = load i8, i8* %arrayidx158, align 1, !dbg !3599, !tbaa !2065
  %conv159 = zext i8 %132 to i32, !dbg !3599
  br label %cond.end.170, !dbg !3595

cond.false.160:                                   ; preds = %for.body
  %133 = load i32, i32* %kind.addr, align 4, !dbg !3600, !tbaa !1883
  %cmp161 = icmp eq i32 %133, 2, !dbg !3602
  br i1 %cmp161, label %cond.true.163, label %cond.false.166, !dbg !3603

cond.true.163:                                    ; preds = %cond.false.160
  %134 = load i64, i64* %i, align 8, !dbg !3604, !tbaa !1941
  %135 = load i8*, i8** %pos142, align 8, !dbg !3606, !tbaa !1876
  %136 = bitcast i8* %135 to i16*, !dbg !3607
  %arrayidx164 = getelementptr i16, i16* %136, i64 %134, !dbg !3608
  %137 = load i16, i16* %arrayidx164, align 2, !dbg !3608, !tbaa !2103
  %conv165 = zext i16 %137 to i32, !dbg !3608
  br label %cond.end.168, !dbg !3603

cond.false.166:                                   ; preds = %cond.false.160
  %138 = load i64, i64* %i, align 8, !dbg !3609, !tbaa !1941
  %139 = load i8*, i8** %pos142, align 8, !dbg !3611, !tbaa !1876
  %140 = bitcast i8* %139 to i32*, !dbg !3612
  %arrayidx167 = getelementptr i32, i32* %140, i64 %138, !dbg !3613
  %141 = load i32, i32* %arrayidx167, align 4, !dbg !3613, !tbaa !1883
  br label %cond.end.168, !dbg !3603

cond.end.168:                                     ; preds = %cond.false.166, %cond.true.163
  %cond169 = phi i32 [ %conv165, %cond.true.163 ], [ %141, %cond.false.166 ], !dbg !3603
  br label %cond.end.170, !dbg !3614

cond.end.170:                                     ; preds = %cond.end.168, %cond.true.157
  %cond171 = phi i32 [ %conv159, %cond.true.157 ], [ %cond169, %cond.end.168 ], !dbg !3595
  %142 = load i64, i64* %i, align 8, !dbg !3617, !tbaa !1941
  %143 = load i8*, i8** %nl, align 8, !dbg !3620, !tbaa !1876
  %arrayidx172 = getelementptr i8, i8* %143, i64 %142, !dbg !3620
  %144 = load i8, i8* %arrayidx172, align 1, !dbg !3620, !tbaa !2065
  %conv173 = sext i8 %144 to i32, !dbg !3620
  %cmp174 = icmp ne i32 %cond171, %conv173, !dbg !3621
  br i1 %cmp174, label %if.then.176, label %if.end.177, !dbg !3622

if.then.176:                                      ; preds = %cond.end.170
  br label %for.end, !dbg !3623

if.end.177:                                       ; preds = %cond.end.170
  br label %for.inc, !dbg !3624

for.inc:                                          ; preds = %if.end.177
  %145 = load i64, i64* %i, align 8, !dbg !3625, !tbaa !1941
  %inc = add i64 %145, 1, !dbg !3625
  store i64 %inc, i64* %i, align 8, !dbg !3625, !tbaa !1941
  br label %for.cond.152, !dbg !3626

for.end:                                          ; preds = %if.then.176, %for.cond.152
  %146 = load i64, i64* %i, align 8, !dbg !3627, !tbaa !1941
  %147 = load i64, i64* %readnl_len, align 8, !dbg !3629, !tbaa !1941
  %cmp178 = icmp eq i64 %146, %147, !dbg !3630
  br i1 %cmp178, label %if.then.180, label %if.end.187, !dbg !3631

if.then.180:                                      ; preds = %for.end
  %148 = load i8*, i8** %pos142, align 8, !dbg !3632, !tbaa !1876
  %149 = load i8*, i8** %start.addr, align 8, !dbg !3633, !tbaa !1876
  %sub.ptr.lhs.cast181 = ptrtoint i8* %148 to i64, !dbg !3634
  %sub.ptr.rhs.cast182 = ptrtoint i8* %149 to i64, !dbg !3634
  %sub.ptr.sub183 = sub i64 %sub.ptr.lhs.cast181, %sub.ptr.rhs.cast182, !dbg !3634
  %150 = load i32, i32* %kind.addr, align 4, !dbg !3635, !tbaa !1883
  %conv184 = sext i32 %150 to i64, !dbg !3635
  %div185 = sdiv i64 %sub.ptr.sub183, %conv184, !dbg !3636
  %151 = load i64, i64* %readnl_len, align 8, !dbg !3637, !tbaa !1941
  %add186 = add i64 %div185, %151, !dbg !3638
  store i64 %add186, i64* %retval, !dbg !3639
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.190, !dbg !3639

if.end.187:                                       ; preds = %for.end
  %152 = load i8*, i8** %pos142, align 8, !dbg !3640, !tbaa !1876
  %153 = load i32, i32* %kind.addr, align 4, !dbg !3641, !tbaa !1883
  %idx.ext188 = sext i32 %153 to i64, !dbg !3642
  %add.ptr189 = getelementptr i8, i8* %152, i64 %idx.ext188, !dbg !3642
  store i8* %add.ptr189, i8** %s130, align 8, !dbg !3643, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !3644
  br label %cleanup.190, !dbg !3644

cleanup.190:                                      ; preds = %if.end.187, %if.then.180, %if.then.150
  %154 = bitcast i8** %pos142 to i8*, !dbg !3645
  call void @llvm.lifetime.end(i64 8, i8* %154) #2, !dbg !3645
  %155 = bitcast i64* %i to i8*, !dbg !3645
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !3645
  %cleanup.dest.192 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.192, label %cleanup.208 [
    i32 0, label %cleanup.cont.193
    i32 7, label %while.end.194
  ]

cleanup.cont.193:                                 ; preds = %cleanup.190
  br label %while.cond.138, !dbg !3556

while.end.194:                                    ; preds = %cleanup.190, %while.cond.138
  %156 = load i32, i32* %kind.addr, align 4, !dbg !3646, !tbaa !1883
  %157 = load i8*, i8** %e, align 8, !dbg !3647, !tbaa !1876
  %158 = load i8*, i8** %end.addr, align 8, !dbg !3648, !tbaa !1876
  %159 = load i8*, i8** %nl, align 8, !dbg !3649, !tbaa !1876
  %arrayidx195 = getelementptr i8, i8* %159, i64 0, !dbg !3649
  %160 = load i8, i8* %arrayidx195, align 1, !dbg !3649, !tbaa !2065
  %conv196 = sext i8 %160 to i32, !dbg !3649
  %call197 = call i8* @find_control_char(i32 %156, i8* %157, i8* %158, i32 %conv196), !dbg !3650
  store i8* %call197, i8** %pos133, align 8, !dbg !3651, !tbaa !1876
  %161 = load i8*, i8** %pos133, align 8, !dbg !3652, !tbaa !1876
  %cmp198 = icmp eq i8* %161, null, !dbg !3654
  br i1 %cmp198, label %if.then.200, label %if.else.201, !dbg !3655

if.then.200:                                      ; preds = %while.end.194
  %162 = load i64, i64* %len, align 8, !dbg !3656, !tbaa !1941
  %163 = load i64*, i64** %consumed.addr, align 8, !dbg !3657, !tbaa !1876
  store i64 %162, i64* %163, align 8, !dbg !3658, !tbaa !1941
  br label %if.end.207, !dbg !3659

if.else.201:                                      ; preds = %while.end.194
  %164 = load i8*, i8** %pos133, align 8, !dbg !3660, !tbaa !1876
  %165 = load i8*, i8** %start.addr, align 8, !dbg !3661, !tbaa !1876
  %sub.ptr.lhs.cast202 = ptrtoint i8* %164 to i64, !dbg !3662
  %sub.ptr.rhs.cast203 = ptrtoint i8* %165 to i64, !dbg !3662
  %sub.ptr.sub204 = sub i64 %sub.ptr.lhs.cast202, %sub.ptr.rhs.cast203, !dbg !3662
  %166 = load i32, i32* %kind.addr, align 4, !dbg !3663, !tbaa !1883
  %conv205 = sext i32 %166 to i64, !dbg !3663
  %div206 = sdiv i64 %sub.ptr.sub204, %conv205, !dbg !3664
  %167 = load i64*, i64** %consumed.addr, align 8, !dbg !3665, !tbaa !1876
  store i64 %div206, i64* %167, align 8, !dbg !3666, !tbaa !1941
  br label %if.end.207

if.end.207:                                       ; preds = %if.else.201, %if.then.200
  store i64 -1, i64* %retval, !dbg !3667
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.208, !dbg !3667

cleanup.208:                                      ; preds = %if.end.207, %cleanup.190
  %168 = bitcast i8** %pos133 to i8*, !dbg !3668
  call void @llvm.lifetime.end(i64 8, i8* %168) #2, !dbg !3668
  %169 = bitcast i8** %e to i8*, !dbg !3668
  call void @llvm.lifetime.end(i64 8, i8* %169) #2, !dbg !3668
  %170 = bitcast i8** %s130 to i8*, !dbg !3668
  call void @llvm.lifetime.end(i64 8, i8* %170) #2, !dbg !3668
  br label %cleanup.211

cleanup.211:                                      ; preds = %cleanup.208, %cleanup.128
  %171 = bitcast i8** %nl to i8*, !dbg !3669
  call void @llvm.lifetime.end(i64 8, i8* %171) #2, !dbg !3669
  %172 = bitcast i64* %readnl_len to i8*, !dbg !3669
  call void @llvm.lifetime.end(i64 8, i8* %172) #2, !dbg !3669
  br label %cleanup.213

cleanup.213:                                      ; preds = %cleanup.211, %cleanup.93, %cleanup
  %173 = bitcast i64* %len to i8*, !dbg !3670
  call void @llvm.lifetime.end(i64 8, i8* %173) #2, !dbg !3670
  %174 = load i64, i64* %retval, !dbg !3670
  ret i64 %174, !dbg !3670
}

; Function Attrs: nounwind uwtable
define internal i8* @find_control_char(i32 %kind, i8* %s, i8* %end, i32 %ch) #0 {
entry:
  %retval = alloca i8*, align 8
  %kind.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %ch.addr = alloca i32, align 4
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !688, metadata !1880), !dbg !3671
  store i8* %s, i8** %s.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !689, metadata !1880), !dbg !3672
  store i8* %end, i8** %end.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !690, metadata !1880), !dbg !3673
  store i32 %ch, i32* %ch.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !691, metadata !1880), !dbg !3674
  %0 = load i32, i32* %kind.addr, align 4, !dbg !3675, !tbaa !1883
  %cmp = icmp eq i32 %0, 1, !dbg !3677
  br i1 %cmp, label %if.then, label %if.end, !dbg !3678

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !3679, !tbaa !1876
  %2 = load i32, i32* %ch.addr, align 4, !dbg !3681, !tbaa !1883
  %conv = trunc i32 %2 to i8, !dbg !3682
  %conv1 = sext i8 %conv to i32, !dbg !3682
  %3 = load i8*, i8** %end.addr, align 8, !dbg !3683, !tbaa !1876
  %4 = load i8*, i8** %s.addr, align 8, !dbg !3684, !tbaa !1876
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !3685
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3685
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3685
  %call = call i8* @memchr(i8* %1, i32 %conv1, i64 %sub.ptr.sub) #6, !dbg !3686
  store i8* %call, i8** %retval, !dbg !3687
  br label %return, !dbg !3687

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !3688

for.cond:                                         ; preds = %if.end.40, %if.end
  br label %while.cond, !dbg !3689

while.cond:                                       ; preds = %while.body, %for.cond
  %5 = load i32, i32* %kind.addr, align 4, !dbg !3693, !tbaa !1883
  %cmp2 = icmp eq i32 %5, 1, !dbg !3696
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !3697

cond.true:                                        ; preds = %while.cond
  %6 = load i8*, i8** %s.addr, align 8, !dbg !3698, !tbaa !1876
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !3700
  %7 = load i8, i8* %arrayidx, align 1, !dbg !3700, !tbaa !2065
  %conv4 = zext i8 %7 to i32, !dbg !3700
  br label %cond.end.12, !dbg !3697

cond.false:                                       ; preds = %while.cond
  %8 = load i32, i32* %kind.addr, align 4, !dbg !3701, !tbaa !1883
  %cmp5 = icmp eq i32 %8, 2, !dbg !3703
  br i1 %cmp5, label %cond.true.7, label %cond.false.10, !dbg !3704

cond.true.7:                                      ; preds = %cond.false
  %9 = load i8*, i8** %s.addr, align 8, !dbg !3705, !tbaa !1876
  %10 = bitcast i8* %9 to i16*, !dbg !3707
  %arrayidx8 = getelementptr i16, i16* %10, i64 0, !dbg !3708
  %11 = load i16, i16* %arrayidx8, align 2, !dbg !3708, !tbaa !2103
  %conv9 = zext i16 %11 to i32, !dbg !3708
  br label %cond.end, !dbg !3704

cond.false.10:                                    ; preds = %cond.false
  %12 = load i8*, i8** %s.addr, align 8, !dbg !3709, !tbaa !1876
  %13 = bitcast i8* %12 to i32*, !dbg !3711
  %arrayidx11 = getelementptr i32, i32* %13, i64 0, !dbg !3712
  %14 = load i32, i32* %arrayidx11, align 4, !dbg !3712, !tbaa !1883
  br label %cond.end, !dbg !3704

cond.end:                                         ; preds = %cond.false.10, %cond.true.7
  %cond = phi i32 [ %conv9, %cond.true.7 ], [ %14, %cond.false.10 ], !dbg !3704
  br label %cond.end.12, !dbg !3713

cond.end.12:                                      ; preds = %cond.end, %cond.true
  %cond13 = phi i32 [ %conv4, %cond.true ], [ %cond, %cond.end ], !dbg !3697
  %15 = load i32, i32* %ch.addr, align 4, !dbg !3716, !tbaa !1883
  %cmp14 = icmp ugt i32 %cond13, %15, !dbg !3719
  br i1 %cmp14, label %while.body, label %while.end, !dbg !3689

while.body:                                       ; preds = %cond.end.12
  %16 = load i32, i32* %kind.addr, align 4, !dbg !3720, !tbaa !1883
  %17 = load i8*, i8** %s.addr, align 8, !dbg !3721, !tbaa !1876
  %idx.ext = sext i32 %16 to i64, !dbg !3721
  %add.ptr = getelementptr i8, i8* %17, i64 %idx.ext, !dbg !3721
  store i8* %add.ptr, i8** %s.addr, align 8, !dbg !3721, !tbaa !1876
  br label %while.cond, !dbg !3689

while.end:                                        ; preds = %cond.end.12
  %18 = load i32, i32* %kind.addr, align 4, !dbg !3722, !tbaa !1883
  %cmp16 = icmp eq i32 %18, 1, !dbg !3724
  br i1 %cmp16, label %cond.true.18, label %cond.false.21, !dbg !3725

cond.true.18:                                     ; preds = %while.end
  %19 = load i8*, i8** %s.addr, align 8, !dbg !3726, !tbaa !1876
  %arrayidx19 = getelementptr i8, i8* %19, i64 0, !dbg !3728
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !3728, !tbaa !2065
  %conv20 = zext i8 %20 to i32, !dbg !3728
  br label %cond.end.31, !dbg !3725

cond.false.21:                                    ; preds = %while.end
  %21 = load i32, i32* %kind.addr, align 4, !dbg !3729, !tbaa !1883
  %cmp22 = icmp eq i32 %21, 2, !dbg !3731
  br i1 %cmp22, label %cond.true.24, label %cond.false.27, !dbg !3732

cond.true.24:                                     ; preds = %cond.false.21
  %22 = load i8*, i8** %s.addr, align 8, !dbg !3733, !tbaa !1876
  %23 = bitcast i8* %22 to i16*, !dbg !3735
  %arrayidx25 = getelementptr i16, i16* %23, i64 0, !dbg !3736
  %24 = load i16, i16* %arrayidx25, align 2, !dbg !3736, !tbaa !2103
  %conv26 = zext i16 %24 to i32, !dbg !3736
  br label %cond.end.29, !dbg !3732

cond.false.27:                                    ; preds = %cond.false.21
  %25 = load i8*, i8** %s.addr, align 8, !dbg !3737, !tbaa !1876
  %26 = bitcast i8* %25 to i32*, !dbg !3739
  %arrayidx28 = getelementptr i32, i32* %26, i64 0, !dbg !3740
  %27 = load i32, i32* %arrayidx28, align 4, !dbg !3740, !tbaa !1883
  br label %cond.end.29, !dbg !3732

cond.end.29:                                      ; preds = %cond.false.27, %cond.true.24
  %cond30 = phi i32 [ %conv26, %cond.true.24 ], [ %27, %cond.false.27 ], !dbg !3732
  br label %cond.end.31, !dbg !3741

cond.end.31:                                      ; preds = %cond.end.29, %cond.true.18
  %cond32 = phi i32 [ %conv20, %cond.true.18 ], [ %cond30, %cond.end.29 ], !dbg !3725
  %28 = load i32, i32* %ch.addr, align 4, !dbg !3744, !tbaa !1883
  %cmp33 = icmp eq i32 %cond32, %28, !dbg !3747
  br i1 %cmp33, label %if.then.35, label %if.end.36, !dbg !3748

if.then.35:                                       ; preds = %cond.end.31
  %29 = load i8*, i8** %s.addr, align 8, !dbg !3749, !tbaa !1876
  store i8* %29, i8** %retval, !dbg !3750
  br label %return, !dbg !3750

if.end.36:                                        ; preds = %cond.end.31
  %30 = load i8*, i8** %s.addr, align 8, !dbg !3751, !tbaa !1876
  %31 = load i8*, i8** %end.addr, align 8, !dbg !3753, !tbaa !1876
  %cmp37 = icmp eq i8* %30, %31, !dbg !3754
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !3755

if.then.39:                                       ; preds = %if.end.36
  store i8* null, i8** %retval, !dbg !3756
  br label %return, !dbg !3756

if.end.40:                                        ; preds = %if.end.36
  %32 = load i32, i32* %kind.addr, align 4, !dbg !3757, !tbaa !1883
  %33 = load i8*, i8** %s.addr, align 8, !dbg !3758, !tbaa !1876
  %idx.ext41 = sext i32 %32 to i64, !dbg !3758
  %add.ptr42 = getelementptr i8, i8* %33, i64 %idx.ext41, !dbg !3758
  store i8* %add.ptr42, i8** %s.addr, align 8, !dbg !3758, !tbaa !1876
  br label %for.cond, !dbg !3759

return:                                           ; preds = %if.then.39, %if.then.35, %if.then
  %34 = load i8*, i8** %retval, !dbg !3760
  ret i8* %34, !dbg !3760
}

; Function Attrs: nounwind uwtable
define internal void @textiowrapper_dealloc(%struct.textio* %self) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %g = alloca %union._gc_head*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !732, metadata !1880), !dbg !3761
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3762, !tbaa !1876
  %finalizing = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 19, !dbg !3763
  store i8 1, i8* %finalizing, align 1, !dbg !3764, !tbaa !3765
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3768, !tbaa !1876
  %2 = bitcast %struct.textio* %1 to %struct._object*, !dbg !3770
  %call = call i32 @_PyIOBase_finalize(%struct._object* %2), !dbg !3771
  %cmp = icmp slt i32 %call, 0, !dbg !3772
  br i1 %cmp, label %if.then, label %if.end, !dbg !3773

if.then:                                          ; preds = %entry
  br label %return, !dbg !3774

if.end:                                           ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3775, !tbaa !1876
  %call1 = call i32 @_textiowrapper_clear(%struct.textio* %3), !dbg !3776
  br label %do.body, !dbg !3777

do.body:                                          ; preds = %if.end
  %4 = bitcast %union._gc_head** %g to i8*, !dbg !3778
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !3778
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !733, metadata !1880), !dbg !3780
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3781, !tbaa !1876
  %6 = bitcast %struct.textio* %5 to %union._gc_head*, !dbg !3782
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %6, i64 -1, !dbg !3783
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !3780, !tbaa !1876
  br label %do.body.2, !dbg !3784

do.body.2:                                        ; preds = %do.body
  %7 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3785, !tbaa !1876
  %gc = bitcast %union._gc_head* %7 to %struct.anon.0*, !dbg !3788
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !3789
  %8 = load i64, i64* %gc_refs, align 8, !dbg !3789, !tbaa !3790
  %and = and i64 %8, 1, !dbg !3792
  %or = or i64 %and, -4, !dbg !3793
  %9 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3794, !tbaa !1876
  %gc3 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !3795
  %gc_refs4 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc3, i32 0, i32 2, !dbg !3796
  store i64 %or, i64* %gc_refs4, align 8, !dbg !3797, !tbaa !3790
  br label %do.cond, !dbg !3798

do.cond:                                          ; preds = %do.body.2
  br label %do.end, !dbg !3799

do.end:                                           ; preds = %do.cond
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3801, !tbaa !1876
  %gc5 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !3803
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 0, !dbg !3804
  %11 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !3804, !tbaa !3805
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3806, !tbaa !1876
  %gc6 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !3807
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 1, !dbg !3808
  %13 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !3808, !tbaa !3809
  %gc7 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !3810
  %gc_next8 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc7, i32 0, i32 0, !dbg !3811
  store %union._gc_head* %11, %union._gc_head** %gc_next8, align 8, !dbg !3812, !tbaa !3805
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3813, !tbaa !1876
  %gc9 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !3814
  %gc_prev10 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc9, i32 0, i32 1, !dbg !3815
  %15 = load %union._gc_head*, %union._gc_head** %gc_prev10, align 8, !dbg !3815, !tbaa !3809
  %16 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3816, !tbaa !1876
  %gc11 = bitcast %union._gc_head* %16 to %struct.anon.0*, !dbg !3817
  %gc_next12 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc11, i32 0, i32 0, !dbg !3818
  %17 = load %union._gc_head*, %union._gc_head** %gc_next12, align 8, !dbg !3818, !tbaa !3805
  %gc13 = bitcast %union._gc_head* %17 to %struct.anon.0*, !dbg !3819
  %gc_prev14 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc13, i32 0, i32 1, !dbg !3820
  store %union._gc_head* %15, %union._gc_head** %gc_prev14, align 8, !dbg !3821, !tbaa !3809
  %18 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3822, !tbaa !1876
  %gc15 = bitcast %union._gc_head* %18 to %struct.anon.0*, !dbg !3823
  %gc_next16 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc15, i32 0, i32 0, !dbg !3824
  store %union._gc_head* null, %union._gc_head** %gc_next16, align 8, !dbg !3825, !tbaa !3805
  %19 = bitcast %union._gc_head** %g to i8*, !dbg !3826
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !3826
  br label %do.end.18, !dbg !3827

do.end.18:                                        ; preds = %do.end
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3828, !tbaa !1876
  %weakreflist = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 29, !dbg !3830
  %21 = load %struct._object*, %struct._object** %weakreflist, align 8, !dbg !3830, !tbaa !3831
  %cmp19 = icmp ne %struct._object* %21, null, !dbg !3832
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !3833

if.then.20:                                       ; preds = %do.end.18
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3834, !tbaa !1876
  %23 = bitcast %struct.textio* %22 to %struct._object*, !dbg !3835
  call void @PyObject_ClearWeakRefs(%struct._object* %23), !dbg !3836
  br label %if.end.21, !dbg !3836

if.end.21:                                        ; preds = %if.then.20, %do.end.18
  br label %do.body.22, !dbg !3837

do.body.22:                                       ; preds = %if.end.21
  %24 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3838
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !3838
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !735, metadata !1880), !dbg !3840
  %25 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3841, !tbaa !1876
  %dict = getelementptr inbounds %struct.textio, %struct.textio* %25, i32 0, i32 30, !dbg !3842
  %26 = load %struct._object*, %struct._object** %dict, align 8, !dbg !3842, !tbaa !3843
  store %struct._object* %26, %struct._object** %_py_tmp, align 8, !dbg !3840, !tbaa !1876
  %27 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3844, !tbaa !1876
  %cmp23 = icmp ne %struct._object* %27, null, !dbg !3845
  br i1 %cmp23, label %if.then.24, label %if.end.32, !dbg !3846

if.then.24:                                       ; preds = %do.body.22
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3847, !tbaa !1876
  %dict25 = getelementptr inbounds %struct.textio, %struct.textio* %28, i32 0, i32 30, !dbg !3849
  store %struct._object* null, %struct._object** %dict25, align 8, !dbg !3850, !tbaa !3843
  br label %do.body.26, !dbg !3851

do.body.26:                                       ; preds = %if.then.24
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3852
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !3852
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !737, metadata !1880), !dbg !3854
  %30 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3855, !tbaa !1876
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8, !dbg !3854, !tbaa !1876
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3856, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !3858
  %32 = load i64, i64* %ob_refcnt, align 8, !dbg !3859, !tbaa !1927
  %dec = add i64 %32, -1, !dbg !3859
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3859, !tbaa !1927
  %cmp27 = icmp ne i64 %dec, 0, !dbg !3860
  br i1 %cmp27, label %if.then.28, label %if.else, !dbg !3861

if.then.28:                                       ; preds = %do.body.26
  br label %if.end.29, !dbg !3862

if.else:                                          ; preds = %do.body.26
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3864, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !3866
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3866, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !3867
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3867, !tbaa !2197
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3868, !tbaa !1876
  call void %35(%struct._object* %36), !dbg !3869
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.28
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3870
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !3870
  br label %do.cond.30, !dbg !3872

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !3873

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.32, !dbg !3875

if.end.32:                                        ; preds = %do.end.31, %do.body.22
  %38 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3877
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !3877
  br label %do.end.34, !dbg !3880

do.end.34:                                        ; preds = %if.end.32
  %39 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3881, !tbaa !1876
  %40 = bitcast %struct.textio* %39 to %struct._object*, !dbg !3882
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !3883
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !3883, !tbaa !2195
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 38, !dbg !3884
  %42 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3884, !tbaa !3239
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3885, !tbaa !1876
  %44 = bitcast %struct.textio* %43 to %struct._object*, !dbg !3886
  %45 = bitcast %struct._object* %44 to i8*, !dbg !3886
  call void %42(i8* %45), !dbg !3887
  br label %return, !dbg !3888

return:                                           ; preds = %do.end.34, %if.then
  ret void, !dbg !3889
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_repr(%struct.textio* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %nameobj = alloca %struct._object*, align 8
  %modeobj = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %s = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp38 = alloca %struct._object*, align 8
  %_py_decref_tmp58 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !810, metadata !1880), !dbg !3891
  %0 = bitcast %struct._object** %nameobj to i8*, !dbg !3892
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3892
  call void @llvm.dbg.declare(metadata %struct._object** %nameobj, metadata !811, metadata !1880), !dbg !3893
  %1 = bitcast %struct._object** %modeobj to i8*, !dbg !3892
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3892
  call void @llvm.dbg.declare(metadata %struct._object** %modeobj, metadata !812, metadata !1880), !dbg !3894
  %2 = bitcast %struct._object** %res to i8*, !dbg !3892
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3892
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !813, metadata !1880), !dbg !3895
  %3 = bitcast %struct._object** %s to i8*, !dbg !3892
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3892
  call void @llvm.dbg.declare(metadata %struct._object** %s, metadata !814, metadata !1880), !dbg !3896
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3897, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 1, !dbg !3899
  %5 = load i32, i32* %ok, align 4, !dbg !3899, !tbaa !3900
  %cmp = icmp sle i32 %5, 0, !dbg !3901
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !3902

if.then:                                          ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3903, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 2, !dbg !3907
  %7 = load i32, i32* %detached, align 4, !dbg !3907, !tbaa !3908
  %tobool = icmp ne i32 %7, 0, !dbg !3909
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !3910

if.then.1:                                        ; preds = %if.then
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3911, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !3914
  br label %if.end, !dbg !3915

if.else:                                          ; preds = %if.then
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3916, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !3919
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !3920
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3922

if.end.2:                                         ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0)), !dbg !3923
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !3924, !tbaa !1876
  %10 = load %struct._object*, %struct._object** %res, align 8, !dbg !3925, !tbaa !1876
  %cmp3 = icmp eq %struct._object* %10, null, !dbg !3927
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !3928

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !3929
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3929

if.end.5:                                         ; preds = %if.end.2
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3930, !tbaa !1876
  %12 = bitcast %struct.textio* %11 to %struct._object*, !dbg !3931
  %call6 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %12, %struct._Py_Identifier* @PyId_name), !dbg !3932
  store %struct._object* %call6, %struct._object** %nameobj, align 8, !dbg !3933, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !3934, !tbaa !1876
  %cmp7 = icmp eq %struct._object* %13, null, !dbg !3935
  br i1 %cmp7, label %if.then.8, label %if.else.14, !dbg !3936

if.then.8:                                        ; preds = %if.end.5
  %14 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3937, !tbaa !1876
  %call9 = call i32 @PyErr_ExceptionMatches(%struct._object* %14), !dbg !3940
  %tobool10 = icmp ne i32 %call9, 0, !dbg !3940
  br i1 %tobool10, label %if.then.11, label %if.else.12, !dbg !3941

if.then.11:                                       ; preds = %if.then.8
  call void @PyErr_Clear(), !dbg !3942
  br label %if.end.13, !dbg !3942

if.else.12:                                       ; preds = %if.then.8
  br label %error, !dbg !3943

if.end.13:                                        ; preds = %if.then.11
  br label %if.end.26, !dbg !3944

if.else.14:                                       ; preds = %if.end.5
  %15 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !3945, !tbaa !1876
  %call15 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), %struct._object* %15), !dbg !3946
  store %struct._object* %call15, %struct._object** %s, align 8, !dbg !3947, !tbaa !1876
  br label %do.body, !dbg !3948

do.body:                                          ; preds = %if.else.14
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3949
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !3949
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !815, metadata !1880), !dbg !3951
  %17 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !3952, !tbaa !1876
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !3951, !tbaa !1876
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3953, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !3955
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !3956, !tbaa !1927
  %dec = add i64 %19, -1, !dbg !3956
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3956, !tbaa !1927
  %cmp16 = icmp ne i64 %dec, 0, !dbg !3957
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !3958

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !3959

if.else.18:                                       ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3961, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !3963
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3963, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !3964
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3964, !tbaa !2197
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3965, !tbaa !1876
  call void %22(%struct._object* %23), !dbg !3966
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.18, %if.then.17
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3967
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !3967
  br label %do.cond, !dbg !3969

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !3970

do.end:                                           ; preds = %do.cond
  %25 = load %struct._object*, %struct._object** %s, align 8, !dbg !3972, !tbaa !1876
  %cmp20 = icmp eq %struct._object* %25, null, !dbg !3974
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !3975

if.then.21:                                       ; preds = %do.end
  br label %error, !dbg !3976

if.end.22:                                        ; preds = %do.end
  %26 = load %struct._object*, %struct._object** %s, align 8, !dbg !3977, !tbaa !1876
  call void @PyUnicode_AppendAndDel(%struct._object** %res, %struct._object* %26), !dbg !3978
  %27 = load %struct._object*, %struct._object** %res, align 8, !dbg !3979, !tbaa !1876
  %cmp23 = icmp eq %struct._object* %27, null, !dbg !3981
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !3982

if.then.24:                                       ; preds = %if.end.22
  store %struct._object* null, %struct._object** %retval, !dbg !3983
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3983

if.end.25:                                        ; preds = %if.end.22
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.end.13
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3984, !tbaa !1876
  %29 = bitcast %struct.textio* %28 to %struct._object*, !dbg !3985
  %call27 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %29, %struct._Py_Identifier* @PyId_mode), !dbg !3986
  store %struct._object* %call27, %struct._object** %modeobj, align 8, !dbg !3987, !tbaa !1876
  %30 = load %struct._object*, %struct._object** %modeobj, align 8, !dbg !3988, !tbaa !1876
  %cmp28 = icmp eq %struct._object* %30, null, !dbg !3989
  br i1 %cmp28, label %if.then.29, label %if.else.35, !dbg !3990

if.then.29:                                       ; preds = %if.end.26
  %31 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3991, !tbaa !1876
  %call30 = call i32 @PyErr_ExceptionMatches(%struct._object* %31), !dbg !3994
  %tobool31 = icmp ne i32 %call30, 0, !dbg !3994
  br i1 %tobool31, label %if.then.32, label %if.else.33, !dbg !3995

if.then.32:                                       ; preds = %if.then.29
  call void @PyErr_Clear(), !dbg !3996
  br label %if.end.34, !dbg !3996

if.else.33:                                       ; preds = %if.then.29
  br label %error, !dbg !3997

if.end.34:                                        ; preds = %if.then.32
  br label %if.end.55, !dbg !3998

if.else.35:                                       ; preds = %if.end.26
  %32 = load %struct._object*, %struct._object** %modeobj, align 8, !dbg !3999, !tbaa !1876
  %call36 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i32 0, i32 0), %struct._object* %32), !dbg !4000
  store %struct._object* %call36, %struct._object** %s, align 8, !dbg !4001, !tbaa !1876
  br label %do.body.37, !dbg !4002

do.body.37:                                       ; preds = %if.else.35
  %33 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !4003
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !4003
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp38, metadata !819, metadata !1880), !dbg !4005
  %34 = load %struct._object*, %struct._object** %modeobj, align 8, !dbg !4006, !tbaa !1876
  store %struct._object* %34, %struct._object** %_py_decref_tmp38, align 8, !dbg !4005, !tbaa !1876
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !4007, !tbaa !1876
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !4009
  %36 = load i64, i64* %ob_refcnt39, align 8, !dbg !4010, !tbaa !1927
  %dec40 = add i64 %36, -1, !dbg !4010
  store i64 %dec40, i64* %ob_refcnt39, align 8, !dbg !4010, !tbaa !1927
  %cmp41 = icmp ne i64 %dec40, 0, !dbg !4011
  br i1 %cmp41, label %if.then.42, label %if.else.43, !dbg !4012

if.then.42:                                       ; preds = %do.body.37
  br label %if.end.46, !dbg !4013

if.else.43:                                       ; preds = %do.body.37
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !4015, !tbaa !1876
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !4017
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !4017, !tbaa !2195
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !4018
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8, !dbg !4018, !tbaa !2197
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !4019, !tbaa !1876
  call void %39(%struct._object* %40), !dbg !4020
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  %41 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !4021
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !4021
  br label %do.cond.47, !dbg !4023

do.cond.47:                                       ; preds = %if.end.46
  br label %do.end.48, !dbg !4024

do.end.48:                                        ; preds = %do.cond.47
  %42 = load %struct._object*, %struct._object** %s, align 8, !dbg !4026, !tbaa !1876
  %cmp49 = icmp eq %struct._object* %42, null, !dbg !4028
  br i1 %cmp49, label %if.then.50, label %if.end.51, !dbg !4029

if.then.50:                                       ; preds = %do.end.48
  br label %error, !dbg !4030

if.end.51:                                        ; preds = %do.end.48
  %43 = load %struct._object*, %struct._object** %s, align 8, !dbg !4031, !tbaa !1876
  call void @PyUnicode_AppendAndDel(%struct._object** %res, %struct._object* %43), !dbg !4032
  %44 = load %struct._object*, %struct._object** %res, align 8, !dbg !4033, !tbaa !1876
  %cmp52 = icmp eq %struct._object* %44, null, !dbg !4035
  br i1 %cmp52, label %if.then.53, label %if.end.54, !dbg !4036

if.then.53:                                       ; preds = %if.end.51
  store %struct._object* null, %struct._object** %retval, !dbg !4037
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4037

if.end.54:                                        ; preds = %if.end.51
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.end.34
  %45 = load %struct._object*, %struct._object** %res, align 8, !dbg !4038, !tbaa !1876
  %46 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4039, !tbaa !1876
  %encoding = getelementptr inbounds %struct.textio, %struct.textio* %46, i32 0, i32 5, !dbg !4040
  %47 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !4040, !tbaa !4041
  %call56 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i32 0, i32 0), %struct._object* %45, %struct._object* %47), !dbg !4042
  store %struct._object* %call56, %struct._object** %s, align 8, !dbg !4043, !tbaa !1876
  br label %do.body.57, !dbg !4044

do.body.57:                                       ; preds = %if.end.55
  %48 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !4045
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !4045
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp58, metadata !823, metadata !1880), !dbg !4047
  %49 = load %struct._object*, %struct._object** %res, align 8, !dbg !4048, !tbaa !1876
  store %struct._object* %49, %struct._object** %_py_decref_tmp58, align 8, !dbg !4047, !tbaa !1876
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !4049, !tbaa !1876
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !4051
  %51 = load i64, i64* %ob_refcnt59, align 8, !dbg !4052, !tbaa !1927
  %dec60 = add i64 %51, -1, !dbg !4052
  store i64 %dec60, i64* %ob_refcnt59, align 8, !dbg !4052, !tbaa !1927
  %cmp61 = icmp ne i64 %dec60, 0, !dbg !4053
  br i1 %cmp61, label %if.then.62, label %if.else.63, !dbg !4054

if.then.62:                                       ; preds = %do.body.57
  br label %if.end.66, !dbg !4055

if.else.63:                                       ; preds = %do.body.57
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !4057, !tbaa !1876
  %ob_type64 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !4059
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type64, align 8, !dbg !4059, !tbaa !2195
  %tp_dealloc65 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !4060
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc65, align 8, !dbg !4060, !tbaa !2197
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !4061, !tbaa !1876
  call void %54(%struct._object* %55), !dbg !4062
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.63, %if.then.62
  %56 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !4063
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !4063
  br label %do.cond.67, !dbg !4065

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !4066

do.end.68:                                        ; preds = %do.cond.67
  %57 = load %struct._object*, %struct._object** %s, align 8, !dbg !4068, !tbaa !1876
  store %struct._object* %57, %struct._object** %retval, !dbg !4069
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4069

error:                                            ; preds = %if.then.50, %if.else.33, %if.then.21, %if.else.12
  br label %do.body.69, !dbg !4070

do.body.69:                                       ; preds = %error
  %58 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4071
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !4071
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !825, metadata !1880), !dbg !4073
  %59 = load %struct._object*, %struct._object** %res, align 8, !dbg !4074, !tbaa !1876
  store %struct._object* %59, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4073, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4075, !tbaa !1876
  %cmp70 = icmp ne %struct._object* %60, null, !dbg !4076
  br i1 %cmp70, label %if.then.71, label %if.end.84, !dbg !4077

if.then.71:                                       ; preds = %do.body.69
  br label %do.body.72, !dbg !4078

do.body.72:                                       ; preds = %if.then.71
  %61 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !4080
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !4080
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp73, metadata !827, metadata !1880), !dbg !4082
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4083, !tbaa !1876
  store %struct._object* %62, %struct._object** %_py_decref_tmp73, align 8, !dbg !4082, !tbaa !1876
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !4084, !tbaa !1876
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !4086
  %64 = load i64, i64* %ob_refcnt74, align 8, !dbg !4087, !tbaa !1927
  %dec75 = add i64 %64, -1, !dbg !4087
  store i64 %dec75, i64* %ob_refcnt74, align 8, !dbg !4087, !tbaa !1927
  %cmp76 = icmp ne i64 %dec75, 0, !dbg !4088
  br i1 %cmp76, label %if.then.77, label %if.else.78, !dbg !4089

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81, !dbg !4090

if.else.78:                                       ; preds = %do.body.72
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !4092, !tbaa !1876
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !4094
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8, !dbg !4094, !tbaa !2195
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !4095
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8, !dbg !4095, !tbaa !2197
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !4096, !tbaa !1876
  call void %67(%struct._object* %68), !dbg !4097
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  %69 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !4098
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !4098
  br label %do.cond.82, !dbg !4100

do.cond.82:                                       ; preds = %if.end.81
  br label %do.end.83, !dbg !4101

do.end.83:                                        ; preds = %do.cond.82
  br label %if.end.84, !dbg !4103

if.end.84:                                        ; preds = %do.end.83, %do.body.69
  %70 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4105
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !4105
  br label %do.cond.85, !dbg !4108

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !4109

do.end.86:                                        ; preds = %do.cond.85
  store %struct._object* null, %struct._object** %retval, !dbg !4111
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4111

cleanup:                                          ; preds = %do.end.86, %do.end.68, %if.then.53, %if.then.24, %if.then.4, %if.end
  %71 = bitcast %struct._object** %s to i8*, !dbg !4112
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !4112
  %72 = bitcast %struct._object** %res to i8*, !dbg !4112
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !4112
  %73 = bitcast %struct._object** %modeobj to i8*, !dbg !4112
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !4112
  %74 = bitcast %struct._object** %nameobj to i8*, !dbg !4112
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !4112
  %75 = load %struct._object*, %struct._object** %retval, !dbg !4112
  ret %struct._object* %75, !dbg !4112
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_traverse(%struct.textio* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  %vret64 = alloca i32, align 4
  %vret78 = alloca i32, align 4
  %vret92 = alloca i32, align 4
  %vret106 = alloca i32, align 4
  %vret120 = alloca i32, align 4
  %vret134 = alloca i32, align 4
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !834, metadata !1880), !dbg !4113
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !835, metadata !1880), !dbg !4114
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !836, metadata !1880), !dbg !4115
  br label %do.body, !dbg !4116

do.body:                                          ; preds = %entry
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4117, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 4, !dbg !4119
  %1 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !4119, !tbaa !4120
  %tobool = icmp ne %struct._object* %1, null, !dbg !4121
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !4122

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !4123
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !4123
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !837, metadata !1880), !dbg !4125
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4126, !tbaa !1876
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4127, !tbaa !1876
  %buffer1 = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 4, !dbg !4128
  %5 = load %struct._object*, %struct._object** %buffer1, align 8, !dbg !4128, !tbaa !4120
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !4129, !tbaa !1876
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !4126
  store i32 %call, i32* %vret, align 4, !dbg !4125, !tbaa !1883
  %7 = load i32, i32* %vret, align 4, !dbg !4130, !tbaa !1883
  %tobool2 = icmp ne i32 %7, 0, !dbg !4130
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !4132

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !4133, !tbaa !1883
  store i32 %8, i32* %retval, !dbg !4135
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4135

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !4136
  br label %cleanup, !dbg !4136

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !4138
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !4138
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.4, !dbg !4141

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4142

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !4145

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4146, !tbaa !1876
  %encoding = getelementptr inbounds %struct.textio, %struct.textio* %10, i32 0, i32 5, !dbg !4148
  %11 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !4148, !tbaa !4041
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !4149
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !4150

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !4151
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !4151
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !841, metadata !1880), !dbg !4153
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4154, !tbaa !1876
  %14 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4155, !tbaa !1876
  %encoding9 = getelementptr inbounds %struct.textio, %struct.textio* %14, i32 0, i32 5, !dbg !4156
  %15 = load %struct._object*, %struct._object** %encoding9, align 8, !dbg !4156, !tbaa !4041
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !4157, !tbaa !1876
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !4154
  store i32 %call10, i32* %vret8, align 4, !dbg !4153, !tbaa !1883
  %17 = load i32, i32* %vret8, align 4, !dbg !4158, !tbaa !1883
  %tobool11 = icmp ne i32 %17, 0, !dbg !4158
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !4160

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !4161, !tbaa !1883
  store i32 %18, i32* %retval, !dbg !4163
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !4163

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !4164
  br label %cleanup.14, !dbg !4164

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !4166
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !4166
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.15, label %unreachable [
    i32 0, label %cleanup.cont.16
    i32 1, label %return
  ]

cleanup.cont.16:                                  ; preds = %cleanup.14
  br label %if.end.17, !dbg !4169

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !4170

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !4173

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4174, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 6, !dbg !4176
  %21 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !4176, !tbaa !4177
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !4178
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !4179

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !4180
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !4180
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !845, metadata !1880), !dbg !4182
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4183, !tbaa !1876
  %24 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4184, !tbaa !1876
  %encoder23 = getelementptr inbounds %struct.textio, %struct.textio* %24, i32 0, i32 6, !dbg !4185
  %25 = load %struct._object*, %struct._object** %encoder23, align 8, !dbg !4185, !tbaa !4177
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !4186, !tbaa !1876
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !4183
  store i32 %call24, i32* %vret22, align 4, !dbg !4182, !tbaa !1883
  %27 = load i32, i32* %vret22, align 4, !dbg !4187, !tbaa !1883
  %tobool25 = icmp ne i32 %27, 0, !dbg !4187
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !4189

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !4190, !tbaa !1883
  store i32 %28, i32* %retval, !dbg !4192
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !4192

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !4193
  br label %cleanup.28, !dbg !4193

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !4195
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !4195
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.29, label %unreachable [
    i32 0, label %cleanup.cont.30
    i32 1, label %return
  ]

cleanup.cont.30:                                  ; preds = %cleanup.28
  br label %if.end.31, !dbg !4198

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !4199

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !4202

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4203, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %30, i32 0, i32 7, !dbg !4205
  %31 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !4205, !tbaa !4206
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !4207
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !4208

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !4209
  call void @llvm.lifetime.start(i64 4, i8* %32) #2, !dbg !4209
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !849, metadata !1880), !dbg !4211
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4212, !tbaa !1876
  %34 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4213, !tbaa !1876
  %decoder37 = getelementptr inbounds %struct.textio, %struct.textio* %34, i32 0, i32 7, !dbg !4214
  %35 = load %struct._object*, %struct._object** %decoder37, align 8, !dbg !4214, !tbaa !4206
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !4215, !tbaa !1876
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !4212
  store i32 %call38, i32* %vret36, align 4, !dbg !4211, !tbaa !1883
  %37 = load i32, i32* %vret36, align 4, !dbg !4216, !tbaa !1883
  %tobool39 = icmp ne i32 %37, 0, !dbg !4216
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !4218

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !4219, !tbaa !1883
  store i32 %38, i32* %retval, !dbg !4221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !4221

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !4222
  br label %cleanup.42, !dbg !4222

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !4224
  call void @llvm.lifetime.end(i64 4, i8* %39) #2, !dbg !4224
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.43, label %unreachable [
    i32 0, label %cleanup.cont.44
    i32 1, label %return
  ]

cleanup.cont.44:                                  ; preds = %cleanup.42
  br label %if.end.45, !dbg !4227

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !4228

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !4231

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4232, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %40, i32 0, i32 8, !dbg !4234
  %41 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !4234, !tbaa !4235
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !4236
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !4237

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !4238
  call void @llvm.lifetime.start(i64 4, i8* %42) #2, !dbg !4238
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !853, metadata !1880), !dbg !4240
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4241, !tbaa !1876
  %44 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4242, !tbaa !1876
  %readnl51 = getelementptr inbounds %struct.textio, %struct.textio* %44, i32 0, i32 8, !dbg !4243
  %45 = load %struct._object*, %struct._object** %readnl51, align 8, !dbg !4243, !tbaa !4235
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !4244, !tbaa !1876
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !4241
  store i32 %call52, i32* %vret50, align 4, !dbg !4240, !tbaa !1883
  %47 = load i32, i32* %vret50, align 4, !dbg !4245, !tbaa !1883
  %tobool53 = icmp ne i32 %47, 0, !dbg !4245
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !4247

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !4248, !tbaa !1883
  store i32 %48, i32* %retval, !dbg !4250
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !4250

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !4251
  br label %cleanup.56, !dbg !4251

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !4253
  call void @llvm.lifetime.end(i64 4, i8* %49) #2, !dbg !4253
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.57, label %unreachable [
    i32 0, label %cleanup.cont.58
    i32 1, label %return
  ]

cleanup.cont.58:                                  ; preds = %cleanup.56
  br label %if.end.59, !dbg !4256

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !4257

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61, !dbg !4260

do.body.61:                                       ; preds = %do.end.60
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4261, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 22, !dbg !4263
  %51 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !4263, !tbaa !4264
  %tobool62 = icmp ne %struct._object* %51, null, !dbg !4265
  br i1 %tobool62, label %if.then.63, label %if.end.73, !dbg !4266

if.then.63:                                       ; preds = %do.body.61
  %52 = bitcast i32* %vret64 to i8*, !dbg !4267
  call void @llvm.lifetime.start(i64 4, i8* %52) #2, !dbg !4267
  call void @llvm.dbg.declare(metadata i32* %vret64, metadata !857, metadata !1880), !dbg !4269
  %53 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4270, !tbaa !1876
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4271, !tbaa !1876
  %decoded_chars65 = getelementptr inbounds %struct.textio, %struct.textio* %54, i32 0, i32 22, !dbg !4272
  %55 = load %struct._object*, %struct._object** %decoded_chars65, align 8, !dbg !4272, !tbaa !4264
  %56 = load i8*, i8** %arg.addr, align 8, !dbg !4273, !tbaa !1876
  %call66 = call i32 %53(%struct._object* %55, i8* %56), !dbg !4270
  store i32 %call66, i32* %vret64, align 4, !dbg !4269, !tbaa !1883
  %57 = load i32, i32* %vret64, align 4, !dbg !4274, !tbaa !1883
  %tobool67 = icmp ne i32 %57, 0, !dbg !4274
  br i1 %tobool67, label %if.then.68, label %if.end.69, !dbg !4276

if.then.68:                                       ; preds = %if.then.63
  %58 = load i32, i32* %vret64, align 4, !dbg !4277, !tbaa !1883
  store i32 %58, i32* %retval, !dbg !4279
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !4279

if.end.69:                                        ; preds = %if.then.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !4280
  br label %cleanup.70, !dbg !4280

cleanup.70:                                       ; preds = %if.end.69, %if.then.68
  %59 = bitcast i32* %vret64 to i8*, !dbg !4282
  call void @llvm.lifetime.end(i64 4, i8* %59) #2, !dbg !4282
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.71, label %unreachable [
    i32 0, label %cleanup.cont.72
    i32 1, label %return
  ]

cleanup.cont.72:                                  ; preds = %cleanup.70
  br label %if.end.73, !dbg !4285

if.end.73:                                        ; preds = %cleanup.cont.72, %do.body.61
  br label %do.end.74, !dbg !4286

do.end.74:                                        ; preds = %if.end.73
  br label %do.body.75, !dbg !4289

do.body.75:                                       ; preds = %do.end.74
  %60 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4290, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %60, i32 0, i32 24, !dbg !4292
  %61 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !4292, !tbaa !4293
  %tobool76 = icmp ne %struct._object* %61, null, !dbg !4294
  br i1 %tobool76, label %if.then.77, label %if.end.87, !dbg !4295

if.then.77:                                       ; preds = %do.body.75
  %62 = bitcast i32* %vret78 to i8*, !dbg !4296
  call void @llvm.lifetime.start(i64 4, i8* %62) #2, !dbg !4296
  call void @llvm.dbg.declare(metadata i32* %vret78, metadata !861, metadata !1880), !dbg !4298
  %63 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4299, !tbaa !1876
  %64 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4300, !tbaa !1876
  %pending_bytes79 = getelementptr inbounds %struct.textio, %struct.textio* %64, i32 0, i32 24, !dbg !4301
  %65 = load %struct._object*, %struct._object** %pending_bytes79, align 8, !dbg !4301, !tbaa !4293
  %66 = load i8*, i8** %arg.addr, align 8, !dbg !4302, !tbaa !1876
  %call80 = call i32 %63(%struct._object* %65, i8* %66), !dbg !4299
  store i32 %call80, i32* %vret78, align 4, !dbg !4298, !tbaa !1883
  %67 = load i32, i32* %vret78, align 4, !dbg !4303, !tbaa !1883
  %tobool81 = icmp ne i32 %67, 0, !dbg !4303
  br i1 %tobool81, label %if.then.82, label %if.end.83, !dbg !4305

if.then.82:                                       ; preds = %if.then.77
  %68 = load i32, i32* %vret78, align 4, !dbg !4306, !tbaa !1883
  store i32 %68, i32* %retval, !dbg !4308
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84, !dbg !4308

if.end.83:                                        ; preds = %if.then.77
  store i32 0, i32* %cleanup.dest.slot, !dbg !4309
  br label %cleanup.84, !dbg !4309

cleanup.84:                                       ; preds = %if.end.83, %if.then.82
  %69 = bitcast i32* %vret78 to i8*, !dbg !4311
  call void @llvm.lifetime.end(i64 4, i8* %69) #2, !dbg !4311
  %cleanup.dest.85 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.85, label %unreachable [
    i32 0, label %cleanup.cont.86
    i32 1, label %return
  ]

cleanup.cont.86:                                  ; preds = %cleanup.84
  br label %if.end.87, !dbg !4314

if.end.87:                                        ; preds = %cleanup.cont.86, %do.body.75
  br label %do.end.88, !dbg !4315

do.end.88:                                        ; preds = %if.end.87
  br label %do.body.89, !dbg !4318

do.body.89:                                       ; preds = %do.end.88
  %70 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4319, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %70, i32 0, i32 26, !dbg !4321
  %71 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !4321, !tbaa !4322
  %tobool90 = icmp ne %struct._object* %71, null, !dbg !4323
  br i1 %tobool90, label %if.then.91, label %if.end.101, !dbg !4324

if.then.91:                                       ; preds = %do.body.89
  %72 = bitcast i32* %vret92 to i8*, !dbg !4325
  call void @llvm.lifetime.start(i64 4, i8* %72) #2, !dbg !4325
  call void @llvm.dbg.declare(metadata i32* %vret92, metadata !865, metadata !1880), !dbg !4327
  %73 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4328, !tbaa !1876
  %74 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4329, !tbaa !1876
  %snapshot93 = getelementptr inbounds %struct.textio, %struct.textio* %74, i32 0, i32 26, !dbg !4330
  %75 = load %struct._object*, %struct._object** %snapshot93, align 8, !dbg !4330, !tbaa !4322
  %76 = load i8*, i8** %arg.addr, align 8, !dbg !4331, !tbaa !1876
  %call94 = call i32 %73(%struct._object* %75, i8* %76), !dbg !4328
  store i32 %call94, i32* %vret92, align 4, !dbg !4327, !tbaa !1883
  %77 = load i32, i32* %vret92, align 4, !dbg !4332, !tbaa !1883
  %tobool95 = icmp ne i32 %77, 0, !dbg !4332
  br i1 %tobool95, label %if.then.96, label %if.end.97, !dbg !4334

if.then.96:                                       ; preds = %if.then.91
  %78 = load i32, i32* %vret92, align 4, !dbg !4335, !tbaa !1883
  store i32 %78, i32* %retval, !dbg !4337
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !4337

if.end.97:                                        ; preds = %if.then.91
  store i32 0, i32* %cleanup.dest.slot, !dbg !4338
  br label %cleanup.98, !dbg !4338

cleanup.98:                                       ; preds = %if.end.97, %if.then.96
  %79 = bitcast i32* %vret92 to i8*, !dbg !4340
  call void @llvm.lifetime.end(i64 4, i8* %79) #2, !dbg !4340
  %cleanup.dest.99 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.99, label %unreachable [
    i32 0, label %cleanup.cont.100
    i32 1, label %return
  ]

cleanup.cont.100:                                 ; preds = %cleanup.98
  br label %if.end.101, !dbg !4343

if.end.101:                                       ; preds = %cleanup.cont.100, %do.body.89
  br label %do.end.102, !dbg !4344

do.end.102:                                       ; preds = %if.end.101
  br label %do.body.103, !dbg !4347

do.body.103:                                      ; preds = %do.end.102
  %80 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4348, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %80, i32 0, i32 9, !dbg !4350
  %81 = load %struct._object*, %struct._object** %errors, align 8, !dbg !4350, !tbaa !4351
  %tobool104 = icmp ne %struct._object* %81, null, !dbg !4352
  br i1 %tobool104, label %if.then.105, label %if.end.115, !dbg !4353

if.then.105:                                      ; preds = %do.body.103
  %82 = bitcast i32* %vret106 to i8*, !dbg !4354
  call void @llvm.lifetime.start(i64 4, i8* %82) #2, !dbg !4354
  call void @llvm.dbg.declare(metadata i32* %vret106, metadata !869, metadata !1880), !dbg !4356
  %83 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4357, !tbaa !1876
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4358, !tbaa !1876
  %errors107 = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 9, !dbg !4359
  %85 = load %struct._object*, %struct._object** %errors107, align 8, !dbg !4359, !tbaa !4351
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !4360, !tbaa !1876
  %call108 = call i32 %83(%struct._object* %85, i8* %86), !dbg !4357
  store i32 %call108, i32* %vret106, align 4, !dbg !4356, !tbaa !1883
  %87 = load i32, i32* %vret106, align 4, !dbg !4361, !tbaa !1883
  %tobool109 = icmp ne i32 %87, 0, !dbg !4361
  br i1 %tobool109, label %if.then.110, label %if.end.111, !dbg !4363

if.then.110:                                      ; preds = %if.then.105
  %88 = load i32, i32* %vret106, align 4, !dbg !4364, !tbaa !1883
  store i32 %88, i32* %retval, !dbg !4366
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !4366

if.end.111:                                       ; preds = %if.then.105
  store i32 0, i32* %cleanup.dest.slot, !dbg !4367
  br label %cleanup.112, !dbg !4367

cleanup.112:                                      ; preds = %if.end.111, %if.then.110
  %89 = bitcast i32* %vret106 to i8*, !dbg !4369
  call void @llvm.lifetime.end(i64 4, i8* %89) #2, !dbg !4369
  %cleanup.dest.113 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.113, label %unreachable [
    i32 0, label %cleanup.cont.114
    i32 1, label %return
  ]

cleanup.cont.114:                                 ; preds = %cleanup.112
  br label %if.end.115, !dbg !4372

if.end.115:                                       ; preds = %cleanup.cont.114, %do.body.103
  br label %do.end.116, !dbg !4373

do.end.116:                                       ; preds = %if.end.115
  br label %do.body.117, !dbg !4376

do.body.117:                                      ; preds = %do.end.116
  %90 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4377, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %90, i32 0, i32 28, !dbg !4379
  %91 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4379, !tbaa !4380
  %tobool118 = icmp ne %struct._object* %91, null, !dbg !4381
  br i1 %tobool118, label %if.then.119, label %if.end.129, !dbg !4382

if.then.119:                                      ; preds = %do.body.117
  %92 = bitcast i32* %vret120 to i8*, !dbg !4383
  call void @llvm.lifetime.start(i64 4, i8* %92) #2, !dbg !4383
  call void @llvm.dbg.declare(metadata i32* %vret120, metadata !873, metadata !1880), !dbg !4385
  %93 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4386, !tbaa !1876
  %94 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4387, !tbaa !1876
  %raw121 = getelementptr inbounds %struct.textio, %struct.textio* %94, i32 0, i32 28, !dbg !4388
  %95 = load %struct._object*, %struct._object** %raw121, align 8, !dbg !4388, !tbaa !4380
  %96 = load i8*, i8** %arg.addr, align 8, !dbg !4389, !tbaa !1876
  %call122 = call i32 %93(%struct._object* %95, i8* %96), !dbg !4386
  store i32 %call122, i32* %vret120, align 4, !dbg !4385, !tbaa !1883
  %97 = load i32, i32* %vret120, align 4, !dbg !4390, !tbaa !1883
  %tobool123 = icmp ne i32 %97, 0, !dbg !4390
  br i1 %tobool123, label %if.then.124, label %if.end.125, !dbg !4392

if.then.124:                                      ; preds = %if.then.119
  %98 = load i32, i32* %vret120, align 4, !dbg !4393, !tbaa !1883
  store i32 %98, i32* %retval, !dbg !4395
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126, !dbg !4395

if.end.125:                                       ; preds = %if.then.119
  store i32 0, i32* %cleanup.dest.slot, !dbg !4396
  br label %cleanup.126, !dbg !4396

cleanup.126:                                      ; preds = %if.end.125, %if.then.124
  %99 = bitcast i32* %vret120 to i8*, !dbg !4398
  call void @llvm.lifetime.end(i64 4, i8* %99) #2, !dbg !4398
  %cleanup.dest.127 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.127, label %unreachable [
    i32 0, label %cleanup.cont.128
    i32 1, label %return
  ]

cleanup.cont.128:                                 ; preds = %cleanup.126
  br label %if.end.129, !dbg !4401

if.end.129:                                       ; preds = %cleanup.cont.128, %do.body.117
  br label %do.end.130, !dbg !4402

do.end.130:                                       ; preds = %if.end.129
  br label %do.body.131, !dbg !4405

do.body.131:                                      ; preds = %do.end.130
  %100 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4406, !tbaa !1876
  %dict = getelementptr inbounds %struct.textio, %struct.textio* %100, i32 0, i32 30, !dbg !4408
  %101 = load %struct._object*, %struct._object** %dict, align 8, !dbg !4408, !tbaa !3843
  %tobool132 = icmp ne %struct._object* %101, null, !dbg !4409
  br i1 %tobool132, label %if.then.133, label %if.end.143, !dbg !4410

if.then.133:                                      ; preds = %do.body.131
  %102 = bitcast i32* %vret134 to i8*, !dbg !4411
  call void @llvm.lifetime.start(i64 4, i8* %102) #2, !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %vret134, metadata !877, metadata !1880), !dbg !4413
  %103 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4414, !tbaa !1876
  %104 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4415, !tbaa !1876
  %dict135 = getelementptr inbounds %struct.textio, %struct.textio* %104, i32 0, i32 30, !dbg !4416
  %105 = load %struct._object*, %struct._object** %dict135, align 8, !dbg !4416, !tbaa !3843
  %106 = load i8*, i8** %arg.addr, align 8, !dbg !4417, !tbaa !1876
  %call136 = call i32 %103(%struct._object* %105, i8* %106), !dbg !4414
  store i32 %call136, i32* %vret134, align 4, !dbg !4413, !tbaa !1883
  %107 = load i32, i32* %vret134, align 4, !dbg !4418, !tbaa !1883
  %tobool137 = icmp ne i32 %107, 0, !dbg !4418
  br i1 %tobool137, label %if.then.138, label %if.end.139, !dbg !4420

if.then.138:                                      ; preds = %if.then.133
  %108 = load i32, i32* %vret134, align 4, !dbg !4421, !tbaa !1883
  store i32 %108, i32* %retval, !dbg !4423
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.140, !dbg !4423

if.end.139:                                       ; preds = %if.then.133
  store i32 0, i32* %cleanup.dest.slot, !dbg !4424
  br label %cleanup.140, !dbg !4424

cleanup.140:                                      ; preds = %if.end.139, %if.then.138
  %109 = bitcast i32* %vret134 to i8*, !dbg !4426
  call void @llvm.lifetime.end(i64 4, i8* %109) #2, !dbg !4426
  %cleanup.dest.141 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.141, label %unreachable [
    i32 0, label %cleanup.cont.142
    i32 1, label %return
  ]

cleanup.cont.142:                                 ; preds = %cleanup.140
  br label %if.end.143, !dbg !4429

if.end.143:                                       ; preds = %cleanup.cont.142, %do.body.131
  br label %do.end.144, !dbg !4430

do.end.144:                                       ; preds = %if.end.143
  store i32 0, i32* %retval, !dbg !4433
  br label %return, !dbg !4433

return:                                           ; preds = %do.end.144, %cleanup.140, %cleanup.126, %cleanup.112, %cleanup.98, %cleanup.84, %cleanup.70, %cleanup.56, %cleanup.42, %cleanup.28, %cleanup.14, %cleanup
  %110 = load i32, i32* %retval, !dbg !4434
  ret i32 %110, !dbg !4434

unreachable:                                      ; preds = %cleanup.140, %cleanup.126, %cleanup.112, %cleanup.98, %cleanup.84, %cleanup.70, %cleanup.56, %cleanup.42, %cleanup.28, %cleanup.14, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_clear(%struct.textio* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !883, metadata !1880), !dbg !4435
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4436, !tbaa !1876
  %call = call i32 @_textiowrapper_clear(%struct.textio* %0), !dbg !4438
  %cmp = icmp slt i32 %call, 0, !dbg !4439
  br i1 %cmp, label %if.then, label %if.end, !dbg !4440

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !4441
  br label %return, !dbg !4441

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4442

do.body:                                          ; preds = %if.end
  %1 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4443
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4443
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !884, metadata !1880), !dbg !4445
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4446, !tbaa !1876
  %dict = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 30, !dbg !4447
  %3 = load %struct._object*, %struct._object** %dict, align 8, !dbg !4447, !tbaa !3843
  store %struct._object* %3, %struct._object** %_py_tmp, align 8, !dbg !4445, !tbaa !1876
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4448, !tbaa !1876
  %cmp1 = icmp ne %struct._object* %4, null, !dbg !4449
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !4450

if.then.2:                                        ; preds = %do.body
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4451, !tbaa !1876
  %dict3 = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 30, !dbg !4453
  store %struct._object* null, %struct._object** %dict3, align 8, !dbg !4454, !tbaa !3843
  br label %do.body.4, !dbg !4455

do.body.4:                                        ; preds = %if.then.2
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4456
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !4456
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !886, metadata !1880), !dbg !4458
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4459, !tbaa !1876
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !4458, !tbaa !1876
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4460, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !4462
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !4463, !tbaa !1927
  %dec = add i64 %9, -1, !dbg !4463
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4463, !tbaa !1927
  %cmp5 = icmp ne i64 %dec, 0, !dbg !4464
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !4465

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !4466

if.else:                                          ; preds = %do.body.4
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4468, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !4470
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4470, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !4471
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4471, !tbaa !2197
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4472, !tbaa !1876
  call void %12(%struct._object* %13), !dbg !4473
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4474
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !4474
  br label %do.cond, !dbg !4476

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !4477

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !4479

if.end.8:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4481
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !4481
  br label %do.end.10, !dbg !4484

do.end.10:                                        ; preds = %if.end.8
  store i32 0, i32* %retval, !dbg !4485
  br label %return, !dbg !4485

return:                                           ; preds = %do.end.10, %if.then
  %16 = load i32, i32* %retval, !dbg !4486
  ret i32 %16, !dbg !4486
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_iternext(%struct.textio* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %line = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp29 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !892, metadata !1880), !dbg !4487
  %0 = bitcast %struct._object** %line to i8*, !dbg !4488
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4488
  call void @llvm.dbg.declare(metadata %struct._object** %line, metadata !893, metadata !1880), !dbg !4489
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4490, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !4492
  %2 = load i32, i32* %ok, align 4, !dbg !4492, !tbaa !3900
  %cmp = icmp sle i32 %2, 0, !dbg !4493
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !4494

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4495, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !4499
  %4 = load i32, i32* %detached, align 4, !dbg !4499, !tbaa !3908
  %tobool = icmp ne i32 %4, 0, !dbg !4500
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !4501

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4502, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !4505
  br label %if.end, !dbg !4506

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4507, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !4510
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !4511
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4513

if.end.2:                                         ; preds = %entry
  %7 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4514, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %7, i32 0, i32 18, !dbg !4515
  store i8 0, i8* %telling, align 1, !dbg !4516, !tbaa !4517
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4518, !tbaa !1876
  %9 = bitcast %struct.textio* %8 to %struct._object*, !dbg !4519
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !4520
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4520, !tbaa !2195
  %cmp3 = icmp eq %struct._typeobject* %10, @PyTextIOWrapper_Type, !dbg !4521
  br i1 %cmp3, label %if.then.4, label %if.else.5, !dbg !4522

if.then.4:                                        ; preds = %if.end.2
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4523, !tbaa !1876
  %call = call %struct._object* @_textiowrapper_readline(%struct.textio* %11, i64 -1), !dbg !4525
  store %struct._object* %call, %struct._object** %line, align 8, !dbg !4526, !tbaa !1876
  br label %if.end.19, !dbg !4527

if.else.5:                                        ; preds = %if.end.2
  %12 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4528, !tbaa !1876
  %13 = bitcast %struct.textio* %12 to %struct._object*, !dbg !4529
  %14 = load %struct._object*, %struct._object** @_PyIO_str_readline, align 8, !dbg !4530, !tbaa !1876
  %call6 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %13, %struct._object* %14, i8* null), !dbg !4531
  store %struct._object* %call6, %struct._object** %line, align 8, !dbg !4532, !tbaa !1876
  %15 = load %struct._object*, %struct._object** %line, align 8, !dbg !4533, !tbaa !1876
  %tobool7 = icmp ne %struct._object* %15, null, !dbg !4533
  br i1 %tobool7, label %land.lhs.true, label %if.end.18, !dbg !4534

land.lhs.true:                                    ; preds = %if.else.5
  %16 = load %struct._object*, %struct._object** %line, align 8, !dbg !4535, !tbaa !1876
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !4537
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !4537, !tbaa !2195
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 19, !dbg !4538
  %18 = load i64, i64* %tp_flags, align 8, !dbg !4538, !tbaa !3077
  %and = and i64 %18, 268435456, !dbg !4539
  %cmp9 = icmp ne i64 %and, 0, !dbg !4540
  br i1 %cmp9, label %if.end.18, label %if.then.10, !dbg !4541

if.then.10:                                       ; preds = %land.lhs.true
  %19 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !4542, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %line, align 8, !dbg !4543, !tbaa !1876
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !4544
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !4544, !tbaa !2195
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 1, !dbg !4545
  %22 = load i8*, i8** %tp_name, align 8, !dbg !4545, !tbaa !3085
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %19, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.40, i32 0, i32 0), i8* %22), !dbg !4546
  br label %do.body, !dbg !4547

do.body:                                          ; preds = %if.then.10
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4548
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !4548
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !894, metadata !1880), !dbg !4550
  %24 = load %struct._object*, %struct._object** %line, align 8, !dbg !4551, !tbaa !1876
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !4550, !tbaa !1876
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4552, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !4554
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !4555, !tbaa !1927
  %dec = add i64 %26, -1, !dbg !4555
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4555, !tbaa !1927
  %cmp13 = icmp ne i64 %dec, 0, !dbg !4556
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !4557

if.then.14:                                       ; preds = %do.body
  br label %if.end.17, !dbg !4558

if.else.15:                                       ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4560, !tbaa !1876
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !4562
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !4562, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !4563
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4563, !tbaa !2197
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4564, !tbaa !1876
  call void %29(%struct._object* %30), !dbg !4565
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.15, %if.then.14
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !4566
  br label %do.cond, !dbg !4568

do.cond:                                          ; preds = %if.end.17
  br label %do.end, !dbg !4569

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !4571
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4571

if.end.18:                                        ; preds = %land.lhs.true, %if.else.5
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.then.4
  %32 = load %struct._object*, %struct._object** %line, align 8, !dbg !4572, !tbaa !1876
  %cmp20 = icmp eq %struct._object* %32, null, !dbg !4574
  br i1 %cmp20, label %if.then.24, label %lor.lhs.false, !dbg !4575

lor.lhs.false:                                    ; preds = %if.end.19
  %33 = load %struct._object*, %struct._object** %line, align 8, !dbg !4576, !tbaa !1876
  %34 = bitcast %struct._object* %33 to %struct.PyASCIIObject*, !dbg !4578
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %34, i32 0, i32 3, !dbg !4579
  %35 = bitcast %struct.anon* %state to i32*, !dbg !4580
  %bf.load = load i32, i32* %35, align 4, !dbg !4580
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !4580
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4580
  %tobool21 = icmp ne i32 %bf.clear, 0, !dbg !4581
  br i1 %tobool21, label %cond.true, label %cond.false, !dbg !4581

cond.true:                                        ; preds = %lor.lhs.false
  br label %cond.end, !dbg !4582

cond.false:                                       ; preds = %lor.lhs.false
  %36 = load %struct._object*, %struct._object** %line, align 8, !dbg !4584, !tbaa !1876
  %call22 = call i32 @_PyUnicode_Ready(%struct._object* %36), !dbg !4586
  br label %cond.end, !dbg !4581

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call22, %cond.false ], !dbg !4581
  %cmp23 = icmp eq i32 %cond, -1, !dbg !4587
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !4590

if.then.24:                                       ; preds = %cond.end, %if.end.19
  store %struct._object* null, %struct._object** %retval, !dbg !4591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4591

if.end.25:                                        ; preds = %cond.end
  %37 = load %struct._object*, %struct._object** %line, align 8, !dbg !4592, !tbaa !1876
  %38 = bitcast %struct._object* %37 to %struct.PyASCIIObject*, !dbg !4593
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %38, i32 0, i32 1, !dbg !4594
  %39 = load i64, i64* %length, align 8, !dbg !4594, !tbaa !1937
  %cmp26 = icmp eq i64 %39, 0, !dbg !4595
  br i1 %cmp26, label %if.then.27, label %if.end.60, !dbg !4596

if.then.27:                                       ; preds = %if.end.25
  br label %do.body.28, !dbg !4597

do.body.28:                                       ; preds = %if.then.27
  %40 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !4598
  call void @llvm.lifetime.start(i64 8, i8* %40) #2, !dbg !4598
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp29, metadata !900, metadata !1880), !dbg !4600
  %41 = load %struct._object*, %struct._object** %line, align 8, !dbg !4601, !tbaa !1876
  store %struct._object* %41, %struct._object** %_py_decref_tmp29, align 8, !dbg !4600, !tbaa !1876
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !4602, !tbaa !1876
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !4604
  %43 = load i64, i64* %ob_refcnt30, align 8, !dbg !4605, !tbaa !1927
  %dec31 = add i64 %43, -1, !dbg !4605
  store i64 %dec31, i64* %ob_refcnt30, align 8, !dbg !4605, !tbaa !1927
  %cmp32 = icmp ne i64 %dec31, 0, !dbg !4606
  br i1 %cmp32, label %if.then.33, label %if.else.34, !dbg !4607

if.then.33:                                       ; preds = %do.body.28
  br label %if.end.37, !dbg !4608

if.else.34:                                       ; preds = %do.body.28
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !4610, !tbaa !1876
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !4612
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !4612, !tbaa !2195
  %tp_dealloc36 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !4613
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc36, align 8, !dbg !4613, !tbaa !2197
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !4614, !tbaa !1876
  call void %46(%struct._object* %47), !dbg !4615
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.33
  %48 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !4616
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !4616
  br label %do.cond.38, !dbg !4618

do.cond.38:                                       ; preds = %if.end.37
  br label %do.end.39, !dbg !4619

do.end.39:                                        ; preds = %do.cond.38
  br label %do.body.40, !dbg !4621

do.body.40:                                       ; preds = %do.end.39
  %49 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4622
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !4622
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !904, metadata !1880), !dbg !4624
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4625, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 26, !dbg !4626
  %51 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !4626, !tbaa !4322
  store %struct._object* %51, %struct._object** %_py_tmp, align 8, !dbg !4624, !tbaa !1876
  %52 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4627, !tbaa !1876
  %cmp41 = icmp ne %struct._object* %52, null, !dbg !4628
  br i1 %cmp41, label %if.then.42, label %if.end.56, !dbg !4629

if.then.42:                                       ; preds = %do.body.40
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4630, !tbaa !1876
  %snapshot43 = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 26, !dbg !4632
  store %struct._object* null, %struct._object** %snapshot43, align 8, !dbg !4633, !tbaa !4322
  br label %do.body.44, !dbg !4634

do.body.44:                                       ; preds = %if.then.42
  %54 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !4635
  call void @llvm.lifetime.start(i64 8, i8* %54) #2, !dbg !4635
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp45, metadata !906, metadata !1880), !dbg !4637
  %55 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4638, !tbaa !1876
  store %struct._object* %55, %struct._object** %_py_decref_tmp45, align 8, !dbg !4637, !tbaa !1876
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !4639, !tbaa !1876
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !4641
  %57 = load i64, i64* %ob_refcnt46, align 8, !dbg !4642, !tbaa !1927
  %dec47 = add i64 %57, -1, !dbg !4642
  store i64 %dec47, i64* %ob_refcnt46, align 8, !dbg !4642, !tbaa !1927
  %cmp48 = icmp ne i64 %dec47, 0, !dbg !4643
  br i1 %cmp48, label %if.then.49, label %if.else.50, !dbg !4644

if.then.49:                                       ; preds = %do.body.44
  br label %if.end.53, !dbg !4645

if.else.50:                                       ; preds = %do.body.44
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !4647, !tbaa !1876
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !4649
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !4649, !tbaa !2195
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !4650
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8, !dbg !4650, !tbaa !2197
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !4651, !tbaa !1876
  call void %60(%struct._object* %61), !dbg !4652
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  %62 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !4653
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !4653
  br label %do.cond.54, !dbg !4655

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !4656

do.end.55:                                        ; preds = %do.cond.54
  br label %if.end.56, !dbg !4658

if.end.56:                                        ; preds = %do.end.55, %do.body.40
  %63 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4660
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !4660
  br label %do.cond.57, !dbg !4663

do.cond.57:                                       ; preds = %if.end.56
  br label %do.end.58, !dbg !4664

do.end.58:                                        ; preds = %do.cond.57
  %64 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4666, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %64, i32 0, i32 16, !dbg !4667
  %65 = load i8, i8* %seekable, align 1, !dbg !4667, !tbaa !4668
  %66 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4669, !tbaa !1876
  %telling59 = getelementptr inbounds %struct.textio, %struct.textio* %66, i32 0, i32 18, !dbg !4670
  store i8 %65, i8* %telling59, align 1, !dbg !4671, !tbaa !4517
  store %struct._object* null, %struct._object** %retval, !dbg !4672
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4672

if.end.60:                                        ; preds = %if.end.25
  %67 = load %struct._object*, %struct._object** %line, align 8, !dbg !4673, !tbaa !1876
  store %struct._object* %67, %struct._object** %retval, !dbg !4674
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4674

cleanup:                                          ; preds = %if.end.60, %do.end.58, %if.then.24, %do.end, %if.end
  %68 = bitcast %struct._object** %line to i8*, !dbg !4675
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !4675
  %69 = load %struct._object*, %struct._object** %retval, !dbg !4675
  ret %struct._object* %69, !dbg !4675
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_init(%struct.textio* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [7 x i8*], align 16
  %buffer = alloca %struct._object*, align 8
  %raw = alloca %struct._object*, align 8
  %codec_info = alloca %struct._object*, align 8
  %encoding = alloca i8*, align 8
  %errors = alloca i8*, align 8
  %newline = alloca i8*, align 8
  %line_buffering = alloca i32, align 4
  %write_through = alloca i32, align 4
  %state = alloca %struct._PyIO_State*, align 8
  %res = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp55 = alloca %struct._object*, align 8
  %_py_decref_tmp62 = alloca %struct._object*, align 8
  %_py_tmp78 = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %_py_tmp100 = alloca %struct._object*, align 8
  %_py_decref_tmp106 = alloca %struct._object*, align 8
  %_py_tmp122 = alloca %struct._object*, align 8
  %_py_decref_tmp128 = alloca %struct._object*, align 8
  %_py_tmp144 = alloca %struct._object*, align 8
  %_py_decref_tmp150 = alloca %struct._object*, align 8
  %_py_tmp166 = alloca %struct._object*, align 8
  %_py_decref_tmp172 = alloca %struct._object*, align 8
  %_py_tmp188 = alloca %struct._object*, align 8
  %_py_decref_tmp194 = alloca %struct._object*, align 8
  %_py_tmp210 = alloca %struct._object*, align 8
  %_py_decref_tmp217 = alloca %struct._object*, align 8
  %_py_tmp233 = alloca %struct._object*, align 8
  %_py_decref_tmp240 = alloca %struct._object*, align 8
  %fileno = alloca %struct._object*, align 8
  %fd = alloca i32, align 4
  %_py_decref_tmp277 = alloca %struct._object*, align 8
  %_py_tmp309 = alloca %struct._object*, align 8
  %_py_decref_tmp316 = alloca %struct._object*, align 8
  %locale_module = alloca %struct._object*, align 8
  %_py_decref_tmp353 = alloca %struct._object*, align 8
  %_py_tmp385 = alloca %struct._object*, align 8
  %_py_decref_tmp392 = alloca %struct._object*, align 8
  %_py_tmp442 = alloca %struct._object*, align 8
  %_py_decref_tmp449 = alloca %struct._object*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp565 = alloca i32, align 4
  %_py_decref_tmp581 = alloca %struct._object*, align 8
  %incrementalDecoder = alloca %struct._object*, align 8
  %_py_tmp621 = alloca %struct._object*, align 8
  %_py_decref_tmp629 = alloca %struct._object*, align 8
  %_py_decref_tmp658 = alloca %struct._object*, align 8
  %e = alloca %struct.encodefuncentry*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp719 = alloca %struct._object*, align 8
  %_py_decref_tmp737 = alloca %struct._object*, align 8
  %_py_decref_tmp781 = alloca %struct._object*, align 8
  %_py_decref_tmp804 = alloca %struct._object*, align 8
  %cookieObj = alloca %struct._object*, align 8
  %cmp832 = alloca i32, align 4
  %_py_decref_tmp842 = alloca %struct._object*, align 8
  %_py_decref_tmp870 = alloca %struct._object*, align 8
  %_py_xdecref_tmp891 = alloca %struct._object*, align 8
  %_py_decref_tmp897 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1556, metadata !1880), !dbg !4676
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1557, metadata !1880), !dbg !4677
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1558, metadata !1880), !dbg !4678
  %0 = bitcast [7 x i8*]* %kwlist to i8*, !dbg !4679
  call void @llvm.lifetime.start(i64 56, i8* %0) #2, !dbg !4679
  call void @llvm.dbg.declare(metadata [7 x i8*]* %kwlist, metadata !1559, metadata !1880), !dbg !4680
  %1 = bitcast [7 x i8*]* %kwlist to i8*, !dbg !4680
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 56, i32 16, i1 false), !dbg !4680
  %2 = bitcast i8* %1 to [7 x i8*]*, !dbg !4680
  %3 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 0, !dbg !4680
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i8** %3, !dbg !4680
  %4 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 1, !dbg !4680
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8** %4, !dbg !4680
  %5 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 2, !dbg !4680
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8** %5, !dbg !4680
  %6 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 3, !dbg !4680
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i8** %6, !dbg !4680
  %7 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 4, !dbg !4680
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i32 0, i32 0), i8** %7, !dbg !4680
  %8 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 5, !dbg !4680
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i32 0, i32 0), i8** %8, !dbg !4680
  %9 = bitcast %struct._object** %buffer to i8*, !dbg !4681
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !4681
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !1563, metadata !1880), !dbg !4682
  %10 = bitcast %struct._object** %raw to i8*, !dbg !4681
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !4681
  call void @llvm.dbg.declare(metadata %struct._object** %raw, metadata !1564, metadata !1880), !dbg !4683
  %11 = bitcast %struct._object** %codec_info to i8*, !dbg !4681
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !4681
  call void @llvm.dbg.declare(metadata %struct._object** %codec_info, metadata !1565, metadata !1880), !dbg !4684
  store %struct._object* null, %struct._object** %codec_info, align 8, !dbg !4684, !tbaa !1876
  %12 = bitcast i8** %encoding to i8*, !dbg !4685
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !4685
  call void @llvm.dbg.declare(metadata i8** %encoding, metadata !1566, metadata !1880), !dbg !4686
  store i8* null, i8** %encoding, align 8, !dbg !4686, !tbaa !1876
  %13 = bitcast i8** %errors to i8*, !dbg !4687
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !4687
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1567, metadata !1880), !dbg !4688
  store i8* null, i8** %errors, align 8, !dbg !4688, !tbaa !1876
  %14 = bitcast i8** %newline to i8*, !dbg !4689
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !4689
  call void @llvm.dbg.declare(metadata i8** %newline, metadata !1568, metadata !1880), !dbg !4690
  store i8* null, i8** %newline, align 8, !dbg !4690, !tbaa !1876
  %15 = bitcast i32* %line_buffering to i8*, !dbg !4691
  call void @llvm.lifetime.start(i64 4, i8* %15) #2, !dbg !4691
  call void @llvm.dbg.declare(metadata i32* %line_buffering, metadata !1569, metadata !1880), !dbg !4692
  store i32 0, i32* %line_buffering, align 4, !dbg !4692, !tbaa !1883
  %16 = bitcast i32* %write_through to i8*, !dbg !4691
  call void @llvm.lifetime.start(i64 4, i8* %16) #2, !dbg !4691
  call void @llvm.dbg.declare(metadata i32* %write_through, metadata !1570, metadata !1880), !dbg !4693
  store i32 0, i32* %write_through, align 4, !dbg !4693, !tbaa !1883
  %17 = bitcast %struct._PyIO_State** %state to i8*, !dbg !4694
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !4694
  call void @llvm.dbg.declare(metadata %struct._PyIO_State** %state, metadata !1571, metadata !1880), !dbg !4695
  store %struct._PyIO_State* null, %struct._PyIO_State** %state, align 8, !dbg !4695, !tbaa !1876
  %18 = bitcast %struct._object** %res to i8*, !dbg !4696
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !4696
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1572, metadata !1880), !dbg !4697
  %19 = bitcast i32* %r to i8*, !dbg !4698
  call void @llvm.lifetime.start(i64 4, i8* %19) #2, !dbg !4698
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1573, metadata !1880), !dbg !4699
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4700, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 1, !dbg !4701
  store i32 0, i32* %ok, align 4, !dbg !4702, !tbaa !3900
  %21 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4703, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %21, i32 0, i32 2, !dbg !4704
  store i32 0, i32* %detached, align 4, !dbg !4705, !tbaa !3908
  %22 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4706, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4708, !tbaa !1876
  %arraydecay = getelementptr inbounds [7 x i8*], [7 x i8*]* %kwlist, i32 0, i32 0, !dbg !4709
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %22, %struct._object* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i32 0, i32 0), i8** %arraydecay, %struct._object** %buffer, i8** %encoding, i8** %errors, i8** %newline, i32* %line_buffering, i32* %write_through), !dbg !4710
  %tobool = icmp ne i32 %call, 0, !dbg !4710
  br i1 %tobool, label %if.end, label %if.then, !dbg !4711

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !4712
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !4712

if.end:                                           ; preds = %entry
  %24 = load i8*, i8** %newline, align 8, !dbg !4713, !tbaa !1876
  %tobool1 = icmp ne i8* %24, null, !dbg !4713
  br i1 %tobool1, label %land.lhs.true, label %if.end.40, !dbg !4715

land.lhs.true:                                    ; preds = %if.end
  %25 = load i8*, i8** %newline, align 8, !dbg !4716, !tbaa !1876
  %arrayidx = getelementptr i8, i8* %25, i64 0, !dbg !4716
  %26 = load i8, i8* %arrayidx, align 1, !dbg !4716, !tbaa !2065
  %conv = sext i8 %26 to i32, !dbg !4716
  %cmp = icmp ne i32 %conv, 0, !dbg !4718
  br i1 %cmp, label %land.lhs.true.3, label %if.end.40, !dbg !4719

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %27 = load i8*, i8** %newline, align 8, !dbg !4720, !tbaa !1876
  %arrayidx4 = getelementptr i8, i8* %27, i64 0, !dbg !4720
  %28 = load i8, i8* %arrayidx4, align 1, !dbg !4720, !tbaa !2065
  %conv5 = sext i8 %28 to i32, !dbg !4720
  %cmp6 = icmp eq i32 %conv5, 10, !dbg !4721
  br i1 %cmp6, label %land.lhs.true.8, label %land.lhs.true.13, !dbg !4722

land.lhs.true.8:                                  ; preds = %land.lhs.true.3
  %29 = load i8*, i8** %newline, align 8, !dbg !4723, !tbaa !1876
  %arrayidx9 = getelementptr i8, i8* %29, i64 1, !dbg !4723
  %30 = load i8, i8* %arrayidx9, align 1, !dbg !4723, !tbaa !2065
  %conv10 = sext i8 %30 to i32, !dbg !4723
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !4725
  br i1 %cmp11, label %if.end.40, label %land.lhs.true.13, !dbg !4726

land.lhs.true.13:                                 ; preds = %land.lhs.true.8, %land.lhs.true.3
  %31 = load i8*, i8** %newline, align 8, !dbg !4727, !tbaa !1876
  %arrayidx14 = getelementptr i8, i8* %31, i64 0, !dbg !4727
  %32 = load i8, i8* %arrayidx14, align 1, !dbg !4727, !tbaa !2065
  %conv15 = sext i8 %32 to i32, !dbg !4727
  %cmp16 = icmp eq i32 %conv15, 13, !dbg !4728
  br i1 %cmp16, label %land.lhs.true.18, label %land.lhs.true.23, !dbg !4729

land.lhs.true.18:                                 ; preds = %land.lhs.true.13
  %33 = load i8*, i8** %newline, align 8, !dbg !4730, !tbaa !1876
  %arrayidx19 = getelementptr i8, i8* %33, i64 1, !dbg !4730
  %34 = load i8, i8* %arrayidx19, align 1, !dbg !4730, !tbaa !2065
  %conv20 = sext i8 %34 to i32, !dbg !4730
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !4731
  br i1 %cmp21, label %if.end.40, label %land.lhs.true.23, !dbg !4732

land.lhs.true.23:                                 ; preds = %land.lhs.true.18, %land.lhs.true.13
  %35 = load i8*, i8** %newline, align 8, !dbg !4733, !tbaa !1876
  %arrayidx24 = getelementptr i8, i8* %35, i64 0, !dbg !4733
  %36 = load i8, i8* %arrayidx24, align 1, !dbg !4733, !tbaa !2065
  %conv25 = sext i8 %36 to i32, !dbg !4733
  %cmp26 = icmp eq i32 %conv25, 13, !dbg !4734
  br i1 %cmp26, label %land.lhs.true.28, label %if.then.38, !dbg !4735

land.lhs.true.28:                                 ; preds = %land.lhs.true.23
  %37 = load i8*, i8** %newline, align 8, !dbg !4736, !tbaa !1876
  %arrayidx29 = getelementptr i8, i8* %37, i64 1, !dbg !4736
  %38 = load i8, i8* %arrayidx29, align 1, !dbg !4736, !tbaa !2065
  %conv30 = sext i8 %38 to i32, !dbg !4736
  %cmp31 = icmp eq i32 %conv30, 10, !dbg !4737
  br i1 %cmp31, label %land.lhs.true.33, label %if.then.38, !dbg !4738

land.lhs.true.33:                                 ; preds = %land.lhs.true.28
  %39 = load i8*, i8** %newline, align 8, !dbg !4739, !tbaa !1876
  %arrayidx34 = getelementptr i8, i8* %39, i64 2, !dbg !4739
  %40 = load i8, i8* %arrayidx34, align 1, !dbg !4739, !tbaa !2065
  %conv35 = sext i8 %40 to i32, !dbg !4739
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !4741
  br i1 %cmp36, label %if.end.40, label %if.then.38, !dbg !4742

if.then.38:                                       ; preds = %land.lhs.true.33, %land.lhs.true.28, %land.lhs.true.23
  %41 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4743, !tbaa !1876
  %42 = load i8*, i8** %newline, align 8, !dbg !4745, !tbaa !1876
  %call39 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.98, i32 0, i32 0), i8* %42), !dbg !4746
  store i32 -1, i32* %retval, !dbg !4747
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !4747

if.end.40:                                        ; preds = %land.lhs.true.33, %land.lhs.true.18, %land.lhs.true.8, %land.lhs.true, %if.end
  br label %do.body, !dbg !4748

do.body:                                          ; preds = %if.end.40
  %43 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4749
  call void @llvm.lifetime.start(i64 8, i8* %43) #2, !dbg !4749
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1574, metadata !1880), !dbg !4751
  %44 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4752, !tbaa !1876
  %buffer41 = getelementptr inbounds %struct.textio, %struct.textio* %44, i32 0, i32 4, !dbg !4753
  %45 = load %struct._object*, %struct._object** %buffer41, align 8, !dbg !4753, !tbaa !4120
  store %struct._object* %45, %struct._object** %_py_tmp, align 8, !dbg !4751, !tbaa !1876
  %46 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4754, !tbaa !1876
  %cmp42 = icmp ne %struct._object* %46, null, !dbg !4755
  br i1 %cmp42, label %if.then.44, label %if.end.51, !dbg !4756

if.then.44:                                       ; preds = %do.body
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4757, !tbaa !1876
  %buffer45 = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 4, !dbg !4759
  store %struct._object* null, %struct._object** %buffer45, align 8, !dbg !4760, !tbaa !4120
  br label %do.body.46, !dbg !4761

do.body.46:                                       ; preds = %if.then.44
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4762
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !4762
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1576, metadata !1880), !dbg !4764
  %49 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4765, !tbaa !1876
  store %struct._object* %49, %struct._object** %_py_decref_tmp, align 8, !dbg !4764, !tbaa !1876
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4766, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !4768
  %51 = load i64, i64* %ob_refcnt, align 8, !dbg !4769, !tbaa !1927
  %dec = add i64 %51, -1, !dbg !4769
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4769, !tbaa !1927
  %cmp47 = icmp ne i64 %dec, 0, !dbg !4770
  br i1 %cmp47, label %if.then.49, label %if.else, !dbg !4771

if.then.49:                                       ; preds = %do.body.46
  br label %if.end.50, !dbg !4772

if.else:                                          ; preds = %do.body.46
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4774, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !4776
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4776, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !4777
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4777, !tbaa !2197
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4778, !tbaa !1876
  call void %54(%struct._object* %55), !dbg !4779
  br label %if.end.50

if.end.50:                                        ; preds = %if.else, %if.then.49
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4780
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !4780
  br label %do.cond, !dbg !4782

do.cond:                                          ; preds = %if.end.50
  br label %do.end, !dbg !4783

do.end:                                           ; preds = %do.cond
  br label %if.end.51, !dbg !4785

if.end.51:                                        ; preds = %do.end, %do.body
  %57 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4787
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !4787
  br label %do.cond.52, !dbg !4790

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !4791

do.end.53:                                        ; preds = %do.cond.52
  br label %do.body.54, !dbg !4793

do.body.54:                                       ; preds = %do.end.53
  %58 = bitcast %struct._object** %_py_tmp55 to i8*, !dbg !4794
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !4794
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp55, metadata !1580, metadata !1880), !dbg !4796
  %59 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4797, !tbaa !1876
  %encoding56 = getelementptr inbounds %struct.textio, %struct.textio* %59, i32 0, i32 5, !dbg !4798
  %60 = load %struct._object*, %struct._object** %encoding56, align 8, !dbg !4798, !tbaa !4041
  store %struct._object* %60, %struct._object** %_py_tmp55, align 8, !dbg !4796, !tbaa !1876
  %61 = load %struct._object*, %struct._object** %_py_tmp55, align 8, !dbg !4799, !tbaa !1876
  %cmp57 = icmp ne %struct._object* %61, null, !dbg !4800
  br i1 %cmp57, label %if.then.59, label %if.end.74, !dbg !4801

if.then.59:                                       ; preds = %do.body.54
  %62 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4802, !tbaa !1876
  %encoding60 = getelementptr inbounds %struct.textio, %struct.textio* %62, i32 0, i32 5, !dbg !4804
  store %struct._object* null, %struct._object** %encoding60, align 8, !dbg !4805, !tbaa !4041
  br label %do.body.61, !dbg !4806

do.body.61:                                       ; preds = %if.then.59
  %63 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !4807
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !4807
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp62, metadata !1582, metadata !1880), !dbg !4809
  %64 = load %struct._object*, %struct._object** %_py_tmp55, align 8, !dbg !4810, !tbaa !1876
  store %struct._object* %64, %struct._object** %_py_decref_tmp62, align 8, !dbg !4809, !tbaa !1876
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !4811, !tbaa !1876
  %ob_refcnt63 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !4813
  %66 = load i64, i64* %ob_refcnt63, align 8, !dbg !4814, !tbaa !1927
  %dec64 = add i64 %66, -1, !dbg !4814
  store i64 %dec64, i64* %ob_refcnt63, align 8, !dbg !4814, !tbaa !1927
  %cmp65 = icmp ne i64 %dec64, 0, !dbg !4815
  br i1 %cmp65, label %if.then.67, label %if.else.68, !dbg !4816

if.then.67:                                       ; preds = %do.body.61
  br label %if.end.71, !dbg !4817

if.else.68:                                       ; preds = %do.body.61
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !4819, !tbaa !1876
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !4821
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8, !dbg !4821, !tbaa !2195
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !4822
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8, !dbg !4822, !tbaa !2197
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !4823, !tbaa !1876
  call void %69(%struct._object* %70), !dbg !4824
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  %71 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !4825
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !4825
  br label %do.cond.72, !dbg !4827

do.cond.72:                                       ; preds = %if.end.71
  br label %do.end.73, !dbg !4828

do.end.73:                                        ; preds = %do.cond.72
  br label %if.end.74, !dbg !4830

if.end.74:                                        ; preds = %do.end.73, %do.body.54
  %72 = bitcast %struct._object** %_py_tmp55 to i8*, !dbg !4832
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !4832
  br label %do.cond.75, !dbg !4833

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !4834

do.end.76:                                        ; preds = %do.cond.75
  br label %do.body.77, !dbg !4836

do.body.77:                                       ; preds = %do.end.76
  %73 = bitcast %struct._object** %_py_tmp78 to i8*, !dbg !4837
  call void @llvm.lifetime.start(i64 8, i8* %73) #2, !dbg !4837
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp78, metadata !1586, metadata !1880), !dbg !4839
  %74 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4840, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %74, i32 0, i32 6, !dbg !4841
  %75 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !4841, !tbaa !4177
  store %struct._object* %75, %struct._object** %_py_tmp78, align 8, !dbg !4839, !tbaa !1876
  %76 = load %struct._object*, %struct._object** %_py_tmp78, align 8, !dbg !4842, !tbaa !1876
  %cmp79 = icmp ne %struct._object* %76, null, !dbg !4843
  br i1 %cmp79, label %if.then.81, label %if.end.96, !dbg !4844

if.then.81:                                       ; preds = %do.body.77
  %77 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4845, !tbaa !1876
  %encoder82 = getelementptr inbounds %struct.textio, %struct.textio* %77, i32 0, i32 6, !dbg !4847
  store %struct._object* null, %struct._object** %encoder82, align 8, !dbg !4848, !tbaa !4177
  br label %do.body.83, !dbg !4849

do.body.83:                                       ; preds = %if.then.81
  %78 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !4850
  call void @llvm.lifetime.start(i64 8, i8* %78) #2, !dbg !4850
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !1588, metadata !1880), !dbg !4852
  %79 = load %struct._object*, %struct._object** %_py_tmp78, align 8, !dbg !4853, !tbaa !1876
  store %struct._object* %79, %struct._object** %_py_decref_tmp84, align 8, !dbg !4852, !tbaa !1876
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !4854, !tbaa !1876
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !4856
  %81 = load i64, i64* %ob_refcnt85, align 8, !dbg !4857, !tbaa !1927
  %dec86 = add i64 %81, -1, !dbg !4857
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !4857, !tbaa !1927
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !4858
  br i1 %cmp87, label %if.then.89, label %if.else.90, !dbg !4859

if.then.89:                                       ; preds = %do.body.83
  br label %if.end.93, !dbg !4860

if.else.90:                                       ; preds = %do.body.83
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !4862, !tbaa !1876
  %ob_type91 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !4864
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type91, align 8, !dbg !4864, !tbaa !2195
  %tp_dealloc92 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !4865
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92, align 8, !dbg !4865, !tbaa !2197
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !4866, !tbaa !1876
  call void %84(%struct._object* %85), !dbg !4867
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.90, %if.then.89
  %86 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !4868
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !4868
  br label %do.cond.94, !dbg !4870

do.cond.94:                                       ; preds = %if.end.93
  br label %do.end.95, !dbg !4871

do.end.95:                                        ; preds = %do.cond.94
  br label %if.end.96, !dbg !4873

if.end.96:                                        ; preds = %do.end.95, %do.body.77
  %87 = bitcast %struct._object** %_py_tmp78 to i8*, !dbg !4875
  call void @llvm.lifetime.end(i64 8, i8* %87) #2, !dbg !4875
  br label %do.cond.97, !dbg !4876

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !4877

do.end.98:                                        ; preds = %do.cond.97
  br label %do.body.99, !dbg !4879

do.body.99:                                       ; preds = %do.end.98
  %88 = bitcast %struct._object** %_py_tmp100 to i8*, !dbg !4880
  call void @llvm.lifetime.start(i64 8, i8* %88) #2, !dbg !4880
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp100, metadata !1592, metadata !1880), !dbg !4882
  %89 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4883, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %89, i32 0, i32 7, !dbg !4884
  %90 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !4884, !tbaa !4206
  store %struct._object* %90, %struct._object** %_py_tmp100, align 8, !dbg !4882, !tbaa !1876
  %91 = load %struct._object*, %struct._object** %_py_tmp100, align 8, !dbg !4885, !tbaa !1876
  %cmp101 = icmp ne %struct._object* %91, null, !dbg !4886
  br i1 %cmp101, label %if.then.103, label %if.end.118, !dbg !4887

if.then.103:                                      ; preds = %do.body.99
  %92 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4888, !tbaa !1876
  %decoder104 = getelementptr inbounds %struct.textio, %struct.textio* %92, i32 0, i32 7, !dbg !4890
  store %struct._object* null, %struct._object** %decoder104, align 8, !dbg !4891, !tbaa !4206
  br label %do.body.105, !dbg !4892

do.body.105:                                      ; preds = %if.then.103
  %93 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !4893
  call void @llvm.lifetime.start(i64 8, i8* %93) #2, !dbg !4893
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp106, metadata !1594, metadata !1880), !dbg !4895
  %94 = load %struct._object*, %struct._object** %_py_tmp100, align 8, !dbg !4896, !tbaa !1876
  store %struct._object* %94, %struct._object** %_py_decref_tmp106, align 8, !dbg !4895, !tbaa !1876
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !4897, !tbaa !1876
  %ob_refcnt107 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !4899
  %96 = load i64, i64* %ob_refcnt107, align 8, !dbg !4900, !tbaa !1927
  %dec108 = add i64 %96, -1, !dbg !4900
  store i64 %dec108, i64* %ob_refcnt107, align 8, !dbg !4900, !tbaa !1927
  %cmp109 = icmp ne i64 %dec108, 0, !dbg !4901
  br i1 %cmp109, label %if.then.111, label %if.else.112, !dbg !4902

if.then.111:                                      ; preds = %do.body.105
  br label %if.end.115, !dbg !4903

if.else.112:                                      ; preds = %do.body.105
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !4905, !tbaa !1876
  %ob_type113 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !4907
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type113, align 8, !dbg !4907, !tbaa !2195
  %tp_dealloc114 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !4908
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc114, align 8, !dbg !4908, !tbaa !2197
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !4909, !tbaa !1876
  call void %99(%struct._object* %100), !dbg !4910
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.112, %if.then.111
  %101 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !4911
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !4911
  br label %do.cond.116, !dbg !4913

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !4914

do.end.117:                                       ; preds = %do.cond.116
  br label %if.end.118, !dbg !4916

if.end.118:                                       ; preds = %do.end.117, %do.body.99
  %102 = bitcast %struct._object** %_py_tmp100 to i8*, !dbg !4918
  call void @llvm.lifetime.end(i64 8, i8* %102) #2, !dbg !4918
  br label %do.cond.119, !dbg !4919

do.cond.119:                                      ; preds = %if.end.118
  br label %do.end.120, !dbg !4920

do.end.120:                                       ; preds = %do.cond.119
  br label %do.body.121, !dbg !4922

do.body.121:                                      ; preds = %do.end.120
  %103 = bitcast %struct._object** %_py_tmp122 to i8*, !dbg !4923
  call void @llvm.lifetime.start(i64 8, i8* %103) #2, !dbg !4923
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp122, metadata !1598, metadata !1880), !dbg !4925
  %104 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4926, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %104, i32 0, i32 8, !dbg !4927
  %105 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !4927, !tbaa !4235
  store %struct._object* %105, %struct._object** %_py_tmp122, align 8, !dbg !4925, !tbaa !1876
  %106 = load %struct._object*, %struct._object** %_py_tmp122, align 8, !dbg !4928, !tbaa !1876
  %cmp123 = icmp ne %struct._object* %106, null, !dbg !4929
  br i1 %cmp123, label %if.then.125, label %if.end.140, !dbg !4930

if.then.125:                                      ; preds = %do.body.121
  %107 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4931, !tbaa !1876
  %readnl126 = getelementptr inbounds %struct.textio, %struct.textio* %107, i32 0, i32 8, !dbg !4933
  store %struct._object* null, %struct._object** %readnl126, align 8, !dbg !4934, !tbaa !4235
  br label %do.body.127, !dbg !4935

do.body.127:                                      ; preds = %if.then.125
  %108 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !4936
  call void @llvm.lifetime.start(i64 8, i8* %108) #2, !dbg !4936
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp128, metadata !1600, metadata !1880), !dbg !4938
  %109 = load %struct._object*, %struct._object** %_py_tmp122, align 8, !dbg !4939, !tbaa !1876
  store %struct._object* %109, %struct._object** %_py_decref_tmp128, align 8, !dbg !4938, !tbaa !1876
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !4940, !tbaa !1876
  %ob_refcnt129 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 0, !dbg !4942
  %111 = load i64, i64* %ob_refcnt129, align 8, !dbg !4943, !tbaa !1927
  %dec130 = add i64 %111, -1, !dbg !4943
  store i64 %dec130, i64* %ob_refcnt129, align 8, !dbg !4943, !tbaa !1927
  %cmp131 = icmp ne i64 %dec130, 0, !dbg !4944
  br i1 %cmp131, label %if.then.133, label %if.else.134, !dbg !4945

if.then.133:                                      ; preds = %do.body.127
  br label %if.end.137, !dbg !4946

if.else.134:                                      ; preds = %do.body.127
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !4948, !tbaa !1876
  %ob_type135 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 1, !dbg !4950
  %113 = load %struct._typeobject*, %struct._typeobject** %ob_type135, align 8, !dbg !4950, !tbaa !2195
  %tp_dealloc136 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %113, i32 0, i32 4, !dbg !4951
  %114 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc136, align 8, !dbg !4951, !tbaa !2197
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !4952, !tbaa !1876
  call void %114(%struct._object* %115), !dbg !4953
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.134, %if.then.133
  %116 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !4954
  call void @llvm.lifetime.end(i64 8, i8* %116) #2, !dbg !4954
  br label %do.cond.138, !dbg !4956

do.cond.138:                                      ; preds = %if.end.137
  br label %do.end.139, !dbg !4957

do.end.139:                                       ; preds = %do.cond.138
  br label %if.end.140, !dbg !4959

if.end.140:                                       ; preds = %do.end.139, %do.body.121
  %117 = bitcast %struct._object** %_py_tmp122 to i8*, !dbg !4961
  call void @llvm.lifetime.end(i64 8, i8* %117) #2, !dbg !4961
  br label %do.cond.141, !dbg !4962

do.cond.141:                                      ; preds = %if.end.140
  br label %do.end.142, !dbg !4963

do.end.142:                                       ; preds = %do.cond.141
  br label %do.body.143, !dbg !4965

do.body.143:                                      ; preds = %do.end.142
  %118 = bitcast %struct._object** %_py_tmp144 to i8*, !dbg !4966
  call void @llvm.lifetime.start(i64 8, i8* %118) #2, !dbg !4966
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp144, metadata !1604, metadata !1880), !dbg !4968
  %119 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4969, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %119, i32 0, i32 22, !dbg !4970
  %120 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !4970, !tbaa !4264
  store %struct._object* %120, %struct._object** %_py_tmp144, align 8, !dbg !4968, !tbaa !1876
  %121 = load %struct._object*, %struct._object** %_py_tmp144, align 8, !dbg !4971, !tbaa !1876
  %cmp145 = icmp ne %struct._object* %121, null, !dbg !4972
  br i1 %cmp145, label %if.then.147, label %if.end.162, !dbg !4973

if.then.147:                                      ; preds = %do.body.143
  %122 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4974, !tbaa !1876
  %decoded_chars148 = getelementptr inbounds %struct.textio, %struct.textio* %122, i32 0, i32 22, !dbg !4976
  store %struct._object* null, %struct._object** %decoded_chars148, align 8, !dbg !4977, !tbaa !4264
  br label %do.body.149, !dbg !4978

do.body.149:                                      ; preds = %if.then.147
  %123 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !4979
  call void @llvm.lifetime.start(i64 8, i8* %123) #2, !dbg !4979
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp150, metadata !1606, metadata !1880), !dbg !4981
  %124 = load %struct._object*, %struct._object** %_py_tmp144, align 8, !dbg !4982, !tbaa !1876
  store %struct._object* %124, %struct._object** %_py_decref_tmp150, align 8, !dbg !4981, !tbaa !1876
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !4983, !tbaa !1876
  %ob_refcnt151 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0, !dbg !4985
  %126 = load i64, i64* %ob_refcnt151, align 8, !dbg !4986, !tbaa !1927
  %dec152 = add i64 %126, -1, !dbg !4986
  store i64 %dec152, i64* %ob_refcnt151, align 8, !dbg !4986, !tbaa !1927
  %cmp153 = icmp ne i64 %dec152, 0, !dbg !4987
  br i1 %cmp153, label %if.then.155, label %if.else.156, !dbg !4988

if.then.155:                                      ; preds = %do.body.149
  br label %if.end.159, !dbg !4989

if.else.156:                                      ; preds = %do.body.149
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !4991, !tbaa !1876
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 1, !dbg !4993
  %128 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8, !dbg !4993, !tbaa !2195
  %tp_dealloc158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %128, i32 0, i32 4, !dbg !4994
  %129 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc158, align 8, !dbg !4994, !tbaa !2197
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !4995, !tbaa !1876
  call void %129(%struct._object* %130), !dbg !4996
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.156, %if.then.155
  %131 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !4997
  call void @llvm.lifetime.end(i64 8, i8* %131) #2, !dbg !4997
  br label %do.cond.160, !dbg !4999

do.cond.160:                                      ; preds = %if.end.159
  br label %do.end.161, !dbg !5000

do.end.161:                                       ; preds = %do.cond.160
  br label %if.end.162, !dbg !5002

if.end.162:                                       ; preds = %do.end.161, %do.body.143
  %132 = bitcast %struct._object** %_py_tmp144 to i8*, !dbg !5004
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !5004
  br label %do.cond.163, !dbg !5005

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !5006

do.end.164:                                       ; preds = %do.cond.163
  br label %do.body.165, !dbg !5008

do.body.165:                                      ; preds = %do.end.164
  %133 = bitcast %struct._object** %_py_tmp166 to i8*, !dbg !5009
  call void @llvm.lifetime.start(i64 8, i8* %133) #2, !dbg !5009
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp166, metadata !1610, metadata !1880), !dbg !5011
  %134 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5012, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %134, i32 0, i32 24, !dbg !5013
  %135 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !5013, !tbaa !4293
  store %struct._object* %135, %struct._object** %_py_tmp166, align 8, !dbg !5011, !tbaa !1876
  %136 = load %struct._object*, %struct._object** %_py_tmp166, align 8, !dbg !5014, !tbaa !1876
  %cmp167 = icmp ne %struct._object* %136, null, !dbg !5015
  br i1 %cmp167, label %if.then.169, label %if.end.184, !dbg !5016

if.then.169:                                      ; preds = %do.body.165
  %137 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5017, !tbaa !1876
  %pending_bytes170 = getelementptr inbounds %struct.textio, %struct.textio* %137, i32 0, i32 24, !dbg !5019
  store %struct._object* null, %struct._object** %pending_bytes170, align 8, !dbg !5020, !tbaa !4293
  br label %do.body.171, !dbg !5021

do.body.171:                                      ; preds = %if.then.169
  %138 = bitcast %struct._object** %_py_decref_tmp172 to i8*, !dbg !5022
  call void @llvm.lifetime.start(i64 8, i8* %138) #2, !dbg !5022
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp172, metadata !1612, metadata !1880), !dbg !5024
  %139 = load %struct._object*, %struct._object** %_py_tmp166, align 8, !dbg !5025, !tbaa !1876
  store %struct._object* %139, %struct._object** %_py_decref_tmp172, align 8, !dbg !5024, !tbaa !1876
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8, !dbg !5026, !tbaa !1876
  %ob_refcnt173 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0, !dbg !5028
  %141 = load i64, i64* %ob_refcnt173, align 8, !dbg !5029, !tbaa !1927
  %dec174 = add i64 %141, -1, !dbg !5029
  store i64 %dec174, i64* %ob_refcnt173, align 8, !dbg !5029, !tbaa !1927
  %cmp175 = icmp ne i64 %dec174, 0, !dbg !5030
  br i1 %cmp175, label %if.then.177, label %if.else.178, !dbg !5031

if.then.177:                                      ; preds = %do.body.171
  br label %if.end.181, !dbg !5032

if.else.178:                                      ; preds = %do.body.171
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8, !dbg !5034, !tbaa !1876
  %ob_type179 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 1, !dbg !5036
  %143 = load %struct._typeobject*, %struct._typeobject** %ob_type179, align 8, !dbg !5036, !tbaa !2195
  %tp_dealloc180 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %143, i32 0, i32 4, !dbg !5037
  %144 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc180, align 8, !dbg !5037, !tbaa !2197
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8, !dbg !5038, !tbaa !1876
  call void %144(%struct._object* %145), !dbg !5039
  br label %if.end.181

if.end.181:                                       ; preds = %if.else.178, %if.then.177
  %146 = bitcast %struct._object** %_py_decref_tmp172 to i8*, !dbg !5040
  call void @llvm.lifetime.end(i64 8, i8* %146) #2, !dbg !5040
  br label %do.cond.182, !dbg !5042

do.cond.182:                                      ; preds = %if.end.181
  br label %do.end.183, !dbg !5043

do.end.183:                                       ; preds = %do.cond.182
  br label %if.end.184, !dbg !5045

if.end.184:                                       ; preds = %do.end.183, %do.body.165
  %147 = bitcast %struct._object** %_py_tmp166 to i8*, !dbg !5047
  call void @llvm.lifetime.end(i64 8, i8* %147) #2, !dbg !5047
  br label %do.cond.185, !dbg !5048

do.cond.185:                                      ; preds = %if.end.184
  br label %do.end.186, !dbg !5049

do.end.186:                                       ; preds = %do.cond.185
  br label %do.body.187, !dbg !5051

do.body.187:                                      ; preds = %do.end.186
  %148 = bitcast %struct._object** %_py_tmp188 to i8*, !dbg !5052
  call void @llvm.lifetime.start(i64 8, i8* %148) #2, !dbg !5052
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp188, metadata !1616, metadata !1880), !dbg !5054
  %149 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5055, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %149, i32 0, i32 26, !dbg !5056
  %150 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !5056, !tbaa !4322
  store %struct._object* %150, %struct._object** %_py_tmp188, align 8, !dbg !5054, !tbaa !1876
  %151 = load %struct._object*, %struct._object** %_py_tmp188, align 8, !dbg !5057, !tbaa !1876
  %cmp189 = icmp ne %struct._object* %151, null, !dbg !5058
  br i1 %cmp189, label %if.then.191, label %if.end.206, !dbg !5059

if.then.191:                                      ; preds = %do.body.187
  %152 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5060, !tbaa !1876
  %snapshot192 = getelementptr inbounds %struct.textio, %struct.textio* %152, i32 0, i32 26, !dbg !5062
  store %struct._object* null, %struct._object** %snapshot192, align 8, !dbg !5063, !tbaa !4322
  br label %do.body.193, !dbg !5064

do.body.193:                                      ; preds = %if.then.191
  %153 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !5065
  call void @llvm.lifetime.start(i64 8, i8* %153) #2, !dbg !5065
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp194, metadata !1618, metadata !1880), !dbg !5067
  %154 = load %struct._object*, %struct._object** %_py_tmp188, align 8, !dbg !5068, !tbaa !1876
  store %struct._object* %154, %struct._object** %_py_decref_tmp194, align 8, !dbg !5067, !tbaa !1876
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !5069, !tbaa !1876
  %ob_refcnt195 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0, !dbg !5071
  %156 = load i64, i64* %ob_refcnt195, align 8, !dbg !5072, !tbaa !1927
  %dec196 = add i64 %156, -1, !dbg !5072
  store i64 %dec196, i64* %ob_refcnt195, align 8, !dbg !5072, !tbaa !1927
  %cmp197 = icmp ne i64 %dec196, 0, !dbg !5073
  br i1 %cmp197, label %if.then.199, label %if.else.200, !dbg !5074

if.then.199:                                      ; preds = %do.body.193
  br label %if.end.203, !dbg !5075

if.else.200:                                      ; preds = %do.body.193
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !5077, !tbaa !1876
  %ob_type201 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1, !dbg !5079
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type201, align 8, !dbg !5079, !tbaa !2195
  %tp_dealloc202 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %158, i32 0, i32 4, !dbg !5080
  %159 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc202, align 8, !dbg !5080, !tbaa !2197
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !5081, !tbaa !1876
  call void %159(%struct._object* %160), !dbg !5082
  br label %if.end.203

if.end.203:                                       ; preds = %if.else.200, %if.then.199
  %161 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !5083
  call void @llvm.lifetime.end(i64 8, i8* %161) #2, !dbg !5083
  br label %do.cond.204, !dbg !5085

do.cond.204:                                      ; preds = %if.end.203
  br label %do.end.205, !dbg !5086

do.end.205:                                       ; preds = %do.cond.204
  br label %if.end.206, !dbg !5088

if.end.206:                                       ; preds = %do.end.205, %do.body.187
  %162 = bitcast %struct._object** %_py_tmp188 to i8*, !dbg !5090
  call void @llvm.lifetime.end(i64 8, i8* %162) #2, !dbg !5090
  br label %do.cond.207, !dbg !5091

do.cond.207:                                      ; preds = %if.end.206
  br label %do.end.208, !dbg !5092

do.end.208:                                       ; preds = %do.cond.207
  br label %do.body.209, !dbg !5094

do.body.209:                                      ; preds = %do.end.208
  %163 = bitcast %struct._object** %_py_tmp210 to i8*, !dbg !5095
  call void @llvm.lifetime.start(i64 8, i8* %163) #2, !dbg !5095
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp210, metadata !1622, metadata !1880), !dbg !5097
  %164 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5098, !tbaa !1876
  %errors211 = getelementptr inbounds %struct.textio, %struct.textio* %164, i32 0, i32 9, !dbg !5099
  %165 = load %struct._object*, %struct._object** %errors211, align 8, !dbg !5099, !tbaa !4351
  store %struct._object* %165, %struct._object** %_py_tmp210, align 8, !dbg !5097, !tbaa !1876
  %166 = load %struct._object*, %struct._object** %_py_tmp210, align 8, !dbg !5100, !tbaa !1876
  %cmp212 = icmp ne %struct._object* %166, null, !dbg !5101
  br i1 %cmp212, label %if.then.214, label %if.end.229, !dbg !5102

if.then.214:                                      ; preds = %do.body.209
  %167 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5103, !tbaa !1876
  %errors215 = getelementptr inbounds %struct.textio, %struct.textio* %167, i32 0, i32 9, !dbg !5105
  store %struct._object* null, %struct._object** %errors215, align 8, !dbg !5106, !tbaa !4351
  br label %do.body.216, !dbg !5107

do.body.216:                                      ; preds = %if.then.214
  %168 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !5108
  call void @llvm.lifetime.start(i64 8, i8* %168) #2, !dbg !5108
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp217, metadata !1624, metadata !1880), !dbg !5110
  %169 = load %struct._object*, %struct._object** %_py_tmp210, align 8, !dbg !5111, !tbaa !1876
  store %struct._object* %169, %struct._object** %_py_decref_tmp217, align 8, !dbg !5110, !tbaa !1876
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !5112, !tbaa !1876
  %ob_refcnt218 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 0, !dbg !5114
  %171 = load i64, i64* %ob_refcnt218, align 8, !dbg !5115, !tbaa !1927
  %dec219 = add i64 %171, -1, !dbg !5115
  store i64 %dec219, i64* %ob_refcnt218, align 8, !dbg !5115, !tbaa !1927
  %cmp220 = icmp ne i64 %dec219, 0, !dbg !5116
  br i1 %cmp220, label %if.then.222, label %if.else.223, !dbg !5117

if.then.222:                                      ; preds = %do.body.216
  br label %if.end.226, !dbg !5118

if.else.223:                                      ; preds = %do.body.216
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !5120, !tbaa !1876
  %ob_type224 = getelementptr inbounds %struct._object, %struct._object* %172, i32 0, i32 1, !dbg !5122
  %173 = load %struct._typeobject*, %struct._typeobject** %ob_type224, align 8, !dbg !5122, !tbaa !2195
  %tp_dealloc225 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %173, i32 0, i32 4, !dbg !5123
  %174 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc225, align 8, !dbg !5123, !tbaa !2197
  %175 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !5124, !tbaa !1876
  call void %174(%struct._object* %175), !dbg !5125
  br label %if.end.226

if.end.226:                                       ; preds = %if.else.223, %if.then.222
  %176 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !5126
  call void @llvm.lifetime.end(i64 8, i8* %176) #2, !dbg !5126
  br label %do.cond.227, !dbg !5128

do.cond.227:                                      ; preds = %if.end.226
  br label %do.end.228, !dbg !5129

do.end.228:                                       ; preds = %do.cond.227
  br label %if.end.229, !dbg !5131

if.end.229:                                       ; preds = %do.end.228, %do.body.209
  %177 = bitcast %struct._object** %_py_tmp210 to i8*, !dbg !5133
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !5133
  br label %do.cond.230, !dbg !5134

do.cond.230:                                      ; preds = %if.end.229
  br label %do.end.231, !dbg !5135

do.end.231:                                       ; preds = %do.cond.230
  br label %do.body.232, !dbg !5137

do.body.232:                                      ; preds = %do.end.231
  %178 = bitcast %struct._object** %_py_tmp233 to i8*, !dbg !5138
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !5138
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp233, metadata !1628, metadata !1880), !dbg !5140
  %179 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5141, !tbaa !1876
  %raw234 = getelementptr inbounds %struct.textio, %struct.textio* %179, i32 0, i32 28, !dbg !5142
  %180 = load %struct._object*, %struct._object** %raw234, align 8, !dbg !5142, !tbaa !4380
  store %struct._object* %180, %struct._object** %_py_tmp233, align 8, !dbg !5140, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_tmp233, align 8, !dbg !5143, !tbaa !1876
  %cmp235 = icmp ne %struct._object* %181, null, !dbg !5144
  br i1 %cmp235, label %if.then.237, label %if.end.252, !dbg !5145

if.then.237:                                      ; preds = %do.body.232
  %182 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5146, !tbaa !1876
  %raw238 = getelementptr inbounds %struct.textio, %struct.textio* %182, i32 0, i32 28, !dbg !5148
  store %struct._object* null, %struct._object** %raw238, align 8, !dbg !5149, !tbaa !4380
  br label %do.body.239, !dbg !5150

do.body.239:                                      ; preds = %if.then.237
  %183 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !5151
  call void @llvm.lifetime.start(i64 8, i8* %183) #2, !dbg !5151
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp240, metadata !1630, metadata !1880), !dbg !5153
  %184 = load %struct._object*, %struct._object** %_py_tmp233, align 8, !dbg !5154, !tbaa !1876
  store %struct._object* %184, %struct._object** %_py_decref_tmp240, align 8, !dbg !5153, !tbaa !1876
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !5155, !tbaa !1876
  %ob_refcnt241 = getelementptr inbounds %struct._object, %struct._object* %185, i32 0, i32 0, !dbg !5157
  %186 = load i64, i64* %ob_refcnt241, align 8, !dbg !5158, !tbaa !1927
  %dec242 = add i64 %186, -1, !dbg !5158
  store i64 %dec242, i64* %ob_refcnt241, align 8, !dbg !5158, !tbaa !1927
  %cmp243 = icmp ne i64 %dec242, 0, !dbg !5159
  br i1 %cmp243, label %if.then.245, label %if.else.246, !dbg !5160

if.then.245:                                      ; preds = %do.body.239
  br label %if.end.249, !dbg !5161

if.else.246:                                      ; preds = %do.body.239
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !5163, !tbaa !1876
  %ob_type247 = getelementptr inbounds %struct._object, %struct._object* %187, i32 0, i32 1, !dbg !5165
  %188 = load %struct._typeobject*, %struct._typeobject** %ob_type247, align 8, !dbg !5165, !tbaa !2195
  %tp_dealloc248 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %188, i32 0, i32 4, !dbg !5166
  %189 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc248, align 8, !dbg !5166, !tbaa !2197
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !5167, !tbaa !1876
  call void %189(%struct._object* %190), !dbg !5168
  br label %if.end.249

if.end.249:                                       ; preds = %if.else.246, %if.then.245
  %191 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !5169
  call void @llvm.lifetime.end(i64 8, i8* %191) #2, !dbg !5169
  br label %do.cond.250, !dbg !5171

do.cond.250:                                      ; preds = %if.end.249
  br label %do.end.251, !dbg !5172

do.end.251:                                       ; preds = %do.cond.250
  br label %if.end.252, !dbg !5174

if.end.252:                                       ; preds = %do.end.251, %do.body.232
  %192 = bitcast %struct._object** %_py_tmp233 to i8*, !dbg !5176
  call void @llvm.lifetime.end(i64 8, i8* %192) #2, !dbg !5176
  br label %do.cond.253, !dbg !5177

do.cond.253:                                      ; preds = %if.end.252
  br label %do.end.254, !dbg !5178

do.end.254:                                       ; preds = %do.cond.253
  %193 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5180, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %193, i32 0, i32 23, !dbg !5181
  store i64 0, i64* %decoded_chars_used, align 8, !dbg !5182, !tbaa !5183
  %194 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5184, !tbaa !1876
  %pending_bytes_count = getelementptr inbounds %struct.textio, %struct.textio* %194, i32 0, i32 25, !dbg !5185
  store i64 0, i64* %pending_bytes_count, align 8, !dbg !5186, !tbaa !5187
  %195 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5188, !tbaa !1876
  %encodefunc = getelementptr inbounds %struct.textio, %struct.textio* %195, i32 0, i32 20, !dbg !5189
  store %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)** %encodefunc, align 8, !dbg !5190, !tbaa !5191
  %196 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5192, !tbaa !1876
  %b2cratio = getelementptr inbounds %struct.textio, %struct.textio* %196, i32 0, i32 27, !dbg !5193
  store double 0.000000e+00, double* %b2cratio, align 8, !dbg !5194, !tbaa !5195
  %197 = load i8*, i8** %encoding, align 8, !dbg !5196, !tbaa !1876
  %cmp255 = icmp eq i8* %197, null, !dbg !5197
  br i1 %cmp255, label %if.then.257, label %if.end.337, !dbg !5198

if.then.257:                                      ; preds = %do.end.254
  %198 = bitcast %struct._object** %fileno to i8*, !dbg !5199
  call void @llvm.lifetime.start(i64 8, i8* %198) #2, !dbg !5199
  call void @llvm.dbg.declare(metadata %struct._object** %fileno, metadata !1634, metadata !1880), !dbg !5200
  %call258 = call %struct._PyIO_State* @_PyIO_get_module_state(), !dbg !5201
  store %struct._PyIO_State* %call258, %struct._PyIO_State** %state, align 8, !dbg !5202, !tbaa !1876
  %199 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !5203, !tbaa !1876
  %cmp259 = icmp eq %struct._PyIO_State* %199, null, !dbg !5205
  br i1 %cmp259, label %if.then.261, label %if.end.262, !dbg !5206

if.then.261:                                      ; preds = %if.then.257
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.334, !dbg !5207

if.end.262:                                       ; preds = %if.then.257
  %200 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !5208, !tbaa !1876
  %call263 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %200, %struct._Py_Identifier* @PyId_fileno, i8* null), !dbg !5209
  store %struct._object* %call263, %struct._object** %fileno, align 8, !dbg !5210, !tbaa !1876
  %201 = load %struct._object*, %struct._object** %fileno, align 8, !dbg !5211, !tbaa !1876
  %cmp264 = icmp eq %struct._object* %201, null, !dbg !5212
  br i1 %cmp264, label %if.then.266, label %if.else.274, !dbg !5213

if.then.266:                                      ; preds = %if.end.262
  %202 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !5214, !tbaa !1876
  %call267 = call i32 @PyErr_ExceptionMatches(%struct._object* %202), !dbg !5217
  %tobool268 = icmp ne i32 %call267, 0, !dbg !5217
  br i1 %tobool268, label %if.then.271, label %lor.lhs.false, !dbg !5218

lor.lhs.false:                                    ; preds = %if.then.266
  %203 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !5219, !tbaa !1876
  %unsupported_operation = getelementptr inbounds %struct._PyIO_State, %struct._PyIO_State* %203, i32 0, i32 2, !dbg !5220
  %204 = load %struct._object*, %struct._object** %unsupported_operation, align 8, !dbg !5220, !tbaa !5221
  %call269 = call i32 @PyErr_ExceptionMatches(%struct._object* %204), !dbg !5223
  %tobool270 = icmp ne i32 %call269, 0, !dbg !5223
  br i1 %tobool270, label %if.then.271, label %if.else.272, !dbg !5224

if.then.271:                                      ; preds = %lor.lhs.false, %if.then.266
  call void @PyErr_Clear(), !dbg !5225
  br label %if.end.273, !dbg !5227

if.else.272:                                      ; preds = %lor.lhs.false
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.334, !dbg !5228

if.end.273:                                       ; preds = %if.then.271
  br label %if.end.333, !dbg !5230

if.else.274:                                      ; preds = %if.end.262
  %205 = bitcast i32* %fd to i8*, !dbg !5231
  call void @llvm.lifetime.start(i64 4, i8* %205) #2, !dbg !5231
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !1637, metadata !1880), !dbg !5232
  %206 = load %struct._object*, %struct._object** %fileno, align 8, !dbg !5233, !tbaa !1876
  %call275 = call i32 @_PyLong_AsInt(%struct._object* %206), !dbg !5234
  store i32 %call275, i32* %fd, align 4, !dbg !5232, !tbaa !1883
  br label %do.body.276, !dbg !5235

do.body.276:                                      ; preds = %if.else.274
  %207 = bitcast %struct._object** %_py_decref_tmp277 to i8*, !dbg !5236
  call void @llvm.lifetime.start(i64 8, i8* %207) #2, !dbg !5236
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp277, metadata !1640, metadata !1880), !dbg !5238
  %208 = load %struct._object*, %struct._object** %fileno, align 8, !dbg !5239, !tbaa !1876
  store %struct._object* %208, %struct._object** %_py_decref_tmp277, align 8, !dbg !5238, !tbaa !1876
  %209 = load %struct._object*, %struct._object** %_py_decref_tmp277, align 8, !dbg !5240, !tbaa !1876
  %ob_refcnt278 = getelementptr inbounds %struct._object, %struct._object* %209, i32 0, i32 0, !dbg !5242
  %210 = load i64, i64* %ob_refcnt278, align 8, !dbg !5243, !tbaa !1927
  %dec279 = add i64 %210, -1, !dbg !5243
  store i64 %dec279, i64* %ob_refcnt278, align 8, !dbg !5243, !tbaa !1927
  %cmp280 = icmp ne i64 %dec279, 0, !dbg !5244
  br i1 %cmp280, label %if.then.282, label %if.else.283, !dbg !5245

if.then.282:                                      ; preds = %do.body.276
  br label %if.end.286, !dbg !5246

if.else.283:                                      ; preds = %do.body.276
  %211 = load %struct._object*, %struct._object** %_py_decref_tmp277, align 8, !dbg !5248, !tbaa !1876
  %ob_type284 = getelementptr inbounds %struct._object, %struct._object* %211, i32 0, i32 1, !dbg !5250
  %212 = load %struct._typeobject*, %struct._typeobject** %ob_type284, align 8, !dbg !5250, !tbaa !2195
  %tp_dealloc285 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %212, i32 0, i32 4, !dbg !5251
  %213 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc285, align 8, !dbg !5251, !tbaa !2197
  %214 = load %struct._object*, %struct._object** %_py_decref_tmp277, align 8, !dbg !5252, !tbaa !1876
  call void %213(%struct._object* %214), !dbg !5253
  br label %if.end.286

if.end.286:                                       ; preds = %if.else.283, %if.then.282
  %215 = bitcast %struct._object** %_py_decref_tmp277 to i8*, !dbg !5254
  call void @llvm.lifetime.end(i64 8, i8* %215) #2, !dbg !5254
  br label %do.cond.287, !dbg !5256

do.cond.287:                                      ; preds = %if.end.286
  br label %do.end.288, !dbg !5257

do.end.288:                                       ; preds = %do.cond.287
  %216 = load i32, i32* %fd, align 4, !dbg !5259, !tbaa !1883
  %cmp289 = icmp eq i32 %216, -1, !dbg !5261
  br i1 %cmp289, label %land.lhs.true.291, label %if.end.295, !dbg !5262

land.lhs.true.291:                                ; preds = %do.end.288
  %call292 = call %struct._object* @PyErr_Occurred(), !dbg !5263
  %tobool293 = icmp ne %struct._object* %call292, null, !dbg !5263
  br i1 %tobool293, label %if.then.294, label %if.end.295, !dbg !5265

if.then.294:                                      ; preds = %land.lhs.true.291
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5266

if.end.295:                                       ; preds = %land.lhs.true.291, %do.end.288
  %217 = load i32, i32* %fd, align 4, !dbg !5268, !tbaa !1883
  %call296 = call %struct._object* @_Py_device_encoding(i32 %217), !dbg !5269
  %218 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5270, !tbaa !1876
  %encoding297 = getelementptr inbounds %struct.textio, %struct.textio* %218, i32 0, i32 5, !dbg !5271
  store %struct._object* %call296, %struct._object** %encoding297, align 8, !dbg !5272, !tbaa !4041
  %219 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5273, !tbaa !1876
  %encoding298 = getelementptr inbounds %struct.textio, %struct.textio* %219, i32 0, i32 5, !dbg !5274
  %220 = load %struct._object*, %struct._object** %encoding298, align 8, !dbg !5274, !tbaa !4041
  %cmp299 = icmp eq %struct._object* %220, null, !dbg !5275
  br i1 %cmp299, label %if.then.301, label %if.else.302, !dbg !5276

if.then.301:                                      ; preds = %if.end.295
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5277

if.else.302:                                      ; preds = %if.end.295
  %221 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5278, !tbaa !1876
  %encoding303 = getelementptr inbounds %struct.textio, %struct.textio* %221, i32 0, i32 5, !dbg !5279
  %222 = load %struct._object*, %struct._object** %encoding303, align 8, !dbg !5279, !tbaa !4041
  %ob_type304 = getelementptr inbounds %struct._object, %struct._object* %222, i32 0, i32 1, !dbg !5280
  %223 = load %struct._typeobject*, %struct._typeobject** %ob_type304, align 8, !dbg !5280, !tbaa !2195
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %223, i32 0, i32 19, !dbg !5281
  %224 = load i64, i64* %tp_flags, align 8, !dbg !5281, !tbaa !3077
  %and = and i64 %224, 268435456, !dbg !5282
  %cmp305 = icmp ne i64 %and, 0, !dbg !5283
  br i1 %cmp305, label %if.end.331, label %if.then.307, !dbg !5284

if.then.307:                                      ; preds = %if.else.302
  br label %do.body.308, !dbg !5285

do.body.308:                                      ; preds = %if.then.307
  %225 = bitcast %struct._object** %_py_tmp309 to i8*, !dbg !5286
  call void @llvm.lifetime.start(i64 8, i8* %225) #2, !dbg !5286
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp309, metadata !1642, metadata !1880), !dbg !5288
  %226 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5289, !tbaa !1876
  %encoding310 = getelementptr inbounds %struct.textio, %struct.textio* %226, i32 0, i32 5, !dbg !5290
  %227 = load %struct._object*, %struct._object** %encoding310, align 8, !dbg !5290, !tbaa !4041
  store %struct._object* %227, %struct._object** %_py_tmp309, align 8, !dbg !5288, !tbaa !1876
  %228 = load %struct._object*, %struct._object** %_py_tmp309, align 8, !dbg !5291, !tbaa !1876
  %cmp311 = icmp ne %struct._object* %228, null, !dbg !5292
  br i1 %cmp311, label %if.then.313, label %if.end.328, !dbg !5293

if.then.313:                                      ; preds = %do.body.308
  %229 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5294, !tbaa !1876
  %encoding314 = getelementptr inbounds %struct.textio, %struct.textio* %229, i32 0, i32 5, !dbg !5296
  store %struct._object* null, %struct._object** %encoding314, align 8, !dbg !5297, !tbaa !4041
  br label %do.body.315, !dbg !5298

do.body.315:                                      ; preds = %if.then.313
  %230 = bitcast %struct._object** %_py_decref_tmp316 to i8*, !dbg !5299
  call void @llvm.lifetime.start(i64 8, i8* %230) #2, !dbg !5299
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp316, metadata !1646, metadata !1880), !dbg !5301
  %231 = load %struct._object*, %struct._object** %_py_tmp309, align 8, !dbg !5302, !tbaa !1876
  store %struct._object* %231, %struct._object** %_py_decref_tmp316, align 8, !dbg !5301, !tbaa !1876
  %232 = load %struct._object*, %struct._object** %_py_decref_tmp316, align 8, !dbg !5303, !tbaa !1876
  %ob_refcnt317 = getelementptr inbounds %struct._object, %struct._object* %232, i32 0, i32 0, !dbg !5305
  %233 = load i64, i64* %ob_refcnt317, align 8, !dbg !5306, !tbaa !1927
  %dec318 = add i64 %233, -1, !dbg !5306
  store i64 %dec318, i64* %ob_refcnt317, align 8, !dbg !5306, !tbaa !1927
  %cmp319 = icmp ne i64 %dec318, 0, !dbg !5307
  br i1 %cmp319, label %if.then.321, label %if.else.322, !dbg !5308

if.then.321:                                      ; preds = %do.body.315
  br label %if.end.325, !dbg !5309

if.else.322:                                      ; preds = %do.body.315
  %234 = load %struct._object*, %struct._object** %_py_decref_tmp316, align 8, !dbg !5311, !tbaa !1876
  %ob_type323 = getelementptr inbounds %struct._object, %struct._object* %234, i32 0, i32 1, !dbg !5313
  %235 = load %struct._typeobject*, %struct._typeobject** %ob_type323, align 8, !dbg !5313, !tbaa !2195
  %tp_dealloc324 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %235, i32 0, i32 4, !dbg !5314
  %236 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc324, align 8, !dbg !5314, !tbaa !2197
  %237 = load %struct._object*, %struct._object** %_py_decref_tmp316, align 8, !dbg !5315, !tbaa !1876
  call void %236(%struct._object* %237), !dbg !5316
  br label %if.end.325

if.end.325:                                       ; preds = %if.else.322, %if.then.321
  %238 = bitcast %struct._object** %_py_decref_tmp316 to i8*, !dbg !5317
  call void @llvm.lifetime.end(i64 8, i8* %238) #2, !dbg !5317
  br label %do.cond.326, !dbg !5319

do.cond.326:                                      ; preds = %if.end.325
  br label %do.end.327, !dbg !5320

do.end.327:                                       ; preds = %do.cond.326
  br label %if.end.328, !dbg !5322

if.end.328:                                       ; preds = %do.end.327, %do.body.308
  %239 = bitcast %struct._object** %_py_tmp309 to i8*, !dbg !5324
  call void @llvm.lifetime.end(i64 8, i8* %239) #2, !dbg !5324
  br label %do.cond.329, !dbg !5327

do.cond.329:                                      ; preds = %if.end.328
  br label %do.end.330, !dbg !5328

do.end.330:                                       ; preds = %do.cond.329
  br label %if.end.331, !dbg !5330

if.end.331:                                       ; preds = %do.end.330, %if.else.302
  br label %if.end.332

if.end.332:                                       ; preds = %if.end.331
  store i32 0, i32* %cleanup.dest.slot, !dbg !5332
  br label %cleanup, !dbg !5332

cleanup:                                          ; preds = %if.then.301, %if.then.294, %if.end.332
  %240 = bitcast i32* %fd to i8*, !dbg !5333
  call void @llvm.lifetime.end(i64 4, i8* %240) #2, !dbg !5333
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.334 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.333

if.end.333:                                       ; preds = %cleanup.cont, %if.end.273
  store i32 0, i32* %cleanup.dest.slot, !dbg !5335
  br label %cleanup.334, !dbg !5335

cleanup.334:                                      ; preds = %if.else.272, %if.then.261, %if.end.333, %cleanup
  %241 = bitcast %struct._object** %fileno to i8*, !dbg !5336
  call void @llvm.lifetime.end(i64 8, i8* %241) #2, !dbg !5336
  %cleanup.dest.335 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.335, label %cleanup.912 [
    i32 0, label %cleanup.cont.336
    i32 42, label %error
  ]

cleanup.cont.336:                                 ; preds = %cleanup.334
  br label %if.end.337, !dbg !5338

if.end.337:                                       ; preds = %cleanup.cont.336, %do.end.254
  %242 = load i8*, i8** %encoding, align 8, !dbg !5339, !tbaa !1876
  %cmp338 = icmp eq i8* %242, null, !dbg !5340
  br i1 %cmp338, label %land.lhs.true.340, label %if.end.412, !dbg !5341

land.lhs.true.340:                                ; preds = %if.end.337
  %243 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5342, !tbaa !1876
  %encoding341 = getelementptr inbounds %struct.textio, %struct.textio* %243, i32 0, i32 5, !dbg !5344
  %244 = load %struct._object*, %struct._object** %encoding341, align 8, !dbg !5344, !tbaa !4041
  %cmp342 = icmp eq %struct._object* %244, null, !dbg !5345
  br i1 %cmp342, label %if.then.344, label %if.end.412, !dbg !5346

if.then.344:                                      ; preds = %land.lhs.true.340
  %245 = bitcast %struct._object** %locale_module to i8*, !dbg !5347
  call void @llvm.lifetime.start(i64 8, i8* %245) #2, !dbg !5347
  call void @llvm.dbg.declare(metadata %struct._object** %locale_module, metadata !1650, metadata !1880), !dbg !5348
  %246 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !5349, !tbaa !1876
  %call345 = call %struct._object* @_PyIO_get_locale_module(%struct._PyIO_State* %246), !dbg !5350
  store %struct._object* %call345, %struct._object** %locale_module, align 8, !dbg !5348, !tbaa !1876
  %247 = load %struct._object*, %struct._object** %locale_module, align 8, !dbg !5351, !tbaa !1876
  %cmp346 = icmp eq %struct._object* %247, null, !dbg !5353
  br i1 %cmp346, label %if.then.348, label %if.end.349, !dbg !5354

if.then.348:                                      ; preds = %if.then.344
  br label %catch_ImportError, !dbg !5355

if.end.349:                                       ; preds = %if.then.344
  %248 = load %struct._object*, %struct._object** %locale_module, align 8, !dbg !5356, !tbaa !1876
  %call350 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %248, %struct._Py_Identifier* @PyId_getpreferredencoding, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)), !dbg !5357
  %249 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5358, !tbaa !1876
  %encoding351 = getelementptr inbounds %struct.textio, %struct.textio* %249, i32 0, i32 5, !dbg !5359
  store %struct._object* %call350, %struct._object** %encoding351, align 8, !dbg !5360, !tbaa !4041
  br label %do.body.352, !dbg !5361

do.body.352:                                      ; preds = %if.end.349
  %250 = bitcast %struct._object** %_py_decref_tmp353 to i8*, !dbg !5362
  call void @llvm.lifetime.start(i64 8, i8* %250) #2, !dbg !5362
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp353, metadata !1653, metadata !1880), !dbg !5364
  %251 = load %struct._object*, %struct._object** %locale_module, align 8, !dbg !5365, !tbaa !1876
  store %struct._object* %251, %struct._object** %_py_decref_tmp353, align 8, !dbg !5364, !tbaa !1876
  %252 = load %struct._object*, %struct._object** %_py_decref_tmp353, align 8, !dbg !5366, !tbaa !1876
  %ob_refcnt354 = getelementptr inbounds %struct._object, %struct._object* %252, i32 0, i32 0, !dbg !5368
  %253 = load i64, i64* %ob_refcnt354, align 8, !dbg !5369, !tbaa !1927
  %dec355 = add i64 %253, -1, !dbg !5369
  store i64 %dec355, i64* %ob_refcnt354, align 8, !dbg !5369, !tbaa !1927
  %cmp356 = icmp ne i64 %dec355, 0, !dbg !5370
  br i1 %cmp356, label %if.then.358, label %if.else.359, !dbg !5371

if.then.358:                                      ; preds = %do.body.352
  br label %if.end.362, !dbg !5372

if.else.359:                                      ; preds = %do.body.352
  %254 = load %struct._object*, %struct._object** %_py_decref_tmp353, align 8, !dbg !5374, !tbaa !1876
  %ob_type360 = getelementptr inbounds %struct._object, %struct._object* %254, i32 0, i32 1, !dbg !5376
  %255 = load %struct._typeobject*, %struct._typeobject** %ob_type360, align 8, !dbg !5376, !tbaa !2195
  %tp_dealloc361 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %255, i32 0, i32 4, !dbg !5377
  %256 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc361, align 8, !dbg !5377, !tbaa !2197
  %257 = load %struct._object*, %struct._object** %_py_decref_tmp353, align 8, !dbg !5378, !tbaa !1876
  call void %256(%struct._object* %257), !dbg !5379
  br label %if.end.362

if.end.362:                                       ; preds = %if.else.359, %if.then.358
  %258 = bitcast %struct._object** %_py_decref_tmp353 to i8*, !dbg !5380
  call void @llvm.lifetime.end(i64 8, i8* %258) #2, !dbg !5380
  br label %do.cond.363, !dbg !5382

do.cond.363:                                      ; preds = %if.end.362
  br label %do.end.364, !dbg !5383

do.end.364:                                       ; preds = %do.cond.363
  %259 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5385, !tbaa !1876
  %encoding365 = getelementptr inbounds %struct.textio, %struct.textio* %259, i32 0, i32 5, !dbg !5386
  %260 = load %struct._object*, %struct._object** %encoding365, align 8, !dbg !5386, !tbaa !4041
  %cmp366 = icmp eq %struct._object* %260, null, !dbg !5387
  br i1 %cmp366, label %if.then.368, label %if.else.376, !dbg !5388

if.then.368:                                      ; preds = %do.end.364
  br label %catch_ImportError, !dbg !5389

catch_ImportError:                                ; preds = %if.then.368, %if.then.348
  %261 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !5391, !tbaa !1876
  %call369 = call i32 @PyErr_ExceptionMatches(%struct._object* %261), !dbg !5394
  %tobool370 = icmp ne i32 %call369, 0, !dbg !5394
  br i1 %tobool370, label %if.then.371, label %if.else.374, !dbg !5395

if.then.371:                                      ; preds = %catch_ImportError
  call void @PyErr_Clear(), !dbg !5396
  %call372 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i32 0, i32 0)), !dbg !5398
  %262 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5399, !tbaa !1876
  %encoding373 = getelementptr inbounds %struct.textio, %struct.textio* %262, i32 0, i32 5, !dbg !5400
  store %struct._object* %call372, %struct._object** %encoding373, align 8, !dbg !5401, !tbaa !4041
  br label %if.end.375, !dbg !5402

if.else.374:                                      ; preds = %catch_ImportError
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.409, !dbg !5403

if.end.375:                                       ; preds = %if.then.371
  br label %if.end.408, !dbg !5404

if.else.376:                                      ; preds = %do.end.364
  %263 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5405, !tbaa !1876
  %encoding377 = getelementptr inbounds %struct.textio, %struct.textio* %263, i32 0, i32 5, !dbg !5406
  %264 = load %struct._object*, %struct._object** %encoding377, align 8, !dbg !5406, !tbaa !4041
  %ob_type378 = getelementptr inbounds %struct._object, %struct._object* %264, i32 0, i32 1, !dbg !5407
  %265 = load %struct._typeobject*, %struct._typeobject** %ob_type378, align 8, !dbg !5407, !tbaa !2195
  %tp_flags379 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %265, i32 0, i32 19, !dbg !5408
  %266 = load i64, i64* %tp_flags379, align 8, !dbg !5408, !tbaa !3077
  %and380 = and i64 %266, 268435456, !dbg !5409
  %cmp381 = icmp ne i64 %and380, 0, !dbg !5410
  br i1 %cmp381, label %if.end.407, label %if.then.383, !dbg !5411

if.then.383:                                      ; preds = %if.else.376
  br label %do.body.384, !dbg !5412

do.body.384:                                      ; preds = %if.then.383
  %267 = bitcast %struct._object** %_py_tmp385 to i8*, !dbg !5413
  call void @llvm.lifetime.start(i64 8, i8* %267) #2, !dbg !5413
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp385, metadata !1655, metadata !1880), !dbg !5415
  %268 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5416, !tbaa !1876
  %encoding386 = getelementptr inbounds %struct.textio, %struct.textio* %268, i32 0, i32 5, !dbg !5417
  %269 = load %struct._object*, %struct._object** %encoding386, align 8, !dbg !5417, !tbaa !4041
  store %struct._object* %269, %struct._object** %_py_tmp385, align 8, !dbg !5415, !tbaa !1876
  %270 = load %struct._object*, %struct._object** %_py_tmp385, align 8, !dbg !5418, !tbaa !1876
  %cmp387 = icmp ne %struct._object* %270, null, !dbg !5419
  br i1 %cmp387, label %if.then.389, label %if.end.404, !dbg !5420

if.then.389:                                      ; preds = %do.body.384
  %271 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5421, !tbaa !1876
  %encoding390 = getelementptr inbounds %struct.textio, %struct.textio* %271, i32 0, i32 5, !dbg !5423
  store %struct._object* null, %struct._object** %encoding390, align 8, !dbg !5424, !tbaa !4041
  br label %do.body.391, !dbg !5425

do.body.391:                                      ; preds = %if.then.389
  %272 = bitcast %struct._object** %_py_decref_tmp392 to i8*, !dbg !5426
  call void @llvm.lifetime.start(i64 8, i8* %272) #2, !dbg !5426
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp392, metadata !1659, metadata !1880), !dbg !5428
  %273 = load %struct._object*, %struct._object** %_py_tmp385, align 8, !dbg !5429, !tbaa !1876
  store %struct._object* %273, %struct._object** %_py_decref_tmp392, align 8, !dbg !5428, !tbaa !1876
  %274 = load %struct._object*, %struct._object** %_py_decref_tmp392, align 8, !dbg !5430, !tbaa !1876
  %ob_refcnt393 = getelementptr inbounds %struct._object, %struct._object* %274, i32 0, i32 0, !dbg !5432
  %275 = load i64, i64* %ob_refcnt393, align 8, !dbg !5433, !tbaa !1927
  %dec394 = add i64 %275, -1, !dbg !5433
  store i64 %dec394, i64* %ob_refcnt393, align 8, !dbg !5433, !tbaa !1927
  %cmp395 = icmp ne i64 %dec394, 0, !dbg !5434
  br i1 %cmp395, label %if.then.397, label %if.else.398, !dbg !5435

if.then.397:                                      ; preds = %do.body.391
  br label %if.end.401, !dbg !5436

if.else.398:                                      ; preds = %do.body.391
  %276 = load %struct._object*, %struct._object** %_py_decref_tmp392, align 8, !dbg !5438, !tbaa !1876
  %ob_type399 = getelementptr inbounds %struct._object, %struct._object* %276, i32 0, i32 1, !dbg !5440
  %277 = load %struct._typeobject*, %struct._typeobject** %ob_type399, align 8, !dbg !5440, !tbaa !2195
  %tp_dealloc400 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %277, i32 0, i32 4, !dbg !5441
  %278 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc400, align 8, !dbg !5441, !tbaa !2197
  %279 = load %struct._object*, %struct._object** %_py_decref_tmp392, align 8, !dbg !5442, !tbaa !1876
  call void %278(%struct._object* %279), !dbg !5443
  br label %if.end.401

if.end.401:                                       ; preds = %if.else.398, %if.then.397
  %280 = bitcast %struct._object** %_py_decref_tmp392 to i8*, !dbg !5444
  call void @llvm.lifetime.end(i64 8, i8* %280) #2, !dbg !5444
  br label %do.cond.402, !dbg !5446

do.cond.402:                                      ; preds = %if.end.401
  br label %do.end.403, !dbg !5447

do.end.403:                                       ; preds = %do.cond.402
  br label %if.end.404, !dbg !5449

if.end.404:                                       ; preds = %do.end.403, %do.body.384
  %281 = bitcast %struct._object** %_py_tmp385 to i8*, !dbg !5451
  call void @llvm.lifetime.end(i64 8, i8* %281) #2, !dbg !5451
  br label %do.cond.405, !dbg !5454

do.cond.405:                                      ; preds = %if.end.404
  br label %do.end.406, !dbg !5455

do.end.406:                                       ; preds = %do.cond.405
  br label %if.end.407, !dbg !5457

if.end.407:                                       ; preds = %do.end.406, %if.else.376
  br label %if.end.408

if.end.408:                                       ; preds = %if.end.407, %if.end.375
  store i32 0, i32* %cleanup.dest.slot, !dbg !5459
  br label %cleanup.409, !dbg !5459

cleanup.409:                                      ; preds = %if.else.374, %if.end.408
  %282 = bitcast %struct._object** %locale_module to i8*, !dbg !5460
  call void @llvm.lifetime.end(i64 8, i8* %282) #2, !dbg !5460
  %cleanup.dest.410 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.410, label %cleanup.912 [
    i32 0, label %cleanup.cont.411
    i32 42, label %error
  ]

cleanup.cont.411:                                 ; preds = %cleanup.409
  br label %if.end.412, !dbg !5461

if.end.412:                                       ; preds = %cleanup.cont.411, %land.lhs.true.340, %if.end.337
  %283 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5462, !tbaa !1876
  %encoding413 = getelementptr inbounds %struct.textio, %struct.textio* %283, i32 0, i32 5, !dbg !5464
  %284 = load %struct._object*, %struct._object** %encoding413, align 8, !dbg !5464, !tbaa !4041
  %cmp414 = icmp ne %struct._object* %284, null, !dbg !5465
  br i1 %cmp414, label %if.then.416, label %if.else.423, !dbg !5466

if.then.416:                                      ; preds = %if.end.412
  %285 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5467, !tbaa !1876
  %encoding417 = getelementptr inbounds %struct.textio, %struct.textio* %285, i32 0, i32 5, !dbg !5469
  %286 = load %struct._object*, %struct._object** %encoding417, align 8, !dbg !5469, !tbaa !4041
  %call418 = call i8* @PyUnicode_AsUTF8(%struct._object* %286), !dbg !5470
  store i8* %call418, i8** %encoding, align 8, !dbg !5471, !tbaa !1876
  %287 = load i8*, i8** %encoding, align 8, !dbg !5472, !tbaa !1876
  %cmp419 = icmp eq i8* %287, null, !dbg !5474
  br i1 %cmp419, label %if.then.421, label %if.end.422, !dbg !5475

if.then.421:                                      ; preds = %if.then.416
  br label %error, !dbg !5476

if.end.422:                                       ; preds = %if.then.416
  br label %if.end.436, !dbg !5477

if.else.423:                                      ; preds = %if.end.412
  %288 = load i8*, i8** %encoding, align 8, !dbg !5478, !tbaa !1876
  %cmp424 = icmp ne i8* %288, null, !dbg !5480
  br i1 %cmp424, label %if.then.426, label %if.else.434, !dbg !5481

if.then.426:                                      ; preds = %if.else.423
  %289 = load i8*, i8** %encoding, align 8, !dbg !5482, !tbaa !1876
  %call427 = call %struct._object* @PyUnicode_FromString(i8* %289), !dbg !5484
  %290 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5485, !tbaa !1876
  %encoding428 = getelementptr inbounds %struct.textio, %struct.textio* %290, i32 0, i32 5, !dbg !5486
  store %struct._object* %call427, %struct._object** %encoding428, align 8, !dbg !5487, !tbaa !4041
  %291 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5488, !tbaa !1876
  %encoding429 = getelementptr inbounds %struct.textio, %struct.textio* %291, i32 0, i32 5, !dbg !5490
  %292 = load %struct._object*, %struct._object** %encoding429, align 8, !dbg !5490, !tbaa !4041
  %cmp430 = icmp eq %struct._object* %292, null, !dbg !5491
  br i1 %cmp430, label %if.then.432, label %if.end.433, !dbg !5492

if.then.432:                                      ; preds = %if.then.426
  br label %error, !dbg !5493

if.end.433:                                       ; preds = %if.then.426
  br label %if.end.435, !dbg !5494

if.else.434:                                      ; preds = %if.else.423
  %293 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !5495, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %293, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.100, i32 0, i32 0)), !dbg !5497
  br label %if.end.435

if.end.435:                                       ; preds = %if.else.434, %if.end.433
  br label %if.end.436

if.end.436:                                       ; preds = %if.end.435, %if.end.422
  %294 = load i8*, i8** %encoding, align 8, !dbg !5498, !tbaa !1876
  %call437 = call %struct._object* @_PyCodec_LookupTextEncoding(i8* %294, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.101, i32 0, i32 0)), !dbg !5499
  store %struct._object* %call437, %struct._object** %codec_info, align 8, !dbg !5500, !tbaa !1876
  %295 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5501, !tbaa !1876
  %cmp438 = icmp eq %struct._object* %295, null, !dbg !5502
  br i1 %cmp438, label %if.then.440, label %if.end.464, !dbg !5503

if.then.440:                                      ; preds = %if.end.436
  br label %do.body.441, !dbg !5504

do.body.441:                                      ; preds = %if.then.440
  %296 = bitcast %struct._object** %_py_tmp442 to i8*, !dbg !5505
  call void @llvm.lifetime.start(i64 8, i8* %296) #2, !dbg !5505
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp442, metadata !1663, metadata !1880), !dbg !5507
  %297 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5508, !tbaa !1876
  %encoding443 = getelementptr inbounds %struct.textio, %struct.textio* %297, i32 0, i32 5, !dbg !5509
  %298 = load %struct._object*, %struct._object** %encoding443, align 8, !dbg !5509, !tbaa !4041
  store %struct._object* %298, %struct._object** %_py_tmp442, align 8, !dbg !5507, !tbaa !1876
  %299 = load %struct._object*, %struct._object** %_py_tmp442, align 8, !dbg !5510, !tbaa !1876
  %cmp444 = icmp ne %struct._object* %299, null, !dbg !5511
  br i1 %cmp444, label %if.then.446, label %if.end.461, !dbg !5512

if.then.446:                                      ; preds = %do.body.441
  %300 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5513, !tbaa !1876
  %encoding447 = getelementptr inbounds %struct.textio, %struct.textio* %300, i32 0, i32 5, !dbg !5515
  store %struct._object* null, %struct._object** %encoding447, align 8, !dbg !5516, !tbaa !4041
  br label %do.body.448, !dbg !5517

do.body.448:                                      ; preds = %if.then.446
  %301 = bitcast %struct._object** %_py_decref_tmp449 to i8*, !dbg !5518
  call void @llvm.lifetime.start(i64 8, i8* %301) #2, !dbg !5518
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp449, metadata !1667, metadata !1880), !dbg !5520
  %302 = load %struct._object*, %struct._object** %_py_tmp442, align 8, !dbg !5521, !tbaa !1876
  store %struct._object* %302, %struct._object** %_py_decref_tmp449, align 8, !dbg !5520, !tbaa !1876
  %303 = load %struct._object*, %struct._object** %_py_decref_tmp449, align 8, !dbg !5522, !tbaa !1876
  %ob_refcnt450 = getelementptr inbounds %struct._object, %struct._object* %303, i32 0, i32 0, !dbg !5524
  %304 = load i64, i64* %ob_refcnt450, align 8, !dbg !5525, !tbaa !1927
  %dec451 = add i64 %304, -1, !dbg !5525
  store i64 %dec451, i64* %ob_refcnt450, align 8, !dbg !5525, !tbaa !1927
  %cmp452 = icmp ne i64 %dec451, 0, !dbg !5526
  br i1 %cmp452, label %if.then.454, label %if.else.455, !dbg !5527

if.then.454:                                      ; preds = %do.body.448
  br label %if.end.458, !dbg !5528

if.else.455:                                      ; preds = %do.body.448
  %305 = load %struct._object*, %struct._object** %_py_decref_tmp449, align 8, !dbg !5530, !tbaa !1876
  %ob_type456 = getelementptr inbounds %struct._object, %struct._object* %305, i32 0, i32 1, !dbg !5532
  %306 = load %struct._typeobject*, %struct._typeobject** %ob_type456, align 8, !dbg !5532, !tbaa !2195
  %tp_dealloc457 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %306, i32 0, i32 4, !dbg !5533
  %307 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc457, align 8, !dbg !5533, !tbaa !2197
  %308 = load %struct._object*, %struct._object** %_py_decref_tmp449, align 8, !dbg !5534, !tbaa !1876
  call void %307(%struct._object* %308), !dbg !5535
  br label %if.end.458

if.end.458:                                       ; preds = %if.else.455, %if.then.454
  %309 = bitcast %struct._object** %_py_decref_tmp449 to i8*, !dbg !5536
  call void @llvm.lifetime.end(i64 8, i8* %309) #2, !dbg !5536
  br label %do.cond.459, !dbg !5538

do.cond.459:                                      ; preds = %if.end.458
  br label %do.end.460, !dbg !5539

do.end.460:                                       ; preds = %do.cond.459
  br label %if.end.461, !dbg !5541

if.end.461:                                       ; preds = %do.end.460, %do.body.441
  %310 = bitcast %struct._object** %_py_tmp442 to i8*, !dbg !5543
  call void @llvm.lifetime.end(i64 8, i8* %310) #2, !dbg !5543
  br label %do.cond.462, !dbg !5546

do.cond.462:                                      ; preds = %if.end.461
  br label %do.end.463, !dbg !5547

do.end.463:                                       ; preds = %do.cond.462
  br label %error, !dbg !5549

if.end.464:                                       ; preds = %if.end.436
  %311 = load i8*, i8** %errors, align 8, !dbg !5550, !tbaa !1876
  %cmp465 = icmp eq i8* %311, null, !dbg !5552
  br i1 %cmp465, label %if.then.467, label %if.end.468, !dbg !5553

if.then.467:                                      ; preds = %if.end.464
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i8** %errors, align 8, !dbg !5554, !tbaa !1876
  br label %if.end.468, !dbg !5555

if.end.468:                                       ; preds = %if.then.467, %if.end.464
  %312 = load i8*, i8** %errors, align 8, !dbg !5556, !tbaa !1876
  %call469 = call %struct._object* @PyBytes_FromString(i8* %312), !dbg !5557
  %313 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5558, !tbaa !1876
  %errors470 = getelementptr inbounds %struct.textio, %struct.textio* %313, i32 0, i32 9, !dbg !5559
  store %struct._object* %call469, %struct._object** %errors470, align 8, !dbg !5560, !tbaa !4351
  %314 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5561, !tbaa !1876
  %errors471 = getelementptr inbounds %struct.textio, %struct.textio* %314, i32 0, i32 9, !dbg !5563
  %315 = load %struct._object*, %struct._object** %errors471, align 8, !dbg !5563, !tbaa !4351
  %cmp472 = icmp eq %struct._object* %315, null, !dbg !5564
  br i1 %cmp472, label %if.then.474, label %if.end.475, !dbg !5565

if.then.474:                                      ; preds = %if.end.468
  br label %error, !dbg !5566

if.end.475:                                       ; preds = %if.end.468
  %316 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5567, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %316, i32 0, i32 3, !dbg !5568
  store i64 8192, i64* %chunk_size, align 8, !dbg !5569, !tbaa !5570
  %317 = load i8*, i8** %newline, align 8, !dbg !5571, !tbaa !1876
  %cmp476 = icmp eq i8* %317, null, !dbg !5572
  br i1 %cmp476, label %lor.end, label %lor.rhs, !dbg !5573

lor.rhs:                                          ; preds = %if.end.475
  %318 = load i8*, i8** %newline, align 8, !dbg !5574, !tbaa !1876
  %arrayidx478 = getelementptr i8, i8* %318, i64 0, !dbg !5574
  %319 = load i8, i8* %arrayidx478, align 1, !dbg !5574, !tbaa !2065
  %conv479 = sext i8 %319 to i32, !dbg !5574
  %cmp480 = icmp eq i32 %conv479, 0, !dbg !5576
  br label %lor.end, !dbg !5573

lor.end:                                          ; preds = %lor.rhs, %if.end.475
  %320 = phi i1 [ true, %if.end.475 ], [ %cmp480, %lor.rhs ]
  %lor.ext = zext i1 %320 to i32, !dbg !5577
  %conv482 = trunc i32 %lor.ext to i8, !dbg !5580
  %321 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5581, !tbaa !1876
  %readuniversal = getelementptr inbounds %struct.textio, %struct.textio* %321, i32 0, i32 13, !dbg !5582
  store i8 %conv482, i8* %readuniversal, align 1, !dbg !5583, !tbaa !5584
  %322 = load i32, i32* %line_buffering, align 4, !dbg !5585, !tbaa !1883
  %conv483 = trunc i32 %322 to i8, !dbg !5585
  %323 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5586, !tbaa !1876
  %line_buffering484 = getelementptr inbounds %struct.textio, %struct.textio* %323, i32 0, i32 11, !dbg !5587
  store i8 %conv483, i8* %line_buffering484, align 1, !dbg !5588, !tbaa !5589
  %324 = load i32, i32* %write_through, align 4, !dbg !5590, !tbaa !1883
  %conv485 = trunc i32 %324 to i8, !dbg !5590
  %325 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5591, !tbaa !1876
  %write_through486 = getelementptr inbounds %struct.textio, %struct.textio* %325, i32 0, i32 12, !dbg !5592
  store i8 %conv485, i8* %write_through486, align 1, !dbg !5593, !tbaa !5594
  %326 = load i8*, i8** %newline, align 8, !dbg !5595, !tbaa !1876
  %cmp487 = icmp eq i8* %326, null, !dbg !5596
  %conv488 = zext i1 %cmp487 to i32, !dbg !5596
  %conv489 = trunc i32 %conv488 to i8, !dbg !5597
  %327 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5598, !tbaa !1876
  %readtranslate = getelementptr inbounds %struct.textio, %struct.textio* %327, i32 0, i32 14, !dbg !5599
  store i8 %conv489, i8* %readtranslate, align 1, !dbg !5600, !tbaa !5601
  %328 = load i8*, i8** %newline, align 8, !dbg !5602, !tbaa !1876
  %tobool490 = icmp ne i8* %328, null, !dbg !5602
  br i1 %tobool490, label %if.then.491, label %if.end.499, !dbg !5604

if.then.491:                                      ; preds = %lor.end
  %329 = load i8*, i8** %newline, align 8, !dbg !5605, !tbaa !1876
  %call492 = call %struct._object* @PyUnicode_FromString(i8* %329), !dbg !5607
  %330 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5608, !tbaa !1876
  %readnl493 = getelementptr inbounds %struct.textio, %struct.textio* %330, i32 0, i32 8, !dbg !5609
  store %struct._object* %call492, %struct._object** %readnl493, align 8, !dbg !5610, !tbaa !4235
  %331 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5611, !tbaa !1876
  %readnl494 = getelementptr inbounds %struct.textio, %struct.textio* %331, i32 0, i32 8, !dbg !5613
  %332 = load %struct._object*, %struct._object** %readnl494, align 8, !dbg !5613, !tbaa !4235
  %cmp495 = icmp eq %struct._object* %332, null, !dbg !5614
  br i1 %cmp495, label %if.then.497, label %if.end.498, !dbg !5615

if.then.497:                                      ; preds = %if.then.491
  br label %error, !dbg !5616

if.end.498:                                       ; preds = %if.then.491
  br label %if.end.499, !dbg !5617

if.end.499:                                       ; preds = %if.end.498, %lor.end
  %333 = load i8*, i8** %newline, align 8, !dbg !5618, !tbaa !1876
  %cmp500 = icmp eq i8* %333, null, !dbg !5619
  br i1 %cmp500, label %lor.end.507, label %lor.rhs.502, !dbg !5620

lor.rhs.502:                                      ; preds = %if.end.499
  %334 = load i8*, i8** %newline, align 8, !dbg !5621, !tbaa !1876
  %arrayidx503 = getelementptr i8, i8* %334, i64 0, !dbg !5621
  %335 = load i8, i8* %arrayidx503, align 1, !dbg !5621, !tbaa !2065
  %conv504 = sext i8 %335 to i32, !dbg !5621
  %cmp505 = icmp ne i32 %conv504, 0, !dbg !5622
  br label %lor.end.507, !dbg !5620

lor.end.507:                                      ; preds = %lor.rhs.502, %if.end.499
  %336 = phi i1 [ true, %if.end.499 ], [ %cmp505, %lor.rhs.502 ]
  %lor.ext508 = zext i1 %336 to i32, !dbg !5623
  %conv509 = trunc i32 %lor.ext508 to i8, !dbg !5624
  %337 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5625, !tbaa !1876
  %writetranslate = getelementptr inbounds %struct.textio, %struct.textio* %337, i32 0, i32 15, !dbg !5626
  store i8 %conv509, i8* %writetranslate, align 1, !dbg !5627, !tbaa !5628
  %338 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5629, !tbaa !1876
  %readuniversal510 = getelementptr inbounds %struct.textio, %struct.textio* %338, i32 0, i32 13, !dbg !5630
  %339 = load i8, i8* %readuniversal510, align 1, !dbg !5630, !tbaa !5584
  %tobool511 = icmp ne i8 %339, 0, !dbg !5629
  br i1 %tobool511, label %if.end.572, label %land.lhs.true.512, !dbg !5631

land.lhs.true.512:                                ; preds = %lor.end.507
  %340 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5632, !tbaa !1876
  %readnl513 = getelementptr inbounds %struct.textio, %struct.textio* %340, i32 0, i32 8, !dbg !5634
  %341 = load %struct._object*, %struct._object** %readnl513, align 8, !dbg !5634, !tbaa !4235
  %tobool514 = icmp ne %struct._object* %341, null, !dbg !5635
  br i1 %tobool514, label %if.then.515, label %if.end.572, !dbg !5636

if.then.515:                                      ; preds = %land.lhs.true.512
  %342 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5637, !tbaa !1876
  %readnl516 = getelementptr inbounds %struct.textio, %struct.textio* %342, i32 0, i32 8, !dbg !5638
  %343 = load %struct._object*, %struct._object** %readnl516, align 8, !dbg !5638, !tbaa !4235
  %call517 = call i8* @PyUnicode_AsUTF8(%struct._object* %343), !dbg !5639
  %344 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5640, !tbaa !1876
  %writenl = getelementptr inbounds %struct.textio, %struct.textio* %344, i32 0, i32 10, !dbg !5641
  store i8* %call517, i8** %writenl, align 8, !dbg !5642, !tbaa !5643
  %345 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5644, !tbaa !1876
  %writenl518 = getelementptr inbounds %struct.textio, %struct.textio* %345, i32 0, i32 10, !dbg !5646
  %346 = load i8*, i8** %writenl518, align 8, !dbg !5646, !tbaa !5643
  %cmp519 = icmp eq i8* %346, null, !dbg !5647
  br i1 %cmp519, label %if.then.521, label %if.end.522, !dbg !5648

if.then.521:                                      ; preds = %if.then.515
  br label %error, !dbg !5649

if.end.522:                                       ; preds = %if.then.515
  %347 = bitcast i64* %__s1_len to i8*, !dbg !5650
  call void @llvm.lifetime.start(i64 8, i8* %347) #2, !dbg !5650
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !1671, metadata !1880), !dbg !5651
  %348 = bitcast i64* %__s2_len to i8*, !dbg !5650
  call void @llvm.lifetime.start(i64 8, i8* %348) #2, !dbg !5650
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !1676, metadata !1880), !dbg !5652
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i64 1) to i64), i64 ptrtoint ([2 x i8]* @.str.24 to i64)), i64 1), label %land.lhs.true.523, label %cond.false, !dbg !5653

land.lhs.true.523:                                ; preds = %if.end.522
  store i64 1, i64* %__s2_len, align 8, !dbg !5654, !tbaa !1941
  %349 = load i64, i64* %__s2_len, align 8, !dbg !5656, !tbaa !1941
  %cmp524 = icmp ult i64 %349, 4, !dbg !5657
  br i1 %cmp524, label %cond.true, label %cond.false, !dbg !5658

cond.true:                                        ; preds = %land.lhs.true.523
  %350 = bitcast i8** %__s1 to i8*, !dbg !5659
  call void @llvm.lifetime.start(i64 8, i8* %350) #2, !dbg !5659
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !1677, metadata !1880), !dbg !5661
  %351 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5662, !tbaa !1876
  %writenl527 = getelementptr inbounds %struct.textio, %struct.textio* %351, i32 0, i32 10, !dbg !5663
  %352 = load i8*, i8** %writenl527, align 8, !dbg !5663, !tbaa !5643
  store i8* %352, i8** %__s1, align 8, !dbg !5661, !tbaa !1876
  %353 = bitcast i32* %__result to i8*, !dbg !5664
  call void @llvm.lifetime.start(i64 4, i8* %353) #2, !dbg !5664
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !1679, metadata !1880), !dbg !5665
  %354 = load i8*, i8** %__s1, align 8, !dbg !5666, !tbaa !1876
  %arrayidx529 = getelementptr i8, i8* %354, i64 0, !dbg !5666
  %355 = load i8, i8* %arrayidx529, align 1, !dbg !5666, !tbaa !2065
  %conv530 = zext i8 %355 to i32, !dbg !5666
  %356 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), align 1, !dbg !5667, !tbaa !2065
  %conv531 = zext i8 %356 to i32, !dbg !5667
  %sub = sub i32 %conv530, %conv531, !dbg !5668
  store i32 %sub, i32* %__result, align 4, !dbg !5665, !tbaa !1883
  %357 = load i64, i64* %__s2_len, align 8, !dbg !5669, !tbaa !1941
  %cmp532 = icmp ugt i64 %357, 0, !dbg !5671
  br i1 %cmp532, label %land.lhs.true.534, label %if.end.564, !dbg !5672

land.lhs.true.534:                                ; preds = %cond.true
  %358 = load i32, i32* %__result, align 4, !dbg !5673, !tbaa !1883
  %cmp535 = icmp eq i32 %358, 0, !dbg !5675
  br i1 %cmp535, label %if.then.537, label %if.end.564, !dbg !5676

if.then.537:                                      ; preds = %land.lhs.true.534
  %359 = load i8*, i8** %__s1, align 8, !dbg !5677, !tbaa !1876
  %arrayidx538 = getelementptr i8, i8* %359, i64 1, !dbg !5677
  %360 = load i8, i8* %arrayidx538, align 1, !dbg !5677, !tbaa !2065
  %conv539 = zext i8 %360 to i32, !dbg !5677
  %361 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i64 1), align 1, !dbg !5680, !tbaa !2065
  %conv540 = zext i8 %361 to i32, !dbg !5680
  %sub541 = sub i32 %conv539, %conv540, !dbg !5681
  store i32 %sub541, i32* %__result, align 4, !dbg !5682, !tbaa !1883
  %362 = load i64, i64* %__s2_len, align 8, !dbg !5683, !tbaa !1941
  %cmp542 = icmp ugt i64 %362, 1, !dbg !5685
  br i1 %cmp542, label %land.lhs.true.544, label %if.end.563, !dbg !5686

land.lhs.true.544:                                ; preds = %if.then.537
  %363 = load i32, i32* %__result, align 4, !dbg !5687, !tbaa !1883
  %cmp545 = icmp eq i32 %363, 0, !dbg !5689
  br i1 %cmp545, label %if.then.547, label %if.end.563, !dbg !5690

if.then.547:                                      ; preds = %land.lhs.true.544
  %364 = load i8*, i8** %__s1, align 8, !dbg !5691, !tbaa !1876
  %arrayidx548 = getelementptr i8, i8* %364, i64 2, !dbg !5691
  %365 = load i8, i8* %arrayidx548, align 1, !dbg !5691, !tbaa !2065
  %conv549 = zext i8 %365 to i32, !dbg !5691
  %366 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i64 2), align 1, !dbg !5694, !tbaa !2065
  %conv550 = zext i8 %366 to i32, !dbg !5694
  %sub551 = sub i32 %conv549, %conv550, !dbg !5695
  store i32 %sub551, i32* %__result, align 4, !dbg !5696, !tbaa !1883
  %367 = load i64, i64* %__s2_len, align 8, !dbg !5697, !tbaa !1941
  %cmp552 = icmp ugt i64 %367, 2, !dbg !5699
  br i1 %cmp552, label %land.lhs.true.554, label %if.end.562, !dbg !5700

land.lhs.true.554:                                ; preds = %if.then.547
  %368 = load i32, i32* %__result, align 4, !dbg !5701, !tbaa !1883
  %cmp555 = icmp eq i32 %368, 0, !dbg !5703
  br i1 %cmp555, label %if.then.557, label %if.end.562, !dbg !5704

if.then.557:                                      ; preds = %land.lhs.true.554
  %369 = load i8*, i8** %__s1, align 8, !dbg !5705, !tbaa !1876
  %arrayidx558 = getelementptr i8, i8* %369, i64 3, !dbg !5705
  %370 = load i8, i8* %arrayidx558, align 1, !dbg !5705, !tbaa !2065
  %conv559 = zext i8 %370 to i32, !dbg !5705
  %371 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i64 3), align 1, !dbg !5707, !tbaa !2065
  %conv560 = zext i8 %371 to i32, !dbg !5707
  %sub561 = sub i32 %conv559, %conv560, !dbg !5708
  store i32 %sub561, i32* %__result, align 4, !dbg !5709, !tbaa !1883
  br label %if.end.562, !dbg !5710

if.end.562:                                       ; preds = %if.then.557, %land.lhs.true.554, %if.then.547
  br label %if.end.563, !dbg !5711

if.end.563:                                       ; preds = %if.end.562, %land.lhs.true.544, %if.then.537
  br label %if.end.564, !dbg !5715

if.end.564:                                       ; preds = %if.end.563, %land.lhs.true.534, %cond.true
  %372 = load i32, i32* %__result, align 4, !dbg !5719, !tbaa !1883
  store i32 %372, i32* %tmp565, !dbg !5723, !tbaa !1883
  %373 = bitcast i32* %__result to i8*, !dbg !5724
  call void @llvm.lifetime.end(i64 4, i8* %373) #2, !dbg !5724
  %374 = bitcast i8** %__s1 to i8*, !dbg !5724
  call void @llvm.lifetime.end(i64 8, i8* %374) #2, !dbg !5724
  %375 = load i32, i32* %tmp565, !dbg !5725, !tbaa !1883
  br label %cond.end, !dbg !5658

cond.false:                                       ; preds = %land.lhs.true.523, %if.end.522
  %376 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5726, !tbaa !1876
  %writenl566 = getelementptr inbounds %struct.textio, %struct.textio* %376, i32 0, i32 10, !dbg !5729
  %377 = load i8*, i8** %writenl566, align 8, !dbg !5729, !tbaa !5643
  %call567 = call i32 @strcmp(i8* %377, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)) #2, !dbg !5730
  br label %cond.end, !dbg !5658

cond.end:                                         ; preds = %cond.false, %if.end.564
  %cond = phi i32 [ %375, %if.end.564 ], [ %call567, %cond.false ], !dbg !5658
  store i32 %cond, i32* %tmp, !dbg !5731, !tbaa !1883
  %378 = bitcast i64* %__s2_len to i8*, !dbg !5734
  call void @llvm.lifetime.end(i64 8, i8* %378) #2, !dbg !5734
  %379 = bitcast i64* %__s1_len to i8*, !dbg !5734
  call void @llvm.lifetime.end(i64 8, i8* %379) #2, !dbg !5734
  %380 = load i32, i32* %tmp, !dbg !5735, !tbaa !1883
  %tobool568 = icmp ne i32 %380, 0, !dbg !5736
  br i1 %tobool568, label %if.end.571, label %if.then.569, !dbg !5737

if.then.569:                                      ; preds = %cond.end
  %381 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5738, !tbaa !1876
  %writenl570 = getelementptr inbounds %struct.textio, %struct.textio* %381, i32 0, i32 10, !dbg !5739
  store i8* null, i8** %writenl570, align 8, !dbg !5740, !tbaa !5643
  br label %if.end.571, !dbg !5738

if.end.571:                                       ; preds = %if.then.569, %cond.end
  br label %if.end.572, !dbg !5741

if.end.572:                                       ; preds = %if.end.571, %land.lhs.true.512, %lor.end.507
  %382 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !5742, !tbaa !1876
  %call573 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %382, %struct._Py_Identifier* @PyId_readable, i8* null), !dbg !5743
  store %struct._object* %call573, %struct._object** %res, align 8, !dbg !5744, !tbaa !1876
  %383 = load %struct._object*, %struct._object** %res, align 8, !dbg !5745, !tbaa !1876
  %cmp574 = icmp eq %struct._object* %383, null, !dbg !5747
  br i1 %cmp574, label %if.then.576, label %if.end.577, !dbg !5748

if.then.576:                                      ; preds = %if.end.572
  br label %error, !dbg !5749

if.end.577:                                       ; preds = %if.end.572
  %384 = load %struct._object*, %struct._object** %res, align 8, !dbg !5750, !tbaa !1876
  %call578 = call i32 @PyObject_IsTrue(%struct._object* %384), !dbg !5751
  store i32 %call578, i32* %r, align 4, !dbg !5752, !tbaa !1883
  br label %do.body.579, !dbg !5753

do.body.579:                                      ; preds = %if.end.577
  %385 = bitcast %struct._object** %_py_decref_tmp581 to i8*, !dbg !5754
  call void @llvm.lifetime.start(i64 8, i8* %385) #2, !dbg !5754
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp581, metadata !1680, metadata !1880), !dbg !5756
  %386 = load %struct._object*, %struct._object** %res, align 8, !dbg !5757, !tbaa !1876
  store %struct._object* %386, %struct._object** %_py_decref_tmp581, align 8, !dbg !5756, !tbaa !1876
  %387 = load %struct._object*, %struct._object** %_py_decref_tmp581, align 8, !dbg !5758, !tbaa !1876
  %ob_refcnt582 = getelementptr inbounds %struct._object, %struct._object* %387, i32 0, i32 0, !dbg !5760
  %388 = load i64, i64* %ob_refcnt582, align 8, !dbg !5761, !tbaa !1927
  %dec583 = add i64 %388, -1, !dbg !5761
  store i64 %dec583, i64* %ob_refcnt582, align 8, !dbg !5761, !tbaa !1927
  %cmp584 = icmp ne i64 %dec583, 0, !dbg !5762
  br i1 %cmp584, label %if.then.586, label %if.else.587, !dbg !5763

if.then.586:                                      ; preds = %do.body.579
  br label %if.end.590, !dbg !5764

if.else.587:                                      ; preds = %do.body.579
  %389 = load %struct._object*, %struct._object** %_py_decref_tmp581, align 8, !dbg !5766, !tbaa !1876
  %ob_type588 = getelementptr inbounds %struct._object, %struct._object* %389, i32 0, i32 1, !dbg !5768
  %390 = load %struct._typeobject*, %struct._typeobject** %ob_type588, align 8, !dbg !5768, !tbaa !2195
  %tp_dealloc589 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %390, i32 0, i32 4, !dbg !5769
  %391 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc589, align 8, !dbg !5769, !tbaa !2197
  %392 = load %struct._object*, %struct._object** %_py_decref_tmp581, align 8, !dbg !5770, !tbaa !1876
  call void %391(%struct._object* %392), !dbg !5771
  br label %if.end.590

if.end.590:                                       ; preds = %if.else.587, %if.then.586
  %393 = bitcast %struct._object** %_py_decref_tmp581 to i8*, !dbg !5772
  call void @llvm.lifetime.end(i64 8, i8* %393) #2, !dbg !5772
  br label %do.cond.591, !dbg !5774

do.cond.591:                                      ; preds = %if.end.590
  br label %do.end.592, !dbg !5775

do.end.592:                                       ; preds = %do.cond.591
  %394 = load i32, i32* %r, align 4, !dbg !5777, !tbaa !1883
  %cmp593 = icmp eq i32 %394, -1, !dbg !5779
  br i1 %cmp593, label %if.then.595, label %if.end.596, !dbg !5780

if.then.595:                                      ; preds = %do.end.592
  br label %error, !dbg !5781

if.end.596:                                       ; preds = %do.end.592
  %395 = load i32, i32* %r, align 4, !dbg !5782, !tbaa !1883
  %cmp597 = icmp eq i32 %395, 1, !dbg !5783
  br i1 %cmp597, label %if.then.599, label %if.end.649, !dbg !5784

if.then.599:                                      ; preds = %if.end.596
  %396 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5785, !tbaa !1876
  %397 = load i8*, i8** %errors, align 8, !dbg !5786, !tbaa !1876
  %call600 = call %struct._object* @_PyCodecInfo_GetIncrementalDecoder(%struct._object* %396, i8* %397), !dbg !5787
  %398 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5788, !tbaa !1876
  %decoder601 = getelementptr inbounds %struct.textio, %struct.textio* %398, i32 0, i32 7, !dbg !5789
  store %struct._object* %call600, %struct._object** %decoder601, align 8, !dbg !5790, !tbaa !4206
  %399 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5791, !tbaa !1876
  %decoder602 = getelementptr inbounds %struct.textio, %struct.textio* %399, i32 0, i32 7, !dbg !5793
  %400 = load %struct._object*, %struct._object** %decoder602, align 8, !dbg !5793, !tbaa !4206
  %cmp603 = icmp eq %struct._object* %400, null, !dbg !5794
  br i1 %cmp603, label %if.then.605, label %if.end.606, !dbg !5795

if.then.605:                                      ; preds = %if.then.599
  br label %error, !dbg !5796

if.end.606:                                       ; preds = %if.then.599
  %401 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5797, !tbaa !1876
  %readuniversal607 = getelementptr inbounds %struct.textio, %struct.textio* %401, i32 0, i32 13, !dbg !5798
  %402 = load i8, i8* %readuniversal607, align 1, !dbg !5798, !tbaa !5584
  %tobool608 = icmp ne i8 %402, 0, !dbg !5797
  br i1 %tobool608, label %if.then.609, label %if.end.648, !dbg !5799

if.then.609:                                      ; preds = %if.end.606
  %403 = bitcast %struct._object** %incrementalDecoder to i8*, !dbg !5800
  call void @llvm.lifetime.start(i64 8, i8* %403) #2, !dbg !5800
  call void @llvm.dbg.declare(metadata %struct._object** %incrementalDecoder, metadata !1682, metadata !1880), !dbg !5801
  %404 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5802, !tbaa !1876
  %decoder611 = getelementptr inbounds %struct.textio, %struct.textio* %404, i32 0, i32 7, !dbg !5803
  %405 = load %struct._object*, %struct._object** %decoder611, align 8, !dbg !5803, !tbaa !4206
  %406 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5804, !tbaa !1876
  %readtranslate612 = getelementptr inbounds %struct.textio, %struct.textio* %406, i32 0, i32 14, !dbg !5805
  %407 = load i8, i8* %readtranslate612, align 1, !dbg !5805, !tbaa !5601
  %conv613 = sext i8 %407 to i32, !dbg !5806
  %call614 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyIncrementalNewlineDecoder_Type, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), %struct._object* %405, i32 %conv613), !dbg !5807
  store %struct._object* %call614, %struct._object** %incrementalDecoder, align 8, !dbg !5801, !tbaa !1876
  %408 = load %struct._object*, %struct._object** %incrementalDecoder, align 8, !dbg !5808, !tbaa !1876
  %cmp615 = icmp eq %struct._object* %408, null, !dbg !5810
  br i1 %cmp615, label %if.then.617, label %if.end.618, !dbg !5811

if.then.617:                                      ; preds = %if.then.609
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.645, !dbg !5812

if.end.618:                                       ; preds = %if.then.609
  br label %do.body.619, !dbg !5813

do.body.619:                                      ; preds = %if.end.618
  %409 = bitcast %struct._object** %_py_tmp621 to i8*, !dbg !5814
  call void @llvm.lifetime.start(i64 8, i8* %409) #2, !dbg !5814
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp621, metadata !1687, metadata !1880), !dbg !5816
  %410 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5817, !tbaa !1876
  %decoder622 = getelementptr inbounds %struct.textio, %struct.textio* %410, i32 0, i32 7, !dbg !5818
  %411 = load %struct._object*, %struct._object** %decoder622, align 8, !dbg !5818, !tbaa !4206
  store %struct._object* %411, %struct._object** %_py_tmp621, align 8, !dbg !5816, !tbaa !1876
  %412 = load %struct._object*, %struct._object** %_py_tmp621, align 8, !dbg !5819, !tbaa !1876
  %cmp623 = icmp ne %struct._object* %412, null, !dbg !5820
  br i1 %cmp623, label %if.then.625, label %if.end.641, !dbg !5821

if.then.625:                                      ; preds = %do.body.619
  %413 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5822, !tbaa !1876
  %decoder626 = getelementptr inbounds %struct.textio, %struct.textio* %413, i32 0, i32 7, !dbg !5824
  store %struct._object* null, %struct._object** %decoder626, align 8, !dbg !5825, !tbaa !4206
  br label %do.body.627, !dbg !5826

do.body.627:                                      ; preds = %if.then.625
  %414 = bitcast %struct._object** %_py_decref_tmp629 to i8*, !dbg !5827
  call void @llvm.lifetime.start(i64 8, i8* %414) #2, !dbg !5827
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp629, metadata !1689, metadata !1880), !dbg !5829
  %415 = load %struct._object*, %struct._object** %_py_tmp621, align 8, !dbg !5830, !tbaa !1876
  store %struct._object* %415, %struct._object** %_py_decref_tmp629, align 8, !dbg !5829, !tbaa !1876
  %416 = load %struct._object*, %struct._object** %_py_decref_tmp629, align 8, !dbg !5831, !tbaa !1876
  %ob_refcnt630 = getelementptr inbounds %struct._object, %struct._object* %416, i32 0, i32 0, !dbg !5833
  %417 = load i64, i64* %ob_refcnt630, align 8, !dbg !5834, !tbaa !1927
  %dec631 = add i64 %417, -1, !dbg !5834
  store i64 %dec631, i64* %ob_refcnt630, align 8, !dbg !5834, !tbaa !1927
  %cmp632 = icmp ne i64 %dec631, 0, !dbg !5835
  br i1 %cmp632, label %if.then.634, label %if.else.635, !dbg !5836

if.then.634:                                      ; preds = %do.body.627
  br label %if.end.638, !dbg !5837

if.else.635:                                      ; preds = %do.body.627
  %418 = load %struct._object*, %struct._object** %_py_decref_tmp629, align 8, !dbg !5839, !tbaa !1876
  %ob_type636 = getelementptr inbounds %struct._object, %struct._object* %418, i32 0, i32 1, !dbg !5841
  %419 = load %struct._typeobject*, %struct._typeobject** %ob_type636, align 8, !dbg !5841, !tbaa !2195
  %tp_dealloc637 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %419, i32 0, i32 4, !dbg !5842
  %420 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc637, align 8, !dbg !5842, !tbaa !2197
  %421 = load %struct._object*, %struct._object** %_py_decref_tmp629, align 8, !dbg !5843, !tbaa !1876
  call void %420(%struct._object* %421), !dbg !5844
  br label %if.end.638

if.end.638:                                       ; preds = %if.else.635, %if.then.634
  %422 = bitcast %struct._object** %_py_decref_tmp629 to i8*, !dbg !5845
  call void @llvm.lifetime.end(i64 8, i8* %422) #2, !dbg !5845
  br label %do.cond.639, !dbg !5847

do.cond.639:                                      ; preds = %if.end.638
  br label %do.end.640, !dbg !5848

do.end.640:                                       ; preds = %do.cond.639
  br label %if.end.641, !dbg !5850

if.end.641:                                       ; preds = %do.end.640, %do.body.619
  %423 = bitcast %struct._object** %_py_tmp621 to i8*, !dbg !5852
  call void @llvm.lifetime.end(i64 8, i8* %423) #2, !dbg !5852
  br label %do.cond.642, !dbg !5855

do.cond.642:                                      ; preds = %if.end.641
  br label %do.end.643, !dbg !5856

do.end.643:                                       ; preds = %do.cond.642
  %424 = load %struct._object*, %struct._object** %incrementalDecoder, align 8, !dbg !5858, !tbaa !1876
  %425 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5859, !tbaa !1876
  %decoder644 = getelementptr inbounds %struct.textio, %struct.textio* %425, i32 0, i32 7, !dbg !5860
  store %struct._object* %424, %struct._object** %decoder644, align 8, !dbg !5861, !tbaa !4206
  store i32 0, i32* %cleanup.dest.slot, !dbg !5862
  br label %cleanup.645, !dbg !5862

cleanup.645:                                      ; preds = %if.then.617, %do.end.643
  %426 = bitcast %struct._object** %incrementalDecoder to i8*, !dbg !5863
  call void @llvm.lifetime.end(i64 8, i8* %426) #2, !dbg !5863
  %cleanup.dest.646 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.646, label %cleanup.912 [
    i32 0, label %cleanup.cont.647
    i32 42, label %error
  ]

cleanup.cont.647:                                 ; preds = %cleanup.645
  br label %if.end.648, !dbg !5865

if.end.648:                                       ; preds = %cleanup.cont.647, %if.end.606
  br label %if.end.649, !dbg !5866

if.end.649:                                       ; preds = %if.end.648, %if.end.596
  %427 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !5867, !tbaa !1876
  %call650 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %427, %struct._Py_Identifier* @PyId_writable, i8* null), !dbg !5868
  store %struct._object* %call650, %struct._object** %res, align 8, !dbg !5869, !tbaa !1876
  %428 = load %struct._object*, %struct._object** %res, align 8, !dbg !5870, !tbaa !1876
  %cmp651 = icmp eq %struct._object* %428, null, !dbg !5872
  br i1 %cmp651, label %if.then.653, label %if.end.654, !dbg !5873

if.then.653:                                      ; preds = %if.end.649
  br label %error, !dbg !5874

if.end.654:                                       ; preds = %if.end.649
  %429 = load %struct._object*, %struct._object** %res, align 8, !dbg !5875, !tbaa !1876
  %call655 = call i32 @PyObject_IsTrue(%struct._object* %429), !dbg !5876
  store i32 %call655, i32* %r, align 4, !dbg !5877, !tbaa !1883
  br label %do.body.656, !dbg !5878

do.body.656:                                      ; preds = %if.end.654
  %430 = bitcast %struct._object** %_py_decref_tmp658 to i8*, !dbg !5879
  call void @llvm.lifetime.start(i64 8, i8* %430) #2, !dbg !5879
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp658, metadata !1693, metadata !1880), !dbg !5881
  %431 = load %struct._object*, %struct._object** %res, align 8, !dbg !5882, !tbaa !1876
  store %struct._object* %431, %struct._object** %_py_decref_tmp658, align 8, !dbg !5881, !tbaa !1876
  %432 = load %struct._object*, %struct._object** %_py_decref_tmp658, align 8, !dbg !5883, !tbaa !1876
  %ob_refcnt659 = getelementptr inbounds %struct._object, %struct._object* %432, i32 0, i32 0, !dbg !5885
  %433 = load i64, i64* %ob_refcnt659, align 8, !dbg !5886, !tbaa !1927
  %dec660 = add i64 %433, -1, !dbg !5886
  store i64 %dec660, i64* %ob_refcnt659, align 8, !dbg !5886, !tbaa !1927
  %cmp661 = icmp ne i64 %dec660, 0, !dbg !5887
  br i1 %cmp661, label %if.then.663, label %if.else.664, !dbg !5888

if.then.663:                                      ; preds = %do.body.656
  br label %if.end.667, !dbg !5889

if.else.664:                                      ; preds = %do.body.656
  %434 = load %struct._object*, %struct._object** %_py_decref_tmp658, align 8, !dbg !5891, !tbaa !1876
  %ob_type665 = getelementptr inbounds %struct._object, %struct._object* %434, i32 0, i32 1, !dbg !5893
  %435 = load %struct._typeobject*, %struct._typeobject** %ob_type665, align 8, !dbg !5893, !tbaa !2195
  %tp_dealloc666 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %435, i32 0, i32 4, !dbg !5894
  %436 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc666, align 8, !dbg !5894, !tbaa !2197
  %437 = load %struct._object*, %struct._object** %_py_decref_tmp658, align 8, !dbg !5895, !tbaa !1876
  call void %436(%struct._object* %437), !dbg !5896
  br label %if.end.667

if.end.667:                                       ; preds = %if.else.664, %if.then.663
  %438 = bitcast %struct._object** %_py_decref_tmp658 to i8*, !dbg !5897
  call void @llvm.lifetime.end(i64 8, i8* %438) #2, !dbg !5897
  br label %do.cond.668, !dbg !5898

do.cond.668:                                      ; preds = %if.end.667
  br label %do.end.669, !dbg !5899

do.end.669:                                       ; preds = %do.cond.668
  %439 = load i32, i32* %r, align 4, !dbg !5901, !tbaa !1883
  %cmp670 = icmp eq i32 %439, -1, !dbg !5903
  br i1 %cmp670, label %if.then.672, label %if.end.673, !dbg !5904

if.then.672:                                      ; preds = %do.end.669
  br label %error, !dbg !5905

if.end.673:                                       ; preds = %do.end.669
  %440 = load i32, i32* %r, align 4, !dbg !5906, !tbaa !1883
  %cmp674 = icmp eq i32 %440, 1, !dbg !5907
  br i1 %cmp674, label %if.then.676, label %if.end.734, !dbg !5908

if.then.676:                                      ; preds = %if.end.673
  %441 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5909, !tbaa !1876
  %442 = load i8*, i8** %errors, align 8, !dbg !5910, !tbaa !1876
  %call677 = call %struct._object* @_PyCodecInfo_GetIncrementalEncoder(%struct._object* %441, i8* %442), !dbg !5911
  %443 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5912, !tbaa !1876
  %encoder678 = getelementptr inbounds %struct.textio, %struct.textio* %443, i32 0, i32 6, !dbg !5913
  store %struct._object* %call677, %struct._object** %encoder678, align 8, !dbg !5914, !tbaa !4177
  %444 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5915, !tbaa !1876
  %encoder679 = getelementptr inbounds %struct.textio, %struct.textio* %444, i32 0, i32 6, !dbg !5917
  %445 = load %struct._object*, %struct._object** %encoder679, align 8, !dbg !5917, !tbaa !4177
  %cmp680 = icmp eq %struct._object* %445, null, !dbg !5918
  br i1 %cmp680, label %if.then.682, label %if.end.683, !dbg !5919

if.then.682:                                      ; preds = %if.then.676
  br label %error, !dbg !5920

if.end.683:                                       ; preds = %if.then.676
  %446 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5921, !tbaa !1876
  %call684 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %446, %struct._Py_Identifier* @PyId_name), !dbg !5922
  store %struct._object* %call684, %struct._object** %res, align 8, !dbg !5923, !tbaa !1876
  %447 = load %struct._object*, %struct._object** %res, align 8, !dbg !5924, !tbaa !1876
  %cmp685 = icmp eq %struct._object* %447, null, !dbg !5925
  br i1 %cmp685, label %if.then.687, label %if.else.693, !dbg !5926

if.then.687:                                      ; preds = %if.end.683
  %448 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !5927, !tbaa !1876
  %call688 = call i32 @PyErr_ExceptionMatches(%struct._object* %448), !dbg !5930
  %tobool689 = icmp ne i32 %call688, 0, !dbg !5930
  br i1 %tobool689, label %if.then.690, label %if.else.691, !dbg !5931

if.then.690:                                      ; preds = %if.then.687
  call void @PyErr_Clear(), !dbg !5932
  br label %if.end.692, !dbg !5932

if.else.691:                                      ; preds = %if.then.687
  br label %error, !dbg !5933

if.end.692:                                       ; preds = %if.then.690
  br label %if.end.711, !dbg !5934

if.else.693:                                      ; preds = %if.end.683
  %449 = load %struct._object*, %struct._object** %res, align 8, !dbg !5935, !tbaa !1876
  %ob_type694 = getelementptr inbounds %struct._object, %struct._object* %449, i32 0, i32 1, !dbg !5936
  %450 = load %struct._typeobject*, %struct._typeobject** %ob_type694, align 8, !dbg !5936, !tbaa !2195
  %tp_flags695 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %450, i32 0, i32 19, !dbg !5937
  %451 = load i64, i64* %tp_flags695, align 8, !dbg !5937, !tbaa !3077
  %and696 = and i64 %451, 268435456, !dbg !5938
  %cmp697 = icmp ne i64 %and696, 0, !dbg !5939
  br i1 %cmp697, label %if.then.699, label %if.end.710, !dbg !5940

if.then.699:                                      ; preds = %if.else.693
  %452 = bitcast %struct.encodefuncentry** %e to i8*, !dbg !5941
  call void @llvm.lifetime.start(i64 8, i8* %452) #2, !dbg !5941
  call void @llvm.dbg.declare(metadata %struct.encodefuncentry** %e, metadata !1695, metadata !1880), !dbg !5942
  store %struct.encodefuncentry* getelementptr inbounds ([10 x %struct.encodefuncentry], [10 x %struct.encodefuncentry]* @encodefuncs, i32 0, i32 0), %struct.encodefuncentry** %e, align 8, !dbg !5942, !tbaa !1876
  br label %while.cond, !dbg !5943

while.cond:                                       ; preds = %if.end.709, %if.then.699
  %453 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5944, !tbaa !1876
  %name = getelementptr inbounds %struct.encodefuncentry, %struct.encodefuncentry* %453, i32 0, i32 0, !dbg !5947
  %454 = load i8*, i8** %name, align 8, !dbg !5947, !tbaa !5948
  %cmp701 = icmp ne i8* %454, null, !dbg !5950
  br i1 %cmp701, label %while.body, label %while.end, !dbg !5943

while.body:                                       ; preds = %while.cond
  %455 = load %struct._object*, %struct._object** %res, align 8, !dbg !5951, !tbaa !1876
  %456 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5954, !tbaa !1876
  %name703 = getelementptr inbounds %struct.encodefuncentry, %struct.encodefuncentry* %456, i32 0, i32 0, !dbg !5955
  %457 = load i8*, i8** %name703, align 8, !dbg !5955, !tbaa !5948
  %call704 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %455, i8* %457), !dbg !5956
  %tobool705 = icmp ne i32 %call704, 0, !dbg !5956
  br i1 %tobool705, label %if.end.709, label %if.then.706, !dbg !5957

if.then.706:                                      ; preds = %while.body
  %458 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5958, !tbaa !1876
  %encodefunc707 = getelementptr inbounds %struct.encodefuncentry, %struct.encodefuncentry* %458, i32 0, i32 1, !dbg !5960
  %459 = load %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)** %encodefunc707, align 8, !dbg !5960, !tbaa !5961
  %460 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5962, !tbaa !1876
  %encodefunc708 = getelementptr inbounds %struct.textio, %struct.textio* %460, i32 0, i32 20, !dbg !5963
  store %struct._object* (%struct._object*, %struct._object*)* %459, %struct._object* (%struct._object*, %struct._object*)** %encodefunc708, align 8, !dbg !5964, !tbaa !5191
  br label %while.end, !dbg !5965

if.end.709:                                       ; preds = %while.body
  %461 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5966, !tbaa !1876
  %incdec.ptr = getelementptr %struct.encodefuncentry, %struct.encodefuncentry* %461, i32 1, !dbg !5966
  store %struct.encodefuncentry* %incdec.ptr, %struct.encodefuncentry** %e, align 8, !dbg !5966, !tbaa !1876
  br label %while.cond, !dbg !5943

while.end:                                        ; preds = %if.then.706, %while.cond
  %462 = bitcast %struct.encodefuncentry** %e to i8*, !dbg !5967
  call void @llvm.lifetime.end(i64 8, i8* %462) #2, !dbg !5967
  br label %if.end.710, !dbg !5968

if.end.710:                                       ; preds = %while.end, %if.else.693
  br label %if.end.711

if.end.711:                                       ; preds = %if.end.710, %if.end.692
  br label %do.body.712, !dbg !5969

do.body.712:                                      ; preds = %if.end.711
  %463 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5970
  call void @llvm.lifetime.start(i64 8, i8* %463) #2, !dbg !5970
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1707, metadata !1880), !dbg !5972
  %464 = load %struct._object*, %struct._object** %res, align 8, !dbg !5973, !tbaa !1876
  store %struct._object* %464, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5972, !tbaa !1876
  %465 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5974, !tbaa !1876
  %cmp714 = icmp ne %struct._object* %465, null, !dbg !5975
  br i1 %cmp714, label %if.then.716, label %if.end.731, !dbg !5976

if.then.716:                                      ; preds = %do.body.712
  br label %do.body.717, !dbg !5977

do.body.717:                                      ; preds = %if.then.716
  %466 = bitcast %struct._object** %_py_decref_tmp719 to i8*, !dbg !5979
  call void @llvm.lifetime.start(i64 8, i8* %466) #2, !dbg !5979
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp719, metadata !1709, metadata !1880), !dbg !5981
  %467 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5982, !tbaa !1876
  store %struct._object* %467, %struct._object** %_py_decref_tmp719, align 8, !dbg !5981, !tbaa !1876
  %468 = load %struct._object*, %struct._object** %_py_decref_tmp719, align 8, !dbg !5983, !tbaa !1876
  %ob_refcnt720 = getelementptr inbounds %struct._object, %struct._object* %468, i32 0, i32 0, !dbg !5985
  %469 = load i64, i64* %ob_refcnt720, align 8, !dbg !5986, !tbaa !1927
  %dec721 = add i64 %469, -1, !dbg !5986
  store i64 %dec721, i64* %ob_refcnt720, align 8, !dbg !5986, !tbaa !1927
  %cmp722 = icmp ne i64 %dec721, 0, !dbg !5987
  br i1 %cmp722, label %if.then.724, label %if.else.725, !dbg !5988

if.then.724:                                      ; preds = %do.body.717
  br label %if.end.728, !dbg !5989

if.else.725:                                      ; preds = %do.body.717
  %470 = load %struct._object*, %struct._object** %_py_decref_tmp719, align 8, !dbg !5991, !tbaa !1876
  %ob_type726 = getelementptr inbounds %struct._object, %struct._object* %470, i32 0, i32 1, !dbg !5993
  %471 = load %struct._typeobject*, %struct._typeobject** %ob_type726, align 8, !dbg !5993, !tbaa !2195
  %tp_dealloc727 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %471, i32 0, i32 4, !dbg !5994
  %472 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc727, align 8, !dbg !5994, !tbaa !2197
  %473 = load %struct._object*, %struct._object** %_py_decref_tmp719, align 8, !dbg !5995, !tbaa !1876
  call void %472(%struct._object* %473), !dbg !5996
  br label %if.end.728

if.end.728:                                       ; preds = %if.else.725, %if.then.724
  %474 = bitcast %struct._object** %_py_decref_tmp719 to i8*, !dbg !5997
  call void @llvm.lifetime.end(i64 8, i8* %474) #2, !dbg !5997
  br label %do.cond.729, !dbg !5999

do.cond.729:                                      ; preds = %if.end.728
  br label %do.end.730, !dbg !6000

do.end.730:                                       ; preds = %do.cond.729
  br label %if.end.731, !dbg !6002

if.end.731:                                       ; preds = %do.end.730, %do.body.712
  %475 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !6004
  call void @llvm.lifetime.end(i64 8, i8* %475) #2, !dbg !6004
  br label %do.cond.732, !dbg !6007

do.cond.732:                                      ; preds = %if.end.731
  br label %do.end.733, !dbg !6008

do.end.733:                                       ; preds = %do.cond.732
  br label %if.end.734, !dbg !6010

if.end.734:                                       ; preds = %do.end.733, %if.end.673
  br label %do.body.735, !dbg !6011

do.body.735:                                      ; preds = %if.end.734
  %476 = bitcast %struct._object** %_py_decref_tmp737 to i8*, !dbg !6012
  call void @llvm.lifetime.start(i64 8, i8* %476) #2, !dbg !6012
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp737, metadata !1712, metadata !1880), !dbg !6014
  %477 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !6015, !tbaa !1876
  store %struct._object* %477, %struct._object** %_py_decref_tmp737, align 8, !dbg !6014, !tbaa !1876
  %478 = load %struct._object*, %struct._object** %_py_decref_tmp737, align 8, !dbg !6016, !tbaa !1876
  %ob_refcnt738 = getelementptr inbounds %struct._object, %struct._object* %478, i32 0, i32 0, !dbg !6018
  %479 = load i64, i64* %ob_refcnt738, align 8, !dbg !6019, !tbaa !1927
  %dec739 = add i64 %479, -1, !dbg !6019
  store i64 %dec739, i64* %ob_refcnt738, align 8, !dbg !6019, !tbaa !1927
  %cmp740 = icmp ne i64 %dec739, 0, !dbg !6020
  br i1 %cmp740, label %if.then.742, label %if.else.743, !dbg !6021

if.then.742:                                      ; preds = %do.body.735
  br label %if.end.746, !dbg !6022

if.else.743:                                      ; preds = %do.body.735
  %480 = load %struct._object*, %struct._object** %_py_decref_tmp737, align 8, !dbg !6024, !tbaa !1876
  %ob_type744 = getelementptr inbounds %struct._object, %struct._object* %480, i32 0, i32 1, !dbg !6026
  %481 = load %struct._typeobject*, %struct._typeobject** %ob_type744, align 8, !dbg !6026, !tbaa !2195
  %tp_dealloc745 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %481, i32 0, i32 4, !dbg !6027
  %482 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc745, align 8, !dbg !6027, !tbaa !2197
  %483 = load %struct._object*, %struct._object** %_py_decref_tmp737, align 8, !dbg !6028, !tbaa !1876
  call void %482(%struct._object* %483), !dbg !6029
  br label %if.end.746

if.end.746:                                       ; preds = %if.else.743, %if.then.742
  %484 = bitcast %struct._object** %_py_decref_tmp737 to i8*, !dbg !6030
  call void @llvm.lifetime.end(i64 8, i8* %484) #2, !dbg !6030
  br label %do.cond.747, !dbg !6031

do.cond.747:                                      ; preds = %if.end.746
  br label %do.end.748, !dbg !6032

do.end.748:                                       ; preds = %do.cond.747
  %485 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6034, !tbaa !1876
  %486 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6035, !tbaa !1876
  %buffer749 = getelementptr inbounds %struct.textio, %struct.textio* %486, i32 0, i32 4, !dbg !6036
  store %struct._object* %485, %struct._object** %buffer749, align 8, !dbg !6037, !tbaa !4120
  %487 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6038, !tbaa !1876
  %ob_refcnt750 = getelementptr inbounds %struct._object, %struct._object* %487, i32 0, i32 0, !dbg !6039
  %488 = load i64, i64* %ob_refcnt750, align 8, !dbg !6040, !tbaa !1927
  %inc = add i64 %488, 1, !dbg !6040
  store i64 %inc, i64* %ob_refcnt750, align 8, !dbg !6040, !tbaa !1927
  %489 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6041, !tbaa !1876
  %ob_type751 = getelementptr inbounds %struct._object, %struct._object* %489, i32 0, i32 1, !dbg !6042
  %490 = load %struct._typeobject*, %struct._typeobject** %ob_type751, align 8, !dbg !6042, !tbaa !2195
  %cmp752 = icmp eq %struct._typeobject* %490, @PyBufferedReader_Type, !dbg !6043
  br i1 %cmp752, label %if.then.762, label %lor.lhs.false.754, !dbg !6044

lor.lhs.false.754:                                ; preds = %do.end.748
  %491 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6045, !tbaa !1876
  %ob_type755 = getelementptr inbounds %struct._object, %struct._object* %491, i32 0, i32 1, !dbg !6046
  %492 = load %struct._typeobject*, %struct._typeobject** %ob_type755, align 8, !dbg !6046, !tbaa !2195
  %cmp756 = icmp eq %struct._typeobject* %492, @PyBufferedWriter_Type, !dbg !6047
  br i1 %cmp756, label %if.then.762, label %lor.lhs.false.758, !dbg !6048

lor.lhs.false.758:                                ; preds = %lor.lhs.false.754
  %493 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6049, !tbaa !1876
  %ob_type759 = getelementptr inbounds %struct._object, %struct._object* %493, i32 0, i32 1, !dbg !6050
  %494 = load %struct._typeobject*, %struct._typeobject** %ob_type759, align 8, !dbg !6050, !tbaa !2195
  %cmp760 = icmp eq %struct._typeobject* %494, @PyBufferedRandom_Type, !dbg !6051
  br i1 %cmp760, label %if.then.762, label %if.end.795, !dbg !6052

if.then.762:                                      ; preds = %lor.lhs.false.758, %lor.lhs.false.754, %do.end.748
  %495 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6053, !tbaa !1876
  %call763 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %495, %struct._Py_Identifier* @PyId_raw), !dbg !6054
  store %struct._object* %call763, %struct._object** %raw, align 8, !dbg !6055, !tbaa !1876
  %496 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6056, !tbaa !1876
  %cmp764 = icmp eq %struct._object* %496, null, !dbg !6057
  br i1 %cmp764, label %if.then.766, label %if.else.772, !dbg !6058

if.then.766:                                      ; preds = %if.then.762
  %497 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !6059, !tbaa !1876
  %call767 = call i32 @PyErr_ExceptionMatches(%struct._object* %497), !dbg !6062
  %tobool768 = icmp ne i32 %call767, 0, !dbg !6062
  br i1 %tobool768, label %if.then.769, label %if.else.770, !dbg !6063

if.then.769:                                      ; preds = %if.then.766
  call void @PyErr_Clear(), !dbg !6064
  br label %if.end.771, !dbg !6064

if.else.770:                                      ; preds = %if.then.766
  br label %error, !dbg !6065

if.end.771:                                       ; preds = %if.then.769
  br label %if.end.794, !dbg !6066

if.else.772:                                      ; preds = %if.then.762
  %498 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6067, !tbaa !1876
  %ob_type773 = getelementptr inbounds %struct._object, %struct._object* %498, i32 0, i32 1, !dbg !6068
  %499 = load %struct._typeobject*, %struct._typeobject** %ob_type773, align 8, !dbg !6068, !tbaa !2195
  %cmp774 = icmp eq %struct._typeobject* %499, @PyFileIO_Type, !dbg !6069
  br i1 %cmp774, label %if.then.776, label %if.else.778, !dbg !6070

if.then.776:                                      ; preds = %if.else.772
  %500 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6071, !tbaa !1876
  %501 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6072, !tbaa !1876
  %raw777 = getelementptr inbounds %struct.textio, %struct.textio* %501, i32 0, i32 28, !dbg !6073
  store %struct._object* %500, %struct._object** %raw777, align 8, !dbg !6074, !tbaa !4380
  br label %if.end.793, !dbg !6072

if.else.778:                                      ; preds = %if.else.772
  br label %do.body.779, !dbg !6075

do.body.779:                                      ; preds = %if.else.778
  %502 = bitcast %struct._object** %_py_decref_tmp781 to i8*, !dbg !6076
  call void @llvm.lifetime.start(i64 8, i8* %502) #2, !dbg !6076
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp781, metadata !1714, metadata !1880), !dbg !6078
  %503 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6079, !tbaa !1876
  store %struct._object* %503, %struct._object** %_py_decref_tmp781, align 8, !dbg !6078, !tbaa !1876
  %504 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8, !dbg !6080, !tbaa !1876
  %ob_refcnt782 = getelementptr inbounds %struct._object, %struct._object* %504, i32 0, i32 0, !dbg !6082
  %505 = load i64, i64* %ob_refcnt782, align 8, !dbg !6083, !tbaa !1927
  %dec783 = add i64 %505, -1, !dbg !6083
  store i64 %dec783, i64* %ob_refcnt782, align 8, !dbg !6083, !tbaa !1927
  %cmp784 = icmp ne i64 %dec783, 0, !dbg !6084
  br i1 %cmp784, label %if.then.786, label %if.else.787, !dbg !6085

if.then.786:                                      ; preds = %do.body.779
  br label %if.end.790, !dbg !6086

if.else.787:                                      ; preds = %do.body.779
  %506 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8, !dbg !6088, !tbaa !1876
  %ob_type788 = getelementptr inbounds %struct._object, %struct._object* %506, i32 0, i32 1, !dbg !6090
  %507 = load %struct._typeobject*, %struct._typeobject** %ob_type788, align 8, !dbg !6090, !tbaa !2195
  %tp_dealloc789 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %507, i32 0, i32 4, !dbg !6091
  %508 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc789, align 8, !dbg !6091, !tbaa !2197
  %509 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8, !dbg !6092, !tbaa !1876
  call void %508(%struct._object* %509), !dbg !6093
  br label %if.end.790

if.end.790:                                       ; preds = %if.else.787, %if.then.786
  %510 = bitcast %struct._object** %_py_decref_tmp781 to i8*, !dbg !6094
  call void @llvm.lifetime.end(i64 8, i8* %510) #2, !dbg !6094
  br label %do.cond.791, !dbg !6096

do.cond.791:                                      ; preds = %if.end.790
  br label %do.end.792, !dbg !6097

do.end.792:                                       ; preds = %do.cond.791
  br label %if.end.793

if.end.793:                                       ; preds = %do.end.792, %if.then.776
  br label %if.end.794

if.end.794:                                       ; preds = %if.end.793, %if.end.771
  br label %if.end.795, !dbg !6099

if.end.795:                                       ; preds = %if.end.794, %lor.lhs.false.758
  %511 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6100, !tbaa !1876
  %call796 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %511, %struct._Py_Identifier* @PyId_seekable, i8* null), !dbg !6101
  store %struct._object* %call796, %struct._object** %res, align 8, !dbg !6102, !tbaa !1876
  %512 = load %struct._object*, %struct._object** %res, align 8, !dbg !6103, !tbaa !1876
  %cmp797 = icmp eq %struct._object* %512, null, !dbg !6105
  br i1 %cmp797, label %if.then.799, label %if.end.800, !dbg !6106

if.then.799:                                      ; preds = %if.end.795
  br label %error, !dbg !6107

if.end.800:                                       ; preds = %if.end.795
  %513 = load %struct._object*, %struct._object** %res, align 8, !dbg !6108, !tbaa !1876
  %call801 = call i32 @PyObject_IsTrue(%struct._object* %513), !dbg !6109
  store i32 %call801, i32* %r, align 4, !dbg !6110, !tbaa !1883
  br label %do.body.802, !dbg !6111

do.body.802:                                      ; preds = %if.end.800
  %514 = bitcast %struct._object** %_py_decref_tmp804 to i8*, !dbg !6112
  call void @llvm.lifetime.start(i64 8, i8* %514) #2, !dbg !6112
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp804, metadata !1720, metadata !1880), !dbg !6114
  %515 = load %struct._object*, %struct._object** %res, align 8, !dbg !6115, !tbaa !1876
  store %struct._object* %515, %struct._object** %_py_decref_tmp804, align 8, !dbg !6114, !tbaa !1876
  %516 = load %struct._object*, %struct._object** %_py_decref_tmp804, align 8, !dbg !6116, !tbaa !1876
  %ob_refcnt805 = getelementptr inbounds %struct._object, %struct._object* %516, i32 0, i32 0, !dbg !6118
  %517 = load i64, i64* %ob_refcnt805, align 8, !dbg !6119, !tbaa !1927
  %dec806 = add i64 %517, -1, !dbg !6119
  store i64 %dec806, i64* %ob_refcnt805, align 8, !dbg !6119, !tbaa !1927
  %cmp807 = icmp ne i64 %dec806, 0, !dbg !6120
  br i1 %cmp807, label %if.then.809, label %if.else.810, !dbg !6121

if.then.809:                                      ; preds = %do.body.802
  br label %if.end.813, !dbg !6122

if.else.810:                                      ; preds = %do.body.802
  %518 = load %struct._object*, %struct._object** %_py_decref_tmp804, align 8, !dbg !6124, !tbaa !1876
  %ob_type811 = getelementptr inbounds %struct._object, %struct._object* %518, i32 0, i32 1, !dbg !6126
  %519 = load %struct._typeobject*, %struct._typeobject** %ob_type811, align 8, !dbg !6126, !tbaa !2195
  %tp_dealloc812 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %519, i32 0, i32 4, !dbg !6127
  %520 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc812, align 8, !dbg !6127, !tbaa !2197
  %521 = load %struct._object*, %struct._object** %_py_decref_tmp804, align 8, !dbg !6128, !tbaa !1876
  call void %520(%struct._object* %521), !dbg !6129
  br label %if.end.813

if.end.813:                                       ; preds = %if.else.810, %if.then.809
  %522 = bitcast %struct._object** %_py_decref_tmp804 to i8*, !dbg !6130
  call void @llvm.lifetime.end(i64 8, i8* %522) #2, !dbg !6130
  br label %do.cond.814, !dbg !6131

do.cond.814:                                      ; preds = %if.end.813
  br label %do.end.815, !dbg !6132

do.end.815:                                       ; preds = %do.cond.814
  %523 = load i32, i32* %r, align 4, !dbg !6134, !tbaa !1883
  %cmp816 = icmp slt i32 %523, 0, !dbg !6136
  br i1 %cmp816, label %if.then.818, label %if.end.819, !dbg !6137

if.then.818:                                      ; preds = %do.end.815
  br label %error, !dbg !6138

if.end.819:                                       ; preds = %do.end.815
  %524 = load i32, i32* %r, align 4, !dbg !6139, !tbaa !1883
  %conv820 = trunc i32 %524 to i8, !dbg !6139
  %525 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6140, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %525, i32 0, i32 18, !dbg !6141
  store i8 %conv820, i8* %telling, align 1, !dbg !6142, !tbaa !4517
  %526 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6143, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %526, i32 0, i32 16, !dbg !6144
  store i8 %conv820, i8* %seekable, align 1, !dbg !6145, !tbaa !4668
  %527 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6146, !tbaa !1876
  %call821 = call i32 @_PyObject_HasAttrId(%struct._object* %527, %struct._Py_Identifier* @PyId_read1), !dbg !6147
  %conv822 = trunc i32 %call821 to i8, !dbg !6147
  %528 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6148, !tbaa !1876
  %has_read1 = getelementptr inbounds %struct.textio, %struct.textio* %528, i32 0, i32 17, !dbg !6149
  store i8 %conv822, i8* %has_read1, align 1, !dbg !6150, !tbaa !6151
  %529 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6152, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %529, i32 0, i32 21, !dbg !6153
  store i8 0, i8* %encoding_start_of_stream, align 1, !dbg !6154, !tbaa !6155
  %530 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6156, !tbaa !1876
  %seekable823 = getelementptr inbounds %struct.textio, %struct.textio* %530, i32 0, i32 16, !dbg !6157
  %531 = load i8, i8* %seekable823, align 1, !dbg !6157, !tbaa !4668
  %conv824 = sext i8 %531 to i32, !dbg !6156
  %tobool825 = icmp ne i32 %conv824, 0, !dbg !6156
  br i1 %tobool825, label %land.lhs.true.826, label %if.end.887, !dbg !6158

land.lhs.true.826:                                ; preds = %if.end.819
  %532 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6159, !tbaa !1876
  %encoder827 = getelementptr inbounds %struct.textio, %struct.textio* %532, i32 0, i32 6, !dbg !6161
  %533 = load %struct._object*, %struct._object** %encoder827, align 8, !dbg !6161, !tbaa !4177
  %tobool828 = icmp ne %struct._object* %533, null, !dbg !6162
  br i1 %tobool828, label %if.then.829, label %if.end.887, !dbg !6163

if.then.829:                                      ; preds = %land.lhs.true.826
  %534 = bitcast %struct._object** %cookieObj to i8*, !dbg !6164
  call void @llvm.lifetime.start(i64 8, i8* %534) #2, !dbg !6164
  call void @llvm.dbg.declare(metadata %struct._object** %cookieObj, metadata !1722, metadata !1880), !dbg !6165
  %535 = bitcast i32* %cmp832 to i8*, !dbg !6166
  call void @llvm.lifetime.start(i64 4, i8* %535) #2, !dbg !6166
  call void @llvm.dbg.declare(metadata i32* %cmp832, metadata !1725, metadata !1880), !dbg !6167
  %536 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6168, !tbaa !1876
  %encoding_start_of_stream833 = getelementptr inbounds %struct.textio, %struct.textio* %536, i32 0, i32 21, !dbg !6169
  store i8 1, i8* %encoding_start_of_stream833, align 1, !dbg !6170, !tbaa !6155
  %537 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6171, !tbaa !1876
  %538 = load %struct._object*, %struct._object** @_PyIO_str_tell, align 8, !dbg !6172, !tbaa !1876
  %call834 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %537, %struct._object* %538, i8* null), !dbg !6173
  store %struct._object* %call834, %struct._object** %cookieObj, align 8, !dbg !6174, !tbaa !1876
  %539 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !6175, !tbaa !1876
  %cmp835 = icmp eq %struct._object* %539, null, !dbg !6177
  br i1 %cmp835, label %if.then.837, label %if.end.838, !dbg !6178

if.then.837:                                      ; preds = %if.then.829
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.883, !dbg !6179

if.end.838:                                       ; preds = %if.then.829
  %540 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !6180, !tbaa !1876
  %541 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !6181, !tbaa !1876
  %call839 = call i32 @PyObject_RichCompareBool(%struct._object* %540, %struct._object* %541, i32 2), !dbg !6182
  store i32 %call839, i32* %cmp832, align 4, !dbg !6183, !tbaa !1883
  br label %do.body.840, !dbg !6184

do.body.840:                                      ; preds = %if.end.838
  %542 = bitcast %struct._object** %_py_decref_tmp842 to i8*, !dbg !6185
  call void @llvm.lifetime.start(i64 8, i8* %542) #2, !dbg !6185
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp842, metadata !1726, metadata !1880), !dbg !6187
  %543 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !6188, !tbaa !1876
  store %struct._object* %543, %struct._object** %_py_decref_tmp842, align 8, !dbg !6187, !tbaa !1876
  %544 = load %struct._object*, %struct._object** %_py_decref_tmp842, align 8, !dbg !6189, !tbaa !1876
  %ob_refcnt843 = getelementptr inbounds %struct._object, %struct._object* %544, i32 0, i32 0, !dbg !6191
  %545 = load i64, i64* %ob_refcnt843, align 8, !dbg !6192, !tbaa !1927
  %dec844 = add i64 %545, -1, !dbg !6192
  store i64 %dec844, i64* %ob_refcnt843, align 8, !dbg !6192, !tbaa !1927
  %cmp845 = icmp ne i64 %dec844, 0, !dbg !6193
  br i1 %cmp845, label %if.then.847, label %if.else.848, !dbg !6194

if.then.847:                                      ; preds = %do.body.840
  br label %if.end.851, !dbg !6195

if.else.848:                                      ; preds = %do.body.840
  %546 = load %struct._object*, %struct._object** %_py_decref_tmp842, align 8, !dbg !6197, !tbaa !1876
  %ob_type849 = getelementptr inbounds %struct._object, %struct._object* %546, i32 0, i32 1, !dbg !6199
  %547 = load %struct._typeobject*, %struct._typeobject** %ob_type849, align 8, !dbg !6199, !tbaa !2195
  %tp_dealloc850 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %547, i32 0, i32 4, !dbg !6200
  %548 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc850, align 8, !dbg !6200, !tbaa !2197
  %549 = load %struct._object*, %struct._object** %_py_decref_tmp842, align 8, !dbg !6201, !tbaa !1876
  call void %548(%struct._object* %549), !dbg !6202
  br label %if.end.851

if.end.851:                                       ; preds = %if.else.848, %if.then.847
  %550 = bitcast %struct._object** %_py_decref_tmp842 to i8*, !dbg !6203
  call void @llvm.lifetime.end(i64 8, i8* %550) #2, !dbg !6203
  br label %do.cond.852, !dbg !6205

do.cond.852:                                      ; preds = %if.end.851
  br label %do.end.853, !dbg !6206

do.end.853:                                       ; preds = %do.cond.852
  %551 = load i32, i32* %cmp832, align 4, !dbg !6208, !tbaa !1883
  %cmp854 = icmp slt i32 %551, 0, !dbg !6210
  br i1 %cmp854, label %if.then.856, label %if.end.857, !dbg !6211

if.then.856:                                      ; preds = %do.end.853
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.883, !dbg !6212

if.end.857:                                       ; preds = %do.end.853
  %552 = load i32, i32* %cmp832, align 4, !dbg !6214, !tbaa !1883
  %cmp858 = icmp eq i32 %552, 0, !dbg !6215
  br i1 %cmp858, label %if.then.860, label %if.end.882, !dbg !6216

if.then.860:                                      ; preds = %if.end.857
  %553 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6217, !tbaa !1876
  %encoding_start_of_stream861 = getelementptr inbounds %struct.textio, %struct.textio* %553, i32 0, i32 21, !dbg !6218
  store i8 0, i8* %encoding_start_of_stream861, align 1, !dbg !6219, !tbaa !6155
  %554 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6220, !tbaa !1876
  %encoder862 = getelementptr inbounds %struct.textio, %struct.textio* %554, i32 0, i32 6, !dbg !6221
  %555 = load %struct._object*, %struct._object** %encoder862, align 8, !dbg !6221, !tbaa !4177
  %556 = load %struct._object*, %struct._object** @_PyIO_str_setstate, align 8, !dbg !6222, !tbaa !1876
  %557 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !6223, !tbaa !1876
  %call863 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %555, %struct._object* %556, %struct._object* %557, i8* null), !dbg !6224
  store %struct._object* %call863, %struct._object** %res, align 8, !dbg !6225, !tbaa !1876
  %558 = load %struct._object*, %struct._object** %res, align 8, !dbg !6226, !tbaa !1876
  %cmp864 = icmp eq %struct._object* %558, null, !dbg !6228
  br i1 %cmp864, label %if.then.866, label %if.end.867, !dbg !6229

if.then.866:                                      ; preds = %if.then.860
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.883, !dbg !6230

if.end.867:                                       ; preds = %if.then.860
  br label %do.body.868, !dbg !6231

do.body.868:                                      ; preds = %if.end.867
  %559 = bitcast %struct._object** %_py_decref_tmp870 to i8*, !dbg !6232
  call void @llvm.lifetime.start(i64 8, i8* %559) #2, !dbg !6232
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp870, metadata !1728, metadata !1880), !dbg !6234
  %560 = load %struct._object*, %struct._object** %res, align 8, !dbg !6235, !tbaa !1876
  store %struct._object* %560, %struct._object** %_py_decref_tmp870, align 8, !dbg !6234, !tbaa !1876
  %561 = load %struct._object*, %struct._object** %_py_decref_tmp870, align 8, !dbg !6236, !tbaa !1876
  %ob_refcnt871 = getelementptr inbounds %struct._object, %struct._object* %561, i32 0, i32 0, !dbg !6238
  %562 = load i64, i64* %ob_refcnt871, align 8, !dbg !6239, !tbaa !1927
  %dec872 = add i64 %562, -1, !dbg !6239
  store i64 %dec872, i64* %ob_refcnt871, align 8, !dbg !6239, !tbaa !1927
  %cmp873 = icmp ne i64 %dec872, 0, !dbg !6240
  br i1 %cmp873, label %if.then.875, label %if.else.876, !dbg !6241

if.then.875:                                      ; preds = %do.body.868
  br label %if.end.879, !dbg !6242

if.else.876:                                      ; preds = %do.body.868
  %563 = load %struct._object*, %struct._object** %_py_decref_tmp870, align 8, !dbg !6244, !tbaa !1876
  %ob_type877 = getelementptr inbounds %struct._object, %struct._object* %563, i32 0, i32 1, !dbg !6246
  %564 = load %struct._typeobject*, %struct._typeobject** %ob_type877, align 8, !dbg !6246, !tbaa !2195
  %tp_dealloc878 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %564, i32 0, i32 4, !dbg !6247
  %565 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc878, align 8, !dbg !6247, !tbaa !2197
  %566 = load %struct._object*, %struct._object** %_py_decref_tmp870, align 8, !dbg !6248, !tbaa !1876
  call void %565(%struct._object* %566), !dbg !6249
  br label %if.end.879

if.end.879:                                       ; preds = %if.else.876, %if.then.875
  %567 = bitcast %struct._object** %_py_decref_tmp870 to i8*, !dbg !6250
  call void @llvm.lifetime.end(i64 8, i8* %567) #2, !dbg !6250
  br label %do.cond.880, !dbg !6252

do.cond.880:                                      ; preds = %if.end.879
  br label %do.end.881, !dbg !6253

do.end.881:                                       ; preds = %do.cond.880
  br label %if.end.882, !dbg !6255

if.end.882:                                       ; preds = %do.end.881, %if.end.857
  store i32 0, i32* %cleanup.dest.slot, !dbg !6256
  br label %cleanup.883, !dbg !6256

cleanup.883:                                      ; preds = %if.then.866, %if.then.856, %if.then.837, %if.end.882
  %568 = bitcast i32* %cmp832 to i8*, !dbg !6257
  call void @llvm.lifetime.end(i64 4, i8* %568) #2, !dbg !6257
  %569 = bitcast %struct._object** %cookieObj to i8*, !dbg !6257
  call void @llvm.lifetime.end(i64 8, i8* %569) #2, !dbg !6257
  %cleanup.dest.885 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.885, label %cleanup.912 [
    i32 0, label %cleanup.cont.886
    i32 42, label %error
  ]

cleanup.cont.886:                                 ; preds = %cleanup.883
  br label %if.end.887, !dbg !6258

if.end.887:                                       ; preds = %cleanup.cont.886, %land.lhs.true.826, %if.end.819
  %570 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6259, !tbaa !1876
  %ok888 = getelementptr inbounds %struct.textio, %struct.textio* %570, i32 0, i32 1, !dbg !6260
  store i32 1, i32* %ok888, align 4, !dbg !6261, !tbaa !3900
  store i32 0, i32* %retval, !dbg !6262
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !6262

error:                                            ; preds = %cleanup.883, %cleanup.645, %cleanup.409, %cleanup.334, %if.then.818, %if.then.799, %if.else.770, %if.else.691, %if.then.682, %if.then.672, %if.then.653, %if.then.605, %if.then.595, %if.then.576, %if.then.521, %if.then.497, %if.then.474, %do.end.463, %if.then.432, %if.then.421
  br label %do.body.889, !dbg !6263

do.body.889:                                      ; preds = %error
  %571 = bitcast %struct._object** %_py_xdecref_tmp891 to i8*, !dbg !6264
  call void @llvm.lifetime.start(i64 8, i8* %571) #2, !dbg !6264
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp891, metadata !1732, metadata !1880), !dbg !6266
  %572 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !6267, !tbaa !1876
  store %struct._object* %572, %struct._object** %_py_xdecref_tmp891, align 8, !dbg !6266, !tbaa !1876
  %573 = load %struct._object*, %struct._object** %_py_xdecref_tmp891, align 8, !dbg !6268, !tbaa !1876
  %cmp892 = icmp ne %struct._object* %573, null, !dbg !6269
  br i1 %cmp892, label %if.then.894, label %if.end.909, !dbg !6270

if.then.894:                                      ; preds = %do.body.889
  br label %do.body.895, !dbg !6271

do.body.895:                                      ; preds = %if.then.894
  %574 = bitcast %struct._object** %_py_decref_tmp897 to i8*, !dbg !6273
  call void @llvm.lifetime.start(i64 8, i8* %574) #2, !dbg !6273
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp897, metadata !1734, metadata !1880), !dbg !6275
  %575 = load %struct._object*, %struct._object** %_py_xdecref_tmp891, align 8, !dbg !6276, !tbaa !1876
  store %struct._object* %575, %struct._object** %_py_decref_tmp897, align 8, !dbg !6275, !tbaa !1876
  %576 = load %struct._object*, %struct._object** %_py_decref_tmp897, align 8, !dbg !6277, !tbaa !1876
  %ob_refcnt898 = getelementptr inbounds %struct._object, %struct._object* %576, i32 0, i32 0, !dbg !6279
  %577 = load i64, i64* %ob_refcnt898, align 8, !dbg !6280, !tbaa !1927
  %dec899 = add i64 %577, -1, !dbg !6280
  store i64 %dec899, i64* %ob_refcnt898, align 8, !dbg !6280, !tbaa !1927
  %cmp900 = icmp ne i64 %dec899, 0, !dbg !6281
  br i1 %cmp900, label %if.then.902, label %if.else.903, !dbg !6282

if.then.902:                                      ; preds = %do.body.895
  br label %if.end.906, !dbg !6283

if.else.903:                                      ; preds = %do.body.895
  %578 = load %struct._object*, %struct._object** %_py_decref_tmp897, align 8, !dbg !6285, !tbaa !1876
  %ob_type904 = getelementptr inbounds %struct._object, %struct._object* %578, i32 0, i32 1, !dbg !6287
  %579 = load %struct._typeobject*, %struct._typeobject** %ob_type904, align 8, !dbg !6287, !tbaa !2195
  %tp_dealloc905 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %579, i32 0, i32 4, !dbg !6288
  %580 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc905, align 8, !dbg !6288, !tbaa !2197
  %581 = load %struct._object*, %struct._object** %_py_decref_tmp897, align 8, !dbg !6289, !tbaa !1876
  call void %580(%struct._object* %581), !dbg !6290
  br label %if.end.906

if.end.906:                                       ; preds = %if.else.903, %if.then.902
  %582 = bitcast %struct._object** %_py_decref_tmp897 to i8*, !dbg !6291
  call void @llvm.lifetime.end(i64 8, i8* %582) #2, !dbg !6291
  br label %do.cond.907, !dbg !6293

do.cond.907:                                      ; preds = %if.end.906
  br label %do.end.908, !dbg !6294

do.end.908:                                       ; preds = %do.cond.907
  br label %if.end.909, !dbg !6296

if.end.909:                                       ; preds = %do.end.908, %do.body.889
  %583 = bitcast %struct._object** %_py_xdecref_tmp891 to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %583) #2, !dbg !6298
  br label %do.cond.910, !dbg !6299

do.cond.910:                                      ; preds = %if.end.909
  br label %do.end.911, !dbg !6300

do.end.911:                                       ; preds = %do.cond.910
  store i32 -1, i32* %retval, !dbg !6302
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !6302

cleanup.912:                                      ; preds = %do.end.911, %if.end.887, %cleanup.883, %cleanup.645, %cleanup.409, %cleanup.334, %if.then.38, %if.then
  %584 = bitcast i32* %r to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 4, i8* %584) #2, !dbg !6303
  %585 = bitcast %struct._object** %res to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %585) #2, !dbg !6303
  %586 = bitcast %struct._PyIO_State** %state to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %586) #2, !dbg !6303
  %587 = bitcast i32* %write_through to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 4, i8* %587) #2, !dbg !6303
  %588 = bitcast i32* %line_buffering to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 4, i8* %588) #2, !dbg !6303
  %589 = bitcast i8** %newline to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %589) #2, !dbg !6303
  %590 = bitcast i8** %errors to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %590) #2, !dbg !6303
  %591 = bitcast i8** %encoding to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %591) #2, !dbg !6303
  %592 = bitcast %struct._object** %codec_info to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %592) #2, !dbg !6303
  %593 = bitcast %struct._object** %raw to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %593) #2, !dbg !6303
  %594 = bitcast %struct._object** %buffer to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 8, i8* %594) #2, !dbg !6303
  %595 = bitcast [7 x i8*]* %kwlist to i8*, !dbg !6303
  call void @llvm.lifetime.end(i64 56, i8* %595) #2, !dbg !6303
  %596 = load i32, i32* %retval, !dbg !6303
  ret i32 %596, !dbg !6303
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_detach(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !556, metadata !1880), !dbg !6304
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0)), !dbg !6305
  ret %struct._object* %call, !dbg !6306
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_read(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !573, metadata !1880), !dbg !6307
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !574, metadata !1880), !dbg !6308
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0)), !dbg !6309
  ret %struct._object* %call, !dbg !6310
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_readline(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !577, metadata !1880), !dbg !6311
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !578, metadata !1880), !dbg !6312
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0)), !dbg !6313
  ret %struct._object* %call, !dbg !6314
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_write(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !581, metadata !1880), !dbg !6315
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !582, metadata !1880), !dbg !6316
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0)), !dbg !6317
  ret %struct._object* %call, !dbg !6318
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_unsupported(i8* %message) #0 {
entry:
  %message.addr = alloca i8*, align 8
  %state = alloca %struct._PyIO_State*, align 8
  store i8* %message, i8** %message.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !561, metadata !1880), !dbg !6319
  %0 = bitcast %struct._PyIO_State** %state to i8*, !dbg !6320
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6320
  call void @llvm.dbg.declare(metadata %struct._PyIO_State** %state, metadata !562, metadata !1880), !dbg !6321
  %call = call %struct._PyIO_State* @_PyIO_get_module_state(), !dbg !6322
  store %struct._PyIO_State* %call, %struct._PyIO_State** %state, align 8, !dbg !6321, !tbaa !1876
  %1 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !6323, !tbaa !1876
  %cmp = icmp ne %struct._PyIO_State* %1, null, !dbg !6325
  br i1 %cmp, label %if.then, label %if.end, !dbg !6326

if.then:                                          ; preds = %entry
  %2 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !6327, !tbaa !1876
  %unsupported_operation = getelementptr inbounds %struct._PyIO_State, %struct._PyIO_State* %2, i32 0, i32 2, !dbg !6328
  %3 = load %struct._object*, %struct._object** %unsupported_operation, align 8, !dbg !6328, !tbaa !5221
  %4 = load i8*, i8** %message.addr, align 8, !dbg !6329, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %3, i8* %4), !dbg !6330
  br label %if.end, !dbg !6330

if.end:                                           ; preds = %if.then, %entry
  %5 = bitcast %struct._PyIO_State** %state to i8*, !dbg !6331
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6331
  ret %struct._object* null, !dbg !6332
}

declare %struct._PyIO_State* @_PyIO_get_module_state() #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_encoding_get(%struct._object* %self, i8* %context) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !585, metadata !1880), !dbg !6333
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !586, metadata !1880), !dbg !6334
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6335, !tbaa !1927
  %inc = add i64 %0, 1, !dbg !6335
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6335, !tbaa !1927
  ret %struct._object* @_Py_NoneStruct, !dbg !6336
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_newlines_get(%struct._object* %self, i8* %context) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !589, metadata !1880), !dbg !6337
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !590, metadata !1880), !dbg !6338
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6339, !tbaa !1927
  %inc = add i64 %0, 1, !dbg !6339
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6339, !tbaa !1927
  ret %struct._object* @_Py_NoneStruct, !dbg !6340
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_errors_get(%struct._object* %self, i8* %context) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !593, metadata !1880), !dbg !6341
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !594, metadata !1880), !dbg !6342
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6343, !tbaa !1927
  %inc = add i64 %0, 1, !dbg !6343
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6343, !tbaa !1927
  ret %struct._object* @_Py_NoneStruct, !dbg !6344
}

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare i32 @_PyUnicode_Ready(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_decode(%struct.nldecoder_object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [3 x i8*], align 16
  %input = alloca %struct._object*, align 8
  %final = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !627, metadata !1880), !dbg !6345
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !628, metadata !1880), !dbg !6346
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !629, metadata !1880), !dbg !6347
  %0 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !6348
  call void @llvm.lifetime.start(i64 24, i8* %0) #2, !dbg !6348
  call void @llvm.dbg.declare(metadata [3 x i8*]* %kwlist, metadata !630, metadata !1880), !dbg !6349
  %1 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !6349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @incrementalnewlinedecoder_decode.kwlist to i8*), i64 24, i32 16, i1 false), !dbg !6349
  %2 = bitcast %struct._object** %input to i8*, !dbg !6350
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6350
  call void @llvm.dbg.declare(metadata %struct._object** %input, metadata !634, metadata !1880), !dbg !6351
  %3 = bitcast i32* %final to i8*, !dbg !6352
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !6352
  call void @llvm.dbg.declare(metadata i32* %final, metadata !635, metadata !1880), !dbg !6353
  store i32 0, i32* %final, align 4, !dbg !6353, !tbaa !1883
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6354, !tbaa !1876
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6356, !tbaa !1876
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %kwlist, i32 0, i32 0, !dbg !6357
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8** %arraydecay, %struct._object** %input, i32* %final), !dbg !6358
  %tobool = icmp ne i32 %call, 0, !dbg !6358
  br i1 %tobool, label %if.end, label %if.then, !dbg !6359

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6360
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6360

if.end:                                           ; preds = %entry
  %6 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6361, !tbaa !1876
  %7 = bitcast %struct.nldecoder_object* %6 to %struct._object*, !dbg !6362
  %8 = load %struct._object*, %struct._object** %input, align 8, !dbg !6363, !tbaa !1876
  %9 = load i32, i32* %final, align 4, !dbg !6364, !tbaa !1883
  %call1 = call %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %7, %struct._object* %8, i32 %9), !dbg !6365
  store %struct._object* %call1, %struct._object** %retval, !dbg !6366
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6366

cleanup:                                          ; preds = %if.end, %if.then
  %10 = bitcast i32* %final to i8*, !dbg !6367
  call void @llvm.lifetime.end(i64 4, i8* %10) #2, !dbg !6367
  %11 = bitcast %struct._object** %input to i8*, !dbg !6367
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !6367
  %12 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !6367
  call void @llvm.lifetime.end(i64 24, i8* %12) #2, !dbg !6367
  %13 = load %struct._object*, %struct._object** %retval, !dbg !6367
  ret %struct._object* %13, !dbg !6367
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_getstate(%struct.nldecoder_object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct._object*, align 8
  %flag = alloca i64, align 8
  %state = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !640, metadata !1880), !dbg !6368
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !641, metadata !1880), !dbg !6369
  %0 = bitcast %struct._object** %buffer to i8*, !dbg !6370
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6370
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !642, metadata !1880), !dbg !6371
  %1 = bitcast i64* %flag to i8*, !dbg !6372
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6372
  call void @llvm.dbg.declare(metadata i64* %flag, metadata !643, metadata !1880), !dbg !6373
  %2 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6374, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %2, i32 0, i32 1, !dbg !6375
  %3 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6375, !tbaa !1897
  %cmp = icmp ne %struct._object* %3, @_Py_NoneStruct, !dbg !6376
  br i1 %cmp, label %if.then, label %if.else.23, !dbg !6377

if.then:                                          ; preds = %entry
  %4 = bitcast %struct._object** %state to i8*, !dbg !6378
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !6378
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !645, metadata !1880), !dbg !6379
  %5 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6380, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %5, i32 0, i32 1, !dbg !6381
  %6 = load %struct._object*, %struct._object** %decoder1, align 8, !dbg !6381, !tbaa !1897
  %7 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !6382, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %6, %struct._object* %7, i8* null), !dbg !6383
  store %struct._object* %call, %struct._object** %state, align 8, !dbg !6379, !tbaa !1876
  %8 = load %struct._object*, %struct._object** %state, align 8, !dbg !6384, !tbaa !1876
  %cmp2 = icmp eq %struct._object* %8, null, !dbg !6386
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !6387

if.then.3:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !6388
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6388

if.end:                                           ; preds = %if.then
  %9 = load %struct._object*, %struct._object** %state, align 8, !dbg !6389, !tbaa !1876
  %call4 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), %struct._object** %buffer, i64* %flag), !dbg !6390
  %tobool = icmp ne i32 %call4, 0, !dbg !6390
  br i1 %tobool, label %if.end.9, label %if.then.5, !dbg !6391

if.then.5:                                        ; preds = %if.end
  br label %do.body, !dbg !6392

do.body:                                          ; preds = %if.then.5
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6393
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !6393
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !648, metadata !1880), !dbg !6395
  %11 = load %struct._object*, %struct._object** %state, align 8, !dbg !6396, !tbaa !1876
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !6395, !tbaa !1876
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6397, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !6399
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6400, !tbaa !1927
  %dec = add i64 %13, -1, !dbg !6400
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6400, !tbaa !1927
  %cmp6 = icmp ne i64 %dec, 0, !dbg !6401
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !6402

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !6403

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6405, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6407
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6407, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !6408
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6408, !tbaa !2197
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6409, !tbaa !1876
  call void %16(%struct._object* %17), !dbg !6410
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6411
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !6411
  br label %do.cond, !dbg !6413

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !6414

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6416
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6416

if.end.9:                                         ; preds = %if.end
  %19 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6417, !tbaa !1876
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !6418
  %20 = load i64, i64* %ob_refcnt10, align 8, !dbg !6419, !tbaa !1927
  %inc = add i64 %20, 1, !dbg !6419
  store i64 %inc, i64* %ob_refcnt10, align 8, !dbg !6419, !tbaa !1927
  br label %do.body.11, !dbg !6420

do.body.11:                                       ; preds = %if.end.9
  %21 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !6421
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !6421
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !652, metadata !1880), !dbg !6423
  %22 = load %struct._object*, %struct._object** %state, align 8, !dbg !6424, !tbaa !1876
  store %struct._object* %22, %struct._object** %_py_decref_tmp12, align 8, !dbg !6423, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6425, !tbaa !1876
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !6427
  %24 = load i64, i64* %ob_refcnt13, align 8, !dbg !6428, !tbaa !1927
  %dec14 = add i64 %24, -1, !dbg !6428
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !6428, !tbaa !1927
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !6429
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !6430

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !6431

if.else.17:                                       ; preds = %do.body.11
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6433, !tbaa !1876
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !6435
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !6435, !tbaa !2195
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !6436
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !6436, !tbaa !2197
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6437, !tbaa !1876
  call void %27(%struct._object* %28), !dbg !6438
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %29 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !6439
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !6439
  br label %do.cond.21, !dbg !6441

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !6442

do.end.22:                                        ; preds = %do.cond.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !6444
  br label %cleanup, !dbg !6444

cleanup:                                          ; preds = %do.end.22, %do.end, %if.then.3
  %30 = bitcast %struct._object** %state to i8*, !dbg !6445
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !6445
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.30 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.25, !dbg !6447

if.else.23:                                       ; preds = %entry
  %call24 = call %struct._object* @PyBytes_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)), !dbg !6448
  store %struct._object* %call24, %struct._object** %buffer, align 8, !dbg !6450, !tbaa !1876
  store i64 0, i64* %flag, align 8, !dbg !6451, !tbaa !6452
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.23, %cleanup.cont
  %31 = load i64, i64* %flag, align 8, !dbg !6454, !tbaa !6452
  %shl = shl i64 %31, 1, !dbg !6454
  store i64 %shl, i64* %flag, align 8, !dbg !6454, !tbaa !6452
  %32 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6455, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %32, i32 0, i32 3, !dbg !6457
  %bf.load = load i8, i8* %pendingcr, align 8, !dbg !6457
  %bf.shl = shl i8 %bf.load, 7, !dbg !6457
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !6457
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !6457
  %tobool26 = icmp ne i32 %bf.cast, 0, !dbg !6455
  br i1 %tobool26, label %if.then.27, label %if.end.28, !dbg !6458

if.then.27:                                       ; preds = %if.end.25
  %33 = load i64, i64* %flag, align 8, !dbg !6459, !tbaa !6452
  %or = or i64 %33, 1, !dbg !6459
  store i64 %or, i64* %flag, align 8, !dbg !6459, !tbaa !6452
  br label %if.end.28, !dbg !6460

if.end.28:                                        ; preds = %if.then.27, %if.end.25
  %34 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6461, !tbaa !1876
  %35 = load i64, i64* %flag, align 8, !dbg !6462, !tbaa !6452
  %call29 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), %struct._object* %34, i64 %35), !dbg !6463
  store %struct._object* %call29, %struct._object** %retval, !dbg !6464
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.30, !dbg !6464

cleanup.30:                                       ; preds = %if.end.28, %cleanup
  %36 = bitcast i64* %flag to i8*, !dbg !6465
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !6465
  %37 = bitcast %struct._object** %buffer to i8*, !dbg !6465
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !6465
  %38 = load %struct._object*, %struct._object** %retval, !dbg !6465
  ret %struct._object* %38, !dbg !6465
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_setstate(%struct.nldecoder_object* %self, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %state.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct._object*, align 8
  %flag = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !656, metadata !1880), !dbg !6466
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !657, metadata !1880), !dbg !6467
  %0 = bitcast %struct._object** %buffer to i8*, !dbg !6468
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6468
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !658, metadata !1880), !dbg !6469
  %1 = bitcast i64* %flag to i8*, !dbg !6470
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6470
  call void @llvm.dbg.declare(metadata i64* %flag, metadata !659, metadata !1880), !dbg !6471
  %2 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !6472, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), %struct._object** %buffer, i64* %flag), !dbg !6474
  %tobool = icmp ne i32 %call, 0, !dbg !6474
  br i1 %tobool, label %if.end, label %if.then, !dbg !6475

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6476
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6476

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %flag, align 8, !dbg !6477, !tbaa !6452
  %conv = trunc i64 %3 to i32, !dbg !6478
  %and = and i32 %conv, 1, !dbg !6479
  %4 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6480, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %4, i32 0, i32 3, !dbg !6481
  %5 = trunc i32 %and to i8, !dbg !6482
  %bf.load = load i8, i8* %pendingcr, align 8, !dbg !6482
  %bf.value = and i8 %5, 1, !dbg !6482
  %bf.clear = and i8 %bf.load, -2, !dbg !6482
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !6482
  store i8 %bf.set, i8* %pendingcr, align 8, !dbg !6482
  %bf.result.shl = shl i8 %bf.value, 7, !dbg !6482
  %bf.result.ashr = ashr i8 %bf.result.shl, 7, !dbg !6482
  %bf.result.cast = sext i8 %bf.result.ashr to i32, !dbg !6482
  %6 = load i64, i64* %flag, align 8, !dbg !6483, !tbaa !6452
  %shr = lshr i64 %6, 1, !dbg !6483
  store i64 %shr, i64* %flag, align 8, !dbg !6483, !tbaa !6452
  %7 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6484, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %7, i32 0, i32 1, !dbg !6486
  %8 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6486, !tbaa !1897
  %cmp = icmp ne %struct._object* %8, @_Py_NoneStruct, !dbg !6487
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !6488

if.then.2:                                        ; preds = %if.end
  %9 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6489, !tbaa !1876
  %decoder3 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %9, i32 0, i32 1, !dbg !6490
  %10 = load %struct._object*, %struct._object** %decoder3, align 8, !dbg !6490, !tbaa !1897
  %11 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6491, !tbaa !1876
  %12 = load i64, i64* %flag, align 8, !dbg !6492, !tbaa !6452
  %call4 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %10, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), %struct._object* %11, i64 %12), !dbg !6493
  store %struct._object* %call4, %struct._object** %retval, !dbg !6494
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6494

if.else:                                          ; preds = %if.end
  %13 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6495, !tbaa !1927
  %inc = add i64 %13, 1, !dbg !6495
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6495, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6496
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6496

cleanup:                                          ; preds = %if.else, %if.then.2, %if.then
  %14 = bitcast i64* %flag to i8*, !dbg !6497
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6497
  %15 = bitcast %struct._object** %buffer to i8*, !dbg !6497
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6497
  %16 = load %struct._object*, %struct._object** %retval, !dbg !6497
  ret %struct._object* %16, !dbg !6497
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_reset(%struct.nldecoder_object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !662, metadata !1880), !dbg !6498
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !663, metadata !1880), !dbg !6499
  %0 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6500, !tbaa !1876
  %seennl = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %0, i32 0, i32 3, !dbg !6501
  %bf.load = load i8, i8* %seennl, align 8, !dbg !6502
  %bf.clear = and i8 %bf.load, -29, !dbg !6502
  store i8 %bf.clear, i8* %seennl, align 8, !dbg !6502
  %1 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6503, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %1, i32 0, i32 3, !dbg !6504
  %bf.load1 = load i8, i8* %pendingcr, align 8, !dbg !6505
  %bf.clear2 = and i8 %bf.load1, -2, !dbg !6505
  store i8 %bf.clear2, i8* %pendingcr, align 8, !dbg !6505
  %2 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6506, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %2, i32 0, i32 1, !dbg !6508
  %3 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6508, !tbaa !1897
  %cmp = icmp ne %struct._object* %3, @_Py_NoneStruct, !dbg !6509
  br i1 %cmp, label %if.then, label %if.else, !dbg !6510

if.then:                                          ; preds = %entry
  %4 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6511, !tbaa !1876
  %decoder3 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %4, i32 0, i32 1, !dbg !6512
  %5 = load %struct._object*, %struct._object** %decoder3, align 8, !dbg !6512, !tbaa !1897
  %6 = load %struct._object*, %struct._object** @_PyIO_str_reset, align 8, !dbg !6513, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %5, %struct._object* %6, i8* null), !dbg !6514
  store %struct._object* %call, %struct._object** %retval, !dbg !6515
  br label %return, !dbg !6515

if.else:                                          ; preds = %entry
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6516, !tbaa !1927
  %inc = add i64 %7, 1, !dbg !6516
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6516, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6517
  br label %return, !dbg !6517

return:                                           ; preds = %if.else, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !6518
  ret %struct._object* %8, !dbg !6518
}

declare i32 @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object*, %struct._object*, i8*, i8**, ...) #3

declare i32 @_PyArg_Parse_SizeT(%struct._object*, i8*, ...) #3

declare %struct._object* @PyBytes_FromString(i8*) #3

declare %struct._object* @_Py_BuildValue_SizeT(i8*, ...) #3

declare %struct._object* @_PyObject_CallMethodId_SizeT(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_newlines_get(%struct.nldecoder_object* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !668, metadata !1880), !dbg !6519
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !669, metadata !1880), !dbg !6520
  %0 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6521, !tbaa !1876
  %seennl = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %0, i32 0, i32 3, !dbg !6522
  %bf.load = load i8, i8* %seennl, align 8, !dbg !6522
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !6522
  %bf.clear = and i8 %bf.lshr, 7, !dbg !6522
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6522
  switch i32 %bf.cast, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.1
    i32 4, label %sw.bb.3
    i32 3, label %sw.bb.5
    i32 5, label %sw.bb.7
    i32 6, label %sw.bb.9
    i32 7, label %sw.bb.11
  ], !dbg !6523

sw.bb:                                            ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0)), !dbg !6524
  store %struct._object* %call, %struct._object** %retval, !dbg !6526
  br label %return, !dbg !6526

sw.bb.1:                                          ; preds = %entry
  %call2 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)), !dbg !6527
  store %struct._object* %call2, %struct._object** %retval, !dbg !6528
  br label %return, !dbg !6528

sw.bb.3:                                          ; preds = %entry
  %call4 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6529
  store %struct._object* %call4, %struct._object** %retval, !dbg !6530
  br label %return, !dbg !6530

sw.bb.5:                                          ; preds = %entry
  %call6 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)), !dbg !6531
  store %struct._object* %call6, %struct._object** %retval, !dbg !6532
  br label %return, !dbg !6532

sw.bb.7:                                          ; preds = %entry
  %call8 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6533
  store %struct._object* %call8, %struct._object** %retval, !dbg !6534
  br label %return, !dbg !6534

sw.bb.9:                                          ; preds = %entry
  %call10 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6535
  store %struct._object* %call10, %struct._object** %retval, !dbg !6536
  br label %return, !dbg !6536

sw.bb.11:                                         ; preds = %entry
  %call12 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6537
  store %struct._object* %call12, %struct._object** %retval, !dbg !6538
  br label %return, !dbg !6538

sw.default:                                       ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6539, !tbaa !1927
  %inc = add i64 %1, 1, !dbg !6539
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6539, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6540
  br label %return, !dbg !6540

return:                                           ; preds = %sw.default, %sw.bb.11, %sw.bb.9, %sw.bb.7, %sw.bb.5, %sw.bb.3, %sw.bb.1, %sw.bb
  %2 = load %struct._object*, %struct._object** %retval, !dbg !6541
  ret %struct._object* %2, !dbg !6541
}

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare i32 @_PyIOBase_finalize(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_clear(%struct.textio* %self) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_tmp129 = alloca %struct._object*, align 8
  %_py_decref_tmp134 = alloca %struct._object*, align 8
  %_py_tmp149 = alloca %struct._object*, align 8
  %_py_decref_tmp154 = alloca %struct._object*, align 8
  %_py_tmp169 = alloca %struct._object*, align 8
  %_py_decref_tmp174 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !745, metadata !1880), !dbg !6542
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6543, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !6544
  store i32 0, i32* %ok, align 4, !dbg !6545, !tbaa !3900
  br label %do.body, !dbg !6546

do.body:                                          ; preds = %entry
  %1 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6547
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6547
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !746, metadata !1880), !dbg !6549
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6550, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 4, !dbg !6551
  %3 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6551, !tbaa !4120
  store %struct._object* %3, %struct._object** %_py_tmp, align 8, !dbg !6549, !tbaa !1876
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6552, !tbaa !1876
  %cmp = icmp ne %struct._object* %4, null, !dbg !6553
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !6554

if.then:                                          ; preds = %do.body
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6555, !tbaa !1876
  %buffer1 = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 4, !dbg !6557
  store %struct._object* null, %struct._object** %buffer1, align 8, !dbg !6558, !tbaa !4120
  br label %do.body.2, !dbg !6559

do.body.2:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6560
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !6560
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !748, metadata !1880), !dbg !6562
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6563, !tbaa !1876
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !6562, !tbaa !1876
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6564, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !6566
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !6567, !tbaa !1927
  %dec = add i64 %9, -1, !dbg !6567
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6567, !tbaa !1927
  %cmp3 = icmp ne i64 %dec, 0, !dbg !6568
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6569

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !6570

if.else:                                          ; preds = %do.body.2
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6572, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !6574
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6574, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !6575
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6575, !tbaa !2197
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6576, !tbaa !1876
  call void %12(%struct._object* %13), !dbg !6577
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6578
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6578
  br label %do.cond, !dbg !6580

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6581

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !6583

if.end.5:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6585
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6585
  br label %do.end.7, !dbg !6588

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !6589

do.body.8:                                        ; preds = %do.end.7
  %16 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6590
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !6590
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !752, metadata !1880), !dbg !6592
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6593, !tbaa !1876
  %encoding = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 5, !dbg !6594
  %18 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !6594, !tbaa !4041
  store %struct._object* %18, %struct._object** %_py_tmp9, align 8, !dbg !6592, !tbaa !1876
  %19 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6595, !tbaa !1876
  %cmp10 = icmp ne %struct._object* %19, null, !dbg !6596
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !6597

if.then.11:                                       ; preds = %do.body.8
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6598, !tbaa !1876
  %encoding12 = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 5, !dbg !6600
  store %struct._object* null, %struct._object** %encoding12, align 8, !dbg !6601, !tbaa !4041
  br label %do.body.13, !dbg !6602

do.body.13:                                       ; preds = %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6603
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !6603
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !754, metadata !1880), !dbg !6605
  %22 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6606, !tbaa !1876
  store %struct._object* %22, %struct._object** %_py_decref_tmp14, align 8, !dbg !6605, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6607, !tbaa !1876
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !6609
  %24 = load i64, i64* %ob_refcnt15, align 8, !dbg !6610, !tbaa !1927
  %dec16 = add i64 %24, -1, !dbg !6610
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !6610, !tbaa !1927
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !6611
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !6612

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !6613

if.else.19:                                       ; preds = %do.body.13
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6615, !tbaa !1876
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !6617
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !6617, !tbaa !2195
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !6618
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !6618, !tbaa !2197
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6619, !tbaa !1876
  call void %27(%struct._object* %28), !dbg !6620
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %29 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6621
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !6621
  br label %do.cond.23, !dbg !6623

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !6624

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !6626

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %30 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6628
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !6628
  br label %do.end.27, !dbg !6629

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !6630

do.body.28:                                       ; preds = %do.end.27
  %31 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6631
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !6631
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !758, metadata !1880), !dbg !6633
  %32 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6634, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %32, i32 0, i32 6, !dbg !6635
  %33 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !6635, !tbaa !4177
  store %struct._object* %33, %struct._object** %_py_tmp29, align 8, !dbg !6633, !tbaa !1876
  %34 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6636, !tbaa !1876
  %cmp30 = icmp ne %struct._object* %34, null, !dbg !6637
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !6638

if.then.31:                                       ; preds = %do.body.28
  %35 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6639, !tbaa !1876
  %encoder32 = getelementptr inbounds %struct.textio, %struct.textio* %35, i32 0, i32 6, !dbg !6641
  store %struct._object* null, %struct._object** %encoder32, align 8, !dbg !6642, !tbaa !4177
  br label %do.body.33, !dbg !6643

do.body.33:                                       ; preds = %if.then.31
  %36 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6644
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !6644
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !760, metadata !1880), !dbg !6646
  %37 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6647, !tbaa !1876
  store %struct._object* %37, %struct._object** %_py_decref_tmp34, align 8, !dbg !6646, !tbaa !1876
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6648, !tbaa !1876
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !6650
  %39 = load i64, i64* %ob_refcnt35, align 8, !dbg !6651, !tbaa !1927
  %dec36 = add i64 %39, -1, !dbg !6651
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !6651, !tbaa !1927
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !6652
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !6653

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !6654

if.else.39:                                       ; preds = %do.body.33
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6656, !tbaa !1876
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !6658
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !6658, !tbaa !2195
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !6659
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !6659, !tbaa !2197
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6660, !tbaa !1876
  call void %42(%struct._object* %43), !dbg !6661
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %44 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6662
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !6662
  br label %do.cond.43, !dbg !6664

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !6665

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !6667

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %45 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6669
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !6669
  br label %do.end.47, !dbg !6670

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !6671

do.body.48:                                       ; preds = %do.end.47
  %46 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6672
  call void @llvm.lifetime.start(i64 8, i8* %46) #2, !dbg !6672
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !764, metadata !1880), !dbg !6674
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6675, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 7, !dbg !6676
  %48 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6676, !tbaa !4206
  store %struct._object* %48, %struct._object** %_py_tmp49, align 8, !dbg !6674, !tbaa !1876
  %49 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6677, !tbaa !1876
  %cmp50 = icmp ne %struct._object* %49, null, !dbg !6678
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !6679

if.then.51:                                       ; preds = %do.body.48
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6680, !tbaa !1876
  %decoder52 = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 7, !dbg !6682
  store %struct._object* null, %struct._object** %decoder52, align 8, !dbg !6683, !tbaa !4206
  br label %do.body.53, !dbg !6684

do.body.53:                                       ; preds = %if.then.51
  %51 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6685
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !6685
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !766, metadata !1880), !dbg !6687
  %52 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6688, !tbaa !1876
  store %struct._object* %52, %struct._object** %_py_decref_tmp54, align 8, !dbg !6687, !tbaa !1876
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6689, !tbaa !1876
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !6691
  %54 = load i64, i64* %ob_refcnt55, align 8, !dbg !6692, !tbaa !1927
  %dec56 = add i64 %54, -1, !dbg !6692
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !6692, !tbaa !1927
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !6693
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !6694

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !6695

if.else.59:                                       ; preds = %do.body.53
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6697, !tbaa !1876
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !6699
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !6699, !tbaa !2195
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !6700
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !6700, !tbaa !2197
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6701, !tbaa !1876
  call void %57(%struct._object* %58), !dbg !6702
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %59 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6703
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !6703
  br label %do.cond.63, !dbg !6705

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !6706

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !6708

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %60 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6710
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !6710
  br label %do.end.67, !dbg !6711

do.end.67:                                        ; preds = %if.end.65
  br label %do.body.68, !dbg !6712

do.body.68:                                       ; preds = %do.end.67
  %61 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6713
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !6713
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp69, metadata !770, metadata !1880), !dbg !6715
  %62 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6716, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %62, i32 0, i32 8, !dbg !6717
  %63 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !6717, !tbaa !4235
  store %struct._object* %63, %struct._object** %_py_tmp69, align 8, !dbg !6715, !tbaa !1876
  %64 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6718, !tbaa !1876
  %cmp70 = icmp ne %struct._object* %64, null, !dbg !6719
  br i1 %cmp70, label %if.then.71, label %if.end.85, !dbg !6720

if.then.71:                                       ; preds = %do.body.68
  %65 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6721, !tbaa !1876
  %readnl72 = getelementptr inbounds %struct.textio, %struct.textio* %65, i32 0, i32 8, !dbg !6723
  store %struct._object* null, %struct._object** %readnl72, align 8, !dbg !6724, !tbaa !4235
  br label %do.body.73, !dbg !6725

do.body.73:                                       ; preds = %if.then.71
  %66 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6726
  call void @llvm.lifetime.start(i64 8, i8* %66) #2, !dbg !6726
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !772, metadata !1880), !dbg !6728
  %67 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6729, !tbaa !1876
  store %struct._object* %67, %struct._object** %_py_decref_tmp74, align 8, !dbg !6728, !tbaa !1876
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6730, !tbaa !1876
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !6732
  %69 = load i64, i64* %ob_refcnt75, align 8, !dbg !6733, !tbaa !1927
  %dec76 = add i64 %69, -1, !dbg !6733
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !6733, !tbaa !1927
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !6734
  br i1 %cmp77, label %if.then.78, label %if.else.79, !dbg !6735

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82, !dbg !6736

if.else.79:                                       ; preds = %do.body.73
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6738, !tbaa !1876
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !6740
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !6740, !tbaa !2195
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !6741
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !6741, !tbaa !2197
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6742, !tbaa !1876
  call void %72(%struct._object* %73), !dbg !6743
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  %74 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6744
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !6744
  br label %do.cond.83, !dbg !6746

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !6747

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !6749

if.end.85:                                        ; preds = %do.end.84, %do.body.68
  %75 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6751
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !6751
  br label %do.end.87, !dbg !6752

do.end.87:                                        ; preds = %if.end.85
  br label %do.body.88, !dbg !6753

do.body.88:                                       ; preds = %do.end.87
  %76 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !6754
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !6754
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp89, metadata !776, metadata !1880), !dbg !6756
  %77 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6757, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %77, i32 0, i32 22, !dbg !6758
  %78 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !6758, !tbaa !4264
  store %struct._object* %78, %struct._object** %_py_tmp89, align 8, !dbg !6756, !tbaa !1876
  %79 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !6759, !tbaa !1876
  %cmp90 = icmp ne %struct._object* %79, null, !dbg !6760
  br i1 %cmp90, label %if.then.91, label %if.end.105, !dbg !6761

if.then.91:                                       ; preds = %do.body.88
  %80 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6762, !tbaa !1876
  %decoded_chars92 = getelementptr inbounds %struct.textio, %struct.textio* %80, i32 0, i32 22, !dbg !6764
  store %struct._object* null, %struct._object** %decoded_chars92, align 8, !dbg !6765, !tbaa !4264
  br label %do.body.93, !dbg !6766

do.body.93:                                       ; preds = %if.then.91
  %81 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !6767
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !6767
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !778, metadata !1880), !dbg !6769
  %82 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !6770, !tbaa !1876
  store %struct._object* %82, %struct._object** %_py_decref_tmp94, align 8, !dbg !6769, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6771, !tbaa !1876
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !6773
  %84 = load i64, i64* %ob_refcnt95, align 8, !dbg !6774, !tbaa !1927
  %dec96 = add i64 %84, -1, !dbg !6774
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !6774, !tbaa !1927
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !6775
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !6776

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !6777

if.else.99:                                       ; preds = %do.body.93
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6779, !tbaa !1876
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !6781
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !6781, !tbaa !2195
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !6782
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !6782, !tbaa !2197
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6783, !tbaa !1876
  call void %87(%struct._object* %88), !dbg !6784
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %89 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !6785
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !6785
  br label %do.cond.103, !dbg !6787

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !6788

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105, !dbg !6790

if.end.105:                                       ; preds = %do.end.104, %do.body.88
  %90 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !6792
  call void @llvm.lifetime.end(i64 8, i8* %90) #2, !dbg !6792
  br label %do.end.107, !dbg !6793

do.end.107:                                       ; preds = %if.end.105
  br label %do.body.108, !dbg !6794

do.body.108:                                      ; preds = %do.end.107
  %91 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !6795
  call void @llvm.lifetime.start(i64 8, i8* %91) #2, !dbg !6795
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp109, metadata !782, metadata !1880), !dbg !6797
  %92 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6798, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %92, i32 0, i32 24, !dbg !6799
  %93 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !6799, !tbaa !4293
  store %struct._object* %93, %struct._object** %_py_tmp109, align 8, !dbg !6797, !tbaa !1876
  %94 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !6800, !tbaa !1876
  %cmp110 = icmp ne %struct._object* %94, null, !dbg !6801
  br i1 %cmp110, label %if.then.111, label %if.end.125, !dbg !6802

if.then.111:                                      ; preds = %do.body.108
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6803, !tbaa !1876
  %pending_bytes112 = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 24, !dbg !6805
  store %struct._object* null, %struct._object** %pending_bytes112, align 8, !dbg !6806, !tbaa !4293
  br label %do.body.113, !dbg !6807

do.body.113:                                      ; preds = %if.then.111
  %96 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !6808
  call void @llvm.lifetime.start(i64 8, i8* %96) #2, !dbg !6808
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !784, metadata !1880), !dbg !6810
  %97 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !6811, !tbaa !1876
  store %struct._object* %97, %struct._object** %_py_decref_tmp114, align 8, !dbg !6810, !tbaa !1876
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6812, !tbaa !1876
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 0, !dbg !6814
  %99 = load i64, i64* %ob_refcnt115, align 8, !dbg !6815, !tbaa !1927
  %dec116 = add i64 %99, -1, !dbg !6815
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !6815, !tbaa !1927
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !6816
  br i1 %cmp117, label %if.then.118, label %if.else.119, !dbg !6817

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122, !dbg !6818

if.else.119:                                      ; preds = %do.body.113
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6820, !tbaa !1876
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 1, !dbg !6822
  %101 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !6822, !tbaa !2195
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %101, i32 0, i32 4, !dbg !6823
  %102 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !6823, !tbaa !2197
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6824, !tbaa !1876
  call void %102(%struct._object* %103), !dbg !6825
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %104 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !6826
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !6826
  br label %do.cond.123, !dbg !6828

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !6829

do.end.124:                                       ; preds = %do.cond.123
  br label %if.end.125, !dbg !6831

if.end.125:                                       ; preds = %do.end.124, %do.body.108
  %105 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !6833
  call void @llvm.lifetime.end(i64 8, i8* %105) #2, !dbg !6833
  br label %do.end.127, !dbg !6834

do.end.127:                                       ; preds = %if.end.125
  br label %do.body.128, !dbg !6835

do.body.128:                                      ; preds = %do.end.127
  %106 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !6836
  call void @llvm.lifetime.start(i64 8, i8* %106) #2, !dbg !6836
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp129, metadata !788, metadata !1880), !dbg !6838
  %107 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6839, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %107, i32 0, i32 26, !dbg !6840
  %108 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !6840, !tbaa !4322
  store %struct._object* %108, %struct._object** %_py_tmp129, align 8, !dbg !6838, !tbaa !1876
  %109 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !6841, !tbaa !1876
  %cmp130 = icmp ne %struct._object* %109, null, !dbg !6842
  br i1 %cmp130, label %if.then.131, label %if.end.145, !dbg !6843

if.then.131:                                      ; preds = %do.body.128
  %110 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6844, !tbaa !1876
  %snapshot132 = getelementptr inbounds %struct.textio, %struct.textio* %110, i32 0, i32 26, !dbg !6846
  store %struct._object* null, %struct._object** %snapshot132, align 8, !dbg !6847, !tbaa !4322
  br label %do.body.133, !dbg !6848

do.body.133:                                      ; preds = %if.then.131
  %111 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !6849
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !6849
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp134, metadata !790, metadata !1880), !dbg !6851
  %112 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !6852, !tbaa !1876
  store %struct._object* %112, %struct._object** %_py_decref_tmp134, align 8, !dbg !6851, !tbaa !1876
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6853, !tbaa !1876
  %ob_refcnt135 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !6855
  %114 = load i64, i64* %ob_refcnt135, align 8, !dbg !6856, !tbaa !1927
  %dec136 = add i64 %114, -1, !dbg !6856
  store i64 %dec136, i64* %ob_refcnt135, align 8, !dbg !6856, !tbaa !1927
  %cmp137 = icmp ne i64 %dec136, 0, !dbg !6857
  br i1 %cmp137, label %if.then.138, label %if.else.139, !dbg !6858

if.then.138:                                      ; preds = %do.body.133
  br label %if.end.142, !dbg !6859

if.else.139:                                      ; preds = %do.body.133
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6861, !tbaa !1876
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1, !dbg !6863
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !6863, !tbaa !2195
  %tp_dealloc141 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 4, !dbg !6864
  %117 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc141, align 8, !dbg !6864, !tbaa !2197
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6865, !tbaa !1876
  call void %117(%struct._object* %118), !dbg !6866
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.139, %if.then.138
  %119 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !6867
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !6867
  br label %do.cond.143, !dbg !6869

do.cond.143:                                      ; preds = %if.end.142
  br label %do.end.144, !dbg !6870

do.end.144:                                       ; preds = %do.cond.143
  br label %if.end.145, !dbg !6872

if.end.145:                                       ; preds = %do.end.144, %do.body.128
  %120 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !6874
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !6874
  br label %do.end.147, !dbg !6875

do.end.147:                                       ; preds = %if.end.145
  br label %do.body.148, !dbg !6876

do.body.148:                                      ; preds = %do.end.147
  %121 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !6877
  call void @llvm.lifetime.start(i64 8, i8* %121) #2, !dbg !6877
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp149, metadata !794, metadata !1880), !dbg !6879
  %122 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6880, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %122, i32 0, i32 9, !dbg !6881
  %123 = load %struct._object*, %struct._object** %errors, align 8, !dbg !6881, !tbaa !4351
  store %struct._object* %123, %struct._object** %_py_tmp149, align 8, !dbg !6879, !tbaa !1876
  %124 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !6882, !tbaa !1876
  %cmp150 = icmp ne %struct._object* %124, null, !dbg !6883
  br i1 %cmp150, label %if.then.151, label %if.end.165, !dbg !6884

if.then.151:                                      ; preds = %do.body.148
  %125 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6885, !tbaa !1876
  %errors152 = getelementptr inbounds %struct.textio, %struct.textio* %125, i32 0, i32 9, !dbg !6887
  store %struct._object* null, %struct._object** %errors152, align 8, !dbg !6888, !tbaa !4351
  br label %do.body.153, !dbg !6889

do.body.153:                                      ; preds = %if.then.151
  %126 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !6890
  call void @llvm.lifetime.start(i64 8, i8* %126) #2, !dbg !6890
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp154, metadata !796, metadata !1880), !dbg !6892
  %127 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !6893, !tbaa !1876
  store %struct._object* %127, %struct._object** %_py_decref_tmp154, align 8, !dbg !6892, !tbaa !1876
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !6894, !tbaa !1876
  %ob_refcnt155 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 0, !dbg !6896
  %129 = load i64, i64* %ob_refcnt155, align 8, !dbg !6897, !tbaa !1927
  %dec156 = add i64 %129, -1, !dbg !6897
  store i64 %dec156, i64* %ob_refcnt155, align 8, !dbg !6897, !tbaa !1927
  %cmp157 = icmp ne i64 %dec156, 0, !dbg !6898
  br i1 %cmp157, label %if.then.158, label %if.else.159, !dbg !6899

if.then.158:                                      ; preds = %do.body.153
  br label %if.end.162, !dbg !6900

if.else.159:                                      ; preds = %do.body.153
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !6902, !tbaa !1876
  %ob_type160 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 1, !dbg !6904
  %131 = load %struct._typeobject*, %struct._typeobject** %ob_type160, align 8, !dbg !6904, !tbaa !2195
  %tp_dealloc161 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %131, i32 0, i32 4, !dbg !6905
  %132 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc161, align 8, !dbg !6905, !tbaa !2197
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !6906, !tbaa !1876
  call void %132(%struct._object* %133), !dbg !6907
  br label %if.end.162

if.end.162:                                       ; preds = %if.else.159, %if.then.158
  %134 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !6908
  call void @llvm.lifetime.end(i64 8, i8* %134) #2, !dbg !6908
  br label %do.cond.163, !dbg !6910

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !6911

do.end.164:                                       ; preds = %do.cond.163
  br label %if.end.165, !dbg !6913

if.end.165:                                       ; preds = %do.end.164, %do.body.148
  %135 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !6915
  call void @llvm.lifetime.end(i64 8, i8* %135) #2, !dbg !6915
  br label %do.end.167, !dbg !6916

do.end.167:                                       ; preds = %if.end.165
  br label %do.body.168, !dbg !6917

do.body.168:                                      ; preds = %do.end.167
  %136 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !6918
  call void @llvm.lifetime.start(i64 8, i8* %136) #2, !dbg !6918
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp169, metadata !800, metadata !1880), !dbg !6920
  %137 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6921, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %137, i32 0, i32 28, !dbg !6922
  %138 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6922, !tbaa !4380
  store %struct._object* %138, %struct._object** %_py_tmp169, align 8, !dbg !6920, !tbaa !1876
  %139 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !6923, !tbaa !1876
  %cmp170 = icmp ne %struct._object* %139, null, !dbg !6924
  br i1 %cmp170, label %if.then.171, label %if.end.185, !dbg !6925

if.then.171:                                      ; preds = %do.body.168
  %140 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6926, !tbaa !1876
  %raw172 = getelementptr inbounds %struct.textio, %struct.textio* %140, i32 0, i32 28, !dbg !6928
  store %struct._object* null, %struct._object** %raw172, align 8, !dbg !6929, !tbaa !4380
  br label %do.body.173, !dbg !6930

do.body.173:                                      ; preds = %if.then.171
  %141 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !6931
  call void @llvm.lifetime.start(i64 8, i8* %141) #2, !dbg !6931
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp174, metadata !802, metadata !1880), !dbg !6933
  %142 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !6934, !tbaa !1876
  store %struct._object* %142, %struct._object** %_py_decref_tmp174, align 8, !dbg !6933, !tbaa !1876
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6935, !tbaa !1876
  %ob_refcnt175 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0, !dbg !6937
  %144 = load i64, i64* %ob_refcnt175, align 8, !dbg !6938, !tbaa !1927
  %dec176 = add i64 %144, -1, !dbg !6938
  store i64 %dec176, i64* %ob_refcnt175, align 8, !dbg !6938, !tbaa !1927
  %cmp177 = icmp ne i64 %dec176, 0, !dbg !6939
  br i1 %cmp177, label %if.then.178, label %if.else.179, !dbg !6940

if.then.178:                                      ; preds = %do.body.173
  br label %if.end.182, !dbg !6941

if.else.179:                                      ; preds = %do.body.173
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6943, !tbaa !1876
  %ob_type180 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 1, !dbg !6945
  %146 = load %struct._typeobject*, %struct._typeobject** %ob_type180, align 8, !dbg !6945, !tbaa !2195
  %tp_dealloc181 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %146, i32 0, i32 4, !dbg !6946
  %147 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc181, align 8, !dbg !6946, !tbaa !2197
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6947, !tbaa !1876
  call void %147(%struct._object* %148), !dbg !6948
  br label %if.end.182

if.end.182:                                       ; preds = %if.else.179, %if.then.178
  %149 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !6949
  call void @llvm.lifetime.end(i64 8, i8* %149) #2, !dbg !6949
  br label %do.cond.183, !dbg !6951

do.cond.183:                                      ; preds = %if.end.182
  br label %do.end.184, !dbg !6952

do.end.184:                                       ; preds = %do.cond.183
  br label %if.end.185, !dbg !6954

if.end.185:                                       ; preds = %do.end.184, %do.body.168
  %150 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !6956
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !6956
  br label %do.end.187, !dbg !6957

do.end.187:                                       ; preds = %if.end.185
  ret i32 0, !dbg !6958
}

declare void @PyObject_ClearWeakRefs(%struct._object*) #3

declare %struct._object* @_PyObject_GetAttrId(%struct._object*, %struct._Py_Identifier*) #3

declare i32 @PyErr_ExceptionMatches(%struct._object*) #3

declare void @PyErr_Clear() #3

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare void @PyUnicode_AppendAndDel(%struct._object**, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_textiowrapper_readline(%struct.textio* %self, i64 %limit) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %limit.addr = alloca i64, align 8
  %line = alloca %struct._object*, align 8
  %chunks = alloca %struct._object*, align 8
  %remaining = alloca %struct._object*, align 8
  %start = alloca i64, align 8
  %endpos = alloca i64, align 8
  %chunked = alloca i64, align 8
  %offset_to_buffer = alloca i64, align 8
  %res = alloca i32, align 4
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %ptr = alloca i8*, align 8
  %line_len = alloca i64, align 8
  %kind = alloca i32, align 4
  %consumed = alloca i64, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %s = alloca %struct._object*, align 8
  %_py_decref_tmp185 = alloca %struct._object*, align 8
  %_py_decref_tmp201 = alloca %struct._object*, align 8
  %_py_tmp227 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %s265 = alloca %struct._object*, align 8
  %_py_tmp268 = alloca %struct._object*, align 8
  %_py_decref_tmp273 = alloca %struct._object*, align 8
  %_py_tmp315 = alloca %struct._object*, align 8
  %_py_decref_tmp320 = alloca %struct._object*, align 8
  %_py_decref_tmp348 = alloca %struct._object*, align 8
  %_py_tmp367 = alloca %struct._object*, align 8
  %_py_decref_tmp372 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp399 = alloca %struct._object*, align 8
  %_py_xdecref_tmp415 = alloca %struct._object*, align 8
  %_py_decref_tmp420 = alloca %struct._object*, align 8
  %_py_xdecref_tmp436 = alloca %struct._object*, align 8
  %_py_decref_tmp441 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !914, metadata !1880), !dbg !6959
  store i64 %limit, i64* %limit.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i64* %limit.addr, metadata !915, metadata !1880), !dbg !6960
  %0 = bitcast %struct._object** %line to i8*, !dbg !6961
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6961
  call void @llvm.dbg.declare(metadata %struct._object** %line, metadata !916, metadata !1880), !dbg !6962
  store %struct._object* null, %struct._object** %line, align 8, !dbg !6962, !tbaa !1876
  %1 = bitcast %struct._object** %chunks to i8*, !dbg !6961
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6961
  call void @llvm.dbg.declare(metadata %struct._object** %chunks, metadata !917, metadata !1880), !dbg !6963
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !6963, !tbaa !1876
  %2 = bitcast %struct._object** %remaining to i8*, !dbg !6961
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6961
  call void @llvm.dbg.declare(metadata %struct._object** %remaining, metadata !918, metadata !1880), !dbg !6964
  store %struct._object* null, %struct._object** %remaining, align 8, !dbg !6964, !tbaa !1876
  %3 = bitcast i64* %start to i8*, !dbg !6965
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !6965
  call void @llvm.dbg.declare(metadata i64* %start, metadata !919, metadata !1880), !dbg !6966
  %4 = bitcast i64* %endpos to i8*, !dbg !6965
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !6965
  call void @llvm.dbg.declare(metadata i64* %endpos, metadata !920, metadata !1880), !dbg !6967
  %5 = bitcast i64* %chunked to i8*, !dbg !6965
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !6965
  call void @llvm.dbg.declare(metadata i64* %chunked, metadata !921, metadata !1880), !dbg !6968
  %6 = bitcast i64* %offset_to_buffer to i8*, !dbg !6965
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !6965
  call void @llvm.dbg.declare(metadata i64* %offset_to_buffer, metadata !922, metadata !1880), !dbg !6969
  %7 = bitcast i32* %res to i8*, !dbg !6970
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !6970
  call void @llvm.dbg.declare(metadata i32* %res, metadata !923, metadata !1880), !dbg !6971
  br label %do.body, !dbg !6972

do.body:                                          ; preds = %entry
  %8 = bitcast i32* %r to i8*, !dbg !6973
  call void @llvm.lifetime.start(i64 4, i8* %8) #2, !dbg !6973
  call void @llvm.dbg.declare(metadata i32* %r, metadata !924, metadata !1880), !dbg !6975
  %9 = bitcast %struct._object** %_res to i8*, !dbg !6976
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !6976
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !926, metadata !1880), !dbg !6977
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6978, !tbaa !1876
  %11 = bitcast %struct.textio* %10 to %struct._object*, !dbg !6979
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6980
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6980, !tbaa !2195
  %cmp = icmp eq %struct._typeobject* %12, @PyTextIOWrapper_Type, !dbg !6981
  br i1 %cmp, label %if.then, label %if.else.21, !dbg !6982

if.then:                                          ; preds = %do.body
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6983, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 28, !dbg !6985
  %14 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6985, !tbaa !4380
  %cmp1 = icmp ne %struct._object* %14, null, !dbg !6986
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !6987

if.then.2:                                        ; preds = %if.then
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6988, !tbaa !1876
  %raw3 = getelementptr inbounds %struct.textio, %struct.textio* %15, i32 0, i32 28, !dbg !6990
  %16 = load %struct._object*, %struct._object** %raw3, align 8, !dbg !6990, !tbaa !4380
  %call = call i32 @_PyFileIO_closed(%struct._object* %16), !dbg !6991
  store i32 %call, i32* %r, align 4, !dbg !6992, !tbaa !1883
  br label %if.end.17, !dbg !6993

if.else:                                          ; preds = %if.then
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6994, !tbaa !1876
  %call4 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %17, i8* null), !dbg !6996
  store %struct._object* %call4, %struct._object** %_res, align 8, !dbg !6997, !tbaa !1876
  %18 = load %struct._object*, %struct._object** %_res, align 8, !dbg !6998, !tbaa !1876
  %cmp5 = icmp eq %struct._object* %18, null, !dbg !7000
  br i1 %cmp5, label %if.then.6, label %if.end, !dbg !7001

if.then.6:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !7002
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7004

if.end:                                           ; preds = %if.else
  %19 = load %struct._object*, %struct._object** %_res, align 8, !dbg !7005, !tbaa !1876
  %call7 = call i32 @PyObject_IsTrue(%struct._object* %19), !dbg !7007
  store i32 %call7, i32* %r, align 4, !dbg !7008, !tbaa !1883
  br label %do.body.8, !dbg !7009

do.body.8:                                        ; preds = %if.end
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7010
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !7010
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !927, metadata !1880), !dbg !7012
  %21 = load %struct._object*, %struct._object** %_res, align 8, !dbg !7013, !tbaa !1876
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !7012, !tbaa !1876
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7014, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7016
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !7017, !tbaa !1927
  %dec = add i64 %23, -1, !dbg !7017
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7017, !tbaa !1927
  %cmp9 = icmp ne i64 %dec, 0, !dbg !7018
  br i1 %cmp9, label %if.then.10, label %if.else.11, !dbg !7019

if.then.10:                                       ; preds = %do.body.8
  br label %if.end.13, !dbg !7020

if.else.11:                                       ; preds = %do.body.8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7022, !tbaa !1876
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7024
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !7024, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7025
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7025, !tbaa !2197
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7026, !tbaa !1876
  call void %26(%struct._object* %27), !dbg !7027
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.11, %if.then.10
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7028
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !7028
  br label %do.cond, !dbg !7030

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !7031

do.end:                                           ; preds = %do.cond
  %29 = load i32, i32* %r, align 4, !dbg !7033, !tbaa !1883
  %cmp14 = icmp slt i32 %29, 0, !dbg !7036
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !7037

if.then.15:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !7038
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7040

if.end.16:                                        ; preds = %do.end
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %if.then.2
  %30 = load i32, i32* %r, align 4, !dbg !7041, !tbaa !1883
  %cmp18 = icmp sgt i32 %30, 0, !dbg !7044
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !7045

if.then.19:                                       ; preds = %if.end.17
  %31 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7046, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !7049
  store %struct._object* null, %struct._object** %retval, !dbg !7050
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7050

if.end.20:                                        ; preds = %if.end.17
  br label %if.end.26, !dbg !7051

if.else.21:                                       ; preds = %do.body
  %32 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7053, !tbaa !1876
  %33 = bitcast %struct.textio* %32 to %struct._object*, !dbg !7056
  %call22 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %33, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !7057
  %cmp23 = icmp eq %struct._object* %call22, null, !dbg !7058
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !7059

if.then.24:                                       ; preds = %if.else.21
  store %struct._object* null, %struct._object** %retval, !dbg !7060
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7062

if.end.25:                                        ; preds = %if.else.21
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.end.20
  store i32 0, i32* %cleanup.dest.slot, !dbg !7063
  br label %cleanup, !dbg !7063

cleanup:                                          ; preds = %if.end.26, %if.then.24, %if.then.19, %if.then.15, %if.then.6
  %34 = bitcast %struct._object** %_res to i8*, !dbg !7065
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !7065
  %35 = bitcast i32* %r to i8*, !dbg !7065
  call void @llvm.lifetime.end(i64 4, i8* %35) #2, !dbg !7065
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.456 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond.28, !dbg !7071

do.cond.28:                                       ; preds = %cleanup.cont
  br label %do.end.29, !dbg !7072

do.end.29:                                        ; preds = %do.cond.28
  %36 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7074, !tbaa !1876
  %call30 = call i32 @_textiowrapper_writeflush(%struct.textio* %36), !dbg !7076
  %cmp31 = icmp slt i32 %call30, 0, !dbg !7077
  br i1 %cmp31, label %if.then.32, label %if.end.33, !dbg !7078

if.then.32:                                       ; preds = %do.end.29
  store %struct._object* null, %struct._object** %retval, !dbg !7079
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.456, !dbg !7079

if.end.33:                                        ; preds = %do.end.29
  store i64 0, i64* %chunked, align 8, !dbg !7080, !tbaa !1941
  br label %while.cond, !dbg !7081

while.cond:                                       ; preds = %cleanup.cont.252, %if.end.33
  br label %while.body, !dbg !7082

while.body:                                       ; preds = %while.cond
  %37 = bitcast i8** %ptr to i8*, !dbg !7085
  call void @llvm.lifetime.start(i64 8, i8* %37) #2, !dbg !7085
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !933, metadata !1880), !dbg !7086
  %38 = bitcast i64* %line_len to i8*, !dbg !7087
  call void @llvm.lifetime.start(i64 8, i8* %38) #2, !dbg !7087
  call void @llvm.dbg.declare(metadata i64* %line_len, metadata !935, metadata !1880), !dbg !7088
  %39 = bitcast i32* %kind to i8*, !dbg !7089
  call void @llvm.lifetime.start(i64 4, i8* %39) #2, !dbg !7089
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !936, metadata !1880), !dbg !7090
  %40 = bitcast i64* %consumed to i8*, !dbg !7091
  call void @llvm.lifetime.start(i64 8, i8* %40) #2, !dbg !7091
  call void @llvm.dbg.declare(metadata i64* %consumed, metadata !937, metadata !1880), !dbg !7092
  store i64 0, i64* %consumed, align 8, !dbg !7092, !tbaa !1941
  store i32 1, i32* %res, align 4, !dbg !7093, !tbaa !1883
  br label %while.cond.34, !dbg !7094

while.cond.34:                                    ; preds = %if.end.48, %if.then.43, %while.body
  %41 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7095, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %41, i32 0, i32 22, !dbg !7098
  %42 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !7098, !tbaa !4264
  %tobool = icmp ne %struct._object* %42, null, !dbg !7099
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7100

lor.rhs:                                          ; preds = %while.cond.34
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7101, !tbaa !1876
  %decoded_chars35 = getelementptr inbounds %struct.textio, %struct.textio* %43, i32 0, i32 22, !dbg !7102
  %44 = load %struct._object*, %struct._object** %decoded_chars35, align 8, !dbg !7102, !tbaa !4264
  %45 = bitcast %struct._object* %44 to %struct.PyASCIIObject*, !dbg !7103
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %45, i32 0, i32 1, !dbg !7104
  %46 = load i64, i64* %length, align 8, !dbg !7104, !tbaa !1937
  %tobool36 = icmp ne i64 %46, 0, !dbg !7105
  %lnot = xor i1 %tobool36, true, !dbg !7105
  br label %lor.end, !dbg !7100

lor.end:                                          ; preds = %lor.rhs, %while.cond.34
  %47 = phi i1 [ true, %while.cond.34 ], [ %lnot, %lor.rhs ]
  br i1 %47, label %while.body.37, label %while.end, !dbg !7106

while.body.37:                                    ; preds = %lor.end
  %48 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7109, !tbaa !1876
  %call38 = call i32 @textiowrapper_read_chunk(%struct.textio* %48, i64 0), !dbg !7111
  store i32 %call38, i32* %res, align 4, !dbg !7112, !tbaa !1883
  %49 = load i32, i32* %res, align 4, !dbg !7113, !tbaa !1883
  %cmp39 = icmp slt i32 %49, 0, !dbg !7115
  br i1 %cmp39, label %if.then.40, label %if.end.45, !dbg !7116

if.then.40:                                       ; preds = %while.body.37
  %call41 = call i32 @_PyIO_trap_eintr(), !dbg !7117
  %tobool42 = icmp ne i32 %call41, 0, !dbg !7117
  br i1 %tobool42, label %if.then.43, label %if.end.44, !dbg !7120

if.then.43:                                       ; preds = %if.then.40
  br label %while.cond.34, !dbg !7121

if.end.44:                                        ; preds = %if.then.40
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7123

if.end.45:                                        ; preds = %while.body.37
  %50 = load i32, i32* %res, align 4, !dbg !7124, !tbaa !1883
  %cmp46 = icmp eq i32 %50, 0, !dbg !7126
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !7127

if.then.47:                                       ; preds = %if.end.45
  br label %while.end, !dbg !7128

if.end.48:                                        ; preds = %if.end.45
  br label %while.cond.34, !dbg !7094

while.end:                                        ; preds = %if.then.47, %lor.end
  %51 = load i32, i32* %res, align 4, !dbg !7129, !tbaa !1883
  %cmp49 = icmp eq i32 %51, 0, !dbg !7130
  br i1 %cmp49, label %if.then.50, label %if.end.70, !dbg !7131

if.then.50:                                       ; preds = %while.end
  %52 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7132, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %52, %struct._object* null), !dbg !7133
  br label %do.body.51, !dbg !7134

do.body.51:                                       ; preds = %if.then.50
  %53 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7135
  call void @llvm.lifetime.start(i64 8, i8* %53) #2, !dbg !7135
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !938, metadata !1880), !dbg !7137
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7138, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %54, i32 0, i32 26, !dbg !7139
  %55 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !7139, !tbaa !4322
  store %struct._object* %55, %struct._object** %_py_tmp, align 8, !dbg !7137, !tbaa !1876
  %56 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7140, !tbaa !1876
  %cmp52 = icmp ne %struct._object* %56, null, !dbg !7141
  br i1 %cmp52, label %if.then.53, label %if.end.67, !dbg !7142

if.then.53:                                       ; preds = %do.body.51
  %57 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7143, !tbaa !1876
  %snapshot54 = getelementptr inbounds %struct.textio, %struct.textio* %57, i32 0, i32 26, !dbg !7145
  store %struct._object* null, %struct._object** %snapshot54, align 8, !dbg !7146, !tbaa !4322
  br label %do.body.55, !dbg !7147

do.body.55:                                       ; preds = %if.then.53
  %58 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7148
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !7148
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !942, metadata !1880), !dbg !7150
  %59 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7151, !tbaa !1876
  store %struct._object* %59, %struct._object** %_py_decref_tmp56, align 8, !dbg !7150, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7152, !tbaa !1876
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !7154
  %61 = load i64, i64* %ob_refcnt57, align 8, !dbg !7155, !tbaa !1927
  %dec58 = add i64 %61, -1, !dbg !7155
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !7155, !tbaa !1927
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !7156
  br i1 %cmp59, label %if.then.60, label %if.else.61, !dbg !7157

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64, !dbg !7158

if.else.61:                                       ; preds = %do.body.55
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7160, !tbaa !1876
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !7162
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !7162, !tbaa !2195
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !7163
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !7163, !tbaa !2197
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7164, !tbaa !1876
  call void %64(%struct._object* %65), !dbg !7165
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %66 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7166
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !7166
  br label %do.cond.65, !dbg !7168

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !7169

do.end.66:                                        ; preds = %do.cond.65
  br label %if.end.67, !dbg !7171

if.end.67:                                        ; preds = %do.end.66, %do.body.51
  %67 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7173
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !7173
  br label %do.cond.68, !dbg !7176

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !7177

do.end.69:                                        ; preds = %do.cond.68
  store i64 0, i64* %offset_to_buffer, align 8, !dbg !7179, !tbaa !1941
  store i64 0, i64* %endpos, align 8, !dbg !7180, !tbaa !1941
  store i64 0, i64* %start, align 8, !dbg !7181, !tbaa !1941
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7182

if.end.70:                                        ; preds = %while.end
  %68 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7183, !tbaa !1876
  %cmp71 = icmp eq %struct._object* %68, null, !dbg !7184
  br i1 %cmp71, label %if.then.72, label %if.else.75, !dbg !7185

if.then.72:                                       ; preds = %if.end.70
  %69 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7186, !tbaa !1876
  %decoded_chars73 = getelementptr inbounds %struct.textio, %struct.textio* %69, i32 0, i32 22, !dbg !7188
  %70 = load %struct._object*, %struct._object** %decoded_chars73, align 8, !dbg !7188, !tbaa !4264
  store %struct._object* %70, %struct._object** %line, align 8, !dbg !7189, !tbaa !1876
  %71 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7190, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %71, i32 0, i32 23, !dbg !7191
  %72 = load i64, i64* %decoded_chars_used, align 8, !dbg !7191, !tbaa !5183
  store i64 %72, i64* %start, align 8, !dbg !7192, !tbaa !1941
  store i64 0, i64* %offset_to_buffer, align 8, !dbg !7193, !tbaa !1941
  %73 = load %struct._object*, %struct._object** %line, align 8, !dbg !7194, !tbaa !1876
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !7195
  %74 = load i64, i64* %ob_refcnt74, align 8, !dbg !7196, !tbaa !1927
  %inc = add i64 %74, 1, !dbg !7196
  store i64 %inc, i64* %ob_refcnt74, align 8, !dbg !7196, !tbaa !1927
  br label %if.end.106, !dbg !7197

if.else.75:                                       ; preds = %if.end.70
  %75 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7198, !tbaa !1876
  %76 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7199, !tbaa !1876
  %decoded_chars76 = getelementptr inbounds %struct.textio, %struct.textio* %76, i32 0, i32 22, !dbg !7200
  %77 = load %struct._object*, %struct._object** %decoded_chars76, align 8, !dbg !7200, !tbaa !4264
  %call77 = call %struct._object* @PyUnicode_Concat(%struct._object* %75, %struct._object* %77), !dbg !7201
  store %struct._object* %call77, %struct._object** %line, align 8, !dbg !7202, !tbaa !1876
  store i64 0, i64* %start, align 8, !dbg !7203, !tbaa !1941
  %78 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7204, !tbaa !1876
  %79 = bitcast %struct._object* %78 to %struct.PyASCIIObject*, !dbg !7205
  %length78 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %79, i32 0, i32 1, !dbg !7206
  %80 = load i64, i64* %length78, align 8, !dbg !7206, !tbaa !1937
  store i64 %80, i64* %offset_to_buffer, align 8, !dbg !7207, !tbaa !1941
  br label %do.body.79, !dbg !7208

do.body.79:                                       ; preds = %if.else.75
  %81 = bitcast %struct._object** %_py_tmp80 to i8*, !dbg !7209
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !7209
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp80, metadata !946, metadata !1880), !dbg !7211
  %82 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7212, !tbaa !1876
  store %struct._object* %82, %struct._object** %_py_tmp80, align 8, !dbg !7211, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_tmp80, align 8, !dbg !7213, !tbaa !1876
  %cmp81 = icmp ne %struct._object* %83, null, !dbg !7214
  br i1 %cmp81, label %if.then.82, label %if.end.95, !dbg !7215

if.then.82:                                       ; preds = %do.body.79
  store %struct._object* null, %struct._object** %remaining, align 8, !dbg !7216, !tbaa !1876
  br label %do.body.83, !dbg !7218

do.body.83:                                       ; preds = %if.then.82
  %84 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !7219
  call void @llvm.lifetime.start(i64 8, i8* %84) #2, !dbg !7219
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !950, metadata !1880), !dbg !7221
  %85 = load %struct._object*, %struct._object** %_py_tmp80, align 8, !dbg !7222, !tbaa !1876
  store %struct._object* %85, %struct._object** %_py_decref_tmp84, align 8, !dbg !7221, !tbaa !1876
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !7223, !tbaa !1876
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !7225
  %87 = load i64, i64* %ob_refcnt85, align 8, !dbg !7226, !tbaa !1927
  %dec86 = add i64 %87, -1, !dbg !7226
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !7226, !tbaa !1927
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !7227
  br i1 %cmp87, label %if.then.88, label %if.else.89, !dbg !7228

if.then.88:                                       ; preds = %do.body.83
  br label %if.end.92, !dbg !7229

if.else.89:                                       ; preds = %do.body.83
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !7231, !tbaa !1876
  %ob_type90 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !7233
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type90, align 8, !dbg !7233, !tbaa !2195
  %tp_dealloc91 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !7234
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc91, align 8, !dbg !7234, !tbaa !2197
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !7235, !tbaa !1876
  call void %90(%struct._object* %91), !dbg !7236
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.89, %if.then.88
  %92 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !7237
  call void @llvm.lifetime.end(i64 8, i8* %92) #2, !dbg !7237
  br label %do.cond.93, !dbg !7239

do.cond.93:                                       ; preds = %if.end.92
  br label %do.end.94, !dbg !7240

do.end.94:                                        ; preds = %do.cond.93
  br label %if.end.95, !dbg !7242

if.end.95:                                        ; preds = %do.end.94, %do.body.79
  %93 = bitcast %struct._object** %_py_tmp80 to i8*, !dbg !7244
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !7244
  br label %do.cond.96, !dbg !7247

do.cond.96:                                       ; preds = %if.end.95
  br label %do.end.97, !dbg !7248

do.end.97:                                        ; preds = %do.cond.96
  %94 = load %struct._object*, %struct._object** %line, align 8, !dbg !7250, !tbaa !1876
  %cmp98 = icmp eq %struct._object* %94, null, !dbg !7252
  br i1 %cmp98, label %if.then.99, label %if.end.100, !dbg !7253

if.then.99:                                       ; preds = %do.end.97
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7254

if.end.100:                                       ; preds = %do.end.97
  %95 = load %struct._object*, %struct._object** %line, align 8, !dbg !7255, !tbaa !1876
  %96 = bitcast %struct._object* %95 to %struct.PyASCIIObject*, !dbg !7257
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %96, i32 0, i32 3, !dbg !7258
  %97 = bitcast %struct.anon* %state to i32*, !dbg !7259
  %bf.load = load i32, i32* %97, align 4, !dbg !7259
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !7259
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7259
  %tobool101 = icmp ne i32 %bf.clear, 0, !dbg !7260
  br i1 %tobool101, label %cond.true, label %cond.false, !dbg !7260

cond.true:                                        ; preds = %if.end.100
  br label %cond.end, !dbg !7261

cond.false:                                       ; preds = %if.end.100
  %98 = load %struct._object*, %struct._object** %line, align 8, !dbg !7263, !tbaa !1876
  %call102 = call i32 @_PyUnicode_Ready(%struct._object* %98), !dbg !7265
  br label %cond.end, !dbg !7260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call102, %cond.false ], !dbg !7260
  %cmp103 = icmp eq i32 %cond, -1, !dbg !7266
  br i1 %cmp103, label %if.then.104, label %if.end.105, !dbg !7269

if.then.104:                                      ; preds = %cond.end
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7270

if.end.105:                                       ; preds = %cond.end
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.then.72
  %99 = load %struct._object*, %struct._object** %line, align 8, !dbg !7271, !tbaa !1876
  %100 = bitcast %struct._object* %99 to %struct.PyASCIIObject*, !dbg !7272
  %state107 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %100, i32 0, i32 3, !dbg !7273
  %101 = bitcast %struct.anon* %state107 to i32*, !dbg !7274
  %bf.load108 = load i32, i32* %101, align 4, !dbg !7274
  %bf.lshr109 = lshr i32 %bf.load108, 5, !dbg !7274
  %bf.clear110 = and i32 %bf.lshr109, 1, !dbg !7274
  %tobool111 = icmp ne i32 %bf.clear110, 0, !dbg !7275
  br i1 %tobool111, label %cond.true.112, label %cond.false.123, !dbg !7275

cond.true.112:                                    ; preds = %if.end.106
  %102 = load %struct._object*, %struct._object** %line, align 8, !dbg !7276, !tbaa !1876
  %103 = bitcast %struct._object* %102 to %struct.PyASCIIObject*, !dbg !7277
  %state113 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %103, i32 0, i32 3, !dbg !7278
  %104 = bitcast %struct.anon* %state113 to i32*, !dbg !7279
  %bf.load114 = load i32, i32* %104, align 4, !dbg !7279
  %bf.lshr115 = lshr i32 %bf.load114, 6, !dbg !7279
  %bf.clear116 = and i32 %bf.lshr115, 1, !dbg !7279
  %tobool117 = icmp ne i32 %bf.clear116, 0, !dbg !7280
  br i1 %tobool117, label %cond.true.118, label %cond.false.119, !dbg !7280

cond.true.118:                                    ; preds = %cond.true.112
  %105 = load %struct._object*, %struct._object** %line, align 8, !dbg !7281, !tbaa !1876
  %106 = bitcast %struct._object* %105 to %struct.PyASCIIObject*, !dbg !7283
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %106, i64 1, !dbg !7284
  %107 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !7285
  br label %cond.end.121, !dbg !7280

cond.false.119:                                   ; preds = %cond.true.112
  %108 = load %struct._object*, %struct._object** %line, align 8, !dbg !7286, !tbaa !1876
  %109 = bitcast %struct._object* %108 to %struct.PyCompactUnicodeObject*, !dbg !7288
  %add.ptr120 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %109, i64 1, !dbg !7289
  %110 = bitcast %struct.PyCompactUnicodeObject* %add.ptr120 to i8*, !dbg !7290
  br label %cond.end.121, !dbg !7280

cond.end.121:                                     ; preds = %cond.false.119, %cond.true.118
  %cond122 = phi i8* [ %107, %cond.true.118 ], [ %110, %cond.false.119 ], !dbg !7280
  br label %cond.end.124, !dbg !7291

cond.false.123:                                   ; preds = %if.end.106
  %111 = load %struct._object*, %struct._object** %line, align 8, !dbg !7294, !tbaa !1876
  %112 = bitcast %struct._object* %111 to %struct.PyUnicodeObject*, !dbg !7295
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %112, i32 0, i32 1, !dbg !7296
  %any = bitcast %union.anon* %data to i8**, !dbg !7297
  %113 = load i8*, i8** %any, align 8, !dbg !7297, !tbaa !1876
  br label %cond.end.124, !dbg !7275

cond.end.124:                                     ; preds = %cond.false.123, %cond.end.121
  %cond125 = phi i8* [ %cond122, %cond.end.121 ], [ %113, %cond.false.123 ], !dbg !7275
  store i8* %cond125, i8** %ptr, align 8, !dbg !7298, !tbaa !1876
  %114 = load %struct._object*, %struct._object** %line, align 8, !dbg !7301, !tbaa !1876
  %115 = bitcast %struct._object* %114 to %struct.PyASCIIObject*, !dbg !7302
  %length126 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %115, i32 0, i32 1, !dbg !7303
  %116 = load i64, i64* %length126, align 8, !dbg !7303, !tbaa !1937
  store i64 %116, i64* %line_len, align 8, !dbg !7304, !tbaa !1941
  %117 = load %struct._object*, %struct._object** %line, align 8, !dbg !7305, !tbaa !1876
  %118 = bitcast %struct._object* %117 to %struct.PyASCIIObject*, !dbg !7306
  %state127 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %118, i32 0, i32 3, !dbg !7307
  %119 = bitcast %struct.anon* %state127 to i32*, !dbg !7308
  %bf.load128 = load i32, i32* %119, align 4, !dbg !7308
  %bf.lshr129 = lshr i32 %bf.load128, 2, !dbg !7308
  %bf.clear130 = and i32 %bf.lshr129, 7, !dbg !7308
  store i32 %bf.clear130, i32* %kind, align 4, !dbg !7309, !tbaa !1883
  %120 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7310, !tbaa !1876
  %readtranslate = getelementptr inbounds %struct.textio, %struct.textio* %120, i32 0, i32 14, !dbg !7311
  %121 = load i8, i8* %readtranslate, align 1, !dbg !7311, !tbaa !5601
  %conv = sext i8 %121 to i32, !dbg !7310
  %122 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7312, !tbaa !1876
  %readuniversal = getelementptr inbounds %struct.textio, %struct.textio* %122, i32 0, i32 13, !dbg !7313
  %123 = load i8, i8* %readuniversal, align 1, !dbg !7313, !tbaa !5584
  %conv131 = sext i8 %123 to i32, !dbg !7312
  %124 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7314, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %124, i32 0, i32 8, !dbg !7315
  %125 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !7315, !tbaa !4235
  %126 = load i32, i32* %kind, align 4, !dbg !7316, !tbaa !1883
  %127 = load i8*, i8** %ptr, align 8, !dbg !7317, !tbaa !1876
  %128 = load i32, i32* %kind, align 4, !dbg !7318, !tbaa !1883
  %conv132 = sext i32 %128 to i64, !dbg !7318
  %129 = load i64, i64* %start, align 8, !dbg !7319, !tbaa !1941
  %mul = mul i64 %conv132, %129, !dbg !7320
  %add.ptr133 = getelementptr i8, i8* %127, i64 %mul, !dbg !7321
  %130 = load i8*, i8** %ptr, align 8, !dbg !7322, !tbaa !1876
  %131 = load i32, i32* %kind, align 4, !dbg !7323, !tbaa !1883
  %conv134 = sext i32 %131 to i64, !dbg !7323
  %132 = load i64, i64* %line_len, align 8, !dbg !7324, !tbaa !1941
  %mul135 = mul i64 %conv134, %132, !dbg !7325
  %add.ptr136 = getelementptr i8, i8* %130, i64 %mul135, !dbg !7326
  %call137 = call i64 @_PyIO_find_line_ending(i32 %conv, i32 %conv131, %struct._object* %125, i32 %126, i8* %add.ptr133, i8* %add.ptr136, i64* %consumed), !dbg !7327
  store i64 %call137, i64* %endpos, align 8, !dbg !7328, !tbaa !1941
  %133 = load i64, i64* %endpos, align 8, !dbg !7329, !tbaa !1941
  %cmp138 = icmp sge i64 %133, 0, !dbg !7331
  br i1 %cmp138, label %if.then.140, label %if.end.150, !dbg !7332

if.then.140:                                      ; preds = %cond.end.124
  %134 = load i64, i64* %start, align 8, !dbg !7333, !tbaa !1941
  %135 = load i64, i64* %endpos, align 8, !dbg !7335, !tbaa !1941
  %add = add i64 %135, %134, !dbg !7335
  store i64 %add, i64* %endpos, align 8, !dbg !7335, !tbaa !1941
  %136 = load i64, i64* %limit.addr, align 8, !dbg !7336, !tbaa !1941
  %cmp141 = icmp sge i64 %136, 0, !dbg !7338
  br i1 %cmp141, label %land.lhs.true, label %if.end.149, !dbg !7339

land.lhs.true:                                    ; preds = %if.then.140
  %137 = load i64, i64* %endpos, align 8, !dbg !7340, !tbaa !1941
  %138 = load i64, i64* %start, align 8, !dbg !7342, !tbaa !1941
  %sub = sub i64 %137, %138, !dbg !7343
  %139 = load i64, i64* %chunked, align 8, !dbg !7344, !tbaa !1941
  %add143 = add i64 %sub, %139, !dbg !7345
  %140 = load i64, i64* %limit.addr, align 8, !dbg !7346, !tbaa !1941
  %cmp144 = icmp sge i64 %add143, %140, !dbg !7347
  br i1 %cmp144, label %if.then.146, label %if.end.149, !dbg !7348

if.then.146:                                      ; preds = %land.lhs.true
  %141 = load i64, i64* %start, align 8, !dbg !7349, !tbaa !1941
  %142 = load i64, i64* %limit.addr, align 8, !dbg !7350, !tbaa !1941
  %add147 = add i64 %141, %142, !dbg !7351
  %143 = load i64, i64* %chunked, align 8, !dbg !7352, !tbaa !1941
  %sub148 = sub i64 %add147, %143, !dbg !7353
  store i64 %sub148, i64* %endpos, align 8, !dbg !7354, !tbaa !1941
  br label %if.end.149, !dbg !7355

if.end.149:                                       ; preds = %if.then.146, %land.lhs.true, %if.then.140
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7356

if.end.150:                                       ; preds = %cond.end.124
  %144 = load i64, i64* %consumed, align 8, !dbg !7357, !tbaa !1941
  %145 = load i64, i64* %start, align 8, !dbg !7358, !tbaa !1941
  %add151 = add i64 %144, %145, !dbg !7359
  store i64 %add151, i64* %endpos, align 8, !dbg !7360, !tbaa !1941
  %146 = load i64, i64* %limit.addr, align 8, !dbg !7361, !tbaa !1941
  %cmp152 = icmp sge i64 %146, 0, !dbg !7363
  br i1 %cmp152, label %land.lhs.true.154, label %if.end.162, !dbg !7364

land.lhs.true.154:                                ; preds = %if.end.150
  %147 = load i64, i64* %endpos, align 8, !dbg !7365, !tbaa !1941
  %148 = load i64, i64* %start, align 8, !dbg !7367, !tbaa !1941
  %sub155 = sub i64 %147, %148, !dbg !7368
  %149 = load i64, i64* %chunked, align 8, !dbg !7369, !tbaa !1941
  %add156 = add i64 %sub155, %149, !dbg !7370
  %150 = load i64, i64* %limit.addr, align 8, !dbg !7371, !tbaa !1941
  %cmp157 = icmp sge i64 %add156, %150, !dbg !7372
  br i1 %cmp157, label %if.then.159, label %if.end.162, !dbg !7373

if.then.159:                                      ; preds = %land.lhs.true.154
  %151 = load i64, i64* %start, align 8, !dbg !7374, !tbaa !1941
  %152 = load i64, i64* %limit.addr, align 8, !dbg !7376, !tbaa !1941
  %add160 = add i64 %151, %152, !dbg !7377
  %153 = load i64, i64* %chunked, align 8, !dbg !7378, !tbaa !1941
  %sub161 = sub i64 %add160, %153, !dbg !7379
  store i64 %sub161, i64* %endpos, align 8, !dbg !7380, !tbaa !1941
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7381

if.end.162:                                       ; preds = %land.lhs.true.154, %if.end.150
  %154 = load i64, i64* %endpos, align 8, !dbg !7382, !tbaa !1941
  %155 = load i64, i64* %start, align 8, !dbg !7383, !tbaa !1941
  %cmp163 = icmp sgt i64 %154, %155, !dbg !7384
  br i1 %cmp163, label %if.then.165, label %if.end.216, !dbg !7385

if.then.165:                                      ; preds = %if.end.162
  %156 = bitcast %struct._object** %s to i8*, !dbg !7386
  call void @llvm.lifetime.start(i64 8, i8* %156) #2, !dbg !7386
  call void @llvm.dbg.declare(metadata %struct._object** %s, metadata !954, metadata !1880), !dbg !7387
  %157 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7388, !tbaa !1876
  %cmp166 = icmp eq %struct._object* %157, null, !dbg !7390
  br i1 %cmp166, label %if.then.168, label %if.end.174, !dbg !7391

if.then.168:                                      ; preds = %if.then.165
  %call169 = call %struct._object* @PyList_New(i64 0), !dbg !7392
  store %struct._object* %call169, %struct._object** %chunks, align 8, !dbg !7394, !tbaa !1876
  %158 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7395, !tbaa !1876
  %cmp170 = icmp eq %struct._object* %158, null, !dbg !7397
  br i1 %cmp170, label %if.then.172, label %if.end.173, !dbg !7398

if.then.172:                                      ; preds = %if.then.168
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.213, !dbg !7399

if.end.173:                                       ; preds = %if.then.168
  br label %if.end.174, !dbg !7400

if.end.174:                                       ; preds = %if.end.173, %if.then.165
  %159 = load %struct._object*, %struct._object** %line, align 8, !dbg !7401, !tbaa !1876
  %160 = load i64, i64* %start, align 8, !dbg !7402, !tbaa !1941
  %161 = load i64, i64* %endpos, align 8, !dbg !7403, !tbaa !1941
  %call175 = call %struct._object* @PyUnicode_Substring(%struct._object* %159, i64 %160, i64 %161), !dbg !7404
  store %struct._object* %call175, %struct._object** %s, align 8, !dbg !7405, !tbaa !1876
  %162 = load %struct._object*, %struct._object** %s, align 8, !dbg !7406, !tbaa !1876
  %cmp176 = icmp eq %struct._object* %162, null, !dbg !7408
  br i1 %cmp176, label %if.then.178, label %if.end.179, !dbg !7409

if.then.178:                                      ; preds = %if.end.174
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.213, !dbg !7410

if.end.179:                                       ; preds = %if.end.174
  %163 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7411, !tbaa !1876
  %164 = load %struct._object*, %struct._object** %s, align 8, !dbg !7412, !tbaa !1876
  %call180 = call i32 @PyList_Append(%struct._object* %163, %struct._object* %164), !dbg !7413
  %cmp181 = icmp slt i32 %call180, 0, !dbg !7414
  br i1 %cmp181, label %if.then.183, label %if.end.197, !dbg !7415

if.then.183:                                      ; preds = %if.end.179
  br label %do.body.184, !dbg !7416

do.body.184:                                      ; preds = %if.then.183
  %165 = bitcast %struct._object** %_py_decref_tmp185 to i8*, !dbg !7417
  call void @llvm.lifetime.start(i64 8, i8* %165) #2, !dbg !7417
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp185, metadata !957, metadata !1880), !dbg !7419
  %166 = load %struct._object*, %struct._object** %s, align 8, !dbg !7420, !tbaa !1876
  store %struct._object* %166, %struct._object** %_py_decref_tmp185, align 8, !dbg !7419, !tbaa !1876
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !7421, !tbaa !1876
  %ob_refcnt186 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 0, !dbg !7423
  %168 = load i64, i64* %ob_refcnt186, align 8, !dbg !7424, !tbaa !1927
  %dec187 = add i64 %168, -1, !dbg !7424
  store i64 %dec187, i64* %ob_refcnt186, align 8, !dbg !7424, !tbaa !1927
  %cmp188 = icmp ne i64 %dec187, 0, !dbg !7425
  br i1 %cmp188, label %if.then.190, label %if.else.191, !dbg !7426

if.then.190:                                      ; preds = %do.body.184
  br label %if.end.194, !dbg !7427

if.else.191:                                      ; preds = %do.body.184
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !7429, !tbaa !1876
  %ob_type192 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 1, !dbg !7431
  %170 = load %struct._typeobject*, %struct._typeobject** %ob_type192, align 8, !dbg !7431, !tbaa !2195
  %tp_dealloc193 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %170, i32 0, i32 4, !dbg !7432
  %171 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc193, align 8, !dbg !7432, !tbaa !2197
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !7433, !tbaa !1876
  call void %171(%struct._object* %172), !dbg !7434
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.then.190
  %173 = bitcast %struct._object** %_py_decref_tmp185 to i8*, !dbg !7435
  call void @llvm.lifetime.end(i64 8, i8* %173) #2, !dbg !7435
  br label %do.cond.195, !dbg !7437

do.cond.195:                                      ; preds = %if.end.194
  br label %do.end.196, !dbg !7438

do.end.196:                                       ; preds = %do.cond.195
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.213, !dbg !7440

if.end.197:                                       ; preds = %if.end.179
  %174 = load %struct._object*, %struct._object** %s, align 8, !dbg !7441, !tbaa !1876
  %175 = bitcast %struct._object* %174 to %struct.PyASCIIObject*, !dbg !7442
  %length198 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %175, i32 0, i32 1, !dbg !7443
  %176 = load i64, i64* %length198, align 8, !dbg !7443, !tbaa !1937
  %177 = load i64, i64* %chunked, align 8, !dbg !7444, !tbaa !1941
  %add199 = add i64 %177, %176, !dbg !7444
  store i64 %add199, i64* %chunked, align 8, !dbg !7444, !tbaa !1941
  br label %do.body.200, !dbg !7445

do.body.200:                                      ; preds = %if.end.197
  %178 = bitcast %struct._object** %_py_decref_tmp201 to i8*, !dbg !7446
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !7446
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp201, metadata !961, metadata !1880), !dbg !7448
  %179 = load %struct._object*, %struct._object** %s, align 8, !dbg !7449, !tbaa !1876
  store %struct._object* %179, %struct._object** %_py_decref_tmp201, align 8, !dbg !7448, !tbaa !1876
  %180 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !7450, !tbaa !1876
  %ob_refcnt202 = getelementptr inbounds %struct._object, %struct._object* %180, i32 0, i32 0, !dbg !7452
  %181 = load i64, i64* %ob_refcnt202, align 8, !dbg !7453, !tbaa !1927
  %dec203 = add i64 %181, -1, !dbg !7453
  store i64 %dec203, i64* %ob_refcnt202, align 8, !dbg !7453, !tbaa !1927
  %cmp204 = icmp ne i64 %dec203, 0, !dbg !7454
  br i1 %cmp204, label %if.then.206, label %if.else.207, !dbg !7455

if.then.206:                                      ; preds = %do.body.200
  br label %if.end.210, !dbg !7456

if.else.207:                                      ; preds = %do.body.200
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !7458, !tbaa !1876
  %ob_type208 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 1, !dbg !7460
  %183 = load %struct._typeobject*, %struct._typeobject** %ob_type208, align 8, !dbg !7460, !tbaa !2195
  %tp_dealloc209 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %183, i32 0, i32 4, !dbg !7461
  %184 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc209, align 8, !dbg !7461, !tbaa !2197
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !7462, !tbaa !1876
  call void %184(%struct._object* %185), !dbg !7463
  br label %if.end.210

if.end.210:                                       ; preds = %if.else.207, %if.then.206
  %186 = bitcast %struct._object** %_py_decref_tmp201 to i8*, !dbg !7464
  call void @llvm.lifetime.end(i64 8, i8* %186) #2, !dbg !7464
  br label %do.cond.211, !dbg !7466

do.cond.211:                                      ; preds = %if.end.210
  br label %do.end.212, !dbg !7467

do.end.212:                                       ; preds = %do.cond.211
  store i32 0, i32* %cleanup.dest.slot, !dbg !7469
  br label %cleanup.213, !dbg !7469

cleanup.213:                                      ; preds = %do.end.196, %if.then.178, %if.then.172, %do.end.212
  %187 = bitcast %struct._object** %s to i8*, !dbg !7470
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !7470
  %cleanup.dest.214 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.214, label %cleanup.247 [
    i32 0, label %cleanup.cont.215
  ]

cleanup.cont.215:                                 ; preds = %cleanup.213
  br label %if.end.216, !dbg !7472

if.end.216:                                       ; preds = %cleanup.cont.215, %if.end.162
  %188 = load i64, i64* %endpos, align 8, !dbg !7473, !tbaa !1941
  %189 = load i64, i64* %line_len, align 8, !dbg !7475, !tbaa !1941
  %cmp217 = icmp slt i64 %188, %189, !dbg !7476
  br i1 %cmp217, label %if.then.219, label %if.end.225, !dbg !7477

if.then.219:                                      ; preds = %if.end.216
  %190 = load %struct._object*, %struct._object** %line, align 8, !dbg !7478, !tbaa !1876
  %191 = load i64, i64* %endpos, align 8, !dbg !7480, !tbaa !1941
  %192 = load i64, i64* %line_len, align 8, !dbg !7481, !tbaa !1941
  %call220 = call %struct._object* @PyUnicode_Substring(%struct._object* %190, i64 %191, i64 %192), !dbg !7482
  store %struct._object* %call220, %struct._object** %remaining, align 8, !dbg !7483, !tbaa !1876
  %193 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7484, !tbaa !1876
  %cmp221 = icmp eq %struct._object* %193, null, !dbg !7486
  br i1 %cmp221, label %if.then.223, label %if.end.224, !dbg !7487

if.then.223:                                      ; preds = %if.then.219
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7488

if.end.224:                                       ; preds = %if.then.219
  br label %if.end.225, !dbg !7489

if.end.225:                                       ; preds = %if.end.224, %if.end.216
  br label %do.body.226, !dbg !7490

do.body.226:                                      ; preds = %if.end.225
  %194 = bitcast %struct._object** %_py_tmp227 to i8*, !dbg !7491
  call void @llvm.lifetime.start(i64 8, i8* %194) #2, !dbg !7491
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp227, metadata !963, metadata !1880), !dbg !7493
  %195 = load %struct._object*, %struct._object** %line, align 8, !dbg !7494, !tbaa !1876
  store %struct._object* %195, %struct._object** %_py_tmp227, align 8, !dbg !7493, !tbaa !1876
  %196 = load %struct._object*, %struct._object** %_py_tmp227, align 8, !dbg !7495, !tbaa !1876
  %cmp228 = icmp ne %struct._object* %196, null, !dbg !7496
  br i1 %cmp228, label %if.then.230, label %if.end.244, !dbg !7497

if.then.230:                                      ; preds = %do.body.226
  store %struct._object* null, %struct._object** %line, align 8, !dbg !7498, !tbaa !1876
  br label %do.body.231, !dbg !7500

do.body.231:                                      ; preds = %if.then.230
  %197 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !7501
  call void @llvm.lifetime.start(i64 8, i8* %197) #2, !dbg !7501
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !965, metadata !1880), !dbg !7503
  %198 = load %struct._object*, %struct._object** %_py_tmp227, align 8, !dbg !7504, !tbaa !1876
  store %struct._object* %198, %struct._object** %_py_decref_tmp232, align 8, !dbg !7503, !tbaa !1876
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !7505, !tbaa !1876
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 0, !dbg !7507
  %200 = load i64, i64* %ob_refcnt233, align 8, !dbg !7508, !tbaa !1927
  %dec234 = add i64 %200, -1, !dbg !7508
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !7508, !tbaa !1927
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !7509
  br i1 %cmp235, label %if.then.237, label %if.else.238, !dbg !7510

if.then.237:                                      ; preds = %do.body.231
  br label %if.end.241, !dbg !7511

if.else.238:                                      ; preds = %do.body.231
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !7513, !tbaa !1876
  %ob_type239 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 1, !dbg !7515
  %202 = load %struct._typeobject*, %struct._typeobject** %ob_type239, align 8, !dbg !7515, !tbaa !2195
  %tp_dealloc240 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %202, i32 0, i32 4, !dbg !7516
  %203 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc240, align 8, !dbg !7516, !tbaa !2197
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !7517, !tbaa !1876
  call void %203(%struct._object* %204), !dbg !7518
  br label %if.end.241

if.end.241:                                       ; preds = %if.else.238, %if.then.237
  %205 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !7519
  call void @llvm.lifetime.end(i64 8, i8* %205) #2, !dbg !7519
  br label %do.cond.242, !dbg !7521

do.cond.242:                                      ; preds = %if.end.241
  br label %do.end.243, !dbg !7522

do.end.243:                                       ; preds = %do.cond.242
  br label %if.end.244, !dbg !7524

if.end.244:                                       ; preds = %do.end.243, %do.body.226
  %206 = bitcast %struct._object** %_py_tmp227 to i8*, !dbg !7526
  call void @llvm.lifetime.end(i64 8, i8* %206) #2, !dbg !7526
  br label %do.cond.245, !dbg !7528

do.cond.245:                                      ; preds = %if.end.244
  br label %do.end.246, !dbg !7529

do.end.246:                                       ; preds = %do.cond.245
  %207 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7531, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %207, %struct._object* null), !dbg !7532
  store i32 0, i32* %cleanup.dest.slot, !dbg !7533
  br label %cleanup.247, !dbg !7533

cleanup.247:                                      ; preds = %if.then.223, %if.then.104, %if.then.99, %if.end.44, %do.end.246, %cleanup.213, %if.then.159, %if.end.149, %do.end.69
  %208 = bitcast i64* %consumed to i8*, !dbg !7534
  call void @llvm.lifetime.end(i64 8, i8* %208) #2, !dbg !7534
  %209 = bitcast i32* %kind to i8*, !dbg !7534
  call void @llvm.lifetime.end(i64 4, i8* %209) #2, !dbg !7534
  %210 = bitcast i64* %line_len to i8*, !dbg !7534
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !7534
  %211 = bitcast i8** %ptr to i8*, !dbg !7534
  call void @llvm.lifetime.end(i64 8, i8* %211) #2, !dbg !7534
  %cleanup.dest.251 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.251, label %cleanup.456 [
    i32 0, label %cleanup.cont.252
    i32 7, label %while.end.253
    i32 10, label %error
  ]

cleanup.cont.252:                                 ; preds = %cleanup.247
  br label %while.cond, !dbg !7081

while.end.253:                                    ; preds = %cleanup.247
  %212 = load %struct._object*, %struct._object** %line, align 8, !dbg !7535, !tbaa !1876
  %cmp254 = icmp ne %struct._object* %212, null, !dbg !7536
  br i1 %cmp254, label %if.then.256, label %if.end.296, !dbg !7537

if.then.256:                                      ; preds = %while.end.253
  %213 = load i64, i64* %endpos, align 8, !dbg !7538, !tbaa !1941
  %214 = load i64, i64* %offset_to_buffer, align 8, !dbg !7539, !tbaa !1941
  %sub257 = sub i64 %213, %214, !dbg !7540
  %215 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7541, !tbaa !1876
  %decoded_chars_used258 = getelementptr inbounds %struct.textio, %struct.textio* %215, i32 0, i32 23, !dbg !7542
  store i64 %sub257, i64* %decoded_chars_used258, align 8, !dbg !7543, !tbaa !5183
  %216 = load i64, i64* %start, align 8, !dbg !7544, !tbaa !1941
  %cmp259 = icmp sgt i64 %216, 0, !dbg !7545
  br i1 %cmp259, label %if.then.264, label %lor.lhs.false, !dbg !7546

lor.lhs.false:                                    ; preds = %if.then.256
  %217 = load i64, i64* %endpos, align 8, !dbg !7547, !tbaa !1941
  %218 = load %struct._object*, %struct._object** %line, align 8, !dbg !7549, !tbaa !1876
  %219 = bitcast %struct._object* %218 to %struct.PyASCIIObject*, !dbg !7550
  %length261 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %219, i32 0, i32 1, !dbg !7551
  %220 = load i64, i64* %length261, align 8, !dbg !7551, !tbaa !1937
  %cmp262 = icmp slt i64 %217, %220, !dbg !7552
  br i1 %cmp262, label %if.then.264, label %if.end.295, !dbg !7553

if.then.264:                                      ; preds = %lor.lhs.false, %if.then.256
  %221 = bitcast %struct._object** %s265 to i8*, !dbg !7554
  call void @llvm.lifetime.start(i64 8, i8* %221) #2, !dbg !7554
  call void @llvm.dbg.declare(metadata %struct._object** %s265, metadata !969, metadata !1880), !dbg !7555
  %222 = load %struct._object*, %struct._object** %line, align 8, !dbg !7556, !tbaa !1876
  %223 = load i64, i64* %start, align 8, !dbg !7557, !tbaa !1941
  %224 = load i64, i64* %endpos, align 8, !dbg !7558, !tbaa !1941
  %call266 = call %struct._object* @PyUnicode_Substring(%struct._object* %222, i64 %223, i64 %224), !dbg !7559
  store %struct._object* %call266, %struct._object** %s265, align 8, !dbg !7555, !tbaa !1876
  br label %do.body.267, !dbg !7560

do.body.267:                                      ; preds = %if.then.264
  %225 = bitcast %struct._object** %_py_tmp268 to i8*, !dbg !7561
  call void @llvm.lifetime.start(i64 8, i8* %225) #2, !dbg !7561
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp268, metadata !974, metadata !1880), !dbg !7563
  %226 = load %struct._object*, %struct._object** %line, align 8, !dbg !7564, !tbaa !1876
  store %struct._object* %226, %struct._object** %_py_tmp268, align 8, !dbg !7563, !tbaa !1876
  %227 = load %struct._object*, %struct._object** %_py_tmp268, align 8, !dbg !7565, !tbaa !1876
  %cmp269 = icmp ne %struct._object* %227, null, !dbg !7566
  br i1 %cmp269, label %if.then.271, label %if.end.285, !dbg !7567

if.then.271:                                      ; preds = %do.body.267
  store %struct._object* null, %struct._object** %line, align 8, !dbg !7568, !tbaa !1876
  br label %do.body.272, !dbg !7570

do.body.272:                                      ; preds = %if.then.271
  %228 = bitcast %struct._object** %_py_decref_tmp273 to i8*, !dbg !7571
  call void @llvm.lifetime.start(i64 8, i8* %228) #2, !dbg !7571
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp273, metadata !976, metadata !1880), !dbg !7573
  %229 = load %struct._object*, %struct._object** %_py_tmp268, align 8, !dbg !7574, !tbaa !1876
  store %struct._object* %229, %struct._object** %_py_decref_tmp273, align 8, !dbg !7573, !tbaa !1876
  %230 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8, !dbg !7575, !tbaa !1876
  %ob_refcnt274 = getelementptr inbounds %struct._object, %struct._object* %230, i32 0, i32 0, !dbg !7577
  %231 = load i64, i64* %ob_refcnt274, align 8, !dbg !7578, !tbaa !1927
  %dec275 = add i64 %231, -1, !dbg !7578
  store i64 %dec275, i64* %ob_refcnt274, align 8, !dbg !7578, !tbaa !1927
  %cmp276 = icmp ne i64 %dec275, 0, !dbg !7579
  br i1 %cmp276, label %if.then.278, label %if.else.279, !dbg !7580

if.then.278:                                      ; preds = %do.body.272
  br label %if.end.282, !dbg !7581

if.else.279:                                      ; preds = %do.body.272
  %232 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8, !dbg !7583, !tbaa !1876
  %ob_type280 = getelementptr inbounds %struct._object, %struct._object* %232, i32 0, i32 1, !dbg !7585
  %233 = load %struct._typeobject*, %struct._typeobject** %ob_type280, align 8, !dbg !7585, !tbaa !2195
  %tp_dealloc281 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %233, i32 0, i32 4, !dbg !7586
  %234 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc281, align 8, !dbg !7586, !tbaa !2197
  %235 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8, !dbg !7587, !tbaa !1876
  call void %234(%struct._object* %235), !dbg !7588
  br label %if.end.282

if.end.282:                                       ; preds = %if.else.279, %if.then.278
  %236 = bitcast %struct._object** %_py_decref_tmp273 to i8*, !dbg !7589
  call void @llvm.lifetime.end(i64 8, i8* %236) #2, !dbg !7589
  br label %do.cond.283, !dbg !7591

do.cond.283:                                      ; preds = %if.end.282
  br label %do.end.284, !dbg !7592

do.end.284:                                       ; preds = %do.cond.283
  br label %if.end.285, !dbg !7594

if.end.285:                                       ; preds = %do.end.284, %do.body.267
  %237 = bitcast %struct._object** %_py_tmp268 to i8*, !dbg !7596
  call void @llvm.lifetime.end(i64 8, i8* %237) #2, !dbg !7596
  br label %do.cond.286, !dbg !7599

do.cond.286:                                      ; preds = %if.end.285
  br label %do.end.287, !dbg !7600

do.end.287:                                       ; preds = %do.cond.286
  %238 = load %struct._object*, %struct._object** %s265, align 8, !dbg !7602, !tbaa !1876
  %cmp288 = icmp eq %struct._object* %238, null, !dbg !7604
  br i1 %cmp288, label %if.then.290, label %if.end.291, !dbg !7605

if.then.290:                                      ; preds = %do.end.287
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.292, !dbg !7606

if.end.291:                                       ; preds = %do.end.287
  %239 = load %struct._object*, %struct._object** %s265, align 8, !dbg !7607, !tbaa !1876
  store %struct._object* %239, %struct._object** %line, align 8, !dbg !7608, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !7609
  br label %cleanup.292, !dbg !7609

cleanup.292:                                      ; preds = %if.then.290, %if.end.291
  %240 = bitcast %struct._object** %s265 to i8*, !dbg !7610
  call void @llvm.lifetime.end(i64 8, i8* %240) #2, !dbg !7610
  %cleanup.dest.293 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.293, label %cleanup.456 [
    i32 0, label %cleanup.cont.294
    i32 10, label %error
  ]

cleanup.cont.294:                                 ; preds = %cleanup.292
  br label %if.end.295, !dbg !7611

if.end.295:                                       ; preds = %cleanup.cont.294, %lor.lhs.false
  br label %if.end.296, !dbg !7612

if.end.296:                                       ; preds = %if.end.295, %while.end.253
  %241 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7613, !tbaa !1876
  %cmp297 = icmp ne %struct._object* %241, null, !dbg !7614
  br i1 %cmp297, label %if.then.299, label %if.end.335, !dbg !7615

if.then.299:                                      ; preds = %if.end.296
  %242 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7616, !tbaa !1876
  %cmp300 = icmp eq %struct._object* %242, null, !dbg !7618
  br i1 %cmp300, label %if.then.302, label %if.end.308, !dbg !7619

if.then.302:                                      ; preds = %if.then.299
  %call303 = call %struct._object* @PyList_New(i64 0), !dbg !7620
  store %struct._object* %call303, %struct._object** %chunks, align 8, !dbg !7622, !tbaa !1876
  %243 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7623, !tbaa !1876
  %cmp304 = icmp eq %struct._object* %243, null, !dbg !7625
  br i1 %cmp304, label %if.then.306, label %if.end.307, !dbg !7626

if.then.306:                                      ; preds = %if.then.302
  br label %error, !dbg !7627

if.end.307:                                       ; preds = %if.then.302
  br label %if.end.308, !dbg !7628

if.end.308:                                       ; preds = %if.end.307, %if.then.299
  %244 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7629, !tbaa !1876
  %245 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7631, !tbaa !1876
  %call309 = call i32 @PyList_Append(%struct._object* %244, %struct._object* %245), !dbg !7632
  %cmp310 = icmp slt i32 %call309, 0, !dbg !7633
  br i1 %cmp310, label %if.then.312, label %if.end.313, !dbg !7634

if.then.312:                                      ; preds = %if.end.308
  br label %error, !dbg !7635

if.end.313:                                       ; preds = %if.end.308
  br label %do.body.314, !dbg !7636

do.body.314:                                      ; preds = %if.end.313
  %246 = bitcast %struct._object** %_py_tmp315 to i8*, !dbg !7637
  call void @llvm.lifetime.start(i64 8, i8* %246) #2, !dbg !7637
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp315, metadata !980, metadata !1880), !dbg !7639
  %247 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7640, !tbaa !1876
  store %struct._object* %247, %struct._object** %_py_tmp315, align 8, !dbg !7639, !tbaa !1876
  %248 = load %struct._object*, %struct._object** %_py_tmp315, align 8, !dbg !7641, !tbaa !1876
  %cmp316 = icmp ne %struct._object* %248, null, !dbg !7642
  br i1 %cmp316, label %if.then.318, label %if.end.332, !dbg !7643

if.then.318:                                      ; preds = %do.body.314
  store %struct._object* null, %struct._object** %remaining, align 8, !dbg !7644, !tbaa !1876
  br label %do.body.319, !dbg !7646

do.body.319:                                      ; preds = %if.then.318
  %249 = bitcast %struct._object** %_py_decref_tmp320 to i8*, !dbg !7647
  call void @llvm.lifetime.start(i64 8, i8* %249) #2, !dbg !7647
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp320, metadata !984, metadata !1880), !dbg !7649
  %250 = load %struct._object*, %struct._object** %_py_tmp315, align 8, !dbg !7650, !tbaa !1876
  store %struct._object* %250, %struct._object** %_py_decref_tmp320, align 8, !dbg !7649, !tbaa !1876
  %251 = load %struct._object*, %struct._object** %_py_decref_tmp320, align 8, !dbg !7651, !tbaa !1876
  %ob_refcnt321 = getelementptr inbounds %struct._object, %struct._object* %251, i32 0, i32 0, !dbg !7653
  %252 = load i64, i64* %ob_refcnt321, align 8, !dbg !7654, !tbaa !1927
  %dec322 = add i64 %252, -1, !dbg !7654
  store i64 %dec322, i64* %ob_refcnt321, align 8, !dbg !7654, !tbaa !1927
  %cmp323 = icmp ne i64 %dec322, 0, !dbg !7655
  br i1 %cmp323, label %if.then.325, label %if.else.326, !dbg !7656

if.then.325:                                      ; preds = %do.body.319
  br label %if.end.329, !dbg !7657

if.else.326:                                      ; preds = %do.body.319
  %253 = load %struct._object*, %struct._object** %_py_decref_tmp320, align 8, !dbg !7659, !tbaa !1876
  %ob_type327 = getelementptr inbounds %struct._object, %struct._object* %253, i32 0, i32 1, !dbg !7661
  %254 = load %struct._typeobject*, %struct._typeobject** %ob_type327, align 8, !dbg !7661, !tbaa !2195
  %tp_dealloc328 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %254, i32 0, i32 4, !dbg !7662
  %255 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc328, align 8, !dbg !7662, !tbaa !2197
  %256 = load %struct._object*, %struct._object** %_py_decref_tmp320, align 8, !dbg !7663, !tbaa !1876
  call void %255(%struct._object* %256), !dbg !7664
  br label %if.end.329

if.end.329:                                       ; preds = %if.else.326, %if.then.325
  %257 = bitcast %struct._object** %_py_decref_tmp320 to i8*, !dbg !7665
  call void @llvm.lifetime.end(i64 8, i8* %257) #2, !dbg !7665
  br label %do.cond.330, !dbg !7667

do.cond.330:                                      ; preds = %if.end.329
  br label %do.end.331, !dbg !7668

do.end.331:                                       ; preds = %do.cond.330
  br label %if.end.332, !dbg !7670

if.end.332:                                       ; preds = %do.end.331, %do.body.314
  %258 = bitcast %struct._object** %_py_tmp315 to i8*, !dbg !7672
  call void @llvm.lifetime.end(i64 8, i8* %258) #2, !dbg !7672
  br label %do.cond.333, !dbg !7675

do.cond.333:                                      ; preds = %if.end.332
  br label %do.end.334, !dbg !7676

do.end.334:                                       ; preds = %do.cond.333
  br label %if.end.335, !dbg !7678

if.end.335:                                       ; preds = %do.end.334, %if.end.296
  %259 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7679, !tbaa !1876
  %cmp336 = icmp ne %struct._object* %259, null, !dbg !7680
  br i1 %cmp336, label %if.then.338, label %if.end.387, !dbg !7681

if.then.338:                                      ; preds = %if.end.335
  %260 = load %struct._object*, %struct._object** %line, align 8, !dbg !7682, !tbaa !1876
  %cmp339 = icmp ne %struct._object* %260, null, !dbg !7683
  br i1 %cmp339, label %if.then.341, label %if.end.360, !dbg !7684

if.then.341:                                      ; preds = %if.then.338
  %261 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7685, !tbaa !1876
  %262 = load %struct._object*, %struct._object** %line, align 8, !dbg !7687, !tbaa !1876
  %call342 = call i32 @PyList_Append(%struct._object* %261, %struct._object* %262), !dbg !7688
  %cmp343 = icmp slt i32 %call342, 0, !dbg !7689
  br i1 %cmp343, label %if.then.345, label %if.end.346, !dbg !7690

if.then.345:                                      ; preds = %if.then.341
  br label %error, !dbg !7691

if.end.346:                                       ; preds = %if.then.341
  br label %do.body.347, !dbg !7692

do.body.347:                                      ; preds = %if.end.346
  %263 = bitcast %struct._object** %_py_decref_tmp348 to i8*, !dbg !7693
  call void @llvm.lifetime.start(i64 8, i8* %263) #2, !dbg !7693
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp348, metadata !988, metadata !1880), !dbg !7695
  %264 = load %struct._object*, %struct._object** %line, align 8, !dbg !7696, !tbaa !1876
  store %struct._object* %264, %struct._object** %_py_decref_tmp348, align 8, !dbg !7695, !tbaa !1876
  %265 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !7697, !tbaa !1876
  %ob_refcnt349 = getelementptr inbounds %struct._object, %struct._object* %265, i32 0, i32 0, !dbg !7699
  %266 = load i64, i64* %ob_refcnt349, align 8, !dbg !7700, !tbaa !1927
  %dec350 = add i64 %266, -1, !dbg !7700
  store i64 %dec350, i64* %ob_refcnt349, align 8, !dbg !7700, !tbaa !1927
  %cmp351 = icmp ne i64 %dec350, 0, !dbg !7701
  br i1 %cmp351, label %if.then.353, label %if.else.354, !dbg !7702

if.then.353:                                      ; preds = %do.body.347
  br label %if.end.357, !dbg !7703

if.else.354:                                      ; preds = %do.body.347
  %267 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !7705, !tbaa !1876
  %ob_type355 = getelementptr inbounds %struct._object, %struct._object* %267, i32 0, i32 1, !dbg !7707
  %268 = load %struct._typeobject*, %struct._typeobject** %ob_type355, align 8, !dbg !7707, !tbaa !2195
  %tp_dealloc356 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %268, i32 0, i32 4, !dbg !7708
  %269 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc356, align 8, !dbg !7708, !tbaa !2197
  %270 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !7709, !tbaa !1876
  call void %269(%struct._object* %270), !dbg !7710
  br label %if.end.357

if.end.357:                                       ; preds = %if.else.354, %if.then.353
  %271 = bitcast %struct._object** %_py_decref_tmp348 to i8*, !dbg !7711
  call void @llvm.lifetime.end(i64 8, i8* %271) #2, !dbg !7711
  br label %do.cond.358, !dbg !7713

do.cond.358:                                      ; preds = %if.end.357
  br label %do.end.359, !dbg !7714

do.end.359:                                       ; preds = %do.cond.358
  br label %if.end.360, !dbg !7716

if.end.360:                                       ; preds = %do.end.359, %if.then.338
  %272 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !7717, !tbaa !1876
  %273 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7718, !tbaa !1876
  %call361 = call %struct._object* @PyUnicode_Join(%struct._object* %272, %struct._object* %273), !dbg !7719
  store %struct._object* %call361, %struct._object** %line, align 8, !dbg !7720, !tbaa !1876
  %274 = load %struct._object*, %struct._object** %line, align 8, !dbg !7721, !tbaa !1876
  %cmp362 = icmp eq %struct._object* %274, null, !dbg !7723
  br i1 %cmp362, label %if.then.364, label %if.end.365, !dbg !7724

if.then.364:                                      ; preds = %if.end.360
  br label %error, !dbg !7725

if.end.365:                                       ; preds = %if.end.360
  br label %do.body.366, !dbg !7726

do.body.366:                                      ; preds = %if.end.365
  %275 = bitcast %struct._object** %_py_tmp367 to i8*, !dbg !7727
  call void @llvm.lifetime.start(i64 8, i8* %275) #2, !dbg !7727
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp367, metadata !994, metadata !1880), !dbg !7729
  %276 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7730, !tbaa !1876
  store %struct._object* %276, %struct._object** %_py_tmp367, align 8, !dbg !7729, !tbaa !1876
  %277 = load %struct._object*, %struct._object** %_py_tmp367, align 8, !dbg !7731, !tbaa !1876
  %cmp368 = icmp ne %struct._object* %277, null, !dbg !7732
  br i1 %cmp368, label %if.then.370, label %if.end.384, !dbg !7733

if.then.370:                                      ; preds = %do.body.366
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !7734, !tbaa !1876
  br label %do.body.371, !dbg !7736

do.body.371:                                      ; preds = %if.then.370
  %278 = bitcast %struct._object** %_py_decref_tmp372 to i8*, !dbg !7737
  call void @llvm.lifetime.start(i64 8, i8* %278) #2, !dbg !7737
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp372, metadata !996, metadata !1880), !dbg !7739
  %279 = load %struct._object*, %struct._object** %_py_tmp367, align 8, !dbg !7740, !tbaa !1876
  store %struct._object* %279, %struct._object** %_py_decref_tmp372, align 8, !dbg !7739, !tbaa !1876
  %280 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8, !dbg !7741, !tbaa !1876
  %ob_refcnt373 = getelementptr inbounds %struct._object, %struct._object* %280, i32 0, i32 0, !dbg !7743
  %281 = load i64, i64* %ob_refcnt373, align 8, !dbg !7744, !tbaa !1927
  %dec374 = add i64 %281, -1, !dbg !7744
  store i64 %dec374, i64* %ob_refcnt373, align 8, !dbg !7744, !tbaa !1927
  %cmp375 = icmp ne i64 %dec374, 0, !dbg !7745
  br i1 %cmp375, label %if.then.377, label %if.else.378, !dbg !7746

if.then.377:                                      ; preds = %do.body.371
  br label %if.end.381, !dbg !7747

if.else.378:                                      ; preds = %do.body.371
  %282 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8, !dbg !7749, !tbaa !1876
  %ob_type379 = getelementptr inbounds %struct._object, %struct._object* %282, i32 0, i32 1, !dbg !7751
  %283 = load %struct._typeobject*, %struct._typeobject** %ob_type379, align 8, !dbg !7751, !tbaa !2195
  %tp_dealloc380 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %283, i32 0, i32 4, !dbg !7752
  %284 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc380, align 8, !dbg !7752, !tbaa !2197
  %285 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8, !dbg !7753, !tbaa !1876
  call void %284(%struct._object* %285), !dbg !7754
  br label %if.end.381

if.end.381:                                       ; preds = %if.else.378, %if.then.377
  %286 = bitcast %struct._object** %_py_decref_tmp372 to i8*, !dbg !7755
  call void @llvm.lifetime.end(i64 8, i8* %286) #2, !dbg !7755
  br label %do.cond.382, !dbg !7757

do.cond.382:                                      ; preds = %if.end.381
  br label %do.end.383, !dbg !7758

do.end.383:                                       ; preds = %do.cond.382
  br label %if.end.384, !dbg !7760

if.end.384:                                       ; preds = %do.end.383, %do.body.366
  %287 = bitcast %struct._object** %_py_tmp367 to i8*, !dbg !7762
  call void @llvm.lifetime.end(i64 8, i8* %287) #2, !dbg !7762
  br label %do.cond.385, !dbg !7765

do.cond.385:                                      ; preds = %if.end.384
  br label %do.end.386, !dbg !7766

do.end.386:                                       ; preds = %do.cond.385
  br label %if.end.387, !dbg !7768

if.end.387:                                       ; preds = %do.end.386, %if.end.335
  %288 = load %struct._object*, %struct._object** %line, align 8, !dbg !7769, !tbaa !1876
  %cmp388 = icmp eq %struct._object* %288, null, !dbg !7771
  br i1 %cmp388, label %if.then.390, label %if.end.393, !dbg !7772

if.then.390:                                      ; preds = %if.end.387
  %289 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !7773, !tbaa !1876
  %ob_refcnt391 = getelementptr inbounds %struct._object, %struct._object* %289, i32 0, i32 0, !dbg !7775
  %290 = load i64, i64* %ob_refcnt391, align 8, !dbg !7776, !tbaa !1927
  %inc392 = add i64 %290, 1, !dbg !7776
  store i64 %inc392, i64* %ob_refcnt391, align 8, !dbg !7776, !tbaa !1927
  %291 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !7777, !tbaa !1876
  store %struct._object* %291, %struct._object** %line, align 8, !dbg !7778, !tbaa !1876
  br label %if.end.393, !dbg !7779

if.end.393:                                       ; preds = %if.then.390, %if.end.387
  %292 = load %struct._object*, %struct._object** %line, align 8, !dbg !7780, !tbaa !1876
  store %struct._object* %292, %struct._object** %retval, !dbg !7781
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.456, !dbg !7781

error:                                            ; preds = %cleanup.292, %cleanup.247, %if.then.364, %if.then.345, %if.then.312, %if.then.306
  br label %do.body.394, !dbg !7782

do.body.394:                                      ; preds = %error
  %293 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7783
  call void @llvm.lifetime.start(i64 8, i8* %293) #2, !dbg !7783
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1000, metadata !1880), !dbg !7785
  %294 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7786, !tbaa !1876
  store %struct._object* %294, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7785, !tbaa !1876
  %295 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7787, !tbaa !1876
  %cmp395 = icmp ne %struct._object* %295, null, !dbg !7788
  br i1 %cmp395, label %if.then.397, label %if.end.411, !dbg !7789

if.then.397:                                      ; preds = %do.body.394
  br label %do.body.398, !dbg !7790

do.body.398:                                      ; preds = %if.then.397
  %296 = bitcast %struct._object** %_py_decref_tmp399 to i8*, !dbg !7792
  call void @llvm.lifetime.start(i64 8, i8* %296) #2, !dbg !7792
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp399, metadata !1002, metadata !1880), !dbg !7794
  %297 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7795, !tbaa !1876
  store %struct._object* %297, %struct._object** %_py_decref_tmp399, align 8, !dbg !7794, !tbaa !1876
  %298 = load %struct._object*, %struct._object** %_py_decref_tmp399, align 8, !dbg !7796, !tbaa !1876
  %ob_refcnt400 = getelementptr inbounds %struct._object, %struct._object* %298, i32 0, i32 0, !dbg !7798
  %299 = load i64, i64* %ob_refcnt400, align 8, !dbg !7799, !tbaa !1927
  %dec401 = add i64 %299, -1, !dbg !7799
  store i64 %dec401, i64* %ob_refcnt400, align 8, !dbg !7799, !tbaa !1927
  %cmp402 = icmp ne i64 %dec401, 0, !dbg !7800
  br i1 %cmp402, label %if.then.404, label %if.else.405, !dbg !7801

if.then.404:                                      ; preds = %do.body.398
  br label %if.end.408, !dbg !7802

if.else.405:                                      ; preds = %do.body.398
  %300 = load %struct._object*, %struct._object** %_py_decref_tmp399, align 8, !dbg !7804, !tbaa !1876
  %ob_type406 = getelementptr inbounds %struct._object, %struct._object* %300, i32 0, i32 1, !dbg !7806
  %301 = load %struct._typeobject*, %struct._typeobject** %ob_type406, align 8, !dbg !7806, !tbaa !2195
  %tp_dealloc407 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %301, i32 0, i32 4, !dbg !7807
  %302 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc407, align 8, !dbg !7807, !tbaa !2197
  %303 = load %struct._object*, %struct._object** %_py_decref_tmp399, align 8, !dbg !7808, !tbaa !1876
  call void %302(%struct._object* %303), !dbg !7809
  br label %if.end.408

if.end.408:                                       ; preds = %if.else.405, %if.then.404
  %304 = bitcast %struct._object** %_py_decref_tmp399 to i8*, !dbg !7810
  call void @llvm.lifetime.end(i64 8, i8* %304) #2, !dbg !7810
  br label %do.cond.409, !dbg !7812

do.cond.409:                                      ; preds = %if.end.408
  br label %do.end.410, !dbg !7813

do.end.410:                                       ; preds = %do.cond.409
  br label %if.end.411, !dbg !7815

if.end.411:                                       ; preds = %do.end.410, %do.body.394
  %305 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7817
  call void @llvm.lifetime.end(i64 8, i8* %305) #2, !dbg !7817
  br label %do.cond.412, !dbg !7820

do.cond.412:                                      ; preds = %if.end.411
  br label %do.end.413, !dbg !7821

do.end.413:                                       ; preds = %do.cond.412
  br label %do.body.414, !dbg !7823

do.body.414:                                      ; preds = %do.end.413
  %306 = bitcast %struct._object** %_py_xdecref_tmp415 to i8*, !dbg !7824
  call void @llvm.lifetime.start(i64 8, i8* %306) #2, !dbg !7824
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp415, metadata !1005, metadata !1880), !dbg !7826
  %307 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7827, !tbaa !1876
  store %struct._object* %307, %struct._object** %_py_xdecref_tmp415, align 8, !dbg !7826, !tbaa !1876
  %308 = load %struct._object*, %struct._object** %_py_xdecref_tmp415, align 8, !dbg !7828, !tbaa !1876
  %cmp416 = icmp ne %struct._object* %308, null, !dbg !7829
  br i1 %cmp416, label %if.then.418, label %if.end.432, !dbg !7830

if.then.418:                                      ; preds = %do.body.414
  br label %do.body.419, !dbg !7831

do.body.419:                                      ; preds = %if.then.418
  %309 = bitcast %struct._object** %_py_decref_tmp420 to i8*, !dbg !7833
  call void @llvm.lifetime.start(i64 8, i8* %309) #2, !dbg !7833
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp420, metadata !1007, metadata !1880), !dbg !7835
  %310 = load %struct._object*, %struct._object** %_py_xdecref_tmp415, align 8, !dbg !7836, !tbaa !1876
  store %struct._object* %310, %struct._object** %_py_decref_tmp420, align 8, !dbg !7835, !tbaa !1876
  %311 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8, !dbg !7837, !tbaa !1876
  %ob_refcnt421 = getelementptr inbounds %struct._object, %struct._object* %311, i32 0, i32 0, !dbg !7839
  %312 = load i64, i64* %ob_refcnt421, align 8, !dbg !7840, !tbaa !1927
  %dec422 = add i64 %312, -1, !dbg !7840
  store i64 %dec422, i64* %ob_refcnt421, align 8, !dbg !7840, !tbaa !1927
  %cmp423 = icmp ne i64 %dec422, 0, !dbg !7841
  br i1 %cmp423, label %if.then.425, label %if.else.426, !dbg !7842

if.then.425:                                      ; preds = %do.body.419
  br label %if.end.429, !dbg !7843

if.else.426:                                      ; preds = %do.body.419
  %313 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8, !dbg !7845, !tbaa !1876
  %ob_type427 = getelementptr inbounds %struct._object, %struct._object* %313, i32 0, i32 1, !dbg !7847
  %314 = load %struct._typeobject*, %struct._typeobject** %ob_type427, align 8, !dbg !7847, !tbaa !2195
  %tp_dealloc428 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %314, i32 0, i32 4, !dbg !7848
  %315 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc428, align 8, !dbg !7848, !tbaa !2197
  %316 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8, !dbg !7849, !tbaa !1876
  call void %315(%struct._object* %316), !dbg !7850
  br label %if.end.429

if.end.429:                                       ; preds = %if.else.426, %if.then.425
  %317 = bitcast %struct._object** %_py_decref_tmp420 to i8*, !dbg !7851
  call void @llvm.lifetime.end(i64 8, i8* %317) #2, !dbg !7851
  br label %do.cond.430, !dbg !7853

do.cond.430:                                      ; preds = %if.end.429
  br label %do.end.431, !dbg !7854

do.end.431:                                       ; preds = %do.cond.430
  br label %if.end.432, !dbg !7856

if.end.432:                                       ; preds = %do.end.431, %do.body.414
  %318 = bitcast %struct._object** %_py_xdecref_tmp415 to i8*, !dbg !7858
  call void @llvm.lifetime.end(i64 8, i8* %318) #2, !dbg !7858
  br label %do.cond.433, !dbg !7859

do.cond.433:                                      ; preds = %if.end.432
  br label %do.end.434, !dbg !7860

do.end.434:                                       ; preds = %do.cond.433
  br label %do.body.435, !dbg !7862

do.body.435:                                      ; preds = %do.end.434
  %319 = bitcast %struct._object** %_py_xdecref_tmp436 to i8*, !dbg !7863
  call void @llvm.lifetime.start(i64 8, i8* %319) #2, !dbg !7863
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp436, metadata !1010, metadata !1880), !dbg !7865
  %320 = load %struct._object*, %struct._object** %line, align 8, !dbg !7866, !tbaa !1876
  store %struct._object* %320, %struct._object** %_py_xdecref_tmp436, align 8, !dbg !7865, !tbaa !1876
  %321 = load %struct._object*, %struct._object** %_py_xdecref_tmp436, align 8, !dbg !7867, !tbaa !1876
  %cmp437 = icmp ne %struct._object* %321, null, !dbg !7868
  br i1 %cmp437, label %if.then.439, label %if.end.453, !dbg !7869

if.then.439:                                      ; preds = %do.body.435
  br label %do.body.440, !dbg !7870

do.body.440:                                      ; preds = %if.then.439
  %322 = bitcast %struct._object** %_py_decref_tmp441 to i8*, !dbg !7872
  call void @llvm.lifetime.start(i64 8, i8* %322) #2, !dbg !7872
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp441, metadata !1012, metadata !1880), !dbg !7874
  %323 = load %struct._object*, %struct._object** %_py_xdecref_tmp436, align 8, !dbg !7875, !tbaa !1876
  store %struct._object* %323, %struct._object** %_py_decref_tmp441, align 8, !dbg !7874, !tbaa !1876
  %324 = load %struct._object*, %struct._object** %_py_decref_tmp441, align 8, !dbg !7876, !tbaa !1876
  %ob_refcnt442 = getelementptr inbounds %struct._object, %struct._object* %324, i32 0, i32 0, !dbg !7878
  %325 = load i64, i64* %ob_refcnt442, align 8, !dbg !7879, !tbaa !1927
  %dec443 = add i64 %325, -1, !dbg !7879
  store i64 %dec443, i64* %ob_refcnt442, align 8, !dbg !7879, !tbaa !1927
  %cmp444 = icmp ne i64 %dec443, 0, !dbg !7880
  br i1 %cmp444, label %if.then.446, label %if.else.447, !dbg !7881

if.then.446:                                      ; preds = %do.body.440
  br label %if.end.450, !dbg !7882

if.else.447:                                      ; preds = %do.body.440
  %326 = load %struct._object*, %struct._object** %_py_decref_tmp441, align 8, !dbg !7884, !tbaa !1876
  %ob_type448 = getelementptr inbounds %struct._object, %struct._object* %326, i32 0, i32 1, !dbg !7886
  %327 = load %struct._typeobject*, %struct._typeobject** %ob_type448, align 8, !dbg !7886, !tbaa !2195
  %tp_dealloc449 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %327, i32 0, i32 4, !dbg !7887
  %328 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc449, align 8, !dbg !7887, !tbaa !2197
  %329 = load %struct._object*, %struct._object** %_py_decref_tmp441, align 8, !dbg !7888, !tbaa !1876
  call void %328(%struct._object* %329), !dbg !7889
  br label %if.end.450

if.end.450:                                       ; preds = %if.else.447, %if.then.446
  %330 = bitcast %struct._object** %_py_decref_tmp441 to i8*, !dbg !7890
  call void @llvm.lifetime.end(i64 8, i8* %330) #2, !dbg !7890
  br label %do.cond.451, !dbg !7892

do.cond.451:                                      ; preds = %if.end.450
  br label %do.end.452, !dbg !7893

do.end.452:                                       ; preds = %do.cond.451
  br label %if.end.453, !dbg !7895

if.end.453:                                       ; preds = %do.end.452, %do.body.435
  %331 = bitcast %struct._object** %_py_xdecref_tmp436 to i8*, !dbg !7897
  call void @llvm.lifetime.end(i64 8, i8* %331) #2, !dbg !7897
  br label %do.cond.454, !dbg !7898

do.cond.454:                                      ; preds = %if.end.453
  br label %do.end.455, !dbg !7899

do.end.455:                                       ; preds = %do.cond.454
  store %struct._object* null, %struct._object** %retval, !dbg !7901
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.456, !dbg !7901

cleanup.456:                                      ; preds = %do.end.455, %if.end.393, %cleanup.292, %cleanup.247, %if.then.32, %cleanup
  %332 = bitcast i32* %res to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 4, i8* %332) #2, !dbg !7902
  %333 = bitcast i64* %offset_to_buffer to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 8, i8* %333) #2, !dbg !7902
  %334 = bitcast i64* %chunked to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 8, i8* %334) #2, !dbg !7902
  %335 = bitcast i64* %endpos to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 8, i8* %335) #2, !dbg !7902
  %336 = bitcast i64* %start to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 8, i8* %336) #2, !dbg !7902
  %337 = bitcast %struct._object** %remaining to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 8, i8* %337) #2, !dbg !7902
  %338 = bitcast %struct._object** %chunks to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 8, i8* %338) #2, !dbg !7902
  %339 = bitcast %struct._object** %line to i8*, !dbg !7902
  call void @llvm.lifetime.end(i64 8, i8* %339) #2, !dbg !7902
  %340 = load %struct._object*, %struct._object** %retval, !dbg !7902
  ret %struct._object* %340, !dbg !7902
}

declare i32 @_PyFileIO_closed(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_closed_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1019, metadata !1880), !dbg !7903
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1020, metadata !1880), !dbg !7904
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7905, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !7907
  %1 = load i32, i32* %ok, align 4, !dbg !7907, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !7908
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !7909

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7910, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !7914
  %3 = load i32, i32* %detached, align 4, !dbg !7914, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !7915
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !7916

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7917, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !7920
  br label %if.end, !dbg !7921

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7922, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !7925
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !7926
  br label %return, !dbg !7926

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7928, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !7929
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !7929, !tbaa !4120
  %8 = load %struct._object*, %struct._object** @_PyIO_str_closed, align 8, !dbg !7930, !tbaa !1876
  %call = call %struct._object* @PyObject_GetAttr(%struct._object* %7, %struct._object* %8), !dbg !7931
  store %struct._object* %call, %struct._object** %retval, !dbg !7932
  br label %return, !dbg !7932

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !7933
  ret %struct._object* %9, !dbg !7933
}

declare i32 @PyObject_IsTrue(%struct._object*) #3

declare %struct._object* @_PyIOBase_check_closed(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_writeflush(%struct.textio* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %pending = alloca %struct._object*, align 8
  %b = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1023, metadata !1880), !dbg !7934
  %0 = bitcast %struct._object** %pending to i8*, !dbg !7935
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7935
  call void @llvm.dbg.declare(metadata %struct._object** %pending, metadata !1024, metadata !1880), !dbg !7936
  %1 = bitcast %struct._object** %b to i8*, !dbg !7935
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7935
  call void @llvm.dbg.declare(metadata %struct._object** %b, metadata !1025, metadata !1880), !dbg !7937
  %2 = bitcast %struct._object** %ret to i8*, !dbg !7935
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7935
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !1026, metadata !1880), !dbg !7938
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7939, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 24, !dbg !7941
  %4 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !7941, !tbaa !4293
  %cmp = icmp eq %struct._object* %4, null, !dbg !7942
  br i1 %cmp, label %if.then, label %if.end, !dbg !7943

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !7944
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7944

if.end:                                           ; preds = %entry
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7945, !tbaa !1876
  %pending_bytes1 = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 24, !dbg !7946
  %6 = load %struct._object*, %struct._object** %pending_bytes1, align 8, !dbg !7946, !tbaa !4293
  store %struct._object* %6, %struct._object** %pending, align 8, !dbg !7947, !tbaa !1876
  %7 = load %struct._object*, %struct._object** %pending, align 8, !dbg !7948, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !7949
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !7950, !tbaa !1927
  %inc = add i64 %8, 1, !dbg !7950
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7950, !tbaa !1927
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7951, !tbaa !1876
  %pending_bytes_count = getelementptr inbounds %struct.textio, %struct.textio* %9, i32 0, i32 25, !dbg !7952
  store i64 0, i64* %pending_bytes_count, align 8, !dbg !7953, !tbaa !5187
  br label %do.body, !dbg !7954

do.body:                                          ; preds = %if.end
  %10 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7955
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !7955
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1027, metadata !1880), !dbg !7957
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7958, !tbaa !1876
  %pending_bytes2 = getelementptr inbounds %struct.textio, %struct.textio* %11, i32 0, i32 24, !dbg !7959
  %12 = load %struct._object*, %struct._object** %pending_bytes2, align 8, !dbg !7959, !tbaa !4293
  store %struct._object* %12, %struct._object** %_py_tmp, align 8, !dbg !7957, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7960, !tbaa !1876
  %cmp3 = icmp ne %struct._object* %13, null, !dbg !7961
  br i1 %cmp3, label %if.then.4, label %if.end.11, !dbg !7962

if.then.4:                                        ; preds = %do.body
  %14 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7963, !tbaa !1876
  %pending_bytes5 = getelementptr inbounds %struct.textio, %struct.textio* %14, i32 0, i32 24, !dbg !7965
  store %struct._object* null, %struct._object** %pending_bytes5, align 8, !dbg !7966, !tbaa !4293
  br label %do.body.6, !dbg !7967

do.body.6:                                        ; preds = %if.then.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7968
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !7968
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1029, metadata !1880), !dbg !7970
  %16 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7971, !tbaa !1876
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !7970, !tbaa !1876
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7972, !tbaa !1876
  %ob_refcnt7 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !7974
  %18 = load i64, i64* %ob_refcnt7, align 8, !dbg !7975, !tbaa !1927
  %dec = add i64 %18, -1, !dbg !7975
  store i64 %dec, i64* %ob_refcnt7, align 8, !dbg !7975, !tbaa !1927
  %cmp8 = icmp ne i64 %dec, 0, !dbg !7976
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !7977

if.then.9:                                        ; preds = %do.body.6
  br label %if.end.10, !dbg !7978

if.else:                                          ; preds = %do.body.6
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7980, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !7982
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7982, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !7983
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7983, !tbaa !2197
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7984, !tbaa !1876
  call void %21(%struct._object* %22), !dbg !7985
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7986
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !7986
  br label %do.cond, !dbg !7988

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !7989

do.end:                                           ; preds = %do.cond
  br label %if.end.11, !dbg !7991

if.end.11:                                        ; preds = %do.end, %do.body
  %24 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7993
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !7993
  br label %do.cond.12, !dbg !7996

do.cond.12:                                       ; preds = %if.end.11
  br label %do.end.13, !dbg !7997

do.end.13:                                        ; preds = %do.cond.12
  %25 = load %struct._object*, %struct._object** @_PyIO_empty_bytes, align 8, !dbg !7999, !tbaa !1876
  %26 = load %struct._object*, %struct._object** %pending, align 8, !dbg !8000, !tbaa !1876
  %call = call %struct._object* @_PyBytes_Join(%struct._object* %25, %struct._object* %26), !dbg !8001
  store %struct._object* %call, %struct._object** %b, align 8, !dbg !8002, !tbaa !1876
  br label %do.body.14, !dbg !8003

do.body.14:                                       ; preds = %do.end.13
  %27 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !8004
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !8004
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1033, metadata !1880), !dbg !8006
  %28 = load %struct._object*, %struct._object** %pending, align 8, !dbg !8007, !tbaa !1876
  store %struct._object* %28, %struct._object** %_py_decref_tmp15, align 8, !dbg !8006, !tbaa !1876
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8008, !tbaa !1876
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !8010
  %30 = load i64, i64* %ob_refcnt16, align 8, !dbg !8011, !tbaa !1927
  %dec17 = add i64 %30, -1, !dbg !8011
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !8011, !tbaa !1927
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !8012
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !8013

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !8014

if.else.20:                                       ; preds = %do.body.14
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8016, !tbaa !1876
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !8018
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !8018, !tbaa !2195
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !8019
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !8019, !tbaa !2197
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8020, !tbaa !1876
  call void %33(%struct._object* %34), !dbg !8021
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %35 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !8022
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !8022
  br label %do.cond.24, !dbg !8024

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !8025

do.end.25:                                        ; preds = %do.cond.24
  %36 = load %struct._object*, %struct._object** %b, align 8, !dbg !8027, !tbaa !1876
  %cmp26 = icmp eq %struct._object* %36, null, !dbg !8029
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !8030

if.then.27:                                       ; preds = %do.end.25
  store i32 -1, i32* %retval, !dbg !8031
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8031

if.end.28:                                        ; preds = %do.end.25
  store %struct._object* null, %struct._object** %ret, align 8, !dbg !8032, !tbaa !1876
  br label %do.body.29, !dbg !8033

do.body.29:                                       ; preds = %land.end, %if.end.28
  %37 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8034, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %37, i32 0, i32 4, !dbg !8036
  %38 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8036, !tbaa !4120
  %39 = load %struct._object*, %struct._object** @_PyIO_str_write, align 8, !dbg !8037, !tbaa !1876
  %40 = load %struct._object*, %struct._object** %b, align 8, !dbg !8038, !tbaa !1876
  %call30 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %38, %struct._object* %39, %struct._object* %40, i8* null), !dbg !8039
  store %struct._object* %call30, %struct._object** %ret, align 8, !dbg !8040, !tbaa !1876
  br label %do.cond.31, !dbg !8041

do.cond.31:                                       ; preds = %do.body.29
  %41 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8042, !tbaa !1876
  %cmp32 = icmp eq %struct._object* %41, null, !dbg !8044
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !8045

land.rhs:                                         ; preds = %do.cond.31
  %call33 = call i32 @_PyIO_trap_eintr(), !dbg !8046
  %tobool = icmp ne i32 %call33, 0, !dbg !8045
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond.31
  %42 = phi i1 [ false, %do.cond.31 ], [ %tobool, %land.rhs ]
  br i1 %42, label %do.body.29, label %do.end.34, !dbg !8048

do.end.34:                                        ; preds = %land.end
  br label %do.body.35, !dbg !8050

do.body.35:                                       ; preds = %do.end.34
  %43 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !8051
  call void @llvm.lifetime.start(i64 8, i8* %43) #2, !dbg !8051
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !1035, metadata !1880), !dbg !8053
  %44 = load %struct._object*, %struct._object** %b, align 8, !dbg !8054, !tbaa !1876
  store %struct._object* %44, %struct._object** %_py_decref_tmp36, align 8, !dbg !8053, !tbaa !1876
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !8055, !tbaa !1876
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !8057
  %46 = load i64, i64* %ob_refcnt37, align 8, !dbg !8058, !tbaa !1927
  %dec38 = add i64 %46, -1, !dbg !8058
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !8058, !tbaa !1927
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !8059
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !8060

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !8061

if.else.41:                                       ; preds = %do.body.35
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !8063, !tbaa !1876
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !8065
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !8065, !tbaa !2195
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !8066
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !8066, !tbaa !2197
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !8067, !tbaa !1876
  call void %49(%struct._object* %50), !dbg !8068
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %51 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !8069
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !8069
  br label %do.cond.45, !dbg !8070

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !8071

do.end.46:                                        ; preds = %do.cond.45
  %52 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8073, !tbaa !1876
  %cmp47 = icmp eq %struct._object* %52, null, !dbg !8075
  br i1 %cmp47, label %if.then.48, label %if.end.49, !dbg !8076

if.then.48:                                       ; preds = %do.end.46
  store i32 -1, i32* %retval, !dbg !8077
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8077

if.end.49:                                        ; preds = %do.end.46
  br label %do.body.50, !dbg !8078

do.body.50:                                       ; preds = %if.end.49
  %53 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !8079
  call void @llvm.lifetime.start(i64 8, i8* %53) #2, !dbg !8079
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !1037, metadata !1880), !dbg !8081
  %54 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8082, !tbaa !1876
  store %struct._object* %54, %struct._object** %_py_decref_tmp51, align 8, !dbg !8081, !tbaa !1876
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !8083, !tbaa !1876
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !8085
  %56 = load i64, i64* %ob_refcnt52, align 8, !dbg !8086, !tbaa !1927
  %dec53 = add i64 %56, -1, !dbg !8086
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !8086, !tbaa !1927
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !8087
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !8088

if.then.55:                                       ; preds = %do.body.50
  br label %if.end.59, !dbg !8089

if.else.56:                                       ; preds = %do.body.50
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !8091, !tbaa !1876
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !8093
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !8093, !tbaa !2195
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !8094
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !8094, !tbaa !2197
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !8095, !tbaa !1876
  call void %59(%struct._object* %60), !dbg !8096
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %61 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !8097
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !8097
  br label %do.cond.60, !dbg !8098

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !8099

do.end.61:                                        ; preds = %do.cond.60
  store i32 0, i32* %retval, !dbg !8101
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8101

cleanup:                                          ; preds = %do.end.61, %if.then.48, %if.then.27, %if.then
  %62 = bitcast %struct._object** %ret to i8*, !dbg !8102
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !8102
  %63 = bitcast %struct._object** %b to i8*, !dbg !8102
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !8102
  %64 = bitcast %struct._object** %pending to i8*, !dbg !8102
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !8102
  %65 = load i32, i32* %retval, !dbg !8102
  ret i32 %65, !dbg !8102
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_read_chunk(%struct.textio* %self, i64 %size_hint) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %size_hint.addr = alloca i64, align 8
  %dec_buffer = alloca %struct._object*, align 8
  %dec_flags = alloca %struct._object*, align 8
  %input_chunk = alloca %struct._object*, align 8
  %decoded_chars = alloca %struct._object*, align 8
  %chunk_size = alloca %struct._object*, align 8
  %nbytes = alloca i64, align 8
  %nchars = alloca i64, align 8
  %eof = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %state = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  %next_input = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  %_py_decref_tmp150 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp168 = alloca %struct._object*, align 8
  %_py_decref_tmp190 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp209 = alloca %struct._object*, align 8
  %_py_xdecref_tmp225 = alloca %struct._object*, align 8
  %_py_decref_tmp230 = alloca %struct._object*, align 8
  %_py_xdecref_tmp246 = alloca %struct._object*, align 8
  %_py_decref_tmp251 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1043, metadata !1880), !dbg !8103
  store i64 %size_hint, i64* %size_hint.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i64* %size_hint.addr, metadata !1044, metadata !1880), !dbg !8104
  %0 = bitcast %struct._object** %dec_buffer to i8*, !dbg !8105
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8105
  call void @llvm.dbg.declare(metadata %struct._object** %dec_buffer, metadata !1045, metadata !1880), !dbg !8106
  store %struct._object* null, %struct._object** %dec_buffer, align 8, !dbg !8106, !tbaa !1876
  %1 = bitcast %struct._object** %dec_flags to i8*, !dbg !8107
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8107
  call void @llvm.dbg.declare(metadata %struct._object** %dec_flags, metadata !1046, metadata !1880), !dbg !8108
  store %struct._object* null, %struct._object** %dec_flags, align 8, !dbg !8108, !tbaa !1876
  %2 = bitcast %struct._object** %input_chunk to i8*, !dbg !8109
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8109
  call void @llvm.dbg.declare(metadata %struct._object** %input_chunk, metadata !1047, metadata !1880), !dbg !8110
  store %struct._object* null, %struct._object** %input_chunk, align 8, !dbg !8110, !tbaa !1876
  %3 = bitcast %struct._object** %decoded_chars to i8*, !dbg !8111
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8111
  call void @llvm.dbg.declare(metadata %struct._object** %decoded_chars, metadata !1048, metadata !1880), !dbg !8112
  %4 = bitcast %struct._object** %chunk_size to i8*, !dbg !8111
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8111
  call void @llvm.dbg.declare(metadata %struct._object** %chunk_size, metadata !1049, metadata !1880), !dbg !8113
  %5 = bitcast i64* %nbytes to i8*, !dbg !8114
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8114
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !1050, metadata !1880), !dbg !8115
  %6 = bitcast i64* %nchars to i8*, !dbg !8114
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !8114
  call void @llvm.dbg.declare(metadata i64* %nchars, metadata !1051, metadata !1880), !dbg !8116
  %7 = bitcast i32* %eof to i8*, !dbg !8117
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !8117
  call void @llvm.dbg.declare(metadata i32* %eof, metadata !1052, metadata !1880), !dbg !8118
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8119, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 7, !dbg !8121
  %9 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !8121, !tbaa !4206
  %cmp = icmp eq %struct._object* %9, null, !dbg !8122
  br i1 %cmp, label %if.then, label %if.end, !dbg !8123

if.then:                                          ; preds = %entry
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0)), !dbg !8124
  store i32 -1, i32* %retval, !dbg !8126
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.266, !dbg !8126

if.end:                                           ; preds = %entry
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8127, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %10, i32 0, i32 18, !dbg !8128
  %11 = load i8, i8* %telling, align 1, !dbg !8128, !tbaa !4517
  %tobool = icmp ne i8 %11, 0, !dbg !8127
  br i1 %tobool, label %if.then.1, label %if.end.29, !dbg !8129

if.then.1:                                        ; preds = %if.end
  %12 = bitcast %struct._object** %state to i8*, !dbg !8130
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !8130
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !1053, metadata !1880), !dbg !8131
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8132, !tbaa !1876
  %decoder2 = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 7, !dbg !8133
  %14 = load %struct._object*, %struct._object** %decoder2, align 8, !dbg !8133, !tbaa !4206
  %15 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !8134, !tbaa !1876
  %call3 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %14, %struct._object* %15, i8* null), !dbg !8135
  store %struct._object* %call3, %struct._object** %state, align 8, !dbg !8131, !tbaa !1876
  %16 = load %struct._object*, %struct._object** %state, align 8, !dbg !8136, !tbaa !1876
  %cmp4 = icmp eq %struct._object* %16, null, !dbg !8138
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !8139

if.then.5:                                        ; preds = %if.then.1
  store i32 -1, i32* %retval, !dbg !8140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8140

if.end.6:                                         ; preds = %if.then.1
  %17 = load %struct._object*, %struct._object** %state, align 8, !dbg !8141, !tbaa !1876
  %call7 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), %struct._object** %dec_buffer, %struct._object** %dec_flags), !dbg !8142
  %cmp8 = icmp slt i32 %call7, 0, !dbg !8143
  br i1 %cmp8, label %if.then.9, label %if.end.13, !dbg !8144

if.then.9:                                        ; preds = %if.end.6
  br label %do.body, !dbg !8145

do.body:                                          ; preds = %if.then.9
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8146
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !8146
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1056, metadata !1880), !dbg !8148
  %19 = load %struct._object*, %struct._object** %state, align 8, !dbg !8149, !tbaa !1876
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !8148, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8150, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !8152
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !8153, !tbaa !1927
  %dec = add i64 %21, -1, !dbg !8153
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8153, !tbaa !1927
  %cmp10 = icmp ne i64 %dec, 0, !dbg !8154
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !8155

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !8156

if.else:                                          ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8158, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !8160
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8160, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !8161
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8161, !tbaa !2197
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8162, !tbaa !1876
  call void %24(%struct._object* %25), !dbg !8163
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8164
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !8164
  br label %do.cond, !dbg !8166

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !8167

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !8169
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8169

if.end.13:                                        ; preds = %if.end.6
  %27 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8170, !tbaa !1876
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !8171
  %28 = load i64, i64* %ob_refcnt14, align 8, !dbg !8172, !tbaa !1927
  %inc = add i64 %28, 1, !dbg !8172
  store i64 %inc, i64* %ob_refcnt14, align 8, !dbg !8172, !tbaa !1927
  %29 = load %struct._object*, %struct._object** %dec_flags, align 8, !dbg !8173, !tbaa !1876
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !8174
  %30 = load i64, i64* %ob_refcnt15, align 8, !dbg !8175, !tbaa !1927
  %inc16 = add i64 %30, 1, !dbg !8175
  store i64 %inc16, i64* %ob_refcnt15, align 8, !dbg !8175, !tbaa !1927
  br label %do.body.17, !dbg !8176

do.body.17:                                       ; preds = %if.end.13
  %31 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !8177
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !8177
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !1060, metadata !1880), !dbg !8179
  %32 = load %struct._object*, %struct._object** %state, align 8, !dbg !8180, !tbaa !1876
  store %struct._object* %32, %struct._object** %_py_decref_tmp18, align 8, !dbg !8179, !tbaa !1876
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !8181, !tbaa !1876
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !8183
  %34 = load i64, i64* %ob_refcnt19, align 8, !dbg !8184, !tbaa !1927
  %dec20 = add i64 %34, -1, !dbg !8184
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !8184, !tbaa !1927
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !8185
  br i1 %cmp21, label %if.then.22, label %if.else.23, !dbg !8186

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26, !dbg !8187

if.else.23:                                       ; preds = %do.body.17
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !8189, !tbaa !1876
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !8191
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !8191, !tbaa !2195
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4, !dbg !8192
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !8192, !tbaa !2197
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !8193, !tbaa !1876
  call void %37(%struct._object* %38), !dbg !8194
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %39 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !8195
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !8195
  br label %do.cond.27, !dbg !8197

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !8198

do.end.28:                                        ; preds = %do.cond.27
  store i32 0, i32* %cleanup.dest.slot, !dbg !8200
  br label %cleanup, !dbg !8200

cleanup:                                          ; preds = %do.end.28, %do.end, %if.then.5
  %40 = bitcast %struct._object** %state to i8*, !dbg !8201
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !8201
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.266 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.29, !dbg !8203

if.end.29:                                        ; preds = %cleanup.cont, %if.end
  %41 = load i64, i64* %size_hint.addr, align 8, !dbg !8204, !tbaa !1941
  %cmp30 = icmp sgt i64 %41, 0, !dbg !8206
  br i1 %cmp30, label %if.then.31, label %if.end.35, !dbg !8207

if.then.31:                                       ; preds = %if.end.29
  %42 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8208, !tbaa !1876
  %b2cratio = getelementptr inbounds %struct.textio, %struct.textio* %42, i32 0, i32 27, !dbg !8210
  %43 = load double, double* %b2cratio, align 8, !dbg !8210, !tbaa !5195
  %cmp32 = fcmp ogt double %43, 1.000000e+00, !dbg !8211
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !8212

cond.true:                                        ; preds = %if.then.31
  %44 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8213, !tbaa !1876
  %b2cratio33 = getelementptr inbounds %struct.textio, %struct.textio* %44, i32 0, i32 27, !dbg !8215
  %45 = load double, double* %b2cratio33, align 8, !dbg !8215, !tbaa !5195
  br label %cond.end, !dbg !8212

cond.false:                                       ; preds = %if.then.31
  br label %cond.end, !dbg !8216

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %45, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !8212
  %46 = load i64, i64* %size_hint.addr, align 8, !dbg !8218, !tbaa !1941
  %conv = sitofp i64 %46 to double, !dbg !8218
  %mul = fmul double %cond, %conv, !dbg !8221
  %conv34 = fptosi double %mul to i64, !dbg !8222
  store i64 %conv34, i64* %size_hint.addr, align 8, !dbg !8223, !tbaa !1941
  br label %if.end.35, !dbg !8224

if.end.35:                                        ; preds = %cond.end, %if.end.29
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8225, !tbaa !1876
  %chunk_size36 = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 3, !dbg !8226
  %48 = load i64, i64* %chunk_size36, align 8, !dbg !8226, !tbaa !5570
  %49 = load i64, i64* %size_hint.addr, align 8, !dbg !8227, !tbaa !1941
  %cmp37 = icmp sgt i64 %48, %49, !dbg !8228
  br i1 %cmp37, label %cond.true.39, label %cond.false.41, !dbg !8229

cond.true.39:                                     ; preds = %if.end.35
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8230, !tbaa !1876
  %chunk_size40 = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 3, !dbg !8232
  %51 = load i64, i64* %chunk_size40, align 8, !dbg !8232, !tbaa !5570
  br label %cond.end.42, !dbg !8229

cond.false.41:                                    ; preds = %if.end.35
  %52 = load i64, i64* %size_hint.addr, align 8, !dbg !8233, !tbaa !1941
  br label %cond.end.42, !dbg !8229

cond.end.42:                                      ; preds = %cond.false.41, %cond.true.39
  %cond43 = phi i64 [ %51, %cond.true.39 ], [ %52, %cond.false.41 ], !dbg !8229
  %call44 = call %struct._object* @PyLong_FromSsize_t(i64 %cond43), !dbg !8235
  store %struct._object* %call44, %struct._object** %chunk_size, align 8, !dbg !8238, !tbaa !1876
  %53 = load %struct._object*, %struct._object** %chunk_size, align 8, !dbg !8239, !tbaa !1876
  %cmp45 = icmp eq %struct._object* %53, null, !dbg !8241
  br i1 %cmp45, label %if.then.47, label %if.end.48, !dbg !8242

if.then.47:                                       ; preds = %cond.end.42
  br label %fail, !dbg !8243

if.end.48:                                        ; preds = %cond.end.42
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8244, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %54, i32 0, i32 4, !dbg !8245
  %55 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8245, !tbaa !4120
  %56 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8246, !tbaa !1876
  %has_read1 = getelementptr inbounds %struct.textio, %struct.textio* %56, i32 0, i32 17, !dbg !8247
  %57 = load i8, i8* %has_read1, align 1, !dbg !8247, !tbaa !6151
  %conv49 = sext i8 %57 to i32, !dbg !8246
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !8246
  br i1 %tobool50, label %cond.true.51, label %cond.false.52, !dbg !8246

cond.true.51:                                     ; preds = %if.end.48
  %58 = load %struct._object*, %struct._object** @_PyIO_str_read1, align 8, !dbg !8248, !tbaa !1876
  br label %cond.end.53, !dbg !8246

cond.false.52:                                    ; preds = %if.end.48
  %59 = load %struct._object*, %struct._object** @_PyIO_str_read, align 8, !dbg !8249, !tbaa !1876
  br label %cond.end.53, !dbg !8246

cond.end.53:                                      ; preds = %cond.false.52, %cond.true.51
  %cond54 = phi %struct._object* [ %58, %cond.true.51 ], [ %59, %cond.false.52 ], !dbg !8246
  %60 = load %struct._object*, %struct._object** %chunk_size, align 8, !dbg !8250, !tbaa !1876
  %call55 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %55, %struct._object* %cond54, %struct._object* %60, i8* null), !dbg !8251
  store %struct._object* %call55, %struct._object** %input_chunk, align 8, !dbg !8252, !tbaa !1876
  br label %do.body.56, !dbg !8253

do.body.56:                                       ; preds = %cond.end.53
  %61 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !8254
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !8254
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp57, metadata !1062, metadata !1880), !dbg !8256
  %62 = load %struct._object*, %struct._object** %chunk_size, align 8, !dbg !8257, !tbaa !1876
  store %struct._object* %62, %struct._object** %_py_decref_tmp57, align 8, !dbg !8256, !tbaa !1876
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !8258, !tbaa !1876
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !8260
  %64 = load i64, i64* %ob_refcnt58, align 8, !dbg !8261, !tbaa !1927
  %dec59 = add i64 %64, -1, !dbg !8261
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !8261, !tbaa !1927
  %cmp60 = icmp ne i64 %dec59, 0, !dbg !8262
  br i1 %cmp60, label %if.then.62, label %if.else.63, !dbg !8263

if.then.62:                                       ; preds = %do.body.56
  br label %if.end.66, !dbg !8264

if.else.63:                                       ; preds = %do.body.56
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !8266, !tbaa !1876
  %ob_type64 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !8268
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type64, align 8, !dbg !8268, !tbaa !2195
  %tp_dealloc65 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !8269
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc65, align 8, !dbg !8269, !tbaa !2197
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !8270, !tbaa !1876
  call void %67(%struct._object* %68), !dbg !8271
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.63, %if.then.62
  %69 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !8272
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !8272
  br label %do.cond.67, !dbg !8274

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !8275

do.end.68:                                        ; preds = %do.cond.67
  %70 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8277, !tbaa !1876
  %cmp69 = icmp eq %struct._object* %70, null, !dbg !8279
  br i1 %cmp69, label %if.then.71, label %if.end.72, !dbg !8280

if.then.71:                                       ; preds = %do.end.68
  br label %fail, !dbg !8281

if.end.72:                                        ; preds = %do.end.68
  %71 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8282, !tbaa !1876
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !8284
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8, !dbg !8284, !tbaa !2195
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 19, !dbg !8285
  %73 = load i64, i64* %tp_flags, align 8, !dbg !8285, !tbaa !3077
  %and = and i64 %73, 134217728, !dbg !8286
  %cmp74 = icmp ne i64 %and, 0, !dbg !8287
  br i1 %cmp74, label %if.end.83, label %if.then.76, !dbg !8288

if.then.76:                                       ; preds = %if.end.72
  %74 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8289, !tbaa !1876
  %75 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8291, !tbaa !1876
  %has_read177 = getelementptr inbounds %struct.textio, %struct.textio* %75, i32 0, i32 17, !dbg !8292
  %76 = load i8, i8* %has_read177, align 1, !dbg !8292, !tbaa !6151
  %conv78 = sext i8 %76 to i32, !dbg !8291
  %tobool79 = icmp ne i32 %conv78, 0, !dbg !8291
  %cond80 = select i1 %tobool79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), !dbg !8291
  %77 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8293, !tbaa !1876
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1, !dbg !8294
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !8294, !tbaa !2195
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 1, !dbg !8295
  %79 = load i8*, i8** %tp_name, align 8, !dbg !8295, !tbaa !3085
  %call82 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %74, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.44, i32 0, i32 0), i8* %cond80, i8* %79), !dbg !8296
  br label %fail, !dbg !8297

if.end.83:                                        ; preds = %if.end.72
  %80 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8298, !tbaa !1876
  %call84 = call i64 @PyBytes_Size(%struct._object* %80), !dbg !8299
  store i64 %call84, i64* %nbytes, align 8, !dbg !8300, !tbaa !1941
  %81 = load i64, i64* %nbytes, align 8, !dbg !8301, !tbaa !1941
  %cmp85 = icmp eq i64 %81, 0, !dbg !8302
  %conv86 = zext i1 %cmp85 to i32, !dbg !8302
  store i32 %conv86, i32* %eof, align 4, !dbg !8303, !tbaa !1883
  %82 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8304, !tbaa !1876
  %decoder87 = getelementptr inbounds %struct.textio, %struct.textio* %82, i32 0, i32 7, !dbg !8306
  %83 = load %struct._object*, %struct._object** %decoder87, align 8, !dbg !8306, !tbaa !4206
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 1, !dbg !8307
  %84 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !8307, !tbaa !2195
  %cmp89 = icmp eq %struct._typeobject* %84, @PyIncrementalNewlineDecoder_Type, !dbg !8308
  br i1 %cmp89, label %if.then.91, label %if.else.94, !dbg !8309

if.then.91:                                       ; preds = %if.end.83
  %85 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8310, !tbaa !1876
  %decoder92 = getelementptr inbounds %struct.textio, %struct.textio* %85, i32 0, i32 7, !dbg !8312
  %86 = load %struct._object*, %struct._object** %decoder92, align 8, !dbg !8312, !tbaa !4206
  %87 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8313, !tbaa !1876
  %88 = load i32, i32* %eof, align 4, !dbg !8314, !tbaa !1883
  %call93 = call %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %86, %struct._object* %87, i32 %88), !dbg !8315
  store %struct._object* %call93, %struct._object** %decoded_chars, align 8, !dbg !8316, !tbaa !1876
  br label %if.end.99, !dbg !8317

if.else.94:                                       ; preds = %if.end.83
  %89 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8318, !tbaa !1876
  %decoder95 = getelementptr inbounds %struct.textio, %struct.textio* %89, i32 0, i32 7, !dbg !8320
  %90 = load %struct._object*, %struct._object** %decoder95, align 8, !dbg !8320, !tbaa !4206
  %91 = load %struct._object*, %struct._object** @_PyIO_str_decode, align 8, !dbg !8321, !tbaa !1876
  %92 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8322, !tbaa !1876
  %93 = load i32, i32* %eof, align 4, !dbg !8323, !tbaa !1883
  %tobool96 = icmp ne i32 %93, 0, !dbg !8323
  %cond97 = select i1 %tobool96, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !8323
  %call98 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %90, %struct._object* %91, %struct._object* %92, %struct._object* %cond97, i8* null), !dbg !8324
  store %struct._object* %call98, %struct._object** %decoded_chars, align 8, !dbg !8325, !tbaa !1876
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.94, %if.then.91
  %94 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8326, !tbaa !1876
  %call100 = call i32 @check_decoded(%struct._object* %94), !dbg !8328
  %cmp101 = icmp slt i32 %call100, 0, !dbg !8329
  br i1 %cmp101, label %if.then.103, label %if.end.104, !dbg !8330

if.then.103:                                      ; preds = %if.end.99
  br label %fail, !dbg !8331

if.end.104:                                       ; preds = %if.end.99
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8332, !tbaa !1876
  %96 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8333, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %95, %struct._object* %96), !dbg !8334
  %97 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8335, !tbaa !1876
  %98 = bitcast %struct._object* %97 to %struct.PyASCIIObject*, !dbg !8336
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %98, i32 0, i32 1, !dbg !8337
  %99 = load i64, i64* %length, align 8, !dbg !8337, !tbaa !1937
  store i64 %99, i64* %nchars, align 8, !dbg !8338, !tbaa !1941
  %100 = load i64, i64* %nchars, align 8, !dbg !8339, !tbaa !1941
  %cmp105 = icmp sgt i64 %100, 0, !dbg !8341
  br i1 %cmp105, label %if.then.107, label %if.else.111, !dbg !8342

if.then.107:                                      ; preds = %if.end.104
  %101 = load i64, i64* %nbytes, align 8, !dbg !8343, !tbaa !1941
  %conv108 = sitofp i64 %101 to double, !dbg !8344
  %102 = load i64, i64* %nchars, align 8, !dbg !8345, !tbaa !1941
  %conv109 = sitofp i64 %102 to double, !dbg !8345
  %div = fdiv double %conv108, %conv109, !dbg !8346
  %103 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8347, !tbaa !1876
  %b2cratio110 = getelementptr inbounds %struct.textio, %struct.textio* %103, i32 0, i32 27, !dbg !8348
  store double %div, double* %b2cratio110, align 8, !dbg !8349, !tbaa !5195
  br label %if.end.113, !dbg !8347

if.else.111:                                      ; preds = %if.end.104
  %104 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8350, !tbaa !1876
  %b2cratio112 = getelementptr inbounds %struct.textio, %struct.textio* %104, i32 0, i32 27, !dbg !8351
  store double 0.000000e+00, double* %b2cratio112, align 8, !dbg !8352, !tbaa !5195
  br label %if.end.113

if.end.113:                                       ; preds = %if.else.111, %if.then.107
  %105 = load i64, i64* %nchars, align 8, !dbg !8353, !tbaa !1941
  %cmp114 = icmp sgt i64 %105, 0, !dbg !8355
  br i1 %cmp114, label %if.then.116, label %if.end.117, !dbg !8356

if.then.116:                                      ; preds = %if.end.113
  store i32 0, i32* %eof, align 4, !dbg !8357, !tbaa !1883
  br label %if.end.117, !dbg !8358

if.end.117:                                       ; preds = %if.then.116, %if.end.113
  %106 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8359, !tbaa !1876
  %telling118 = getelementptr inbounds %struct.textio, %struct.textio* %106, i32 0, i32 18, !dbg !8360
  %107 = load i8, i8* %telling118, align 1, !dbg !8360, !tbaa !4517
  %tobool119 = icmp ne i8 %107, 0, !dbg !8359
  br i1 %tobool119, label %if.then.120, label %if.end.188, !dbg !8361

if.then.120:                                      ; preds = %if.end.117
  %108 = bitcast %struct._object** %next_input to i8*, !dbg !8362
  call void @llvm.lifetime.start(i64 8, i8* %108) #2, !dbg !8362
  call void @llvm.dbg.declare(metadata %struct._object** %next_input, metadata !1064, metadata !1880), !dbg !8363
  %109 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8364, !tbaa !1876
  %110 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8365, !tbaa !1876
  %call121 = call %struct._object* @PyNumber_Add(%struct._object* %109, %struct._object* %110), !dbg !8366
  store %struct._object* %call121, %struct._object** %next_input, align 8, !dbg !8363, !tbaa !1876
  %111 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8367, !tbaa !1876
  %cmp122 = icmp eq %struct._object* %111, null, !dbg !8369
  br i1 %cmp122, label %if.then.124, label %if.end.125, !dbg !8370

if.then.124:                                      ; preds = %if.then.120
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !8371

if.end.125:                                       ; preds = %if.then.120
  %112 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8372, !tbaa !1876
  %ob_type126 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 1, !dbg !8373
  %113 = load %struct._typeobject*, %struct._typeobject** %ob_type126, align 8, !dbg !8373, !tbaa !2195
  %tp_flags127 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %113, i32 0, i32 19, !dbg !8374
  %114 = load i64, i64* %tp_flags127, align 8, !dbg !8374, !tbaa !3077
  %and128 = and i64 %114, 134217728, !dbg !8375
  %cmp129 = icmp ne i64 %and128, 0, !dbg !8376
  br i1 %cmp129, label %if.end.148, label %if.then.131, !dbg !8377

if.then.131:                                      ; preds = %if.end.125
  %115 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8378, !tbaa !1876
  %116 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8379, !tbaa !1876
  %ob_type132 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 1, !dbg !8380
  %117 = load %struct._typeobject*, %struct._typeobject** %ob_type132, align 8, !dbg !8380, !tbaa !2195
  %tp_name133 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %117, i32 0, i32 1, !dbg !8381
  %118 = load i8*, i8** %tp_name133, align 8, !dbg !8381, !tbaa !3085
  %call134 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %115, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.46, i32 0, i32 0), i8* %118), !dbg !8382
  br label %do.body.135, !dbg !8383

do.body.135:                                      ; preds = %if.then.131
  %119 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !8384
  call void @llvm.lifetime.start(i64 8, i8* %119) #2, !dbg !8384
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp136, metadata !1067, metadata !1880), !dbg !8386
  %120 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8387, !tbaa !1876
  store %struct._object* %120, %struct._object** %_py_decref_tmp136, align 8, !dbg !8386, !tbaa !1876
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !8388, !tbaa !1876
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 0, !dbg !8390
  %122 = load i64, i64* %ob_refcnt137, align 8, !dbg !8391, !tbaa !1927
  %dec138 = add i64 %122, -1, !dbg !8391
  store i64 %dec138, i64* %ob_refcnt137, align 8, !dbg !8391, !tbaa !1927
  %cmp139 = icmp ne i64 %dec138, 0, !dbg !8392
  br i1 %cmp139, label %if.then.141, label %if.else.142, !dbg !8393

if.then.141:                                      ; preds = %do.body.135
  br label %if.end.145, !dbg !8394

if.else.142:                                      ; preds = %do.body.135
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !8396, !tbaa !1876
  %ob_type143 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 1, !dbg !8398
  %124 = load %struct._typeobject*, %struct._typeobject** %ob_type143, align 8, !dbg !8398, !tbaa !2195
  %tp_dealloc144 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %124, i32 0, i32 4, !dbg !8399
  %125 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc144, align 8, !dbg !8399, !tbaa !2197
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !8400, !tbaa !1876
  call void %125(%struct._object* %126), !dbg !8401
  br label %if.end.145

if.end.145:                                       ; preds = %if.else.142, %if.then.141
  %127 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !8402
  call void @llvm.lifetime.end(i64 8, i8* %127) #2, !dbg !8402
  br label %do.cond.146, !dbg !8404

do.cond.146:                                      ; preds = %if.end.145
  br label %do.end.147, !dbg !8405

do.end.147:                                       ; preds = %do.cond.146
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !8407

if.end.148:                                       ; preds = %if.end.125
  br label %do.body.149, !dbg !8408

do.body.149:                                      ; preds = %if.end.148
  %128 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !8409
  call void @llvm.lifetime.start(i64 8, i8* %128) #2, !dbg !8409
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp150, metadata !1071, metadata !1880), !dbg !8411
  %129 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8412, !tbaa !1876
  store %struct._object* %129, %struct._object** %_py_decref_tmp150, align 8, !dbg !8411, !tbaa !1876
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !8413, !tbaa !1876
  %ob_refcnt151 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 0, !dbg !8415
  %131 = load i64, i64* %ob_refcnt151, align 8, !dbg !8416, !tbaa !1927
  %dec152 = add i64 %131, -1, !dbg !8416
  store i64 %dec152, i64* %ob_refcnt151, align 8, !dbg !8416, !tbaa !1927
  %cmp153 = icmp ne i64 %dec152, 0, !dbg !8417
  br i1 %cmp153, label %if.then.155, label %if.else.156, !dbg !8418

if.then.155:                                      ; preds = %do.body.149
  br label %if.end.159, !dbg !8419

if.else.156:                                      ; preds = %do.body.149
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !8421, !tbaa !1876
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 1, !dbg !8423
  %133 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8, !dbg !8423, !tbaa !2195
  %tp_dealloc158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %133, i32 0, i32 4, !dbg !8424
  %134 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc158, align 8, !dbg !8424, !tbaa !2197
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !8425, !tbaa !1876
  call void %134(%struct._object* %135), !dbg !8426
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.156, %if.then.155
  %136 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !8427
  call void @llvm.lifetime.end(i64 8, i8* %136) #2, !dbg !8427
  br label %do.cond.160, !dbg !8429

do.cond.160:                                      ; preds = %if.end.159
  br label %do.end.161, !dbg !8430

do.end.161:                                       ; preds = %do.cond.160
  br label %do.body.162, !dbg !8432

do.body.162:                                      ; preds = %do.end.161
  %137 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8433
  call void @llvm.lifetime.start(i64 8, i8* %137) #2, !dbg !8433
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1073, metadata !1880), !dbg !8435
  %138 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8436, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %138, i32 0, i32 26, !dbg !8437
  %139 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !8437, !tbaa !4322
  store %struct._object* %139, %struct._object** %_py_tmp, align 8, !dbg !8435, !tbaa !1876
  %140 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8438, !tbaa !1876
  %cmp163 = icmp ne %struct._object* %140, null, !dbg !8439
  br i1 %cmp163, label %if.then.165, label %if.end.180, !dbg !8440

if.then.165:                                      ; preds = %do.body.162
  %141 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8441, !tbaa !1876
  %snapshot166 = getelementptr inbounds %struct.textio, %struct.textio* %141, i32 0, i32 26, !dbg !8443
  store %struct._object* null, %struct._object** %snapshot166, align 8, !dbg !8444, !tbaa !4322
  br label %do.body.167, !dbg !8445

do.body.167:                                      ; preds = %if.then.165
  %142 = bitcast %struct._object** %_py_decref_tmp168 to i8*, !dbg !8446
  call void @llvm.lifetime.start(i64 8, i8* %142) #2, !dbg !8446
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp168, metadata !1075, metadata !1880), !dbg !8448
  %143 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8449, !tbaa !1876
  store %struct._object* %143, %struct._object** %_py_decref_tmp168, align 8, !dbg !8448, !tbaa !1876
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp168, align 8, !dbg !8450, !tbaa !1876
  %ob_refcnt169 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0, !dbg !8452
  %145 = load i64, i64* %ob_refcnt169, align 8, !dbg !8453, !tbaa !1927
  %dec170 = add i64 %145, -1, !dbg !8453
  store i64 %dec170, i64* %ob_refcnt169, align 8, !dbg !8453, !tbaa !1927
  %cmp171 = icmp ne i64 %dec170, 0, !dbg !8454
  br i1 %cmp171, label %if.then.173, label %if.else.174, !dbg !8455

if.then.173:                                      ; preds = %do.body.167
  br label %if.end.177, !dbg !8456

if.else.174:                                      ; preds = %do.body.167
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp168, align 8, !dbg !8458, !tbaa !1876
  %ob_type175 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1, !dbg !8460
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type175, align 8, !dbg !8460, !tbaa !2195
  %tp_dealloc176 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4, !dbg !8461
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc176, align 8, !dbg !8461, !tbaa !2197
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp168, align 8, !dbg !8462, !tbaa !1876
  call void %148(%struct._object* %149), !dbg !8463
  br label %if.end.177

if.end.177:                                       ; preds = %if.else.174, %if.then.173
  %150 = bitcast %struct._object** %_py_decref_tmp168 to i8*, !dbg !8464
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !8464
  br label %do.cond.178, !dbg !8466

do.cond.178:                                      ; preds = %if.end.177
  br label %do.end.179, !dbg !8467

do.end.179:                                       ; preds = %do.cond.178
  br label %if.end.180, !dbg !8469

if.end.180:                                       ; preds = %do.end.179, %do.body.162
  %151 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8471
  call void @llvm.lifetime.end(i64 8, i8* %151) #2, !dbg !8471
  br label %do.cond.181, !dbg !8474

do.cond.181:                                      ; preds = %if.end.180
  br label %do.end.182, !dbg !8475

do.end.182:                                       ; preds = %do.cond.181
  %152 = load %struct._object*, %struct._object** %dec_flags, align 8, !dbg !8477, !tbaa !1876
  %153 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8478, !tbaa !1876
  %call183 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), %struct._object* %152, %struct._object* %153), !dbg !8479
  %154 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8480, !tbaa !1876
  %snapshot184 = getelementptr inbounds %struct.textio, %struct.textio* %154, i32 0, i32 26, !dbg !8481
  store %struct._object* %call183, %struct._object** %snapshot184, align 8, !dbg !8482, !tbaa !4322
  store i32 0, i32* %cleanup.dest.slot, !dbg !8483
  br label %cleanup.185, !dbg !8483

cleanup.185:                                      ; preds = %do.end.147, %if.then.124, %do.end.182
  %155 = bitcast %struct._object** %next_input to i8*, !dbg !8484
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !8484
  %cleanup.dest.186 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.186, label %cleanup.266 [
    i32 0, label %cleanup.cont.187
    i32 6, label %fail
  ]

cleanup.cont.187:                                 ; preds = %cleanup.185
  br label %if.end.188, !dbg !8486

if.end.188:                                       ; preds = %cleanup.cont.187, %if.end.117
  br label %do.body.189, !dbg !8487

do.body.189:                                      ; preds = %if.end.188
  %156 = bitcast %struct._object** %_py_decref_tmp190 to i8*, !dbg !8488
  call void @llvm.lifetime.start(i64 8, i8* %156) #2, !dbg !8488
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp190, metadata !1079, metadata !1880), !dbg !8490
  %157 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8491, !tbaa !1876
  store %struct._object* %157, %struct._object** %_py_decref_tmp190, align 8, !dbg !8490, !tbaa !1876
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !8492, !tbaa !1876
  %ob_refcnt191 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 0, !dbg !8494
  %159 = load i64, i64* %ob_refcnt191, align 8, !dbg !8495, !tbaa !1927
  %dec192 = add i64 %159, -1, !dbg !8495
  store i64 %dec192, i64* %ob_refcnt191, align 8, !dbg !8495, !tbaa !1927
  %cmp193 = icmp ne i64 %dec192, 0, !dbg !8496
  br i1 %cmp193, label %if.then.195, label %if.else.196, !dbg !8497

if.then.195:                                      ; preds = %do.body.189
  br label %if.end.199, !dbg !8498

if.else.196:                                      ; preds = %do.body.189
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !8500, !tbaa !1876
  %ob_type197 = getelementptr inbounds %struct._object, %struct._object* %160, i32 0, i32 1, !dbg !8502
  %161 = load %struct._typeobject*, %struct._typeobject** %ob_type197, align 8, !dbg !8502, !tbaa !2195
  %tp_dealloc198 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %161, i32 0, i32 4, !dbg !8503
  %162 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc198, align 8, !dbg !8503, !tbaa !2197
  %163 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !8504, !tbaa !1876
  call void %162(%struct._object* %163), !dbg !8505
  br label %if.end.199

if.end.199:                                       ; preds = %if.else.196, %if.then.195
  %164 = bitcast %struct._object** %_py_decref_tmp190 to i8*, !dbg !8506
  call void @llvm.lifetime.end(i64 8, i8* %164) #2, !dbg !8506
  br label %do.cond.200, !dbg !8507

do.cond.200:                                      ; preds = %if.end.199
  br label %do.end.201, !dbg !8508

do.end.201:                                       ; preds = %do.cond.200
  %165 = load i32, i32* %eof, align 4, !dbg !8510, !tbaa !1883
  %cmp202 = icmp eq i32 %165, 0, !dbg !8511
  %conv203 = zext i1 %cmp202 to i32, !dbg !8511
  store i32 %conv203, i32* %retval, !dbg !8512
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.266, !dbg !8512

fail:                                             ; preds = %cleanup.185, %if.then.103, %if.then.76, %if.then.71, %if.then.47
  br label %do.body.204, !dbg !8513

do.body.204:                                      ; preds = %fail
  %166 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8514
  call void @llvm.lifetime.start(i64 8, i8* %166) #2, !dbg !8514
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1081, metadata !1880), !dbg !8516
  %167 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8517, !tbaa !1876
  store %struct._object* %167, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8516, !tbaa !1876
  %168 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8518, !tbaa !1876
  %cmp205 = icmp ne %struct._object* %168, null, !dbg !8519
  br i1 %cmp205, label %if.then.207, label %if.end.221, !dbg !8520

if.then.207:                                      ; preds = %do.body.204
  br label %do.body.208, !dbg !8521

do.body.208:                                      ; preds = %if.then.207
  %169 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !8523
  call void @llvm.lifetime.start(i64 8, i8* %169) #2, !dbg !8523
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp209, metadata !1083, metadata !1880), !dbg !8525
  %170 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8526, !tbaa !1876
  store %struct._object* %170, %struct._object** %_py_decref_tmp209, align 8, !dbg !8525, !tbaa !1876
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !8527, !tbaa !1876
  %ob_refcnt210 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 0, !dbg !8529
  %172 = load i64, i64* %ob_refcnt210, align 8, !dbg !8530, !tbaa !1927
  %dec211 = add i64 %172, -1, !dbg !8530
  store i64 %dec211, i64* %ob_refcnt210, align 8, !dbg !8530, !tbaa !1927
  %cmp212 = icmp ne i64 %dec211, 0, !dbg !8531
  br i1 %cmp212, label %if.then.214, label %if.else.215, !dbg !8532

if.then.214:                                      ; preds = %do.body.208
  br label %if.end.218, !dbg !8533

if.else.215:                                      ; preds = %do.body.208
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !8535, !tbaa !1876
  %ob_type216 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 1, !dbg !8537
  %174 = load %struct._typeobject*, %struct._typeobject** %ob_type216, align 8, !dbg !8537, !tbaa !2195
  %tp_dealloc217 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %174, i32 0, i32 4, !dbg !8538
  %175 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc217, align 8, !dbg !8538, !tbaa !2197
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !8539, !tbaa !1876
  call void %175(%struct._object* %176), !dbg !8540
  br label %if.end.218

if.end.218:                                       ; preds = %if.else.215, %if.then.214
  %177 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !8541
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !8541
  br label %do.cond.219, !dbg !8543

do.cond.219:                                      ; preds = %if.end.218
  br label %do.end.220, !dbg !8544

do.end.220:                                       ; preds = %do.cond.219
  br label %if.end.221, !dbg !8546

if.end.221:                                       ; preds = %do.end.220, %do.body.204
  %178 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8548
  call void @llvm.lifetime.end(i64 8, i8* %178) #2, !dbg !8548
  br label %do.cond.222, !dbg !8550

do.cond.222:                                      ; preds = %if.end.221
  br label %do.end.223, !dbg !8551

do.end.223:                                       ; preds = %do.cond.222
  br label %do.body.224, !dbg !8553

do.body.224:                                      ; preds = %do.end.223
  %179 = bitcast %struct._object** %_py_xdecref_tmp225 to i8*, !dbg !8554
  call void @llvm.lifetime.start(i64 8, i8* %179) #2, !dbg !8554
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp225, metadata !1086, metadata !1880), !dbg !8556
  %180 = load %struct._object*, %struct._object** %dec_flags, align 8, !dbg !8557, !tbaa !1876
  store %struct._object* %180, %struct._object** %_py_xdecref_tmp225, align 8, !dbg !8556, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_xdecref_tmp225, align 8, !dbg !8558, !tbaa !1876
  %cmp226 = icmp ne %struct._object* %181, null, !dbg !8559
  br i1 %cmp226, label %if.then.228, label %if.end.242, !dbg !8560

if.then.228:                                      ; preds = %do.body.224
  br label %do.body.229, !dbg !8561

do.body.229:                                      ; preds = %if.then.228
  %182 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !8563
  call void @llvm.lifetime.start(i64 8, i8* %182) #2, !dbg !8563
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp230, metadata !1088, metadata !1880), !dbg !8565
  %183 = load %struct._object*, %struct._object** %_py_xdecref_tmp225, align 8, !dbg !8566, !tbaa !1876
  store %struct._object* %183, %struct._object** %_py_decref_tmp230, align 8, !dbg !8565, !tbaa !1876
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !8567, !tbaa !1876
  %ob_refcnt231 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 0, !dbg !8569
  %185 = load i64, i64* %ob_refcnt231, align 8, !dbg !8570, !tbaa !1927
  %dec232 = add i64 %185, -1, !dbg !8570
  store i64 %dec232, i64* %ob_refcnt231, align 8, !dbg !8570, !tbaa !1927
  %cmp233 = icmp ne i64 %dec232, 0, !dbg !8571
  br i1 %cmp233, label %if.then.235, label %if.else.236, !dbg !8572

if.then.235:                                      ; preds = %do.body.229
  br label %if.end.239, !dbg !8573

if.else.236:                                      ; preds = %do.body.229
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !8575, !tbaa !1876
  %ob_type237 = getelementptr inbounds %struct._object, %struct._object* %186, i32 0, i32 1, !dbg !8577
  %187 = load %struct._typeobject*, %struct._typeobject** %ob_type237, align 8, !dbg !8577, !tbaa !2195
  %tp_dealloc238 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %187, i32 0, i32 4, !dbg !8578
  %188 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc238, align 8, !dbg !8578, !tbaa !2197
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !8579, !tbaa !1876
  call void %188(%struct._object* %189), !dbg !8580
  br label %if.end.239

if.end.239:                                       ; preds = %if.else.236, %if.then.235
  %190 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !8581
  call void @llvm.lifetime.end(i64 8, i8* %190) #2, !dbg !8581
  br label %do.cond.240, !dbg !8583

do.cond.240:                                      ; preds = %if.end.239
  br label %do.end.241, !dbg !8584

do.end.241:                                       ; preds = %do.cond.240
  br label %if.end.242, !dbg !8586

if.end.242:                                       ; preds = %do.end.241, %do.body.224
  %191 = bitcast %struct._object** %_py_xdecref_tmp225 to i8*, !dbg !8588
  call void @llvm.lifetime.end(i64 8, i8* %191) #2, !dbg !8588
  br label %do.cond.243, !dbg !8589

do.cond.243:                                      ; preds = %if.end.242
  br label %do.end.244, !dbg !8590

do.end.244:                                       ; preds = %do.cond.243
  br label %do.body.245, !dbg !8592

do.body.245:                                      ; preds = %do.end.244
  %192 = bitcast %struct._object** %_py_xdecref_tmp246 to i8*, !dbg !8593
  call void @llvm.lifetime.start(i64 8, i8* %192) #2, !dbg !8593
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp246, metadata !1091, metadata !1880), !dbg !8595
  %193 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8596, !tbaa !1876
  store %struct._object* %193, %struct._object** %_py_xdecref_tmp246, align 8, !dbg !8595, !tbaa !1876
  %194 = load %struct._object*, %struct._object** %_py_xdecref_tmp246, align 8, !dbg !8597, !tbaa !1876
  %cmp247 = icmp ne %struct._object* %194, null, !dbg !8598
  br i1 %cmp247, label %if.then.249, label %if.end.263, !dbg !8599

if.then.249:                                      ; preds = %do.body.245
  br label %do.body.250, !dbg !8600

do.body.250:                                      ; preds = %if.then.249
  %195 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !8602
  call void @llvm.lifetime.start(i64 8, i8* %195) #2, !dbg !8602
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp251, metadata !1093, metadata !1880), !dbg !8604
  %196 = load %struct._object*, %struct._object** %_py_xdecref_tmp246, align 8, !dbg !8605, !tbaa !1876
  store %struct._object* %196, %struct._object** %_py_decref_tmp251, align 8, !dbg !8604, !tbaa !1876
  %197 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !8606, !tbaa !1876
  %ob_refcnt252 = getelementptr inbounds %struct._object, %struct._object* %197, i32 0, i32 0, !dbg !8608
  %198 = load i64, i64* %ob_refcnt252, align 8, !dbg !8609, !tbaa !1927
  %dec253 = add i64 %198, -1, !dbg !8609
  store i64 %dec253, i64* %ob_refcnt252, align 8, !dbg !8609, !tbaa !1927
  %cmp254 = icmp ne i64 %dec253, 0, !dbg !8610
  br i1 %cmp254, label %if.then.256, label %if.else.257, !dbg !8611

if.then.256:                                      ; preds = %do.body.250
  br label %if.end.260, !dbg !8612

if.else.257:                                      ; preds = %do.body.250
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !8614, !tbaa !1876
  %ob_type258 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 1, !dbg !8616
  %200 = load %struct._typeobject*, %struct._typeobject** %ob_type258, align 8, !dbg !8616, !tbaa !2195
  %tp_dealloc259 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %200, i32 0, i32 4, !dbg !8617
  %201 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc259, align 8, !dbg !8617, !tbaa !2197
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !8618, !tbaa !1876
  call void %201(%struct._object* %202), !dbg !8619
  br label %if.end.260

if.end.260:                                       ; preds = %if.else.257, %if.then.256
  %203 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !8620
  call void @llvm.lifetime.end(i64 8, i8* %203) #2, !dbg !8620
  br label %do.cond.261, !dbg !8622

do.cond.261:                                      ; preds = %if.end.260
  br label %do.end.262, !dbg !8623

do.end.262:                                       ; preds = %do.cond.261
  br label %if.end.263, !dbg !8625

if.end.263:                                       ; preds = %do.end.262, %do.body.245
  %204 = bitcast %struct._object** %_py_xdecref_tmp246 to i8*, !dbg !8627
  call void @llvm.lifetime.end(i64 8, i8* %204) #2, !dbg !8627
  br label %do.cond.264, !dbg !8628

do.cond.264:                                      ; preds = %if.end.263
  br label %do.end.265, !dbg !8629

do.end.265:                                       ; preds = %do.cond.264
  store i32 -1, i32* %retval, !dbg !8631
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.266, !dbg !8631

cleanup.266:                                      ; preds = %do.end.265, %do.end.201, %cleanup.185, %cleanup, %if.then
  %205 = bitcast i32* %eof to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 4, i8* %205) #2, !dbg !8632
  %206 = bitcast i64* %nchars to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 8, i8* %206) #2, !dbg !8632
  %207 = bitcast i64* %nbytes to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 8, i8* %207) #2, !dbg !8632
  %208 = bitcast %struct._object** %chunk_size to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 8, i8* %208) #2, !dbg !8632
  %209 = bitcast %struct._object** %decoded_chars to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 8, i8* %209) #2, !dbg !8632
  %210 = bitcast %struct._object** %input_chunk to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !8632
  %211 = bitcast %struct._object** %dec_flags to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 8, i8* %211) #2, !dbg !8632
  %212 = bitcast %struct._object** %dec_buffer to i8*, !dbg !8632
  call void @llvm.lifetime.end(i64 8, i8* %212) #2, !dbg !8632
  %213 = load i32, i32* %retval, !dbg !8632
  ret i32 %213, !dbg !8632
}

declare i32 @_PyIO_trap_eintr() #3

; Function Attrs: nounwind uwtable
define internal void @textiowrapper_set_decoded_chars(%struct.textio* %self, %struct._object* %chars) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %chars.addr = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1100, metadata !1880), !dbg !8633
  store %struct._object* %chars, %struct._object** %chars.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %chars.addr, metadata !1101, metadata !1880), !dbg !8634
  br label %do.body, !dbg !8635

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8636
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8636
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1102, metadata !1880), !dbg !8638
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8639, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 22, !dbg !8640
  %2 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8640, !tbaa !4264
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !8638, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8641, !tbaa !1876
  %cmp = icmp ne %struct._object* %3, null, !dbg !8642
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !8643

if.then:                                          ; preds = %do.body
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8644, !tbaa !1876
  %decoded_chars1 = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 22, !dbg !8646
  store %struct._object* null, %struct._object** %decoded_chars1, align 8, !dbg !8647, !tbaa !4264
  br label %do.body.2, !dbg !8648

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8649
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8649
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1104, metadata !1880), !dbg !8651
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8652, !tbaa !1876
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !8651, !tbaa !1876
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8653, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !8655
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !8656, !tbaa !1927
  %dec = add i64 %8, -1, !dbg !8656
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8656, !tbaa !1927
  %cmp3 = icmp ne i64 %dec, 0, !dbg !8657
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !8658

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !8659

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8661, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !8663
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8663, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !8664
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8664, !tbaa !2197
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8665, !tbaa !1876
  call void %11(%struct._object* %12), !dbg !8666
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8667
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !8667
  br label %do.cond, !dbg !8669

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !8670

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !8672

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8674
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !8674
  br label %do.end.7, !dbg !8677

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct._object*, %struct._object** %chars.addr, align 8, !dbg !8678, !tbaa !1876
  %16 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8679, !tbaa !1876
  %decoded_chars8 = getelementptr inbounds %struct.textio, %struct.textio* %16, i32 0, i32 22, !dbg !8680
  store %struct._object* %15, %struct._object** %decoded_chars8, align 8, !dbg !8681, !tbaa !4264
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8682, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 23, !dbg !8683
  store i64 0, i64* %decoded_chars_used, align 8, !dbg !8684, !tbaa !5183
  ret void, !dbg !8685
}

declare %struct._object* @PyUnicode_Concat(%struct._object*, %struct._object*) #3

declare %struct._object* @PyList_New(i64) #3

declare i32 @PyList_Append(%struct._object*, %struct._object*) #3

declare %struct._object* @PyUnicode_Join(%struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_GetAttr(%struct._object*, %struct._object*) #3

declare %struct._object* @_PyBytes_Join(%struct._object*, %struct._object*) #3

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare i64 @PyBytes_Size(%struct._object*) #3

declare %struct._object* @PyNumber_Add(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_detach(%struct.textio* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %buffer = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1110, metadata !1880), !dbg !8686
  %0 = bitcast %struct._object** %buffer to i8*, !dbg !8687
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8687
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !1111, metadata !1880), !dbg !8688
  %1 = bitcast %struct._object** %res to i8*, !dbg !8687
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8687
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1112, metadata !1880), !dbg !8689
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8690, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 1, !dbg !8692
  %3 = load i32, i32* %ok, align 4, !dbg !8692, !tbaa !3900
  %cmp = icmp sle i32 %3, 0, !dbg !8693
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !8694

if.then:                                          ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8695, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 2, !dbg !8699
  %5 = load i32, i32* %detached, align 4, !dbg !8699, !tbaa !3908
  %tobool = icmp ne i32 %5, 0, !dbg !8700
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !8701

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8702, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !8705
  br label %if.end, !dbg !8706

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8707, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !8710
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !8711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8713

if.end.2:                                         ; preds = %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8714, !tbaa !1876
  %9 = bitcast %struct.textio* %8 to %struct._object*, !dbg !8715
  %10 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !8716, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %9, %struct._object* %10, i8* null), !dbg !8717
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !8718, !tbaa !1876
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !8719, !tbaa !1876
  %cmp3 = icmp eq %struct._object* %11, null, !dbg !8721
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !8722

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !8723
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8723

if.end.5:                                         ; preds = %if.end.2
  br label %do.body, !dbg !8724

do.body:                                          ; preds = %if.end.5
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8725
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !8725
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1113, metadata !1880), !dbg !8727
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !8728, !tbaa !1876
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !8727, !tbaa !1876
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8729, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !8731
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !8732, !tbaa !1927
  %dec = add i64 %15, -1, !dbg !8732
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8732, !tbaa !1927
  %cmp6 = icmp ne i64 %dec, 0, !dbg !8733
  br i1 %cmp6, label %if.then.7, label %if.else.8, !dbg !8734

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !8735

if.else.8:                                        ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8737, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8739
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8739, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !8740
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8740, !tbaa !2197
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8741, !tbaa !1876
  call void %18(%struct._object* %19), !dbg !8742
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8743
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !8743
  br label %do.cond, !dbg !8745

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !8746

do.end:                                           ; preds = %do.cond
  %21 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8748, !tbaa !1876
  %buffer10 = getelementptr inbounds %struct.textio, %struct.textio* %21, i32 0, i32 4, !dbg !8749
  %22 = load %struct._object*, %struct._object** %buffer10, align 8, !dbg !8749, !tbaa !4120
  store %struct._object* %22, %struct._object** %buffer, align 8, !dbg !8750, !tbaa !1876
  %23 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8751, !tbaa !1876
  %buffer11 = getelementptr inbounds %struct.textio, %struct.textio* %23, i32 0, i32 4, !dbg !8752
  store %struct._object* null, %struct._object** %buffer11, align 8, !dbg !8753, !tbaa !4120
  %24 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8754, !tbaa !1876
  %detached12 = getelementptr inbounds %struct.textio, %struct.textio* %24, i32 0, i32 2, !dbg !8755
  store i32 1, i32* %detached12, align 4, !dbg !8756, !tbaa !3908
  %25 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8757, !tbaa !1876
  %ok13 = getelementptr inbounds %struct.textio, %struct.textio* %25, i32 0, i32 1, !dbg !8758
  store i32 0, i32* %ok13, align 4, !dbg !8759, !tbaa !3900
  %26 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8760, !tbaa !1876
  store %struct._object* %26, %struct._object** %retval, !dbg !8761
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8761

cleanup:                                          ; preds = %do.end, %if.then.4, %if.end
  %27 = bitcast %struct._object** %res to i8*, !dbg !8762
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !8762
  %28 = bitcast %struct._object** %buffer to i8*, !dbg !8762
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !8762
  %29 = load %struct._object*, %struct._object** %retval, !dbg !8762
  ret %struct._object* %29, !dbg !8762
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_write(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %text = alloca %struct._object*, align 8
  %b = alloca %struct._object*, align 8
  %textlen = alloca i64, align 8
  %haslf = alloca i32, align 4
  %needflush = alloca i32, align 4
  %text_needflush = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %newtext = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  %_py_decref_tmp147 = alloca %struct._object*, align 8
  %_py_decref_tmp167 = alloca %struct._object*, align 8
  %_py_decref_tmp182 = alloca %struct._object*, align 8
  %_py_decref_tmp216 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp235 = alloca %struct._object*, align 8
  %_py_decref_tmp259 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1119, metadata !1880), !dbg !8763
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1120, metadata !1880), !dbg !8764
  %0 = bitcast %struct._object** %ret to i8*, !dbg !8765
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8765
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !1121, metadata !1880), !dbg !8766
  %1 = bitcast %struct._object** %text to i8*, !dbg !8767
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8767
  call void @llvm.dbg.declare(metadata %struct._object** %text, metadata !1122, metadata !1880), !dbg !8768
  %2 = bitcast %struct._object** %b to i8*, !dbg !8769
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8769
  call void @llvm.dbg.declare(metadata %struct._object** %b, metadata !1123, metadata !1880), !dbg !8770
  %3 = bitcast i64* %textlen to i8*, !dbg !8771
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8771
  call void @llvm.dbg.declare(metadata i64* %textlen, metadata !1124, metadata !1880), !dbg !8772
  %4 = bitcast i32* %haslf to i8*, !dbg !8773
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !8773
  call void @llvm.dbg.declare(metadata i32* %haslf, metadata !1125, metadata !1880), !dbg !8774
  store i32 0, i32* %haslf, align 4, !dbg !8774, !tbaa !1883
  %5 = bitcast i32* %needflush to i8*, !dbg !8775
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %needflush, metadata !1126, metadata !1880), !dbg !8776
  store i32 0, i32* %needflush, align 4, !dbg !8776, !tbaa !1883
  %6 = bitcast i32* %text_needflush to i8*, !dbg !8775
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !8775
  call void @llvm.dbg.declare(metadata i32* %text_needflush, metadata !1127, metadata !1880), !dbg !8777
  store i32 0, i32* %text_needflush, align 4, !dbg !8777, !tbaa !1883
  %7 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8778, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %7, i32 0, i32 1, !dbg !8780
  %8 = load i32, i32* %ok, align 4, !dbg !8780, !tbaa !3900
  %cmp = icmp sle i32 %8, 0, !dbg !8781
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !8782

if.then:                                          ; preds = %entry
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8783, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %9, i32 0, i32 2, !dbg !8787
  %10 = load i32, i32* %detached, align 4, !dbg !8787, !tbaa !3908
  %tobool = icmp ne i32 %10, 0, !dbg !8788
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !8789

if.then.1:                                        ; preds = %if.then
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8790, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !8793
  br label %if.end, !dbg !8794

if.else:                                          ; preds = %if.then
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8795, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !8798
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !8799
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8801

if.end.2:                                         ; preds = %entry
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8802, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), %struct._object** %text), !dbg !8804
  %tobool3 = icmp ne i32 %call, 0, !dbg !8804
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !8805

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !8806
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8806

if.end.5:                                         ; preds = %if.end.2
  %14 = load %struct._object*, %struct._object** %text, align 8, !dbg !8808, !tbaa !1876
  %15 = bitcast %struct._object* %14 to %struct.PyASCIIObject*, !dbg !8810
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %15, i32 0, i32 3, !dbg !8811
  %16 = bitcast %struct.anon* %state to i32*, !dbg !8812
  %bf.load = load i32, i32* %16, align 4, !dbg !8812
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !8812
  %bf.clear = and i32 %bf.lshr, 1, !dbg !8812
  %tobool6 = icmp ne i32 %bf.clear, 0, !dbg !8813
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !8813

cond.true:                                        ; preds = %if.end.5
  br label %cond.end, !dbg !8814

cond.false:                                       ; preds = %if.end.5
  %17 = load %struct._object*, %struct._object** %text, align 8, !dbg !8816, !tbaa !1876
  %call7 = call i32 @_PyUnicode_Ready(%struct._object* %17), !dbg !8818
  br label %cond.end, !dbg !8813

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call7, %cond.false ], !dbg !8813
  %cmp8 = icmp eq i32 %cond, -1, !dbg !8819
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !8822

if.then.9:                                        ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !8823
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8823

if.end.10:                                        ; preds = %cond.end
  br label %do.body, !dbg !8824

do.body:                                          ; preds = %if.end.10
  %18 = bitcast i32* %r to i8*, !dbg !8825
  call void @llvm.lifetime.start(i64 4, i8* %18) #2, !dbg !8825
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1128, metadata !1880), !dbg !8827
  %19 = bitcast %struct._object** %_res to i8*, !dbg !8828
  call void @llvm.lifetime.start(i64 8, i8* %19) #2, !dbg !8828
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1130, metadata !1880), !dbg !8829
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8830, !tbaa !1876
  %21 = bitcast %struct.textio* %20 to %struct._object*, !dbg !8831
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !8832
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8832, !tbaa !2195
  %cmp11 = icmp eq %struct._typeobject* %22, @PyTextIOWrapper_Type, !dbg !8833
  br i1 %cmp11, label %if.then.12, label %if.else.36, !dbg !8834

if.then.12:                                       ; preds = %do.body
  %23 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8835, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %23, i32 0, i32 28, !dbg !8837
  %24 = load %struct._object*, %struct._object** %raw, align 8, !dbg !8837, !tbaa !4380
  %cmp13 = icmp ne %struct._object* %24, null, !dbg !8838
  br i1 %cmp13, label %if.then.14, label %if.else.17, !dbg !8839

if.then.14:                                       ; preds = %if.then.12
  %25 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8840, !tbaa !1876
  %raw15 = getelementptr inbounds %struct.textio, %struct.textio* %25, i32 0, i32 28, !dbg !8842
  %26 = load %struct._object*, %struct._object** %raw15, align 8, !dbg !8842, !tbaa !4380
  %call16 = call i32 @_PyFileIO_closed(%struct._object* %26), !dbg !8843
  store i32 %call16, i32* %r, align 4, !dbg !8844, !tbaa !1883
  br label %if.end.32, !dbg !8845

if.else.17:                                       ; preds = %if.then.12
  %27 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8846, !tbaa !1876
  %call18 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %27, i8* null), !dbg !8848
  store %struct._object* %call18, %struct._object** %_res, align 8, !dbg !8849, !tbaa !1876
  %28 = load %struct._object*, %struct._object** %_res, align 8, !dbg !8850, !tbaa !1876
  %cmp19 = icmp eq %struct._object* %28, null, !dbg !8852
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !8853

if.then.20:                                       ; preds = %if.else.17
  store %struct._object* null, %struct._object** %retval, !dbg !8854
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8856

if.end.21:                                        ; preds = %if.else.17
  %29 = load %struct._object*, %struct._object** %_res, align 8, !dbg !8857, !tbaa !1876
  %call22 = call i32 @PyObject_IsTrue(%struct._object* %29), !dbg !8859
  store i32 %call22, i32* %r, align 4, !dbg !8860, !tbaa !1883
  br label %do.body.23, !dbg !8861

do.body.23:                                       ; preds = %if.end.21
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8862
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !8862
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1131, metadata !1880), !dbg !8864
  %31 = load %struct._object*, %struct._object** %_res, align 8, !dbg !8865, !tbaa !1876
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8, !dbg !8864, !tbaa !1876
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8866, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !8868
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !8869, !tbaa !1927
  %dec = add i64 %33, -1, !dbg !8869
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8869, !tbaa !1927
  %cmp24 = icmp ne i64 %dec, 0, !dbg !8870
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !8871

if.then.25:                                       ; preds = %do.body.23
  br label %if.end.28, !dbg !8872

if.else.26:                                       ; preds = %do.body.23
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8874, !tbaa !1876
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !8876
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !8876, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !8877
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8877, !tbaa !2197
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8878, !tbaa !1876
  call void %36(%struct._object* %37), !dbg !8879
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.26, %if.then.25
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8880
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !8880
  br label %do.cond, !dbg !8882

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !8883

do.end:                                           ; preds = %do.cond
  %39 = load i32, i32* %r, align 4, !dbg !8885, !tbaa !1883
  %cmp29 = icmp slt i32 %39, 0, !dbg !8888
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !8889

if.then.30:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !8890
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8892

if.end.31:                                        ; preds = %do.end
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.then.14
  %40 = load i32, i32* %r, align 4, !dbg !8893, !tbaa !1883
  %cmp33 = icmp sgt i32 %40, 0, !dbg !8896
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !8897

if.then.34:                                       ; preds = %if.end.32
  %41 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8898, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %41, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !8901
  store %struct._object* null, %struct._object** %retval, !dbg !8902
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8902

if.end.35:                                        ; preds = %if.end.32
  br label %if.end.41, !dbg !8903

if.else.36:                                       ; preds = %do.body
  %42 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8905, !tbaa !1876
  %43 = bitcast %struct.textio* %42 to %struct._object*, !dbg !8908
  %call37 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %43, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !8909
  %cmp38 = icmp eq %struct._object* %call37, null, !dbg !8910
  br i1 %cmp38, label %if.then.39, label %if.end.40, !dbg !8911

if.then.39:                                       ; preds = %if.else.36
  store %struct._object* null, %struct._object** %retval, !dbg !8912
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8914

if.end.40:                                        ; preds = %if.else.36
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !8915
  br label %cleanup, !dbg !8915

cleanup:                                          ; preds = %if.end.41, %if.then.39, %if.then.34, %if.then.30, %if.then.20
  %44 = bitcast %struct._object** %_res to i8*, !dbg !8917
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !8917
  %45 = bitcast i32* %r to i8*, !dbg !8917
  call void @llvm.lifetime.end(i64 4, i8* %45) #2, !dbg !8917
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.273 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond.43, !dbg !8923

do.cond.43:                                       ; preds = %cleanup.cont
  br label %do.end.44, !dbg !8924

do.end.44:                                        ; preds = %do.cond.43
  %46 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8926, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %46, i32 0, i32 6, !dbg !8928
  %47 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !8928, !tbaa !4177
  %cmp45 = icmp eq %struct._object* %47, null, !dbg !8929
  br i1 %cmp45, label %if.then.46, label %if.end.48, !dbg !8930

if.then.46:                                       ; preds = %do.end.44
  %call47 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i32 0, i32 0)), !dbg !8931
  store %struct._object* %call47, %struct._object** %retval, !dbg !8932
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8932

if.end.48:                                        ; preds = %do.end.44
  %48 = load %struct._object*, %struct._object** %text, align 8, !dbg !8933, !tbaa !1876
  %ob_refcnt49 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !8934
  %49 = load i64, i64* %ob_refcnt49, align 8, !dbg !8935, !tbaa !1927
  %inc = add i64 %49, 1, !dbg !8935
  store i64 %inc, i64* %ob_refcnt49, align 8, !dbg !8935, !tbaa !1927
  %50 = load %struct._object*, %struct._object** %text, align 8, !dbg !8936, !tbaa !1876
  %51 = bitcast %struct._object* %50 to %struct.PyASCIIObject*, !dbg !8937
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %51, i32 0, i32 1, !dbg !8938
  %52 = load i64, i64* %length, align 8, !dbg !8938, !tbaa !1937
  store i64 %52, i64* %textlen, align 8, !dbg !8939, !tbaa !1941
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8940, !tbaa !1876
  %writetranslate = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 15, !dbg !8942
  %54 = load i8, i8* %writetranslate, align 1, !dbg !8942, !tbaa !5628
  %conv = sext i8 %54 to i32, !dbg !8940
  %tobool50 = icmp ne i32 %conv, 0, !dbg !8940
  br i1 %tobool50, label %land.lhs.true, label %lor.lhs.false, !dbg !8943

land.lhs.true:                                    ; preds = %if.end.48
  %55 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8944, !tbaa !1876
  %writenl = getelementptr inbounds %struct.textio, %struct.textio* %55, i32 0, i32 10, !dbg !8946
  %56 = load i8*, i8** %writenl, align 8, !dbg !8946, !tbaa !5643
  %cmp51 = icmp ne i8* %56, null, !dbg !8947
  br i1 %cmp51, label %if.then.55, label %lor.lhs.false, !dbg !8948

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end.48
  %57 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8949, !tbaa !1876
  %line_buffering = getelementptr inbounds %struct.textio, %struct.textio* %57, i32 0, i32 11, !dbg !8952
  %58 = load i8, i8* %line_buffering, align 1, !dbg !8952, !tbaa !5589
  %conv53 = sext i8 %58 to i32, !dbg !8953
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !8953
  br i1 %tobool54, label %if.then.55, label %if.end.62, !dbg !8954

if.then.55:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %59 = load %struct._object*, %struct._object** %text, align 8, !dbg !8955, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %text, align 8, !dbg !8957, !tbaa !1876
  %61 = bitcast %struct._object* %60 to %struct.PyASCIIObject*, !dbg !8958
  %length56 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %61, i32 0, i32 1, !dbg !8959
  %62 = load i64, i64* %length56, align 8, !dbg !8959, !tbaa !1937
  %call57 = call i64 @PyUnicode_FindChar(%struct._object* %59, i32 10, i64 0, i64 %62, i32 1), !dbg !8960
  %cmp58 = icmp ne i64 %call57, -1, !dbg !8961
  br i1 %cmp58, label %if.then.60, label %if.end.61, !dbg !8962

if.then.60:                                       ; preds = %if.then.55
  store i32 1, i32* %haslf, align 4, !dbg !8963, !tbaa !1883
  br label %if.end.61, !dbg !8964

if.end.61:                                        ; preds = %if.then.60, %if.then.55
  br label %if.end.62, !dbg !8965

if.end.62:                                        ; preds = %if.end.61, %lor.lhs.false
  %63 = load i32, i32* %haslf, align 4, !dbg !8967, !tbaa !1883
  %tobool63 = icmp ne i32 %63, 0, !dbg !8967
  br i1 %tobool63, label %land.lhs.true.64, label %if.end.95, !dbg !8968

land.lhs.true.64:                                 ; preds = %if.end.62
  %64 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8969, !tbaa !1876
  %writetranslate65 = getelementptr inbounds %struct.textio, %struct.textio* %64, i32 0, i32 15, !dbg !8971
  %65 = load i8, i8* %writetranslate65, align 1, !dbg !8971, !tbaa !5628
  %conv66 = sext i8 %65 to i32, !dbg !8972
  %tobool67 = icmp ne i32 %conv66, 0, !dbg !8972
  br i1 %tobool67, label %land.lhs.true.68, label %if.end.95, !dbg !8973

land.lhs.true.68:                                 ; preds = %land.lhs.true.64
  %66 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8974, !tbaa !1876
  %writenl69 = getelementptr inbounds %struct.textio, %struct.textio* %66, i32 0, i32 10, !dbg !8976
  %67 = load i8*, i8** %writenl69, align 8, !dbg !8976, !tbaa !5643
  %cmp70 = icmp ne i8* %67, null, !dbg !8977
  br i1 %cmp70, label %if.then.72, label %if.end.95, !dbg !8978

if.then.72:                                       ; preds = %land.lhs.true.68
  %68 = bitcast %struct._object** %newtext to i8*, !dbg !8979
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !8979
  call void @llvm.dbg.declare(metadata %struct._object** %newtext, metadata !1137, metadata !1880), !dbg !8980
  %69 = load %struct._object*, %struct._object** %text, align 8, !dbg !8981, !tbaa !1876
  %70 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8982, !tbaa !1876
  %writenl73 = getelementptr inbounds %struct.textio, %struct.textio* %70, i32 0, i32 10, !dbg !8983
  %71 = load i8*, i8** %writenl73, align 8, !dbg !8983, !tbaa !5643
  %call74 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %69, %struct._Py_Identifier* @PyId_replace, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* %71), !dbg !8984
  store %struct._object* %call74, %struct._object** %newtext, align 8, !dbg !8980, !tbaa !1876
  br label %do.body.75, !dbg !8985

do.body.75:                                       ; preds = %if.then.72
  %72 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !8986
  call void @llvm.lifetime.start(i64 8, i8* %72) #2, !dbg !8986
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !1140, metadata !1880), !dbg !8988
  %73 = load %struct._object*, %struct._object** %text, align 8, !dbg !8989, !tbaa !1876
  store %struct._object* %73, %struct._object** %_py_decref_tmp76, align 8, !dbg !8988, !tbaa !1876
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8990, !tbaa !1876
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !8992
  %75 = load i64, i64* %ob_refcnt77, align 8, !dbg !8993, !tbaa !1927
  %dec78 = add i64 %75, -1, !dbg !8993
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !8993, !tbaa !1927
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !8994
  br i1 %cmp79, label %if.then.81, label %if.else.82, !dbg !8995

if.then.81:                                       ; preds = %do.body.75
  br label %if.end.85, !dbg !8996

if.else.82:                                       ; preds = %do.body.75
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8998, !tbaa !1876
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !9000
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !9000, !tbaa !2195
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !9001
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !9001, !tbaa !2197
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !9002, !tbaa !1876
  call void %78(%struct._object* %79), !dbg !9003
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.82, %if.then.81
  %80 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !9004
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !9004
  br label %do.cond.86, !dbg !9006

do.cond.86:                                       ; preds = %if.end.85
  br label %do.end.87, !dbg !9007

do.end.87:                                        ; preds = %do.cond.86
  %81 = load %struct._object*, %struct._object** %newtext, align 8, !dbg !9009, !tbaa !1876
  %cmp88 = icmp eq %struct._object* %81, null, !dbg !9011
  br i1 %cmp88, label %if.then.90, label %if.end.91, !dbg !9012

if.then.90:                                       ; preds = %do.end.87
  store %struct._object* null, %struct._object** %retval, !dbg !9013
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !9013

if.end.91:                                        ; preds = %do.end.87
  %82 = load %struct._object*, %struct._object** %newtext, align 8, !dbg !9014, !tbaa !1876
  store %struct._object* %82, %struct._object** %text, align 8, !dbg !9015, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !9016
  br label %cleanup.92, !dbg !9016

cleanup.92:                                       ; preds = %if.end.91, %if.then.90
  %83 = bitcast %struct._object** %newtext to i8*, !dbg !9017
  call void @llvm.lifetime.end(i64 8, i8* %83) #2, !dbg !9017
  %cleanup.dest.93 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.93, label %cleanup.273 [
    i32 0, label %cleanup.cont.94
  ]

cleanup.cont.94:                                  ; preds = %cleanup.92
  br label %if.end.95, !dbg !9018

if.end.95:                                        ; preds = %cleanup.cont.94, %land.lhs.true.68, %land.lhs.true.64, %if.end.62
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9019, !tbaa !1876
  %write_through = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 12, !dbg !9021
  %85 = load i8, i8* %write_through, align 1, !dbg !9021, !tbaa !5594
  %tobool96 = icmp ne i8 %85, 0, !dbg !9019
  br i1 %tobool96, label %if.then.97, label %if.end.98, !dbg !9022

if.then.97:                                       ; preds = %if.end.95
  store i32 1, i32* %text_needflush, align 4, !dbg !9023, !tbaa !1883
  br label %if.end.98, !dbg !9024

if.end.98:                                        ; preds = %if.then.97, %if.end.95
  %86 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9025, !tbaa !1876
  %line_buffering99 = getelementptr inbounds %struct.textio, %struct.textio* %86, i32 0, i32 11, !dbg !9027
  %87 = load i8, i8* %line_buffering99, align 1, !dbg !9027, !tbaa !5589
  %conv100 = sext i8 %87 to i32, !dbg !9025
  %tobool101 = icmp ne i32 %conv100, 0, !dbg !9025
  br i1 %tobool101, label %land.lhs.true.102, label %if.end.110, !dbg !9028

land.lhs.true.102:                                ; preds = %if.end.98
  %88 = load i32, i32* %haslf, align 4, !dbg !9029, !tbaa !1883
  %tobool103 = icmp ne i32 %88, 0, !dbg !9029
  br i1 %tobool103, label %if.then.109, label %lor.lhs.false.104, !dbg !9030

lor.lhs.false.104:                                ; preds = %land.lhs.true.102
  %89 = load %struct._object*, %struct._object** %text, align 8, !dbg !9031, !tbaa !1876
  %90 = load %struct._object*, %struct._object** %text, align 8, !dbg !9032, !tbaa !1876
  %91 = bitcast %struct._object* %90 to %struct.PyASCIIObject*, !dbg !9033
  %length105 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %91, i32 0, i32 1, !dbg !9034
  %92 = load i64, i64* %length105, align 8, !dbg !9034, !tbaa !1937
  %call106 = call i64 @PyUnicode_FindChar(%struct._object* %89, i32 13, i64 0, i64 %92, i32 1), !dbg !9035
  %cmp107 = icmp ne i64 %call106, -1, !dbg !9036
  br i1 %cmp107, label %if.then.109, label %if.end.110, !dbg !9037

if.then.109:                                      ; preds = %lor.lhs.false.104, %land.lhs.true.102
  store i32 1, i32* %needflush, align 4, !dbg !9038, !tbaa !1883
  br label %if.end.110, !dbg !9039

if.end.110:                                       ; preds = %if.then.109, %lor.lhs.false.104, %if.end.98
  %93 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9040, !tbaa !1876
  %encodefunc = getelementptr inbounds %struct.textio, %struct.textio* %93, i32 0, i32 20, !dbg !9042
  %94 = load %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)** %encodefunc, align 8, !dbg !9042, !tbaa !5191
  %cmp111 = icmp ne %struct._object* (%struct._object*, %struct._object*)* %94, null, !dbg !9043
  br i1 %cmp111, label %if.then.113, label %if.else.116, !dbg !9044

if.then.113:                                      ; preds = %if.end.110
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9045, !tbaa !1876
  %encodefunc114 = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 20, !dbg !9047
  %96 = load %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)** %encodefunc114, align 8, !dbg !9047, !tbaa !5191
  %97 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9048, !tbaa !1876
  %98 = bitcast %struct.textio* %97 to %struct._object*, !dbg !9049
  %99 = load %struct._object*, %struct._object** %text, align 8, !dbg !9050, !tbaa !1876
  %call115 = call %struct._object* %96(%struct._object* %98, %struct._object* %99), !dbg !9051
  store %struct._object* %call115, %struct._object** %b, align 8, !dbg !9052, !tbaa !1876
  %100 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9053, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %100, i32 0, i32 21, !dbg !9054
  store i8 0, i8* %encoding_start_of_stream, align 1, !dbg !9055, !tbaa !6155
  br label %if.end.119, !dbg !9056

if.else.116:                                      ; preds = %if.end.110
  %101 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9057, !tbaa !1876
  %encoder117 = getelementptr inbounds %struct.textio, %struct.textio* %101, i32 0, i32 6, !dbg !9058
  %102 = load %struct._object*, %struct._object** %encoder117, align 8, !dbg !9058, !tbaa !4177
  %103 = load %struct._object*, %struct._object** @_PyIO_str_encode, align 8, !dbg !9059, !tbaa !1876
  %104 = load %struct._object*, %struct._object** %text, align 8, !dbg !9060, !tbaa !1876
  %call118 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %102, %struct._object* %103, %struct._object* %104, i8* null), !dbg !9061
  store %struct._object* %call118, %struct._object** %b, align 8, !dbg !9062, !tbaa !1876
  br label %if.end.119

if.end.119:                                       ; preds = %if.else.116, %if.then.113
  br label %do.body.120, !dbg !9063

do.body.120:                                      ; preds = %if.end.119
  %105 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !9064
  call void @llvm.lifetime.start(i64 8, i8* %105) #2, !dbg !9064
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp121, metadata !1142, metadata !1880), !dbg !9066
  %106 = load %struct._object*, %struct._object** %text, align 8, !dbg !9067, !tbaa !1876
  store %struct._object* %106, %struct._object** %_py_decref_tmp121, align 8, !dbg !9066, !tbaa !1876
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !9068, !tbaa !1876
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0, !dbg !9070
  %108 = load i64, i64* %ob_refcnt122, align 8, !dbg !9071, !tbaa !1927
  %dec123 = add i64 %108, -1, !dbg !9071
  store i64 %dec123, i64* %ob_refcnt122, align 8, !dbg !9071, !tbaa !1927
  %cmp124 = icmp ne i64 %dec123, 0, !dbg !9072
  br i1 %cmp124, label %if.then.126, label %if.else.127, !dbg !9073

if.then.126:                                      ; preds = %do.body.120
  br label %if.end.130, !dbg !9074

if.else.127:                                      ; preds = %do.body.120
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !9076, !tbaa !1876
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 1, !dbg !9078
  %110 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8, !dbg !9078, !tbaa !2195
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %110, i32 0, i32 4, !dbg !9079
  %111 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8, !dbg !9079, !tbaa !2197
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !9080, !tbaa !1876
  call void %111(%struct._object* %112), !dbg !9081
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  %113 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !9082
  call void @llvm.lifetime.end(i64 8, i8* %113) #2, !dbg !9082
  br label %do.cond.131, !dbg !9084

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !9085

do.end.132:                                       ; preds = %do.cond.131
  %114 = load %struct._object*, %struct._object** %b, align 8, !dbg !9087, !tbaa !1876
  %cmp133 = icmp eq %struct._object* %114, null, !dbg !9089
  br i1 %cmp133, label %if.then.135, label %if.end.136, !dbg !9090

if.then.135:                                      ; preds = %do.end.132
  store %struct._object* null, %struct._object** %retval, !dbg !9091
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9091

if.end.136:                                       ; preds = %do.end.132
  %115 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9092, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %115, i32 0, i32 24, !dbg !9093
  %116 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !9093, !tbaa !4293
  %cmp137 = icmp eq %struct._object* %116, null, !dbg !9094
  br i1 %cmp137, label %if.then.139, label %if.end.160, !dbg !9095

if.then.139:                                      ; preds = %if.end.136
  %call140 = call %struct._object* @PyList_New(i64 0), !dbg !9096
  %117 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9097, !tbaa !1876
  %pending_bytes141 = getelementptr inbounds %struct.textio, %struct.textio* %117, i32 0, i32 24, !dbg !9098
  store %struct._object* %call140, %struct._object** %pending_bytes141, align 8, !dbg !9099, !tbaa !4293
  %118 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9100, !tbaa !1876
  %pending_bytes142 = getelementptr inbounds %struct.textio, %struct.textio* %118, i32 0, i32 24, !dbg !9101
  %119 = load %struct._object*, %struct._object** %pending_bytes142, align 8, !dbg !9101, !tbaa !4293
  %cmp143 = icmp eq %struct._object* %119, null, !dbg !9102
  br i1 %cmp143, label %if.then.145, label %if.end.159, !dbg !9103

if.then.145:                                      ; preds = %if.then.139
  br label %do.body.146, !dbg !9104

do.body.146:                                      ; preds = %if.then.145
  %120 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !9105
  call void @llvm.lifetime.start(i64 8, i8* %120) #2, !dbg !9105
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp147, metadata !1144, metadata !1880), !dbg !9107
  %121 = load %struct._object*, %struct._object** %b, align 8, !dbg !9108, !tbaa !1876
  store %struct._object* %121, %struct._object** %_py_decref_tmp147, align 8, !dbg !9107, !tbaa !1876
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !9109, !tbaa !1876
  %ob_refcnt148 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 0, !dbg !9111
  %123 = load i64, i64* %ob_refcnt148, align 8, !dbg !9112, !tbaa !1927
  %dec149 = add i64 %123, -1, !dbg !9112
  store i64 %dec149, i64* %ob_refcnt148, align 8, !dbg !9112, !tbaa !1927
  %cmp150 = icmp ne i64 %dec149, 0, !dbg !9113
  br i1 %cmp150, label %if.then.152, label %if.else.153, !dbg !9114

if.then.152:                                      ; preds = %do.body.146
  br label %if.end.156, !dbg !9115

if.else.153:                                      ; preds = %do.body.146
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !9117, !tbaa !1876
  %ob_type154 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 1, !dbg !9119
  %125 = load %struct._typeobject*, %struct._typeobject** %ob_type154, align 8, !dbg !9119, !tbaa !2195
  %tp_dealloc155 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %125, i32 0, i32 4, !dbg !9120
  %126 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc155, align 8, !dbg !9120, !tbaa !2197
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !9121, !tbaa !1876
  call void %126(%struct._object* %127), !dbg !9122
  br label %if.end.156

if.end.156:                                       ; preds = %if.else.153, %if.then.152
  %128 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !9123
  call void @llvm.lifetime.end(i64 8, i8* %128) #2, !dbg !9123
  br label %do.cond.157, !dbg !9125

do.cond.157:                                      ; preds = %if.end.156
  br label %do.end.158, !dbg !9126

do.end.158:                                       ; preds = %do.cond.157
  store %struct._object* null, %struct._object** %retval, !dbg !9128
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9128

if.end.159:                                       ; preds = %if.then.139
  %129 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9129, !tbaa !1876
  %pending_bytes_count = getelementptr inbounds %struct.textio, %struct.textio* %129, i32 0, i32 25, !dbg !9130
  store i64 0, i64* %pending_bytes_count, align 8, !dbg !9131, !tbaa !5187
  br label %if.end.160, !dbg !9132

if.end.160:                                       ; preds = %if.end.159, %if.end.136
  %130 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9133, !tbaa !1876
  %pending_bytes161 = getelementptr inbounds %struct.textio, %struct.textio* %130, i32 0, i32 24, !dbg !9134
  %131 = load %struct._object*, %struct._object** %pending_bytes161, align 8, !dbg !9134, !tbaa !4293
  %132 = load %struct._object*, %struct._object** %b, align 8, !dbg !9135, !tbaa !1876
  %call162 = call i32 @PyList_Append(%struct._object* %131, %struct._object* %132), !dbg !9136
  %cmp163 = icmp slt i32 %call162, 0, !dbg !9137
  br i1 %cmp163, label %if.then.165, label %if.end.179, !dbg !9138

if.then.165:                                      ; preds = %if.end.160
  br label %do.body.166, !dbg !9139

do.body.166:                                      ; preds = %if.then.165
  %133 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !9140
  call void @llvm.lifetime.start(i64 8, i8* %133) #2, !dbg !9140
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp167, metadata !1150, metadata !1880), !dbg !9142
  %134 = load %struct._object*, %struct._object** %b, align 8, !dbg !9143, !tbaa !1876
  store %struct._object* %134, %struct._object** %_py_decref_tmp167, align 8, !dbg !9142, !tbaa !1876
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !9144, !tbaa !1876
  %ob_refcnt168 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 0, !dbg !9146
  %136 = load i64, i64* %ob_refcnt168, align 8, !dbg !9147, !tbaa !1927
  %dec169 = add i64 %136, -1, !dbg !9147
  store i64 %dec169, i64* %ob_refcnt168, align 8, !dbg !9147, !tbaa !1927
  %cmp170 = icmp ne i64 %dec169, 0, !dbg !9148
  br i1 %cmp170, label %if.then.172, label %if.else.173, !dbg !9149

if.then.172:                                      ; preds = %do.body.166
  br label %if.end.176, !dbg !9150

if.else.173:                                      ; preds = %do.body.166
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !9152, !tbaa !1876
  %ob_type174 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 1, !dbg !9154
  %138 = load %struct._typeobject*, %struct._typeobject** %ob_type174, align 8, !dbg !9154, !tbaa !2195
  %tp_dealloc175 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %138, i32 0, i32 4, !dbg !9155
  %139 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc175, align 8, !dbg !9155, !tbaa !2197
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !9156, !tbaa !1876
  call void %139(%struct._object* %140), !dbg !9157
  br label %if.end.176

if.end.176:                                       ; preds = %if.else.173, %if.then.172
  %141 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !9158
  call void @llvm.lifetime.end(i64 8, i8* %141) #2, !dbg !9158
  br label %do.cond.177, !dbg !9160

do.cond.177:                                      ; preds = %if.end.176
  br label %do.end.178, !dbg !9161

do.end.178:                                       ; preds = %do.cond.177
  store %struct._object* null, %struct._object** %retval, !dbg !9163
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9163

if.end.179:                                       ; preds = %if.end.160
  %142 = load %struct._object*, %struct._object** %b, align 8, !dbg !9164, !tbaa !1876
  %143 = bitcast %struct._object* %142 to %struct.PyVarObject*, !dbg !9165
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %143, i32 0, i32 1, !dbg !9166
  %144 = load i64, i64* %ob_size, align 8, !dbg !9166, !tbaa !9167
  %145 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9168, !tbaa !1876
  %pending_bytes_count180 = getelementptr inbounds %struct.textio, %struct.textio* %145, i32 0, i32 25, !dbg !9169
  %146 = load i64, i64* %pending_bytes_count180, align 8, !dbg !9170, !tbaa !5187
  %add = add i64 %146, %144, !dbg !9170
  store i64 %add, i64* %pending_bytes_count180, align 8, !dbg !9170, !tbaa !5187
  br label %do.body.181, !dbg !9171

do.body.181:                                      ; preds = %if.end.179
  %147 = bitcast %struct._object** %_py_decref_tmp182 to i8*, !dbg !9172
  call void @llvm.lifetime.start(i64 8, i8* %147) #2, !dbg !9172
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp182, metadata !1154, metadata !1880), !dbg !9174
  %148 = load %struct._object*, %struct._object** %b, align 8, !dbg !9175, !tbaa !1876
  store %struct._object* %148, %struct._object** %_py_decref_tmp182, align 8, !dbg !9174, !tbaa !1876
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !9176, !tbaa !1876
  %ob_refcnt183 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0, !dbg !9178
  %150 = load i64, i64* %ob_refcnt183, align 8, !dbg !9179, !tbaa !1927
  %dec184 = add i64 %150, -1, !dbg !9179
  store i64 %dec184, i64* %ob_refcnt183, align 8, !dbg !9179, !tbaa !1927
  %cmp185 = icmp ne i64 %dec184, 0, !dbg !9180
  br i1 %cmp185, label %if.then.187, label %if.else.188, !dbg !9181

if.then.187:                                      ; preds = %do.body.181
  br label %if.end.191, !dbg !9182

if.else.188:                                      ; preds = %do.body.181
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !9184, !tbaa !1876
  %ob_type189 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 1, !dbg !9186
  %152 = load %struct._typeobject*, %struct._typeobject** %ob_type189, align 8, !dbg !9186, !tbaa !2195
  %tp_dealloc190 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %152, i32 0, i32 4, !dbg !9187
  %153 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc190, align 8, !dbg !9187, !tbaa !2197
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !9188, !tbaa !1876
  call void %153(%struct._object* %154), !dbg !9189
  br label %if.end.191

if.end.191:                                       ; preds = %if.else.188, %if.then.187
  %155 = bitcast %struct._object** %_py_decref_tmp182 to i8*, !dbg !9190
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !9190
  br label %do.cond.192, !dbg !9191

do.cond.192:                                      ; preds = %if.end.191
  br label %do.end.193, !dbg !9192

do.end.193:                                       ; preds = %do.cond.192
  %156 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9194, !tbaa !1876
  %pending_bytes_count194 = getelementptr inbounds %struct.textio, %struct.textio* %156, i32 0, i32 25, !dbg !9196
  %157 = load i64, i64* %pending_bytes_count194, align 8, !dbg !9196, !tbaa !5187
  %158 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9197, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %158, i32 0, i32 3, !dbg !9198
  %159 = load i64, i64* %chunk_size, align 8, !dbg !9198, !tbaa !5570
  %cmp195 = icmp sgt i64 %157, %159, !dbg !9199
  br i1 %cmp195, label %if.then.201, label %lor.lhs.false.197, !dbg !9200

lor.lhs.false.197:                                ; preds = %do.end.193
  %160 = load i32, i32* %needflush, align 4, !dbg !9201, !tbaa !1883
  %tobool198 = icmp ne i32 %160, 0, !dbg !9201
  br i1 %tobool198, label %if.then.201, label %lor.lhs.false.199, !dbg !9203

lor.lhs.false.199:                                ; preds = %lor.lhs.false.197
  %161 = load i32, i32* %text_needflush, align 4, !dbg !9204, !tbaa !1883
  %tobool200 = icmp ne i32 %161, 0, !dbg !9204
  br i1 %tobool200, label %if.then.201, label %if.end.207, !dbg !9205

if.then.201:                                      ; preds = %lor.lhs.false.199, %lor.lhs.false.197, %do.end.193
  %162 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9206, !tbaa !1876
  %call202 = call i32 @_textiowrapper_writeflush(%struct.textio* %162), !dbg !9209
  %cmp203 = icmp slt i32 %call202, 0, !dbg !9210
  br i1 %cmp203, label %if.then.205, label %if.end.206, !dbg !9211

if.then.205:                                      ; preds = %if.then.201
  store %struct._object* null, %struct._object** %retval, !dbg !9212
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9212

if.end.206:                                       ; preds = %if.then.201
  br label %if.end.207, !dbg !9213

if.end.207:                                       ; preds = %if.end.206, %lor.lhs.false.199
  %163 = load i32, i32* %needflush, align 4, !dbg !9214, !tbaa !1883
  %tobool208 = icmp ne i32 %163, 0, !dbg !9214
  br i1 %tobool208, label %if.then.209, label %if.end.228, !dbg !9215

if.then.209:                                      ; preds = %if.end.207
  %164 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9216, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %164, i32 0, i32 4, !dbg !9217
  %165 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !9217, !tbaa !4120
  %166 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !9218, !tbaa !1876
  %call210 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %165, %struct._object* %166, i8* null), !dbg !9219
  store %struct._object* %call210, %struct._object** %ret, align 8, !dbg !9220, !tbaa !1876
  %167 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9221, !tbaa !1876
  %cmp211 = icmp eq %struct._object* %167, null, !dbg !9223
  br i1 %cmp211, label %if.then.213, label %if.end.214, !dbg !9224

if.then.213:                                      ; preds = %if.then.209
  store %struct._object* null, %struct._object** %retval, !dbg !9225
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9225

if.end.214:                                       ; preds = %if.then.209
  br label %do.body.215, !dbg !9226

do.body.215:                                      ; preds = %if.end.214
  %168 = bitcast %struct._object** %_py_decref_tmp216 to i8*, !dbg !9227
  call void @llvm.lifetime.start(i64 8, i8* %168) #2, !dbg !9227
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp216, metadata !1156, metadata !1880), !dbg !9229
  %169 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9230, !tbaa !1876
  store %struct._object* %169, %struct._object** %_py_decref_tmp216, align 8, !dbg !9229, !tbaa !1876
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !9231, !tbaa !1876
  %ob_refcnt217 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 0, !dbg !9233
  %171 = load i64, i64* %ob_refcnt217, align 8, !dbg !9234, !tbaa !1927
  %dec218 = add i64 %171, -1, !dbg !9234
  store i64 %dec218, i64* %ob_refcnt217, align 8, !dbg !9234, !tbaa !1927
  %cmp219 = icmp ne i64 %dec218, 0, !dbg !9235
  br i1 %cmp219, label %if.then.221, label %if.else.222, !dbg !9236

if.then.221:                                      ; preds = %do.body.215
  br label %if.end.225, !dbg !9237

if.else.222:                                      ; preds = %do.body.215
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !9239, !tbaa !1876
  %ob_type223 = getelementptr inbounds %struct._object, %struct._object* %172, i32 0, i32 1, !dbg !9241
  %173 = load %struct._typeobject*, %struct._typeobject** %ob_type223, align 8, !dbg !9241, !tbaa !2195
  %tp_dealloc224 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %173, i32 0, i32 4, !dbg !9242
  %174 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc224, align 8, !dbg !9242, !tbaa !2197
  %175 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !9243, !tbaa !1876
  call void %174(%struct._object* %175), !dbg !9244
  br label %if.end.225

if.end.225:                                       ; preds = %if.else.222, %if.then.221
  %176 = bitcast %struct._object** %_py_decref_tmp216 to i8*, !dbg !9245
  call void @llvm.lifetime.end(i64 8, i8* %176) #2, !dbg !9245
  br label %do.cond.226, !dbg !9247

do.cond.226:                                      ; preds = %if.end.225
  br label %do.end.227, !dbg !9248

do.end.227:                                       ; preds = %do.cond.226
  br label %if.end.228, !dbg !9250

if.end.228:                                       ; preds = %do.end.227, %if.end.207
  br label %do.body.229, !dbg !9251

do.body.229:                                      ; preds = %if.end.228
  %177 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9252
  call void @llvm.lifetime.start(i64 8, i8* %177) #2, !dbg !9252
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1160, metadata !1880), !dbg !9254
  %178 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9255, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %178, i32 0, i32 26, !dbg !9256
  %179 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !9256, !tbaa !4322
  store %struct._object* %179, %struct._object** %_py_tmp, align 8, !dbg !9254, !tbaa !1876
  %180 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9257, !tbaa !1876
  %cmp230 = icmp ne %struct._object* %180, null, !dbg !9258
  br i1 %cmp230, label %if.then.232, label %if.end.247, !dbg !9259

if.then.232:                                      ; preds = %do.body.229
  %181 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9260, !tbaa !1876
  %snapshot233 = getelementptr inbounds %struct.textio, %struct.textio* %181, i32 0, i32 26, !dbg !9262
  store %struct._object* null, %struct._object** %snapshot233, align 8, !dbg !9263, !tbaa !4322
  br label %do.body.234, !dbg !9264

do.body.234:                                      ; preds = %if.then.232
  %182 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !9265
  call void @llvm.lifetime.start(i64 8, i8* %182) #2, !dbg !9265
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp235, metadata !1162, metadata !1880), !dbg !9267
  %183 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9268, !tbaa !1876
  store %struct._object* %183, %struct._object** %_py_decref_tmp235, align 8, !dbg !9267, !tbaa !1876
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !9269, !tbaa !1876
  %ob_refcnt236 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 0, !dbg !9271
  %185 = load i64, i64* %ob_refcnt236, align 8, !dbg !9272, !tbaa !1927
  %dec237 = add i64 %185, -1, !dbg !9272
  store i64 %dec237, i64* %ob_refcnt236, align 8, !dbg !9272, !tbaa !1927
  %cmp238 = icmp ne i64 %dec237, 0, !dbg !9273
  br i1 %cmp238, label %if.then.240, label %if.else.241, !dbg !9274

if.then.240:                                      ; preds = %do.body.234
  br label %if.end.244, !dbg !9275

if.else.241:                                      ; preds = %do.body.234
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !9277, !tbaa !1876
  %ob_type242 = getelementptr inbounds %struct._object, %struct._object* %186, i32 0, i32 1, !dbg !9279
  %187 = load %struct._typeobject*, %struct._typeobject** %ob_type242, align 8, !dbg !9279, !tbaa !2195
  %tp_dealloc243 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %187, i32 0, i32 4, !dbg !9280
  %188 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc243, align 8, !dbg !9280, !tbaa !2197
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !9281, !tbaa !1876
  call void %188(%struct._object* %189), !dbg !9282
  br label %if.end.244

if.end.244:                                       ; preds = %if.else.241, %if.then.240
  %190 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !9283
  call void @llvm.lifetime.end(i64 8, i8* %190) #2, !dbg !9283
  br label %do.cond.245, !dbg !9285

do.cond.245:                                      ; preds = %if.end.244
  br label %do.end.246, !dbg !9286

do.end.246:                                       ; preds = %do.cond.245
  br label %if.end.247, !dbg !9288

if.end.247:                                       ; preds = %do.end.246, %do.body.229
  %191 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9290
  call void @llvm.lifetime.end(i64 8, i8* %191) #2, !dbg !9290
  br label %do.cond.248, !dbg !9293

do.cond.248:                                      ; preds = %if.end.247
  br label %do.end.249, !dbg !9294

do.end.249:                                       ; preds = %do.cond.248
  %192 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9296, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %192, i32 0, i32 7, !dbg !9297
  %193 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !9297, !tbaa !4206
  %tobool250 = icmp ne %struct._object* %193, null, !dbg !9296
  br i1 %tobool250, label %if.then.251, label %if.end.271, !dbg !9298

if.then.251:                                      ; preds = %do.end.249
  %194 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9299, !tbaa !1876
  %decoder252 = getelementptr inbounds %struct.textio, %struct.textio* %194, i32 0, i32 7, !dbg !9300
  %195 = load %struct._object*, %struct._object** %decoder252, align 8, !dbg !9300, !tbaa !4206
  %call253 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %195, %struct._Py_Identifier* @PyId_reset, i8* null), !dbg !9301
  store %struct._object* %call253, %struct._object** %ret, align 8, !dbg !9302, !tbaa !1876
  %196 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9303, !tbaa !1876
  %cmp254 = icmp eq %struct._object* %196, null, !dbg !9305
  br i1 %cmp254, label %if.then.256, label %if.end.257, !dbg !9306

if.then.256:                                      ; preds = %if.then.251
  store %struct._object* null, %struct._object** %retval, !dbg !9307
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9307

if.end.257:                                       ; preds = %if.then.251
  br label %do.body.258, !dbg !9308

do.body.258:                                      ; preds = %if.end.257
  %197 = bitcast %struct._object** %_py_decref_tmp259 to i8*, !dbg !9309
  call void @llvm.lifetime.start(i64 8, i8* %197) #2, !dbg !9309
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp259, metadata !1166, metadata !1880), !dbg !9311
  %198 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9312, !tbaa !1876
  store %struct._object* %198, %struct._object** %_py_decref_tmp259, align 8, !dbg !9311, !tbaa !1876
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp259, align 8, !dbg !9313, !tbaa !1876
  %ob_refcnt260 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 0, !dbg !9315
  %200 = load i64, i64* %ob_refcnt260, align 8, !dbg !9316, !tbaa !1927
  %dec261 = add i64 %200, -1, !dbg !9316
  store i64 %dec261, i64* %ob_refcnt260, align 8, !dbg !9316, !tbaa !1927
  %cmp262 = icmp ne i64 %dec261, 0, !dbg !9317
  br i1 %cmp262, label %if.then.264, label %if.else.265, !dbg !9318

if.then.264:                                      ; preds = %do.body.258
  br label %if.end.268, !dbg !9319

if.else.265:                                      ; preds = %do.body.258
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp259, align 8, !dbg !9321, !tbaa !1876
  %ob_type266 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 1, !dbg !9323
  %202 = load %struct._typeobject*, %struct._typeobject** %ob_type266, align 8, !dbg !9323, !tbaa !2195
  %tp_dealloc267 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %202, i32 0, i32 4, !dbg !9324
  %203 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc267, align 8, !dbg !9324, !tbaa !2197
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp259, align 8, !dbg !9325, !tbaa !1876
  call void %203(%struct._object* %204), !dbg !9326
  br label %if.end.268

if.end.268:                                       ; preds = %if.else.265, %if.then.264
  %205 = bitcast %struct._object** %_py_decref_tmp259 to i8*, !dbg !9327
  call void @llvm.lifetime.end(i64 8, i8* %205) #2, !dbg !9327
  br label %do.cond.269, !dbg !9329

do.cond.269:                                      ; preds = %if.end.268
  br label %do.end.270, !dbg !9330

do.end.270:                                       ; preds = %do.cond.269
  br label %if.end.271, !dbg !9332

if.end.271:                                       ; preds = %do.end.270, %do.end.249
  %206 = load i64, i64* %textlen, align 8, !dbg !9333, !tbaa !1941
  %call272 = call %struct._object* @PyLong_FromSsize_t(i64 %206), !dbg !9334
  store %struct._object* %call272, %struct._object** %retval, !dbg !9335
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9335

cleanup.273:                                      ; preds = %if.end.271, %if.then.256, %if.then.213, %if.then.205, %do.end.178, %do.end.158, %if.then.135, %cleanup.92, %if.then.46, %cleanup, %if.then.9, %if.then.4, %if.end
  %207 = bitcast i32* %text_needflush to i8*, !dbg !9336
  call void @llvm.lifetime.end(i64 4, i8* %207) #2, !dbg !9336
  %208 = bitcast i32* %needflush to i8*, !dbg !9336
  call void @llvm.lifetime.end(i64 4, i8* %208) #2, !dbg !9336
  %209 = bitcast i32* %haslf to i8*, !dbg !9336
  call void @llvm.lifetime.end(i64 4, i8* %209) #2, !dbg !9336
  %210 = bitcast i64* %textlen to i8*, !dbg !9336
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !9336
  %211 = bitcast %struct._object** %b to i8*, !dbg !9336
  call void @llvm.lifetime.end(i64 8, i8* %211) #2, !dbg !9336
  %212 = bitcast %struct._object** %text to i8*, !dbg !9336
  call void @llvm.lifetime.end(i64 8, i8* %212) #2, !dbg !9336
  %213 = bitcast %struct._object** %ret to i8*, !dbg !9336
  call void @llvm.lifetime.end(i64 8, i8* %213) #2, !dbg !9336
  %214 = load %struct._object*, %struct._object** %retval, !dbg !9336
  ret %struct._object* %214, !dbg !9336
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_read(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %result = alloca %struct._object*, align 8
  %chunks = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %bytes = alloca %struct._object*, align 8
  %decoded = alloca %struct._object*, align 8
  %_py_decref_tmp65 = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp104 = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %remaining = alloca i64, align 8
  %_py_decref_tmp156 = alloca %struct._object*, align 8
  %_py_tmp182 = alloca %struct._object*, align 8
  %_py_decref_tmp186 = alloca %struct._object*, align 8
  %_py_tmp205 = alloca %struct._object*, align 8
  %_py_decref_tmp209 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %_py_xdecref_tmp247 = alloca %struct._object*, align 8
  %_py_decref_tmp251 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1172, metadata !1880), !dbg !9337
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1173, metadata !1880), !dbg !9338
  %0 = bitcast i64* %n to i8*, !dbg !9339
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9339
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1174, metadata !1880), !dbg !9340
  store i64 -1, i64* %n, align 8, !dbg !9340, !tbaa !1941
  %1 = bitcast %struct._object** %result to i8*, !dbg !9341
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9341
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1175, metadata !1880), !dbg !9342
  store %struct._object* null, %struct._object** %result, align 8, !dbg !9342, !tbaa !1876
  %2 = bitcast %struct._object** %chunks to i8*, !dbg !9341
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9341
  call void @llvm.dbg.declare(metadata %struct._object** %chunks, metadata !1176, metadata !1880), !dbg !9343
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !9343, !tbaa !1876
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9344, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 1, !dbg !9346
  %4 = load i32, i32* %ok, align 4, !dbg !9346, !tbaa !3900
  %cmp = icmp sle i32 %4, 0, !dbg !9347
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !9348

if.then:                                          ; preds = %entry
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9349, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 2, !dbg !9353
  %6 = load i32, i32* %detached, align 4, !dbg !9353, !tbaa !3908
  %tobool = icmp ne i32 %6, 0, !dbg !9354
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !9355

if.then.1:                                        ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9356, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !9359
  br label %if.end, !dbg !9360

if.else:                                          ; preds = %if.then
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9361, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !9364
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !9365
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9367

if.end.2:                                         ; preds = %entry
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9368, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i32 (%struct._object*, i8*)* @_PyIO_ConvertSsize_t, i64* %n), !dbg !9370
  %tobool3 = icmp ne i32 %call, 0, !dbg !9370
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !9371

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !9372
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9372

if.end.5:                                         ; preds = %if.end.2
  br label %do.body, !dbg !9373

do.body:                                          ; preds = %if.end.5
  %10 = bitcast i32* %r to i8*, !dbg !9374
  call void @llvm.lifetime.start(i64 4, i8* %10) #2, !dbg !9374
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1177, metadata !1880), !dbg !9376
  %11 = bitcast %struct._object** %_res to i8*, !dbg !9377
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !9377
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1179, metadata !1880), !dbg !9378
  %12 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9379, !tbaa !1876
  %13 = bitcast %struct.textio* %12 to %struct._object*, !dbg !9380
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !9381
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9381, !tbaa !2195
  %cmp6 = icmp eq %struct._typeobject* %14, @PyTextIOWrapper_Type, !dbg !9382
  br i1 %cmp6, label %if.then.7, label %if.else.31, !dbg !9383

if.then.7:                                        ; preds = %do.body
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9384, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %15, i32 0, i32 28, !dbg !9386
  %16 = load %struct._object*, %struct._object** %raw, align 8, !dbg !9386, !tbaa !4380
  %cmp8 = icmp ne %struct._object* %16, null, !dbg !9387
  br i1 %cmp8, label %if.then.9, label %if.else.12, !dbg !9388

if.then.9:                                        ; preds = %if.then.7
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9389, !tbaa !1876
  %raw10 = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 28, !dbg !9391
  %18 = load %struct._object*, %struct._object** %raw10, align 8, !dbg !9391, !tbaa !4380
  %call11 = call i32 @_PyFileIO_closed(%struct._object* %18), !dbg !9392
  store i32 %call11, i32* %r, align 4, !dbg !9393, !tbaa !1883
  br label %if.end.27, !dbg !9394

if.else.12:                                       ; preds = %if.then.7
  %19 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9395, !tbaa !1876
  %call13 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %19, i8* null), !dbg !9397
  store %struct._object* %call13, %struct._object** %_res, align 8, !dbg !9398, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %_res, align 8, !dbg !9399, !tbaa !1876
  %cmp14 = icmp eq %struct._object* %20, null, !dbg !9401
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !9402

if.then.15:                                       ; preds = %if.else.12
  store %struct._object* null, %struct._object** %retval, !dbg !9403
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9405

if.end.16:                                        ; preds = %if.else.12
  %21 = load %struct._object*, %struct._object** %_res, align 8, !dbg !9406, !tbaa !1876
  %call17 = call i32 @PyObject_IsTrue(%struct._object* %21), !dbg !9408
  store i32 %call17, i32* %r, align 4, !dbg !9409, !tbaa !1883
  br label %do.body.18, !dbg !9410

do.body.18:                                       ; preds = %if.end.16
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9411
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !9411
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1180, metadata !1880), !dbg !9413
  %23 = load %struct._object*, %struct._object** %_res, align 8, !dbg !9414, !tbaa !1876
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !9413, !tbaa !1876
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9415, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !9417
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !9418, !tbaa !1927
  %dec = add i64 %25, -1, !dbg !9418
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9418, !tbaa !1927
  %cmp19 = icmp ne i64 %dec, 0, !dbg !9419
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !9420

if.then.20:                                       ; preds = %do.body.18
  br label %if.end.23, !dbg !9421

if.else.21:                                       ; preds = %do.body.18
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9423, !tbaa !1876
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !9425
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !9425, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !9426
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9426, !tbaa !2197
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9427, !tbaa !1876
  call void %28(%struct._object* %29), !dbg !9428
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.21, %if.then.20
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9429
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !9429
  br label %do.cond, !dbg !9431

do.cond:                                          ; preds = %if.end.23
  br label %do.end, !dbg !9432

do.end:                                           ; preds = %do.cond
  %31 = load i32, i32* %r, align 4, !dbg !9434, !tbaa !1883
  %cmp24 = icmp slt i32 %31, 0, !dbg !9437
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !9438

if.then.25:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !9439
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9441

if.end.26:                                        ; preds = %do.end
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then.9
  %32 = load i32, i32* %r, align 4, !dbg !9442, !tbaa !1883
  %cmp28 = icmp sgt i32 %32, 0, !dbg !9445
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !9446

if.then.29:                                       ; preds = %if.end.27
  %33 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9447, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !9450
  store %struct._object* null, %struct._object** %retval, !dbg !9451
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9451

if.end.30:                                        ; preds = %if.end.27
  br label %if.end.36, !dbg !9452

if.else.31:                                       ; preds = %do.body
  %34 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9454, !tbaa !1876
  %35 = bitcast %struct.textio* %34 to %struct._object*, !dbg !9457
  %call32 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %35, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !9458
  %cmp33 = icmp eq %struct._object* %call32, null, !dbg !9459
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !9460

if.then.34:                                       ; preds = %if.else.31
  store %struct._object* null, %struct._object** %retval, !dbg !9461
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9463

if.end.35:                                        ; preds = %if.else.31
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.end.30
  store i32 0, i32* %cleanup.dest.slot, !dbg !9464
  br label %cleanup, !dbg !9464

cleanup:                                          ; preds = %if.end.36, %if.then.34, %if.then.29, %if.then.25, %if.then.15
  %36 = bitcast %struct._object** %_res to i8*, !dbg !9466
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !9466
  %37 = bitcast i32* %r to i8*, !dbg !9466
  call void @llvm.lifetime.end(i64 4, i8* %37) #2, !dbg !9466
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.265 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond.38, !dbg !9472

do.cond.38:                                       ; preds = %cleanup.cont
  br label %do.end.39, !dbg !9473

do.end.39:                                        ; preds = %do.cond.38
  %38 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9475, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %38, i32 0, i32 7, !dbg !9477
  %39 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !9477, !tbaa !4206
  %cmp40 = icmp eq %struct._object* %39, null, !dbg !9478
  br i1 %cmp40, label %if.then.41, label %if.end.43, !dbg !9479

if.then.41:                                       ; preds = %do.end.39
  %call42 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0)), !dbg !9480
  store %struct._object* %call42, %struct._object** %retval, !dbg !9481
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9481

if.end.43:                                        ; preds = %do.end.39
  %40 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9482, !tbaa !1876
  %call44 = call i32 @_textiowrapper_writeflush(%struct.textio* %40), !dbg !9484
  %cmp45 = icmp slt i32 %call44, 0, !dbg !9485
  br i1 %cmp45, label %if.then.46, label %if.end.47, !dbg !9486

if.then.46:                                       ; preds = %if.end.43
  store %struct._object* null, %struct._object** %retval, !dbg !9487
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9487

if.end.47:                                        ; preds = %if.end.43
  %41 = load i64, i64* %n, align 8, !dbg !9488, !tbaa !1941
  %cmp48 = icmp slt i64 %41, 0, !dbg !9489
  br i1 %cmp48, label %if.then.49, label %if.else.120, !dbg !9490

if.then.49:                                       ; preds = %if.end.47
  %42 = bitcast %struct._object** %bytes to i8*, !dbg !9491
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !9491
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !1186, metadata !1880), !dbg !9492
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9493, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %43, i32 0, i32 4, !dbg !9494
  %44 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !9494, !tbaa !4120
  %call50 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %44, %struct._Py_Identifier* @PyId_read, i8* null), !dbg !9495
  store %struct._object* %call50, %struct._object** %bytes, align 8, !dbg !9492, !tbaa !1876
  %45 = bitcast %struct._object** %decoded to i8*, !dbg !9496
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !9496
  call void @llvm.dbg.declare(metadata %struct._object** %decoded, metadata !1189, metadata !1880), !dbg !9497
  %46 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9498, !tbaa !1876
  %cmp51 = icmp eq %struct._object* %46, null, !dbg !9500
  br i1 %cmp51, label %if.then.52, label %if.end.53, !dbg !9501

if.then.52:                                       ; preds = %if.then.49
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9502

if.end.53:                                        ; preds = %if.then.49
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9503, !tbaa !1876
  %decoder54 = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 7, !dbg !9505
  %48 = load %struct._object*, %struct._object** %decoder54, align 8, !dbg !9505, !tbaa !4206
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !9506
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !9506, !tbaa !2195
  %cmp56 = icmp eq %struct._typeobject* %49, @PyIncrementalNewlineDecoder_Type, !dbg !9507
  br i1 %cmp56, label %if.then.57, label %if.else.60, !dbg !9508

if.then.57:                                       ; preds = %if.end.53
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9509, !tbaa !1876
  %decoder58 = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 7, !dbg !9510
  %51 = load %struct._object*, %struct._object** %decoder58, align 8, !dbg !9510, !tbaa !4206
  %52 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9511, !tbaa !1876
  %call59 = call %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %51, %struct._object* %52, i32 1), !dbg !9512
  store %struct._object* %call59, %struct._object** %decoded, align 8, !dbg !9513, !tbaa !1876
  br label %if.end.63, !dbg !9514

if.else.60:                                       ; preds = %if.end.53
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9515, !tbaa !1876
  %decoder61 = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 7, !dbg !9516
  %54 = load %struct._object*, %struct._object** %decoder61, align 8, !dbg !9516, !tbaa !4206
  %55 = load %struct._object*, %struct._object** @_PyIO_str_decode, align 8, !dbg !9517, !tbaa !1876
  %56 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9518, !tbaa !1876
  %call62 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %54, %struct._object* %55, %struct._object* %56, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), i8* null), !dbg !9519
  store %struct._object* %call62, %struct._object** %decoded, align 8, !dbg !9520, !tbaa !1876
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.57
  br label %do.body.64, !dbg !9521

do.body.64:                                       ; preds = %if.end.63
  %57 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !9522
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !9522
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp65, metadata !1190, metadata !1880), !dbg !9524
  %58 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9525, !tbaa !1876
  store %struct._object* %58, %struct._object** %_py_decref_tmp65, align 8, !dbg !9524, !tbaa !1876
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9526, !tbaa !1876
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0, !dbg !9528
  %60 = load i64, i64* %ob_refcnt66, align 8, !dbg !9529, !tbaa !1927
  %dec67 = add i64 %60, -1, !dbg !9529
  store i64 %dec67, i64* %ob_refcnt66, align 8, !dbg !9529, !tbaa !1927
  %cmp68 = icmp ne i64 %dec67, 0, !dbg !9530
  br i1 %cmp68, label %if.then.69, label %if.else.70, !dbg !9531

if.then.69:                                       ; preds = %do.body.64
  br label %if.end.73, !dbg !9532

if.else.70:                                       ; preds = %do.body.64
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9534, !tbaa !1876
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1, !dbg !9536
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !9536, !tbaa !2195
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 4, !dbg !9537
  %63 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !9537, !tbaa !2197
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9538, !tbaa !1876
  call void %63(%struct._object* %64), !dbg !9539
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.70, %if.then.69
  %65 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !9540
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !9540
  br label %do.cond.74, !dbg !9542

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !9543

do.end.75:                                        ; preds = %do.cond.74
  %66 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !9545, !tbaa !1876
  %call76 = call i32 @check_decoded(%struct._object* %66), !dbg !9547
  %cmp77 = icmp slt i32 %call76, 0, !dbg !9548
  br i1 %cmp77, label %if.then.78, label %if.end.79, !dbg !9549

if.then.78:                                       ; preds = %do.end.75
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9550

if.end.79:                                        ; preds = %do.end.75
  %67 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9551, !tbaa !1876
  %call80 = call %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %67, i64 -1), !dbg !9552
  store %struct._object* %call80, %struct._object** %result, align 8, !dbg !9553, !tbaa !1876
  %68 = load %struct._object*, %struct._object** %result, align 8, !dbg !9554, !tbaa !1876
  %cmp81 = icmp eq %struct._object* %68, null, !dbg !9555
  br i1 %cmp81, label %if.then.82, label %if.end.95, !dbg !9556

if.then.82:                                       ; preds = %if.end.79
  br label %do.body.83, !dbg !9557

do.body.83:                                       ; preds = %if.then.82
  %69 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !9558
  call void @llvm.lifetime.start(i64 8, i8* %69) #2, !dbg !9558
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !1192, metadata !1880), !dbg !9560
  %70 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !9561, !tbaa !1876
  store %struct._object* %70, %struct._object** %_py_decref_tmp84, align 8, !dbg !9560, !tbaa !1876
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !9562, !tbaa !1876
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !9564
  %72 = load i64, i64* %ob_refcnt85, align 8, !dbg !9565, !tbaa !1927
  %dec86 = add i64 %72, -1, !dbg !9565
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !9565, !tbaa !1927
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !9566
  br i1 %cmp87, label %if.then.88, label %if.else.89, !dbg !9567

if.then.88:                                       ; preds = %do.body.83
  br label %if.end.92, !dbg !9568

if.else.89:                                       ; preds = %do.body.83
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !9570, !tbaa !1876
  %ob_type90 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !9572
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type90, align 8, !dbg !9572, !tbaa !2195
  %tp_dealloc91 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !9573
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc91, align 8, !dbg !9573, !tbaa !2197
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !9574, !tbaa !1876
  call void %75(%struct._object* %76), !dbg !9575
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.89, %if.then.88
  %77 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !9576
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !9576
  br label %do.cond.93, !dbg !9578

do.cond.93:                                       ; preds = %if.end.92
  br label %do.end.94, !dbg !9579

do.end.94:                                        ; preds = %do.cond.93
  store %struct._object* null, %struct._object** %retval, !dbg !9581
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9581

if.end.95:                                        ; preds = %if.end.79
  %78 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !9582, !tbaa !1876
  call void @PyUnicode_AppendAndDel(%struct._object** %result, %struct._object* %78), !dbg !9583
  %79 = load %struct._object*, %struct._object** %result, align 8, !dbg !9584, !tbaa !1876
  %cmp96 = icmp eq %struct._object* %79, null, !dbg !9586
  br i1 %cmp96, label %if.then.97, label %if.end.98, !dbg !9587

if.then.97:                                       ; preds = %if.end.95
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9588

if.end.98:                                        ; preds = %if.end.95
  br label %do.body.99, !dbg !9589

do.body.99:                                       ; preds = %if.end.98
  %80 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9590
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !9590
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1196, metadata !1880), !dbg !9592
  %81 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9593, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %81, i32 0, i32 26, !dbg !9594
  %82 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !9594, !tbaa !4322
  store %struct._object* %82, %struct._object** %_py_tmp, align 8, !dbg !9592, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9595, !tbaa !1876
  %cmp100 = icmp ne %struct._object* %83, null, !dbg !9596
  br i1 %cmp100, label %if.then.101, label %if.end.115, !dbg !9597

if.then.101:                                      ; preds = %do.body.99
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9598, !tbaa !1876
  %snapshot102 = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 26, !dbg !9600
  store %struct._object* null, %struct._object** %snapshot102, align 8, !dbg !9601, !tbaa !4322
  br label %do.body.103, !dbg !9602

do.body.103:                                      ; preds = %if.then.101
  %85 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !9603
  call void @llvm.lifetime.start(i64 8, i8* %85) #2, !dbg !9603
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp104, metadata !1198, metadata !1880), !dbg !9605
  %86 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9606, !tbaa !1876
  store %struct._object* %86, %struct._object** %_py_decref_tmp104, align 8, !dbg !9605, !tbaa !1876
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !9607, !tbaa !1876
  %ob_refcnt105 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !9609
  %88 = load i64, i64* %ob_refcnt105, align 8, !dbg !9610, !tbaa !1927
  %dec106 = add i64 %88, -1, !dbg !9610
  store i64 %dec106, i64* %ob_refcnt105, align 8, !dbg !9610, !tbaa !1927
  %cmp107 = icmp ne i64 %dec106, 0, !dbg !9611
  br i1 %cmp107, label %if.then.108, label %if.else.109, !dbg !9612

if.then.108:                                      ; preds = %do.body.103
  br label %if.end.112, !dbg !9613

if.else.109:                                      ; preds = %do.body.103
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !9615, !tbaa !1876
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !9617
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !9617, !tbaa !2195
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !9618
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !9618, !tbaa !2197
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !9619, !tbaa !1876
  call void %91(%struct._object* %92), !dbg !9620
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  %93 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !9621
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !9621
  br label %do.cond.113, !dbg !9623

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !9624

do.end.114:                                       ; preds = %do.cond.113
  br label %if.end.115, !dbg !9626

if.end.115:                                       ; preds = %do.end.114, %do.body.99
  %94 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9628
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !9628
  br label %do.cond.116, !dbg !9631

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !9632

do.end.117:                                       ; preds = %do.cond.116
  %95 = load %struct._object*, %struct._object** %result, align 8, !dbg !9634, !tbaa !1876
  store %struct._object* %95, %struct._object** %retval, !dbg !9635
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9635

cleanup.118:                                      ; preds = %if.then.97, %if.then.78, %if.then.52, %do.end.117, %do.end.94
  %96 = bitcast %struct._object** %decoded to i8*, !dbg !9636
  call void @llvm.lifetime.end(i64 8, i8* %96) #2, !dbg !9636
  %97 = bitcast %struct._object** %bytes to i8*, !dbg !9636
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !9636
  %cleanup.dest226 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest226, label %cleanup.265 [
    i32 6, label %fail
  ]

if.else.120:                                      ; preds = %if.end.47
  %98 = bitcast i32* %res to i8*, !dbg !9637
  call void @llvm.lifetime.start(i64 4, i8* %98) #2, !dbg !9637
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1202, metadata !1880), !dbg !9638
  store i32 1, i32* %res, align 4, !dbg !9638, !tbaa !1883
  %99 = bitcast i64* %remaining to i8*, !dbg !9639
  call void @llvm.lifetime.start(i64 8, i8* %99) #2, !dbg !9639
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !1204, metadata !1880), !dbg !9640
  %100 = load i64, i64* %n, align 8, !dbg !9641, !tbaa !1941
  store i64 %100, i64* %remaining, align 8, !dbg !9640, !tbaa !1941
  %101 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9642, !tbaa !1876
  %102 = load i64, i64* %n, align 8, !dbg !9643, !tbaa !1941
  %call121 = call %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %101, i64 %102), !dbg !9644
  store %struct._object* %call121, %struct._object** %result, align 8, !dbg !9645, !tbaa !1876
  %103 = load %struct._object*, %struct._object** %result, align 8, !dbg !9646, !tbaa !1876
  %cmp122 = icmp eq %struct._object* %103, null, !dbg !9648
  br i1 %cmp122, label %if.then.123, label %if.end.124, !dbg !9649

if.then.123:                                      ; preds = %if.else.120
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9650

if.end.124:                                       ; preds = %if.else.120
  %104 = load %struct._object*, %struct._object** %result, align 8, !dbg !9651, !tbaa !1876
  %105 = bitcast %struct._object* %104 to %struct.PyASCIIObject*, !dbg !9653
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %105, i32 0, i32 3, !dbg !9654
  %106 = bitcast %struct.anon* %state to i32*, !dbg !9655
  %bf.load = load i32, i32* %106, align 4, !dbg !9655
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !9655
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9655
  %tobool125 = icmp ne i32 %bf.clear, 0, !dbg !9656
  br i1 %tobool125, label %cond.true, label %cond.false, !dbg !9656

cond.true:                                        ; preds = %if.end.124
  br label %cond.end, !dbg !9657

cond.false:                                       ; preds = %if.end.124
  %107 = load %struct._object*, %struct._object** %result, align 8, !dbg !9659, !tbaa !1876
  %call126 = call i32 @_PyUnicode_Ready(%struct._object* %107), !dbg !9661
  br label %cond.end, !dbg !9656

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call126, %cond.false ], !dbg !9656
  %cmp127 = icmp eq i32 %cond, -1, !dbg !9662
  br i1 %cmp127, label %if.then.128, label %if.end.129, !dbg !9665

if.then.128:                                      ; preds = %cond.end
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9666

if.end.129:                                       ; preds = %cond.end
  %108 = load %struct._object*, %struct._object** %result, align 8, !dbg !9667, !tbaa !1876
  %109 = bitcast %struct._object* %108 to %struct.PyASCIIObject*, !dbg !9668
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %109, i32 0, i32 1, !dbg !9669
  %110 = load i64, i64* %length, align 8, !dbg !9669, !tbaa !1937
  %111 = load i64, i64* %remaining, align 8, !dbg !9670, !tbaa !1941
  %sub = sub i64 %111, %110, !dbg !9670
  store i64 %sub, i64* %remaining, align 8, !dbg !9670, !tbaa !1941
  br label %while.cond, !dbg !9671

while.cond:                                       ; preds = %if.end.170, %if.then.136, %if.end.129
  %112 = load i64, i64* %remaining, align 8, !dbg !9672, !tbaa !1941
  %cmp130 = icmp sgt i64 %112, 0, !dbg !9675
  br i1 %cmp130, label %while.body, label %while.end, !dbg !9671

while.body:                                       ; preds = %while.cond
  %113 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9676, !tbaa !1876
  %114 = load i64, i64* %remaining, align 8, !dbg !9677, !tbaa !1941
  %call131 = call i32 @textiowrapper_read_chunk(%struct.textio* %113, i64 %114), !dbg !9678
  store i32 %call131, i32* %res, align 4, !dbg !9679, !tbaa !1883
  %115 = load i32, i32* %res, align 4, !dbg !9680, !tbaa !1883
  %cmp132 = icmp slt i32 %115, 0, !dbg !9682
  br i1 %cmp132, label %if.then.133, label %if.end.138, !dbg !9683

if.then.133:                                      ; preds = %while.body
  %call134 = call i32 @_PyIO_trap_eintr(), !dbg !9684
  %tobool135 = icmp ne i32 %call134, 0, !dbg !9684
  br i1 %tobool135, label %if.then.136, label %if.end.137, !dbg !9687

if.then.136:                                      ; preds = %if.then.133
  br label %while.cond, !dbg !9688

if.end.137:                                       ; preds = %if.then.133
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9690

if.end.138:                                       ; preds = %while.body
  %116 = load i32, i32* %res, align 4, !dbg !9691, !tbaa !1883
  %cmp139 = icmp eq i32 %116, 0, !dbg !9693
  br i1 %cmp139, label %if.then.140, label %if.end.141, !dbg !9694

if.then.140:                                      ; preds = %if.end.138
  br label %while.end, !dbg !9695

if.end.141:                                       ; preds = %if.end.138
  %117 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9696, !tbaa !1876
  %cmp142 = icmp eq %struct._object* %117, null, !dbg !9698
  br i1 %cmp142, label %if.then.143, label %if.end.148, !dbg !9699

if.then.143:                                      ; preds = %if.end.141
  %call144 = call %struct._object* @PyList_New(i64 0), !dbg !9700
  store %struct._object* %call144, %struct._object** %chunks, align 8, !dbg !9702, !tbaa !1876
  %118 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9703, !tbaa !1876
  %cmp145 = icmp eq %struct._object* %118, null, !dbg !9705
  br i1 %cmp145, label %if.then.146, label %if.end.147, !dbg !9706

if.then.146:                                      ; preds = %if.then.143
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9707

if.end.147:                                       ; preds = %if.then.143
  br label %if.end.148, !dbg !9708

if.end.148:                                       ; preds = %if.end.147, %if.end.141
  %119 = load %struct._object*, %struct._object** %result, align 8, !dbg !9709, !tbaa !1876
  %120 = bitcast %struct._object* %119 to %struct.PyASCIIObject*, !dbg !9711
  %length149 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %120, i32 0, i32 1, !dbg !9712
  %121 = load i64, i64* %length149, align 8, !dbg !9712, !tbaa !1937
  %cmp150 = icmp sgt i64 %121, 0, !dbg !9713
  br i1 %cmp150, label %land.lhs.true, label %if.end.154, !dbg !9714

land.lhs.true:                                    ; preds = %if.end.148
  %122 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9715, !tbaa !1876
  %123 = load %struct._object*, %struct._object** %result, align 8, !dbg !9716, !tbaa !1876
  %call151 = call i32 @PyList_Append(%struct._object* %122, %struct._object* %123), !dbg !9717
  %cmp152 = icmp slt i32 %call151, 0, !dbg !9718
  br i1 %cmp152, label %if.then.153, label %if.end.154, !dbg !9719

if.then.153:                                      ; preds = %land.lhs.true
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9720

if.end.154:                                       ; preds = %land.lhs.true, %if.end.148
  br label %do.body.155, !dbg !9721

do.body.155:                                      ; preds = %if.end.154
  %124 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !9722
  call void @llvm.lifetime.start(i64 8, i8* %124) #2, !dbg !9722
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp156, metadata !1205, metadata !1880), !dbg !9724
  %125 = load %struct._object*, %struct._object** %result, align 8, !dbg !9725, !tbaa !1876
  store %struct._object* %125, %struct._object** %_py_decref_tmp156, align 8, !dbg !9724, !tbaa !1876
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9726, !tbaa !1876
  %ob_refcnt157 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !9728
  %127 = load i64, i64* %ob_refcnt157, align 8, !dbg !9729, !tbaa !1927
  %dec158 = add i64 %127, -1, !dbg !9729
  store i64 %dec158, i64* %ob_refcnt157, align 8, !dbg !9729, !tbaa !1927
  %cmp159 = icmp ne i64 %dec158, 0, !dbg !9730
  br i1 %cmp159, label %if.then.160, label %if.else.161, !dbg !9731

if.then.160:                                      ; preds = %do.body.155
  br label %if.end.164, !dbg !9732

if.else.161:                                      ; preds = %do.body.155
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9734, !tbaa !1876
  %ob_type162 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !9736
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type162, align 8, !dbg !9736, !tbaa !2195
  %tp_dealloc163 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !9737
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc163, align 8, !dbg !9737, !tbaa !2197
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9738, !tbaa !1876
  call void %130(%struct._object* %131), !dbg !9739
  br label %if.end.164

if.end.164:                                       ; preds = %if.else.161, %if.then.160
  %132 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !9740
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !9740
  br label %do.cond.165, !dbg !9742

do.cond.165:                                      ; preds = %if.end.164
  br label %do.end.166, !dbg !9743

do.end.166:                                       ; preds = %do.cond.165
  %133 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9745, !tbaa !1876
  %134 = load i64, i64* %remaining, align 8, !dbg !9746, !tbaa !1941
  %call167 = call %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %133, i64 %134), !dbg !9747
  store %struct._object* %call167, %struct._object** %result, align 8, !dbg !9748, !tbaa !1876
  %135 = load %struct._object*, %struct._object** %result, align 8, !dbg !9749, !tbaa !1876
  %cmp168 = icmp eq %struct._object* %135, null, !dbg !9751
  br i1 %cmp168, label %if.then.169, label %if.end.170, !dbg !9752

if.then.169:                                      ; preds = %do.end.166
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9753

if.end.170:                                       ; preds = %do.end.166
  %136 = load %struct._object*, %struct._object** %result, align 8, !dbg !9754, !tbaa !1876
  %137 = bitcast %struct._object* %136 to %struct.PyASCIIObject*, !dbg !9755
  %length171 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %137, i32 0, i32 1, !dbg !9756
  %138 = load i64, i64* %length171, align 8, !dbg !9756, !tbaa !1937
  %139 = load i64, i64* %remaining, align 8, !dbg !9757, !tbaa !1941
  %sub172 = sub i64 %139, %138, !dbg !9757
  store i64 %sub172, i64* %remaining, align 8, !dbg !9757, !tbaa !1941
  br label %while.cond, !dbg !9671

while.end:                                        ; preds = %if.then.140, %while.cond
  %140 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9758, !tbaa !1876
  %cmp173 = icmp ne %struct._object* %140, null, !dbg !9759
  br i1 %cmp173, label %if.then.174, label %if.end.223, !dbg !9760

if.then.174:                                      ; preds = %while.end
  %141 = load %struct._object*, %struct._object** %result, align 8, !dbg !9761, !tbaa !1876
  %cmp175 = icmp ne %struct._object* %141, null, !dbg !9763
  br i1 %cmp175, label %land.lhs.true.176, label %if.end.180, !dbg !9764

land.lhs.true.176:                                ; preds = %if.then.174
  %142 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9765, !tbaa !1876
  %143 = load %struct._object*, %struct._object** %result, align 8, !dbg !9767, !tbaa !1876
  %call177 = call i32 @PyList_Append(%struct._object* %142, %struct._object* %143), !dbg !9768
  %cmp178 = icmp slt i32 %call177, 0, !dbg !9769
  br i1 %cmp178, label %if.then.179, label %if.end.180, !dbg !9770

if.then.179:                                      ; preds = %land.lhs.true.176
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9771

if.end.180:                                       ; preds = %land.lhs.true.176, %if.then.174
  br label %do.body.181, !dbg !9772

do.body.181:                                      ; preds = %if.end.180
  %144 = bitcast %struct._object** %_py_tmp182 to i8*, !dbg !9773
  call void @llvm.lifetime.start(i64 8, i8* %144) #2, !dbg !9773
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp182, metadata !1208, metadata !1880), !dbg !9775
  %145 = load %struct._object*, %struct._object** %result, align 8, !dbg !9776, !tbaa !1876
  store %struct._object* %145, %struct._object** %_py_tmp182, align 8, !dbg !9775, !tbaa !1876
  %146 = load %struct._object*, %struct._object** %_py_tmp182, align 8, !dbg !9777, !tbaa !1876
  %cmp183 = icmp ne %struct._object* %146, null, !dbg !9778
  br i1 %cmp183, label %if.then.184, label %if.end.197, !dbg !9779

if.then.184:                                      ; preds = %do.body.181
  store %struct._object* null, %struct._object** %result, align 8, !dbg !9780, !tbaa !1876
  br label %do.body.185, !dbg !9782

do.body.185:                                      ; preds = %if.then.184
  %147 = bitcast %struct._object** %_py_decref_tmp186 to i8*, !dbg !9783
  call void @llvm.lifetime.start(i64 8, i8* %147) #2, !dbg !9783
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp186, metadata !1212, metadata !1880), !dbg !9785
  %148 = load %struct._object*, %struct._object** %_py_tmp182, align 8, !dbg !9786, !tbaa !1876
  store %struct._object* %148, %struct._object** %_py_decref_tmp186, align 8, !dbg !9785, !tbaa !1876
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !9787, !tbaa !1876
  %ob_refcnt187 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0, !dbg !9789
  %150 = load i64, i64* %ob_refcnt187, align 8, !dbg !9790, !tbaa !1927
  %dec188 = add i64 %150, -1, !dbg !9790
  store i64 %dec188, i64* %ob_refcnt187, align 8, !dbg !9790, !tbaa !1927
  %cmp189 = icmp ne i64 %dec188, 0, !dbg !9791
  br i1 %cmp189, label %if.then.190, label %if.else.191, !dbg !9792

if.then.190:                                      ; preds = %do.body.185
  br label %if.end.194, !dbg !9793

if.else.191:                                      ; preds = %do.body.185
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !9795, !tbaa !1876
  %ob_type192 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 1, !dbg !9797
  %152 = load %struct._typeobject*, %struct._typeobject** %ob_type192, align 8, !dbg !9797, !tbaa !2195
  %tp_dealloc193 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %152, i32 0, i32 4, !dbg !9798
  %153 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc193, align 8, !dbg !9798, !tbaa !2197
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !9799, !tbaa !1876
  call void %153(%struct._object* %154), !dbg !9800
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.then.190
  %155 = bitcast %struct._object** %_py_decref_tmp186 to i8*, !dbg !9801
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !9801
  br label %do.cond.195, !dbg !9803

do.cond.195:                                      ; preds = %if.end.194
  br label %do.end.196, !dbg !9804

do.end.196:                                       ; preds = %do.cond.195
  br label %if.end.197, !dbg !9806

if.end.197:                                       ; preds = %do.end.196, %do.body.181
  %156 = bitcast %struct._object** %_py_tmp182 to i8*, !dbg !9808
  call void @llvm.lifetime.end(i64 8, i8* %156) #2, !dbg !9808
  br label %do.cond.198, !dbg !9811

do.cond.198:                                      ; preds = %if.end.197
  br label %do.end.199, !dbg !9812

do.end.199:                                       ; preds = %do.cond.198
  %157 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !9814, !tbaa !1876
  %158 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9815, !tbaa !1876
  %call200 = call %struct._object* @PyUnicode_Join(%struct._object* %157, %struct._object* %158), !dbg !9816
  store %struct._object* %call200, %struct._object** %result, align 8, !dbg !9817, !tbaa !1876
  %159 = load %struct._object*, %struct._object** %result, align 8, !dbg !9818, !tbaa !1876
  %cmp201 = icmp eq %struct._object* %159, null, !dbg !9820
  br i1 %cmp201, label %if.then.202, label %if.end.203, !dbg !9821

if.then.202:                                      ; preds = %do.end.199
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9822

if.end.203:                                       ; preds = %do.end.199
  br label %do.body.204, !dbg !9823

do.body.204:                                      ; preds = %if.end.203
  %160 = bitcast %struct._object** %_py_tmp205 to i8*, !dbg !9824
  call void @llvm.lifetime.start(i64 8, i8* %160) #2, !dbg !9824
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp205, metadata !1216, metadata !1880), !dbg !9826
  %161 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9827, !tbaa !1876
  store %struct._object* %161, %struct._object** %_py_tmp205, align 8, !dbg !9826, !tbaa !1876
  %162 = load %struct._object*, %struct._object** %_py_tmp205, align 8, !dbg !9828, !tbaa !1876
  %cmp206 = icmp ne %struct._object* %162, null, !dbg !9829
  br i1 %cmp206, label %if.then.207, label %if.end.220, !dbg !9830

if.then.207:                                      ; preds = %do.body.204
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !9831, !tbaa !1876
  br label %do.body.208, !dbg !9833

do.body.208:                                      ; preds = %if.then.207
  %163 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !9834
  call void @llvm.lifetime.start(i64 8, i8* %163) #2, !dbg !9834
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp209, metadata !1218, metadata !1880), !dbg !9836
  %164 = load %struct._object*, %struct._object** %_py_tmp205, align 8, !dbg !9837, !tbaa !1876
  store %struct._object* %164, %struct._object** %_py_decref_tmp209, align 8, !dbg !9836, !tbaa !1876
  %165 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !9838, !tbaa !1876
  %ob_refcnt210 = getelementptr inbounds %struct._object, %struct._object* %165, i32 0, i32 0, !dbg !9840
  %166 = load i64, i64* %ob_refcnt210, align 8, !dbg !9841, !tbaa !1927
  %dec211 = add i64 %166, -1, !dbg !9841
  store i64 %dec211, i64* %ob_refcnt210, align 8, !dbg !9841, !tbaa !1927
  %cmp212 = icmp ne i64 %dec211, 0, !dbg !9842
  br i1 %cmp212, label %if.then.213, label %if.else.214, !dbg !9843

if.then.213:                                      ; preds = %do.body.208
  br label %if.end.217, !dbg !9844

if.else.214:                                      ; preds = %do.body.208
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !9846, !tbaa !1876
  %ob_type215 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 1, !dbg !9848
  %168 = load %struct._typeobject*, %struct._typeobject** %ob_type215, align 8, !dbg !9848, !tbaa !2195
  %tp_dealloc216 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %168, i32 0, i32 4, !dbg !9849
  %169 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc216, align 8, !dbg !9849, !tbaa !2197
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !9850, !tbaa !1876
  call void %169(%struct._object* %170), !dbg !9851
  br label %if.end.217

if.end.217:                                       ; preds = %if.else.214, %if.then.213
  %171 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !9852
  call void @llvm.lifetime.end(i64 8, i8* %171) #2, !dbg !9852
  br label %do.cond.218, !dbg !9854

do.cond.218:                                      ; preds = %if.end.217
  br label %do.end.219, !dbg !9855

do.end.219:                                       ; preds = %do.cond.218
  br label %if.end.220, !dbg !9857

if.end.220:                                       ; preds = %do.end.219, %do.body.204
  %172 = bitcast %struct._object** %_py_tmp205 to i8*, !dbg !9859
  call void @llvm.lifetime.end(i64 8, i8* %172) #2, !dbg !9859
  br label %do.cond.221, !dbg !9860

do.cond.221:                                      ; preds = %if.end.220
  br label %do.end.222, !dbg !9861

do.end.222:                                       ; preds = %do.cond.221
  br label %if.end.223, !dbg !9863

if.end.223:                                       ; preds = %do.end.222, %while.end
  %173 = load %struct._object*, %struct._object** %result, align 8, !dbg !9864, !tbaa !1876
  store %struct._object* %173, %struct._object** %retval, !dbg !9865
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9865

cleanup.224:                                      ; preds = %if.then.202, %if.then.179, %if.then.169, %if.then.153, %if.then.146, %if.end.137, %if.then.128, %if.then.123, %if.end.223
  %174 = bitcast i64* %remaining to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 8, i8* %174) #2, !dbg !9866
  %175 = bitcast i32* %res to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 4, i8* %175) #2, !dbg !9866
  %cleanup.dest227 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest227, label %cleanup.265 [
    i32 6, label %fail
  ]

fail:                                             ; preds = %cleanup.224, %cleanup.118
  br label %do.body.228, !dbg !9867

do.body.228:                                      ; preds = %fail
  %176 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9868
  call void @llvm.lifetime.start(i64 8, i8* %176) #2, !dbg !9868
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1222, metadata !1880), !dbg !9870
  %177 = load %struct._object*, %struct._object** %result, align 8, !dbg !9871, !tbaa !1876
  store %struct._object* %177, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9870, !tbaa !1876
  %178 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9872, !tbaa !1876
  %cmp229 = icmp ne %struct._object* %178, null, !dbg !9873
  br i1 %cmp229, label %if.then.230, label %if.end.243, !dbg !9874

if.then.230:                                      ; preds = %do.body.228
  br label %do.body.231, !dbg !9875

do.body.231:                                      ; preds = %if.then.230
  %179 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !9877
  call void @llvm.lifetime.start(i64 8, i8* %179) #2, !dbg !9877
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !1224, metadata !1880), !dbg !9879
  %180 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9880, !tbaa !1876
  store %struct._object* %180, %struct._object** %_py_decref_tmp232, align 8, !dbg !9879, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9881, !tbaa !1876
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 0, !dbg !9883
  %182 = load i64, i64* %ob_refcnt233, align 8, !dbg !9884, !tbaa !1927
  %dec234 = add i64 %182, -1, !dbg !9884
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !9884, !tbaa !1927
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !9885
  br i1 %cmp235, label %if.then.236, label %if.else.237, !dbg !9886

if.then.236:                                      ; preds = %do.body.231
  br label %if.end.240, !dbg !9887

if.else.237:                                      ; preds = %do.body.231
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9889, !tbaa !1876
  %ob_type238 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 1, !dbg !9891
  %184 = load %struct._typeobject*, %struct._typeobject** %ob_type238, align 8, !dbg !9891, !tbaa !2195
  %tp_dealloc239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %184, i32 0, i32 4, !dbg !9892
  %185 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc239, align 8, !dbg !9892, !tbaa !2197
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9893, !tbaa !1876
  call void %185(%struct._object* %186), !dbg !9894
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.237, %if.then.236
  %187 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !9895
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !9895
  br label %do.cond.241, !dbg !9897

do.cond.241:                                      ; preds = %if.end.240
  br label %do.end.242, !dbg !9898

do.end.242:                                       ; preds = %do.cond.241
  br label %if.end.243, !dbg !9900

if.end.243:                                       ; preds = %do.end.242, %do.body.228
  %188 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9902
  call void @llvm.lifetime.end(i64 8, i8* %188) #2, !dbg !9902
  br label %do.cond.244, !dbg !9905

do.cond.244:                                      ; preds = %if.end.243
  br label %do.end.245, !dbg !9906

do.end.245:                                       ; preds = %do.cond.244
  br label %do.body.246, !dbg !9908

do.body.246:                                      ; preds = %do.end.245
  %189 = bitcast %struct._object** %_py_xdecref_tmp247 to i8*, !dbg !9909
  call void @llvm.lifetime.start(i64 8, i8* %189) #2, !dbg !9909
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp247, metadata !1227, metadata !1880), !dbg !9911
  %190 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9912, !tbaa !1876
  store %struct._object* %190, %struct._object** %_py_xdecref_tmp247, align 8, !dbg !9911, !tbaa !1876
  %191 = load %struct._object*, %struct._object** %_py_xdecref_tmp247, align 8, !dbg !9913, !tbaa !1876
  %cmp248 = icmp ne %struct._object* %191, null, !dbg !9914
  br i1 %cmp248, label %if.then.249, label %if.end.262, !dbg !9915

if.then.249:                                      ; preds = %do.body.246
  br label %do.body.250, !dbg !9916

do.body.250:                                      ; preds = %if.then.249
  %192 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !9918
  call void @llvm.lifetime.start(i64 8, i8* %192) #2, !dbg !9918
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp251, metadata !1229, metadata !1880), !dbg !9920
  %193 = load %struct._object*, %struct._object** %_py_xdecref_tmp247, align 8, !dbg !9921, !tbaa !1876
  store %struct._object* %193, %struct._object** %_py_decref_tmp251, align 8, !dbg !9920, !tbaa !1876
  %194 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !9922, !tbaa !1876
  %ob_refcnt252 = getelementptr inbounds %struct._object, %struct._object* %194, i32 0, i32 0, !dbg !9924
  %195 = load i64, i64* %ob_refcnt252, align 8, !dbg !9925, !tbaa !1927
  %dec253 = add i64 %195, -1, !dbg !9925
  store i64 %dec253, i64* %ob_refcnt252, align 8, !dbg !9925, !tbaa !1927
  %cmp254 = icmp ne i64 %dec253, 0, !dbg !9926
  br i1 %cmp254, label %if.then.255, label %if.else.256, !dbg !9927

if.then.255:                                      ; preds = %do.body.250
  br label %if.end.259, !dbg !9928

if.else.256:                                      ; preds = %do.body.250
  %196 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !9930, !tbaa !1876
  %ob_type257 = getelementptr inbounds %struct._object, %struct._object* %196, i32 0, i32 1, !dbg !9932
  %197 = load %struct._typeobject*, %struct._typeobject** %ob_type257, align 8, !dbg !9932, !tbaa !2195
  %tp_dealloc258 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %197, i32 0, i32 4, !dbg !9933
  %198 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc258, align 8, !dbg !9933, !tbaa !2197
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !9934, !tbaa !1876
  call void %198(%struct._object* %199), !dbg !9935
  br label %if.end.259

if.end.259:                                       ; preds = %if.else.256, %if.then.255
  %200 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !9936
  call void @llvm.lifetime.end(i64 8, i8* %200) #2, !dbg !9936
  br label %do.cond.260, !dbg !9938

do.cond.260:                                      ; preds = %if.end.259
  br label %do.end.261, !dbg !9939

do.end.261:                                       ; preds = %do.cond.260
  br label %if.end.262, !dbg !9941

if.end.262:                                       ; preds = %do.end.261, %do.body.246
  %201 = bitcast %struct._object** %_py_xdecref_tmp247 to i8*, !dbg !9943
  call void @llvm.lifetime.end(i64 8, i8* %201) #2, !dbg !9943
  br label %do.cond.263, !dbg !9944

do.cond.263:                                      ; preds = %if.end.262
  br label %do.end.264, !dbg !9945

do.end.264:                                       ; preds = %do.cond.263
  store %struct._object* null, %struct._object** %retval, !dbg !9947
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9947

cleanup.265:                                      ; preds = %do.end.264, %cleanup.224, %cleanup.118, %if.then.46, %if.then.41, %cleanup, %if.then.4, %if.end
  %202 = bitcast %struct._object** %chunks to i8*, !dbg !9948
  call void @llvm.lifetime.end(i64 8, i8* %202) #2, !dbg !9948
  %203 = bitcast %struct._object** %result to i8*, !dbg !9948
  call void @llvm.lifetime.end(i64 8, i8* %203) #2, !dbg !9948
  %204 = bitcast i64* %n to i8*, !dbg !9948
  call void @llvm.lifetime.end(i64 8, i8* %204) #2, !dbg !9948
  %205 = load %struct._object*, %struct._object** %retval, !dbg !9948
  ret %struct._object* %205, !dbg !9948
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_readline(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %limit = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1240, metadata !1880), !dbg !9949
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1241, metadata !1880), !dbg !9950
  %0 = bitcast i64* %limit to i8*, !dbg !9951
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9951
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !1242, metadata !1880), !dbg !9952
  store i64 -1, i64* %limit, align 8, !dbg !9952, !tbaa !1941
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9953, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !9955
  %2 = load i32, i32* %ok, align 4, !dbg !9955, !tbaa !3900
  %cmp = icmp sle i32 %2, 0, !dbg !9956
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !9957

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9958, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !9962
  %4 = load i32, i32* %detached, align 4, !dbg !9962, !tbaa !3908
  %tobool = icmp ne i32 %4, 0, !dbg !9963
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !9964

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9965, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !9968
  br label %if.end, !dbg !9969

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9970, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !9973
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !9974
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9976

if.end.2:                                         ; preds = %entry
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9977, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.63, i32 0, i32 0), i64* %limit), !dbg !9979
  %tobool3 = icmp ne i32 %call, 0, !dbg !9979
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !9980

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !9981
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9981

if.end.5:                                         ; preds = %if.end.2
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9983, !tbaa !1876
  %9 = load i64, i64* %limit, align 8, !dbg !9984, !tbaa !1941
  %call6 = call %struct._object* @_textiowrapper_readline(%struct.textio* %8, i64 %9), !dbg !9985
  store %struct._object* %call6, %struct._object** %retval, !dbg !9986
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9986

cleanup:                                          ; preds = %if.end.5, %if.then.4, %if.end
  %10 = bitcast i64* %limit to i8*, !dbg !9987
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !9987
  %11 = load %struct._object*, %struct._object** %retval, !dbg !9987
  ret %struct._object* %11, !dbg !9987
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_flush(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1245, metadata !1880), !dbg !9988
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1246, metadata !1880), !dbg !9989
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9990, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !9992
  %1 = load i32, i32* %ok, align 4, !dbg !9992, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !9993
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !9994

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9995, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !9999
  %3 = load i32, i32* %detached, align 4, !dbg !9999, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !10000
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10001

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10002, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10005
  br label %if.end, !dbg !10006

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10007, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10010
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10011
  br label %return, !dbg !10011

if.end.2:                                         ; preds = %entry
  br label %do.body, !dbg !10013

do.body:                                          ; preds = %if.end.2
  %6 = bitcast i32* %r to i8*, !dbg !10014
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !10014
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1247, metadata !1880), !dbg !10016
  %7 = bitcast %struct._object** %_res to i8*, !dbg !10017
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !10017
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1249, metadata !1880), !dbg !10018
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10019, !tbaa !1876
  %9 = bitcast %struct.textio* %8 to %struct._object*, !dbg !10020
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !10021
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10021, !tbaa !2195
  %cmp3 = icmp eq %struct._typeobject* %10, @PyTextIOWrapper_Type, !dbg !10022
  br i1 %cmp3, label %if.then.4, label %if.else.27, !dbg !10023

if.then.4:                                        ; preds = %do.body
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10024, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %11, i32 0, i32 28, !dbg !10026
  %12 = load %struct._object*, %struct._object** %raw, align 8, !dbg !10026, !tbaa !4380
  %cmp5 = icmp ne %struct._object* %12, null, !dbg !10027
  br i1 %cmp5, label %if.then.6, label %if.else.8, !dbg !10028

if.then.6:                                        ; preds = %if.then.4
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10029, !tbaa !1876
  %raw7 = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 28, !dbg !10031
  %14 = load %struct._object*, %struct._object** %raw7, align 8, !dbg !10031, !tbaa !4380
  %call = call i32 @_PyFileIO_closed(%struct._object* %14), !dbg !10032
  store i32 %call, i32* %r, align 4, !dbg !10033, !tbaa !1883
  br label %if.end.23, !dbg !10034

if.else.8:                                        ; preds = %if.then.4
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10035, !tbaa !1876
  %call9 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %15, i8* null), !dbg !10037
  store %struct._object* %call9, %struct._object** %_res, align 8, !dbg !10038, !tbaa !1876
  %16 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10039, !tbaa !1876
  %cmp10 = icmp eq %struct._object* %16, null, !dbg !10041
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !10042

if.then.11:                                       ; preds = %if.else.8
  store %struct._object* null, %struct._object** %retval, !dbg !10043
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10045

if.end.12:                                        ; preds = %if.else.8
  %17 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10046, !tbaa !1876
  %call13 = call i32 @PyObject_IsTrue(%struct._object* %17), !dbg !10048
  store i32 %call13, i32* %r, align 4, !dbg !10049, !tbaa !1883
  br label %do.body.14, !dbg !10050

do.body.14:                                       ; preds = %if.end.12
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10051
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !10051
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1250, metadata !1880), !dbg !10053
  %19 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10054, !tbaa !1876
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !10053, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10055, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !10057
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !10058, !tbaa !1927
  %dec = add i64 %21, -1, !dbg !10058
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10058, !tbaa !1927
  %cmp15 = icmp ne i64 %dec, 0, !dbg !10059
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !10060

if.then.16:                                       ; preds = %do.body.14
  br label %if.end.19, !dbg !10061

if.else.17:                                       ; preds = %do.body.14
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10063, !tbaa !1876
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !10065
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !10065, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !10066
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10066, !tbaa !2197
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10067, !tbaa !1876
  call void %24(%struct._object* %25), !dbg !10068
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.17, %if.then.16
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10069
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !10069
  br label %do.cond, !dbg !10071

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !10072

do.end:                                           ; preds = %do.cond
  %27 = load i32, i32* %r, align 4, !dbg !10074, !tbaa !1883
  %cmp20 = icmp slt i32 %27, 0, !dbg !10077
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !10078

if.then.21:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !10079
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10081

if.end.22:                                        ; preds = %do.end
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.6
  %28 = load i32, i32* %r, align 4, !dbg !10082, !tbaa !1883
  %cmp24 = icmp sgt i32 %28, 0, !dbg !10085
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !10086

if.then.25:                                       ; preds = %if.end.23
  %29 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10087, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !10090
  store %struct._object* null, %struct._object** %retval, !dbg !10091
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10091

if.end.26:                                        ; preds = %if.end.23
  br label %if.end.32, !dbg !10092

if.else.27:                                       ; preds = %do.body
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10094, !tbaa !1876
  %31 = bitcast %struct.textio* %30 to %struct._object*, !dbg !10097
  %call28 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %31, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !10098
  %cmp29 = icmp eq %struct._object* %call28, null, !dbg !10099
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !10100

if.then.30:                                       ; preds = %if.else.27
  store %struct._object* null, %struct._object** %retval, !dbg !10101
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10103

if.end.31:                                        ; preds = %if.else.27
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.26
  store i32 0, i32* %cleanup.dest.slot, !dbg !10104
  br label %cleanup, !dbg !10104

cleanup:                                          ; preds = %if.end.32, %if.then.30, %if.then.25, %if.then.21, %if.then.11
  %32 = bitcast %struct._object** %_res to i8*, !dbg !10106
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !10106
  %33 = bitcast i32* %r to i8*, !dbg !10106
  call void @llvm.lifetime.end(i64 4, i8* %33) #2, !dbg !10106
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.end.35, !dbg !10112

do.end.35:                                        ; preds = %cleanup.cont
  %34 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10113, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %34, i32 0, i32 16, !dbg !10114
  %35 = load i8, i8* %seekable, align 1, !dbg !10114, !tbaa !4668
  %36 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10115, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %36, i32 0, i32 18, !dbg !10116
  store i8 %35, i8* %telling, align 1, !dbg !10117, !tbaa !4517
  %37 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10118, !tbaa !1876
  %call36 = call i32 @_textiowrapper_writeflush(%struct.textio* %37), !dbg !10120
  %cmp37 = icmp slt i32 %call36, 0, !dbg !10121
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !10122

if.then.38:                                       ; preds = %do.end.35
  store %struct._object* null, %struct._object** %retval, !dbg !10123
  br label %return, !dbg !10123

if.end.39:                                        ; preds = %do.end.35
  %38 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10124, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %38, i32 0, i32 4, !dbg !10125
  %39 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10125, !tbaa !4120
  %call40 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %39, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !10126
  store %struct._object* %call40, %struct._object** %retval, !dbg !10127
  br label %return, !dbg !10127

return:                                           ; preds = %if.end.39, %if.then.38, %cleanup, %if.end
  %40 = load %struct._object*, %struct._object** %retval, !dbg !10128
  ret %struct._object* %40, !dbg !10128

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_close(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %exc = alloca %struct._object*, align 8
  %val = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  %val2 = alloca %struct._object*, align 8
  %_py_decref_tmp80 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp95 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1258, metadata !1880), !dbg !10129
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1259, metadata !1880), !dbg !10130
  %0 = bitcast %struct._object** %res to i8*, !dbg !10131
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10131
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1260, metadata !1880), !dbg !10132
  %1 = bitcast i32* %r to i8*, !dbg !10133
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !10133
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1261, metadata !1880), !dbg !10134
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10135, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 1, !dbg !10137
  %3 = load i32, i32* %ok, align 4, !dbg !10137, !tbaa !3900
  %cmp = icmp sle i32 %3, 0, !dbg !10138
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10139

if.then:                                          ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10140, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 2, !dbg !10144
  %5 = load i32, i32* %detached, align 4, !dbg !10144, !tbaa !3908
  %tobool = icmp ne i32 %5, 0, !dbg !10145
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10146

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10147, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10150
  br label %if.end, !dbg !10151

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10152, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10155
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10156
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10158

if.end.2:                                         ; preds = %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10159, !tbaa !1876
  %call = call %struct._object* @textiowrapper_closed_get(%struct.textio* %8, i8* null), !dbg !10160
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !10161, !tbaa !1876
  %9 = load %struct._object*, %struct._object** %res, align 8, !dbg !10162, !tbaa !1876
  %cmp3 = icmp eq %struct._object* %9, null, !dbg !10164
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !10165

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !10166
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10166

if.end.5:                                         ; preds = %if.end.2
  %10 = load %struct._object*, %struct._object** %res, align 8, !dbg !10167, !tbaa !1876
  %call6 = call i32 @PyObject_IsTrue(%struct._object* %10), !dbg !10168
  store i32 %call6, i32* %r, align 4, !dbg !10169, !tbaa !1883
  br label %do.body, !dbg !10170

do.body:                                          ; preds = %if.end.5
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10171
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !10171
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1262, metadata !1880), !dbg !10173
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !10174, !tbaa !1876
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !10173, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10175, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !10177
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !10178, !tbaa !1927
  %dec = add i64 %14, -1, !dbg !10178
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10178, !tbaa !1927
  %cmp7 = icmp ne i64 %dec, 0, !dbg !10179
  br i1 %cmp7, label %if.then.8, label %if.else.9, !dbg !10180

if.then.8:                                        ; preds = %do.body
  br label %if.end.10, !dbg !10181

if.else.9:                                        ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10183, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !10185
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10185, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !10186
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10186, !tbaa !2197
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10187, !tbaa !1876
  call void %17(%struct._object* %18), !dbg !10188
  br label %if.end.10

if.end.10:                                        ; preds = %if.else.9, %if.then.8
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10189
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !10189
  br label %do.cond, !dbg !10191

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !10192

do.end:                                           ; preds = %do.cond
  %20 = load i32, i32* %r, align 4, !dbg !10194, !tbaa !1883
  %cmp11 = icmp slt i32 %20, 0, !dbg !10196
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !10197

if.then.12:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !10198
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10198

if.end.13:                                        ; preds = %do.end
  %21 = load i32, i32* %r, align 4, !dbg !10199, !tbaa !1883
  %cmp14 = icmp sgt i32 %21, 0, !dbg !10200
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !10201

if.then.15:                                       ; preds = %if.end.13
  %22 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10202, !tbaa !1927
  %inc = add i64 %22, 1, !dbg !10202
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10202, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10204
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10204

if.else.16:                                       ; preds = %if.end.13
  %23 = bitcast %struct._object** %exc to i8*, !dbg !10205
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !10205
  call void @llvm.dbg.declare(metadata %struct._object** %exc, metadata !1264, metadata !1880), !dbg !10206
  store %struct._object* null, %struct._object** %exc, align 8, !dbg !10206, !tbaa !1876
  %24 = bitcast %struct._object** %val to i8*, !dbg !10205
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !10205
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !1267, metadata !1880), !dbg !10207
  %25 = bitcast %struct._object** %tb to i8*, !dbg !10205
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !10205
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !1268, metadata !1880), !dbg !10208
  %26 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10209, !tbaa !1876
  %finalizing = getelementptr inbounds %struct.textio, %struct.textio* %26, i32 0, i32 19, !dbg !10210
  %27 = load i8, i8* %finalizing, align 1, !dbg !10210, !tbaa !3765
  %tobool17 = icmp ne i8 %27, 0, !dbg !10209
  br i1 %tobool17, label %if.then.18, label %if.end.36, !dbg !10211

if.then.18:                                       ; preds = %if.else.16
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10212, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %28, i32 0, i32 4, !dbg !10213
  %29 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10213, !tbaa !4120
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10214, !tbaa !1876
  %call19 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %29, %struct._Py_Identifier* @PyId__dealloc_warn, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0), %struct.textio* %30), !dbg !10215
  store %struct._object* %call19, %struct._object** %res, align 8, !dbg !10216, !tbaa !1876
  %31 = load %struct._object*, %struct._object** %res, align 8, !dbg !10217, !tbaa !1876
  %tobool20 = icmp ne %struct._object* %31, null, !dbg !10217
  br i1 %tobool20, label %if.then.21, label %if.else.34, !dbg !10218

if.then.21:                                       ; preds = %if.then.18
  br label %do.body.22, !dbg !10219

do.body.22:                                       ; preds = %if.then.21
  %32 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !10220
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !10220
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !1269, metadata !1880), !dbg !10222
  %33 = load %struct._object*, %struct._object** %res, align 8, !dbg !10223, !tbaa !1876
  store %struct._object* %33, %struct._object** %_py_decref_tmp23, align 8, !dbg !10222, !tbaa !1876
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !10224, !tbaa !1876
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !10226
  %35 = load i64, i64* %ob_refcnt24, align 8, !dbg !10227, !tbaa !1927
  %dec25 = add i64 %35, -1, !dbg !10227
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !10227, !tbaa !1927
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !10228
  br i1 %cmp26, label %if.then.27, label %if.else.28, !dbg !10229

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31, !dbg !10230

if.else.28:                                       ; preds = %do.body.22
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !10232, !tbaa !1876
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !10234
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !10234, !tbaa !2195
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !10235
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !10235, !tbaa !2197
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !10236, !tbaa !1876
  call void %38(%struct._object* %39), !dbg !10237
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %40 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !10238
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !10238
  br label %do.cond.32, !dbg !10240

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !10241

do.end.33:                                        ; preds = %do.cond.32
  br label %if.end.35, !dbg !10243

if.else.34:                                       ; preds = %if.then.18
  call void @PyErr_Clear(), !dbg !10245
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.34, %do.end.33
  br label %if.end.36, !dbg !10246

if.end.36:                                        ; preds = %if.end.35, %if.else.16
  %41 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10247, !tbaa !1876
  %42 = bitcast %struct.textio* %41 to %struct._object*, !dbg !10248
  %call37 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %42, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !10249
  store %struct._object* %call37, %struct._object** %res, align 8, !dbg !10250, !tbaa !1876
  %43 = load %struct._object*, %struct._object** %res, align 8, !dbg !10251, !tbaa !1876
  %cmp38 = icmp eq %struct._object* %43, null, !dbg !10252
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !10253

if.then.39:                                       ; preds = %if.end.36
  call void @PyErr_Fetch(%struct._object** %exc, %struct._object** %val, %struct._object** %tb), !dbg !10254
  br label %if.end.53, !dbg !10254

if.else.40:                                       ; preds = %if.end.36
  br label %do.body.41, !dbg !10255

do.body.41:                                       ; preds = %if.else.40
  %44 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !10256
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !10256
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !1274, metadata !1880), !dbg !10258
  %45 = load %struct._object*, %struct._object** %res, align 8, !dbg !10259, !tbaa !1876
  store %struct._object* %45, %struct._object** %_py_decref_tmp42, align 8, !dbg !10258, !tbaa !1876
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10260, !tbaa !1876
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !10262
  %47 = load i64, i64* %ob_refcnt43, align 8, !dbg !10263, !tbaa !1927
  %dec44 = add i64 %47, -1, !dbg !10263
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !10263, !tbaa !1927
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !10264
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !10265

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !10266

if.else.47:                                       ; preds = %do.body.41
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10268, !tbaa !1876
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !10270
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !10270, !tbaa !2195
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !10271
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !10271, !tbaa !2197
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10272, !tbaa !1876
  call void %50(%struct._object* %51), !dbg !10273
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %52 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !10274
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !10274
  br label %do.cond.51, !dbg !10276

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !10277

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.53

if.end.53:                                        ; preds = %do.end.52, %if.then.39
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10279, !tbaa !1876
  %buffer54 = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 4, !dbg !10280
  %54 = load %struct._object*, %struct._object** %buffer54, align 8, !dbg !10280, !tbaa !4120
  %call55 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %54, %struct._Py_Identifier* @PyId_close, i8* null), !dbg !10281
  store %struct._object* %call55, %struct._object** %res, align 8, !dbg !10282, !tbaa !1876
  %55 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10283, !tbaa !1876
  %cmp56 = icmp ne %struct._object* %55, null, !dbg !10284
  br i1 %cmp56, label %if.then.57, label %if.end.110, !dbg !10285

if.then.57:                                       ; preds = %if.end.53
  %56 = load %struct._object*, %struct._object** %res, align 8, !dbg !10286, !tbaa !1876
  %cmp58 = icmp ne %struct._object* %56, null, !dbg !10287
  br i1 %cmp58, label %if.then.59, label %if.else.78, !dbg !10288

if.then.59:                                       ; preds = %if.then.57
  br label %do.body.60, !dbg !10289

do.body.60:                                       ; preds = %if.then.59
  %57 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10290
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !10290
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1277, metadata !1880), !dbg !10292
  %58 = load %struct._object*, %struct._object** %res, align 8, !dbg !10293, !tbaa !1876
  store %struct._object* %58, %struct._object** %_py_tmp, align 8, !dbg !10292, !tbaa !1876
  %59 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10294, !tbaa !1876
  %cmp61 = icmp ne %struct._object* %59, null, !dbg !10295
  br i1 %cmp61, label %if.then.62, label %if.end.75, !dbg !10296

if.then.62:                                       ; preds = %do.body.60
  store %struct._object* null, %struct._object** %res, align 8, !dbg !10297, !tbaa !1876
  br label %do.body.63, !dbg !10299

do.body.63:                                       ; preds = %if.then.62
  %60 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !10300
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !10300
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp64, metadata !1283, metadata !1880), !dbg !10302
  %61 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10303, !tbaa !1876
  store %struct._object* %61, %struct._object** %_py_decref_tmp64, align 8, !dbg !10302, !tbaa !1876
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10304, !tbaa !1876
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !10306
  %63 = load i64, i64* %ob_refcnt65, align 8, !dbg !10307, !tbaa !1927
  %dec66 = add i64 %63, -1, !dbg !10307
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !10307, !tbaa !1927
  %cmp67 = icmp ne i64 %dec66, 0, !dbg !10308
  br i1 %cmp67, label %if.then.68, label %if.else.69, !dbg !10309

if.then.68:                                       ; preds = %do.body.63
  br label %if.end.72, !dbg !10310

if.else.69:                                       ; preds = %do.body.63
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10312, !tbaa !1876
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !10314
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !10314, !tbaa !2195
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !10315
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !10315, !tbaa !2197
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10316, !tbaa !1876
  call void %66(%struct._object* %67), !dbg !10317
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %68 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !10318
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !10318
  br label %do.cond.73, !dbg !10320

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !10321

do.end.74:                                        ; preds = %do.cond.73
  br label %if.end.75, !dbg !10323

if.end.75:                                        ; preds = %do.end.74, %do.body.60
  %69 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10325
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !10325
  br label %do.cond.76, !dbg !10328

do.cond.76:                                       ; preds = %if.end.75
  br label %do.end.77, !dbg !10329

do.end.77:                                        ; preds = %do.cond.76
  %70 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10331, !tbaa !1876
  %71 = load %struct._object*, %struct._object** %val, align 8, !dbg !10332, !tbaa !1876
  %72 = load %struct._object*, %struct._object** %tb, align 8, !dbg !10333, !tbaa !1876
  call void @PyErr_Restore(%struct._object* %70, %struct._object* %71, %struct._object* %72), !dbg !10334
  br label %if.end.109, !dbg !10335

if.else.78:                                       ; preds = %if.then.57
  %73 = bitcast %struct._object** %val2 to i8*, !dbg !10336
  call void @llvm.lifetime.start(i64 8, i8* %73) #2, !dbg !10336
  call void @llvm.dbg.declare(metadata %struct._object** %val2, metadata !1287, metadata !1880), !dbg !10337
  br label %do.body.79, !dbg !10338

do.body.79:                                       ; preds = %if.else.78
  %74 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !10339
  call void @llvm.lifetime.start(i64 8, i8* %74) #2, !dbg !10339
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp80, metadata !1289, metadata !1880), !dbg !10341
  %75 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10342, !tbaa !1876
  store %struct._object* %75, %struct._object** %_py_decref_tmp80, align 8, !dbg !10341, !tbaa !1876
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !10343, !tbaa !1876
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !10345
  %77 = load i64, i64* %ob_refcnt81, align 8, !dbg !10346, !tbaa !1927
  %dec82 = add i64 %77, -1, !dbg !10346
  store i64 %dec82, i64* %ob_refcnt81, align 8, !dbg !10346, !tbaa !1927
  %cmp83 = icmp ne i64 %dec82, 0, !dbg !10347
  br i1 %cmp83, label %if.then.84, label %if.else.85, !dbg !10348

if.then.84:                                       ; preds = %do.body.79
  br label %if.end.88, !dbg !10349

if.else.85:                                       ; preds = %do.body.79
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !10351, !tbaa !1876
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !10353
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !10353, !tbaa !2195
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !10354
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8, !dbg !10354, !tbaa !2197
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !10355, !tbaa !1876
  call void %80(%struct._object* %81), !dbg !10356
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  %82 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !10357
  call void @llvm.lifetime.end(i64 8, i8* %82) #2, !dbg !10357
  br label %do.cond.89, !dbg !10359

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !10360

do.end.90:                                        ; preds = %do.cond.89
  br label %do.body.91, !dbg !10362

do.body.91:                                       ; preds = %do.end.90
  %83 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10363
  call void @llvm.lifetime.start(i64 8, i8* %83) #2, !dbg !10363
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1291, metadata !1880), !dbg !10365
  %84 = load %struct._object*, %struct._object** %tb, align 8, !dbg !10366, !tbaa !1876
  store %struct._object* %84, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10365, !tbaa !1876
  %85 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10367, !tbaa !1876
  %cmp92 = icmp ne %struct._object* %85, null, !dbg !10368
  br i1 %cmp92, label %if.then.93, label %if.end.106, !dbg !10369

if.then.93:                                       ; preds = %do.body.91
  br label %do.body.94, !dbg !10370

do.body.94:                                       ; preds = %if.then.93
  %86 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !10372
  call void @llvm.lifetime.start(i64 8, i8* %86) #2, !dbg !10372
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp95, metadata !1293, metadata !1880), !dbg !10374
  %87 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10375, !tbaa !1876
  store %struct._object* %87, %struct._object** %_py_decref_tmp95, align 8, !dbg !10374, !tbaa !1876
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10376, !tbaa !1876
  %ob_refcnt96 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0, !dbg !10378
  %89 = load i64, i64* %ob_refcnt96, align 8, !dbg !10379, !tbaa !1927
  %dec97 = add i64 %89, -1, !dbg !10379
  store i64 %dec97, i64* %ob_refcnt96, align 8, !dbg !10379, !tbaa !1927
  %cmp98 = icmp ne i64 %dec97, 0, !dbg !10380
  br i1 %cmp98, label %if.then.99, label %if.else.100, !dbg !10381

if.then.99:                                       ; preds = %do.body.94
  br label %if.end.103, !dbg !10382

if.else.100:                                      ; preds = %do.body.94
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10384, !tbaa !1876
  %ob_type101 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1, !dbg !10386
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type101, align 8, !dbg !10386, !tbaa !2195
  %tp_dealloc102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4, !dbg !10387
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc102, align 8, !dbg !10387, !tbaa !2197
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10388, !tbaa !1876
  call void %92(%struct._object* %93), !dbg !10389
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.100, %if.then.99
  %94 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !10390
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !10390
  br label %do.cond.104, !dbg !10392

do.cond.104:                                      ; preds = %if.end.103
  br label %do.end.105, !dbg !10393

do.end.105:                                       ; preds = %do.cond.104
  br label %if.end.106, !dbg !10395

if.end.106:                                       ; preds = %do.end.105, %do.body.91
  %95 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10397
  call void @llvm.lifetime.end(i64 8, i8* %95) #2, !dbg !10397
  br label %do.cond.107, !dbg !10400

do.cond.107:                                      ; preds = %if.end.106
  br label %do.end.108, !dbg !10401

do.end.108:                                       ; preds = %do.cond.107
  call void @PyErr_Fetch(%struct._object** %exc, %struct._object** %val2, %struct._object** %tb), !dbg !10403
  call void @PyErr_NormalizeException(%struct._object** %exc, %struct._object** %val2, %struct._object** %tb), !dbg !10404
  %96 = load %struct._object*, %struct._object** %val2, align 8, !dbg !10405, !tbaa !1876
  %97 = load %struct._object*, %struct._object** %val, align 8, !dbg !10406, !tbaa !1876
  call void @PyException_SetContext(%struct._object* %96, %struct._object* %97), !dbg !10407
  %98 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10408, !tbaa !1876
  %99 = load %struct._object*, %struct._object** %val2, align 8, !dbg !10409, !tbaa !1876
  %100 = load %struct._object*, %struct._object** %tb, align 8, !dbg !10410, !tbaa !1876
  call void @PyErr_Restore(%struct._object* %98, %struct._object* %99, %struct._object* %100), !dbg !10411
  %101 = bitcast %struct._object** %val2 to i8*, !dbg !10412
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !10412
  br label %if.end.109

if.end.109:                                       ; preds = %do.end.108, %do.end.77
  br label %if.end.110, !dbg !10413

if.end.110:                                       ; preds = %if.end.109, %if.end.53
  %102 = load %struct._object*, %struct._object** %res, align 8, !dbg !10414, !tbaa !1876
  store %struct._object* %102, %struct._object** %retval, !dbg !10415
  store i32 1, i32* %cleanup.dest.slot
  %103 = bitcast %struct._object** %tb to i8*, !dbg !10416
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !10416
  %104 = bitcast %struct._object** %val to i8*, !dbg !10416
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !10416
  %105 = bitcast %struct._object** %exc to i8*, !dbg !10416
  call void @llvm.lifetime.end(i64 8, i8* %105) #2, !dbg !10416
  br label %cleanup

cleanup:                                          ; preds = %if.end.110, %if.then.15, %if.then.12, %if.then.4, %if.end
  %106 = bitcast i32* %r to i8*, !dbg !10417
  call void @llvm.lifetime.end(i64 4, i8* %106) #2, !dbg !10417
  %107 = bitcast %struct._object** %res to i8*, !dbg !10417
  call void @llvm.lifetime.end(i64 8, i8* %107) #2, !dbg !10417
  %108 = load %struct._object*, %struct._object** %retval, !dbg !10417
  ret %struct._object* %108, !dbg !10417
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_fileno(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1298, metadata !1880), !dbg !10418
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1299, metadata !1880), !dbg !10419
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10420, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10422
  %1 = load i32, i32* %ok, align 4, !dbg !10422, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !10423
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10424

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10425, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10429
  %3 = load i32, i32* %detached, align 4, !dbg !10429, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !10430
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10431

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10432, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10435
  br label %if.end, !dbg !10436

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10437, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10440
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10441
  br label %return, !dbg !10441

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10443, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10444
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10444, !tbaa !4120
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_fileno, i8* null), !dbg !10445
  store %struct._object* %call, %struct._object** %retval, !dbg !10446
  br label %return, !dbg !10446

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10447
  ret %struct._object* %8, !dbg !10447
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_seekable(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1302, metadata !1880), !dbg !10448
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1303, metadata !1880), !dbg !10449
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10450, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10452
  %1 = load i32, i32* %ok, align 4, !dbg !10452, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !10453
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10454

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10455, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10459
  %3 = load i32, i32* %detached, align 4, !dbg !10459, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !10460
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10461

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10462, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10465
  br label %if.end, !dbg !10466

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10467, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10470
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10471
  br label %return, !dbg !10471

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10473, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10474
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10474, !tbaa !4120
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_seekable, i8* null), !dbg !10475
  store %struct._object* %call, %struct._object** %retval, !dbg !10476
  br label %return, !dbg !10476

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10477
  ret %struct._object* %8, !dbg !10477
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_readable(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1306, metadata !1880), !dbg !10478
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1307, metadata !1880), !dbg !10479
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10480, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10482
  %1 = load i32, i32* %ok, align 4, !dbg !10482, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !10483
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10484

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10485, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10489
  %3 = load i32, i32* %detached, align 4, !dbg !10489, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !10490
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10491

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10492, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10495
  br label %if.end, !dbg !10496

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10497, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10500
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10501
  br label %return, !dbg !10501

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10503, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10504
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10504, !tbaa !4120
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_readable, i8* null), !dbg !10505
  store %struct._object* %call, %struct._object** %retval, !dbg !10506
  br label %return, !dbg !10506

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10507
  ret %struct._object* %8, !dbg !10507
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_writable(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1310, metadata !1880), !dbg !10508
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1311, metadata !1880), !dbg !10509
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10510, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10512
  %1 = load i32, i32* %ok, align 4, !dbg !10512, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !10513
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10514

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10515, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10519
  %3 = load i32, i32* %detached, align 4, !dbg !10519, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !10520
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10521

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10522, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10525
  br label %if.end, !dbg !10526

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10527, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10530
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10531
  br label %return, !dbg !10531

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10533, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10534
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10534, !tbaa !4120
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_writable, i8* null), !dbg !10535
  store %struct._object* %call, %struct._object** %retval, !dbg !10536
  br label %return, !dbg !10536

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10537
  ret %struct._object* %8, !dbg !10537
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_isatty(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1314, metadata !1880), !dbg !10538
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1315, metadata !1880), !dbg !10539
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10540, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10542
  %1 = load i32, i32* %ok, align 4, !dbg !10542, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !10543
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10544

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10545, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10549
  %3 = load i32, i32* %detached, align 4, !dbg !10549, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !10550
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10551

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10552, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10555
  br label %if.end, !dbg !10556

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10557, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10560
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10561
  br label %return, !dbg !10561

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10563, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10564
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10564, !tbaa !4120
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_isatty, i8* null), !dbg !10565
  store %struct._object* %call, %struct._object** %retval, !dbg !10566
  br label %return, !dbg !10566

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10567
  ret %struct._object* %8, !dbg !10567
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_getstate(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1318, metadata !1880), !dbg !10568
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1319, metadata !1880), !dbg !10569
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10570, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10571, !tbaa !1876
  %2 = bitcast %struct.textio* %1 to %struct._object*, !dbg !10572
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !10573
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10573, !tbaa !2195
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 1, !dbg !10574
  %4 = load i8*, i8** %tp_name, align 8, !dbg !10574, !tbaa !3085
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0), i8* %4), !dbg !10575
  ret %struct._object* null, !dbg !10576
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_seek(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %cookieObj = alloca %struct._object*, align 8
  %posobj = alloca %struct._object*, align 8
  %cookie = alloca %struct.cookie_type, align 8
  %whence = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %cmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp104 = alloca %struct._object*, align 8
  %_py_decref_tmp126 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp143 = alloca %struct._object*, align 8
  %_py_decref_tmp177 = alloca %struct._object*, align 8
  %_py_decref_tmp199 = alloca %struct._object*, align 8
  %_py_decref_tmp214 = alloca %struct._object*, align 8
  %_py_tmp226 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %input_chunk = alloca %struct._object*, align 8
  %decoded = alloca %struct._object*, align 8
  %_py_decref_tmp267 = alloca %struct._object*, align 8
  %_py_decref_tmp285 = alloca %struct._object*, align 8
  %_py_xdecref_tmp336 = alloca %struct._object*, align 8
  %_py_decref_tmp341 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1322, metadata !1880), !dbg !10577
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1323, metadata !1880), !dbg !10578
  %0 = bitcast %struct._object** %cookieObj to i8*, !dbg !10579
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10579
  call void @llvm.dbg.declare(metadata %struct._object** %cookieObj, metadata !1324, metadata !1880), !dbg !10580
  %1 = bitcast %struct._object** %posobj to i8*, !dbg !10579
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !10579
  call void @llvm.dbg.declare(metadata %struct._object** %posobj, metadata !1325, metadata !1880), !dbg !10581
  %2 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !10582
  call void @llvm.lifetime.start(i64 24, i8* %2) #2, !dbg !10582
  call void @llvm.dbg.declare(metadata %struct.cookie_type* %cookie, metadata !1326, metadata !1880), !dbg !10583
  %3 = bitcast i32* %whence to i8*, !dbg !10584
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !10584
  call void @llvm.dbg.declare(metadata i32* %whence, metadata !1337, metadata !1880), !dbg !10585
  store i32 0, i32* %whence, align 4, !dbg !10585, !tbaa !1883
  %4 = bitcast %struct._object** %res to i8*, !dbg !10586
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !10586
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1338, metadata !1880), !dbg !10587
  %5 = bitcast i32* %cmp to i8*, !dbg !10588
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !10588
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !1339, metadata !1880), !dbg !10589
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10590, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 1, !dbg !10592
  %7 = load i32, i32* %ok, align 4, !dbg !10592, !tbaa !3900
  %cmp1 = icmp sle i32 %7, 0, !dbg !10593
  br i1 %cmp1, label %if.then, label %if.end.3, !dbg !10594

if.then:                                          ; preds = %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10595, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 2, !dbg !10599
  %9 = load i32, i32* %detached, align 4, !dbg !10599, !tbaa !3908
  %tobool = icmp ne i32 %9, 0, !dbg !10600
  br i1 %tobool, label %if.then.2, label %if.else, !dbg !10601

if.then.2:                                        ; preds = %if.then
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10602, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10605
  br label %if.end, !dbg !10606

if.else:                                          ; preds = %if.then
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10607, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10610
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !10611
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !10613

if.end.3:                                         ; preds = %entry
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !10614, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i32 0, i32 0), %struct._object** %cookieObj, i32* %whence), !dbg !10616
  %tobool4 = icmp ne i32 %call, 0, !dbg !10616
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !10617

if.then.5:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !10618
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !10618

if.end.6:                                         ; preds = %if.end.3
  br label %do.body, !dbg !10619

do.body:                                          ; preds = %if.end.6
  %13 = bitcast i32* %r to i8*, !dbg !10620
  call void @llvm.lifetime.start(i64 4, i8* %13) #2, !dbg !10620
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1340, metadata !1880), !dbg !10622
  %14 = bitcast %struct._object** %_res to i8*, !dbg !10623
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !10623
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1342, metadata !1880), !dbg !10624
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10625, !tbaa !1876
  %16 = bitcast %struct.textio* %15 to %struct._object*, !dbg !10626
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !10627
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10627, !tbaa !2195
  %cmp7 = icmp eq %struct._typeobject* %17, @PyTextIOWrapper_Type, !dbg !10628
  br i1 %cmp7, label %if.then.8, label %if.else.32, !dbg !10629

if.then.8:                                        ; preds = %do.body
  %18 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10630, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %18, i32 0, i32 28, !dbg !10632
  %19 = load %struct._object*, %struct._object** %raw, align 8, !dbg !10632, !tbaa !4380
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !10633
  br i1 %cmp9, label %if.then.10, label %if.else.13, !dbg !10634

if.then.10:                                       ; preds = %if.then.8
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10635, !tbaa !1876
  %raw11 = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 28, !dbg !10637
  %21 = load %struct._object*, %struct._object** %raw11, align 8, !dbg !10637, !tbaa !4380
  %call12 = call i32 @_PyFileIO_closed(%struct._object* %21), !dbg !10638
  store i32 %call12, i32* %r, align 4, !dbg !10639, !tbaa !1883
  br label %if.end.28, !dbg !10640

if.else.13:                                       ; preds = %if.then.8
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10641, !tbaa !1876
  %call14 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %22, i8* null), !dbg !10643
  store %struct._object* %call14, %struct._object** %_res, align 8, !dbg !10644, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10645, !tbaa !1876
  %cmp15 = icmp eq %struct._object* %23, null, !dbg !10647
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !10648

if.then.16:                                       ; preds = %if.else.13
  store %struct._object* null, %struct._object** %retval, !dbg !10649
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10651

if.end.17:                                        ; preds = %if.else.13
  %24 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10652, !tbaa !1876
  %call18 = call i32 @PyObject_IsTrue(%struct._object* %24), !dbg !10654
  store i32 %call18, i32* %r, align 4, !dbg !10655, !tbaa !1883
  br label %do.body.19, !dbg !10656

do.body.19:                                       ; preds = %if.end.17
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10657
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !10657
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1343, metadata !1880), !dbg !10659
  %26 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10660, !tbaa !1876
  store %struct._object* %26, %struct._object** %_py_decref_tmp, align 8, !dbg !10659, !tbaa !1876
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10661, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !10663
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !10664, !tbaa !1927
  %dec = add i64 %28, -1, !dbg !10664
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10664, !tbaa !1927
  %cmp20 = icmp ne i64 %dec, 0, !dbg !10665
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !10666

if.then.21:                                       ; preds = %do.body.19
  br label %if.end.24, !dbg !10667

if.else.22:                                       ; preds = %do.body.19
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10669, !tbaa !1876
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !10671
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !10671, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !10672
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10672, !tbaa !2197
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10673, !tbaa !1876
  call void %31(%struct._object* %32), !dbg !10674
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.22, %if.then.21
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10675
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !10675
  br label %do.cond, !dbg !10677

do.cond:                                          ; preds = %if.end.24
  br label %do.end, !dbg !10678

do.end:                                           ; preds = %do.cond
  %34 = load i32, i32* %r, align 4, !dbg !10680, !tbaa !1883
  %cmp25 = icmp slt i32 %34, 0, !dbg !10683
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !10684

if.then.26:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !10685
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10687

if.end.27:                                        ; preds = %do.end
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.10
  %35 = load i32, i32* %r, align 4, !dbg !10688, !tbaa !1883
  %cmp29 = icmp sgt i32 %35, 0, !dbg !10691
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !10692

if.then.30:                                       ; preds = %if.end.28
  %36 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10693, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %36, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !10696
  store %struct._object* null, %struct._object** %retval, !dbg !10697
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10697

if.end.31:                                        ; preds = %if.end.28
  br label %if.end.37, !dbg !10698

if.else.32:                                       ; preds = %do.body
  %37 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10700, !tbaa !1876
  %38 = bitcast %struct.textio* %37 to %struct._object*, !dbg !10703
  %call33 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %38, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !10704
  %cmp34 = icmp eq %struct._object* %call33, null, !dbg !10705
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !10706

if.then.35:                                       ; preds = %if.else.32
  store %struct._object* null, %struct._object** %retval, !dbg !10707
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10709

if.end.36:                                        ; preds = %if.else.32
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.end.31
  store i32 0, i32* %cleanup.dest.slot, !dbg !10710
  br label %cleanup, !dbg !10710

cleanup:                                          ; preds = %if.end.37, %if.then.35, %if.then.30, %if.then.26, %if.then.16
  %39 = bitcast %struct._object** %_res to i8*, !dbg !10712
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !10712
  %40 = bitcast i32* %r to i8*, !dbg !10712
  call void @llvm.lifetime.end(i64 4, i8* %40) #2, !dbg !10712
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.356 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond.39, !dbg !10718

do.cond.39:                                       ; preds = %cleanup.cont
  br label %do.end.40, !dbg !10719

do.end.40:                                        ; preds = %do.cond.39
  %41 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10721, !tbaa !1876
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !10722
  %42 = load i64, i64* %ob_refcnt41, align 8, !dbg !10723, !tbaa !1927
  %inc = add i64 %42, 1, !dbg !10723
  store i64 %inc, i64* %ob_refcnt41, align 8, !dbg !10723, !tbaa !1927
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10724, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %43, i32 0, i32 16, !dbg !10726
  %44 = load i8, i8* %seekable, align 1, !dbg !10726, !tbaa !4668
  %tobool42 = icmp ne i8 %44, 0, !dbg !10724
  br i1 %tobool42, label %if.end.45, label %if.then.43, !dbg !10727

if.then.43:                                       ; preds = %do.end.40
  %call44 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i32 0, i32 0)), !dbg !10728
  br label %fail, !dbg !10730

if.end.45:                                        ; preds = %do.end.40
  %45 = load i32, i32* %whence, align 4, !dbg !10731, !tbaa !1883
  %cmp46 = icmp eq i32 %45, 1, !dbg !10732
  br i1 %cmp46, label %if.then.47, label %if.else.72, !dbg !10733

if.then.47:                                       ; preds = %if.end.45
  %46 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10734, !tbaa !1876
  %47 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !10735, !tbaa !1876
  %call48 = call i32 @PyObject_RichCompareBool(%struct._object* %46, %struct._object* %47, i32 2), !dbg !10736
  store i32 %call48, i32* %cmp, align 4, !dbg !10737, !tbaa !1883
  %48 = load i32, i32* %cmp, align 4, !dbg !10738, !tbaa !1883
  %cmp49 = icmp slt i32 %48, 0, !dbg !10740
  br i1 %cmp49, label %if.then.50, label %if.end.51, !dbg !10741

if.then.50:                                       ; preds = %if.then.47
  br label %fail, !dbg !10742

if.end.51:                                        ; preds = %if.then.47
  %49 = load i32, i32* %cmp, align 4, !dbg !10743, !tbaa !1883
  %cmp52 = icmp eq i32 %49, 0, !dbg !10745
  br i1 %cmp52, label %if.then.53, label %if.end.55, !dbg !10746

if.then.53:                                       ; preds = %if.end.51
  %call54 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.69, i32 0, i32 0)), !dbg !10747
  br label %fail, !dbg !10749

if.end.55:                                        ; preds = %if.end.51
  br label %do.body.56, !dbg !10750

do.body.56:                                       ; preds = %if.end.55
  %50 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !10751
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !10751
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp57, metadata !1349, metadata !1880), !dbg !10753
  %51 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10754, !tbaa !1876
  store %struct._object* %51, %struct._object** %_py_decref_tmp57, align 8, !dbg !10753, !tbaa !1876
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !10755, !tbaa !1876
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !10757
  %53 = load i64, i64* %ob_refcnt58, align 8, !dbg !10758, !tbaa !1927
  %dec59 = add i64 %53, -1, !dbg !10758
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !10758, !tbaa !1927
  %cmp60 = icmp ne i64 %dec59, 0, !dbg !10759
  br i1 %cmp60, label %if.then.61, label %if.else.62, !dbg !10760

if.then.61:                                       ; preds = %do.body.56
  br label %if.end.65, !dbg !10761

if.else.62:                                       ; preds = %do.body.56
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !10763, !tbaa !1876
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !10765
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !10765, !tbaa !2195
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !10766
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !10766, !tbaa !2197
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !10767, !tbaa !1876
  call void %56(%struct._object* %57), !dbg !10768
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  %58 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !10769
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !10769
  br label %do.cond.66, !dbg !10771

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !10772

do.end.67:                                        ; preds = %do.cond.66
  %59 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10774, !tbaa !1876
  %60 = bitcast %struct.textio* %59 to %struct._object*, !dbg !10775
  %call68 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %60, %struct._Py_Identifier* @PyId_tell, i8* null), !dbg !10776
  store %struct._object* %call68, %struct._object** %cookieObj, align 8, !dbg !10777, !tbaa !1876
  %61 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10778, !tbaa !1876
  %cmp69 = icmp eq %struct._object* %61, null, !dbg !10780
  br i1 %cmp69, label %if.then.70, label %if.end.71, !dbg !10781

if.then.70:                                       ; preds = %do.end.67
  br label %fail, !dbg !10782

if.end.71:                                        ; preds = %do.end.67
  br label %if.end.163, !dbg !10783

if.else.72:                                       ; preds = %if.end.45
  %62 = load i32, i32* %whence, align 4, !dbg !10784, !tbaa !1883
  %cmp73 = icmp eq i32 %62, 2, !dbg !10785
  br i1 %cmp73, label %if.then.74, label %if.else.157, !dbg !10786

if.then.74:                                       ; preds = %if.else.72
  %63 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10787, !tbaa !1876
  %64 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !10788, !tbaa !1876
  %call75 = call i32 @PyObject_RichCompareBool(%struct._object* %63, %struct._object* %64, i32 2), !dbg !10789
  store i32 %call75, i32* %cmp, align 4, !dbg !10790, !tbaa !1883
  %65 = load i32, i32* %cmp, align 4, !dbg !10791, !tbaa !1883
  %cmp76 = icmp slt i32 %65, 0, !dbg !10793
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !10794

if.then.77:                                       ; preds = %if.then.74
  br label %fail, !dbg !10795

if.end.78:                                        ; preds = %if.then.74
  %66 = load i32, i32* %cmp, align 4, !dbg !10796, !tbaa !1883
  %cmp79 = icmp eq i32 %66, 0, !dbg !10798
  br i1 %cmp79, label %if.then.80, label %if.end.82, !dbg !10799

if.then.80:                                       ; preds = %if.end.78
  %call81 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70, i32 0, i32 0)), !dbg !10800
  br label %fail, !dbg !10802

if.end.82:                                        ; preds = %if.end.78
  %67 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10803, !tbaa !1876
  %68 = bitcast %struct.textio* %67 to %struct._object*, !dbg !10804
  %call83 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %68, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !10805
  store %struct._object* %call83, %struct._object** %res, align 8, !dbg !10806, !tbaa !1876
  %69 = load %struct._object*, %struct._object** %res, align 8, !dbg !10807, !tbaa !1876
  %cmp84 = icmp eq %struct._object* %69, null, !dbg !10809
  br i1 %cmp84, label %if.then.85, label %if.end.86, !dbg !10810

if.then.85:                                       ; preds = %if.end.82
  br label %fail, !dbg !10811

if.end.86:                                        ; preds = %if.end.82
  br label %do.body.87, !dbg !10812

do.body.87:                                       ; preds = %if.end.86
  %70 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !10813
  call void @llvm.lifetime.start(i64 8, i8* %70) #2, !dbg !10813
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp88, metadata !1353, metadata !1880), !dbg !10815
  %71 = load %struct._object*, %struct._object** %res, align 8, !dbg !10816, !tbaa !1876
  store %struct._object* %71, %struct._object** %_py_decref_tmp88, align 8, !dbg !10815, !tbaa !1876
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10817, !tbaa !1876
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !10819
  %73 = load i64, i64* %ob_refcnt89, align 8, !dbg !10820, !tbaa !1927
  %dec90 = add i64 %73, -1, !dbg !10820
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !10820, !tbaa !1927
  %cmp91 = icmp ne i64 %dec90, 0, !dbg !10821
  br i1 %cmp91, label %if.then.92, label %if.else.93, !dbg !10822

if.then.92:                                       ; preds = %do.body.87
  br label %if.end.96, !dbg !10823

if.else.93:                                       ; preds = %do.body.87
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10825, !tbaa !1876
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !10827
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !10827, !tbaa !2195
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !10828
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !10828, !tbaa !2197
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10829, !tbaa !1876
  call void %76(%struct._object* %77), !dbg !10830
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %78 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !10831
  call void @llvm.lifetime.end(i64 8, i8* %78) #2, !dbg !10831
  br label %do.cond.97, !dbg !10833

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !10834

do.end.98:                                        ; preds = %do.cond.97
  %79 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10836, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %79, %struct._object* null), !dbg !10837
  br label %do.body.99, !dbg !10838

do.body.99:                                       ; preds = %do.end.98
  %80 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10839
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !10839
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1357, metadata !1880), !dbg !10841
  %81 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10842, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %81, i32 0, i32 26, !dbg !10843
  %82 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !10843, !tbaa !4322
  store %struct._object* %82, %struct._object** %_py_tmp, align 8, !dbg !10841, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10844, !tbaa !1876
  %cmp100 = icmp ne %struct._object* %83, null, !dbg !10845
  br i1 %cmp100, label %if.then.101, label %if.end.115, !dbg !10846

if.then.101:                                      ; preds = %do.body.99
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10847, !tbaa !1876
  %snapshot102 = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 26, !dbg !10849
  store %struct._object* null, %struct._object** %snapshot102, align 8, !dbg !10850, !tbaa !4322
  br label %do.body.103, !dbg !10851

do.body.103:                                      ; preds = %if.then.101
  %85 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !10852
  call void @llvm.lifetime.start(i64 8, i8* %85) #2, !dbg !10852
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp104, metadata !1359, metadata !1880), !dbg !10854
  %86 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10855, !tbaa !1876
  store %struct._object* %86, %struct._object** %_py_decref_tmp104, align 8, !dbg !10854, !tbaa !1876
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !10856, !tbaa !1876
  %ob_refcnt105 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !10858
  %88 = load i64, i64* %ob_refcnt105, align 8, !dbg !10859, !tbaa !1927
  %dec106 = add i64 %88, -1, !dbg !10859
  store i64 %dec106, i64* %ob_refcnt105, align 8, !dbg !10859, !tbaa !1927
  %cmp107 = icmp ne i64 %dec106, 0, !dbg !10860
  br i1 %cmp107, label %if.then.108, label %if.else.109, !dbg !10861

if.then.108:                                      ; preds = %do.body.103
  br label %if.end.112, !dbg !10862

if.else.109:                                      ; preds = %do.body.103
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !10864, !tbaa !1876
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !10866
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !10866, !tbaa !2195
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !10867
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !10867, !tbaa !2197
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !10868, !tbaa !1876
  call void %91(%struct._object* %92), !dbg !10869
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  %93 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !10870
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !10870
  br label %do.cond.113, !dbg !10872

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !10873

do.end.114:                                       ; preds = %do.cond.113
  br label %if.end.115, !dbg !10875

if.end.115:                                       ; preds = %do.end.114, %do.body.99
  %94 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10877
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !10877
  br label %do.cond.116, !dbg !10880

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !10881

do.end.117:                                       ; preds = %do.cond.116
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10883, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 7, !dbg !10884
  %96 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !10884, !tbaa !4206
  %tobool118 = icmp ne %struct._object* %96, null, !dbg !10883
  br i1 %tobool118, label %if.then.119, label %if.end.137, !dbg !10885

if.then.119:                                      ; preds = %do.end.117
  %97 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10886, !tbaa !1876
  %decoder120 = getelementptr inbounds %struct.textio, %struct.textio* %97, i32 0, i32 7, !dbg !10887
  %98 = load %struct._object*, %struct._object** %decoder120, align 8, !dbg !10887, !tbaa !4206
  %call121 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %98, %struct._Py_Identifier* @PyId_reset, i8* null), !dbg !10888
  store %struct._object* %call121, %struct._object** %res, align 8, !dbg !10889, !tbaa !1876
  %99 = load %struct._object*, %struct._object** %res, align 8, !dbg !10890, !tbaa !1876
  %cmp122 = icmp eq %struct._object* %99, null, !dbg !10892
  br i1 %cmp122, label %if.then.123, label %if.end.124, !dbg !10893

if.then.123:                                      ; preds = %if.then.119
  br label %fail, !dbg !10894

if.end.124:                                       ; preds = %if.then.119
  br label %do.body.125, !dbg !10895

do.body.125:                                      ; preds = %if.end.124
  %100 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !10896
  call void @llvm.lifetime.start(i64 8, i8* %100) #2, !dbg !10896
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp126, metadata !1363, metadata !1880), !dbg !10898
  %101 = load %struct._object*, %struct._object** %res, align 8, !dbg !10899, !tbaa !1876
  store %struct._object* %101, %struct._object** %_py_decref_tmp126, align 8, !dbg !10898, !tbaa !1876
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10900, !tbaa !1876
  %ob_refcnt127 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !10902
  %103 = load i64, i64* %ob_refcnt127, align 8, !dbg !10903, !tbaa !1927
  %dec128 = add i64 %103, -1, !dbg !10903
  store i64 %dec128, i64* %ob_refcnt127, align 8, !dbg !10903, !tbaa !1927
  %cmp129 = icmp ne i64 %dec128, 0, !dbg !10904
  br i1 %cmp129, label %if.then.130, label %if.else.131, !dbg !10905

if.then.130:                                      ; preds = %do.body.125
  br label %if.end.134, !dbg !10906

if.else.131:                                      ; preds = %do.body.125
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10908, !tbaa !1876
  %ob_type132 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !10910
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type132, align 8, !dbg !10910, !tbaa !2195
  %tp_dealloc133 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !10911
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc133, align 8, !dbg !10911, !tbaa !2197
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10912, !tbaa !1876
  call void %106(%struct._object* %107), !dbg !10913
  br label %if.end.134

if.end.134:                                       ; preds = %if.else.131, %if.then.130
  %108 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !10914
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !10914
  br label %do.cond.135, !dbg !10916

do.cond.135:                                      ; preds = %if.end.134
  br label %do.end.136, !dbg !10917

do.end.136:                                       ; preds = %do.cond.135
  br label %if.end.137, !dbg !10919

if.end.137:                                       ; preds = %do.end.136, %do.end.117
  %109 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10920, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %109, i32 0, i32 4, !dbg !10921
  %110 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10921, !tbaa !4120
  %call138 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %110, %struct._Py_Identifier* @PyId_seek, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i32 0, i32 2), !dbg !10922
  store %struct._object* %call138, %struct._object** %res, align 8, !dbg !10923, !tbaa !1876
  br label %do.body.139, !dbg !10924

do.body.139:                                      ; preds = %if.end.137
  %111 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10925
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !10925
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1367, metadata !1880), !dbg !10927
  %112 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10928, !tbaa !1876
  store %struct._object* %112, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10927, !tbaa !1876
  %113 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10929, !tbaa !1876
  %cmp140 = icmp ne %struct._object* %113, null, !dbg !10930
  br i1 %cmp140, label %if.then.141, label %if.end.154, !dbg !10931

if.then.141:                                      ; preds = %do.body.139
  br label %do.body.142, !dbg !10932

do.body.142:                                      ; preds = %if.then.141
  %114 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !10934
  call void @llvm.lifetime.start(i64 8, i8* %114) #2, !dbg !10934
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp143, metadata !1369, metadata !1880), !dbg !10936
  %115 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10937, !tbaa !1876
  store %struct._object* %115, %struct._object** %_py_decref_tmp143, align 8, !dbg !10936, !tbaa !1876
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !10938, !tbaa !1876
  %ob_refcnt144 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !10940
  %117 = load i64, i64* %ob_refcnt144, align 8, !dbg !10941, !tbaa !1927
  %dec145 = add i64 %117, -1, !dbg !10941
  store i64 %dec145, i64* %ob_refcnt144, align 8, !dbg !10941, !tbaa !1927
  %cmp146 = icmp ne i64 %dec145, 0, !dbg !10942
  br i1 %cmp146, label %if.then.147, label %if.else.148, !dbg !10943

if.then.147:                                      ; preds = %do.body.142
  br label %if.end.151, !dbg !10944

if.else.148:                                      ; preds = %do.body.142
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !10946, !tbaa !1876
  %ob_type149 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1, !dbg !10948
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type149, align 8, !dbg !10948, !tbaa !2195
  %tp_dealloc150 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4, !dbg !10949
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc150, align 8, !dbg !10949, !tbaa !2197
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !10950, !tbaa !1876
  call void %120(%struct._object* %121), !dbg !10951
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.148, %if.then.147
  %122 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !10952
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !10952
  br label %do.cond.152, !dbg !10954

do.cond.152:                                      ; preds = %if.end.151
  br label %do.end.153, !dbg !10955

do.end.153:                                       ; preds = %do.cond.152
  br label %if.end.154, !dbg !10957

if.end.154:                                       ; preds = %do.end.153, %do.body.139
  %123 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10959
  call void @llvm.lifetime.end(i64 8, i8* %123) #2, !dbg !10959
  br label %do.cond.155, !dbg !10960

do.cond.155:                                      ; preds = %if.end.154
  br label %do.end.156, !dbg !10961

do.end.156:                                       ; preds = %do.cond.155
  %124 = load %struct._object*, %struct._object** %res, align 8, !dbg !10963, !tbaa !1876
  store %struct._object* %124, %struct._object** %retval, !dbg !10964
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !10964

if.else.157:                                      ; preds = %if.else.72
  %125 = load i32, i32* %whence, align 4, !dbg !10965, !tbaa !1883
  %cmp158 = icmp ne i32 %125, 0, !dbg !10967
  br i1 %cmp158, label %if.then.159, label %if.end.161, !dbg !10968

if.then.159:                                      ; preds = %if.else.157
  %126 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10969, !tbaa !1876
  %127 = load i32, i32* %whence, align 4, !dbg !10971, !tbaa !1883
  %call160 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %126, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.72, i32 0, i32 0), i32 %127), !dbg !10972
  br label %fail, !dbg !10973

if.end.161:                                       ; preds = %if.else.157
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161
  br label %if.end.163

if.end.163:                                       ; preds = %if.end.162, %if.end.71
  %128 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10974, !tbaa !1876
  %129 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !10975, !tbaa !1876
  %call164 = call i32 @PyObject_RichCompareBool(%struct._object* %128, %struct._object* %129, i32 0), !dbg !10976
  store i32 %call164, i32* %cmp, align 4, !dbg !10977, !tbaa !1883
  %130 = load i32, i32* %cmp, align 4, !dbg !10978, !tbaa !1883
  %cmp165 = icmp slt i32 %130, 0, !dbg !10980
  br i1 %cmp165, label %if.then.166, label %if.end.167, !dbg !10981

if.then.166:                                      ; preds = %if.end.163
  br label %fail, !dbg !10982

if.end.167:                                       ; preds = %if.end.163
  %131 = load i32, i32* %cmp, align 4, !dbg !10983, !tbaa !1883
  %cmp168 = icmp eq i32 %131, 1, !dbg !10985
  br i1 %cmp168, label %if.then.169, label %if.end.171, !dbg !10986

if.then.169:                                      ; preds = %if.end.167
  %132 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10987, !tbaa !1876
  %133 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10989, !tbaa !1876
  %call170 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %132, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0), %struct._object* %133), !dbg !10990
  br label %fail, !dbg !10991

if.end.171:                                       ; preds = %if.end.167
  %134 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10992, !tbaa !1876
  %135 = bitcast %struct.textio* %134 to %struct._object*, !dbg !10993
  %136 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !10994, !tbaa !1876
  %call172 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %135, %struct._object* %136, i8* null), !dbg !10995
  store %struct._object* %call172, %struct._object** %res, align 8, !dbg !10996, !tbaa !1876
  %137 = load %struct._object*, %struct._object** %res, align 8, !dbg !10997, !tbaa !1876
  %cmp173 = icmp eq %struct._object* %137, null, !dbg !10999
  br i1 %cmp173, label %if.then.174, label %if.end.175, !dbg !11000

if.then.174:                                      ; preds = %if.end.171
  br label %fail, !dbg !11001

if.end.175:                                       ; preds = %if.end.171
  br label %do.body.176, !dbg !11002

do.body.176:                                      ; preds = %if.end.175
  %138 = bitcast %struct._object** %_py_decref_tmp177 to i8*, !dbg !11003
  call void @llvm.lifetime.start(i64 8, i8* %138) #2, !dbg !11003
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp177, metadata !1372, metadata !1880), !dbg !11005
  %139 = load %struct._object*, %struct._object** %res, align 8, !dbg !11006, !tbaa !1876
  store %struct._object* %139, %struct._object** %_py_decref_tmp177, align 8, !dbg !11005, !tbaa !1876
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !11007, !tbaa !1876
  %ob_refcnt178 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0, !dbg !11009
  %141 = load i64, i64* %ob_refcnt178, align 8, !dbg !11010, !tbaa !1927
  %dec179 = add i64 %141, -1, !dbg !11010
  store i64 %dec179, i64* %ob_refcnt178, align 8, !dbg !11010, !tbaa !1927
  %cmp180 = icmp ne i64 %dec179, 0, !dbg !11011
  br i1 %cmp180, label %if.then.181, label %if.else.182, !dbg !11012

if.then.181:                                      ; preds = %do.body.176
  br label %if.end.185, !dbg !11013

if.else.182:                                      ; preds = %do.body.176
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !11015, !tbaa !1876
  %ob_type183 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 1, !dbg !11017
  %143 = load %struct._typeobject*, %struct._typeobject** %ob_type183, align 8, !dbg !11017, !tbaa !2195
  %tp_dealloc184 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %143, i32 0, i32 4, !dbg !11018
  %144 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc184, align 8, !dbg !11018, !tbaa !2197
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !11019, !tbaa !1876
  call void %144(%struct._object* %145), !dbg !11020
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.182, %if.then.181
  %146 = bitcast %struct._object** %_py_decref_tmp177 to i8*, !dbg !11021
  call void @llvm.lifetime.end(i64 8, i8* %146) #2, !dbg !11021
  br label %do.cond.186, !dbg !11023

do.cond.186:                                      ; preds = %if.end.185
  br label %do.end.187, !dbg !11024

do.end.187:                                       ; preds = %do.cond.186
  %147 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !11026, !tbaa !1876
  %call188 = call i32 @textiowrapper_parse_cookie(%struct.cookie_type* %cookie, %struct._object* %147), !dbg !11028
  %cmp189 = icmp slt i32 %call188, 0, !dbg !11029
  br i1 %cmp189, label %if.then.190, label %if.end.191, !dbg !11030

if.then.190:                                      ; preds = %do.end.187
  br label %fail, !dbg !11031

if.end.191:                                       ; preds = %do.end.187
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11032
  %148 = load i64, i64* %start_pos, align 8, !dbg !11032, !tbaa !11033
  %call192 = call %struct._object* @PyLong_FromSsize_t(i64 %148), !dbg !11035
  store %struct._object* %call192, %struct._object** %posobj, align 8, !dbg !11036, !tbaa !1876
  %149 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11037, !tbaa !1876
  %cmp193 = icmp eq %struct._object* %149, null, !dbg !11039
  br i1 %cmp193, label %if.then.194, label %if.end.195, !dbg !11040

if.then.194:                                      ; preds = %if.end.191
  br label %fail, !dbg !11041

if.end.195:                                       ; preds = %if.end.191
  %150 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11042, !tbaa !1876
  %buffer196 = getelementptr inbounds %struct.textio, %struct.textio* %150, i32 0, i32 4, !dbg !11043
  %151 = load %struct._object*, %struct._object** %buffer196, align 8, !dbg !11043, !tbaa !4120
  %152 = load %struct._object*, %struct._object** @_PyIO_str_seek, align 8, !dbg !11044, !tbaa !1876
  %153 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11045, !tbaa !1876
  %call197 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %151, %struct._object* %152, %struct._object* %153, i8* null), !dbg !11046
  store %struct._object* %call197, %struct._object** %res, align 8, !dbg !11047, !tbaa !1876
  br label %do.body.198, !dbg !11048

do.body.198:                                      ; preds = %if.end.195
  %154 = bitcast %struct._object** %_py_decref_tmp199 to i8*, !dbg !11049
  call void @llvm.lifetime.start(i64 8, i8* %154) #2, !dbg !11049
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp199, metadata !1374, metadata !1880), !dbg !11051
  %155 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11052, !tbaa !1876
  store %struct._object* %155, %struct._object** %_py_decref_tmp199, align 8, !dbg !11051, !tbaa !1876
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp199, align 8, !dbg !11053, !tbaa !1876
  %ob_refcnt200 = getelementptr inbounds %struct._object, %struct._object* %156, i32 0, i32 0, !dbg !11055
  %157 = load i64, i64* %ob_refcnt200, align 8, !dbg !11056, !tbaa !1927
  %dec201 = add i64 %157, -1, !dbg !11056
  store i64 %dec201, i64* %ob_refcnt200, align 8, !dbg !11056, !tbaa !1927
  %cmp202 = icmp ne i64 %dec201, 0, !dbg !11057
  br i1 %cmp202, label %if.then.203, label %if.else.204, !dbg !11058

if.then.203:                                      ; preds = %do.body.198
  br label %if.end.207, !dbg !11059

if.else.204:                                      ; preds = %do.body.198
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp199, align 8, !dbg !11061, !tbaa !1876
  %ob_type205 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 1, !dbg !11063
  %159 = load %struct._typeobject*, %struct._typeobject** %ob_type205, align 8, !dbg !11063, !tbaa !2195
  %tp_dealloc206 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %159, i32 0, i32 4, !dbg !11064
  %160 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc206, align 8, !dbg !11064, !tbaa !2197
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp199, align 8, !dbg !11065, !tbaa !1876
  call void %160(%struct._object* %161), !dbg !11066
  br label %if.end.207

if.end.207:                                       ; preds = %if.else.204, %if.then.203
  %162 = bitcast %struct._object** %_py_decref_tmp199 to i8*, !dbg !11067
  call void @llvm.lifetime.end(i64 8, i8* %162) #2, !dbg !11067
  br label %do.cond.208, !dbg !11068

do.cond.208:                                      ; preds = %if.end.207
  br label %do.end.209, !dbg !11069

do.end.209:                                       ; preds = %do.cond.208
  %163 = load %struct._object*, %struct._object** %res, align 8, !dbg !11071, !tbaa !1876
  %cmp210 = icmp eq %struct._object* %163, null, !dbg !11073
  br i1 %cmp210, label %if.then.211, label %if.end.212, !dbg !11074

if.then.211:                                      ; preds = %do.end.209
  br label %fail, !dbg !11075

if.end.212:                                       ; preds = %do.end.209
  br label %do.body.213, !dbg !11076

do.body.213:                                      ; preds = %if.end.212
  %164 = bitcast %struct._object** %_py_decref_tmp214 to i8*, !dbg !11077
  call void @llvm.lifetime.start(i64 8, i8* %164) #2, !dbg !11077
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp214, metadata !1376, metadata !1880), !dbg !11079
  %165 = load %struct._object*, %struct._object** %res, align 8, !dbg !11080, !tbaa !1876
  store %struct._object* %165, %struct._object** %_py_decref_tmp214, align 8, !dbg !11079, !tbaa !1876
  %166 = load %struct._object*, %struct._object** %_py_decref_tmp214, align 8, !dbg !11081, !tbaa !1876
  %ob_refcnt215 = getelementptr inbounds %struct._object, %struct._object* %166, i32 0, i32 0, !dbg !11083
  %167 = load i64, i64* %ob_refcnt215, align 8, !dbg !11084, !tbaa !1927
  %dec216 = add i64 %167, -1, !dbg !11084
  store i64 %dec216, i64* %ob_refcnt215, align 8, !dbg !11084, !tbaa !1927
  %cmp217 = icmp ne i64 %dec216, 0, !dbg !11085
  br i1 %cmp217, label %if.then.218, label %if.else.219, !dbg !11086

if.then.218:                                      ; preds = %do.body.213
  br label %if.end.222, !dbg !11087

if.else.219:                                      ; preds = %do.body.213
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp214, align 8, !dbg !11089, !tbaa !1876
  %ob_type220 = getelementptr inbounds %struct._object, %struct._object* %168, i32 0, i32 1, !dbg !11091
  %169 = load %struct._typeobject*, %struct._typeobject** %ob_type220, align 8, !dbg !11091, !tbaa !2195
  %tp_dealloc221 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %169, i32 0, i32 4, !dbg !11092
  %170 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc221, align 8, !dbg !11092, !tbaa !2197
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp214, align 8, !dbg !11093, !tbaa !1876
  call void %170(%struct._object* %171), !dbg !11094
  br label %if.end.222

if.end.222:                                       ; preds = %if.else.219, %if.then.218
  %172 = bitcast %struct._object** %_py_decref_tmp214 to i8*, !dbg !11095
  call void @llvm.lifetime.end(i64 8, i8* %172) #2, !dbg !11095
  br label %do.cond.223, !dbg !11096

do.cond.223:                                      ; preds = %if.end.222
  br label %do.end.224, !dbg !11097

do.end.224:                                       ; preds = %do.cond.223
  %173 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11099, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %173, %struct._object* null), !dbg !11100
  br label %do.body.225, !dbg !11101

do.body.225:                                      ; preds = %do.end.224
  %174 = bitcast %struct._object** %_py_tmp226 to i8*, !dbg !11102
  call void @llvm.lifetime.start(i64 8, i8* %174) #2, !dbg !11102
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp226, metadata !1378, metadata !1880), !dbg !11104
  %175 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11105, !tbaa !1876
  %snapshot227 = getelementptr inbounds %struct.textio, %struct.textio* %175, i32 0, i32 26, !dbg !11106
  %176 = load %struct._object*, %struct._object** %snapshot227, align 8, !dbg !11106, !tbaa !4322
  store %struct._object* %176, %struct._object** %_py_tmp226, align 8, !dbg !11104, !tbaa !1876
  %177 = load %struct._object*, %struct._object** %_py_tmp226, align 8, !dbg !11107, !tbaa !1876
  %cmp228 = icmp ne %struct._object* %177, null, !dbg !11108
  br i1 %cmp228, label %if.then.229, label %if.end.243, !dbg !11109

if.then.229:                                      ; preds = %do.body.225
  %178 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11110, !tbaa !1876
  %snapshot230 = getelementptr inbounds %struct.textio, %struct.textio* %178, i32 0, i32 26, !dbg !11112
  store %struct._object* null, %struct._object** %snapshot230, align 8, !dbg !11113, !tbaa !4322
  br label %do.body.231, !dbg !11114

do.body.231:                                      ; preds = %if.then.229
  %179 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !11115
  call void @llvm.lifetime.start(i64 8, i8* %179) #2, !dbg !11115
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !1380, metadata !1880), !dbg !11117
  %180 = load %struct._object*, %struct._object** %_py_tmp226, align 8, !dbg !11118, !tbaa !1876
  store %struct._object* %180, %struct._object** %_py_decref_tmp232, align 8, !dbg !11117, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !11119, !tbaa !1876
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 0, !dbg !11121
  %182 = load i64, i64* %ob_refcnt233, align 8, !dbg !11122, !tbaa !1927
  %dec234 = add i64 %182, -1, !dbg !11122
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !11122, !tbaa !1927
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !11123
  br i1 %cmp235, label %if.then.236, label %if.else.237, !dbg !11124

if.then.236:                                      ; preds = %do.body.231
  br label %if.end.240, !dbg !11125

if.else.237:                                      ; preds = %do.body.231
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !11127, !tbaa !1876
  %ob_type238 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 1, !dbg !11129
  %184 = load %struct._typeobject*, %struct._typeobject** %ob_type238, align 8, !dbg !11129, !tbaa !2195
  %tp_dealloc239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %184, i32 0, i32 4, !dbg !11130
  %185 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc239, align 8, !dbg !11130, !tbaa !2197
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !11131, !tbaa !1876
  call void %185(%struct._object* %186), !dbg !11132
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.237, %if.then.236
  %187 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !11133
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !11133
  br label %do.cond.241, !dbg !11135

do.cond.241:                                      ; preds = %if.end.240
  br label %do.end.242, !dbg !11136

do.end.242:                                       ; preds = %do.cond.241
  br label %if.end.243, !dbg !11138

if.end.243:                                       ; preds = %do.end.242, %do.body.225
  %188 = bitcast %struct._object** %_py_tmp226 to i8*, !dbg !11140
  call void @llvm.lifetime.end(i64 8, i8* %188) #2, !dbg !11140
  br label %do.cond.244, !dbg !11143

do.cond.244:                                      ; preds = %if.end.243
  br label %do.end.245, !dbg !11144

do.end.245:                                       ; preds = %do.cond.244
  %189 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11146, !tbaa !1876
  %decoder246 = getelementptr inbounds %struct.textio, %struct.textio* %189, i32 0, i32 7, !dbg !11148
  %190 = load %struct._object*, %struct._object** %decoder246, align 8, !dbg !11148, !tbaa !4206
  %tobool247 = icmp ne %struct._object* %190, null, !dbg !11146
  br i1 %tobool247, label %if.then.248, label %if.end.253, !dbg !11149

if.then.248:                                      ; preds = %do.end.245
  %191 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11150, !tbaa !1876
  %call249 = call i32 @_textiowrapper_decoder_setstate(%struct.textio* %191, %struct.cookie_type* %cookie), !dbg !11153
  %cmp250 = icmp slt i32 %call249, 0, !dbg !11154
  br i1 %cmp250, label %if.then.251, label %if.end.252, !dbg !11155

if.then.251:                                      ; preds = %if.then.248
  br label %fail, !dbg !11156

if.end.252:                                       ; preds = %if.then.248
  br label %if.end.253, !dbg !11157

if.end.253:                                       ; preds = %if.end.252, %do.end.245
  %chars_to_skip = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11158
  %192 = load i32, i32* %chars_to_skip, align 4, !dbg !11158, !tbaa !11159
  %tobool254 = icmp ne i32 %192, 0, !dbg !11160
  br i1 %tobool254, label %if.then.255, label %if.else.317, !dbg !11161

if.then.255:                                      ; preds = %if.end.253
  %193 = bitcast %struct._object** %input_chunk to i8*, !dbg !11162
  call void @llvm.lifetime.start(i64 8, i8* %193) #2, !dbg !11162
  call void @llvm.dbg.declare(metadata %struct._object** %input_chunk, metadata !1384, metadata !1880), !dbg !11163
  %194 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11164, !tbaa !1876
  %buffer256 = getelementptr inbounds %struct.textio, %struct.textio* %194, i32 0, i32 4, !dbg !11165
  %195 = load %struct._object*, %struct._object** %buffer256, align 8, !dbg !11165, !tbaa !4120
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !11166
  %196 = load i32, i32* %bytes_to_feed, align 4, !dbg !11166, !tbaa !11167
  %call257 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %195, %struct._Py_Identifier* @PyId_read, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0), i32 %196), !dbg !11168
  store %struct._object* %call257, %struct._object** %input_chunk, align 8, !dbg !11163, !tbaa !1876
  %197 = bitcast %struct._object** %decoded to i8*, !dbg !11169
  call void @llvm.lifetime.start(i64 8, i8* %197) #2, !dbg !11169
  call void @llvm.dbg.declare(metadata %struct._object** %decoded, metadata !1387, metadata !1880), !dbg !11170
  %198 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11171, !tbaa !1876
  %cmp258 = icmp eq %struct._object* %198, null, !dbg !11173
  br i1 %cmp258, label %if.then.259, label %if.end.260, !dbg !11174

if.then.259:                                      ; preds = %if.then.255
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11175

if.end.260:                                       ; preds = %if.then.255
  %199 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11176, !tbaa !1876
  %ob_type261 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 1, !dbg !11177
  %200 = load %struct._typeobject*, %struct._typeobject** %ob_type261, align 8, !dbg !11177, !tbaa !2195
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %200, i32 0, i32 19, !dbg !11178
  %201 = load i64, i64* %tp_flags, align 8, !dbg !11178, !tbaa !3077
  %and = and i64 %201, 134217728, !dbg !11179
  %cmp262 = icmp ne i64 %and, 0, !dbg !11180
  br i1 %cmp262, label %if.end.278, label %if.then.263, !dbg !11181

if.then.263:                                      ; preds = %if.end.260
  %202 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11182, !tbaa !1876
  %203 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11183, !tbaa !1876
  %ob_type264 = getelementptr inbounds %struct._object, %struct._object* %203, i32 0, i32 1, !dbg !11184
  %204 = load %struct._typeobject*, %struct._typeobject** %ob_type264, align 8, !dbg !11184, !tbaa !2195
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %204, i32 0, i32 1, !dbg !11185
  %205 = load i8*, i8** %tp_name, align 8, !dbg !11185, !tbaa !3085
  %call265 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %202, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.75, i32 0, i32 0), i8* %205), !dbg !11186
  br label %do.body.266, !dbg !11187

do.body.266:                                      ; preds = %if.then.263
  %206 = bitcast %struct._object** %_py_decref_tmp267 to i8*, !dbg !11188
  call void @llvm.lifetime.start(i64 8, i8* %206) #2, !dbg !11188
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp267, metadata !1388, metadata !1880), !dbg !11190
  %207 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11191, !tbaa !1876
  store %struct._object* %207, %struct._object** %_py_decref_tmp267, align 8, !dbg !11190, !tbaa !1876
  %208 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !11192, !tbaa !1876
  %ob_refcnt268 = getelementptr inbounds %struct._object, %struct._object* %208, i32 0, i32 0, !dbg !11194
  %209 = load i64, i64* %ob_refcnt268, align 8, !dbg !11195, !tbaa !1927
  %dec269 = add i64 %209, -1, !dbg !11195
  store i64 %dec269, i64* %ob_refcnt268, align 8, !dbg !11195, !tbaa !1927
  %cmp270 = icmp ne i64 %dec269, 0, !dbg !11196
  br i1 %cmp270, label %if.then.271, label %if.else.272, !dbg !11197

if.then.271:                                      ; preds = %do.body.266
  br label %if.end.275, !dbg !11198

if.else.272:                                      ; preds = %do.body.266
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !11200, !tbaa !1876
  %ob_type273 = getelementptr inbounds %struct._object, %struct._object* %210, i32 0, i32 1, !dbg !11202
  %211 = load %struct._typeobject*, %struct._typeobject** %ob_type273, align 8, !dbg !11202, !tbaa !2195
  %tp_dealloc274 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %211, i32 0, i32 4, !dbg !11203
  %212 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc274, align 8, !dbg !11203, !tbaa !2197
  %213 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !11204, !tbaa !1876
  call void %212(%struct._object* %213), !dbg !11205
  br label %if.end.275

if.end.275:                                       ; preds = %if.else.272, %if.then.271
  %214 = bitcast %struct._object** %_py_decref_tmp267 to i8*, !dbg !11206
  call void @llvm.lifetime.end(i64 8, i8* %214) #2, !dbg !11206
  br label %do.cond.276, !dbg !11208

do.cond.276:                                      ; preds = %if.end.275
  br label %do.end.277, !dbg !11209

do.end.277:                                       ; preds = %do.cond.276
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11211

if.end.278:                                       ; preds = %if.end.260
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11212
  %215 = load i32, i32* %dec_flags, align 4, !dbg !11212, !tbaa !11213
  %216 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11214, !tbaa !1876
  %call279 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i32 0, i32 0), i32 %215, %struct._object* %216), !dbg !11215
  %217 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11216, !tbaa !1876
  %snapshot280 = getelementptr inbounds %struct.textio, %struct.textio* %217, i32 0, i32 26, !dbg !11217
  store %struct._object* %call279, %struct._object** %snapshot280, align 8, !dbg !11218, !tbaa !4322
  %218 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11219, !tbaa !1876
  %snapshot281 = getelementptr inbounds %struct.textio, %struct.textio* %218, i32 0, i32 26, !dbg !11220
  %219 = load %struct._object*, %struct._object** %snapshot281, align 8, !dbg !11220, !tbaa !4322
  %cmp282 = icmp eq %struct._object* %219, null, !dbg !11221
  br i1 %cmp282, label %if.then.283, label %if.end.296, !dbg !11222

if.then.283:                                      ; preds = %if.end.278
  br label %do.body.284, !dbg !11223

do.body.284:                                      ; preds = %if.then.283
  %220 = bitcast %struct._object** %_py_decref_tmp285 to i8*, !dbg !11224
  call void @llvm.lifetime.start(i64 8, i8* %220) #2, !dbg !11224
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp285, metadata !1392, metadata !1880), !dbg !11226
  %221 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11227, !tbaa !1876
  store %struct._object* %221, %struct._object** %_py_decref_tmp285, align 8, !dbg !11226, !tbaa !1876
  %222 = load %struct._object*, %struct._object** %_py_decref_tmp285, align 8, !dbg !11228, !tbaa !1876
  %ob_refcnt286 = getelementptr inbounds %struct._object, %struct._object* %222, i32 0, i32 0, !dbg !11230
  %223 = load i64, i64* %ob_refcnt286, align 8, !dbg !11231, !tbaa !1927
  %dec287 = add i64 %223, -1, !dbg !11231
  store i64 %dec287, i64* %ob_refcnt286, align 8, !dbg !11231, !tbaa !1927
  %cmp288 = icmp ne i64 %dec287, 0, !dbg !11232
  br i1 %cmp288, label %if.then.289, label %if.else.290, !dbg !11233

if.then.289:                                      ; preds = %do.body.284
  br label %if.end.293, !dbg !11234

if.else.290:                                      ; preds = %do.body.284
  %224 = load %struct._object*, %struct._object** %_py_decref_tmp285, align 8, !dbg !11236, !tbaa !1876
  %ob_type291 = getelementptr inbounds %struct._object, %struct._object* %224, i32 0, i32 1, !dbg !11238
  %225 = load %struct._typeobject*, %struct._typeobject** %ob_type291, align 8, !dbg !11238, !tbaa !2195
  %tp_dealloc292 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %225, i32 0, i32 4, !dbg !11239
  %226 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc292, align 8, !dbg !11239, !tbaa !2197
  %227 = load %struct._object*, %struct._object** %_py_decref_tmp285, align 8, !dbg !11240, !tbaa !1876
  call void %226(%struct._object* %227), !dbg !11241
  br label %if.end.293

if.end.293:                                       ; preds = %if.else.290, %if.then.289
  %228 = bitcast %struct._object** %_py_decref_tmp285 to i8*, !dbg !11242
  call void @llvm.lifetime.end(i64 8, i8* %228) #2, !dbg !11242
  br label %do.cond.294, !dbg !11244

do.cond.294:                                      ; preds = %if.end.293
  br label %do.end.295, !dbg !11245

do.end.295:                                       ; preds = %do.cond.294
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11247

if.end.296:                                       ; preds = %if.end.278
  %229 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11248, !tbaa !1876
  %decoder297 = getelementptr inbounds %struct.textio, %struct.textio* %229, i32 0, i32 7, !dbg !11249
  %230 = load %struct._object*, %struct._object** %decoder297, align 8, !dbg !11249, !tbaa !4206
  %231 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11250, !tbaa !1876
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 4, !dbg !11251
  %232 = load i8, i8* %need_eof, align 1, !dbg !11251, !tbaa !11252
  %conv = sext i8 %232 to i32, !dbg !11253
  %call298 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %230, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), %struct._object* %231, i32 %conv), !dbg !11254
  store %struct._object* %call298, %struct._object** %decoded, align 8, !dbg !11255, !tbaa !1876
  %233 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !11256, !tbaa !1876
  %call299 = call i32 @check_decoded(%struct._object* %233), !dbg !11258
  %cmp300 = icmp slt i32 %call299, 0, !dbg !11259
  br i1 %cmp300, label %if.then.302, label %if.end.303, !dbg !11260

if.then.302:                                      ; preds = %if.end.296
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11261

if.end.303:                                       ; preds = %if.end.296
  %234 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11262, !tbaa !1876
  %235 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !11263, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %234, %struct._object* %235), !dbg !11264
  %236 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11265, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %236, i32 0, i32 22, !dbg !11267
  %237 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !11267, !tbaa !4264
  %call304 = call i64 @PyUnicode_GetLength(%struct._object* %237), !dbg !11268
  %chars_to_skip305 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11269
  %238 = load i32, i32* %chars_to_skip305, align 4, !dbg !11269, !tbaa !11159
  %conv306 = sext i32 %238 to i64, !dbg !11270
  %cmp307 = icmp slt i64 %call304, %conv306, !dbg !11271
  br i1 %cmp307, label %if.then.309, label %if.end.310, !dbg !11272

if.then.309:                                      ; preds = %if.end.303
  %239 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !11273, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %239, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.78, i32 0, i32 0)), !dbg !11275
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11276

if.end.310:                                       ; preds = %if.end.303
  %chars_to_skip311 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11277
  %240 = load i32, i32* %chars_to_skip311, align 4, !dbg !11277, !tbaa !11159
  %conv312 = sext i32 %240 to i64, !dbg !11278
  %241 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11279, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %241, i32 0, i32 23, !dbg !11280
  store i64 %conv312, i64* %decoded_chars_used, align 8, !dbg !11281, !tbaa !5183
  store i32 0, i32* %cleanup.dest.slot, !dbg !11282
  br label %cleanup.313, !dbg !11282

cleanup.313:                                      ; preds = %if.then.309, %if.then.302, %do.end.295, %do.end.277, %if.then.259, %if.end.310
  %242 = bitcast %struct._object** %decoded to i8*, !dbg !11283
  call void @llvm.lifetime.end(i64 8, i8* %242) #2, !dbg !11283
  %243 = bitcast %struct._object** %input_chunk to i8*, !dbg !11283
  call void @llvm.lifetime.end(i64 8, i8* %243) #2, !dbg !11283
  %cleanup.dest.315 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.315, label %cleanup.356 [
    i32 0, label %cleanup.cont.316
    i32 6, label %fail
  ]

cleanup.cont.316:                                 ; preds = %cleanup.313
  br label %if.end.326, !dbg !11285

if.else.317:                                      ; preds = %if.end.253
  %dec_flags318 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11286
  %244 = load i32, i32* %dec_flags318, align 4, !dbg !11286, !tbaa !11213
  %call319 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i32 %244, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)), !dbg !11288
  %245 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11289, !tbaa !1876
  %snapshot320 = getelementptr inbounds %struct.textio, %struct.textio* %245, i32 0, i32 26, !dbg !11290
  store %struct._object* %call319, %struct._object** %snapshot320, align 8, !dbg !11291, !tbaa !4322
  %246 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11292, !tbaa !1876
  %snapshot321 = getelementptr inbounds %struct.textio, %struct.textio* %246, i32 0, i32 26, !dbg !11294
  %247 = load %struct._object*, %struct._object** %snapshot321, align 8, !dbg !11294, !tbaa !4322
  %cmp322 = icmp eq %struct._object* %247, null, !dbg !11295
  br i1 %cmp322, label %if.then.324, label %if.end.325, !dbg !11296

if.then.324:                                      ; preds = %if.else.317
  br label %fail, !dbg !11297

if.end.325:                                       ; preds = %if.else.317
  br label %if.end.326

if.end.326:                                       ; preds = %if.end.325, %cleanup.cont.316
  %248 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11298, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %248, i32 0, i32 6, !dbg !11300
  %249 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !11300, !tbaa !4177
  %tobool327 = icmp ne %struct._object* %249, null, !dbg !11298
  br i1 %tobool327, label %if.then.328, label %if.end.334, !dbg !11301

if.then.328:                                      ; preds = %if.end.326
  %250 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11302, !tbaa !1876
  %call329 = call i32 @_textiowrapper_encoder_setstate(%struct.textio* %250, %struct.cookie_type* %cookie), !dbg !11305
  %cmp330 = icmp slt i32 %call329, 0, !dbg !11306
  br i1 %cmp330, label %if.then.332, label %if.end.333, !dbg !11307

if.then.332:                                      ; preds = %if.then.328
  br label %fail, !dbg !11308

if.end.333:                                       ; preds = %if.then.328
  br label %if.end.334, !dbg !11309

if.end.334:                                       ; preds = %if.end.333, %if.end.326
  %251 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !11310, !tbaa !1876
  store %struct._object* %251, %struct._object** %retval, !dbg !11311
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !11311

fail:                                             ; preds = %cleanup.313, %if.then.332, %if.then.324, %if.then.251, %if.then.211, %if.then.194, %if.then.190, %if.then.174, %if.then.169, %if.then.166, %if.then.159, %if.then.123, %if.then.85, %if.then.80, %if.then.77, %if.then.70, %if.then.53, %if.then.50, %if.then.43
  br label %do.body.335, !dbg !11312

do.body.335:                                      ; preds = %fail
  %252 = bitcast %struct._object** %_py_xdecref_tmp336 to i8*, !dbg !11313
  call void @llvm.lifetime.start(i64 8, i8* %252) #2, !dbg !11313
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp336, metadata !1396, metadata !1880), !dbg !11315
  %253 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !11316, !tbaa !1876
  store %struct._object* %253, %struct._object** %_py_xdecref_tmp336, align 8, !dbg !11315, !tbaa !1876
  %254 = load %struct._object*, %struct._object** %_py_xdecref_tmp336, align 8, !dbg !11317, !tbaa !1876
  %cmp337 = icmp ne %struct._object* %254, null, !dbg !11318
  br i1 %cmp337, label %if.then.339, label %if.end.353, !dbg !11319

if.then.339:                                      ; preds = %do.body.335
  br label %do.body.340, !dbg !11320

do.body.340:                                      ; preds = %if.then.339
  %255 = bitcast %struct._object** %_py_decref_tmp341 to i8*, !dbg !11322
  call void @llvm.lifetime.start(i64 8, i8* %255) #2, !dbg !11322
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp341, metadata !1398, metadata !1880), !dbg !11324
  %256 = load %struct._object*, %struct._object** %_py_xdecref_tmp336, align 8, !dbg !11325, !tbaa !1876
  store %struct._object* %256, %struct._object** %_py_decref_tmp341, align 8, !dbg !11324, !tbaa !1876
  %257 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8, !dbg !11326, !tbaa !1876
  %ob_refcnt342 = getelementptr inbounds %struct._object, %struct._object* %257, i32 0, i32 0, !dbg !11328
  %258 = load i64, i64* %ob_refcnt342, align 8, !dbg !11329, !tbaa !1927
  %dec343 = add i64 %258, -1, !dbg !11329
  store i64 %dec343, i64* %ob_refcnt342, align 8, !dbg !11329, !tbaa !1927
  %cmp344 = icmp ne i64 %dec343, 0, !dbg !11330
  br i1 %cmp344, label %if.then.346, label %if.else.347, !dbg !11331

if.then.346:                                      ; preds = %do.body.340
  br label %if.end.350, !dbg !11332

if.else.347:                                      ; preds = %do.body.340
  %259 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8, !dbg !11334, !tbaa !1876
  %ob_type348 = getelementptr inbounds %struct._object, %struct._object* %259, i32 0, i32 1, !dbg !11336
  %260 = load %struct._typeobject*, %struct._typeobject** %ob_type348, align 8, !dbg !11336, !tbaa !2195
  %tp_dealloc349 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %260, i32 0, i32 4, !dbg !11337
  %261 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc349, align 8, !dbg !11337, !tbaa !2197
  %262 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8, !dbg !11338, !tbaa !1876
  call void %261(%struct._object* %262), !dbg !11339
  br label %if.end.350

if.end.350:                                       ; preds = %if.else.347, %if.then.346
  %263 = bitcast %struct._object** %_py_decref_tmp341 to i8*, !dbg !11340
  call void @llvm.lifetime.end(i64 8, i8* %263) #2, !dbg !11340
  br label %do.cond.351, !dbg !11342

do.cond.351:                                      ; preds = %if.end.350
  br label %do.end.352, !dbg !11343

do.end.352:                                       ; preds = %do.cond.351
  br label %if.end.353, !dbg !11345

if.end.353:                                       ; preds = %do.end.352, %do.body.335
  %264 = bitcast %struct._object** %_py_xdecref_tmp336 to i8*, !dbg !11347
  call void @llvm.lifetime.end(i64 8, i8* %264) #2, !dbg !11347
  br label %do.cond.354, !dbg !11348

do.cond.354:                                      ; preds = %if.end.353
  br label %do.end.355, !dbg !11349

do.end.355:                                       ; preds = %do.cond.354
  store %struct._object* null, %struct._object** %retval, !dbg !11351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !11351

cleanup.356:                                      ; preds = %do.end.355, %if.end.334, %cleanup.313, %do.end.156, %cleanup, %if.then.5, %if.end
  %265 = bitcast i32* %cmp to i8*, !dbg !11352
  call void @llvm.lifetime.end(i64 4, i8* %265) #2, !dbg !11352
  %266 = bitcast %struct._object** %res to i8*, !dbg !11352
  call void @llvm.lifetime.end(i64 8, i8* %266) #2, !dbg !11352
  %267 = bitcast i32* %whence to i8*, !dbg !11352
  call void @llvm.lifetime.end(i64 4, i8* %267) #2, !dbg !11352
  %268 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !11352
  call void @llvm.lifetime.end(i64 24, i8* %268) #2, !dbg !11352
  %269 = bitcast %struct._object** %posobj to i8*, !dbg !11352
  call void @llvm.lifetime.end(i64 8, i8* %269) #2, !dbg !11352
  %270 = bitcast %struct._object** %cookieObj to i8*, !dbg !11352
  call void @llvm.lifetime.end(i64 8, i8* %270) #2, !dbg !11352
  %271 = load %struct._object*, %struct._object** %retval, !dbg !11352
  ret %struct._object* %271, !dbg !11352
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_tell(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %posobj = alloca %struct._object*, align 8
  %cookie = alloca %struct.cookie_type, align 8
  %next_input = alloca %struct._object*, align 8
  %chars_to_skip = alloca i64, align 8
  %chars_decoded = alloca i64, align 8
  %skip_bytes = alloca i64, align 8
  %skip_back = alloca i64, align 8
  %saved_state = alloca %struct._object*, align 8
  %input = alloca i8*, align 8
  %input_end = alloca i8*, align 8
  %dec_buffer = alloca i8*, align 8
  %dec_buffer_len = alloca i64, align 8
  %dec_flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  %_decoded = alloca %struct._object*, align 8
  %_py_decref_tmp122 = alloca %struct._object*, align 8
  %_state = alloca %struct._object*, align 8
  %_py_decref_tmp153 = alloca %struct._object*, align 8
  %_py_decref_tmp167 = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %_decoded220 = alloca %struct._object*, align 8
  %_py_decref_tmp230 = alloca %struct._object*, align 8
  %_state250 = alloca %struct._object*, align 8
  %_py_decref_tmp261 = alloca %struct._object*, align 8
  %_py_decref_tmp275 = alloca %struct._object*, align 8
  %decoded = alloca %struct._object*, align 8
  %_py_decref_tmp326 = alloca %struct._object*, align 8
  %_py_decref_tmp349 = alloca %struct._object*, align 8
  %_py_decref_tmp366 = alloca %struct._object*, align 8
  %type = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %traceback = alloca %struct._object*, align 8
  %_py_decref_tmp386 = alloca %struct._object*, align 8
  %_py_decref_tmp403 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1437, metadata !1880), !dbg !11353
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1438, metadata !1880), !dbg !11354
  %0 = bitcast %struct._object** %res to i8*, !dbg !11355
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11355
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1439, metadata !1880), !dbg !11356
  %1 = bitcast %struct._object** %posobj to i8*, !dbg !11357
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11357
  call void @llvm.dbg.declare(metadata %struct._object** %posobj, metadata !1440, metadata !1880), !dbg !11358
  store %struct._object* null, %struct._object** %posobj, align 8, !dbg !11358, !tbaa !1876
  %2 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !11359
  call void @llvm.lifetime.start(i64 24, i8* %2) #2, !dbg !11359
  call void @llvm.dbg.declare(metadata %struct.cookie_type* %cookie, metadata !1441, metadata !1880), !dbg !11360
  %3 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !11360
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 24, i32 8, i1 false), !dbg !11360
  %4 = bitcast %struct._object** %next_input to i8*, !dbg !11361
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11361
  call void @llvm.dbg.declare(metadata %struct._object** %next_input, metadata !1442, metadata !1880), !dbg !11362
  %5 = bitcast i64* %chars_to_skip to i8*, !dbg !11363
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !11363
  call void @llvm.dbg.declare(metadata i64* %chars_to_skip, metadata !1443, metadata !1880), !dbg !11364
  %6 = bitcast i64* %chars_decoded to i8*, !dbg !11363
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !11363
  call void @llvm.dbg.declare(metadata i64* %chars_decoded, metadata !1444, metadata !1880), !dbg !11365
  %7 = bitcast i64* %skip_bytes to i8*, !dbg !11366
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !11366
  call void @llvm.dbg.declare(metadata i64* %skip_bytes, metadata !1445, metadata !1880), !dbg !11367
  %8 = bitcast i64* %skip_back to i8*, !dbg !11366
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !11366
  call void @llvm.dbg.declare(metadata i64* %skip_back, metadata !1446, metadata !1880), !dbg !11368
  %9 = bitcast %struct._object** %saved_state to i8*, !dbg !11369
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !11369
  call void @llvm.dbg.declare(metadata %struct._object** %saved_state, metadata !1447, metadata !1880), !dbg !11370
  store %struct._object* null, %struct._object** %saved_state, align 8, !dbg !11370, !tbaa !1876
  %10 = bitcast i8** %input to i8*, !dbg !11371
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !11371
  call void @llvm.dbg.declare(metadata i8** %input, metadata !1448, metadata !1880), !dbg !11372
  %11 = bitcast i8** %input_end to i8*, !dbg !11371
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !11371
  call void @llvm.dbg.declare(metadata i8** %input_end, metadata !1449, metadata !1880), !dbg !11373
  %12 = bitcast i8** %dec_buffer to i8*, !dbg !11374
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !11374
  call void @llvm.dbg.declare(metadata i8** %dec_buffer, metadata !1450, metadata !1880), !dbg !11375
  %13 = bitcast i64* %dec_buffer_len to i8*, !dbg !11376
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !11376
  call void @llvm.dbg.declare(metadata i64* %dec_buffer_len, metadata !1451, metadata !1880), !dbg !11377
  %14 = bitcast i32* %dec_flags to i8*, !dbg !11378
  call void @llvm.lifetime.start(i64 4, i8* %14) #2, !dbg !11378
  call void @llvm.dbg.declare(metadata i32* %dec_flags, metadata !1452, metadata !1880), !dbg !11379
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11380, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %15, i32 0, i32 1, !dbg !11382
  %16 = load i32, i32* %ok, align 4, !dbg !11382, !tbaa !3900
  %cmp = icmp sle i32 %16, 0, !dbg !11383
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !11384

if.then:                                          ; preds = %entry
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11385, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 2, !dbg !11389
  %18 = load i32, i32* %detached, align 4, !dbg !11389, !tbaa !3908
  %tobool = icmp ne i32 %18, 0, !dbg !11390
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !11391

if.then.1:                                        ; preds = %if.then
  %19 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11392, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !11395
  br label %if.end, !dbg !11396

if.else:                                          ; preds = %if.then
  %20 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11397, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %20, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !11400
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !11401
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11403

if.end.2:                                         ; preds = %entry
  br label %do.body, !dbg !11404

do.body:                                          ; preds = %if.end.2
  %21 = bitcast i32* %r to i8*, !dbg !11405
  call void @llvm.lifetime.start(i64 4, i8* %21) #2, !dbg !11405
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1453, metadata !1880), !dbg !11407
  %22 = bitcast %struct._object** %_res to i8*, !dbg !11408
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !11408
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1455, metadata !1880), !dbg !11409
  %23 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11410, !tbaa !1876
  %24 = bitcast %struct.textio* %23 to %struct._object*, !dbg !11411
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !11412
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11412, !tbaa !2195
  %cmp3 = icmp eq %struct._typeobject* %25, @PyTextIOWrapper_Type, !dbg !11413
  br i1 %cmp3, label %if.then.4, label %if.else.27, !dbg !11414

if.then.4:                                        ; preds = %do.body
  %26 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11415, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %26, i32 0, i32 28, !dbg !11417
  %27 = load %struct._object*, %struct._object** %raw, align 8, !dbg !11417, !tbaa !4380
  %cmp5 = icmp ne %struct._object* %27, null, !dbg !11418
  br i1 %cmp5, label %if.then.6, label %if.else.8, !dbg !11419

if.then.6:                                        ; preds = %if.then.4
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11420, !tbaa !1876
  %raw7 = getelementptr inbounds %struct.textio, %struct.textio* %28, i32 0, i32 28, !dbg !11422
  %29 = load %struct._object*, %struct._object** %raw7, align 8, !dbg !11422, !tbaa !4380
  %call = call i32 @_PyFileIO_closed(%struct._object* %29), !dbg !11423
  store i32 %call, i32* %r, align 4, !dbg !11424, !tbaa !1883
  br label %if.end.23, !dbg !11425

if.else.8:                                        ; preds = %if.then.4
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11426, !tbaa !1876
  %call9 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %30, i8* null), !dbg !11428
  store %struct._object* %call9, %struct._object** %_res, align 8, !dbg !11429, !tbaa !1876
  %31 = load %struct._object*, %struct._object** %_res, align 8, !dbg !11430, !tbaa !1876
  %cmp10 = icmp eq %struct._object* %31, null, !dbg !11432
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !11433

if.then.11:                                       ; preds = %if.else.8
  store %struct._object* null, %struct._object** %retval, !dbg !11434
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11436

if.end.12:                                        ; preds = %if.else.8
  %32 = load %struct._object*, %struct._object** %_res, align 8, !dbg !11437, !tbaa !1876
  %call13 = call i32 @PyObject_IsTrue(%struct._object* %32), !dbg !11439
  store i32 %call13, i32* %r, align 4, !dbg !11440, !tbaa !1883
  br label %do.body.14, !dbg !11441

do.body.14:                                       ; preds = %if.end.12
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11442
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !11442
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1456, metadata !1880), !dbg !11444
  %34 = load %struct._object*, %struct._object** %_res, align 8, !dbg !11445, !tbaa !1876
  store %struct._object* %34, %struct._object** %_py_decref_tmp, align 8, !dbg !11444, !tbaa !1876
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11446, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !11448
  %36 = load i64, i64* %ob_refcnt, align 8, !dbg !11449, !tbaa !1927
  %dec = add i64 %36, -1, !dbg !11449
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11449, !tbaa !1927
  %cmp15 = icmp ne i64 %dec, 0, !dbg !11450
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !11451

if.then.16:                                       ; preds = %do.body.14
  br label %if.end.19, !dbg !11452

if.else.17:                                       ; preds = %do.body.14
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11454, !tbaa !1876
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !11456
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !11456, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !11457
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11457, !tbaa !2197
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11458, !tbaa !1876
  call void %39(%struct._object* %40), !dbg !11459
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.17, %if.then.16
  %41 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11460
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !11460
  br label %do.cond, !dbg !11462

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !11463

do.end:                                           ; preds = %do.cond
  %42 = load i32, i32* %r, align 4, !dbg !11465, !tbaa !1883
  %cmp20 = icmp slt i32 %42, 0, !dbg !11468
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !11469

if.then.21:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !11470
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11472

if.end.22:                                        ; preds = %do.end
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.6
  %43 = load i32, i32* %r, align 4, !dbg !11473, !tbaa !1883
  %cmp24 = icmp sgt i32 %43, 0, !dbg !11476
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !11477

if.then.25:                                       ; preds = %if.end.23
  %44 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11478, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %44, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !11481
  store %struct._object* null, %struct._object** %retval, !dbg !11482
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11482

if.end.26:                                        ; preds = %if.end.23
  br label %if.end.32, !dbg !11483

if.else.27:                                       ; preds = %do.body
  %45 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11485, !tbaa !1876
  %46 = bitcast %struct.textio* %45 to %struct._object*, !dbg !11488
  %call28 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %46, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !11489
  %cmp29 = icmp eq %struct._object* %call28, null, !dbg !11490
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !11491

if.then.30:                                       ; preds = %if.else.27
  store %struct._object* null, %struct._object** %retval, !dbg !11492
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11494

if.end.31:                                        ; preds = %if.else.27
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.26
  store i32 0, i32* %cleanup.dest.slot, !dbg !11495
  br label %cleanup, !dbg !11495

cleanup:                                          ; preds = %if.end.32, %if.then.30, %if.then.25, %if.then.21, %if.then.11
  %47 = bitcast %struct._object** %_res to i8*, !dbg !11497
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !11497
  %48 = bitcast i32* %r to i8*, !dbg !11497
  call void @llvm.lifetime.end(i64 4, i8* %48) #2, !dbg !11497
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.421 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %do.cond.34, !dbg !11503

do.cond.34:                                       ; preds = %cleanup.cont
  br label %do.end.35, !dbg !11504

do.end.35:                                        ; preds = %do.cond.34
  %49 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11506, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %49, i32 0, i32 16, !dbg !11508
  %50 = load i8, i8* %seekable, align 1, !dbg !11508, !tbaa !4668
  %tobool36 = icmp ne i8 %50, 0, !dbg !11506
  br i1 %tobool36, label %if.end.39, label %if.then.37, !dbg !11509

if.then.37:                                       ; preds = %do.end.35
  %call38 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i32 0, i32 0)), !dbg !11510
  br label %fail, !dbg !11512

if.end.39:                                        ; preds = %do.end.35
  %51 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11513, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %51, i32 0, i32 18, !dbg !11515
  %52 = load i8, i8* %telling, align 1, !dbg !11515, !tbaa !4517
  %tobool40 = icmp ne i8 %52, 0, !dbg !11513
  br i1 %tobool40, label %if.end.42, label %if.then.41, !dbg !11516

if.then.41:                                       ; preds = %if.end.39
  %53 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !11517, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %53, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.81, i32 0, i32 0)), !dbg !11519
  br label %fail, !dbg !11520

if.end.42:                                        ; preds = %if.end.39
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11521, !tbaa !1876
  %call43 = call i32 @_textiowrapper_writeflush(%struct.textio* %54), !dbg !11523
  %cmp44 = icmp slt i32 %call43, 0, !dbg !11524
  br i1 %cmp44, label %if.then.45, label %if.end.46, !dbg !11525

if.then.45:                                       ; preds = %if.end.42
  store %struct._object* null, %struct._object** %retval, !dbg !11526
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11526

if.end.46:                                        ; preds = %if.end.42
  %55 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11527, !tbaa !1876
  %56 = bitcast %struct.textio* %55 to %struct._object*, !dbg !11528
  %call47 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %56, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !11529
  store %struct._object* %call47, %struct._object** %res, align 8, !dbg !11530, !tbaa !1876
  %57 = load %struct._object*, %struct._object** %res, align 8, !dbg !11531, !tbaa !1876
  %cmp48 = icmp eq %struct._object* %57, null, !dbg !11533
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !11534

if.then.49:                                       ; preds = %if.end.46
  br label %fail, !dbg !11535

if.end.50:                                        ; preds = %if.end.46
  br label %do.body.51, !dbg !11536

do.body.51:                                       ; preds = %if.end.50
  %58 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !11537
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !11537
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !1462, metadata !1880), !dbg !11539
  %59 = load %struct._object*, %struct._object** %res, align 8, !dbg !11540, !tbaa !1876
  store %struct._object* %59, %struct._object** %_py_decref_tmp52, align 8, !dbg !11539, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !11541, !tbaa !1876
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !11543
  %61 = load i64, i64* %ob_refcnt53, align 8, !dbg !11544, !tbaa !1927
  %dec54 = add i64 %61, -1, !dbg !11544
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !11544, !tbaa !1927
  %cmp55 = icmp ne i64 %dec54, 0, !dbg !11545
  br i1 %cmp55, label %if.then.56, label %if.else.57, !dbg !11546

if.then.56:                                       ; preds = %do.body.51
  br label %if.end.60, !dbg !11547

if.else.57:                                       ; preds = %do.body.51
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !11549, !tbaa !1876
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !11551
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !11551, !tbaa !2195
  %tp_dealloc59 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !11552
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc59, align 8, !dbg !11552, !tbaa !2197
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !11553, !tbaa !1876
  call void %64(%struct._object* %65), !dbg !11554
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57, %if.then.56
  %66 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !11555
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !11555
  br label %do.cond.61, !dbg !11557

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !11558

do.end.62:                                        ; preds = %do.cond.61
  %67 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11560, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %67, i32 0, i32 4, !dbg !11561
  %68 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !11561, !tbaa !4120
  %call63 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %68, %struct._Py_Identifier* @PyId_tell, i8* null), !dbg !11562
  store %struct._object* %call63, %struct._object** %posobj, align 8, !dbg !11563, !tbaa !1876
  %69 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11564, !tbaa !1876
  %cmp64 = icmp eq %struct._object* %69, null, !dbg !11566
  br i1 %cmp64, label %if.then.65, label %if.end.66, !dbg !11567

if.then.65:                                       ; preds = %do.end.62
  br label %fail, !dbg !11568

if.end.66:                                        ; preds = %do.end.62
  %70 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11569, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %70, i32 0, i32 7, !dbg !11571
  %71 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !11571, !tbaa !4206
  %cmp67 = icmp eq %struct._object* %71, null, !dbg !11572
  br i1 %cmp67, label %if.then.69, label %lor.lhs.false, !dbg !11573

lor.lhs.false:                                    ; preds = %if.end.66
  %72 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11574, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %72, i32 0, i32 26, !dbg !11576
  %73 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !11576, !tbaa !4322
  %cmp68 = icmp eq %struct._object* %73, null, !dbg !11577
  br i1 %cmp68, label %if.then.69, label %if.end.70, !dbg !11578

if.then.69:                                       ; preds = %lor.lhs.false, %if.end.66
  %74 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11579, !tbaa !1876
  store %struct._object* %74, %struct._object** %retval, !dbg !11581
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11581

if.end.70:                                        ; preds = %lor.lhs.false
  %75 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11582, !tbaa !1876
  %call71 = call i64 @PyLong_AsLong(%struct._object* %75), !dbg !11583
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11584
  store i64 %call71, i64* %start_pos, align 8, !dbg !11585, !tbaa !11033
  br label %do.body.72, !dbg !11586

do.body.72:                                       ; preds = %if.end.70
  %76 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !11587
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !11587
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp73, metadata !1464, metadata !1880), !dbg !11589
  %77 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11590, !tbaa !1876
  store %struct._object* %77, %struct._object** %_py_decref_tmp73, align 8, !dbg !11589, !tbaa !1876
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !11591, !tbaa !1876
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !11593
  %79 = load i64, i64* %ob_refcnt74, align 8, !dbg !11594, !tbaa !1927
  %dec75 = add i64 %79, -1, !dbg !11594
  store i64 %dec75, i64* %ob_refcnt74, align 8, !dbg !11594, !tbaa !1927
  %cmp76 = icmp ne i64 %dec75, 0, !dbg !11595
  br i1 %cmp76, label %if.then.77, label %if.else.78, !dbg !11596

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81, !dbg !11597

if.else.78:                                       ; preds = %do.body.72
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !11599, !tbaa !1876
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !11601
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8, !dbg !11601, !tbaa !2195
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !11602
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8, !dbg !11602, !tbaa !2197
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !11603, !tbaa !1876
  call void %82(%struct._object* %83), !dbg !11604
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  %84 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !11605
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !11605
  br label %do.cond.82, !dbg !11606

do.cond.82:                                       ; preds = %if.end.81
  br label %do.end.83, !dbg !11607

do.end.83:                                        ; preds = %do.cond.82
  %call84 = call %struct._object* @PyErr_Occurred(), !dbg !11609
  %tobool85 = icmp ne %struct._object* %call84, null, !dbg !11609
  br i1 %tobool85, label %if.then.86, label %if.end.87, !dbg !11611

if.then.86:                                       ; preds = %do.end.83
  br label %fail, !dbg !11612

if.end.87:                                        ; preds = %do.end.83
  %85 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11613, !tbaa !1876
  %snapshot88 = getelementptr inbounds %struct.textio, %struct.textio* %85, i32 0, i32 26, !dbg !11615
  %86 = load %struct._object*, %struct._object** %snapshot88, align 8, !dbg !11615, !tbaa !4322
  %dec_flags89 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11616
  %call90 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), i32* %dec_flags89, %struct._object** %next_input), !dbg !11617
  %tobool91 = icmp ne i32 %call90, 0, !dbg !11617
  br i1 %tobool91, label %if.end.93, label %if.then.92, !dbg !11618

if.then.92:                                       ; preds = %if.end.87
  br label %fail, !dbg !11619

if.end.93:                                        ; preds = %if.end.87
  %87 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11620, !tbaa !1876
  %88 = bitcast %struct._object* %87 to %struct.PyVarObject*, !dbg !11621
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %88, i32 0, i32 1, !dbg !11622
  %89 = load i64, i64* %ob_size, align 8, !dbg !11622, !tbaa !9167
  %start_pos94 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11623
  %90 = load i64, i64* %start_pos94, align 8, !dbg !11624, !tbaa !11033
  %sub = sub i64 %90, %89, !dbg !11624
  store i64 %sub, i64* %start_pos94, align 8, !dbg !11624, !tbaa !11033
  %91 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11625, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %91, i32 0, i32 23, !dbg !11627
  %92 = load i64, i64* %decoded_chars_used, align 8, !dbg !11627, !tbaa !5183
  %cmp95 = icmp eq i64 %92, 0, !dbg !11628
  br i1 %cmp95, label %if.then.96, label %if.end.98, !dbg !11629

if.then.96:                                       ; preds = %if.end.93
  %call97 = call %struct._object* @textiowrapper_build_cookie(%struct.cookie_type* %cookie), !dbg !11630
  store %struct._object* %call97, %struct._object** %retval, !dbg !11632
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11632

if.end.98:                                        ; preds = %if.end.93
  %93 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11633, !tbaa !1876
  %decoded_chars_used99 = getelementptr inbounds %struct.textio, %struct.textio* %93, i32 0, i32 23, !dbg !11634
  %94 = load i64, i64* %decoded_chars_used99, align 8, !dbg !11634, !tbaa !5183
  store i64 %94, i64* %chars_to_skip, align 8, !dbg !11635, !tbaa !1941
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11636, !tbaa !1876
  %decoder100 = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 7, !dbg !11637
  %96 = load %struct._object*, %struct._object** %decoder100, align 8, !dbg !11637, !tbaa !4206
  %97 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !11638, !tbaa !1876
  %call101 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %96, %struct._object* %97, i8* null), !dbg !11639
  store %struct._object* %call101, %struct._object** %saved_state, align 8, !dbg !11640, !tbaa !1876
  %98 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !11641, !tbaa !1876
  %cmp102 = icmp eq %struct._object* %98, null, !dbg !11643
  br i1 %cmp102, label %if.then.103, label %if.end.104, !dbg !11644

if.then.103:                                      ; preds = %if.end.98
  br label %fail, !dbg !11645

if.end.104:                                       ; preds = %if.end.98
  %99 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11646, !tbaa !1876
  %b2cratio = getelementptr inbounds %struct.textio, %struct.textio* %99, i32 0, i32 27, !dbg !11647
  %100 = load double, double* %b2cratio, align 8, !dbg !11647, !tbaa !5195
  %101 = load i64, i64* %chars_to_skip, align 8, !dbg !11648, !tbaa !1941
  %conv = sitofp i64 %101 to double, !dbg !11648
  %mul = fmul double %100, %conv, !dbg !11649
  %conv105 = fptosi double %mul to i64, !dbg !11650
  store i64 %conv105, i64* %skip_bytes, align 8, !dbg !11651, !tbaa !1941
  store i64 1, i64* %skip_back, align 8, !dbg !11652, !tbaa !1941
  %102 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11653, !tbaa !1876
  %103 = bitcast %struct._object* %102 to %struct.PyBytesObject*, !dbg !11654
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %103, i32 0, i32 2, !dbg !11655
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !11656
  store i8* %arraydecay, i8** %input, align 8, !dbg !11657, !tbaa !1876
  br label %while.cond, !dbg !11658

while.cond:                                       ; preds = %if.end.194, %if.end.104
  %104 = load i64, i64* %skip_bytes, align 8, !dbg !11659, !tbaa !1941
  %cmp106 = icmp sgt i64 %104, 0, !dbg !11662
  br i1 %cmp106, label %while.body, label %while.end, !dbg !11658

while.body:                                       ; preds = %while.cond
  %105 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11663, !tbaa !1876
  %call108 = call i32 @_textiowrapper_decoder_setstate(%struct.textio* %105, %struct.cookie_type* %cookie), !dbg !11665
  %cmp109 = icmp slt i32 %call108, 0, !dbg !11666
  br i1 %cmp109, label %if.then.111, label %if.end.112, !dbg !11667

if.then.111:                                      ; preds = %while.body
  br label %fail, !dbg !11668

if.end.112:                                       ; preds = %while.body
  br label %do.body.113, !dbg !11669

do.body.113:                                      ; preds = %if.end.112
  %106 = bitcast %struct._object** %_decoded to i8*, !dbg !11670
  call void @llvm.lifetime.start(i64 8, i8* %106) #2, !dbg !11670
  call void @llvm.dbg.declare(metadata %struct._object** %_decoded, metadata !1466, metadata !1880), !dbg !11672
  %107 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11673, !tbaa !1876
  %decoder114 = getelementptr inbounds %struct.textio, %struct.textio* %107, i32 0, i32 7, !dbg !11674
  %108 = load %struct._object*, %struct._object** %decoder114, align 8, !dbg !11674, !tbaa !4206
  %109 = load i8*, i8** %input, align 8, !dbg !11675, !tbaa !1876
  %110 = load i64, i64* %skip_bytes, align 8, !dbg !11676, !tbaa !1941
  %call115 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %108, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i32 0, i32 0), i8* %109, i64 %110), !dbg !11677
  store %struct._object* %call115, %struct._object** %_decoded, align 8, !dbg !11672, !tbaa !1876
  %111 = load %struct._object*, %struct._object** %_decoded, align 8, !dbg !11678, !tbaa !1876
  %call116 = call i32 @check_decoded(%struct._object* %111), !dbg !11680
  %cmp117 = icmp slt i32 %call116, 0, !dbg !11681
  br i1 %cmp117, label %if.then.119, label %if.end.120, !dbg !11682

if.then.119:                                      ; preds = %do.body.113
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.134, !dbg !11683

if.end.120:                                       ; preds = %do.body.113
  %112 = load %struct._object*, %struct._object** %_decoded, align 8, !dbg !11684, !tbaa !1876
  %113 = bitcast %struct._object* %112 to %struct.PyASCIIObject*, !dbg !11686
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %113, i32 0, i32 1, !dbg !11687
  %114 = load i64, i64* %length, align 8, !dbg !11687, !tbaa !1937
  store i64 %114, i64* %chars_decoded, align 8, !dbg !11688, !tbaa !1941
  br label %do.body.121, !dbg !11689

do.body.121:                                      ; preds = %if.end.120
  %115 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !11690
  call void @llvm.lifetime.start(i64 8, i8* %115) #2, !dbg !11690
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp122, metadata !1469, metadata !1880), !dbg !11692
  %116 = load %struct._object*, %struct._object** %_decoded, align 8, !dbg !11693, !tbaa !1876
  store %struct._object* %116, %struct._object** %_py_decref_tmp122, align 8, !dbg !11692, !tbaa !1876
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !11694, !tbaa !1876
  %ob_refcnt123 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 0, !dbg !11696
  %118 = load i64, i64* %ob_refcnt123, align 8, !dbg !11697, !tbaa !1927
  %dec124 = add i64 %118, -1, !dbg !11697
  store i64 %dec124, i64* %ob_refcnt123, align 8, !dbg !11697, !tbaa !1927
  %cmp125 = icmp ne i64 %dec124, 0, !dbg !11698
  br i1 %cmp125, label %if.then.127, label %if.else.128, !dbg !11699

if.then.127:                                      ; preds = %do.body.121
  br label %if.end.131, !dbg !11700

if.else.128:                                      ; preds = %do.body.121
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !11702, !tbaa !1876
  %ob_type129 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 1, !dbg !11704
  %120 = load %struct._typeobject*, %struct._typeobject** %ob_type129, align 8, !dbg !11704, !tbaa !2195
  %tp_dealloc130 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %120, i32 0, i32 4, !dbg !11705
  %121 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc130, align 8, !dbg !11705, !tbaa !2197
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !11706, !tbaa !1876
  call void %121(%struct._object* %122), !dbg !11707
  br label %if.end.131

if.end.131:                                       ; preds = %if.else.128, %if.then.127
  %123 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !11708
  call void @llvm.lifetime.end(i64 8, i8* %123) #2, !dbg !11708
  br label %do.cond.132, !dbg !11710

do.cond.132:                                      ; preds = %if.end.131
  br label %do.end.133, !dbg !11711

do.end.133:                                       ; preds = %do.cond.132
  store i32 0, i32* %cleanup.dest.slot, !dbg !11713
  br label %cleanup.134, !dbg !11713

cleanup.134:                                      ; preds = %if.then.119, %do.end.133
  %124 = bitcast %struct._object** %_decoded to i8*, !dbg !11715
  call void @llvm.lifetime.end(i64 8, i8* %124) #2, !dbg !11715
  %cleanup.dest.135 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.135, label %cleanup.421 [
    i32 0, label %cleanup.cont.136
    i32 6, label %fail
  ]

cleanup.cont.136:                                 ; preds = %cleanup.134
  br label %do.cond.137, !dbg !11718

do.cond.137:                                      ; preds = %cleanup.cont.136
  br label %do.end.138, !dbg !11719

do.end.138:                                       ; preds = %do.cond.137
  %125 = load i64, i64* %chars_decoded, align 8, !dbg !11721, !tbaa !1941
  %126 = load i64, i64* %chars_to_skip, align 8, !dbg !11722, !tbaa !1941
  %cmp139 = icmp sle i64 %125, %126, !dbg !11723
  br i1 %cmp139, label %if.then.141, label %if.else.191, !dbg !11724

if.then.141:                                      ; preds = %do.end.138
  br label %do.body.142, !dbg !11725

do.body.142:                                      ; preds = %if.then.141
  %127 = bitcast %struct._object** %_state to i8*, !dbg !11726
  call void @llvm.lifetime.start(i64 8, i8* %127) #2, !dbg !11726
  call void @llvm.dbg.declare(metadata %struct._object** %_state, metadata !1471, metadata !1880), !dbg !11728
  %128 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11729, !tbaa !1876
  %decoder143 = getelementptr inbounds %struct.textio, %struct.textio* %128, i32 0, i32 7, !dbg !11730
  %129 = load %struct._object*, %struct._object** %decoder143, align 8, !dbg !11730, !tbaa !4206
  %130 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !11731, !tbaa !1876
  %call144 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %129, %struct._object* %130, i8* null), !dbg !11732
  store %struct._object* %call144, %struct._object** %_state, align 8, !dbg !11728, !tbaa !1876
  %131 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11733, !tbaa !1876
  %cmp145 = icmp eq %struct._object* %131, null, !dbg !11735
  br i1 %cmp145, label %if.then.147, label %if.end.148, !dbg !11736

if.then.147:                                      ; preds = %do.body.142
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.179, !dbg !11737

if.end.148:                                       ; preds = %do.body.142
  %132 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11738, !tbaa !1876
  %call149 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %132, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8** %dec_buffer, i64* %dec_buffer_len, i32* %dec_flags), !dbg !11740
  %tobool150 = icmp ne i32 %call149, 0, !dbg !11740
  br i1 %tobool150, label %if.end.165, label %if.then.151, !dbg !11741

if.then.151:                                      ; preds = %if.end.148
  br label %do.body.152, !dbg !11742

do.body.152:                                      ; preds = %if.then.151
  %133 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !11744
  call void @llvm.lifetime.start(i64 8, i8* %133) #2, !dbg !11744
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp153, metadata !1475, metadata !1880), !dbg !11746
  %134 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11747, !tbaa !1876
  store %struct._object* %134, %struct._object** %_py_decref_tmp153, align 8, !dbg !11746, !tbaa !1876
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11748, !tbaa !1876
  %ob_refcnt154 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 0, !dbg !11750
  %136 = load i64, i64* %ob_refcnt154, align 8, !dbg !11751, !tbaa !1927
  %dec155 = add i64 %136, -1, !dbg !11751
  store i64 %dec155, i64* %ob_refcnt154, align 8, !dbg !11751, !tbaa !1927
  %cmp156 = icmp ne i64 %dec155, 0, !dbg !11752
  br i1 %cmp156, label %if.then.158, label %if.else.159, !dbg !11753

if.then.158:                                      ; preds = %do.body.152
  br label %if.end.162, !dbg !11754

if.else.159:                                      ; preds = %do.body.152
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11756, !tbaa !1876
  %ob_type160 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 1, !dbg !11758
  %138 = load %struct._typeobject*, %struct._typeobject** %ob_type160, align 8, !dbg !11758, !tbaa !2195
  %tp_dealloc161 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %138, i32 0, i32 4, !dbg !11759
  %139 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc161, align 8, !dbg !11759, !tbaa !2197
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11760, !tbaa !1876
  call void %139(%struct._object* %140), !dbg !11761
  br label %if.end.162

if.end.162:                                       ; preds = %if.else.159, %if.then.158
  %141 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !11762
  call void @llvm.lifetime.end(i64 8, i8* %141) #2, !dbg !11762
  br label %do.cond.163, !dbg !11764

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !11765

do.end.164:                                       ; preds = %do.cond.163
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.179, !dbg !11767

if.end.165:                                       ; preds = %if.end.148
  br label %do.body.166, !dbg !11768

do.body.166:                                      ; preds = %if.end.165
  %142 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !11770
  call void @llvm.lifetime.start(i64 8, i8* %142) #2, !dbg !11770
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp167, metadata !1479, metadata !1880), !dbg !11772
  %143 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11773, !tbaa !1876
  store %struct._object* %143, %struct._object** %_py_decref_tmp167, align 8, !dbg !11772, !tbaa !1876
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11774, !tbaa !1876
  %ob_refcnt168 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0, !dbg !11776
  %145 = load i64, i64* %ob_refcnt168, align 8, !dbg !11777, !tbaa !1927
  %dec169 = add i64 %145, -1, !dbg !11777
  store i64 %dec169, i64* %ob_refcnt168, align 8, !dbg !11777, !tbaa !1927
  %cmp170 = icmp ne i64 %dec169, 0, !dbg !11778
  br i1 %cmp170, label %if.then.172, label %if.else.173, !dbg !11779

if.then.172:                                      ; preds = %do.body.166
  br label %if.end.176, !dbg !11780

if.else.173:                                      ; preds = %do.body.166
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11782, !tbaa !1876
  %ob_type174 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1, !dbg !11784
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type174, align 8, !dbg !11784, !tbaa !2195
  %tp_dealloc175 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4, !dbg !11785
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc175, align 8, !dbg !11785, !tbaa !2197
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11786, !tbaa !1876
  call void %148(%struct._object* %149), !dbg !11787
  br label %if.end.176

if.end.176:                                       ; preds = %if.else.173, %if.then.172
  %150 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !11788
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !11788
  br label %do.cond.177, !dbg !11790

do.cond.177:                                      ; preds = %if.end.176
  br label %do.end.178, !dbg !11791

do.end.178:                                       ; preds = %do.cond.177
  store i32 0, i32* %cleanup.dest.slot, !dbg !11793
  br label %cleanup.179, !dbg !11793

cleanup.179:                                      ; preds = %do.end.164, %if.then.147, %do.end.178
  %151 = bitcast %struct._object** %_state to i8*, !dbg !11795
  call void @llvm.lifetime.end(i64 8, i8* %151) #2, !dbg !11795
  %cleanup.dest.180 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.180, label %cleanup.421 [
    i32 0, label %cleanup.cont.181
    i32 6, label %fail
  ]

cleanup.cont.181:                                 ; preds = %cleanup.179
  br label %do.cond.182, !dbg !11799

do.cond.182:                                      ; preds = %cleanup.cont.181
  br label %do.end.183, !dbg !11800

do.end.183:                                       ; preds = %do.cond.182
  %152 = load i64, i64* %dec_buffer_len, align 8, !dbg !11802, !tbaa !1941
  %cmp184 = icmp eq i64 %152, 0, !dbg !11804
  br i1 %cmp184, label %if.then.186, label %if.end.189, !dbg !11805

if.then.186:                                      ; preds = %do.end.183
  %153 = load i32, i32* %dec_flags, align 4, !dbg !11806, !tbaa !1883
  %dec_flags187 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11808
  store i32 %153, i32* %dec_flags187, align 4, !dbg !11809, !tbaa !11213
  %154 = load i64, i64* %chars_decoded, align 8, !dbg !11810, !tbaa !1941
  %155 = load i64, i64* %chars_to_skip, align 8, !dbg !11811, !tbaa !1941
  %sub188 = sub i64 %155, %154, !dbg !11811
  store i64 %sub188, i64* %chars_to_skip, align 8, !dbg !11811, !tbaa !1941
  br label %while.end, !dbg !11812

if.end.189:                                       ; preds = %do.end.183
  %156 = load i64, i64* %dec_buffer_len, align 8, !dbg !11813, !tbaa !1941
  %157 = load i64, i64* %skip_bytes, align 8, !dbg !11814, !tbaa !1941
  %sub190 = sub i64 %157, %156, !dbg !11814
  store i64 %sub190, i64* %skip_bytes, align 8, !dbg !11814, !tbaa !1941
  store i64 1, i64* %skip_back, align 8, !dbg !11815, !tbaa !1941
  br label %if.end.194, !dbg !11816

if.else.191:                                      ; preds = %do.end.138
  %158 = load i64, i64* %skip_back, align 8, !dbg !11817, !tbaa !1941
  %159 = load i64, i64* %skip_bytes, align 8, !dbg !11819, !tbaa !1941
  %sub192 = sub i64 %159, %158, !dbg !11819
  store i64 %sub192, i64* %skip_bytes, align 8, !dbg !11819, !tbaa !1941
  %160 = load i64, i64* %skip_back, align 8, !dbg !11820, !tbaa !1941
  %mul193 = mul i64 %160, 2, !dbg !11820
  store i64 %mul193, i64* %skip_back, align 8, !dbg !11820, !tbaa !1941
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.end.189
  br label %while.cond, !dbg !11658

while.end:                                        ; preds = %if.then.186, %while.cond
  %161 = load i64, i64* %skip_bytes, align 8, !dbg !11821, !tbaa !1941
  %cmp195 = icmp sle i64 %161, 0, !dbg !11823
  br i1 %cmp195, label %if.then.197, label %if.end.203, !dbg !11824

if.then.197:                                      ; preds = %while.end
  store i64 0, i64* %skip_bytes, align 8, !dbg !11825, !tbaa !1941
  %162 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11827, !tbaa !1876
  %call198 = call i32 @_textiowrapper_decoder_setstate(%struct.textio* %162, %struct.cookie_type* %cookie), !dbg !11829
  %cmp199 = icmp slt i32 %call198, 0, !dbg !11830
  br i1 %cmp199, label %if.then.201, label %if.end.202, !dbg !11831

if.then.201:                                      ; preds = %if.then.197
  br label %fail, !dbg !11832

if.end.202:                                       ; preds = %if.then.197
  br label %if.end.203, !dbg !11833

if.end.203:                                       ; preds = %if.end.202, %while.end
  %163 = load i64, i64* %skip_bytes, align 8, !dbg !11834, !tbaa !1941
  %start_pos204 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11835
  %164 = load i64, i64* %start_pos204, align 8, !dbg !11836, !tbaa !11033
  %add = add i64 %164, %163, !dbg !11836
  store i64 %add, i64* %start_pos204, align 8, !dbg !11836, !tbaa !11033
  %165 = load i64, i64* %chars_to_skip, align 8, !dbg !11837, !tbaa !1941
  %conv205 = trunc i64 %165 to i32, !dbg !11838
  %chars_to_skip206 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11839
  store i32 %conv205, i32* %chars_to_skip206, align 4, !dbg !11840, !tbaa !11159
  %166 = load i64, i64* %chars_to_skip, align 8, !dbg !11841, !tbaa !1941
  %cmp207 = icmp eq i64 %166, 0, !dbg !11843
  br i1 %cmp207, label %if.then.209, label %if.end.210, !dbg !11844

if.then.209:                                      ; preds = %if.end.203
  br label %finally, !dbg !11845

if.end.210:                                       ; preds = %if.end.203
  store i64 0, i64* %chars_decoded, align 8, !dbg !11846, !tbaa !1941
  %167 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11847, !tbaa !1876
  %168 = bitcast %struct._object* %167 to %struct.PyBytesObject*, !dbg !11848
  %ob_sval211 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %168, i32 0, i32 2, !dbg !11849
  %arraydecay212 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval211, i32 0, i32 0, !dbg !11850
  store i8* %arraydecay212, i8** %input, align 8, !dbg !11851, !tbaa !1876
  %169 = load i8*, i8** %input, align 8, !dbg !11852, !tbaa !1876
  %170 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11853, !tbaa !1876
  %171 = bitcast %struct._object* %170 to %struct.PyVarObject*, !dbg !11854
  %ob_size213 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %171, i32 0, i32 1, !dbg !11855
  %172 = load i64, i64* %ob_size213, align 8, !dbg !11855, !tbaa !9167
  %add.ptr = getelementptr i8, i8* %169, i64 %172, !dbg !11856
  store i8* %add.ptr, i8** %input_end, align 8, !dbg !11857, !tbaa !1876
  %173 = load i64, i64* %skip_bytes, align 8, !dbg !11858, !tbaa !1941
  %174 = load i8*, i8** %input, align 8, !dbg !11859, !tbaa !1876
  %add.ptr214 = getelementptr i8, i8* %174, i64 %173, !dbg !11859
  store i8* %add.ptr214, i8** %input, align 8, !dbg !11859, !tbaa !1876
  br label %while.cond.215, !dbg !11860

while.cond.215:                                   ; preds = %cleanup.cont.311, %if.end.210
  %175 = load i8*, i8** %input, align 8, !dbg !11861, !tbaa !1876
  %176 = load i8*, i8** %input_end, align 8, !dbg !11862, !tbaa !1876
  %cmp216 = icmp ult i8* %175, %176, !dbg !11863
  br i1 %cmp216, label %while.body.218, label %while.end.312, !dbg !11860

while.body.218:                                   ; preds = %while.cond.215
  %177 = bitcast i64* %n to i8*, !dbg !11864
  call void @llvm.lifetime.start(i64 8, i8* %177) #2, !dbg !11864
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1481, metadata !1880), !dbg !11865
  br label %do.body.219, !dbg !11866

do.body.219:                                      ; preds = %while.body.218
  %178 = bitcast %struct._object** %_decoded220 to i8*, !dbg !11867
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !11867
  call void @llvm.dbg.declare(metadata %struct._object** %_decoded220, metadata !1483, metadata !1880), !dbg !11869
  %179 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11870, !tbaa !1876
  %decoder221 = getelementptr inbounds %struct.textio, %struct.textio* %179, i32 0, i32 7, !dbg !11871
  %180 = load %struct._object*, %struct._object** %decoder221, align 8, !dbg !11871, !tbaa !4206
  %181 = load i8*, i8** %input, align 8, !dbg !11872, !tbaa !1876
  %call222 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %180, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i32 0, i32 0), i8* %181, i64 1), !dbg !11873
  store %struct._object* %call222, %struct._object** %_decoded220, align 8, !dbg !11869, !tbaa !1876
  %182 = load %struct._object*, %struct._object** %_decoded220, align 8, !dbg !11874, !tbaa !1876
  %call223 = call i32 @check_decoded(%struct._object* %182), !dbg !11876
  %cmp224 = icmp slt i32 %call223, 0, !dbg !11877
  br i1 %cmp224, label %if.then.226, label %if.end.227, !dbg !11878

if.then.226:                                      ; preds = %do.body.219
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.242, !dbg !11879

if.end.227:                                       ; preds = %do.body.219
  %183 = load %struct._object*, %struct._object** %_decoded220, align 8, !dbg !11880, !tbaa !1876
  %184 = bitcast %struct._object* %183 to %struct.PyASCIIObject*, !dbg !11882
  %length228 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %184, i32 0, i32 1, !dbg !11883
  %185 = load i64, i64* %length228, align 8, !dbg !11883, !tbaa !1937
  store i64 %185, i64* %n, align 8, !dbg !11884, !tbaa !1941
  br label %do.body.229, !dbg !11885

do.body.229:                                      ; preds = %if.end.227
  %186 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !11886
  call void @llvm.lifetime.start(i64 8, i8* %186) #2, !dbg !11886
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp230, metadata !1485, metadata !1880), !dbg !11888
  %187 = load %struct._object*, %struct._object** %_decoded220, align 8, !dbg !11889, !tbaa !1876
  store %struct._object* %187, %struct._object** %_py_decref_tmp230, align 8, !dbg !11888, !tbaa !1876
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !11890, !tbaa !1876
  %ob_refcnt231 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 0, !dbg !11892
  %189 = load i64, i64* %ob_refcnt231, align 8, !dbg !11893, !tbaa !1927
  %dec232 = add i64 %189, -1, !dbg !11893
  store i64 %dec232, i64* %ob_refcnt231, align 8, !dbg !11893, !tbaa !1927
  %cmp233 = icmp ne i64 %dec232, 0, !dbg !11894
  br i1 %cmp233, label %if.then.235, label %if.else.236, !dbg !11895

if.then.235:                                      ; preds = %do.body.229
  br label %if.end.239, !dbg !11896

if.else.236:                                      ; preds = %do.body.229
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !11898, !tbaa !1876
  %ob_type237 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 1, !dbg !11900
  %191 = load %struct._typeobject*, %struct._typeobject** %ob_type237, align 8, !dbg !11900, !tbaa !2195
  %tp_dealloc238 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %191, i32 0, i32 4, !dbg !11901
  %192 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc238, align 8, !dbg !11901, !tbaa !2197
  %193 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !11902, !tbaa !1876
  call void %192(%struct._object* %193), !dbg !11903
  br label %if.end.239

if.end.239:                                       ; preds = %if.else.236, %if.then.235
  %194 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !11904
  call void @llvm.lifetime.end(i64 8, i8* %194) #2, !dbg !11904
  br label %do.cond.240, !dbg !11906

do.cond.240:                                      ; preds = %if.end.239
  br label %do.end.241, !dbg !11907

do.end.241:                                       ; preds = %do.cond.240
  store i32 0, i32* %cleanup.dest.slot, !dbg !11909
  br label %cleanup.242, !dbg !11909

cleanup.242:                                      ; preds = %if.then.226, %do.end.241
  %195 = bitcast %struct._object** %_decoded220 to i8*, !dbg !11911
  call void @llvm.lifetime.end(i64 8, i8* %195) #2, !dbg !11911
  %cleanup.dest.243 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.243, label %cleanup.309 [
    i32 0, label %cleanup.cont.244
  ]

cleanup.cont.244:                                 ; preds = %cleanup.242
  br label %do.cond.245, !dbg !11914

do.cond.245:                                      ; preds = %cleanup.cont.244
  br label %do.end.246, !dbg !11915

do.end.246:                                       ; preds = %do.cond.245
  %196 = load i64, i64* %n, align 8, !dbg !11917, !tbaa !1941
  %197 = load i64, i64* %chars_decoded, align 8, !dbg !11918, !tbaa !1941
  %add247 = add i64 %197, %196, !dbg !11918
  store i64 %add247, i64* %chars_decoded, align 8, !dbg !11918, !tbaa !1941
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !11919
  %198 = load i32, i32* %bytes_to_feed, align 4, !dbg !11920, !tbaa !11167
  %add248 = add i32 %198, 1, !dbg !11920
  store i32 %add248, i32* %bytes_to_feed, align 4, !dbg !11920, !tbaa !11167
  br label %do.body.249, !dbg !11921

do.body.249:                                      ; preds = %do.end.246
  %199 = bitcast %struct._object** %_state250 to i8*, !dbg !11922
  call void @llvm.lifetime.start(i64 8, i8* %199) #2, !dbg !11922
  call void @llvm.dbg.declare(metadata %struct._object** %_state250, metadata !1487, metadata !1880), !dbg !11924
  %200 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11925, !tbaa !1876
  %decoder251 = getelementptr inbounds %struct.textio, %struct.textio* %200, i32 0, i32 7, !dbg !11926
  %201 = load %struct._object*, %struct._object** %decoder251, align 8, !dbg !11926, !tbaa !4206
  %202 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !11927, !tbaa !1876
  %call252 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %201, %struct._object* %202, i8* null), !dbg !11928
  store %struct._object* %call252, %struct._object** %_state250, align 8, !dbg !11924, !tbaa !1876
  %203 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11929, !tbaa !1876
  %cmp253 = icmp eq %struct._object* %203, null, !dbg !11931
  br i1 %cmp253, label %if.then.255, label %if.end.256, !dbg !11932

if.then.255:                                      ; preds = %do.body.249
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.287, !dbg !11933

if.end.256:                                       ; preds = %do.body.249
  %204 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11934, !tbaa !1876
  %call257 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %204, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8** %dec_buffer, i64* %dec_buffer_len, i32* %dec_flags), !dbg !11936
  %tobool258 = icmp ne i32 %call257, 0, !dbg !11936
  br i1 %tobool258, label %if.end.273, label %if.then.259, !dbg !11937

if.then.259:                                      ; preds = %if.end.256
  br label %do.body.260, !dbg !11938

do.body.260:                                      ; preds = %if.then.259
  %205 = bitcast %struct._object** %_py_decref_tmp261 to i8*, !dbg !11940
  call void @llvm.lifetime.start(i64 8, i8* %205) #2, !dbg !11940
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp261, metadata !1489, metadata !1880), !dbg !11942
  %206 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11943, !tbaa !1876
  store %struct._object* %206, %struct._object** %_py_decref_tmp261, align 8, !dbg !11942, !tbaa !1876
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !11944, !tbaa !1876
  %ob_refcnt262 = getelementptr inbounds %struct._object, %struct._object* %207, i32 0, i32 0, !dbg !11946
  %208 = load i64, i64* %ob_refcnt262, align 8, !dbg !11947, !tbaa !1927
  %dec263 = add i64 %208, -1, !dbg !11947
  store i64 %dec263, i64* %ob_refcnt262, align 8, !dbg !11947, !tbaa !1927
  %cmp264 = icmp ne i64 %dec263, 0, !dbg !11948
  br i1 %cmp264, label %if.then.266, label %if.else.267, !dbg !11949

if.then.266:                                      ; preds = %do.body.260
  br label %if.end.270, !dbg !11950

if.else.267:                                      ; preds = %do.body.260
  %209 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !11952, !tbaa !1876
  %ob_type268 = getelementptr inbounds %struct._object, %struct._object* %209, i32 0, i32 1, !dbg !11954
  %210 = load %struct._typeobject*, %struct._typeobject** %ob_type268, align 8, !dbg !11954, !tbaa !2195
  %tp_dealloc269 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %210, i32 0, i32 4, !dbg !11955
  %211 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc269, align 8, !dbg !11955, !tbaa !2197
  %212 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !11956, !tbaa !1876
  call void %211(%struct._object* %212), !dbg !11957
  br label %if.end.270

if.end.270:                                       ; preds = %if.else.267, %if.then.266
  %213 = bitcast %struct._object** %_py_decref_tmp261 to i8*, !dbg !11958
  call void @llvm.lifetime.end(i64 8, i8* %213) #2, !dbg !11958
  br label %do.cond.271, !dbg !11960

do.cond.271:                                      ; preds = %if.end.270
  br label %do.end.272, !dbg !11961

do.end.272:                                       ; preds = %do.cond.271
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.287, !dbg !11963

if.end.273:                                       ; preds = %if.end.256
  br label %do.body.274, !dbg !11964

do.body.274:                                      ; preds = %if.end.273
  %214 = bitcast %struct._object** %_py_decref_tmp275 to i8*, !dbg !11966
  call void @llvm.lifetime.start(i64 8, i8* %214) #2, !dbg !11966
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp275, metadata !1493, metadata !1880), !dbg !11968
  %215 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11969, !tbaa !1876
  store %struct._object* %215, %struct._object** %_py_decref_tmp275, align 8, !dbg !11968, !tbaa !1876
  %216 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !11970, !tbaa !1876
  %ob_refcnt276 = getelementptr inbounds %struct._object, %struct._object* %216, i32 0, i32 0, !dbg !11972
  %217 = load i64, i64* %ob_refcnt276, align 8, !dbg !11973, !tbaa !1927
  %dec277 = add i64 %217, -1, !dbg !11973
  store i64 %dec277, i64* %ob_refcnt276, align 8, !dbg !11973, !tbaa !1927
  %cmp278 = icmp ne i64 %dec277, 0, !dbg !11974
  br i1 %cmp278, label %if.then.280, label %if.else.281, !dbg !11975

if.then.280:                                      ; preds = %do.body.274
  br label %if.end.284, !dbg !11976

if.else.281:                                      ; preds = %do.body.274
  %218 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !11978, !tbaa !1876
  %ob_type282 = getelementptr inbounds %struct._object, %struct._object* %218, i32 0, i32 1, !dbg !11980
  %219 = load %struct._typeobject*, %struct._typeobject** %ob_type282, align 8, !dbg !11980, !tbaa !2195
  %tp_dealloc283 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %219, i32 0, i32 4, !dbg !11981
  %220 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc283, align 8, !dbg !11981, !tbaa !2197
  %221 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !11982, !tbaa !1876
  call void %220(%struct._object* %221), !dbg !11983
  br label %if.end.284

if.end.284:                                       ; preds = %if.else.281, %if.then.280
  %222 = bitcast %struct._object** %_py_decref_tmp275 to i8*, !dbg !11984
  call void @llvm.lifetime.end(i64 8, i8* %222) #2, !dbg !11984
  br label %do.cond.285, !dbg !11986

do.cond.285:                                      ; preds = %if.end.284
  br label %do.end.286, !dbg !11987

do.end.286:                                       ; preds = %do.cond.285
  store i32 0, i32* %cleanup.dest.slot, !dbg !11989
  br label %cleanup.287, !dbg !11989

cleanup.287:                                      ; preds = %do.end.272, %if.then.255, %do.end.286
  %223 = bitcast %struct._object** %_state250 to i8*, !dbg !11991
  call void @llvm.lifetime.end(i64 8, i8* %223) #2, !dbg !11991
  %cleanup.dest.288 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.288, label %cleanup.309 [
    i32 0, label %cleanup.cont.289
  ]

cleanup.cont.289:                                 ; preds = %cleanup.287
  br label %do.cond.290, !dbg !11994

do.cond.290:                                      ; preds = %cleanup.cont.289
  br label %do.end.291, !dbg !11995

do.end.291:                                       ; preds = %do.cond.290
  %224 = load i64, i64* %dec_buffer_len, align 8, !dbg !11997, !tbaa !1941
  %cmp292 = icmp eq i64 %224, 0, !dbg !11999
  br i1 %cmp292, label %land.lhs.true, label %if.end.304, !dbg !12000

land.lhs.true:                                    ; preds = %do.end.291
  %225 = load i64, i64* %chars_decoded, align 8, !dbg !12001, !tbaa !1941
  %226 = load i64, i64* %chars_to_skip, align 8, !dbg !12003, !tbaa !1941
  %cmp294 = icmp sle i64 %225, %226, !dbg !12004
  br i1 %cmp294, label %if.then.296, label %if.end.304, !dbg !12005

if.then.296:                                      ; preds = %land.lhs.true
  %bytes_to_feed297 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !12006
  %227 = load i32, i32* %bytes_to_feed297, align 4, !dbg !12006, !tbaa !11167
  %conv298 = sext i32 %227 to i64, !dbg !12008
  %start_pos299 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !12009
  %228 = load i64, i64* %start_pos299, align 8, !dbg !12010, !tbaa !11033
  %add300 = add i64 %228, %conv298, !dbg !12010
  store i64 %add300, i64* %start_pos299, align 8, !dbg !12010, !tbaa !11033
  %229 = load i64, i64* %chars_decoded, align 8, !dbg !12011, !tbaa !1941
  %230 = load i64, i64* %chars_to_skip, align 8, !dbg !12012, !tbaa !1941
  %sub301 = sub i64 %230, %229, !dbg !12012
  store i64 %sub301, i64* %chars_to_skip, align 8, !dbg !12012, !tbaa !1941
  %231 = load i32, i32* %dec_flags, align 4, !dbg !12013, !tbaa !1883
  %dec_flags302 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !12014
  store i32 %231, i32* %dec_flags302, align 4, !dbg !12015, !tbaa !11213
  %bytes_to_feed303 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !12016
  store i32 0, i32* %bytes_to_feed303, align 4, !dbg !12017, !tbaa !11167
  store i64 0, i64* %chars_decoded, align 8, !dbg !12018, !tbaa !1941
  br label %if.end.304, !dbg !12019

if.end.304:                                       ; preds = %if.then.296, %land.lhs.true, %do.end.291
  %232 = load i64, i64* %chars_decoded, align 8, !dbg !12020, !tbaa !1941
  %233 = load i64, i64* %chars_to_skip, align 8, !dbg !12022, !tbaa !1941
  %cmp305 = icmp sge i64 %232, %233, !dbg !12023
  br i1 %cmp305, label %if.then.307, label %if.end.308, !dbg !12024

if.then.307:                                      ; preds = %if.end.304
  store i32 25, i32* %cleanup.dest.slot
  br label %cleanup.309, !dbg !12025

if.end.308:                                       ; preds = %if.end.304
  %234 = load i8*, i8** %input, align 8, !dbg !12026, !tbaa !1876
  %incdec.ptr = getelementptr i8, i8* %234, i32 1, !dbg !12026
  store i8* %incdec.ptr, i8** %input, align 8, !dbg !12026, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !12027
  br label %cleanup.309, !dbg !12027

cleanup.309:                                      ; preds = %if.end.308, %if.then.307, %cleanup.287, %cleanup.242
  %235 = bitcast i64* %n to i8*, !dbg !12028
  call void @llvm.lifetime.end(i64 8, i8* %235) #2, !dbg !12028
  %cleanup.dest.310 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.310, label %cleanup.421 [
    i32 0, label %cleanup.cont.311
    i32 25, label %while.end.312
    i32 6, label %fail
  ]

cleanup.cont.311:                                 ; preds = %cleanup.309
  br label %while.cond.215, !dbg !11860

while.end.312:                                    ; preds = %cleanup.309, %while.cond.215
  %236 = load i8*, i8** %input, align 8, !dbg !12029, !tbaa !1876
  %237 = load i8*, i8** %input_end, align 8, !dbg !12030, !tbaa !1876
  %cmp313 = icmp eq i8* %236, %237, !dbg !12031
  br i1 %cmp313, label %if.then.315, label %if.end.345, !dbg !12032

if.then.315:                                      ; preds = %while.end.312
  %238 = bitcast %struct._object** %decoded to i8*, !dbg !12033
  call void @llvm.lifetime.start(i64 8, i8* %238) #2, !dbg !12033
  call void @llvm.dbg.declare(metadata %struct._object** %decoded, metadata !1495, metadata !1880), !dbg !12034
  %239 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12035, !tbaa !1876
  %decoder316 = getelementptr inbounds %struct.textio, %struct.textio* %239, i32 0, i32 7, !dbg !12036
  %240 = load %struct._object*, %struct._object** %decoder316, align 8, !dbg !12036, !tbaa !4206
  %call317 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %240, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), i32 1), !dbg !12037
  store %struct._object* %call317, %struct._object** %decoded, align 8, !dbg !12034, !tbaa !1876
  %241 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !12038, !tbaa !1876
  %call318 = call i32 @check_decoded(%struct._object* %241), !dbg !12040
  %cmp319 = icmp slt i32 %call318, 0, !dbg !12041
  br i1 %cmp319, label %if.then.321, label %if.end.322, !dbg !12042

if.then.321:                                      ; preds = %if.then.315
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.342, !dbg !12043

if.end.322:                                       ; preds = %if.then.315
  %242 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !12044, !tbaa !1876
  %243 = bitcast %struct._object* %242 to %struct.PyASCIIObject*, !dbg !12045
  %length323 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %243, i32 0, i32 1, !dbg !12046
  %244 = load i64, i64* %length323, align 8, !dbg !12046, !tbaa !1937
  %245 = load i64, i64* %chars_decoded, align 8, !dbg !12047, !tbaa !1941
  %add324 = add i64 %245, %244, !dbg !12047
  store i64 %add324, i64* %chars_decoded, align 8, !dbg !12047, !tbaa !1941
  br label %do.body.325, !dbg !12048

do.body.325:                                      ; preds = %if.end.322
  %246 = bitcast %struct._object** %_py_decref_tmp326 to i8*, !dbg !12049
  call void @llvm.lifetime.start(i64 8, i8* %246) #2, !dbg !12049
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp326, metadata !1498, metadata !1880), !dbg !12051
  %247 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !12052, !tbaa !1876
  store %struct._object* %247, %struct._object** %_py_decref_tmp326, align 8, !dbg !12051, !tbaa !1876
  %248 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8, !dbg !12053, !tbaa !1876
  %ob_refcnt327 = getelementptr inbounds %struct._object, %struct._object* %248, i32 0, i32 0, !dbg !12055
  %249 = load i64, i64* %ob_refcnt327, align 8, !dbg !12056, !tbaa !1927
  %dec328 = add i64 %249, -1, !dbg !12056
  store i64 %dec328, i64* %ob_refcnt327, align 8, !dbg !12056, !tbaa !1927
  %cmp329 = icmp ne i64 %dec328, 0, !dbg !12057
  br i1 %cmp329, label %if.then.331, label %if.else.332, !dbg !12058

if.then.331:                                      ; preds = %do.body.325
  br label %if.end.335, !dbg !12059

if.else.332:                                      ; preds = %do.body.325
  %250 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8, !dbg !12061, !tbaa !1876
  %ob_type333 = getelementptr inbounds %struct._object, %struct._object* %250, i32 0, i32 1, !dbg !12063
  %251 = load %struct._typeobject*, %struct._typeobject** %ob_type333, align 8, !dbg !12063, !tbaa !2195
  %tp_dealloc334 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %251, i32 0, i32 4, !dbg !12064
  %252 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc334, align 8, !dbg !12064, !tbaa !2197
  %253 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8, !dbg !12065, !tbaa !1876
  call void %252(%struct._object* %253), !dbg !12066
  br label %if.end.335

if.end.335:                                       ; preds = %if.else.332, %if.then.331
  %254 = bitcast %struct._object** %_py_decref_tmp326 to i8*, !dbg !12067
  call void @llvm.lifetime.end(i64 8, i8* %254) #2, !dbg !12067
  br label %do.cond.336, !dbg !12069

do.cond.336:                                      ; preds = %if.end.335
  br label %do.end.337, !dbg !12070

do.end.337:                                       ; preds = %do.cond.336
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 4, !dbg !12072
  store i8 1, i8* %need_eof, align 1, !dbg !12073, !tbaa !11252
  %255 = load i64, i64* %chars_decoded, align 8, !dbg !12074, !tbaa !1941
  %256 = load i64, i64* %chars_to_skip, align 8, !dbg !12076, !tbaa !1941
  %cmp338 = icmp slt i64 %255, %256, !dbg !12077
  br i1 %cmp338, label %if.then.340, label %if.end.341, !dbg !12078

if.then.340:                                      ; preds = %do.end.337
  %257 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !12079, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %257, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.86, i32 0, i32 0)), !dbg !12081
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.342, !dbg !12082

if.end.341:                                       ; preds = %do.end.337
  store i32 0, i32* %cleanup.dest.slot, !dbg !12083
  br label %cleanup.342, !dbg !12083

cleanup.342:                                      ; preds = %if.then.340, %if.then.321, %if.end.341
  %258 = bitcast %struct._object** %decoded to i8*, !dbg !12084
  call void @llvm.lifetime.end(i64 8, i8* %258) #2, !dbg !12084
  %cleanup.dest.343 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.343, label %cleanup.421 [
    i32 0, label %cleanup.cont.344
    i32 6, label %fail
  ]

cleanup.cont.344:                                 ; preds = %cleanup.342
  br label %if.end.345, !dbg !12086

if.end.345:                                       ; preds = %cleanup.cont.344, %while.end.312
  br label %finally, !dbg !12087

finally:                                          ; preds = %if.end.345, %if.then.209
  %259 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12088, !tbaa !1876
  %decoder346 = getelementptr inbounds %struct.textio, %struct.textio* %259, i32 0, i32 7, !dbg !12089
  %260 = load %struct._object*, %struct._object** %decoder346, align 8, !dbg !12089, !tbaa !4206
  %261 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12090, !tbaa !1876
  %call347 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %260, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), %struct._object* %261), !dbg !12091
  store %struct._object* %call347, %struct._object** %res, align 8, !dbg !12092, !tbaa !1876
  br label %do.body.348, !dbg !12093

do.body.348:                                      ; preds = %finally
  %262 = bitcast %struct._object** %_py_decref_tmp349 to i8*, !dbg !12094
  call void @llvm.lifetime.start(i64 8, i8* %262) #2, !dbg !12094
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp349, metadata !1500, metadata !1880), !dbg !12096
  %263 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12097, !tbaa !1876
  store %struct._object* %263, %struct._object** %_py_decref_tmp349, align 8, !dbg !12096, !tbaa !1876
  %264 = load %struct._object*, %struct._object** %_py_decref_tmp349, align 8, !dbg !12098, !tbaa !1876
  %ob_refcnt350 = getelementptr inbounds %struct._object, %struct._object* %264, i32 0, i32 0, !dbg !12100
  %265 = load i64, i64* %ob_refcnt350, align 8, !dbg !12101, !tbaa !1927
  %dec351 = add i64 %265, -1, !dbg !12101
  store i64 %dec351, i64* %ob_refcnt350, align 8, !dbg !12101, !tbaa !1927
  %cmp352 = icmp ne i64 %dec351, 0, !dbg !12102
  br i1 %cmp352, label %if.then.354, label %if.else.355, !dbg !12103

if.then.354:                                      ; preds = %do.body.348
  br label %if.end.358, !dbg !12104

if.else.355:                                      ; preds = %do.body.348
  %266 = load %struct._object*, %struct._object** %_py_decref_tmp349, align 8, !dbg !12106, !tbaa !1876
  %ob_type356 = getelementptr inbounds %struct._object, %struct._object* %266, i32 0, i32 1, !dbg !12108
  %267 = load %struct._typeobject*, %struct._typeobject** %ob_type356, align 8, !dbg !12108, !tbaa !2195
  %tp_dealloc357 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %267, i32 0, i32 4, !dbg !12109
  %268 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc357, align 8, !dbg !12109, !tbaa !2197
  %269 = load %struct._object*, %struct._object** %_py_decref_tmp349, align 8, !dbg !12110, !tbaa !1876
  call void %268(%struct._object* %269), !dbg !12111
  br label %if.end.358

if.end.358:                                       ; preds = %if.else.355, %if.then.354
  %270 = bitcast %struct._object** %_py_decref_tmp349 to i8*, !dbg !12112
  call void @llvm.lifetime.end(i64 8, i8* %270) #2, !dbg !12112
  br label %do.cond.359, !dbg !12113

do.cond.359:                                      ; preds = %if.end.358
  br label %do.end.360, !dbg !12114

do.end.360:                                       ; preds = %do.cond.359
  %271 = load %struct._object*, %struct._object** %res, align 8, !dbg !12116, !tbaa !1876
  %cmp361 = icmp eq %struct._object* %271, null, !dbg !12118
  br i1 %cmp361, label %if.then.363, label %if.end.364, !dbg !12119

if.then.363:                                      ; preds = %do.end.360
  store %struct._object* null, %struct._object** %retval, !dbg !12120
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !12120

if.end.364:                                       ; preds = %do.end.360
  br label %do.body.365, !dbg !12121

do.body.365:                                      ; preds = %if.end.364
  %272 = bitcast %struct._object** %_py_decref_tmp366 to i8*, !dbg !12122
  call void @llvm.lifetime.start(i64 8, i8* %272) #2, !dbg !12122
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp366, metadata !1502, metadata !1880), !dbg !12124
  %273 = load %struct._object*, %struct._object** %res, align 8, !dbg !12125, !tbaa !1876
  store %struct._object* %273, %struct._object** %_py_decref_tmp366, align 8, !dbg !12124, !tbaa !1876
  %274 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8, !dbg !12126, !tbaa !1876
  %ob_refcnt367 = getelementptr inbounds %struct._object, %struct._object* %274, i32 0, i32 0, !dbg !12128
  %275 = load i64, i64* %ob_refcnt367, align 8, !dbg !12129, !tbaa !1927
  %dec368 = add i64 %275, -1, !dbg !12129
  store i64 %dec368, i64* %ob_refcnt367, align 8, !dbg !12129, !tbaa !1927
  %cmp369 = icmp ne i64 %dec368, 0, !dbg !12130
  br i1 %cmp369, label %if.then.371, label %if.else.372, !dbg !12131

if.then.371:                                      ; preds = %do.body.365
  br label %if.end.375, !dbg !12132

if.else.372:                                      ; preds = %do.body.365
  %276 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8, !dbg !12134, !tbaa !1876
  %ob_type373 = getelementptr inbounds %struct._object, %struct._object* %276, i32 0, i32 1, !dbg !12136
  %277 = load %struct._typeobject*, %struct._typeobject** %ob_type373, align 8, !dbg !12136, !tbaa !2195
  %tp_dealloc374 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %277, i32 0, i32 4, !dbg !12137
  %278 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc374, align 8, !dbg !12137, !tbaa !2197
  %279 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8, !dbg !12138, !tbaa !1876
  call void %278(%struct._object* %279), !dbg !12139
  br label %if.end.375

if.end.375:                                       ; preds = %if.else.372, %if.then.371
  %280 = bitcast %struct._object** %_py_decref_tmp366 to i8*, !dbg !12140
  call void @llvm.lifetime.end(i64 8, i8* %280) #2, !dbg !12140
  br label %do.cond.376, !dbg !12141

do.cond.376:                                      ; preds = %if.end.375
  br label %do.end.377, !dbg !12142

do.end.377:                                       ; preds = %do.cond.376
  %281 = load i64, i64* %chars_to_skip, align 8, !dbg !12144, !tbaa !1941
  %conv378 = trunc i64 %281 to i32, !dbg !12145
  %chars_to_skip379 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !12146
  store i32 %conv378, i32* %chars_to_skip379, align 4, !dbg !12147, !tbaa !11159
  %call380 = call %struct._object* @textiowrapper_build_cookie(%struct.cookie_type* %cookie), !dbg !12148
  store %struct._object* %call380, %struct._object** %retval, !dbg !12149
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !12149

fail:                                             ; preds = %cleanup.342, %cleanup.309, %cleanup.179, %cleanup.134, %if.then.201, %if.then.111, %if.then.103, %if.then.92, %if.then.86, %if.then.65, %if.then.49, %if.then.41, %if.then.37
  %282 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12150, !tbaa !1876
  %tobool381 = icmp ne %struct._object* %282, null, !dbg !12150
  br i1 %tobool381, label %if.then.382, label %if.end.420, !dbg !12151

if.then.382:                                      ; preds = %fail
  %283 = bitcast %struct._object** %type to i8*, !dbg !12152
  call void @llvm.lifetime.start(i64 8, i8* %283) #2, !dbg !12152
  call void @llvm.dbg.declare(metadata %struct._object** %type, metadata !1504, metadata !1880), !dbg !12153
  %284 = bitcast %struct._object** %value to i8*, !dbg !12152
  call void @llvm.lifetime.start(i64 8, i8* %284) #2, !dbg !12152
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !1507, metadata !1880), !dbg !12154
  %285 = bitcast %struct._object** %traceback to i8*, !dbg !12152
  call void @llvm.lifetime.start(i64 8, i8* %285) #2, !dbg !12152
  call void @llvm.dbg.declare(metadata %struct._object** %traceback, metadata !1508, metadata !1880), !dbg !12155
  call void @PyErr_Fetch(%struct._object** %type, %struct._object** %value, %struct._object** %traceback), !dbg !12156
  %286 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12157, !tbaa !1876
  %decoder383 = getelementptr inbounds %struct.textio, %struct.textio* %286, i32 0, i32 7, !dbg !12158
  %287 = load %struct._object*, %struct._object** %decoder383, align 8, !dbg !12158, !tbaa !4206
  %288 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12159, !tbaa !1876
  %call384 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %287, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), %struct._object* %288), !dbg !12160
  store %struct._object* %call384, %struct._object** %res, align 8, !dbg !12161, !tbaa !1876
  br label %do.body.385, !dbg !12162

do.body.385:                                      ; preds = %if.then.382
  %289 = bitcast %struct._object** %_py_decref_tmp386 to i8*, !dbg !12163
  call void @llvm.lifetime.start(i64 8, i8* %289) #2, !dbg !12163
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp386, metadata !1509, metadata !1880), !dbg !12165
  %290 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12166, !tbaa !1876
  store %struct._object* %290, %struct._object** %_py_decref_tmp386, align 8, !dbg !12165, !tbaa !1876
  %291 = load %struct._object*, %struct._object** %_py_decref_tmp386, align 8, !dbg !12167, !tbaa !1876
  %ob_refcnt387 = getelementptr inbounds %struct._object, %struct._object* %291, i32 0, i32 0, !dbg !12169
  %292 = load i64, i64* %ob_refcnt387, align 8, !dbg !12170, !tbaa !1927
  %dec388 = add i64 %292, -1, !dbg !12170
  store i64 %dec388, i64* %ob_refcnt387, align 8, !dbg !12170, !tbaa !1927
  %cmp389 = icmp ne i64 %dec388, 0, !dbg !12171
  br i1 %cmp389, label %if.then.391, label %if.else.392, !dbg !12172

if.then.391:                                      ; preds = %do.body.385
  br label %if.end.395, !dbg !12173

if.else.392:                                      ; preds = %do.body.385
  %293 = load %struct._object*, %struct._object** %_py_decref_tmp386, align 8, !dbg !12175, !tbaa !1876
  %ob_type393 = getelementptr inbounds %struct._object, %struct._object* %293, i32 0, i32 1, !dbg !12177
  %294 = load %struct._typeobject*, %struct._typeobject** %ob_type393, align 8, !dbg !12177, !tbaa !2195
  %tp_dealloc394 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %294, i32 0, i32 4, !dbg !12178
  %295 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc394, align 8, !dbg !12178, !tbaa !2197
  %296 = load %struct._object*, %struct._object** %_py_decref_tmp386, align 8, !dbg !12179, !tbaa !1876
  call void %295(%struct._object* %296), !dbg !12180
  br label %if.end.395

if.end.395:                                       ; preds = %if.else.392, %if.then.391
  %297 = bitcast %struct._object** %_py_decref_tmp386 to i8*, !dbg !12181
  call void @llvm.lifetime.end(i64 8, i8* %297) #2, !dbg !12181
  br label %do.cond.396, !dbg !12183

do.cond.396:                                      ; preds = %if.end.395
  br label %do.end.397, !dbg !12184

do.end.397:                                       ; preds = %do.cond.396
  %298 = load %struct._object*, %struct._object** %res, align 8, !dbg !12186, !tbaa !1876
  %cmp398 = icmp eq %struct._object* %298, null, !dbg !12188
  br i1 %cmp398, label %if.then.400, label %if.end.401, !dbg !12189

if.then.400:                                      ; preds = %do.end.397
  store %struct._object* null, %struct._object** %retval, !dbg !12190
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.415, !dbg !12190

if.end.401:                                       ; preds = %do.end.397
  br label %do.body.402, !dbg !12191

do.body.402:                                      ; preds = %if.end.401
  %299 = bitcast %struct._object** %_py_decref_tmp403 to i8*, !dbg !12192
  call void @llvm.lifetime.start(i64 8, i8* %299) #2, !dbg !12192
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp403, metadata !1511, metadata !1880), !dbg !12194
  %300 = load %struct._object*, %struct._object** %res, align 8, !dbg !12195, !tbaa !1876
  store %struct._object* %300, %struct._object** %_py_decref_tmp403, align 8, !dbg !12194, !tbaa !1876
  %301 = load %struct._object*, %struct._object** %_py_decref_tmp403, align 8, !dbg !12196, !tbaa !1876
  %ob_refcnt404 = getelementptr inbounds %struct._object, %struct._object* %301, i32 0, i32 0, !dbg !12198
  %302 = load i64, i64* %ob_refcnt404, align 8, !dbg !12199, !tbaa !1927
  %dec405 = add i64 %302, -1, !dbg !12199
  store i64 %dec405, i64* %ob_refcnt404, align 8, !dbg !12199, !tbaa !1927
  %cmp406 = icmp ne i64 %dec405, 0, !dbg !12200
  br i1 %cmp406, label %if.then.408, label %if.else.409, !dbg !12201

if.then.408:                                      ; preds = %do.body.402
  br label %if.end.412, !dbg !12202

if.else.409:                                      ; preds = %do.body.402
  %303 = load %struct._object*, %struct._object** %_py_decref_tmp403, align 8, !dbg !12204, !tbaa !1876
  %ob_type410 = getelementptr inbounds %struct._object, %struct._object* %303, i32 0, i32 1, !dbg !12206
  %304 = load %struct._typeobject*, %struct._typeobject** %ob_type410, align 8, !dbg !12206, !tbaa !2195
  %tp_dealloc411 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %304, i32 0, i32 4, !dbg !12207
  %305 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc411, align 8, !dbg !12207, !tbaa !2197
  %306 = load %struct._object*, %struct._object** %_py_decref_tmp403, align 8, !dbg !12208, !tbaa !1876
  call void %305(%struct._object* %306), !dbg !12209
  br label %if.end.412

if.end.412:                                       ; preds = %if.else.409, %if.then.408
  %307 = bitcast %struct._object** %_py_decref_tmp403 to i8*, !dbg !12210
  call void @llvm.lifetime.end(i64 8, i8* %307) #2, !dbg !12210
  br label %do.cond.413, !dbg !12211

do.cond.413:                                      ; preds = %if.end.412
  br label %do.end.414, !dbg !12212

do.end.414:                                       ; preds = %do.cond.413
  %308 = load %struct._object*, %struct._object** %type, align 8, !dbg !12214, !tbaa !1876
  %309 = load %struct._object*, %struct._object** %value, align 8, !dbg !12215, !tbaa !1876
  %310 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !12216, !tbaa !1876
  call void @PyErr_Restore(%struct._object* %308, %struct._object* %309, %struct._object* %310), !dbg !12217
  store i32 0, i32* %cleanup.dest.slot, !dbg !12218
  br label %cleanup.415, !dbg !12218

cleanup.415:                                      ; preds = %do.end.414, %if.then.400
  %311 = bitcast %struct._object** %traceback to i8*, !dbg !12219
  call void @llvm.lifetime.end(i64 8, i8* %311) #2, !dbg !12219
  %312 = bitcast %struct._object** %value to i8*, !dbg !12219
  call void @llvm.lifetime.end(i64 8, i8* %312) #2, !dbg !12219
  %313 = bitcast %struct._object** %type to i8*, !dbg !12219
  call void @llvm.lifetime.end(i64 8, i8* %313) #2, !dbg !12219
  %cleanup.dest.418 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.418, label %cleanup.421 [
    i32 0, label %cleanup.cont.419
  ]

cleanup.cont.419:                                 ; preds = %cleanup.415
  br label %if.end.420, !dbg !12221

if.end.420:                                       ; preds = %cleanup.cont.419, %fail
  store %struct._object* null, %struct._object** %retval, !dbg !12222
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !12222

cleanup.421:                                      ; preds = %if.end.420, %cleanup.415, %do.end.377, %if.then.363, %cleanup.342, %cleanup.309, %cleanup.179, %cleanup.134, %if.then.96, %if.then.69, %if.then.45, %cleanup, %if.end
  %314 = bitcast i32* %dec_flags to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 4, i8* %314) #2, !dbg !12223
  %315 = bitcast i64* %dec_buffer_len to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %315) #2, !dbg !12223
  %316 = bitcast i8** %dec_buffer to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %316) #2, !dbg !12223
  %317 = bitcast i8** %input_end to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %317) #2, !dbg !12223
  %318 = bitcast i8** %input to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %318) #2, !dbg !12223
  %319 = bitcast %struct._object** %saved_state to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %319) #2, !dbg !12223
  %320 = bitcast i64* %skip_back to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %320) #2, !dbg !12223
  %321 = bitcast i64* %skip_bytes to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %321) #2, !dbg !12223
  %322 = bitcast i64* %chars_decoded to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %322) #2, !dbg !12223
  %323 = bitcast i64* %chars_to_skip to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %323) #2, !dbg !12223
  %324 = bitcast %struct._object** %next_input to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %324) #2, !dbg !12223
  %325 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 24, i8* %325) #2, !dbg !12223
  %326 = bitcast %struct._object** %posobj to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %326) #2, !dbg !12223
  %327 = bitcast %struct._object** %res to i8*, !dbg !12223
  call void @llvm.lifetime.end(i64 8, i8* %327) #2, !dbg !12223
  %328 = load %struct._object*, %struct._object** %retval, !dbg !12223
  ret %struct._object* %328, !dbg !12223
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_truncate(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %pos = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1521, metadata !1880), !dbg !12224
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1522, metadata !1880), !dbg !12225
  %0 = bitcast %struct._object** %pos to i8*, !dbg !12226
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12226
  call void @llvm.dbg.declare(metadata %struct._object** %pos, metadata !1523, metadata !1880), !dbg !12227
  store %struct._object* @_Py_NoneStruct, %struct._object** %pos, align 8, !dbg !12227, !tbaa !1876
  %1 = bitcast %struct._object** %res to i8*, !dbg !12228
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12228
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1524, metadata !1880), !dbg !12229
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12230, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 1, !dbg !12232
  %3 = load i32, i32* %ok, align 4, !dbg !12232, !tbaa !3900
  %cmp = icmp sle i32 %3, 0, !dbg !12233
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12234

if.then:                                          ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12235, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 2, !dbg !12239
  %5 = load i32, i32* %detached, align 4, !dbg !12239, !tbaa !3908
  %tobool = icmp ne i32 %5, 0, !dbg !12240
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12241

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12242, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12245
  br label %if.end, !dbg !12246

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12247, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12250
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12251
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12253

if.end.2:                                         ; preds = %entry
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12254, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), %struct._object** %pos), !dbg !12256
  %tobool3 = icmp ne i32 %call, 0, !dbg !12256
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !12257

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !12258
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12258

if.end.5:                                         ; preds = %if.end.2
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12260, !tbaa !1876
  %10 = bitcast %struct.textio* %9 to %struct._object*, !dbg !12261
  %11 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !12262, !tbaa !1876
  %call6 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %10, %struct._object* %11, i8* null), !dbg !12263
  store %struct._object* %call6, %struct._object** %res, align 8, !dbg !12264, !tbaa !1876
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !12265, !tbaa !1876
  %cmp7 = icmp eq %struct._object* %12, null, !dbg !12267
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !12268

if.then.8:                                        ; preds = %if.end.5
  store %struct._object* null, %struct._object** %retval, !dbg !12269
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12269

if.end.9:                                         ; preds = %if.end.5
  br label %do.body, !dbg !12270

do.body:                                          ; preds = %if.end.9
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12271
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !12271
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1525, metadata !1880), !dbg !12273
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !12274, !tbaa !1876
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !12273, !tbaa !1876
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12275, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !12277
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !12278, !tbaa !1927
  %dec = add i64 %16, -1, !dbg !12278
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12278, !tbaa !1927
  %cmp10 = icmp ne i64 %dec, 0, !dbg !12279
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !12280

if.then.11:                                       ; preds = %do.body
  br label %if.end.13, !dbg !12281

if.else.12:                                       ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12283, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !12285
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12285, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !12286
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12286, !tbaa !2197
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12287, !tbaa !1876
  call void %19(%struct._object* %20), !dbg !12288
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.12, %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12289
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !12289
  br label %do.cond, !dbg !12291

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !12292

do.end:                                           ; preds = %do.cond
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12294, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %22, i32 0, i32 4, !dbg !12295
  %23 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12295, !tbaa !4120
  %24 = load %struct._object*, %struct._object** @_PyIO_str_truncate, align 8, !dbg !12296, !tbaa !1876
  %25 = load %struct._object*, %struct._object** %pos, align 8, !dbg !12297, !tbaa !1876
  %call14 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %23, %struct._object* %24, %struct._object* %25, i8* null), !dbg !12298
  store %struct._object* %call14, %struct._object** %retval, !dbg !12299
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12299

cleanup:                                          ; preds = %do.end, %if.then.8, %if.then.4, %if.end
  %26 = bitcast %struct._object** %res to i8*, !dbg !12300
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !12300
  %27 = bitcast %struct._object** %pos to i8*, !dbg !12300
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !12300
  %28 = load %struct._object*, %struct._object** %retval, !dbg !12300
  ret %struct._object* %28, !dbg !12300
}

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

declare i64 @PyUnicode_FindChar(%struct._object*, i32, i64, i64, i32) #3

declare i32 @_PyIO_ConvertSsize_t(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %self, i64 %n) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %n.addr = alloca i64, align 8
  %chars = alloca %struct._object*, align 8
  %avail = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1234, metadata !1880), !dbg !12301
  store i64 %n, i64* %n.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !1235, metadata !1880), !dbg !12302
  %0 = bitcast %struct._object** %chars to i8*, !dbg !12303
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12303
  call void @llvm.dbg.declare(metadata %struct._object** %chars, metadata !1236, metadata !1880), !dbg !12304
  %1 = bitcast i64* %avail to i8*, !dbg !12305
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12305
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !1237, metadata !1880), !dbg !12306
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12307, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 22, !dbg !12309
  %3 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !12309, !tbaa !4264
  %cmp = icmp eq %struct._object* %3, null, !dbg !12310
  br i1 %cmp, label %if.then, label %if.end, !dbg !12311

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromStringAndSize(i8* null, i64 0), !dbg !12312
  store %struct._object* %call, %struct._object** %retval, !dbg !12313
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12313

if.end:                                           ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12314, !tbaa !1876
  %decoded_chars1 = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 22, !dbg !12315
  %5 = load %struct._object*, %struct._object** %decoded_chars1, align 8, !dbg !12315, !tbaa !4264
  %6 = bitcast %struct._object* %5 to %struct.PyASCIIObject*, !dbg !12316
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %6, i32 0, i32 1, !dbg !12317
  %7 = load i64, i64* %length, align 8, !dbg !12317, !tbaa !1937
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12318, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 23, !dbg !12319
  %9 = load i64, i64* %decoded_chars_used, align 8, !dbg !12319, !tbaa !5183
  %sub = sub i64 %7, %9, !dbg !12320
  store i64 %sub, i64* %avail, align 8, !dbg !12321, !tbaa !1941
  %10 = load i64, i64* %n.addr, align 8, !dbg !12322, !tbaa !1941
  %cmp2 = icmp slt i64 %10, 0, !dbg !12324
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false, !dbg !12325

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i64, i64* %n.addr, align 8, !dbg !12326, !tbaa !1941
  %12 = load i64, i64* %avail, align 8, !dbg !12328, !tbaa !1941
  %cmp3 = icmp sgt i64 %11, %12, !dbg !12329
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !12330

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %13 = load i64, i64* %avail, align 8, !dbg !12331, !tbaa !1941
  store i64 %13, i64* %n.addr, align 8, !dbg !12332, !tbaa !1941
  br label %if.end.5, !dbg !12333

if.end.5:                                         ; preds = %if.then.4, %lor.lhs.false
  %14 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12334, !tbaa !1876
  %decoded_chars_used6 = getelementptr inbounds %struct.textio, %struct.textio* %14, i32 0, i32 23, !dbg !12336
  %15 = load i64, i64* %decoded_chars_used6, align 8, !dbg !12336, !tbaa !5183
  %cmp7 = icmp sgt i64 %15, 0, !dbg !12337
  br i1 %cmp7, label %if.then.10, label %lor.lhs.false.8, !dbg !12338

lor.lhs.false.8:                                  ; preds = %if.end.5
  %16 = load i64, i64* %n.addr, align 8, !dbg !12339, !tbaa !1941
  %17 = load i64, i64* %avail, align 8, !dbg !12341, !tbaa !1941
  %cmp9 = icmp slt i64 %16, %17, !dbg !12342
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !12343

if.then.10:                                       ; preds = %lor.lhs.false.8, %if.end.5
  %18 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12344, !tbaa !1876
  %decoded_chars11 = getelementptr inbounds %struct.textio, %struct.textio* %18, i32 0, i32 22, !dbg !12346
  %19 = load %struct._object*, %struct._object** %decoded_chars11, align 8, !dbg !12346, !tbaa !4264
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12347, !tbaa !1876
  %decoded_chars_used12 = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 23, !dbg !12348
  %21 = load i64, i64* %decoded_chars_used12, align 8, !dbg !12348, !tbaa !5183
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12349, !tbaa !1876
  %decoded_chars_used13 = getelementptr inbounds %struct.textio, %struct.textio* %22, i32 0, i32 23, !dbg !12350
  %23 = load i64, i64* %decoded_chars_used13, align 8, !dbg !12350, !tbaa !5183
  %24 = load i64, i64* %n.addr, align 8, !dbg !12351, !tbaa !1941
  %add = add i64 %23, %24, !dbg !12352
  %call14 = call %struct._object* @PyUnicode_Substring(%struct._object* %19, i64 %21, i64 %add), !dbg !12353
  store %struct._object* %call14, %struct._object** %chars, align 8, !dbg !12354, !tbaa !1876
  %25 = load %struct._object*, %struct._object** %chars, align 8, !dbg !12355, !tbaa !1876
  %cmp15 = icmp eq %struct._object* %25, null, !dbg !12357
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !12358

if.then.16:                                       ; preds = %if.then.10
  store %struct._object* null, %struct._object** %retval, !dbg !12359
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12359

if.end.17:                                        ; preds = %if.then.10
  br label %if.end.19, !dbg !12360

if.else:                                          ; preds = %lor.lhs.false.8
  %26 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12361, !tbaa !1876
  %decoded_chars18 = getelementptr inbounds %struct.textio, %struct.textio* %26, i32 0, i32 22, !dbg !12363
  %27 = load %struct._object*, %struct._object** %decoded_chars18, align 8, !dbg !12363, !tbaa !4264
  store %struct._object* %27, %struct._object** %chars, align 8, !dbg !12364, !tbaa !1876
  %28 = load %struct._object*, %struct._object** %chars, align 8, !dbg !12365, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !12366
  %29 = load i64, i64* %ob_refcnt, align 8, !dbg !12367, !tbaa !1927
  %inc = add i64 %29, 1, !dbg !12367
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12367, !tbaa !1927
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.end.17
  %30 = load i64, i64* %n.addr, align 8, !dbg !12368, !tbaa !1941
  %31 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12369, !tbaa !1876
  %decoded_chars_used20 = getelementptr inbounds %struct.textio, %struct.textio* %31, i32 0, i32 23, !dbg !12370
  %32 = load i64, i64* %decoded_chars_used20, align 8, !dbg !12371, !tbaa !5183
  %add21 = add i64 %32, %30, !dbg !12371
  store i64 %add21, i64* %decoded_chars_used20, align 8, !dbg !12371, !tbaa !5183
  %33 = load %struct._object*, %struct._object** %chars, align 8, !dbg !12372, !tbaa !1876
  store %struct._object* %33, %struct._object** %retval, !dbg !12373
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12373

cleanup:                                          ; preds = %if.end.19, %if.then.16, %if.then
  %34 = bitcast i64* %avail to i8*, !dbg !12374
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !12374
  %35 = bitcast %struct._object** %chars to i8*, !dbg !12374
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !12374
  %36 = load %struct._object*, %struct._object** %retval, !dbg !12374
  ret %struct._object* %36, !dbg !12374
}

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #3

declare void @PyErr_Fetch(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyErr_Restore(%struct._object*, %struct._object*, %struct._object*) #3

declare void @PyErr_NormalizeException(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyException_SetContext(%struct._object*, %struct._object*) #3

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_parse_cookie(%struct.cookie_type* %cookie, %struct._object* %cookieObj) #0 {
entry:
  %retval = alloca i32, align 4
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %cookieObj.addr = alloca %struct._object*, align 8
  %buffer = alloca [21 x i8], align 16
  %cookieLong = alloca %struct._longobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp9 = alloca %struct._object*, align 8
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1406, metadata !1880), !dbg !12375
  store %struct._object* %cookieObj, %struct._object** %cookieObj.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %cookieObj.addr, metadata !1407, metadata !1880), !dbg !12376
  %0 = bitcast [21 x i8]* %buffer to i8*, !dbg !12377
  call void @llvm.lifetime.start(i64 21, i8* %0) #2, !dbg !12377
  call void @llvm.dbg.declare(metadata [21 x i8]* %buffer, metadata !1408, metadata !1880), !dbg !12378
  %1 = bitcast %struct._longobject** %cookieLong to i8*, !dbg !12379
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12379
  call void @llvm.dbg.declare(metadata %struct._longobject** %cookieLong, metadata !1412, metadata !1880), !dbg !12380
  %2 = load %struct._object*, %struct._object** %cookieObj.addr, align 8, !dbg !12381, !tbaa !1876
  %call = call %struct._object* @PyNumber_Long(%struct._object* %2), !dbg !12382
  %3 = bitcast %struct._object* %call to %struct._longobject*, !dbg !12383
  store %struct._longobject* %3, %struct._longobject** %cookieLong, align 8, !dbg !12380, !tbaa !1876
  %4 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12384, !tbaa !1876
  %cmp = icmp eq %struct._longobject* %4, null, !dbg !12386
  br i1 %cmp, label %if.then, label %if.end, !dbg !12387

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !12388
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12388

if.end:                                           ; preds = %entry
  %5 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12389, !tbaa !1876
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12390
  %call1 = call i32 @_PyLong_AsByteArray(%struct._longobject* %5, i8* %arraydecay, i64 21, i32 1, i32 0), !dbg !12391
  %cmp2 = icmp slt i32 %call1, 0, !dbg !12392
  br i1 %cmp2, label %if.then.3, label %if.end.7, !dbg !12393

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !12394

do.body:                                          ; preds = %if.then.3
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12395
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !12395
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1413, metadata !1880), !dbg !12397
  %7 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12398, !tbaa !1876
  %8 = bitcast %struct._longobject* %7 to %struct._object*, !dbg !12399
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !12397, !tbaa !1876
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12400, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !12402
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !12403, !tbaa !1927
  %dec = add i64 %10, -1, !dbg !12403
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12403, !tbaa !1927
  %cmp4 = icmp ne i64 %dec, 0, !dbg !12404
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !12405

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !12406

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12408, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12410
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12410, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !12411
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12411, !tbaa !2197
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12412, !tbaa !1876
  call void %13(%struct._object* %14), !dbg !12413
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12414
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !12414
  br label %do.cond, !dbg !12416

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !12417

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !12419
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12419

if.end.7:                                         ; preds = %if.end
  br label %do.body.8, !dbg !12420

do.body.8:                                        ; preds = %if.end.7
  %16 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !12421
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !12421
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp9, metadata !1417, metadata !1880), !dbg !12423
  %17 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12424, !tbaa !1876
  %18 = bitcast %struct._longobject* %17 to %struct._object*, !dbg !12425
  store %struct._object* %18, %struct._object** %_py_decref_tmp9, align 8, !dbg !12423, !tbaa !1876
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12426, !tbaa !1876
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !12428
  %20 = load i64, i64* %ob_refcnt10, align 8, !dbg !12429, !tbaa !1927
  %dec11 = add i64 %20, -1, !dbg !12429
  store i64 %dec11, i64* %ob_refcnt10, align 8, !dbg !12429, !tbaa !1927
  %cmp12 = icmp ne i64 %dec11, 0, !dbg !12430
  br i1 %cmp12, label %if.then.13, label %if.else.14, !dbg !12431

if.then.13:                                       ; preds = %do.body.8
  br label %if.end.17, !dbg !12432

if.else.14:                                       ; preds = %do.body.8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12434, !tbaa !1876
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !12436
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !12436, !tbaa !2195
  %tp_dealloc16 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !12437
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc16, align 8, !dbg !12437, !tbaa !2197
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12438, !tbaa !1876
  call void %23(%struct._object* %24), !dbg !12439
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.14, %if.then.13
  %25 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !12440
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !12440
  br label %do.cond.18, !dbg !12442

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !12443

do.end.19:                                        ; preds = %do.cond.18
  %26 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12445, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %26, i32 0, i32 0, !dbg !12446
  %27 = bitcast i64* %start_pos to i8*, !dbg !12447
  %arraydecay20 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12448
  %add.ptr = getelementptr i8, i8* %arraydecay20, i64 0, !dbg !12449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %add.ptr, i64 8, i32 1, i1 false), !dbg !12447
  %28 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12450, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %28, i32 0, i32 1, !dbg !12451
  %29 = bitcast i32* %dec_flags to i8*, !dbg !12452
  %arraydecay21 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12453
  %add.ptr22 = getelementptr i8, i8* %arraydecay21, i64 8, !dbg !12454
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %add.ptr22, i64 4, i32 1, i1 false), !dbg !12452
  %30 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12455, !tbaa !1876
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %30, i32 0, i32 2, !dbg !12456
  %31 = bitcast i32* %bytes_to_feed to i8*, !dbg !12457
  %arraydecay23 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12458
  %add.ptr24 = getelementptr i8, i8* %arraydecay23, i64 12, !dbg !12459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %add.ptr24, i64 4, i32 1, i1 false), !dbg !12457
  %32 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12460, !tbaa !1876
  %chars_to_skip = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %32, i32 0, i32 3, !dbg !12461
  %33 = bitcast i32* %chars_to_skip to i8*, !dbg !12462
  %arraydecay25 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12463
  %add.ptr26 = getelementptr i8, i8* %arraydecay25, i64 16, !dbg !12464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %add.ptr26, i64 4, i32 1, i1 false), !dbg !12462
  %34 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12465, !tbaa !1876
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %34, i32 0, i32 4, !dbg !12466
  %arraydecay27 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12467
  %add.ptr28 = getelementptr i8, i8* %arraydecay27, i64 20, !dbg !12468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %need_eof, i8* %add.ptr28, i64 1, i32 1, i1 false), !dbg !12469
  store i32 0, i32* %retval, !dbg !12470
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12470

cleanup:                                          ; preds = %do.end.19, %do.end, %if.then
  %35 = bitcast %struct._longobject** %cookieLong to i8*, !dbg !12471
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !12471
  %36 = bitcast [21 x i8]* %buffer to i8*, !dbg !12471
  call void @llvm.lifetime.end(i64 21, i8* %36) #2, !dbg !12471
  %37 = load i32, i32* %retval, !dbg !12471
  ret i32 %37, !dbg !12471
}

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_decoder_setstate(%struct.textio* %self, %struct.cookie_type* %cookie) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1423, metadata !1880), !dbg !12472
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1424, metadata !1880), !dbg !12473
  %0 = bitcast %struct._object** %res to i8*, !dbg !12474
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12474
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1425, metadata !1880), !dbg !12475
  %1 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12476, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %1, i32 0, i32 0, !dbg !12478
  %2 = load i64, i64* %start_pos, align 8, !dbg !12478, !tbaa !11033
  %cmp = icmp eq i64 %2, 0, !dbg !12479
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12480

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12481, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %3, i32 0, i32 1, !dbg !12483
  %4 = load i32, i32* %dec_flags, align 4, !dbg !12483, !tbaa !11213
  %cmp1 = icmp eq i32 %4, 0, !dbg !12484
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12485

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12486, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 7, !dbg !12487
  %6 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !12487, !tbaa !4206
  %7 = load %struct._object*, %struct._object** @_PyIO_str_reset, align 8, !dbg !12488, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %6, %struct._object* %7, i8* null), !dbg !12489
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !12490, !tbaa !1876
  br label %if.end, !dbg !12491

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12492, !tbaa !1876
  %decoder2 = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 7, !dbg !12493
  %9 = load %struct._object*, %struct._object** %decoder2, align 8, !dbg !12493, !tbaa !4206
  %10 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12494, !tbaa !1876
  %dec_flags3 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %10, i32 0, i32 1, !dbg !12495
  %11 = load i32, i32* %dec_flags3, align 4, !dbg !12495, !tbaa !11213
  %call4 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %9, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), i32 %11), !dbg !12496
  store %struct._object* %call4, %struct._object** %res, align 8, !dbg !12497, !tbaa !1876
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !12498, !tbaa !1876
  %cmp5 = icmp eq %struct._object* %12, null, !dbg !12500
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !12501

if.then.6:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !12502
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12502

if.end.7:                                         ; preds = %if.end
  br label %do.body, !dbg !12503

do.body:                                          ; preds = %if.end.7
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12504
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !12504
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1426, metadata !1880), !dbg !12506
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !12507, !tbaa !1876
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !12506, !tbaa !1876
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12508, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !12510
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !12511, !tbaa !1927
  %dec = add i64 %16, -1, !dbg !12511
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12511, !tbaa !1927
  %cmp8 = icmp ne i64 %dec, 0, !dbg !12512
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !12513

if.then.9:                                        ; preds = %do.body
  br label %if.end.11, !dbg !12514

if.else.10:                                       ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12516, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !12518
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12518, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !12519
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12519, !tbaa !2197
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12520, !tbaa !1876
  call void %19(%struct._object* %20), !dbg !12521
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.10, %if.then.9
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12522
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !12522
  br label %do.cond, !dbg !12524

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !12525

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !12527
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12527

cleanup:                                          ; preds = %do.end, %if.then.6
  %22 = bitcast %struct._object** %res to i8*, !dbg !12528
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !12528
  %23 = load i32, i32* %retval, !dbg !12528
  ret i32 %23, !dbg !12528
}

declare i64 @PyUnicode_GetLength(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_encoder_setstate(%struct.textio* %self, %struct.cookie_type* %cookie) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1430, metadata !1880), !dbg !12529
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1431, metadata !1880), !dbg !12530
  %0 = bitcast %struct._object** %res to i8*, !dbg !12531
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12531
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1432, metadata !1880), !dbg !12532
  %1 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12533, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %1, i32 0, i32 0, !dbg !12535
  %2 = load i64, i64* %start_pos, align 8, !dbg !12535, !tbaa !11033
  %cmp = icmp eq i64 %2, 0, !dbg !12536
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12537

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12538, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %3, i32 0, i32 1, !dbg !12540
  %4 = load i32, i32* %dec_flags, align 4, !dbg !12540, !tbaa !11213
  %cmp1 = icmp eq i32 %4, 0, !dbg !12541
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12542

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12543, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 6, !dbg !12545
  %6 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !12545, !tbaa !4177
  %7 = load %struct._object*, %struct._object** @_PyIO_str_reset, align 8, !dbg !12546, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %6, %struct._object* %7, i8* null), !dbg !12547
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !12548, !tbaa !1876
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12549, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 21, !dbg !12550
  store i8 1, i8* %encoding_start_of_stream, align 1, !dbg !12551, !tbaa !6155
  br label %if.end, !dbg !12552

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12553, !tbaa !1876
  %encoder2 = getelementptr inbounds %struct.textio, %struct.textio* %9, i32 0, i32 6, !dbg !12555
  %10 = load %struct._object*, %struct._object** %encoder2, align 8, !dbg !12555, !tbaa !4177
  %11 = load %struct._object*, %struct._object** @_PyIO_str_setstate, align 8, !dbg !12556, !tbaa !1876
  %12 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !12557, !tbaa !1876
  %call3 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %10, %struct._object* %11, %struct._object* %12, i8* null), !dbg !12558
  store %struct._object* %call3, %struct._object** %res, align 8, !dbg !12559, !tbaa !1876
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12560, !tbaa !1876
  %encoding_start_of_stream4 = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 21, !dbg !12561
  store i8 0, i8* %encoding_start_of_stream4, align 1, !dbg !12562, !tbaa !6155
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !12563, !tbaa !1876
  %cmp5 = icmp eq %struct._object* %14, null, !dbg !12565
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !12566

if.then.6:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !12567
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12567

if.end.7:                                         ; preds = %if.end
  br label %do.body, !dbg !12568

do.body:                                          ; preds = %if.end.7
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12569
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !12569
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1433, metadata !1880), !dbg !12571
  %16 = load %struct._object*, %struct._object** %res, align 8, !dbg !12572, !tbaa !1876
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !12571, !tbaa !1876
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12573, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !12575
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !12576, !tbaa !1927
  %dec = add i64 %18, -1, !dbg !12576
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12576, !tbaa !1927
  %cmp8 = icmp ne i64 %dec, 0, !dbg !12577
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !12578

if.then.9:                                        ; preds = %do.body
  br label %if.end.11, !dbg !12579

if.else.10:                                       ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12581, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !12583
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12583, !tbaa !2195
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !12584
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12584, !tbaa !2197
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12585, !tbaa !1876
  call void %21(%struct._object* %22), !dbg !12586
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.10, %if.then.9
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12587
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !12587
  br label %do.cond, !dbg !12589

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !12590

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !12592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12592

cleanup:                                          ; preds = %do.end, %if.then.6
  %24 = bitcast %struct._object** %res to i8*, !dbg !12593
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !12593
  %25 = load i32, i32* %retval, !dbg !12593
  ret i32 %25, !dbg !12593
}

declare %struct._object* @PyNumber_Long(%struct._object*) #3

declare i32 @_PyLong_AsByteArray(%struct._longobject*, i8*, i64, i32, i32) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare i64 @PyLong_AsLong(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_build_cookie(%struct.cookie_type* %cookie) #0 {
entry:
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %buffer = alloca [21 x i8], align 16
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1517, metadata !1880), !dbg !12594
  %0 = bitcast [21 x i8]* %buffer to i8*, !dbg !12595
  call void @llvm.lifetime.start(i64 21, i8* %0) #2, !dbg !12595
  call void @llvm.dbg.declare(metadata [21 x i8]* %buffer, metadata !1518, metadata !1880), !dbg !12596
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12597
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 0, !dbg !12598
  %1 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12599, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %1, i32 0, i32 0, !dbg !12600
  %2 = bitcast i64* %start_pos to i8*, !dbg !12601
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %2, i64 8, i32 1, i1 false), !dbg !12601
  %arraydecay1 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12602
  %add.ptr2 = getelementptr i8, i8* %arraydecay1, i64 8, !dbg !12603
  %3 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12604, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %3, i32 0, i32 1, !dbg !12605
  %4 = bitcast i32* %dec_flags to i8*, !dbg !12606
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr2, i8* %4, i64 4, i32 1, i1 false), !dbg !12606
  %arraydecay3 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12607
  %add.ptr4 = getelementptr i8, i8* %arraydecay3, i64 12, !dbg !12608
  %5 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12609, !tbaa !1876
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %5, i32 0, i32 2, !dbg !12610
  %6 = bitcast i32* %bytes_to_feed to i8*, !dbg !12611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr4, i8* %6, i64 4, i32 1, i1 false), !dbg !12611
  %arraydecay5 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12612
  %add.ptr6 = getelementptr i8, i8* %arraydecay5, i64 16, !dbg !12613
  %7 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12614, !tbaa !1876
  %chars_to_skip = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %7, i32 0, i32 3, !dbg !12615
  %8 = bitcast i32* %chars_to_skip to i8*, !dbg !12616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr6, i8* %8, i64 4, i32 1, i1 false), !dbg !12616
  %arraydecay7 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12617
  %add.ptr8 = getelementptr i8, i8* %arraydecay7, i64 20, !dbg !12618
  %9 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12619, !tbaa !1876
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %9, i32 0, i32 4, !dbg !12620
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr8, i8* %need_eof, i64 1, i32 1, i1 false), !dbg !12621
  %arraydecay9 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12622
  %call = call %struct._object* @_PyLong_FromByteArray(i8* %arraydecay9, i64 21, i32 1, i32 0), !dbg !12623
  %10 = bitcast [21 x i8]* %buffer to i8*, !dbg !12624
  call void @llvm.lifetime.end(i64 21, i8* %10) #2, !dbg !12624
  ret %struct._object* %call, !dbg !12625
}

declare %struct._object* @_PyLong_FromByteArray(i8*, i64, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_name_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1529, metadata !1880), !dbg !12626
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1530, metadata !1880), !dbg !12627
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12628, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !12630
  %1 = load i32, i32* %ok, align 4, !dbg !12630, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !12631
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12632

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12633, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !12637
  %3 = load i32, i32* %detached, align 4, !dbg !12637, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !12638
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12639

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12640, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12643
  br label %if.end, !dbg !12644

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12645, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12648
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12649
  br label %return, !dbg !12649

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12651, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !12652
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12652, !tbaa !4120
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %7, %struct._Py_Identifier* @PyId_name), !dbg !12653
  store %struct._object* %call, %struct._object** %retval, !dbg !12654
  br label %return, !dbg !12654

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12655
  ret %struct._object* %8, !dbg !12655
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_newlines_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1533, metadata !1880), !dbg !12656
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1534, metadata !1880), !dbg !12657
  %0 = bitcast %struct._object** %res to i8*, !dbg !12658
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12658
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1535, metadata !1880), !dbg !12659
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12660, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !12662
  %2 = load i32, i32* %ok, align 4, !dbg !12662, !tbaa !3900
  %cmp = icmp sle i32 %2, 0, !dbg !12663
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12664

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12665, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !12669
  %4 = load i32, i32* %detached, align 4, !dbg !12669, !tbaa !3908
  %tobool = icmp ne i32 %4, 0, !dbg !12670
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12671

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12672, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12675
  br label %if.end, !dbg !12676

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12677, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12680
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12681
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12683

if.end.2:                                         ; preds = %entry
  %7 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12684, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %7, i32 0, i32 7, !dbg !12686
  %8 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !12686, !tbaa !4206
  %cmp3 = icmp eq %struct._object* %8, null, !dbg !12687
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !12688

if.then.4:                                        ; preds = %if.end.2
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12689, !tbaa !1927
  %inc = add i64 %9, 1, !dbg !12689
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12689, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12690
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12690

if.end.5:                                         ; preds = %if.end.2
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12691, !tbaa !1876
  %decoder6 = getelementptr inbounds %struct.textio, %struct.textio* %10, i32 0, i32 7, !dbg !12692
  %11 = load %struct._object*, %struct._object** %decoder6, align 8, !dbg !12692, !tbaa !4206
  %12 = load %struct._object*, %struct._object** @_PyIO_str_newlines, align 8, !dbg !12693, !tbaa !1876
  %call = call %struct._object* @PyObject_GetAttr(%struct._object* %11, %struct._object* %12), !dbg !12694
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !12695, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !12696, !tbaa !1876
  %cmp7 = icmp eq %struct._object* %13, null, !dbg !12698
  br i1 %cmp7, label %if.then.8, label %if.end.14, !dbg !12699

if.then.8:                                        ; preds = %if.end.5
  %14 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !12700, !tbaa !1876
  %call9 = call i32 @PyErr_ExceptionMatches(%struct._object* %14), !dbg !12703
  %tobool10 = icmp ne i32 %call9, 0, !dbg !12703
  br i1 %tobool10, label %if.then.11, label %if.else.13, !dbg !12704

if.then.11:                                       ; preds = %if.then.8
  call void @PyErr_Clear(), !dbg !12705
  %15 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12707, !tbaa !1927
  %inc12 = add i64 %15, 1, !dbg !12707
  store i64 %inc12, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12707, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12708
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12708

if.else.13:                                       ; preds = %if.then.8
  store %struct._object* null, %struct._object** %retval, !dbg !12709
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12709

if.end.14:                                        ; preds = %if.end.5
  %16 = load %struct._object*, %struct._object** %res, align 8, !dbg !12711, !tbaa !1876
  store %struct._object* %16, %struct._object** %retval, !dbg !12712
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12712

cleanup:                                          ; preds = %if.end.14, %if.else.13, %if.then.11, %if.then.4, %if.end
  %17 = bitcast %struct._object** %res to i8*, !dbg !12713
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !12713
  %18 = load %struct._object*, %struct._object** %retval, !dbg !12713
  ret %struct._object* %18, !dbg !12713
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_errors_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1538, metadata !1880), !dbg !12714
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1539, metadata !1880), !dbg !12715
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12716, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !12718
  %1 = load i32, i32* %ok, align 4, !dbg !12718, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !12719
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12720

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12721, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !12725
  %3 = load i32, i32* %detached, align 4, !dbg !12725, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !12726
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12727

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12728, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12731
  br label %if.end, !dbg !12732

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12733, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12736
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12737
  br label %return, !dbg !12737

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12739, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 9, !dbg !12740
  %7 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12740, !tbaa !4351
  %8 = bitcast %struct._object* %7 to %struct.PyBytesObject*, !dbg !12741
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %8, i32 0, i32 2, !dbg !12742
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12743
  %call = call %struct._object* @PyUnicode_FromString(i8* %arraydecay), !dbg !12744
  store %struct._object* %call, %struct._object** %retval, !dbg !12745
  br label %return, !dbg !12745

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !12746
  ret %struct._object* %9, !dbg !12746
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_chunk_size_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1542, metadata !1880), !dbg !12747
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1543, metadata !1880), !dbg !12748
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12749, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !12751
  %1 = load i32, i32* %ok, align 4, !dbg !12751, !tbaa !3900
  %cmp = icmp sle i32 %1, 0, !dbg !12752
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12753

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12754, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !12758
  %3 = load i32, i32* %detached, align 4, !dbg !12758, !tbaa !3908
  %tobool = icmp ne i32 %3, 0, !dbg !12759
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12760

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12761, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12764
  br label %if.end, !dbg !12765

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12766, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12769
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12770
  br label %return, !dbg !12770

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12772, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 3, !dbg !12773
  %7 = load i64, i64* %chunk_size, align 8, !dbg !12773, !tbaa !5570
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %7), !dbg !12774
  store %struct._object* %call, %struct._object** %retval, !dbg !12775
  br label %return, !dbg !12775

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12776
  ret %struct._object* %8, !dbg !12776
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_chunk_size_set(%struct.textio* %self, %struct._object* %arg, i8* %context) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1548, metadata !1880), !dbg !12777
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !1549, metadata !1880), !dbg !12778
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1550, metadata !1880), !dbg !12779
  %0 = bitcast i64* %n to i8*, !dbg !12780
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12780
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1551, metadata !1880), !dbg !12781
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12782, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !12784
  %2 = load i32, i32* %ok, align 4, !dbg !12784, !tbaa !3900
  %cmp = icmp sle i32 %2, 0, !dbg !12785
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12786

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12787, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !12791
  %4 = load i32, i32* %detached, align 4, !dbg !12791, !tbaa !3908
  %tobool = icmp ne i32 %4, 0, !dbg !12792
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12793

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12794, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12797
  br label %if.end, !dbg !12798

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12799, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12802
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store i32 -1, i32* %retval, !dbg !12803
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12805

if.end.2:                                         ; preds = %entry
  %7 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !12806, !tbaa !1876
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12807, !tbaa !1876
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %7, %struct._object* %8), !dbg !12808
  store i64 %call, i64* %n, align 8, !dbg !12809, !tbaa !1941
  %9 = load i64, i64* %n, align 8, !dbg !12810, !tbaa !1941
  %cmp3 = icmp eq i64 %9, -1, !dbg !12812
  br i1 %cmp3, label %land.lhs.true, label %if.end.7, !dbg !12813

land.lhs.true:                                    ; preds = %if.end.2
  %call4 = call %struct._object* @PyErr_Occurred(), !dbg !12814
  %tobool5 = icmp ne %struct._object* %call4, null, !dbg !12814
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !12816

if.then.6:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, !dbg !12817
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12817

if.end.7:                                         ; preds = %land.lhs.true, %if.end.2
  %10 = load i64, i64* %n, align 8, !dbg !12818, !tbaa !1941
  %cmp8 = icmp sle i64 %10, 0, !dbg !12820
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !12821

if.then.9:                                        ; preds = %if.end.7
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12822, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.94, i32 0, i32 0)), !dbg !12824
  store i32 -1, i32* %retval, !dbg !12825
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12825

if.end.10:                                        ; preds = %if.end.7
  %12 = load i64, i64* %n, align 8, !dbg !12826, !tbaa !1941
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12827, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 3, !dbg !12828
  store i64 %12, i64* %chunk_size, align 8, !dbg !12829, !tbaa !5570
  store i32 0, i32* %retval, !dbg !12830
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12830

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then.6, %if.end
  %14 = bitcast i64* %n to i8*, !dbg !12831
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !12831
  %15 = load i32, i32* %retval, !dbg !12831
  ret i32 %15, !dbg !12831
}

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #3

declare i32 @_PyLong_AsInt(%struct._object*) #3

declare %struct._object* @_Py_device_encoding(i32) #3

declare %struct._object* @_PyIO_get_locale_module(%struct._PyIO_State*) #3

declare i8* @PyUnicode_AsUTF8(%struct._object*) #3

declare %struct._object* @_PyCodec_LookupTextEncoding(i8*, i8*) #3

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #5

declare %struct._object* @_PyCodecInfo_GetIncrementalDecoder(%struct._object*, i8*) #3

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

declare %struct._object* @_PyCodecInfo_GetIncrementalEncoder(%struct._object*, i8*) #3

declare i32 @PyUnicode_CompareWithASCIIString(%struct._object*, i8*) #3

declare i32 @_PyObject_HasAttrId(%struct._object*, %struct._Py_Identifier*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @ascii_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1739, metadata !1880), !dbg !12832
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1740, metadata !1880), !dbg !12833
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12834, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12835, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12836
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12836, !tbaa !4351
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12837
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12838
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12839
  %call = call %struct._object* @_PyUnicode_AsASCIIString(%struct._object* %0, i8* %arraydecay), !dbg !12840
  ret %struct._object* %call, !dbg !12841
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @latin1_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1743, metadata !1880), !dbg !12842
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1744, metadata !1880), !dbg !12843
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12844, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12845, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12846
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12846, !tbaa !4351
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12847
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12848
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12849
  %call = call %struct._object* @_PyUnicode_AsLatin1String(%struct._object* %0, i8* %arraydecay), !dbg !12850
  ret %struct._object* %call, !dbg !12851
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf8_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1747, metadata !1880), !dbg !12852
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1748, metadata !1880), !dbg !12853
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12854, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12855, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12856
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12856, !tbaa !4351
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12857
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12858
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12859
  %call = call %struct._object* @_PyUnicode_AsUTF8String(%struct._object* %0, i8* %arraydecay), !dbg !12860
  ret %struct._object* %call, !dbg !12861
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf16be_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1751, metadata !1880), !dbg !12862
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1752, metadata !1880), !dbg !12863
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12864, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12865, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12866
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12866, !tbaa !4351
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12867
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12868
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12869
  %call = call %struct._object* @_PyUnicode_EncodeUTF16(%struct._object* %0, i8* %arraydecay, i32 1), !dbg !12870
  ret %struct._object* %call, !dbg !12871
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf16le_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1755, metadata !1880), !dbg !12872
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1756, metadata !1880), !dbg !12873
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12874, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12875, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12876
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12876, !tbaa !4351
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12877
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12878
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12879
  %call = call %struct._object* @_PyUnicode_EncodeUTF16(%struct._object* %0, i8* %arraydecay, i32 -1), !dbg !12880
  ret %struct._object* %call, !dbg !12881
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf16_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1759, metadata !1880), !dbg !12882
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1760, metadata !1880), !dbg !12883
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12884, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 21, !dbg !12886
  %1 = load i8, i8* %encoding_start_of_stream, align 1, !dbg !12886, !tbaa !6155
  %tobool = icmp ne i8 %1, 0, !dbg !12884
  br i1 %tobool, label %if.end, label %if.then, !dbg !12887

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12888, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12890, !tbaa !1876
  %call = call %struct._object* @utf16le_encode(%struct.textio* %2, %struct._object* %3), !dbg !12891
  store %struct._object* %call, %struct._object** %retval, !dbg !12892
  br label %return, !dbg !12892

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12893, !tbaa !1876
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12894, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 9, !dbg !12895
  %6 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12895, !tbaa !4351
  %7 = bitcast %struct._object* %6 to %struct.PyBytesObject*, !dbg !12896
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %7, i32 0, i32 2, !dbg !12897
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12898
  %call1 = call %struct._object* @_PyUnicode_EncodeUTF16(%struct._object* %4, i8* %arraydecay, i32 0), !dbg !12899
  store %struct._object* %call1, %struct._object** %retval, !dbg !12900
  br label %return, !dbg !12900

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12901
  ret %struct._object* %8, !dbg !12901
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf32be_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1763, metadata !1880), !dbg !12902
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1764, metadata !1880), !dbg !12903
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12904, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12905, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12906
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12906, !tbaa !4351
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12907
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12908
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12909
  %call = call %struct._object* @_PyUnicode_EncodeUTF32(%struct._object* %0, i8* %arraydecay, i32 1), !dbg !12910
  ret %struct._object* %call, !dbg !12911
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf32le_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1767, metadata !1880), !dbg !12912
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1768, metadata !1880), !dbg !12913
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12914, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12915, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12916
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12916, !tbaa !4351
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12917
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12918
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12919
  %call = call %struct._object* @_PyUnicode_EncodeUTF32(%struct._object* %0, i8* %arraydecay, i32 -1), !dbg !12920
  ret %struct._object* %call, !dbg !12921
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf32_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1771, metadata !1880), !dbg !12922
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1772, metadata !1880), !dbg !12923
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12924, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 21, !dbg !12926
  %1 = load i8, i8* %encoding_start_of_stream, align 1, !dbg !12926, !tbaa !6155
  %tobool = icmp ne i8 %1, 0, !dbg !12924
  br i1 %tobool, label %if.end, label %if.then, !dbg !12927

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12928, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12930, !tbaa !1876
  %call = call %struct._object* @utf32le_encode(%struct.textio* %2, %struct._object* %3), !dbg !12931
  store %struct._object* %call, %struct._object** %retval, !dbg !12932
  br label %return, !dbg !12932

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12933, !tbaa !1876
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12934, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 9, !dbg !12935
  %6 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12935, !tbaa !4351
  %7 = bitcast %struct._object* %6 to %struct.PyBytesObject*, !dbg !12936
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %7, i32 0, i32 2, !dbg !12937
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12938
  %call1 = call %struct._object* @_PyUnicode_EncodeUTF32(%struct._object* %4, i8* %arraydecay, i32 0), !dbg !12939
  store %struct._object* %call1, %struct._object** %retval, !dbg !12940
  br label %return, !dbg !12940

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12941
  ret %struct._object* %8, !dbg !12941
}

declare %struct._object* @_PyUnicode_AsASCIIString(%struct._object*, i8*) #3

declare %struct._object* @_PyUnicode_AsLatin1String(%struct._object*, i8*) #3

declare %struct._object* @_PyUnicode_AsUTF8String(%struct._object*, i8*) #3

declare %struct._object* @_PyUnicode_EncodeUTF16(%struct._object*, i8*, i32) #3

declare %struct._object* @_PyUnicode_EncodeUTF32(%struct._object*, i8*, i32) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1873, !1874}
!llvm.ident = !{!1875}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !10, subprograms: !458, globals: !1773)
!1 = !DIFile(filename: "textio.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !4, line: 451, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9}
!6 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!7 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!8 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!9 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!10 = !{!11, !102, !50, !368, !386, !394, !405, !404, !409, !408, !412, !411, !413, !415, !417, !64, !56, !42, !419, !107, !22, !432, !433, !434, !446, !454, !456, !40}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "nldecoder_object", file: !13, line: 230, baseType: !14)
!13 = !DIFile(filename: "./Modules/_io/textio.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!14 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 223, size: 320, align: 64, elements: !15)
!15 = !{!16, !363, !364, !365, !366, !367}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !14, file: !13, line: 224, baseType: !17, size: 128, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !18, line: 109, baseType: !19)
!18 = !DIFile(filename: "Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !18, line: 105, size: 128, align: 64, elements: !20)
!20 = !{!21, !29}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !19, file: !18, line: 107, baseType: !22, size: 64, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !23, line: 177, baseType: !24)
!23 = !DIFile(filename: "Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !25, line: 102, baseType: !26)
!25 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !27, line: 181, baseType: !28)
!27 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!28 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !19, file: !18, line: 108, baseType: !30, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !18, line: 334, size: 3200, align: 64, elements: !32)
!32 = !{!33, !39, !43, !44, !45, !51, !115, !120, !125, !126, !131, !183, !214, !226, !232, !233, !234, !236, !238, !269, !270, !271, !280, !281, !286, !287, !289, !291, !301, !311, !329, !330, !331, !333, !335, !336, !338, !343, !348, !353, !354, !355, !356, !357, !358, !359, !360, !362}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !31, file: !18, line: 335, baseType: !34, size: 192, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !18, line: 114, baseType: !35)
!35 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 111, size: 192, align: 64, elements: !36)
!36 = !{!37, !38}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !35, file: !18, line: 112, baseType: !17, size: 128, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !35, file: !18, line: 113, baseType: !22, size: 64, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !31, file: !18, line: 336, baseType: !40, size: 64, align: 64, offset: 192)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!42 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 256)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 320)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !31, file: !18, line: 341, baseType: !46, size: 64, align: 64, offset: 384)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !18, line: 308, baseType: !47)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!48 = !DISubroutineType(types: !49)
!49 = !{null, !50}
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !31, file: !18, line: 342, baseType: !52, size: 64, align: 64, offset: 448)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !18, line: 314, baseType: !53)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!54 = !DISubroutineType(types: !55)
!55 = !{!56, !50, !57, !56}
!56 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !25, line: 48, baseType: !59)
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !60, line: 246, size: 1728, align: 64, elements: !61)
!60 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!61 = !{!62, !63, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !83, !84, !85, !86, !88, !90, !92, !96, !99, !101, !103, !104, !105, !106, !110, !111}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !59, file: !60, line: 247, baseType: !56, size: 32, align: 32)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !59, file: !60, line: 252, baseType: !64, size: 64, align: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !59, file: !60, line: 253, baseType: !64, size: 64, align: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !59, file: !60, line: 254, baseType: !64, size: 64, align: 64, offset: 192)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !59, file: !60, line: 255, baseType: !64, size: 64, align: 64, offset: 256)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !59, file: !60, line: 256, baseType: !64, size: 64, align: 64, offset: 320)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !59, file: !60, line: 257, baseType: !64, size: 64, align: 64, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !59, file: !60, line: 258, baseType: !64, size: 64, align: 64, offset: 448)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !59, file: !60, line: 259, baseType: !64, size: 64, align: 64, offset: 512)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !59, file: !60, line: 261, baseType: !64, size: 64, align: 64, offset: 576)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !59, file: !60, line: 262, baseType: !64, size: 64, align: 64, offset: 640)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !59, file: !60, line: 263, baseType: !64, size: 64, align: 64, offset: 704)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !59, file: !60, line: 265, baseType: !76, size: 64, align: 64, offset: 768)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64, align: 64)
!77 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !60, line: 161, size: 192, align: 64, elements: !78)
!78 = !{!79, !80, !82}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !77, file: !60, line: 162, baseType: !76, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !77, file: !60, line: 163, baseType: !81, size: 64, align: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !77, file: !60, line: 167, baseType: !56, size: 32, align: 32, offset: 128)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !59, file: !60, line: 267, baseType: !81, size: 64, align: 64, offset: 832)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !59, file: !60, line: 269, baseType: !56, size: 32, align: 32, offset: 896)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !59, file: !60, line: 273, baseType: !56, size: 32, align: 32, offset: 928)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !59, file: !60, line: 275, baseType: !87, size: 64, align: 64, offset: 960)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !27, line: 140, baseType: !28)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !59, file: !60, line: 279, baseType: !89, size: 16, align: 16, offset: 1024)
!89 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !59, file: !60, line: 280, baseType: !91, size: 8, align: 8, offset: 1040)
!91 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !59, file: !60, line: 281, baseType: !93, size: 8, align: 8, offset: 1048)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 8, align: 8, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 1)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !59, file: !60, line: 285, baseType: !97, size: 64, align: 64, offset: 1088)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !60, line: 155, baseType: null)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !59, file: !60, line: 294, baseType: !100, size: 64, align: 64, offset: 1152)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !27, line: 141, baseType: !28)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !59, file: !60, line: 303, baseType: !102, size: 64, align: 64, offset: 1216)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !59, file: !60, line: 304, baseType: !102, size: 64, align: 64, offset: 1280)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !59, file: !60, line: 305, baseType: !102, size: 64, align: 64, offset: 1344)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !59, file: !60, line: 306, baseType: !102, size: 64, align: 64, offset: 1408)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !59, file: !60, line: 307, baseType: !107, size: 64, align: 64, offset: 1472)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !108, line: 62, baseType: !109)
!108 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!109 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !59, file: !60, line: 309, baseType: !56, size: 32, align: 32, offset: 1536)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !59, file: !60, line: 311, baseType: !112, size: 160, align: 8, offset: 1568)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 160, align: 8, elements: !113)
!113 = !{!114}
!114 = !DISubrange(count: 20)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !31, file: !18, line: 343, baseType: !116, size: 64, align: 64, offset: 512)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !18, line: 316, baseType: !117)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64, align: 64)
!118 = !DISubroutineType(types: !119)
!119 = !{!50, !50, !64}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !31, file: !18, line: 344, baseType: !121, size: 64, align: 64, offset: 576)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !18, line: 318, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!56, !50, !64, !50}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !31, file: !18, line: 345, baseType: !102, size: 64, align: 64, offset: 640)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !31, file: !18, line: 346, baseType: !127, size: 64, align: 64, offset: 704)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !18, line: 320, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64, align: 64)
!129 = !DISubroutineType(types: !130)
!130 = !{!50, !50}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !31, file: !18, line: 350, baseType: !132, size: 64, align: 64, offset: 768)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !18, line: 278, baseType: !134)
!134 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 236, size: 2176, align: 64, elements: !135)
!135 = !{!136, !141, !142, !143, !144, !145, !150, !152, !153, !154, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !134, file: !18, line: 241, baseType: !137, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !18, line: 166, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64, align: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!50, !50, !50}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !134, file: !18, line: 242, baseType: !137, size: 64, align: 64, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !134, file: !18, line: 243, baseType: !137, size: 64, align: 64, offset: 128)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !134, file: !18, line: 244, baseType: !137, size: 64, align: 64, offset: 192)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !134, file: !18, line: 245, baseType: !137, size: 64, align: 64, offset: 256)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !134, file: !18, line: 246, baseType: !146, size: 64, align: 64, offset: 320)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !18, line: 167, baseType: !147)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64, align: 64)
!148 = !DISubroutineType(types: !149)
!149 = !{!50, !50, !50, !50}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !134, file: !18, line: 247, baseType: !151, size: 64, align: 64, offset: 384)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !18, line: 165, baseType: !128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !134, file: !18, line: 248, baseType: !151, size: 64, align: 64, offset: 448)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !134, file: !18, line: 249, baseType: !151, size: 64, align: 64, offset: 512)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !134, file: !18, line: 250, baseType: !155, size: 64, align: 64, offset: 576)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !18, line: 168, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64, align: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!56, !50}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !134, file: !18, line: 251, baseType: !151, size: 64, align: 64, offset: 640)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !134, file: !18, line: 252, baseType: !137, size: 64, align: 64, offset: 704)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !134, file: !18, line: 253, baseType: !137, size: 64, align: 64, offset: 768)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !134, file: !18, line: 254, baseType: !137, size: 64, align: 64, offset: 832)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !134, file: !18, line: 255, baseType: !137, size: 64, align: 64, offset: 896)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !134, file: !18, line: 256, baseType: !137, size: 64, align: 64, offset: 960)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !134, file: !18, line: 257, baseType: !151, size: 64, align: 64, offset: 1024)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !134, file: !18, line: 258, baseType: !102, size: 64, align: 64, offset: 1088)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !134, file: !18, line: 259, baseType: !151, size: 64, align: 64, offset: 1152)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !134, file: !18, line: 261, baseType: !137, size: 64, align: 64, offset: 1216)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !134, file: !18, line: 262, baseType: !137, size: 64, align: 64, offset: 1280)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !134, file: !18, line: 263, baseType: !137, size: 64, align: 64, offset: 1344)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !134, file: !18, line: 264, baseType: !137, size: 64, align: 64, offset: 1408)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !134, file: !18, line: 265, baseType: !146, size: 64, align: 64, offset: 1472)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !134, file: !18, line: 266, baseType: !137, size: 64, align: 64, offset: 1536)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !134, file: !18, line: 267, baseType: !137, size: 64, align: 64, offset: 1600)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !134, file: !18, line: 268, baseType: !137, size: 64, align: 64, offset: 1664)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !134, file: !18, line: 269, baseType: !137, size: 64, align: 64, offset: 1728)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !134, file: !18, line: 270, baseType: !137, size: 64, align: 64, offset: 1792)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !134, file: !18, line: 272, baseType: !137, size: 64, align: 64, offset: 1856)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !134, file: !18, line: 273, baseType: !137, size: 64, align: 64, offset: 1920)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !134, file: !18, line: 274, baseType: !137, size: 64, align: 64, offset: 1984)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !134, file: !18, line: 275, baseType: !137, size: 64, align: 64, offset: 2048)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !134, file: !18, line: 277, baseType: !151, size: 64, align: 64, offset: 2112)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !31, file: !18, line: 351, baseType: !184, size: 64, align: 64, offset: 832)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !18, line: 292, baseType: !186)
!186 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 280, size: 640, align: 64, elements: !187)
!187 = !{!188, !193, !194, !199, !200, !201, !206, !207, !212, !213}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !186, file: !18, line: 281, baseType: !189, size: 64, align: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !18, line: 169, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!22, !50}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !186, file: !18, line: 282, baseType: !137, size: 64, align: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !186, file: !18, line: 283, baseType: !195, size: 64, align: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !18, line: 170, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!50, !50, !22}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !186, file: !18, line: 284, baseType: !195, size: 64, align: 64, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !186, file: !18, line: 285, baseType: !102, size: 64, align: 64, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !186, file: !18, line: 286, baseType: !202, size: 64, align: 64, offset: 320)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !18, line: 172, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{!56, !50, !22, !50}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !186, file: !18, line: 287, baseType: !102, size: 64, align: 64, offset: 384)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !186, file: !18, line: 288, baseType: !208, size: 64, align: 64, offset: 448)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !18, line: 231, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DISubroutineType(types: !211)
!211 = !{!56, !50, !50}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !186, file: !18, line: 290, baseType: !137, size: 64, align: 64, offset: 512)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !186, file: !18, line: 291, baseType: !195, size: 64, align: 64, offset: 576)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !31, file: !18, line: 352, baseType: !215, size: 64, align: 64, offset: 896)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !18, line: 298, baseType: !217)
!217 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 294, size: 192, align: 64, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !217, file: !18, line: 295, baseType: !189, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !217, file: !18, line: 296, baseType: !137, size: 64, align: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !217, file: !18, line: 297, baseType: !222, size: 64, align: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !18, line: 174, baseType: !223)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64, align: 64)
!224 = !DISubroutineType(types: !225)
!225 = !{!56, !50, !50, !50}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !31, file: !18, line: 356, baseType: !227, size: 64, align: 64, offset: 960)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !18, line: 321, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64, align: 64)
!229 = !DISubroutineType(types: !230)
!230 = !{!231, !50}
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !23, line: 186, baseType: !22)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !31, file: !18, line: 357, baseType: !146, size: 64, align: 64, offset: 1024)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !31, file: !18, line: 358, baseType: !127, size: 64, align: 64, offset: 1088)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !31, file: !18, line: 359, baseType: !235, size: 64, align: 64, offset: 1152)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !18, line: 317, baseType: !138)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !31, file: !18, line: 360, baseType: !237, size: 64, align: 64, offset: 1216)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !18, line: 319, baseType: !223)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !31, file: !18, line: 363, baseType: !239, size: 64, align: 64, offset: 1280)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !18, line: 304, baseType: !241)
!241 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 301, size: 128, align: 64, elements: !242)
!242 = !{!243, !264}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !241, file: !18, line: 302, baseType: !244, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !18, line: 193, baseType: !245)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64, align: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{!56, !50, !248, !56}
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !18, line: 191, baseType: !250)
!250 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !18, line: 178, size: 640, align: 64, elements: !251)
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !261, !262, !263}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !250, file: !18, line: 179, baseType: !102, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !250, file: !18, line: 180, baseType: !50, size: 64, align: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !250, file: !18, line: 181, baseType: !22, size: 64, align: 64, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !250, file: !18, line: 182, baseType: !22, size: 64, align: 64, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !250, file: !18, line: 184, baseType: !56, size: 32, align: 32, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !250, file: !18, line: 185, baseType: !56, size: 32, align: 32, offset: 288)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !250, file: !18, line: 186, baseType: !64, size: 64, align: 64, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !250, file: !18, line: 187, baseType: !260, size: 64, align: 64, offset: 384)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !250, file: !18, line: 188, baseType: !260, size: 64, align: 64, offset: 448)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !250, file: !18, line: 189, baseType: !260, size: 64, align: 64, offset: 512)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !250, file: !18, line: 190, baseType: !102, size: 64, align: 64, offset: 576)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !241, file: !18, line: 303, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !18, line: 194, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64, align: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{null, !50, !248}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !31, file: !18, line: 366, baseType: !109, size: 64, align: 64, offset: 1344)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !31, file: !18, line: 368, baseType: !40, size: 64, align: 64, offset: 1408)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !31, file: !18, line: 372, baseType: !272, size: 64, align: 64, offset: 1472)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !18, line: 233, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DISubroutineType(types: !275)
!275 = !{!56, !50, !276, !102}
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !18, line: 232, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!56, !50, !102}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !31, file: !18, line: 375, baseType: !155, size: 64, align: 64, offset: 1536)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !31, file: !18, line: 379, baseType: !282, size: 64, align: 64, offset: 1600)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !18, line: 322, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64, align: 64)
!284 = !DISubroutineType(types: !285)
!285 = !{!50, !50, !50, !56}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !31, file: !18, line: 382, baseType: !22, size: 64, align: 64, offset: 1664)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !31, file: !18, line: 385, baseType: !288, size: 64, align: 64, offset: 1728)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !18, line: 323, baseType: !128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !31, file: !18, line: 386, baseType: !290, size: 64, align: 64, offset: 1792)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !18, line: 324, baseType: !128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !31, file: !18, line: 389, baseType: !292, size: 64, align: 64, offset: 1856)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !294, line: 40, size: 256, align: 64, elements: !295)
!294 = !DIFile(filename: "Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!295 = !{!296, !297, !299, !300}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !293, file: !294, line: 41, baseType: !40, size: 64, align: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !293, file: !294, line: 42, baseType: !298, size: 64, align: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !294, line: 18, baseType: !138)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !293, file: !294, line: 43, baseType: !56, size: 32, align: 32, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !293, file: !294, line: 45, baseType: !40, size: 64, align: 64, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !31, file: !18, line: 390, baseType: !302, size: 64, align: 64, offset: 1920)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64, align: 64)
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !304, line: 18, size: 320, align: 64, elements: !305)
!304 = !DIFile(filename: "Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !303, file: !304, line: 19, baseType: !64, size: 64, align: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !303, file: !304, line: 20, baseType: !56, size: 32, align: 32, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !303, file: !304, line: 21, baseType: !22, size: 64, align: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !303, file: !304, line: 22, baseType: !56, size: 32, align: 32, offset: 192)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !303, file: !304, line: 23, baseType: !64, size: 64, align: 64, offset: 256)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !31, file: !18, line: 391, baseType: !312, size: 64, align: 64, offset: 1984)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !314, line: 11, size: 320, align: 64, elements: !315)
!314 = !DIFile(filename: "Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!315 = !{!316, !317, !322, !327, !328}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !313, file: !314, line: 12, baseType: !64, size: 64, align: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !313, file: !314, line: 13, baseType: !318, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !314, line: 8, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64, align: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!50, !50, !102}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !313, file: !314, line: 14, baseType: !323, size: 64, align: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !314, line: 9, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!56, !50, !50, !102}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !313, file: !314, line: 15, baseType: !64, size: 64, align: 64, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !313, file: !314, line: 16, baseType: !102, size: 64, align: 64, offset: 256)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !31, file: !18, line: 392, baseType: !30, size: 64, align: 64, offset: 2048)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !31, file: !18, line: 393, baseType: !50, size: 64, align: 64, offset: 2112)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !31, file: !18, line: 394, baseType: !332, size: 64, align: 64, offset: 2176)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !18, line: 325, baseType: !147)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !31, file: !18, line: 395, baseType: !334, size: 64, align: 64, offset: 2240)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !18, line: 326, baseType: !223)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !31, file: !18, line: 396, baseType: !22, size: 64, align: 64, offset: 2304)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !31, file: !18, line: 397, baseType: !337, size: 64, align: 64, offset: 2368)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !18, line: 327, baseType: !223)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !31, file: !18, line: 398, baseType: !339, size: 64, align: 64, offset: 2432)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !18, line: 329, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64, align: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!50, !30, !22}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !31, file: !18, line: 399, baseType: !344, size: 64, align: 64, offset: 2496)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !18, line: 328, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64, align: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!50, !30, !50, !50}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !31, file: !18, line: 400, baseType: !349, size: 64, align: 64, offset: 2560)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !18, line: 307, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{null, !102}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !31, file: !18, line: 401, baseType: !155, size: 64, align: 64, offset: 2624)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !31, file: !18, line: 402, baseType: !50, size: 64, align: 64, offset: 2688)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !31, file: !18, line: 403, baseType: !50, size: 64, align: 64, offset: 2752)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !31, file: !18, line: 404, baseType: !50, size: 64, align: 64, offset: 2816)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !31, file: !18, line: 405, baseType: !50, size: 64, align: 64, offset: 2880)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !31, file: !18, line: 406, baseType: !50, size: 64, align: 64, offset: 2944)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !31, file: !18, line: 407, baseType: !46, size: 64, align: 64, offset: 3008)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !31, file: !18, line: 410, baseType: !361, size: 32, align: 32, offset: 3072)
!361 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !31, file: !18, line: 412, baseType: !46, size: 64, align: 64, offset: 3136)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "decoder", scope: !14, file: !13, line: 225, baseType: !50, size: 64, align: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !14, file: !13, line: 226, baseType: !50, size: 64, align: 64, offset: 192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pendingcr", scope: !14, file: !13, line: 227, baseType: !56, size: 1, align: 32, offset: 256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !14, file: !13, line: 228, baseType: !56, size: 1, align: 32, offset: 257)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "seennl", scope: !14, file: !13, line: 229, baseType: !361, size: 3, align: 32, offset: 258)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !4, line: 351, baseType: !370)
!370 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 217, size: 384, align: 64, elements: !371)
!371 = !{!372, !373, !374, !375, !383}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !370, file: !4, line: 291, baseType: !17, size: 128, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !370, file: !4, line: 292, baseType: !22, size: 64, align: 64, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !370, file: !4, line: 293, baseType: !231, size: 64, align: 64, offset: 192)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !370, file: !4, line: 349, baseType: !376, size: 32, align: 32, offset: 256)
!376 = !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !4, line: 294, size: 32, align: 32, elements: !377)
!377 = !{!378, !379, !380, !381, !382}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !376, file: !4, line: 303, baseType: !361, size: 2, align: 32)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !376, file: !4, line: 331, baseType: !361, size: 3, align: 32, offset: 2)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !376, file: !4, line: 336, baseType: !361, size: 1, align: 32, offset: 5)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !376, file: !4, line: 340, baseType: !361, size: 1, align: 32, offset: 6)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !376, file: !4, line: 345, baseType: !361, size: 1, align: 32, offset: 7)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !370, file: !4, line: 350, baseType: !384, size: 64, align: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64, align: 64)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !108, line: 90, baseType: !56)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !4, line: 363, baseType: !388)
!388 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 356, size: 576, align: 64, elements: !389)
!389 = !{!390, !391, !392, !393}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !388, file: !4, line: 357, baseType: !369, size: 384, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !388, file: !4, line: 358, baseType: !22, size: 64, align: 64, offset: 384)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !388, file: !4, line: 360, baseType: !64, size: 64, align: 64, offset: 448)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !388, file: !4, line: 361, baseType: !22, size: 64, align: 64, offset: 512)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !4, line: 376, baseType: !396)
!396 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 368, size: 640, align: 64, elements: !397)
!397 = !{!398, !399}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !396, file: !4, line: 369, baseType: !387, size: 576, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !396, file: !4, line: 375, baseType: !400, size: 64, align: 64, offset: 576)
!400 = !DICompositeType(tag: DW_TAG_union_type, scope: !396, file: !4, line: 370, size: 64, align: 64, elements: !401)
!401 = !{!402, !403, !407, !410}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !400, file: !4, line: 371, baseType: !102, size: 64, align: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !400, file: !4, line: 372, baseType: !404, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !4, line: 134, baseType: !406)
!406 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !400, file: !4, line: 373, baseType: !408, size: 64, align: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64, align: 64)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !4, line: 129, baseType: !89)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !400, file: !4, line: 374, baseType: !411, size: 64, align: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !4, line: 121, baseType: !361)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64, align: 64)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64, align: 64)
!416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64, align: 64)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !412)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGC_Head", file: !421, line: 253, baseType: !422)
!421 = !DIFile(filename: "Include/objimpl.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!422 = !DICompositeType(tag: DW_TAG_union_type, name: "_gc_head", file: !421, line: 246, size: 192, align: 64, elements: !423)
!423 = !{!424, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !422, file: !421, line: 251, baseType: !425, size: 192, align: 64)
!425 = !DICompositeType(tag: DW_TAG_structure_type, scope: !422, file: !421, line: 247, size: 192, align: 64, elements: !426)
!426 = !{!427, !429, !430}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "gc_next", scope: !425, file: !421, line: 248, baseType: !428, size: 64, align: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "gc_prev", scope: !425, file: !421, line: 249, baseType: !428, size: 64, align: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "gc_refs", scope: !425, file: !421, line: 250, baseType: !22, size: 64, align: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !422, file: !421, line: 252, baseType: !432, size: 64, align: 64)
!432 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64, align: 64)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyLongObject", file: !436, line: 10, baseType: !437)
!436 = !DIFile(filename: "Include/longobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "_longobject", file: !438, line: 89, size: 256, align: 64, elements: !439)
!438 = !DIFile(filename: "Include/longintrepr.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !437, file: !438, line: 90, baseType: !34, size: 192, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ob_digit", scope: !437, file: !438, line: 91, baseType: !442, size: 32, align: 32, offset: 192)
!442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 32, align: 32, elements: !94)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "digit", file: !438, line: 49, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !445, line: 51, baseType: !361)
!445 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !448, line: 41, baseType: !449)
!448 = !DIFile(filename: "Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!449 = !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 31, size: 320, align: 64, elements: !450)
!450 = !{!451, !452, !453}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !449, file: !448, line: 32, baseType: !34, size: 192, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !449, file: !448, line: 33, baseType: !231, size: 64, align: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !449, file: !448, line: 34, baseType: !93, size: 8, align: 8, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64, align: 64)
!457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !406)
!458 = !{!459, !519, !554, !557, !571, !575, !579, !583, !587, !591, !595, !606, !623, !636, !654, !660, !664, !670, !684, !692, !741, !806, !830, !881, !890, !910, !1015, !1021, !1039, !1096, !1108, !1115, !1170, !1232, !1238, !1243, !1256, !1296, !1300, !1304, !1308, !1312, !1316, !1320, !1401, !1419, !1428, !1435, !1513, !1519, !1527, !1531, !1536, !1540, !1544, !1552, !1737, !1741, !1745, !1749, !1753, !1757, !1761, !1765, !1769}
!459 = !DISubprogram(name: "_PyIncrementalNewlineDecoder_decode", scope: !13, file: !13, line: 298, type: !284, isLocal: false, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @_PyIncrementalNewlineDecoder_decode, variables: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !470, !471, !472, !474, !479, !481, !483, !484, !485, !486, !487, !494, !498, !501, !505, !507, !508, !509, !510, !511, !515, !517}
!461 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !459, file: !13, line: 298, type: !50)
!462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "input", arg: 2, scope: !459, file: !13, line: 299, type: !50)
!463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "final", arg: 3, scope: !459, file: !13, line: 299, type: !56)
!464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "output", scope: !459, file: !13, line: 301, type: !50)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "output_len", scope: !459, file: !13, line: 302, type: !22)
!466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !459, file: !13, line: 303, type: !11)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !468, file: !13, line: 327, type: !56)
!468 = distinct !DILexicalBlock(scope: !469, file: !13, line: 325, column: 55)
!469 = distinct !DILexicalBlock(scope: !459, file: !13, line: 325, column: 9)
!470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "modified", scope: !468, file: !13, line: 328, type: !50)
!471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !468, file: !13, line: 329, type: !64)
!472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !473, file: !13, line: 339, type: !50)
!473 = distinct !DILexicalBlock(scope: !468, file: !13, line: 339, column: 12)
!474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "modified", scope: !475, file: !13, line: 352, type: !50)
!475 = distinct !DILexicalBlock(scope: !476, file: !13, line: 351, column: 9)
!476 = distinct !DILexicalBlock(scope: !477, file: !13, line: 349, column: 13)
!477 = distinct !DILexicalBlock(scope: !478, file: !13, line: 348, column: 17)
!478 = distinct !DILexicalBlock(scope: !459, file: !13, line: 348, column: 9)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !480, file: !13, line: 355, type: !50)
!480 = distinct !DILexicalBlock(scope: !475, file: !13, line: 355, column: 16)
!481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in_str", scope: !482, file: !13, line: 364, type: !102)
!482 = distinct !DILexicalBlock(scope: !459, file: !13, line: 363, column: 5)
!483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !482, file: !13, line: 365, type: !22)
!484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seennl", scope: !482, file: !13, line: 366, type: !56)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "only_lf", scope: !482, file: !13, line: 367, type: !56)
!486 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !482, file: !13, line: 368, type: !56)
!487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !488, file: !13, line: 393, type: !22)
!488 = distinct !DILexicalBlock(scope: !489, file: !13, line: 392, column: 22)
!489 = distinct !DILexicalBlock(scope: !490, file: !13, line: 390, column: 21)
!490 = distinct !DILexicalBlock(scope: !491, file: !13, line: 389, column: 65)
!491 = distinct !DILexicalBlock(scope: !492, file: !13, line: 388, column: 17)
!492 = distinct !DILexicalBlock(scope: !493, file: !13, line: 384, column: 22)
!493 = distinct !DILexicalBlock(scope: !482, file: !13, line: 384, column: 13)
!494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !495, file: !13, line: 395, type: !412)
!495 = distinct !DILexicalBlock(scope: !496, file: !13, line: 394, column: 30)
!496 = distinct !DILexicalBlock(scope: !497, file: !13, line: 394, column: 21)
!497 = distinct !DILexicalBlock(scope: !488, file: !13, line: 394, column: 21)
!498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !499, file: !13, line: 413, type: !22)
!499 = distinct !DILexicalBlock(scope: !500, file: !13, line: 412, column: 36)
!500 = distinct !DILexicalBlock(scope: !493, file: !13, line: 412, column: 18)
!501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !502, file: !13, line: 418, type: !412)
!502 = distinct !DILexicalBlock(scope: !503, file: !13, line: 417, column: 22)
!503 = distinct !DILexicalBlock(scope: !504, file: !13, line: 417, column: 13)
!504 = distinct !DILexicalBlock(scope: !499, file: !13, line: 417, column: 13)
!505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "translated", scope: !506, file: !13, line: 442, type: !102)
!506 = distinct !DILexicalBlock(scope: !500, file: !13, line: 441, column: 14)
!507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !506, file: !13, line: 443, type: !56)
!508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in_str", scope: !506, file: !13, line: 444, type: !102)
!509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !506, file: !13, line: 445, type: !22)
!510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !506, file: !13, line: 445, type: !22)
!511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !512, file: !13, line: 459, type: !412)
!512 = distinct !DILexicalBlock(scope: !513, file: !13, line: 458, column: 22)
!513 = distinct !DILexicalBlock(scope: !514, file: !13, line: 458, column: 13)
!514 = distinct !DILexicalBlock(scope: !506, file: !13, line: 458, column: 13)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !516, file: !13, line: 482, type: !50)
!516 = distinct !DILexicalBlock(scope: !506, file: !13, line: 482, column: 16)
!517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !518, file: !13, line: 494, type: !50)
!518 = distinct !DILexicalBlock(scope: !459, file: !13, line: 494, column: 8)
!519 = !DISubprogram(name: "_PyIO_find_line_ending", scope: !13, file: !13, line: 1681, type: !520, isLocal: false, isDefinition: true, scopeLine: 1684, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i32, i32, %struct._object*, i32, i8*, i8*, i64*)* @_PyIO_find_line_ending, variables: !522)
!520 = !DISubroutineType(types: !521)
!521 = !{!22, !56, !56, !50, !56, !64, !64, !260}
!522 = !{!523, !524, !525, !526, !527, !528, !529, !530, !531, !534, !537, !541, !543, !544, !547, !549, !550, !551, !553}
!523 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "translated", arg: 1, scope: !519, file: !13, line: 1682, type: !56)
!524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "universal", arg: 2, scope: !519, file: !13, line: 1682, type: !56)
!525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "readnl", arg: 3, scope: !519, file: !13, line: 1682, type: !50)
!526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kind", arg: 4, scope: !519, file: !13, line: 1683, type: !56)
!527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 5, scope: !519, file: !13, line: 1683, type: !64)
!528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 6, scope: !519, file: !13, line: 1683, type: !64)
!529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "consumed", arg: 7, scope: !519, file: !13, line: 1683, type: !260)
!530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !519, file: !13, line: 1685, type: !22)
!531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !532, file: !13, line: 1689, type: !64)
!532 = distinct !DILexicalBlock(scope: !533, file: !13, line: 1687, column: 21)
!533 = distinct !DILexicalBlock(scope: !519, file: !13, line: 1687, column: 9)
!534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !535, file: !13, line: 1701, type: !64)
!535 = distinct !DILexicalBlock(scope: !536, file: !13, line: 1697, column: 25)
!536 = distinct !DILexicalBlock(scope: !533, file: !13, line: 1697, column: 14)
!537 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !538, file: !13, line: 1703, type: !412)
!538 = distinct !DILexicalBlock(scope: !539, file: !13, line: 1702, column: 18)
!539 = distinct !DILexicalBlock(scope: !540, file: !13, line: 1702, column: 9)
!540 = distinct !DILexicalBlock(scope: !535, file: !13, line: 1702, column: 9)
!541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "readnl_len", scope: !542, file: !13, line: 1726, type: !22)
!542 = distinct !DILexicalBlock(scope: !536, file: !13, line: 1724, column: 10)
!543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nl", scope: !542, file: !13, line: 1727, type: !64)
!544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !545, file: !13, line: 1731, type: !64)
!545 = distinct !DILexicalBlock(scope: !546, file: !13, line: 1730, column: 30)
!546 = distinct !DILexicalBlock(scope: !542, file: !13, line: 1730, column: 13)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !548, file: !13, line: 1738, type: !64)
!548 = distinct !DILexicalBlock(scope: !546, file: !13, line: 1737, column: 14)
!549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !548, file: !13, line: 1739, type: !64)
!550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !548, file: !13, line: 1740, type: !64)
!551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !552, file: !13, line: 1744, type: !22)
!552 = distinct !DILexicalBlock(scope: !548, file: !13, line: 1743, column: 27)
!553 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !552, file: !13, line: 1745, type: !64)
!554 = !DISubprogram(name: "textiobase_detach", scope: !13, file: !13, line: 62, type: !129, isLocal: true, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @textiobase_detach, variables: !555)
!555 = !{!556}
!556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !554, file: !13, line: 62, type: !50)
!557 = !DISubprogram(name: "_unsupported", scope: !13, file: !13, line: 46, type: !558, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*)* @_unsupported, variables: !560)
!558 = !DISubroutineType(types: !559)
!559 = !{!50, !40}
!560 = !{!561, !562}
!561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "message", arg: 1, scope: !557, file: !13, line: 46, type: !40)
!562 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !557, file: !13, line: 48, type: !563)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64, align: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyIO_State", file: !565, line: 135, baseType: !566)
!565 = !DIFile(filename: "./Modules/_io/_iomodule.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!566 = !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 130, size: 192, align: 64, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !566, file: !565, line: 131, baseType: !56, size: 32, align: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "locale_module", scope: !566, file: !565, line: 132, baseType: !50, size: 64, align: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported_operation", scope: !566, file: !565, line: 134, baseType: !50, size: 64, align: 64, offset: 128)
!571 = !DISubprogram(name: "textiobase_read", scope: !13, file: !13, line: 75, type: !139, isLocal: true, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @textiobase_read, variables: !572)
!572 = !{!573, !574}
!573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !571, file: !13, line: 75, type: !50)
!574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !571, file: !13, line: 75, type: !50)
!575 = !DISubprogram(name: "textiobase_readline", scope: !13, file: !13, line: 87, type: !139, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @textiobase_readline, variables: !576)
!576 = !{!577, !578}
!577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !575, file: !13, line: 87, type: !50)
!578 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !575, file: !13, line: 87, type: !50)
!579 = !DISubprogram(name: "textiobase_write", scope: !13, file: !13, line: 99, type: !139, isLocal: true, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @textiobase_write, variables: !580)
!580 = !{!581, !582}
!581 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !579, file: !13, line: 99, type: !50)
!582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !579, file: !13, line: 99, type: !50)
!583 = !DISubprogram(name: "textiobase_encoding_get", scope: !13, file: !13, line: 111, type: !320, isLocal: true, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @textiobase_encoding_get, variables: !584)
!584 = !{!585, !586}
!585 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !583, file: !13, line: 111, type: !50)
!586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !583, file: !13, line: 111, type: !102)
!587 = !DISubprogram(name: "textiobase_newlines_get", scope: !13, file: !13, line: 125, type: !320, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @textiobase_newlines_get, variables: !588)
!588 = !{!589, !590}
!589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !587, file: !13, line: 125, type: !50)
!590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !587, file: !13, line: 125, type: !102)
!591 = !DISubprogram(name: "textiobase_errors_get", scope: !13, file: !13, line: 137, type: !320, isLocal: true, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @textiobase_errors_get, variables: !592)
!592 = !{!593, !594}
!593 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !591, file: !13, line: 137, type: !50)
!594 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !591, file: !13, line: 137, type: !102)
!595 = !DISubprogram(name: "check_decoded", scope: !13, file: !13, line: 274, type: !157, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @check_decoded, variables: !596)
!596 = !{!597, !598, !602}
!597 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "decoded", arg: 1, scope: !595, file: !13, line: 274, type: !50)
!598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !599, file: !13, line: 282, type: !50)
!599 = distinct !DILexicalBlock(scope: !600, file: !13, line: 282, column: 12)
!600 = distinct !DILexicalBlock(scope: !601, file: !13, line: 278, column: 82)
!601 = distinct !DILexicalBlock(scope: !595, file: !13, line: 278, column: 9)
!602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !603, file: !13, line: 286, type: !50)
!603 = distinct !DILexicalBlock(scope: !604, file: !13, line: 286, column: 12)
!604 = distinct !DILexicalBlock(scope: !605, file: !13, line: 285, column: 119)
!605 = distinct !DILexicalBlock(scope: !595, file: !13, line: 285, column: 9)
!606 = !DISubprogram(name: "incrementalnewlinedecoder_dealloc", scope: !13, file: !13, line: 266, type: !607, isLocal: true, isDefinition: true, scopeLine: 267, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.nldecoder_object*)* @incrementalnewlinedecoder_dealloc, variables: !609)
!607 = !DISubroutineType(types: !608)
!608 = !{null, !11}
!609 = !{!610, !611, !613, !617, !619}
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !606, file: !13, line: 266, type: !11)
!611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !612, file: !13, line: 268, type: !50)
!612 = distinct !DILexicalBlock(scope: !606, file: !13, line: 268, column: 8)
!613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !614, file: !13, line: 268, type: !50)
!614 = distinct !DILexicalBlock(scope: !615, file: !13, line: 268, column: 121)
!615 = distinct !DILexicalBlock(scope: !616, file: !13, line: 268, column: 86)
!616 = distinct !DILexicalBlock(scope: !612, file: !13, line: 268, column: 63)
!617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !618, file: !13, line: 269, type: !50)
!618 = distinct !DILexicalBlock(scope: !606, file: !13, line: 269, column: 8)
!619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !620, file: !13, line: 269, type: !50)
!620 = distinct !DILexicalBlock(scope: !621, file: !13, line: 269, column: 119)
!621 = distinct !DILexicalBlock(scope: !622, file: !13, line: 269, column: 85)
!622 = distinct !DILexicalBlock(scope: !618, file: !13, line: 269, column: 62)
!623 = !DISubprogram(name: "incrementalnewlinedecoder_decode", scope: !13, file: !13, line: 499, type: !624, isLocal: true, isDefinition: true, scopeLine: 501, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_decode, variables: !626)
!624 = !DISubroutineType(types: !625)
!625 = !{!50, !11, !50, !50}
!626 = !{!627, !628, !629, !630, !634, !635}
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !623, file: !13, line: 499, type: !11)
!628 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !623, file: !13, line: 500, type: !50)
!629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !623, file: !13, line: 500, type: !50)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !623, file: !13, line: 502, type: !631)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 192, align: 64, elements: !632)
!632 = !{!633}
!633 = !DISubrange(count: 3)
!634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input", scope: !623, file: !13, line: 503, type: !50)
!635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "final", scope: !623, file: !13, line: 504, type: !56)
!636 = !DISubprogram(name: "incrementalnewlinedecoder_getstate", scope: !13, file: !13, line: 513, type: !637, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_getstate, variables: !639)
!637 = !DISubroutineType(types: !638)
!638 = !{!50, !11, !50}
!639 = !{!640, !641, !642, !643, !645, !648, !652}
!640 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !636, file: !13, line: 513, type: !11)
!641 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !636, file: !13, line: 513, type: !50)
!642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !636, file: !13, line: 515, type: !50)
!643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flag", scope: !636, file: !13, line: 516, type: !644)
!644 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!645 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !646, file: !13, line: 519, type: !50)
!646 = distinct !DILexicalBlock(scope: !647, file: !13, line: 518, column: 45)
!647 = distinct !DILexicalBlock(scope: !636, file: !13, line: 518, column: 9)
!648 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !649, file: !13, line: 524, type: !50)
!649 = distinct !DILexicalBlock(scope: !650, file: !13, line: 524, column: 16)
!650 = distinct !DILexicalBlock(scope: !651, file: !13, line: 523, column: 65)
!651 = distinct !DILexicalBlock(scope: !646, file: !13, line: 523, column: 13)
!652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !653, file: !13, line: 528, type: !50)
!653 = distinct !DILexicalBlock(scope: !646, file: !13, line: 528, column: 12)
!654 = !DISubprogram(name: "incrementalnewlinedecoder_setstate", scope: !13, file: !13, line: 541, type: !637, isLocal: true, isDefinition: true, scopeLine: 542, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_setstate, variables: !655)
!655 = !{!656, !657, !658, !659}
!656 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !654, file: !13, line: 541, type: !11)
!657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !654, file: !13, line: 541, type: !50)
!658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !654, file: !13, line: 543, type: !50)
!659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flag", scope: !654, file: !13, line: 544, type: !644)
!660 = !DISubprogram(name: "incrementalnewlinedecoder_reset", scope: !13, file: !13, line: 560, type: !637, isLocal: true, isDefinition: true, scopeLine: 561, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_reset, variables: !661)
!661 = !{!662, !663}
!662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !660, file: !13, line: 560, type: !11)
!663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !660, file: !13, line: 560, type: !50)
!664 = !DISubprogram(name: "incrementalnewlinedecoder_newlines_get", scope: !13, file: !13, line: 571, type: !665, isLocal: true, isDefinition: true, scopeLine: 572, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, i8*)* @incrementalnewlinedecoder_newlines_get, variables: !667)
!665 = !DISubroutineType(types: !666)
!666 = !{!50, !11, !102}
!667 = !{!668, !669}
!668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !664, file: !13, line: 571, type: !11)
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !664, file: !13, line: 571, type: !102)
!670 = !DISubprogram(name: "incrementalnewlinedecoder_init", scope: !13, file: !13, line: 233, type: !671, isLocal: true, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_init, variables: !673)
!671 = !DISubroutineType(types: !672)
!672 = !{!56, !11, !50, !50}
!673 = !{!674, !675, !676, !677, !678, !679, !680}
!674 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !670, file: !13, line: 233, type: !11)
!675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !670, file: !13, line: 234, type: !50)
!676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !670, file: !13, line: 234, type: !50)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoder", scope: !670, file: !13, line: 236, type: !50)
!678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "translate", scope: !670, file: !13, line: 237, type: !56)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !670, file: !13, line: 238, type: !50)
!680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !670, file: !13, line: 239, type: !681)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 256, align: 64, elements: !682)
!682 = !{!683}
!683 = !DISubrange(count: 4)
!684 = !DISubprogram(name: "find_control_char", scope: !13, file: !13, line: 1663, type: !685, isLocal: true, isDefinition: true, scopeLine: 1664, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i32, i8*, i8*, i32)* @find_control_char, variables: !687)
!685 = !DISubroutineType(types: !686)
!686 = !{!64, !56, !64, !64, !412}
!687 = !{!688, !689, !690, !691}
!688 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kind", arg: 1, scope: !684, file: !13, line: 1663, type: !56)
!689 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !684, file: !13, line: 1663, type: !64)
!690 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !684, file: !13, line: 1663, type: !64)
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ch", arg: 4, scope: !684, file: !13, line: 1663, type: !412)
!692 = !DISubprogram(name: "textiowrapper_dealloc", scope: !13, file: !13, line: 1150, type: !693, isLocal: true, isDefinition: true, scopeLine: 1151, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.textio*)* @textiowrapper_dealloc, variables: !731)
!693 = !DISubroutineType(types: !694)
!694 = !{null, !695}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64, align: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "textio", file: !13, line: 743, baseType: !697)
!697 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 686, size: 1536, align: 64, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !697, file: !13, line: 688, baseType: !17, size: 128, align: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !697, file: !13, line: 689, baseType: !56, size: 32, align: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !697, file: !13, line: 690, baseType: !56, size: 32, align: 32, offset: 160)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !697, file: !13, line: 691, baseType: !22, size: 64, align: 64, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !697, file: !13, line: 692, baseType: !50, size: 64, align: 64, offset: 256)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !697, file: !13, line: 693, baseType: !50, size: 64, align: 64, offset: 320)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !697, file: !13, line: 694, baseType: !50, size: 64, align: 64, offset: 384)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "decoder", scope: !697, file: !13, line: 695, baseType: !50, size: 64, align: 64, offset: 448)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "readnl", scope: !697, file: !13, line: 696, baseType: !50, size: 64, align: 64, offset: 512)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !697, file: !13, line: 697, baseType: !50, size: 64, align: 64, offset: 576)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "writenl", scope: !697, file: !13, line: 698, baseType: !40, size: 64, align: 64, offset: 640)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "line_buffering", scope: !697, file: !13, line: 699, baseType: !42, size: 8, align: 8, offset: 704)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "write_through", scope: !697, file: !13, line: 700, baseType: !42, size: 8, align: 8, offset: 712)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "readuniversal", scope: !697, file: !13, line: 701, baseType: !42, size: 8, align: 8, offset: 720)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "readtranslate", scope: !697, file: !13, line: 702, baseType: !42, size: 8, align: 8, offset: 728)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "writetranslate", scope: !697, file: !13, line: 703, baseType: !42, size: 8, align: 8, offset: 736)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !697, file: !13, line: 704, baseType: !42, size: 8, align: 8, offset: 744)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "has_read1", scope: !697, file: !13, line: 705, baseType: !42, size: 8, align: 8, offset: 752)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "telling", scope: !697, file: !13, line: 706, baseType: !42, size: 8, align: 8, offset: 760)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "finalizing", scope: !697, file: !13, line: 707, baseType: !42, size: 8, align: 8, offset: 768)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "encodefunc", scope: !697, file: !13, line: 709, baseType: !720, size: 64, align: 64, offset: 832)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "encodefunc_t", file: !13, line: 684, baseType: !138)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_start_of_stream", scope: !697, file: !13, line: 711, baseType: !42, size: 8, align: 8, offset: 896)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_chars", scope: !697, file: !13, line: 722, baseType: !50, size: 64, align: 64, offset: 960)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_chars_used", scope: !697, file: !13, line: 723, baseType: !22, size: 64, align: 64, offset: 1024)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "pending_bytes", scope: !697, file: !13, line: 724, baseType: !50, size: 64, align: 64, offset: 1088)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "pending_bytes_count", scope: !697, file: !13, line: 726, baseType: !22, size: 64, align: 64, offset: 1152)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot", scope: !697, file: !13, line: 733, baseType: !50, size: 64, align: 64, offset: 1216)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "b2cratio", scope: !697, file: !13, line: 736, baseType: !432, size: 64, align: 64, offset: 1280)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !697, file: !13, line: 739, baseType: !50, size: 64, align: 64, offset: 1344)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !697, file: !13, line: 741, baseType: !50, size: 64, align: 64, offset: 1408)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !697, file: !13, line: 742, baseType: !50, size: 64, align: 64, offset: 1472)
!731 = !{!732, !733, !735, !737}
!732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !692, file: !13, line: 1150, type: !695)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !734, file: !13, line: 1156, type: !419)
!734 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1156, column: 8)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !736, file: !13, line: 1159, type: !50)
!736 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1159, column: 8)
!737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !738, file: !13, line: 1159, type: !50)
!738 = distinct !DILexicalBlock(scope: !739, file: !13, line: 1159, column: 115)
!739 = distinct !DILexicalBlock(scope: !740, file: !13, line: 1159, column: 83)
!740 = distinct !DILexicalBlock(scope: !736, file: !13, line: 1159, column: 60)
!741 = !DISubprogram(name: "_textiowrapper_clear", scope: !13, file: !13, line: 1133, type: !742, isLocal: true, isDefinition: true, scopeLine: 1134, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*)* @_textiowrapper_clear, variables: !744)
!742 = !DISubroutineType(types: !743)
!743 = !{!56, !695}
!744 = !{!745, !746, !748, !752, !754, !758, !760, !764, !766, !770, !772, !776, !778, !782, !784, !788, !790, !794, !796, !800, !802}
!745 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !741, file: !13, line: 1133, type: !695)
!746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !747, file: !13, line: 1136, type: !50)
!747 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1136, column: 8)
!748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !749, file: !13, line: 1136, type: !50)
!749 = distinct !DILexicalBlock(scope: !750, file: !13, line: 1136, column: 119)
!750 = distinct !DILexicalBlock(scope: !751, file: !13, line: 1136, column: 85)
!751 = distinct !DILexicalBlock(scope: !747, file: !13, line: 1136, column: 62)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !753, file: !13, line: 1137, type: !50)
!753 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1137, column: 8)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !755, file: !13, line: 1137, type: !50)
!755 = distinct !DILexicalBlock(scope: !756, file: !13, line: 1137, column: 123)
!756 = distinct !DILexicalBlock(scope: !757, file: !13, line: 1137, column: 87)
!757 = distinct !DILexicalBlock(scope: !753, file: !13, line: 1137, column: 64)
!758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !759, file: !13, line: 1138, type: !50)
!759 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1138, column: 8)
!760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !761, file: !13, line: 1138, type: !50)
!761 = distinct !DILexicalBlock(scope: !762, file: !13, line: 1138, column: 121)
!762 = distinct !DILexicalBlock(scope: !763, file: !13, line: 1138, column: 86)
!763 = distinct !DILexicalBlock(scope: !759, file: !13, line: 1138, column: 63)
!764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !765, file: !13, line: 1139, type: !50)
!765 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1139, column: 8)
!766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !767, file: !13, line: 1139, type: !50)
!767 = distinct !DILexicalBlock(scope: !768, file: !13, line: 1139, column: 121)
!768 = distinct !DILexicalBlock(scope: !769, file: !13, line: 1139, column: 86)
!769 = distinct !DILexicalBlock(scope: !765, file: !13, line: 1139, column: 63)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !771, file: !13, line: 1140, type: !50)
!771 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1140, column: 8)
!772 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !773, file: !13, line: 1140, type: !50)
!773 = distinct !DILexicalBlock(scope: !774, file: !13, line: 1140, column: 119)
!774 = distinct !DILexicalBlock(scope: !775, file: !13, line: 1140, column: 85)
!775 = distinct !DILexicalBlock(scope: !771, file: !13, line: 1140, column: 62)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !777, file: !13, line: 1141, type: !50)
!777 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1141, column: 8)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !779, file: !13, line: 1141, type: !50)
!779 = distinct !DILexicalBlock(scope: !780, file: !13, line: 1141, column: 133)
!780 = distinct !DILexicalBlock(scope: !781, file: !13, line: 1141, column: 92)
!781 = distinct !DILexicalBlock(scope: !777, file: !13, line: 1141, column: 69)
!782 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !783, file: !13, line: 1142, type: !50)
!783 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1142, column: 8)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !785, file: !13, line: 1142, type: !50)
!785 = distinct !DILexicalBlock(scope: !786, file: !13, line: 1142, column: 133)
!786 = distinct !DILexicalBlock(scope: !787, file: !13, line: 1142, column: 92)
!787 = distinct !DILexicalBlock(scope: !783, file: !13, line: 1142, column: 69)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !789, file: !13, line: 1143, type: !50)
!789 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1143, column: 8)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !791, file: !13, line: 1143, type: !50)
!791 = distinct !DILexicalBlock(scope: !792, file: !13, line: 1143, column: 123)
!792 = distinct !DILexicalBlock(scope: !793, file: !13, line: 1143, column: 87)
!793 = distinct !DILexicalBlock(scope: !789, file: !13, line: 1143, column: 64)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !795, file: !13, line: 1144, type: !50)
!795 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1144, column: 8)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !797, file: !13, line: 1144, type: !50)
!797 = distinct !DILexicalBlock(scope: !798, file: !13, line: 1144, column: 119)
!798 = distinct !DILexicalBlock(scope: !799, file: !13, line: 1144, column: 85)
!799 = distinct !DILexicalBlock(scope: !795, file: !13, line: 1144, column: 62)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !801, file: !13, line: 1145, type: !50)
!801 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1145, column: 8)
!802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !803, file: !13, line: 1145, type: !50)
!803 = distinct !DILexicalBlock(scope: !804, file: !13, line: 1145, column: 113)
!804 = distinct !DILexicalBlock(scope: !805, file: !13, line: 1145, column: 82)
!805 = distinct !DILexicalBlock(scope: !801, file: !13, line: 1145, column: 59)
!806 = !DISubprogram(name: "textiowrapper_repr", scope: !13, file: !13, line: 2469, type: !807, isLocal: true, isDefinition: true, scopeLine: 2470, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*)* @textiowrapper_repr, variables: !809)
!807 = !DISubroutineType(types: !808)
!808 = !{!50, !695}
!809 = !{!810, !811, !812, !813, !814, !815, !819, !823, !825, !827}
!810 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !806, file: !13, line: 2469, type: !695)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nameobj", scope: !806, file: !13, line: 2471, type: !50)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "modeobj", scope: !806, file: !13, line: 2471, type: !50)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !806, file: !13, line: 2471, type: !50)
!814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !806, file: !13, line: 2471, type: !50)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !816, file: !13, line: 2487, type: !50)
!816 = distinct !DILexicalBlock(scope: !817, file: !13, line: 2487, column: 12)
!817 = distinct !DILexicalBlock(scope: !818, file: !13, line: 2485, column: 10)
!818 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2479, column: 9)
!819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !820, file: !13, line: 2503, type: !50)
!820 = distinct !DILexicalBlock(scope: !821, file: !13, line: 2503, column: 12)
!821 = distinct !DILexicalBlock(scope: !822, file: !13, line: 2501, column: 10)
!822 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2495, column: 9)
!823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !824, file: !13, line: 2512, type: !50)
!824 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2512, column: 8)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !826, file: !13, line: 2515, type: !50)
!826 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2515, column: 8)
!827 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !828, file: !13, line: 2515, type: !50)
!828 = distinct !DILexicalBlock(scope: !829, file: !13, line: 2515, column: 95)
!829 = distinct !DILexicalBlock(scope: !826, file: !13, line: 2515, column: 61)
!830 = !DISubprogram(name: "textiowrapper_traverse", scope: !13, file: !13, line: 1164, type: !831, isLocal: true, isDefinition: true, scopeLine: 1165, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, i32 (%struct._object*, i8*)*, i8*)* @textiowrapper_traverse, variables: !833)
!831 = !DISubroutineType(types: !832)
!832 = !{!56, !695, !276, !102}
!833 = !{!834, !835, !836, !837, !841, !845, !849, !853, !857, !861, !865, !869, !873, !877}
!834 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !830, file: !13, line: 1164, type: !695)
!835 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !830, file: !13, line: 1164, type: !276)
!836 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !830, file: !13, line: 1164, type: !102)
!837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !838, file: !13, line: 1166, type: !56)
!838 = distinct !DILexicalBlock(scope: !839, file: !13, line: 1166, column: 28)
!839 = distinct !DILexicalBlock(scope: !840, file: !13, line: 1166, column: 14)
!840 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1166, column: 8)
!841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !842, file: !13, line: 1167, type: !56)
!842 = distinct !DILexicalBlock(scope: !843, file: !13, line: 1167, column: 30)
!843 = distinct !DILexicalBlock(scope: !844, file: !13, line: 1167, column: 14)
!844 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1167, column: 8)
!845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !846, file: !13, line: 1168, type: !56)
!846 = distinct !DILexicalBlock(scope: !847, file: !13, line: 1168, column: 29)
!847 = distinct !DILexicalBlock(scope: !848, file: !13, line: 1168, column: 14)
!848 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1168, column: 8)
!849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !850, file: !13, line: 1169, type: !56)
!850 = distinct !DILexicalBlock(scope: !851, file: !13, line: 1169, column: 29)
!851 = distinct !DILexicalBlock(scope: !852, file: !13, line: 1169, column: 14)
!852 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1169, column: 8)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !854, file: !13, line: 1170, type: !56)
!854 = distinct !DILexicalBlock(scope: !855, file: !13, line: 1170, column: 28)
!855 = distinct !DILexicalBlock(scope: !856, file: !13, line: 1170, column: 14)
!856 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1170, column: 8)
!857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !858, file: !13, line: 1171, type: !56)
!858 = distinct !DILexicalBlock(scope: !859, file: !13, line: 1171, column: 35)
!859 = distinct !DILexicalBlock(scope: !860, file: !13, line: 1171, column: 14)
!860 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1171, column: 8)
!861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !862, file: !13, line: 1172, type: !56)
!862 = distinct !DILexicalBlock(scope: !863, file: !13, line: 1172, column: 35)
!863 = distinct !DILexicalBlock(scope: !864, file: !13, line: 1172, column: 14)
!864 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1172, column: 8)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !866, file: !13, line: 1173, type: !56)
!866 = distinct !DILexicalBlock(scope: !867, file: !13, line: 1173, column: 30)
!867 = distinct !DILexicalBlock(scope: !868, file: !13, line: 1173, column: 14)
!868 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1173, column: 8)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !870, file: !13, line: 1174, type: !56)
!870 = distinct !DILexicalBlock(scope: !871, file: !13, line: 1174, column: 28)
!871 = distinct !DILexicalBlock(scope: !872, file: !13, line: 1174, column: 14)
!872 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1174, column: 8)
!873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !874, file: !13, line: 1175, type: !56)
!874 = distinct !DILexicalBlock(scope: !875, file: !13, line: 1175, column: 25)
!875 = distinct !DILexicalBlock(scope: !876, file: !13, line: 1175, column: 14)
!876 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1175, column: 8)
!877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !878, file: !13, line: 1177, type: !56)
!878 = distinct !DILexicalBlock(scope: !879, file: !13, line: 1177, column: 26)
!879 = distinct !DILexicalBlock(scope: !880, file: !13, line: 1177, column: 14)
!880 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1177, column: 8)
!881 = !DISubprogram(name: "textiowrapper_clear", scope: !13, file: !13, line: 1182, type: !742, isLocal: true, isDefinition: true, scopeLine: 1183, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*)* @textiowrapper_clear, variables: !882)
!882 = !{!883, !884, !886}
!883 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !881, file: !13, line: 1182, type: !695)
!884 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !885, file: !13, line: 1186, type: !50)
!885 = distinct !DILexicalBlock(scope: !881, file: !13, line: 1186, column: 8)
!886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !887, file: !13, line: 1186, type: !50)
!887 = distinct !DILexicalBlock(scope: !888, file: !13, line: 1186, column: 115)
!888 = distinct !DILexicalBlock(scope: !889, file: !13, line: 1186, column: 83)
!889 = distinct !DILexicalBlock(scope: !885, file: !13, line: 1186, column: 60)
!890 = !DISubprogram(name: "textiowrapper_iternext", scope: !13, file: !13, line: 2630, type: !807, isLocal: true, isDefinition: true, scopeLine: 2631, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*)* @textiowrapper_iternext, variables: !891)
!891 = !{!892, !893, !894, !900, !904, !906}
!892 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !890, file: !13, line: 2630, type: !695)
!893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line", scope: !890, file: !13, line: 2632, type: !50)
!894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !895, file: !13, line: 2648, type: !50)
!895 = distinct !DILexicalBlock(scope: !896, file: !13, line: 2648, column: 16)
!896 = distinct !DILexicalBlock(scope: !897, file: !13, line: 2644, column: 91)
!897 = distinct !DILexicalBlock(scope: !898, file: !13, line: 2644, column: 13)
!898 = distinct !DILexicalBlock(scope: !899, file: !13, line: 2641, column: 10)
!899 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2637, column: 9)
!900 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !901, file: !13, line: 2658, type: !50)
!901 = distinct !DILexicalBlock(scope: !902, file: !13, line: 2658, column: 12)
!902 = distinct !DILexicalBlock(scope: !903, file: !13, line: 2656, column: 79)
!903 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2656, column: 9)
!904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !905, file: !13, line: 2659, type: !50)
!905 = distinct !DILexicalBlock(scope: !902, file: !13, line: 2659, column: 12)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !907, file: !13, line: 2659, type: !50)
!907 = distinct !DILexicalBlock(scope: !908, file: !13, line: 2659, column: 127)
!908 = distinct !DILexicalBlock(scope: !909, file: !13, line: 2659, column: 91)
!909 = distinct !DILexicalBlock(scope: !905, file: !13, line: 2659, column: 68)
!910 = !DISubprogram(name: "_textiowrapper_readline", scope: !13, file: !13, line: 1767, type: !911, isLocal: true, isDefinition: true, scopeLine: 1768, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i64)* @_textiowrapper_readline, variables: !913)
!911 = !DISubroutineType(types: !912)
!912 = !{!50, !695, !22}
!913 = !{!914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !926, !927, !933, !935, !936, !937, !938, !942, !946, !950, !954, !957, !961, !963, !965, !969, !974, !976, !980, !984, !988, !994, !996, !1000, !1002, !1005, !1007, !1010, !1012}
!914 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !910, file: !13, line: 1767, type: !695)
!915 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "limit", arg: 2, scope: !910, file: !13, line: 1767, type: !22)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line", scope: !910, file: !13, line: 1769, type: !50)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunks", scope: !910, file: !13, line: 1769, type: !50)
!918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remaining", scope: !910, file: !13, line: 1769, type: !50)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !910, file: !13, line: 1770, type: !22)
!920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "endpos", scope: !910, file: !13, line: 1770, type: !22)
!921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunked", scope: !910, file: !13, line: 1770, type: !22)
!922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset_to_buffer", scope: !910, file: !13, line: 1770, type: !22)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !910, file: !13, line: 1771, type: !56)
!924 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !925, file: !13, line: 1773, type: !56)
!925 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1773, column: 8)
!926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !925, file: !13, line: 1773, type: !50)
!927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !928, file: !13, line: 1773, type: !50)
!928 = distinct !DILexicalBlock(scope: !929, file: !13, line: 1773, column: 289)
!929 = distinct !DILexicalBlock(scope: !930, file: !13, line: 1773, column: 163)
!930 = distinct !DILexicalBlock(scope: !931, file: !13, line: 1773, column: 100)
!931 = distinct !DILexicalBlock(scope: !932, file: !13, line: 1773, column: 94)
!932 = distinct !DILexicalBlock(scope: !925, file: !13, line: 1773, column: 37)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !934, file: !13, line: 1781, type: !64)
!934 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1780, column: 15)
!935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line_len", scope: !934, file: !13, line: 1782, type: !22)
!936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !934, file: !13, line: 1783, type: !56)
!937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "consumed", scope: !934, file: !13, line: 1784, type: !22)
!938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !939, file: !13, line: 1805, type: !50)
!939 = distinct !DILexicalBlock(scope: !940, file: !13, line: 1805, column: 16)
!940 = distinct !DILexicalBlock(scope: !941, file: !13, line: 1802, column: 23)
!941 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1802, column: 13)
!942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !943, file: !13, line: 1805, type: !50)
!943 = distinct !DILexicalBlock(scope: !944, file: !13, line: 1805, column: 131)
!944 = distinct !DILexicalBlock(scope: !945, file: !13, line: 1805, column: 95)
!945 = distinct !DILexicalBlock(scope: !939, file: !13, line: 1805, column: 72)
!946 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !947, file: !13, line: 1821, type: !50)
!947 = distinct !DILexicalBlock(scope: !948, file: !13, line: 1821, column: 16)
!948 = distinct !DILexicalBlock(scope: !949, file: !13, line: 1816, column: 14)
!949 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1810, column: 13)
!950 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !951, file: !13, line: 1821, type: !50)
!951 = distinct !DILexicalBlock(scope: !952, file: !13, line: 1821, column: 121)
!952 = distinct !DILexicalBlock(scope: !953, file: !13, line: 1821, column: 90)
!953 = distinct !DILexicalBlock(scope: !947, file: !13, line: 1821, column: 67)
!954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !955, file: !13, line: 1855, type: !50)
!955 = distinct !DILexicalBlock(scope: !956, file: !13, line: 1853, column: 29)
!956 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1853, column: 13)
!957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !958, file: !13, line: 1865, type: !50)
!958 = distinct !DILexicalBlock(scope: !959, file: !13, line: 1865, column: 20)
!959 = distinct !DILexicalBlock(scope: !960, file: !13, line: 1864, column: 47)
!960 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1864, column: 17)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !962, file: !13, line: 1869, type: !50)
!962 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1869, column: 16)
!963 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !964, file: !13, line: 1878, type: !50)
!964 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1878, column: 12)
!965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !966, file: !13, line: 1878, type: !50)
!966 = distinct !DILexicalBlock(scope: !967, file: !13, line: 1878, column: 107)
!967 = distinct !DILexicalBlock(scope: !968, file: !13, line: 1878, column: 81)
!968 = distinct !DILexicalBlock(scope: !964, file: !13, line: 1878, column: 58)
!969 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !970, file: !13, line: 1887, type: !50)
!970 = distinct !DILexicalBlock(scope: !971, file: !13, line: 1886, column: 100)
!971 = distinct !DILexicalBlock(scope: !972, file: !13, line: 1886, column: 13)
!972 = distinct !DILexicalBlock(scope: !973, file: !13, line: 1883, column: 29)
!973 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1883, column: 9)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !975, file: !13, line: 1888, type: !50)
!975 = distinct !DILexicalBlock(scope: !970, file: !13, line: 1888, column: 16)
!976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !977, file: !13, line: 1888, type: !50)
!977 = distinct !DILexicalBlock(scope: !978, file: !13, line: 1888, column: 111)
!978 = distinct !DILexicalBlock(scope: !979, file: !13, line: 1888, column: 85)
!979 = distinct !DILexicalBlock(scope: !975, file: !13, line: 1888, column: 62)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !981, file: !13, line: 1902, type: !50)
!981 = distinct !DILexicalBlock(scope: !982, file: !13, line: 1902, column: 12)
!982 = distinct !DILexicalBlock(scope: !983, file: !13, line: 1894, column: 34)
!983 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1894, column: 9)
!984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !985, file: !13, line: 1902, type: !50)
!985 = distinct !DILexicalBlock(scope: !986, file: !13, line: 1902, column: 117)
!986 = distinct !DILexicalBlock(scope: !987, file: !13, line: 1902, column: 86)
!987 = distinct !DILexicalBlock(scope: !981, file: !13, line: 1902, column: 63)
!988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !989, file: !13, line: 1908, type: !50)
!989 = distinct !DILexicalBlock(scope: !990, file: !13, line: 1908, column: 16)
!990 = distinct !DILexicalBlock(scope: !991, file: !13, line: 1905, column: 33)
!991 = distinct !DILexicalBlock(scope: !992, file: !13, line: 1905, column: 13)
!992 = distinct !DILexicalBlock(scope: !993, file: !13, line: 1904, column: 31)
!993 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1904, column: 9)
!994 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !995, file: !13, line: 1913, type: !50)
!995 = distinct !DILexicalBlock(scope: !992, file: !13, line: 1913, column: 12)
!996 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !997, file: !13, line: 1913, type: !50)
!997 = distinct !DILexicalBlock(scope: !998, file: !13, line: 1913, column: 111)
!998 = distinct !DILexicalBlock(scope: !999, file: !13, line: 1913, column: 83)
!999 = distinct !DILexicalBlock(scope: !995, file: !13, line: 1913, column: 60)
!1000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1001, file: !13, line: 1923, type: !50)
!1001 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1923, column: 8)
!1002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1003, file: !13, line: 1923, type: !50)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !13, line: 1923, column: 98)
!1004 = distinct !DILexicalBlock(scope: !1001, file: !13, line: 1923, column: 64)
!1005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1006, file: !13, line: 1924, type: !50)
!1006 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1924, column: 8)
!1007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1008, file: !13, line: 1924, type: !50)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !13, line: 1924, column: 101)
!1009 = distinct !DILexicalBlock(scope: !1006, file: !13, line: 1924, column: 67)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1011, file: !13, line: 1925, type: !50)
!1011 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1925, column: 8)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1013, file: !13, line: 1925, type: !50)
!1013 = distinct !DILexicalBlock(scope: !1014, file: !13, line: 1925, column: 96)
!1014 = distinct !DILexicalBlock(scope: !1011, file: !13, line: 1925, column: 62)
!1015 = !DISubprogram(name: "textiowrapper_closed_get", scope: !13, file: !13, line: 2675, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2676, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_closed_get, variables: !1018)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!50, !695, !102}
!1018 = !{!1019, !1020}
!1019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1015, file: !13, line: 2675, type: !695)
!1020 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1015, file: !13, line: 2675, type: !102)
!1021 = !DISubprogram(name: "_textiowrapper_writeflush", scope: !13, file: !13, line: 1264, type: !742, isLocal: true, isDefinition: true, scopeLine: 1265, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*)* @_textiowrapper_writeflush, variables: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1029, !1033, !1035, !1037}
!1023 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1021, file: !13, line: 1264, type: !695)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pending", scope: !1021, file: !13, line: 1266, type: !50)
!1025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1021, file: !13, line: 1266, type: !50)
!1026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1021, file: !13, line: 1266, type: !50)
!1027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1028, file: !13, line: 1274, type: !50)
!1028 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1274, column: 8)
!1029 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1030, file: !13, line: 1274, type: !50)
!1030 = distinct !DILexicalBlock(scope: !1031, file: !13, line: 1274, column: 133)
!1031 = distinct !DILexicalBlock(scope: !1032, file: !13, line: 1274, column: 92)
!1032 = distinct !DILexicalBlock(scope: !1028, file: !13, line: 1274, column: 69)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1034, file: !13, line: 1277, type: !50)
!1034 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1277, column: 8)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1036, file: !13, line: 1285, type: !50)
!1036 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1285, column: 8)
!1037 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1038, file: !13, line: 1288, type: !50)
!1038 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1288, column: 8)
!1039 = !DISubprogram(name: "textiowrapper_read_chunk", scope: !13, file: !13, line: 1438, type: !1040, isLocal: true, isDefinition: true, scopeLine: 1439, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, i64)* @textiowrapper_read_chunk, variables: !1042)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!56, !695, !22}
!1042 = !{!1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1056, !1060, !1062, !1064, !1067, !1071, !1073, !1075, !1079, !1081, !1083, !1086, !1088, !1091, !1093}
!1043 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1039, file: !13, line: 1438, type: !695)
!1044 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size_hint", arg: 2, scope: !1039, file: !13, line: 1438, type: !22)
!1045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_buffer", scope: !1039, file: !13, line: 1440, type: !50)
!1046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_flags", scope: !1039, file: !13, line: 1441, type: !50)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_chunk", scope: !1039, file: !13, line: 1442, type: !50)
!1048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded_chars", scope: !1039, file: !13, line: 1443, type: !50)
!1049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunk_size", scope: !1039, file: !13, line: 1443, type: !50)
!1050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nbytes", scope: !1039, file: !13, line: 1444, type: !22)
!1051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nchars", scope: !1039, file: !13, line: 1444, type: !22)
!1052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eof", scope: !1039, file: !13, line: 1445, type: !56)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1054, file: !13, line: 1463, type: !50)
!1054 = distinct !DILexicalBlock(scope: !1055, file: !13, line: 1458, column: 24)
!1055 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1458, column: 9)
!1056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1057, file: !13, line: 1471, type: !50)
!1057 = distinct !DILexicalBlock(scope: !1058, file: !13, line: 1471, column: 16)
!1058 = distinct !DILexicalBlock(scope: !1059, file: !13, line: 1470, column: 77)
!1059 = distinct !DILexicalBlock(scope: !1054, file: !13, line: 1470, column: 13)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1061, file: !13, line: 1476, type: !50)
!1061 = distinct !DILexicalBlock(scope: !1054, file: !13, line: 1476, column: 12)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1063, file: !13, line: 1489, type: !50)
!1063 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1489, column: 8)
!1064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next_input", scope: !1065, file: !13, line: 1527, type: !50)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !13, line: 1523, column: 24)
!1066 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1523, column: 9)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1068, file: !13, line: 1535, type: !50)
!1068 = distinct !DILexicalBlock(scope: !1069, file: !13, line: 1535, column: 16)
!1069 = distinct !DILexicalBlock(scope: !1070, file: !13, line: 1530, column: 89)
!1070 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1530, column: 13)
!1071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1072, file: !13, line: 1538, type: !50)
!1072 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1538, column: 12)
!1073 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1074, file: !13, line: 1539, type: !50)
!1074 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1539, column: 12)
!1075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1076, file: !13, line: 1539, type: !50)
!1076 = distinct !DILexicalBlock(scope: !1077, file: !13, line: 1539, column: 127)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !13, line: 1539, column: 91)
!1078 = distinct !DILexicalBlock(scope: !1074, file: !13, line: 1539, column: 68)
!1079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1080, file: !13, line: 1542, type: !50)
!1080 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1542, column: 8)
!1081 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1082, file: !13, line: 1547, type: !50)
!1082 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1547, column: 8)
!1083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1084, file: !13, line: 1547, type: !50)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !13, line: 1547, column: 102)
!1085 = distinct !DILexicalBlock(scope: !1082, file: !13, line: 1547, column: 68)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1087, file: !13, line: 1548, type: !50)
!1087 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1548, column: 8)
!1088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1089, file: !13, line: 1548, type: !50)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !13, line: 1548, column: 101)
!1090 = distinct !DILexicalBlock(scope: !1087, file: !13, line: 1548, column: 67)
!1091 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1092, file: !13, line: 1549, type: !50)
!1092 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1549, column: 8)
!1093 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1094, file: !13, line: 1549, type: !50)
!1094 = distinct !DILexicalBlock(scope: !1095, file: !13, line: 1549, column: 103)
!1095 = distinct !DILexicalBlock(scope: !1092, file: !13, line: 1549, column: 69)
!1096 = !DISubprogram(name: "textiowrapper_set_decoded_chars", scope: !13, file: !13, line: 1394, type: !1097, isLocal: true, isDefinition: true, scopeLine: 1395, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.textio*, %struct._object*)* @textiowrapper_set_decoded_chars, variables: !1099)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !695, !50}
!1099 = !{!1100, !1101, !1102, !1104}
!1100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1096, file: !13, line: 1394, type: !695)
!1101 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "chars", arg: 2, scope: !1096, file: !13, line: 1394, type: !50)
!1102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1103, file: !13, line: 1396, type: !50)
!1103 = distinct !DILexicalBlock(scope: !1096, file: !13, line: 1396, column: 8)
!1104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1105, file: !13, line: 1396, type: !50)
!1105 = distinct !DILexicalBlock(scope: !1106, file: !13, line: 1396, column: 133)
!1106 = distinct !DILexicalBlock(scope: !1107, file: !13, line: 1396, column: 92)
!1107 = distinct !DILexicalBlock(scope: !1103, file: !13, line: 1396, column: 69)
!1108 = !DISubprogram(name: "textiowrapper_detach", scope: !13, file: !13, line: 1246, type: !807, isLocal: true, isDefinition: true, scopeLine: 1247, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*)* @textiowrapper_detach, variables: !1109)
!1109 = !{!1110, !1111, !1112, !1113}
!1110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1108, file: !13, line: 1246, type: !695)
!1111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1108, file: !13, line: 1248, type: !50)
!1112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1108, file: !13, line: 1248, type: !50)
!1113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1114, file: !13, line: 1253, type: !50)
!1114 = distinct !DILexicalBlock(scope: !1108, file: !13, line: 1253, column: 8)
!1115 = !DISubprogram(name: "textiowrapper_write", scope: !13, file: !13, line: 1293, type: !1116, isLocal: true, isDefinition: true, scopeLine: 1294, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_write, variables: !1118)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!50, !695, !50}
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1130, !1131, !1137, !1140, !1142, !1144, !1150, !1154, !1156, !1160, !1162, !1166}
!1119 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1115, file: !13, line: 1293, type: !695)
!1120 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1115, file: !13, line: 1293, type: !50)
!1121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1115, file: !13, line: 1295, type: !50)
!1122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text", scope: !1115, file: !13, line: 1296, type: !50)
!1123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1115, file: !13, line: 1297, type: !50)
!1124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "textlen", scope: !1115, file: !13, line: 1298, type: !22)
!1125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "haslf", scope: !1115, file: !13, line: 1299, type: !56)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "needflush", scope: !1115, file: !13, line: 1300, type: !56)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text_needflush", scope: !1115, file: !13, line: 1300, type: !56)
!1128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1129, file: !13, line: 1311, type: !56)
!1129 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1311, column: 8)
!1130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1129, file: !13, line: 1311, type: !50)
!1131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1132, file: !13, line: 1311, type: !50)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !13, line: 1311, column: 289)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !13, line: 1311, column: 163)
!1134 = distinct !DILexicalBlock(scope: !1135, file: !13, line: 1311, column: 100)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !13, line: 1311, column: 94)
!1136 = distinct !DILexicalBlock(scope: !1129, file: !13, line: 1311, column: 37)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newtext", scope: !1138, file: !13, line: 1325, type: !50)
!1138 = distinct !DILexicalBlock(scope: !1139, file: !13, line: 1324, column: 71)
!1139 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1324, column: 9)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1141, file: !13, line: 1327, type: !50)
!1141 = distinct !DILexicalBlock(scope: !1138, file: !13, line: 1327, column: 12)
!1142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1143, file: !13, line: 1348, type: !50)
!1143 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1348, column: 8)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1145, file: !13, line: 1355, type: !50)
!1145 = distinct !DILexicalBlock(scope: !1146, file: !13, line: 1355, column: 16)
!1146 = distinct !DILexicalBlock(scope: !1147, file: !13, line: 1354, column: 48)
!1147 = distinct !DILexicalBlock(scope: !1148, file: !13, line: 1354, column: 13)
!1148 = distinct !DILexicalBlock(scope: !1149, file: !13, line: 1352, column: 44)
!1149 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1352, column: 9)
!1150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1151, file: !13, line: 1361, type: !50)
!1151 = distinct !DILexicalBlock(scope: !1152, file: !13, line: 1361, column: 12)
!1152 = distinct !DILexicalBlock(scope: !1153, file: !13, line: 1360, column: 52)
!1153 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1360, column: 9)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1155, file: !13, line: 1365, type: !50)
!1155 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1365, column: 8)
!1156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1157, file: !13, line: 1376, type: !50)
!1157 = distinct !DILexicalBlock(scope: !1158, file: !13, line: 1376, column: 12)
!1158 = distinct !DILexicalBlock(scope: !1159, file: !13, line: 1372, column: 20)
!1159 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1372, column: 9)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1161, file: !13, line: 1379, type: !50)
!1161 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1379, column: 8)
!1162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1163, file: !13, line: 1379, type: !50)
!1163 = distinct !DILexicalBlock(scope: !1164, file: !13, line: 1379, column: 123)
!1164 = distinct !DILexicalBlock(scope: !1165, file: !13, line: 1379, column: 87)
!1165 = distinct !DILexicalBlock(scope: !1161, file: !13, line: 1379, column: 64)
!1166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1167, file: !13, line: 1385, type: !50)
!1167 = distinct !DILexicalBlock(scope: !1168, file: !13, line: 1385, column: 12)
!1168 = distinct !DILexicalBlock(scope: !1169, file: !13, line: 1381, column: 24)
!1169 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1381, column: 9)
!1170 = !DISubprogram(name: "textiowrapper_read", scope: !13, file: !13, line: 1554, type: !1116, isLocal: true, isDefinition: true, scopeLine: 1555, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_read, variables: !1171)
!1171 = !{!1172, !1173, !1174, !1175, !1176, !1177, !1179, !1180, !1186, !1189, !1190, !1192, !1196, !1198, !1202, !1204, !1205, !1208, !1212, !1216, !1218, !1222, !1224, !1227, !1229}
!1172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1170, file: !13, line: 1554, type: !695)
!1173 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1170, file: !13, line: 1554, type: !50)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1170, file: !13, line: 1556, type: !22)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1170, file: !13, line: 1557, type: !50)
!1176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunks", scope: !1170, file: !13, line: 1557, type: !50)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1178, file: !13, line: 1564, type: !56)
!1178 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1564, column: 8)
!1179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1178, file: !13, line: 1564, type: !50)
!1180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1181, file: !13, line: 1564, type: !50)
!1181 = distinct !DILexicalBlock(scope: !1182, file: !13, line: 1564, column: 289)
!1182 = distinct !DILexicalBlock(scope: !1183, file: !13, line: 1564, column: 163)
!1183 = distinct !DILexicalBlock(scope: !1184, file: !13, line: 1564, column: 100)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !13, line: 1564, column: 94)
!1185 = distinct !DILexicalBlock(scope: !1178, file: !13, line: 1564, column: 37)
!1186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !1187, file: !13, line: 1574, type: !50)
!1187 = distinct !DILexicalBlock(scope: !1188, file: !13, line: 1572, column: 16)
!1188 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1572, column: 9)
!1189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded", scope: !1187, file: !13, line: 1575, type: !50)
!1190 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1191, file: !13, line: 1585, type: !50)
!1191 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1585, column: 12)
!1192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1193, file: !13, line: 1592, type: !50)
!1193 = distinct !DILexicalBlock(scope: !1194, file: !13, line: 1592, column: 16)
!1194 = distinct !DILexicalBlock(scope: !1195, file: !13, line: 1591, column: 35)
!1195 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1591, column: 13)
!1196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1197, file: !13, line: 1600, type: !50)
!1197 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1600, column: 12)
!1198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1199, file: !13, line: 1600, type: !50)
!1199 = distinct !DILexicalBlock(scope: !1200, file: !13, line: 1600, column: 127)
!1200 = distinct !DILexicalBlock(scope: !1201, file: !13, line: 1600, column: 91)
!1201 = distinct !DILexicalBlock(scope: !1197, file: !13, line: 1600, column: 68)
!1202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1203, file: !13, line: 1604, type: !56)
!1203 = distinct !DILexicalBlock(scope: !1188, file: !13, line: 1603, column: 10)
!1204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remaining", scope: !1203, file: !13, line: 1605, type: !22)
!1205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1206, file: !13, line: 1635, type: !50)
!1206 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1635, column: 16)
!1207 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1615, column: 31)
!1208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1209, file: !13, line: 1644, type: !50)
!1209 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1644, column: 16)
!1210 = distinct !DILexicalBlock(scope: !1211, file: !13, line: 1641, column: 35)
!1211 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1641, column: 13)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1213, file: !13, line: 1644, type: !50)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !13, line: 1644, column: 115)
!1214 = distinct !DILexicalBlock(scope: !1215, file: !13, line: 1644, column: 87)
!1215 = distinct !DILexicalBlock(scope: !1209, file: !13, line: 1644, column: 64)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1217, file: !13, line: 1648, type: !50)
!1217 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1648, column: 16)
!1218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1219, file: !13, line: 1648, type: !50)
!1219 = distinct !DILexicalBlock(scope: !1220, file: !13, line: 1648, column: 115)
!1220 = distinct !DILexicalBlock(scope: !1221, file: !13, line: 1648, column: 87)
!1221 = distinct !DILexicalBlock(scope: !1217, file: !13, line: 1648, column: 64)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1223, file: !13, line: 1653, type: !50)
!1223 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1653, column: 8)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1225, file: !13, line: 1653, type: !50)
!1225 = distinct !DILexicalBlock(scope: !1226, file: !13, line: 1653, column: 98)
!1226 = distinct !DILexicalBlock(scope: !1223, file: !13, line: 1653, column: 64)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1228, file: !13, line: 1654, type: !50)
!1228 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1654, column: 8)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1230, file: !13, line: 1654, type: !50)
!1230 = distinct !DILexicalBlock(scope: !1231, file: !13, line: 1654, column: 98)
!1231 = distinct !DILexicalBlock(scope: !1228, file: !13, line: 1654, column: 64)
!1232 = !DISubprogram(name: "textiowrapper_get_decoded_chars", scope: !13, file: !13, line: 1402, type: !911, isLocal: true, isDefinition: true, scopeLine: 1403, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i64)* @textiowrapper_get_decoded_chars, variables: !1233)
!1233 = !{!1234, !1235, !1236, !1237}
!1234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1232, file: !13, line: 1402, type: !695)
!1235 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !1232, file: !13, line: 1402, type: !22)
!1236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chars", scope: !1232, file: !13, line: 1404, type: !50)
!1237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "avail", scope: !1232, file: !13, line: 1405, type: !22)
!1238 = !DISubprogram(name: "textiowrapper_readline", scope: !13, file: !13, line: 1930, type: !1116, isLocal: true, isDefinition: true, scopeLine: 1931, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readline, variables: !1239)
!1239 = !{!1240, !1241, !1242}
!1240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1238, file: !13, line: 1930, type: !695)
!1241 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1238, file: !13, line: 1930, type: !50)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "limit", scope: !1238, file: !13, line: 1932, type: !22)
!1243 = !DISubprogram(name: "textiowrapper_flush", scope: !13, file: !13, line: 2566, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2567, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_flush, variables: !1244)
!1244 = !{!1245, !1246, !1247, !1249, !1250}
!1245 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1243, file: !13, line: 2566, type: !695)
!1246 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1243, file: !13, line: 2566, type: !50)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1248, file: !13, line: 2569, type: !56)
!1248 = distinct !DILexicalBlock(scope: !1243, file: !13, line: 2569, column: 8)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1248, file: !13, line: 2569, type: !50)
!1250 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1251, file: !13, line: 2569, type: !50)
!1251 = distinct !DILexicalBlock(scope: !1252, file: !13, line: 2569, column: 289)
!1252 = distinct !DILexicalBlock(scope: !1253, file: !13, line: 2569, column: 163)
!1253 = distinct !DILexicalBlock(scope: !1254, file: !13, line: 2569, column: 100)
!1254 = distinct !DILexicalBlock(scope: !1255, file: !13, line: 2569, column: 94)
!1255 = distinct !DILexicalBlock(scope: !1248, file: !13, line: 2569, column: 37)
!1256 = !DISubprogram(name: "textiowrapper_close", scope: !13, file: !13, line: 2577, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2578, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_close, variables: !1257)
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1264, !1267, !1268, !1269, !1274, !1277, !1283, !1287, !1289, !1291, !1293}
!1258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1256, file: !13, line: 2577, type: !695)
!1259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1256, file: !13, line: 2577, type: !50)
!1260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1256, file: !13, line: 2579, type: !50)
!1261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1256, file: !13, line: 2580, type: !56)
!1262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1263, file: !13, line: 2587, type: !50)
!1263 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2587, column: 8)
!1264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc", scope: !1265, file: !13, line: 2595, type: !50)
!1265 = distinct !DILexicalBlock(scope: !1266, file: !13, line: 2594, column: 10)
!1266 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2591, column: 9)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !1265, file: !13, line: 2595, type: !50)
!1268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !1265, file: !13, line: 2595, type: !50)
!1269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1270, file: !13, line: 2599, type: !50)
!1270 = distinct !DILexicalBlock(scope: !1271, file: !13, line: 2599, column: 20)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !13, line: 2598, column: 17)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !13, line: 2596, column: 31)
!1273 = distinct !DILexicalBlock(scope: !1265, file: !13, line: 2596, column: 13)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1275, file: !13, line: 2607, type: !50)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !13, line: 2607, column: 16)
!1276 = distinct !DILexicalBlock(scope: !1265, file: !13, line: 2604, column: 13)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1278, file: !13, line: 2612, type: !50)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !13, line: 2612, column: 20)
!1279 = distinct !DILexicalBlock(scope: !1280, file: !13, line: 2611, column: 36)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !13, line: 2611, column: 17)
!1281 = distinct !DILexicalBlock(scope: !1282, file: !13, line: 2610, column: 32)
!1282 = distinct !DILexicalBlock(scope: !1265, file: !13, line: 2610, column: 13)
!1283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1284, file: !13, line: 2612, type: !50)
!1284 = distinct !DILexicalBlock(scope: !1285, file: !13, line: 2612, column: 113)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !13, line: 2612, column: 88)
!1286 = distinct !DILexicalBlock(scope: !1278, file: !13, line: 2612, column: 65)
!1287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val2", scope: !1288, file: !13, line: 2616, type: !50)
!1288 = distinct !DILexicalBlock(scope: !1280, file: !13, line: 2615, column: 18)
!1289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1290, file: !13, line: 2617, type: !50)
!1290 = distinct !DILexicalBlock(scope: !1288, file: !13, line: 2617, column: 20)
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1292, file: !13, line: 2618, type: !50)
!1292 = distinct !DILexicalBlock(scope: !1288, file: !13, line: 2618, column: 20)
!1293 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1294, file: !13, line: 2618, type: !50)
!1294 = distinct !DILexicalBlock(scope: !1295, file: !13, line: 2618, column: 106)
!1295 = distinct !DILexicalBlock(scope: !1292, file: !13, line: 2618, column: 72)
!1296 = !DISubprogram(name: "textiowrapper_fileno", scope: !13, file: !13, line: 2523, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2524, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_fileno, variables: !1297)
!1297 = !{!1298, !1299}
!1298 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1296, file: !13, line: 2523, type: !695)
!1299 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1296, file: !13, line: 2523, type: !50)
!1300 = !DISubprogram(name: "textiowrapper_seekable", scope: !13, file: !13, line: 2530, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2531, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seekable, variables: !1301)
!1301 = !{!1302, !1303}
!1302 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1300, file: !13, line: 2530, type: !695)
!1303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1300, file: !13, line: 2530, type: !50)
!1304 = !DISubprogram(name: "textiowrapper_readable", scope: !13, file: !13, line: 2537, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2538, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readable, variables: !1305)
!1305 = !{!1306, !1307}
!1306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1304, file: !13, line: 2537, type: !695)
!1307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1304, file: !13, line: 2537, type: !50)
!1308 = !DISubprogram(name: "textiowrapper_writable", scope: !13, file: !13, line: 2544, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2545, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_writable, variables: !1309)
!1309 = !{!1310, !1311}
!1310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1308, file: !13, line: 2544, type: !695)
!1311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1308, file: !13, line: 2544, type: !50)
!1312 = !DISubprogram(name: "textiowrapper_isatty", scope: !13, file: !13, line: 2551, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2552, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_isatty, variables: !1313)
!1313 = !{!1314, !1315}
!1314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1312, file: !13, line: 2551, type: !695)
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1312, file: !13, line: 2551, type: !50)
!1316 = !DISubprogram(name: "textiowrapper_getstate", scope: !13, file: !13, line: 2558, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2559, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_getstate, variables: !1317)
!1317 = !{!1318, !1319}
!1318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1316, file: !13, line: 2558, type: !695)
!1319 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1316, file: !13, line: 2558, type: !50)
!1320 = !DISubprogram(name: "textiowrapper_seek", scope: !13, file: !13, line: 2064, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2065, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seek, variables: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326, !1337, !1338, !1339, !1340, !1342, !1343, !1349, !1353, !1357, !1359, !1363, !1367, !1369, !1372, !1374, !1376, !1378, !1380, !1384, !1387, !1388, !1392, !1396, !1398}
!1322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1320, file: !13, line: 2064, type: !695)
!1323 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1320, file: !13, line: 2064, type: !50)
!1324 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookieObj", scope: !1320, file: !13, line: 2066, type: !50)
!1325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "posobj", scope: !1320, file: !13, line: 2066, type: !50)
!1326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookie", scope: !1320, file: !13, line: 2067, type: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "cookie_type", file: !13, line: 1949, baseType: !1328)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 1943, size: 192, align: 64, elements: !1329)
!1329 = !{!1330, !1333, !1334, !1335, !1336}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "start_pos", scope: !1328, file: !13, line: 1944, baseType: !1331, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_off_t", file: !565, line: 94, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !25, line: 92, baseType: !100)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "dec_flags", scope: !1328, file: !13, line: 1945, baseType: !56, size: 32, align: 32, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_to_feed", scope: !1328, file: !13, line: 1946, baseType: !56, size: 32, align: 32, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "chars_to_skip", scope: !1328, file: !13, line: 1947, baseType: !56, size: 32, align: 32, offset: 128)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "need_eof", scope: !1328, file: !13, line: 1948, baseType: !42, size: 8, align: 8, offset: 160)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "whence", scope: !1320, file: !13, line: 2068, type: !56)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1320, file: !13, line: 2069, type: !50)
!1339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !1320, file: !13, line: 2070, type: !56)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1341, file: !13, line: 2076, type: !56)
!1341 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2076, column: 8)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1341, file: !13, line: 2076, type: !50)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1344, file: !13, line: 2076, type: !50)
!1344 = distinct !DILexicalBlock(scope: !1345, file: !13, line: 2076, column: 289)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !13, line: 2076, column: 163)
!1346 = distinct !DILexicalBlock(scope: !1347, file: !13, line: 2076, column: 100)
!1347 = distinct !DILexicalBlock(scope: !1348, file: !13, line: 2076, column: 94)
!1348 = distinct !DILexicalBlock(scope: !1341, file: !13, line: 2076, column: 37)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1350, file: !13, line: 2099, type: !50)
!1350 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2099, column: 12)
!1351 = distinct !DILexicalBlock(scope: !1352, file: !13, line: 2085, column: 22)
!1352 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2085, column: 9)
!1353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1354, file: !13, line: 2118, type: !50)
!1354 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2118, column: 12)
!1355 = distinct !DILexicalBlock(scope: !1356, file: !13, line: 2104, column: 27)
!1356 = distinct !DILexicalBlock(scope: !1352, file: !13, line: 2104, column: 14)
!1357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1358, file: !13, line: 2121, type: !50)
!1358 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2121, column: 12)
!1359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1360, file: !13, line: 2121, type: !50)
!1360 = distinct !DILexicalBlock(scope: !1361, file: !13, line: 2121, column: 127)
!1361 = distinct !DILexicalBlock(scope: !1362, file: !13, line: 2121, column: 91)
!1362 = distinct !DILexicalBlock(scope: !1358, file: !13, line: 2121, column: 68)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1364, file: !13, line: 2126, type: !50)
!1364 = distinct !DILexicalBlock(scope: !1365, file: !13, line: 2126, column: 16)
!1365 = distinct !DILexicalBlock(scope: !1366, file: !13, line: 2122, column: 28)
!1366 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2122, column: 13)
!1367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1368, file: !13, line: 2130, type: !50)
!1368 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2130, column: 12)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1370, file: !13, line: 2130, type: !50)
!1370 = distinct !DILexicalBlock(scope: !1371, file: !13, line: 2130, column: 105)
!1371 = distinct !DILexicalBlock(scope: !1368, file: !13, line: 2130, column: 71)
!1372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1373, file: !13, line: 2152, type: !50)
!1373 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2152, column: 8)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1375, file: !13, line: 2166, type: !50)
!1375 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2166, column: 8)
!1376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1377, file: !13, line: 2169, type: !50)
!1377 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2169, column: 8)
!1378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1379, file: !13, line: 2172, type: !50)
!1379 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2172, column: 8)
!1380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1381, file: !13, line: 2172, type: !50)
!1381 = distinct !DILexicalBlock(scope: !1382, file: !13, line: 2172, column: 123)
!1382 = distinct !DILexicalBlock(scope: !1383, file: !13, line: 2172, column: 87)
!1383 = distinct !DILexicalBlock(scope: !1379, file: !13, line: 2172, column: 64)
!1384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_chunk", scope: !1385, file: !13, line: 2182, type: !50)
!1385 = distinct !DILexicalBlock(scope: !1386, file: !13, line: 2180, column: 31)
!1386 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2180, column: 9)
!1387 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded", scope: !1385, file: !13, line: 2184, type: !50)
!1388 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1389, file: !13, line: 2194, type: !50)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !13, line: 2194, column: 16)
!1390 = distinct !DILexicalBlock(scope: !1391, file: !13, line: 2189, column: 90)
!1391 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2189, column: 13)
!1392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1393, file: !13, line: 2200, type: !50)
!1393 = distinct !DILexicalBlock(scope: !1394, file: !13, line: 2200, column: 16)
!1394 = distinct !DILexicalBlock(scope: !1395, file: !13, line: 2199, column: 43)
!1395 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2199, column: 13)
!1396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1397, file: !13, line: 2232, type: !50)
!1397 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2232, column: 8)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1399, file: !13, line: 2232, type: !50)
!1399 = distinct !DILexicalBlock(scope: !1400, file: !13, line: 2232, column: 101)
!1400 = distinct !DILexicalBlock(scope: !1397, file: !13, line: 2232, column: 67)
!1401 = !DISubprogram(name: "textiowrapper_parse_cookie", scope: !13, file: !13, line: 1984, type: !1402, isLocal: true, isDefinition: true, scopeLine: 1985, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.cookie_type*, %struct._object*)* @textiowrapper_parse_cookie, variables: !1405)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!56, !1404, !50}
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64, align: 64)
!1405 = !{!1406, !1407, !1408, !1412, !1413, !1417}
!1406 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 1, scope: !1401, file: !13, line: 1984, type: !1404)
!1407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookieObj", arg: 2, scope: !1401, file: !13, line: 1984, type: !50)
!1408 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1401, file: !13, line: 1986, type: !1409)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 168, align: 8, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 21)
!1412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookieLong", scope: !1401, file: !13, line: 1987, type: !434)
!1413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1414, file: !13, line: 1993, type: !50)
!1414 = distinct !DILexicalBlock(scope: !1415, file: !13, line: 1993, column: 12)
!1415 = distinct !DILexicalBlock(scope: !1416, file: !13, line: 1992, column: 40)
!1416 = distinct !DILexicalBlock(scope: !1401, file: !13, line: 1991, column: 9)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1418, file: !13, line: 1996, type: !50)
!1418 = distinct !DILexicalBlock(scope: !1401, file: !13, line: 1996, column: 8)
!1419 = !DISubprogram(name: "_textiowrapper_decoder_setstate", scope: !13, file: !13, line: 2023, type: !1420, isLocal: true, isDefinition: true, scopeLine: 2024, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct.cookie_type*)* @_textiowrapper_decoder_setstate, variables: !1422)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!56, !695, !1404}
!1422 = !{!1423, !1424, !1425, !1426}
!1423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1419, file: !13, line: 2023, type: !695)
!1424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 2, scope: !1419, file: !13, line: 2023, type: !1404)
!1425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1419, file: !13, line: 2025, type: !50)
!1426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1427, file: !13, line: 2039, type: !50)
!1427 = distinct !DILexicalBlock(scope: !1419, file: !13, line: 2039, column: 8)
!1428 = !DISubprogram(name: "_textiowrapper_encoder_setstate", scope: !13, file: !13, line: 2044, type: !1420, isLocal: true, isDefinition: true, scopeLine: 2045, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct.cookie_type*)* @_textiowrapper_encoder_setstate, variables: !1429)
!1429 = !{!1430, !1431, !1432, !1433}
!1430 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1428, file: !13, line: 2044, type: !695)
!1431 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 2, scope: !1428, file: !13, line: 2044, type: !1404)
!1432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1428, file: !13, line: 2046, type: !50)
!1433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1434, file: !13, line: 2059, type: !50)
!1434 = distinct !DILexicalBlock(scope: !1428, file: !13, line: 2059, column: 8)
!1435 = !DISubprogram(name: "textiowrapper_tell", scope: !13, file: !13, line: 2238, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2239, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_tell, variables: !1436)
!1436 = !{!1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1455, !1456, !1462, !1464, !1466, !1469, !1471, !1475, !1479, !1481, !1483, !1485, !1487, !1489, !1493, !1495, !1498, !1500, !1502, !1504, !1507, !1508, !1509, !1511}
!1437 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1435, file: !13, line: 2238, type: !695)
!1438 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1435, file: !13, line: 2238, type: !50)
!1439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1435, file: !13, line: 2240, type: !50)
!1440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "posobj", scope: !1435, file: !13, line: 2241, type: !50)
!1441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookie", scope: !1435, file: !13, line: 2242, type: !1327)
!1442 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next_input", scope: !1435, file: !13, line: 2243, type: !50)
!1443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chars_to_skip", scope: !1435, file: !13, line: 2244, type: !22)
!1444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chars_decoded", scope: !1435, file: !13, line: 2244, type: !22)
!1445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "skip_bytes", scope: !1435, file: !13, line: 2245, type: !22)
!1446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "skip_back", scope: !1435, file: !13, line: 2245, type: !22)
!1447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "saved_state", scope: !1435, file: !13, line: 2246, type: !50)
!1448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input", scope: !1435, file: !13, line: 2247, type: !64)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_end", scope: !1435, file: !13, line: 2247, type: !64)
!1450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_buffer", scope: !1435, file: !13, line: 2248, type: !64)
!1451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_buffer_len", scope: !1435, file: !13, line: 2249, type: !22)
!1452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_flags", scope: !1435, file: !13, line: 2250, type: !56)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1454, file: !13, line: 2253, type: !56)
!1454 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2253, column: 8)
!1455 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1454, file: !13, line: 2253, type: !50)
!1456 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1457, file: !13, line: 2253, type: !50)
!1457 = distinct !DILexicalBlock(scope: !1458, file: !13, line: 2253, column: 289)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !13, line: 2253, column: 163)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !13, line: 2253, column: 100)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !13, line: 2253, column: 94)
!1461 = distinct !DILexicalBlock(scope: !1454, file: !13, line: 2253, column: 37)
!1462 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1463, file: !13, line: 2270, type: !50)
!1463 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2270, column: 8)
!1464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1465, file: !13, line: 2286, type: !50)
!1465 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2286, column: 8)
!1466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_decoded", scope: !1467, file: !13, line: 2343, type: !50)
!1467 = distinct !DILexicalBlock(scope: !1468, file: !13, line: 2343, column: 12)
!1468 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2339, column: 28)
!1469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1470, file: !13, line: 2343, type: !50)
!1470 = distinct !DILexicalBlock(scope: !1467, file: !13, line: 2343, column: 252)
!1471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_state", scope: !1472, file: !13, line: 2345, type: !50)
!1472 = distinct !DILexicalBlock(scope: !1473, file: !13, line: 2345, column: 16)
!1473 = distinct !DILexicalBlock(scope: !1474, file: !13, line: 2344, column: 45)
!1474 = distinct !DILexicalBlock(scope: !1468, file: !13, line: 2344, column: 13)
!1475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1476, file: !13, line: 2345, type: !50)
!1476 = distinct !DILexicalBlock(scope: !1477, file: !13, line: 2345, column: 238)
!1477 = distinct !DILexicalBlock(scope: !1478, file: !13, line: 2345, column: 233)
!1478 = distinct !DILexicalBlock(scope: !1472, file: !13, line: 2345, column: 153)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1480, file: !13, line: 2345, type: !50)
!1480 = distinct !DILexicalBlock(scope: !1472, file: !13, line: 2345, column: 456)
!1481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1482, file: !13, line: 2385, type: !22)
!1482 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2384, column: 31)
!1483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_decoded", scope: !1484, file: !13, line: 2387, type: !50)
!1484 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2387, column: 12)
!1485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1486, file: !13, line: 2387, type: !50)
!1486 = distinct !DILexicalBlock(scope: !1484, file: !13, line: 2387, column: 243)
!1487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_state", scope: !1488, file: !13, line: 2391, type: !50)
!1488 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2391, column: 12)
!1489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1490, file: !13, line: 2391, type: !50)
!1490 = distinct !DILexicalBlock(scope: !1491, file: !13, line: 2391, column: 234)
!1491 = distinct !DILexicalBlock(scope: !1492, file: !13, line: 2391, column: 229)
!1492 = distinct !DILexicalBlock(scope: !1488, file: !13, line: 2391, column: 149)
!1493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1494, file: !13, line: 2391, type: !50)
!1494 = distinct !DILexicalBlock(scope: !1488, file: !13, line: 2391, column: 452)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded", scope: !1496, file: !13, line: 2407, type: !50)
!1496 = distinct !DILexicalBlock(scope: !1497, file: !13, line: 2405, column: 29)
!1497 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2405, column: 9)
!1498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1499, file: !13, line: 2412, type: !50)
!1499 = distinct !DILexicalBlock(scope: !1496, file: !13, line: 2412, column: 12)
!1500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1501, file: !13, line: 2424, type: !50)
!1501 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2424, column: 8)
!1502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1503, file: !13, line: 2427, type: !50)
!1503 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2427, column: 8)
!1504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !1505, file: !13, line: 2435, type: !50)
!1505 = distinct !DILexicalBlock(scope: !1506, file: !13, line: 2434, column: 22)
!1506 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2434, column: 9)
!1507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1505, file: !13, line: 2435, type: !50)
!1508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "traceback", scope: !1505, file: !13, line: 2435, type: !50)
!1509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1510, file: !13, line: 2439, type: !50)
!1510 = distinct !DILexicalBlock(scope: !1505, file: !13, line: 2439, column: 12)
!1511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1512, file: !13, line: 2442, type: !50)
!1512 = distinct !DILexicalBlock(scope: !1505, file: !13, line: 2442, column: 12)
!1513 = !DISubprogram(name: "textiowrapper_build_cookie", scope: !13, file: !13, line: 2008, type: !1514, isLocal: true, isDefinition: true, scopeLine: 2009, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cookie_type*)* @textiowrapper_build_cookie, variables: !1516)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!50, !1404}
!1516 = !{!1517, !1518}
!1517 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 1, scope: !1513, file: !13, line: 2008, type: !1404)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1513, file: !13, line: 2010, type: !1409)
!1519 = !DISubprogram(name: "textiowrapper_truncate", scope: !13, file: !13, line: 2450, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2451, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_truncate, variables: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525}
!1521 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1519, file: !13, line: 2450, type: !695)
!1522 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1519, file: !13, line: 2450, type: !50)
!1523 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !1519, file: !13, line: 2452, type: !50)
!1524 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1519, file: !13, line: 2453, type: !50)
!1525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1526, file: !13, line: 2463, type: !50)
!1526 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2463, column: 8)
!1527 = !DISubprogram(name: "textiowrapper_name_get", scope: !13, file: !13, line: 2668, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2669, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_name_get, variables: !1528)
!1528 = !{!1529, !1530}
!1529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1527, file: !13, line: 2668, type: !695)
!1530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1527, file: !13, line: 2668, type: !102)
!1531 = !DISubprogram(name: "textiowrapper_newlines_get", scope: !13, file: !13, line: 2682, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2683, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_newlines_get, variables: !1532)
!1532 = !{!1533, !1534, !1535}
!1533 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1531, file: !13, line: 2682, type: !695)
!1534 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1531, file: !13, line: 2682, type: !102)
!1535 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1531, file: !13, line: 2684, type: !50)
!1536 = !DISubprogram(name: "textiowrapper_errors_get", scope: !13, file: !13, line: 2702, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2703, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_errors_get, variables: !1537)
!1537 = !{!1538, !1539}
!1538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1536, file: !13, line: 2702, type: !695)
!1539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1536, file: !13, line: 2702, type: !102)
!1540 = !DISubprogram(name: "textiowrapper_chunk_size_get", scope: !13, file: !13, line: 2709, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2710, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_chunk_size_get, variables: !1541)
!1541 = !{!1542, !1543}
!1542 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1540, file: !13, line: 2709, type: !695)
!1543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1540, file: !13, line: 2709, type: !102)
!1544 = !DISubprogram(name: "textiowrapper_chunk_size_set", scope: !13, file: !13, line: 2716, type: !1545, isLocal: true, isDefinition: true, scopeLine: 2717, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct._object*, i8*)* @textiowrapper_chunk_size_set, variables: !1547)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!56, !695, !50, !102}
!1547 = !{!1548, !1549, !1550, !1551}
!1548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1544, file: !13, line: 2716, type: !695)
!1549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1544, file: !13, line: 2716, type: !50)
!1550 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 3, scope: !1544, file: !13, line: 2716, type: !102)
!1551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1544, file: !13, line: 2718, type: !22)
!1552 = !DISubprogram(name: "textiowrapper_init", scope: !13, file: !13, line: 847, type: !1553, isLocal: true, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct._object*, %struct._object*)* @textiowrapper_init, variables: !1555)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!56, !695, !50, !50}
!1555 = !{!1556, !1557, !1558, !1559, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1576, !1580, !1582, !1586, !1588, !1592, !1594, !1598, !1600, !1604, !1606, !1610, !1612, !1616, !1618, !1622, !1624, !1628, !1630, !1634, !1637, !1640, !1642, !1646, !1650, !1653, !1655, !1659, !1663, !1667, !1671, !1676, !1677, !1679, !1680, !1682, !1687, !1689, !1693, !1695, !1707, !1709, !1712, !1714, !1720, !1722, !1725, !1726, !1728, !1732, !1734}
!1556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1552, file: !13, line: 847, type: !695)
!1557 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1552, file: !13, line: 847, type: !50)
!1558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1552, file: !13, line: 847, type: !50)
!1559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !1552, file: !13, line: 849, type: !1560)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 448, align: 64, elements: !1561)
!1561 = !{!1562}
!1562 = !DISubrange(count: 7)
!1563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1552, file: !13, line: 852, type: !50)
!1564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "raw", scope: !1552, file: !13, line: 852, type: !50)
!1565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "codec_info", scope: !1552, file: !13, line: 852, type: !50)
!1566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding", scope: !1552, file: !13, line: 853, type: !64)
!1567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1552, file: !13, line: 854, type: !64)
!1568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newline", scope: !1552, file: !13, line: 855, type: !64)
!1569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line_buffering", scope: !1552, file: !13, line: 856, type: !56)
!1570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "write_through", scope: !1552, file: !13, line: 856, type: !56)
!1571 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1552, file: !13, line: 857, type: !563)
!1572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1552, file: !13, line: 859, type: !50)
!1573 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1552, file: !13, line: 860, type: !56)
!1574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1575, file: !13, line: 878, type: !50)
!1575 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 878, column: 8)
!1576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1577, file: !13, line: 878, type: !50)
!1577 = distinct !DILexicalBlock(scope: !1578, file: !13, line: 878, column: 119)
!1578 = distinct !DILexicalBlock(scope: !1579, file: !13, line: 878, column: 85)
!1579 = distinct !DILexicalBlock(scope: !1575, file: !13, line: 878, column: 62)
!1580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1581, file: !13, line: 879, type: !50)
!1581 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 879, column: 8)
!1582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1583, file: !13, line: 879, type: !50)
!1583 = distinct !DILexicalBlock(scope: !1584, file: !13, line: 879, column: 123)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !13, line: 879, column: 87)
!1585 = distinct !DILexicalBlock(scope: !1581, file: !13, line: 879, column: 64)
!1586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1587, file: !13, line: 880, type: !50)
!1587 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 880, column: 8)
!1588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1589, file: !13, line: 880, type: !50)
!1589 = distinct !DILexicalBlock(scope: !1590, file: !13, line: 880, column: 121)
!1590 = distinct !DILexicalBlock(scope: !1591, file: !13, line: 880, column: 86)
!1591 = distinct !DILexicalBlock(scope: !1587, file: !13, line: 880, column: 63)
!1592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1593, file: !13, line: 881, type: !50)
!1593 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 881, column: 8)
!1594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1595, file: !13, line: 881, type: !50)
!1595 = distinct !DILexicalBlock(scope: !1596, file: !13, line: 881, column: 121)
!1596 = distinct !DILexicalBlock(scope: !1597, file: !13, line: 881, column: 86)
!1597 = distinct !DILexicalBlock(scope: !1593, file: !13, line: 881, column: 63)
!1598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1599, file: !13, line: 882, type: !50)
!1599 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 882, column: 8)
!1600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1601, file: !13, line: 882, type: !50)
!1601 = distinct !DILexicalBlock(scope: !1602, file: !13, line: 882, column: 119)
!1602 = distinct !DILexicalBlock(scope: !1603, file: !13, line: 882, column: 85)
!1603 = distinct !DILexicalBlock(scope: !1599, file: !13, line: 882, column: 62)
!1604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1605, file: !13, line: 883, type: !50)
!1605 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 883, column: 8)
!1606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1607, file: !13, line: 883, type: !50)
!1607 = distinct !DILexicalBlock(scope: !1608, file: !13, line: 883, column: 133)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !13, line: 883, column: 92)
!1609 = distinct !DILexicalBlock(scope: !1605, file: !13, line: 883, column: 69)
!1610 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1611, file: !13, line: 884, type: !50)
!1611 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 884, column: 8)
!1612 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1613, file: !13, line: 884, type: !50)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !13, line: 884, column: 133)
!1614 = distinct !DILexicalBlock(scope: !1615, file: !13, line: 884, column: 92)
!1615 = distinct !DILexicalBlock(scope: !1611, file: !13, line: 884, column: 69)
!1616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1617, file: !13, line: 885, type: !50)
!1617 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 885, column: 8)
!1618 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1619, file: !13, line: 885, type: !50)
!1619 = distinct !DILexicalBlock(scope: !1620, file: !13, line: 885, column: 123)
!1620 = distinct !DILexicalBlock(scope: !1621, file: !13, line: 885, column: 87)
!1621 = distinct !DILexicalBlock(scope: !1617, file: !13, line: 885, column: 64)
!1622 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1623, file: !13, line: 886, type: !50)
!1623 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 886, column: 8)
!1624 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1625, file: !13, line: 886, type: !50)
!1625 = distinct !DILexicalBlock(scope: !1626, file: !13, line: 886, column: 119)
!1626 = distinct !DILexicalBlock(scope: !1627, file: !13, line: 886, column: 85)
!1627 = distinct !DILexicalBlock(scope: !1623, file: !13, line: 886, column: 62)
!1628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1629, file: !13, line: 887, type: !50)
!1629 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 887, column: 8)
!1630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1631, file: !13, line: 887, type: !50)
!1631 = distinct !DILexicalBlock(scope: !1632, file: !13, line: 887, column: 113)
!1632 = distinct !DILexicalBlock(scope: !1633, file: !13, line: 887, column: 82)
!1633 = distinct !DILexicalBlock(scope: !1629, file: !13, line: 887, column: 59)
!1634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fileno", scope: !1635, file: !13, line: 895, type: !50)
!1635 = distinct !DILexicalBlock(scope: !1636, file: !13, line: 893, column: 33)
!1636 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 893, column: 9)
!1637 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1638, file: !13, line: 911, type: !56)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !13, line: 910, column: 14)
!1639 = distinct !DILexicalBlock(scope: !1635, file: !13, line: 901, column: 13)
!1640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1641, file: !13, line: 912, type: !50)
!1641 = distinct !DILexicalBlock(scope: !1638, file: !13, line: 912, column: 16)
!1642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1643, file: !13, line: 921, type: !50)
!1643 = distinct !DILexicalBlock(scope: !1644, file: !13, line: 921, column: 20)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !13, line: 920, column: 22)
!1645 = distinct !DILexicalBlock(scope: !1638, file: !13, line: 918, column: 17)
!1646 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1647, file: !13, line: 921, type: !50)
!1647 = distinct !DILexicalBlock(scope: !1648, file: !13, line: 921, column: 135)
!1648 = distinct !DILexicalBlock(scope: !1649, file: !13, line: 921, column: 99)
!1649 = distinct !DILexicalBlock(scope: !1643, file: !13, line: 921, column: 76)
!1650 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "locale_module", scope: !1651, file: !13, line: 925, type: !50)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !13, line: 924, column: 65)
!1652 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 924, column: 9)
!1653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1654, file: !13, line: 930, type: !50)
!1654 = distinct !DILexicalBlock(scope: !1651, file: !13, line: 930, column: 12)
!1655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1656, file: !13, line: 947, type: !50)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !13, line: 947, column: 16)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !13, line: 946, column: 18)
!1658 = distinct !DILexicalBlock(scope: !1651, file: !13, line: 931, column: 13)
!1659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1660, file: !13, line: 947, type: !50)
!1660 = distinct !DILexicalBlock(scope: !1661, file: !13, line: 947, column: 131)
!1661 = distinct !DILexicalBlock(scope: !1662, file: !13, line: 947, column: 95)
!1662 = distinct !DILexicalBlock(scope: !1656, file: !13, line: 947, column: 72)
!1663 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1664, file: !13, line: 967, type: !50)
!1664 = distinct !DILexicalBlock(scope: !1665, file: !13, line: 967, column: 12)
!1665 = distinct !DILexicalBlock(scope: !1666, file: !13, line: 966, column: 35)
!1666 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 966, column: 9)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1668, file: !13, line: 967, type: !50)
!1668 = distinct !DILexicalBlock(scope: !1669, file: !13, line: 967, column: 127)
!1669 = distinct !DILexicalBlock(scope: !1670, file: !13, line: 967, column: 91)
!1670 = distinct !DILexicalBlock(scope: !1664, file: !13, line: 967, column: 68)
!1671 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1672, file: !13, line: 996, type: !107)
!1672 = distinct !DILexicalBlock(scope: !1673, file: !13, line: 996, column: 29)
!1673 = distinct !DILexicalBlock(scope: !1674, file: !13, line: 996, column: 13)
!1674 = distinct !DILexicalBlock(scope: !1675, file: !13, line: 992, column: 47)
!1675 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 992, column: 9)
!1676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1672, file: !13, line: 996, type: !107)
!1677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1678, file: !13, line: 996, type: !456)
!1678 = distinct !DILexicalBlock(scope: !1672, file: !13, line: 996, column: 1692)
!1679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1678, file: !13, line: 996, type: !56)
!1680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1681, file: !13, line: 1009, type: !50)
!1681 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1009, column: 8)
!1682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "incrementalDecoder", scope: !1683, file: !13, line: 1019, type: !50)
!1683 = distinct !DILexicalBlock(scope: !1684, file: !13, line: 1018, column: 34)
!1684 = distinct !DILexicalBlock(scope: !1685, file: !13, line: 1018, column: 13)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !13, line: 1012, column: 17)
!1686 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1012, column: 9)
!1687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1688, file: !13, line: 1024, type: !50)
!1688 = distinct !DILexicalBlock(scope: !1683, file: !13, line: 1024, column: 16)
!1689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1690, file: !13, line: 1024, type: !50)
!1690 = distinct !DILexicalBlock(scope: !1691, file: !13, line: 1024, column: 129)
!1691 = distinct !DILexicalBlock(scope: !1692, file: !13, line: 1024, column: 94)
!1692 = distinct !DILexicalBlock(scope: !1688, file: !13, line: 1024, column: 71)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1694, file: !13, line: 1034, type: !50)
!1694 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1034, column: 8)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !1696, file: !13, line: 1051, type: !1701)
!1696 = distinct !DILexicalBlock(scope: !1697, file: !13, line: 1050, column: 86)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !13, line: 1050, column: 18)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !13, line: 1044, column: 13)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !13, line: 1037, column: 17)
!1700 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1037, column: 9)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64, align: 64)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "encodefuncentry", file: !13, line: 830, baseType: !1703)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 827, size: 128, align: 64, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1703, file: !13, line: 828, baseType: !40, size: 64, align: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "encodefunc", scope: !1703, file: !13, line: 829, baseType: !720, size: 64, align: 64, offset: 64)
!1707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1708, file: !13, line: 1060, type: !50)
!1708 = distinct !DILexicalBlock(scope: !1699, file: !13, line: 1060, column: 12)
!1709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1710, file: !13, line: 1060, type: !50)
!1710 = distinct !DILexicalBlock(scope: !1711, file: !13, line: 1060, column: 99)
!1711 = distinct !DILexicalBlock(scope: !1708, file: !13, line: 1060, column: 65)
!1712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1713, file: !13, line: 1064, type: !50)
!1713 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1064, column: 8)
!1714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1715, file: !13, line: 1083, type: !50)
!1715 = distinct !DILexicalBlock(scope: !1716, file: !13, line: 1083, column: 16)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !13, line: 1080, column: 18)
!1717 = distinct !DILexicalBlock(scope: !1718, file: !13, line: 1074, column: 13)
!1718 = distinct !DILexicalBlock(scope: !1719, file: !13, line: 1071, column: 69)
!1719 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1069, column: 9)
!1720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1721, file: !13, line: 1090, type: !50)
!1721 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1090, column: 8)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookieObj", scope: !1723, file: !13, line: 1099, type: !50)
!1723 = distinct !DILexicalBlock(scope: !1724, file: !13, line: 1098, column: 42)
!1724 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1098, column: 9)
!1725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !1723, file: !13, line: 1100, type: !56)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1727, file: !13, line: 1109, type: !50)
!1727 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1109, column: 12)
!1728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1729, file: !13, line: 1120, type: !50)
!1729 = distinct !DILexicalBlock(scope: !1730, file: !13, line: 1120, column: 16)
!1730 = distinct !DILexicalBlock(scope: !1731, file: !13, line: 1114, column: 23)
!1731 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1114, column: 13)
!1732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1733, file: !13, line: 1128, type: !50)
!1733 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1128, column: 8)
!1734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1735, file: !13, line: 1128, type: !50)
!1735 = distinct !DILexicalBlock(scope: !1736, file: !13, line: 1128, column: 102)
!1736 = distinct !DILexicalBlock(scope: !1733, file: !13, line: 1128, column: 68)
!1737 = !DISubprogram(name: "ascii_encode", scope: !13, file: !13, line: 750, type: !1116, isLocal: true, isDefinition: true, scopeLine: 751, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @ascii_encode, variables: !1738)
!1738 = !{!1739, !1740}
!1739 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1737, file: !13, line: 750, type: !695)
!1740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1737, file: !13, line: 750, type: !50)
!1741 = !DISubprogram(name: "latin1_encode", scope: !13, file: !13, line: 820, type: !1116, isLocal: true, isDefinition: true, scopeLine: 821, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @latin1_encode, variables: !1742)
!1742 = !{!1743, !1744}
!1743 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1741, file: !13, line: 820, type: !695)
!1744 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1741, file: !13, line: 820, type: !50)
!1745 = !DISubprogram(name: "utf8_encode", scope: !13, file: !13, line: 814, type: !1116, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf8_encode, variables: !1746)
!1746 = !{!1747, !1748}
!1747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1745, file: !13, line: 814, type: !695)
!1748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1745, file: !13, line: 814, type: !50)
!1749 = !DISubprogram(name: "utf16be_encode", scope: !13, file: !13, line: 756, type: !1116, isLocal: true, isDefinition: true, scopeLine: 757, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf16be_encode, variables: !1750)
!1750 = !{!1751, !1752}
!1751 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1749, file: !13, line: 756, type: !695)
!1752 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1749, file: !13, line: 756, type: !50)
!1753 = !DISubprogram(name: "utf16le_encode", scope: !13, file: !13, line: 763, type: !1116, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf16le_encode, variables: !1754)
!1754 = !{!1755, !1756}
!1755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1753, file: !13, line: 763, type: !695)
!1756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1753, file: !13, line: 763, type: !50)
!1757 = !DISubprogram(name: "utf16_encode", scope: !13, file: !13, line: 770, type: !1116, isLocal: true, isDefinition: true, scopeLine: 771, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf16_encode, variables: !1758)
!1758 = !{!1759, !1760}
!1759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1757, file: !13, line: 770, type: !695)
!1760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1757, file: !13, line: 770, type: !50)
!1761 = !DISubprogram(name: "utf32be_encode", scope: !13, file: !13, line: 785, type: !1116, isLocal: true, isDefinition: true, scopeLine: 786, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf32be_encode, variables: !1762)
!1762 = !{!1763, !1764}
!1763 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1761, file: !13, line: 785, type: !695)
!1764 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1761, file: !13, line: 785, type: !50)
!1765 = !DISubprogram(name: "utf32le_encode", scope: !13, file: !13, line: 792, type: !1116, isLocal: true, isDefinition: true, scopeLine: 793, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf32le_encode, variables: !1766)
!1766 = !{!1767, !1768}
!1767 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1765, file: !13, line: 792, type: !695)
!1768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1765, file: !13, line: 792, type: !50)
!1769 = !DISubprogram(name: "utf32_encode", scope: !13, file: !13, line: 799, type: !1116, isLocal: true, isDefinition: true, scopeLine: 800, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf32_encode, variables: !1770)
!1770 = !{!1771, !1772}
!1771 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1769, file: !13, line: 799, type: !695)
!1772 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1769, file: !13, line: 799, type: !50)
!1773 = !{!1774, !1776, !1777, !1778, !1782, !1787, !1791, !1795, !1799, !1803, !1806, !1810, !1814, !1818, !1822, !1823, !1831, !1835, !1836, !1837, !1841, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1862, !1866, !1867, !1871, !1872}
!1774 = !DIGlobalVariable(name: "PyTextIOBase_Type", scope: !0, file: !13, line: 158, type: !1775, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyTextIOBase_Type)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !18, line: 422, baseType: !31)
!1776 = !DIGlobalVariable(name: "PyIncrementalNewlineDecoder_Type", scope: !0, file: !13, line: 608, type: !1775, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyIncrementalNewlineDecoder_Type)
!1777 = !DIGlobalVariable(name: "PyTextIOWrapper_Type", scope: !0, file: !13, line: 2773, type: !1775, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyTextIOWrapper_Type)
!1778 = !DIGlobalVariable(name: "textiobase_doc", scope: !0, file: !13, line: 37, type: !1779, isLocal: true, isDefinition: true, variable: [209 x i8]* @textiobase_doc)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1672, align: 8, elements: !1780)
!1780 = !{!1781}
!1781 = !DISubrange(count: 209)
!1782 = !DIGlobalVariable(name: "textiobase_methods", scope: !0, file: !13, line: 143, type: !1783, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMethodDef]* @textiobase_methods)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 1280, align: 64, elements: !1785)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !294, line: 47, baseType: !293)
!1785 = !{!1786}
!1786 = !DISubrange(count: 5)
!1787 = !DIGlobalVariable(name: "textiobase_detach_doc", scope: !0, file: !13, line: 54, type: !1788, isLocal: true, isDefinition: true, variable: [151 x i8]* @textiobase_detach_doc)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1208, align: 8, elements: !1789)
!1789 = !{!1790}
!1790 = !DISubrange(count: 151)
!1791 = !DIGlobalVariable(name: "textiobase_read_doc", scope: !0, file: !13, line: 67, type: !1792, isLocal: true, isDefinition: true, variable: [156 x i8]* @textiobase_read_doc)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1248, align: 8, elements: !1793)
!1793 = !{!1794}
!1794 = !DISubrange(count: 156)
!1795 = !DIGlobalVariable(name: "textiobase_readline_doc", scope: !0, file: !13, line: 80, type: !1796, isLocal: true, isDefinition: true, variable: [80 x i8]* @textiobase_readline_doc)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 640, align: 8, elements: !1797)
!1797 = !{!1798}
!1798 = !DISubrange(count: 80)
!1799 = !DIGlobalVariable(name: "textiobase_write_doc", scope: !0, file: !13, line: 92, type: !1800, isLocal: true, isDefinition: true, variable: [119 x i8]* @textiobase_write_doc)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 952, align: 8, elements: !1801)
!1801 = !{!1802}
!1802 = !DISubrange(count: 119)
!1803 = !DIGlobalVariable(name: "textiobase_getset", scope: !0, file: !13, line: 151, type: !1804, isLocal: true, isDefinition: true, variable: [4 x %struct.PyGetSetDef]* @textiobase_getset)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 1280, align: 64, elements: !682)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !314, line: 17, baseType: !313)
!1806 = !DIGlobalVariable(name: "textiobase_encoding_doc", scope: !0, file: !13, line: 104, type: !1807, isLocal: true, isDefinition: true, variable: [59 x i8]* @textiobase_encoding_doc)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 472, align: 8, elements: !1808)
!1808 = !{!1809}
!1809 = !DISubrange(count: 59)
!1810 = !DIGlobalVariable(name: "textiobase_newlines_doc", scope: !0, file: !13, line: 116, type: !1811, isLocal: true, isDefinition: true, variable: [123 x i8]* @textiobase_newlines_doc)
!1811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 984, align: 8, elements: !1812)
!1812 = !{!1813}
!1813 = !DISubrange(count: 123)
!1814 = !DIGlobalVariable(name: "textiobase_errors_doc", scope: !0, file: !13, line: 130, type: !1815, isLocal: true, isDefinition: true, variable: [75 x i8]* @textiobase_errors_doc)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 600, align: 8, elements: !1816)
!1816 = !{!1817}
!1817 = !DISubrange(count: 75)
!1818 = !DIGlobalVariable(name: "incrementalnewlinedecoder_doc", scope: !0, file: !13, line: 213, type: !1819, isLocal: true, isDefinition: true, variable: [420 x i8]* @incrementalnewlinedecoder_doc)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 3360, align: 8, elements: !1820)
!1820 = !{!1821}
!1821 = !DISubrange(count: 420)
!1822 = !DIGlobalVariable(name: "incrementalnewlinedecoder_methods", scope: !0, file: !13, line: 595, type: !1783, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMethodDef]* @incrementalnewlinedecoder_methods)
!1823 = !DIGlobalVariable(name: "PyId_setstate", scope: !0, file: !13, line: 31, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_setstate)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !18, line: 144, baseType: !1825)
!1825 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !18, line: 140, size: 192, align: 64, elements: !1826)
!1826 = !{!1827, !1829, !1830}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1825, file: !18, line: 141, baseType: !1828, size: 64, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64, align: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1825, file: !18, line: 142, baseType: !40, size: 64, align: 64, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1825, file: !18, line: 143, baseType: !50, size: 64, align: 64, offset: 128)
!1831 = !DIGlobalVariable(name: "incrementalnewlinedecoder_getset", scope: !0, file: !13, line: 603, type: !1832, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @incrementalnewlinedecoder_getset)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 640, align: 64, elements: !1833)
!1833 = !{!1834}
!1834 = !DISubrange(count: 2)
!1835 = !DIGlobalVariable(name: "PyId_name", scope: !0, file: !13, line: 22, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_name)
!1836 = !DIGlobalVariable(name: "PyId_mode", scope: !0, file: !13, line: 21, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_mode)
!1837 = !DIGlobalVariable(name: "textiowrapper_doc", scope: !0, file: !13, line: 652, type: !1838, isLocal: true, isDefinition: true, variable: [1345 x i8]* @textiowrapper_doc)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 10760, align: 8, elements: !1839)
!1839 = !{!1840}
!1840 = !DISubrange(count: 1345)
!1841 = !DIGlobalVariable(name: "textiowrapper_methods", scope: !0, file: !13, line: 2732, type: !1842, isLocal: true, isDefinition: true, variable: [16 x %struct.PyMethodDef]* @textiowrapper_methods)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 4096, align: 64, elements: !1843)
!1843 = !{!1844}
!1844 = !DISubrange(count: 16)
!1845 = !DIGlobalVariable(name: "PyId_replace", scope: !0, file: !13, line: 27, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_replace)
!1846 = !DIGlobalVariable(name: "PyId_reset", scope: !0, file: !13, line: 28, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_reset)
!1847 = !DIGlobalVariable(name: "PyId_read", scope: !0, file: !13, line: 24, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_read)
!1848 = !DIGlobalVariable(name: "PyId_flush", scope: !0, file: !13, line: 18, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_flush)
!1849 = !DIGlobalVariable(name: "PyId__dealloc_warn", scope: !0, file: !13, line: 15, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId__dealloc_warn)
!1850 = !DIGlobalVariable(name: "PyId_close", scope: !0, file: !13, line: 14, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_close)
!1851 = !DIGlobalVariable(name: "PyId_fileno", scope: !0, file: !13, line: 17, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_fileno)
!1852 = !DIGlobalVariable(name: "PyId_seekable", scope: !0, file: !13, line: 30, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_seekable)
!1853 = !DIGlobalVariable(name: "PyId_readable", scope: !0, file: !13, line: 26, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_readable)
!1854 = !DIGlobalVariable(name: "PyId_writable", scope: !0, file: !13, line: 33, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_writable)
!1855 = !DIGlobalVariable(name: "PyId_isatty", scope: !0, file: !13, line: 20, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_isatty)
!1856 = !DIGlobalVariable(name: "PyId_tell", scope: !0, file: !13, line: 32, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_tell)
!1857 = !DIGlobalVariable(name: "PyId_seek", scope: !0, file: !13, line: 29, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_seek)
!1858 = !DIGlobalVariable(name: "PyId_decode", scope: !0, file: !13, line: 16, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_decode)
!1859 = !DIGlobalVariable(name: "textiowrapper_members", scope: !0, file: !13, line: 2753, type: !1860, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMemberDef]* @textiowrapper_members)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 1600, align: 64, elements: !1785)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !304, line: 24, baseType: !303)
!1862 = !DIGlobalVariable(name: "textiowrapper_getset", scope: !0, file: !13, line: 2761, type: !1863, isLocal: true, isDefinition: true, variable: [6 x %struct.PyGetSetDef]* @textiowrapper_getset)
!1863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 1920, align: 64, elements: !1864)
!1864 = !{!1865}
!1865 = !DISubrange(count: 6)
!1866 = !DIGlobalVariable(name: "PyId_getpreferredencoding", scope: !0, file: !13, line: 19, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_getpreferredencoding)
!1867 = !DIGlobalVariable(name: "encodefuncs", scope: !0, file: !13, line: 832, type: !1868, isLocal: true, isDefinition: true, variable: [10 x %struct.encodefuncentry]* @encodefuncs)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 1280, align: 64, elements: !1869)
!1869 = !{!1870}
!1870 = !DISubrange(count: 10)
!1871 = !DIGlobalVariable(name: "PyId_raw", scope: !0, file: !13, line: 23, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_raw)
!1872 = !DIGlobalVariable(name: "PyId_read1", scope: !0, file: !13, line: 25, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_read1)
!1873 = !{i32 2, !"Dwarf Version", i32 4}
!1874 = !{i32 2, !"Debug Info Version", i32 3}
!1875 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1876 = !{!1877, !1877, i64 0}
!1877 = !{!"any pointer", !1878, i64 0}
!1878 = !{!"omnipotent char", !1879, i64 0}
!1879 = !{!"Simple C/C++ TBAA"}
!1880 = !DIExpression()
!1881 = !DILocation(line: 298, column: 47, scope: !459)
!1882 = !DILocation(line: 299, column: 47, scope: !459)
!1883 = !{!1884, !1884, i64 0}
!1884 = !{!"int", !1878, i64 0}
!1885 = !DILocation(line: 299, column: 58, scope: !459)
!1886 = !DILocation(line: 301, column: 5, scope: !459)
!1887 = !DILocation(line: 301, column: 15, scope: !459)
!1888 = !DILocation(line: 302, column: 5, scope: !459)
!1889 = !DILocation(line: 302, column: 16, scope: !459)
!1890 = !DILocation(line: 303, column: 5, scope: !459)
!1891 = !DILocation(line: 303, column: 23, scope: !459)
!1892 = !DILocation(line: 303, column: 51, scope: !459)
!1893 = !DILocation(line: 303, column: 30, scope: !459)
!1894 = !DILocation(line: 305, column: 9, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !459, file: !13, line: 305, column: 9)
!1896 = !DILocation(line: 305, column: 15, scope: !1895)
!1897 = !{!1898, !1877, i64 16}
!1898 = !{!"", !1899, i64 0, !1877, i64 16, !1877, i64 24, !1884, i64 32, !1884, i64 32, !1884, i64 32}
!1899 = !{!"_object", !1900, i64 0, !1877, i64 8}
!1900 = !{!"long", !1878, i64 0}
!1901 = !DILocation(line: 305, column: 23, scope: !1895)
!1902 = !DILocation(line: 305, column: 9, scope: !459)
!1903 = !DILocation(line: 306, column: 25, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1895, file: !13, line: 305, column: 38)
!1905 = !DILocation(line: 306, column: 9, scope: !1904)
!1906 = !DILocation(line: 308, column: 9, scope: !1904)
!1907 = !DILocation(line: 312, column: 9, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !459, file: !13, line: 312, column: 9)
!1909 = !DILocation(line: 312, column: 15, scope: !1908)
!1910 = !DILocation(line: 312, column: 23, scope: !1908)
!1911 = !DILocation(line: 312, column: 9, scope: !459)
!1912 = !DILocation(line: 313, column: 45, scope: !1913)
!1913 = distinct !DILexicalBlock(scope: !1908, file: !13, line: 312, column: 45)
!1914 = !DILocation(line: 313, column: 51, scope: !1913)
!1915 = !DILocation(line: 314, column: 13, scope: !1913)
!1916 = !DILocation(line: 314, column: 31, scope: !1913)
!1917 = !DILocation(line: 314, column: 38, scope: !1913)
!1918 = !DILocation(line: 313, column: 18, scope: !1913)
!1919 = !DILocation(line: 313, column: 16, scope: !1913)
!1920 = !DILocation(line: 315, column: 5, scope: !1913)
!1921 = !DILocation(line: 317, column: 18, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1908, file: !13, line: 316, column: 10)
!1923 = !DILocation(line: 317, column: 16, scope: !1922)
!1924 = !DILocation(line: 318, column: 25, scope: !1922)
!1925 = !DILocation(line: 318, column: 35, scope: !1922)
!1926 = !DILocation(line: 318, column: 44, scope: !1922)
!1927 = !{!1899, !1900, i64 0}
!1928 = !DILocation(line: 321, column: 23, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !459, file: !13, line: 321, column: 9)
!1930 = !DILocation(line: 321, column: 9, scope: !1929)
!1931 = !DILocation(line: 321, column: 31, scope: !1929)
!1932 = !DILocation(line: 321, column: 9, scope: !459)
!1933 = !DILocation(line: 322, column: 9, scope: !1929)
!1934 = !DILocation(line: 324, column: 66, scope: !459)
!1935 = !DILocation(line: 324, column: 48, scope: !459)
!1936 = !DILocation(line: 324, column: 76, scope: !459)
!1937 = !{!1938, !1900, i64 16}
!1938 = !{!"", !1899, i64 0, !1900, i64 16, !1900, i64 24, !1939, i64 32, !1877, i64 40}
!1939 = !{!"", !1884, i64 0, !1884, i64 0, !1884, i64 0, !1884, i64 0, !1884, i64 0, !1884, i64 1}
!1940 = !DILocation(line: 324, column: 16, scope: !459)
!1941 = !{!1900, !1900, i64 0}
!1942 = !DILocation(line: 325, column: 9, scope: !469)
!1943 = !DILocation(line: 325, column: 15, scope: !469)
!1944 = !DILocation(line: 325, column: 25, scope: !469)
!1945 = !DILocation(line: 325, column: 29, scope: !1946)
!1946 = !DILexicalBlockFile(scope: !469, file: !13, discriminator: 1)
!1947 = !DILocation(line: 325, column: 35, scope: !469)
!1948 = !DILocation(line: 325, column: 38, scope: !1949)
!1949 = !DILexicalBlockFile(scope: !469, file: !13, discriminator: 2)
!1950 = !DILocation(line: 325, column: 49, scope: !469)
!1951 = !DILocation(line: 325, column: 9, scope: !459)
!1952 = !DILocation(line: 327, column: 9, scope: !468)
!1953 = !DILocation(line: 327, column: 13, scope: !468)
!1954 = !DILocation(line: 328, column: 9, scope: !468)
!1955 = !DILocation(line: 328, column: 19, scope: !468)
!1956 = !DILocation(line: 329, column: 9, scope: !468)
!1957 = !DILocation(line: 329, column: 15, scope: !468)
!1958 = !DILocation(line: 331, column: 34, scope: !468)
!1959 = !DILocation(line: 331, column: 45, scope: !468)
!1960 = !DILocation(line: 332, column: 96, scope: !468)
!1961 = !DILocation(line: 332, column: 80, scope: !468)
!1962 = !DILocation(line: 332, column: 105, scope: !468)
!1963 = !DILocation(line: 332, column: 111, scope: !468)
!1964 = !DILocation(line: 332, column: 50, scope: !468)
!1965 = !DILocation(line: 332, column: 50, scope: !1966)
!1966 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 1)
!1967 = !DILocation(line: 332, column: 178, scope: !1968)
!1968 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 2)
!1969 = !DILocation(line: 332, column: 160, scope: !468)
!1970 = !DILocation(line: 332, column: 188, scope: !468)
!1971 = !DILocation(line: 332, column: 194, scope: !468)
!1972 = !DILocation(line: 332, column: 200, scope: !468)
!1973 = !DILocation(line: 332, column: 130, scope: !468)
!1974 = !DILocation(line: 332, column: 130, scope: !1975)
!1975 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 3)
!1976 = !DILocation(line: 332, column: 285, scope: !1977)
!1977 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 4)
!1978 = !DILocation(line: 332, column: 267, scope: !468)
!1979 = !DILocation(line: 332, column: 295, scope: !468)
!1980 = !DILocation(line: 332, column: 301, scope: !468)
!1981 = !DILocation(line: 332, column: 307, scope: !468)
!1982 = !DILocation(line: 332, column: 237, scope: !468)
!1983 = !DILocation(line: 332, column: 50, scope: !1984)
!1984 = !DILexicalBlockFile(scope: !1985, file: !13, discriminator: 6)
!1985 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 5)
!1986 = !DILocation(line: 331, column: 20, scope: !468)
!1987 = !DILocation(line: 331, column: 18, scope: !468)
!1988 = !DILocation(line: 333, column: 13, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !468, file: !13, line: 333, column: 13)
!1990 = !DILocation(line: 333, column: 22, scope: !1989)
!1991 = !DILocation(line: 333, column: 13, scope: !468)
!1992 = !DILocation(line: 334, column: 13, scope: !1989)
!1993 = !DILocation(line: 335, column: 64, scope: !468)
!1994 = !DILocation(line: 335, column: 46, scope: !468)
!1995 = !DILocation(line: 335, column: 76, scope: !468)
!1996 = !DILocation(line: 335, column: 82, scope: !468)
!1997 = !DILocation(line: 335, column: 14, scope: !468)
!1998 = !DILocation(line: 336, column: 49, scope: !468)
!1999 = !DILocation(line: 336, column: 32, scope: !468)
!2000 = !DILocation(line: 336, column: 61, scope: !468)
!2001 = !DILocation(line: 336, column: 67, scope: !468)
!2002 = !DILocation(line: 336, column: 30, scope: !468)
!2003 = !DILocation(line: 336, column: 125, scope: !1966)
!2004 = !DILocation(line: 336, column: 109, scope: !468)
!2005 = !DILocation(line: 336, column: 136, scope: !468)
!2006 = !DILocation(line: 336, column: 142, scope: !468)
!2007 = !DILocation(line: 336, column: 79, scope: !468)
!2008 = !DILocation(line: 336, column: 177, scope: !1975)
!2009 = !DILocation(line: 336, column: 160, scope: !468)
!2010 = !DILocation(line: 336, column: 187, scope: !468)
!2011 = !DILocation(line: 336, column: 152, scope: !468)
!2012 = !DILocation(line: 336, column: 230, scope: !1977)
!2013 = !DILocation(line: 336, column: 204, scope: !468)
!2014 = !DILocation(line: 336, column: 240, scope: !468)
!2015 = !DILocation(line: 336, column: 196, scope: !468)
!2016 = !DILocation(line: 336, column: 30, scope: !1984)
!2017 = !DILocation(line: 336, column: 287, scope: !1968)
!2018 = !DILocation(line: 336, column: 267, scope: !468)
!2019 = !DILocation(line: 336, column: 299, scope: !468)
!2020 = !DILocation(line: 336, column: 304, scope: !468)
!2021 = !DILocation(line: 336, column: 13, scope: !2022)
!2022 = !DILexicalBlockFile(scope: !2023, file: !13, discriminator: 8)
!2023 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 7)
!2024 = !DILocation(line: 337, column: 9, scope: !468)
!2025 = !DILocation(line: 337, column: 23, scope: !2026)
!2026 = !DILexicalBlockFile(scope: !2027, file: !13, discriminator: 1)
!2027 = distinct !DILexicalBlock(scope: !468, file: !13, line: 337, column: 12)
!2028 = !DILocation(line: 337, column: 14, scope: !2027)
!2029 = !DILocation(line: 337, column: 108, scope: !2030)
!2030 = !DILexicalBlockFile(scope: !2031, file: !13, discriminator: 3)
!2031 = distinct !DILexicalBlock(scope: !2032, file: !13, line: 337, column: 59)
!2032 = distinct !DILexicalBlock(scope: !2027, file: !13, line: 337, column: 30)
!2033 = !DILocation(line: 337, column: 91, scope: !2031)
!2034 = !DILocation(line: 337, column: 120, scope: !2031)
!2035 = !DILocation(line: 337, column: 126, scope: !2031)
!2036 = !DILocation(line: 337, column: 89, scope: !2031)
!2037 = !DILocation(line: 337, column: 184, scope: !2038)
!2038 = !DILexicalBlockFile(scope: !2031, file: !13, discriminator: 5)
!2039 = !DILocation(line: 337, column: 168, scope: !2031)
!2040 = !DILocation(line: 337, column: 195, scope: !2031)
!2041 = !DILocation(line: 337, column: 201, scope: !2031)
!2042 = !DILocation(line: 337, column: 138, scope: !2031)
!2043 = !DILocation(line: 337, column: 236, scope: !2044)
!2044 = !DILexicalBlockFile(scope: !2031, file: !13, discriminator: 7)
!2045 = !DILocation(line: 337, column: 219, scope: !2031)
!2046 = !DILocation(line: 337, column: 246, scope: !2031)
!2047 = !DILocation(line: 337, column: 211, scope: !2031)
!2048 = !DILocation(line: 337, column: 289, scope: !2049)
!2049 = !DILexicalBlockFile(scope: !2031, file: !13, discriminator: 8)
!2050 = !DILocation(line: 337, column: 263, scope: !2031)
!2051 = !DILocation(line: 337, column: 299, scope: !2031)
!2052 = !DILocation(line: 337, column: 255, scope: !2031)
!2053 = !DILocation(line: 337, column: 89, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !2055, file: !13, discriminator: 10)
!2055 = !DILexicalBlockFile(scope: !2031, file: !13, discriminator: 9)
!2056 = !DILocation(line: 337, column: 346, scope: !2057)
!2057 = !DILexicalBlockFile(scope: !2031, file: !13, discriminator: 6)
!2058 = !DILocation(line: 337, column: 326, scope: !2031)
!2059 = !DILocation(line: 337, column: 358, scope: !2031)
!2060 = !DILocation(line: 337, column: 363, scope: !2031)
!2061 = !DILocation(line: 337, column: 61, scope: !2062)
!2062 = !DILexicalBlockFile(scope: !2063, file: !13, discriminator: 12)
!2063 = !DILexicalBlockFile(scope: !2031, file: !13, discriminator: 11)
!2064 = !DILocation(line: 337, column: 378, scope: !2031)
!2065 = !{!1878, !1878, i64 0}
!2066 = !DILocation(line: 337, column: 397, scope: !2031)
!2067 = !DILocation(line: 337, column: 482, scope: !2068)
!2068 = !DILexicalBlockFile(scope: !2069, file: !13, discriminator: 4)
!2069 = distinct !DILexicalBlock(scope: !2032, file: !13, line: 337, column: 433)
!2070 = !DILocation(line: 337, column: 465, scope: !2069)
!2071 = !DILocation(line: 337, column: 494, scope: !2069)
!2072 = !DILocation(line: 337, column: 500, scope: !2069)
!2073 = !DILocation(line: 337, column: 463, scope: !2069)
!2074 = !DILocation(line: 337, column: 558, scope: !2075)
!2075 = !DILexicalBlockFile(scope: !2069, file: !13, discriminator: 14)
!2076 = !DILocation(line: 337, column: 542, scope: !2069)
!2077 = !DILocation(line: 337, column: 569, scope: !2069)
!2078 = !DILocation(line: 337, column: 575, scope: !2069)
!2079 = !DILocation(line: 337, column: 512, scope: !2069)
!2080 = !DILocation(line: 337, column: 610, scope: !2081)
!2081 = !DILexicalBlockFile(scope: !2069, file: !13, discriminator: 16)
!2082 = !DILocation(line: 337, column: 593, scope: !2069)
!2083 = !DILocation(line: 337, column: 620, scope: !2069)
!2084 = !DILocation(line: 337, column: 585, scope: !2069)
!2085 = !DILocation(line: 337, column: 663, scope: !2086)
!2086 = !DILexicalBlockFile(scope: !2069, file: !13, discriminator: 17)
!2087 = !DILocation(line: 337, column: 637, scope: !2069)
!2088 = !DILocation(line: 337, column: 673, scope: !2069)
!2089 = !DILocation(line: 337, column: 629, scope: !2069)
!2090 = !DILocation(line: 337, column: 463, scope: !2091)
!2091 = !DILexicalBlockFile(scope: !2092, file: !13, discriminator: 19)
!2092 = !DILexicalBlockFile(scope: !2069, file: !13, discriminator: 18)
!2093 = !DILocation(line: 337, column: 720, scope: !2094)
!2094 = !DILexicalBlockFile(scope: !2069, file: !13, discriminator: 15)
!2095 = !DILocation(line: 337, column: 700, scope: !2069)
!2096 = !DILocation(line: 337, column: 732, scope: !2069)
!2097 = !DILocation(line: 337, column: 737, scope: !2069)
!2098 = !DILocation(line: 337, column: 436, scope: !2099)
!2099 = !DILexicalBlockFile(scope: !2100, file: !13, discriminator: 21)
!2100 = !DILexicalBlockFile(scope: !2069, file: !13, discriminator: 20)
!2101 = !DILocation(line: 337, column: 435, scope: !2069)
!2102 = !DILocation(line: 337, column: 752, scope: !2069)
!2103 = !{!2104, !2104, i64 0}
!2104 = !{!"short", !1878, i64 0}
!2105 = !DILocation(line: 337, column: 771, scope: !2069)
!2106 = !DILocation(line: 337, column: 852, scope: !2107)
!2107 = !DILexicalBlockFile(scope: !2108, file: !13, discriminator: 2)
!2108 = distinct !DILexicalBlock(scope: !2032, file: !13, line: 337, column: 789)
!2109 = !DILocation(line: 337, column: 835, scope: !2108)
!2110 = !DILocation(line: 337, column: 864, scope: !2108)
!2111 = !DILocation(line: 337, column: 870, scope: !2108)
!2112 = !DILocation(line: 337, column: 833, scope: !2108)
!2113 = !DILocation(line: 337, column: 928, scope: !2114)
!2114 = !DILexicalBlockFile(scope: !2108, file: !13, discriminator: 23)
!2115 = !DILocation(line: 337, column: 912, scope: !2108)
!2116 = !DILocation(line: 337, column: 939, scope: !2108)
!2117 = !DILocation(line: 337, column: 945, scope: !2108)
!2118 = !DILocation(line: 337, column: 882, scope: !2108)
!2119 = !DILocation(line: 337, column: 980, scope: !2120)
!2120 = !DILexicalBlockFile(scope: !2108, file: !13, discriminator: 25)
!2121 = !DILocation(line: 337, column: 963, scope: !2108)
!2122 = !DILocation(line: 337, column: 990, scope: !2108)
!2123 = !DILocation(line: 337, column: 955, scope: !2108)
!2124 = !DILocation(line: 337, column: 1033, scope: !2125)
!2125 = !DILexicalBlockFile(scope: !2108, file: !13, discriminator: 26)
!2126 = !DILocation(line: 337, column: 1007, scope: !2108)
!2127 = !DILocation(line: 337, column: 1043, scope: !2108)
!2128 = !DILocation(line: 337, column: 999, scope: !2108)
!2129 = !DILocation(line: 337, column: 833, scope: !2130)
!2130 = !DILexicalBlockFile(scope: !2131, file: !13, discriminator: 28)
!2131 = !DILexicalBlockFile(scope: !2108, file: !13, discriminator: 27)
!2132 = !DILocation(line: 337, column: 1090, scope: !2133)
!2133 = !DILexicalBlockFile(scope: !2108, file: !13, discriminator: 24)
!2134 = !DILocation(line: 337, column: 1070, scope: !2108)
!2135 = !DILocation(line: 337, column: 1102, scope: !2108)
!2136 = !DILocation(line: 337, column: 1107, scope: !2108)
!2137 = !DILocation(line: 337, column: 806, scope: !2138)
!2138 = !DILexicalBlockFile(scope: !2139, file: !13, discriminator: 30)
!2139 = !DILexicalBlockFile(scope: !2108, file: !13, discriminator: 29)
!2140 = !DILocation(line: 337, column: 805, scope: !2108)
!2141 = !DILocation(line: 337, column: 1122, scope: !2108)
!2142 = !DILocation(line: 337, column: 1143, scope: !2032)
!2143 = !DILocation(line: 337, column: 1145, scope: !2144)
!2144 = !DILexicalBlockFile(scope: !2145, file: !13, discriminator: 31)
!2145 = !DILexicalBlockFile(scope: !2146, file: !13, discriminator: 22)
!2146 = !DILexicalBlockFile(scope: !2027, file: !13, discriminator: 13)
!2147 = !DILocation(line: 337, column: 1145, scope: !2148)
!2148 = !DILexicalBlockFile(scope: !2027, file: !13, discriminator: 32)
!2149 = !DILocation(line: 338, column: 16, scope: !468)
!2150 = !DILocation(line: 338, column: 22, scope: !468)
!2151 = !DILocation(line: 338, column: 20, scope: !468)
!2152 = !DILocation(line: 338, column: 62, scope: !468)
!2153 = !DILocation(line: 338, column: 45, scope: !468)
!2154 = !DILocation(line: 338, column: 72, scope: !468)
!2155 = !DILocation(line: 338, column: 78, scope: !468)
!2156 = !DILocation(line: 338, column: 43, scope: !468)
!2157 = !DILocation(line: 338, column: 136, scope: !1966)
!2158 = !DILocation(line: 338, column: 120, scope: !468)
!2159 = !DILocation(line: 338, column: 145, scope: !468)
!2160 = !DILocation(line: 338, column: 151, scope: !468)
!2161 = !DILocation(line: 338, column: 90, scope: !468)
!2162 = !DILocation(line: 338, column: 186, scope: !1975)
!2163 = !DILocation(line: 338, column: 169, scope: !468)
!2164 = !DILocation(line: 338, column: 194, scope: !468)
!2165 = !DILocation(line: 338, column: 161, scope: !468)
!2166 = !DILocation(line: 338, column: 237, scope: !1977)
!2167 = !DILocation(line: 338, column: 211, scope: !468)
!2168 = !DILocation(line: 338, column: 245, scope: !468)
!2169 = !DILocation(line: 338, column: 203, scope: !468)
!2170 = !DILocation(line: 338, column: 43, scope: !1984)
!2171 = !DILocation(line: 338, column: 292, scope: !1968)
!2172 = !DILocation(line: 338, column: 272, scope: !468)
!2173 = !DILocation(line: 338, column: 302, scope: !468)
!2174 = !DILocation(line: 338, column: 307, scope: !468)
!2175 = !DILocation(line: 338, column: 316, scope: !2022)
!2176 = !DILocation(line: 338, column: 323, scope: !468)
!2177 = !DILocation(line: 338, column: 321, scope: !468)
!2178 = !DILocation(line: 338, column: 9, scope: !468)
!2179 = !DILocation(line: 339, column: 9, scope: !468)
!2180 = !DILocation(line: 339, column: 14, scope: !2181)
!2181 = !DILexicalBlockFile(scope: !473, file: !13, discriminator: 1)
!2182 = !DILocation(line: 339, column: 24, scope: !473)
!2183 = !DILocation(line: 339, column: 54, scope: !473)
!2184 = !DILocation(line: 339, column: 71, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !473, file: !13, line: 339, column: 68)
!2186 = !DILocation(line: 339, column: 88, scope: !2185)
!2187 = !DILocation(line: 339, column: 68, scope: !2185)
!2188 = !DILocation(line: 339, column: 98, scope: !2185)
!2189 = !DILocation(line: 339, column: 68, scope: !473)
!2190 = !DILocation(line: 339, column: 68, scope: !2191)
!2191 = !DILexicalBlockFile(scope: !473, file: !13, discriminator: 2)
!2192 = !DILocation(line: 339, column: 129, scope: !2193)
!2193 = !DILexicalBlockFile(scope: !2185, file: !13, discriminator: 3)
!2194 = !DILocation(line: 339, column: 147, scope: !2185)
!2195 = !{!1899, !1877, i64 8}
!2196 = !DILocation(line: 339, column: 157, scope: !2185)
!2197 = !{!2198, !1877, i64 48}
!2198 = !{!"_typeobject", !2199, i64 0, !1877, i64 24, !1900, i64 32, !1900, i64 40, !1877, i64 48, !1877, i64 56, !1877, i64 64, !1877, i64 72, !1877, i64 80, !1877, i64 88, !1877, i64 96, !1877, i64 104, !1877, i64 112, !1877, i64 120, !1877, i64 128, !1877, i64 136, !1877, i64 144, !1877, i64 152, !1877, i64 160, !1900, i64 168, !1877, i64 176, !1877, i64 184, !1877, i64 192, !1877, i64 200, !1900, i64 208, !1877, i64 216, !1877, i64 224, !1877, i64 232, !1877, i64 240, !1877, i64 248, !1877, i64 256, !1877, i64 264, !1877, i64 272, !1877, i64 280, !1900, i64 288, !1877, i64 296, !1877, i64 304, !1877, i64 312, !1877, i64 320, !1877, i64 328, !1877, i64 336, !1877, i64 344, !1877, i64 352, !1877, i64 360, !1877, i64 368, !1877, i64 376, !1884, i64 384, !1877, i64 392}
!2199 = !{!"", !1899, i64 0, !1900, i64 16}
!2200 = !DILocation(line: 339, column: 182, scope: !2185)
!2201 = !DILocation(line: 339, column: 113, scope: !2185)
!2202 = !DILocation(line: 339, column: 201, scope: !1977)
!2203 = !DILocation(line: 339, column: 201, scope: !473)
!2204 = !DILocation(line: 339, column: 201, scope: !2205)
!2205 = !DILexicalBlockFile(scope: !473, file: !13, discriminator: 5)
!2206 = !DILocation(line: 340, column: 18, scope: !468)
!2207 = !DILocation(line: 340, column: 16, scope: !468)
!2208 = !DILocation(line: 341, column: 9, scope: !468)
!2209 = !DILocation(line: 341, column: 15, scope: !468)
!2210 = !DILocation(line: 341, column: 25, scope: !468)
!2211 = !DILocation(line: 342, column: 19, scope: !468)
!2212 = !DILocation(line: 343, column: 5, scope: !469)
!2213 = !DILocation(line: 343, column: 5, scope: !1946)
!2214 = !DILocation(line: 343, column: 5, scope: !468)
!2215 = !DILocation(line: 348, column: 10, scope: !478)
!2216 = !DILocation(line: 348, column: 9, scope: !459)
!2217 = !DILocation(line: 349, column: 13, scope: !476)
!2218 = !DILocation(line: 349, column: 24, scope: !476)
!2219 = !DILocation(line: 350, column: 13, scope: !476)
!2220 = !DILocation(line: 350, column: 105, scope: !2221)
!2221 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 1)
!2222 = !DILocation(line: 350, column: 86, scope: !476)
!2223 = !DILocation(line: 350, column: 116, scope: !476)
!2224 = !DILocation(line: 350, column: 122, scope: !476)
!2225 = !DILocation(line: 350, column: 128, scope: !476)
!2226 = !DILocation(line: 350, column: 56, scope: !476)
!2227 = !DILocation(line: 350, column: 473, scope: !2228)
!2228 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 2)
!2229 = !DILocation(line: 350, column: 484, scope: !476)
!2230 = !DILocation(line: 350, column: 208, scope: !476)
!2231 = !DILocation(line: 350, column: 190, scope: !476)
!2232 = !DILocation(line: 350, column: 219, scope: !476)
!2233 = !DILocation(line: 350, column: 225, scope: !476)
!2234 = !DILocation(line: 350, column: 188, scope: !476)
!2235 = !DILocation(line: 350, column: 284, scope: !2236)
!2236 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 4)
!2237 = !DILocation(line: 350, column: 267, scope: !476)
!2238 = !DILocation(line: 350, column: 294, scope: !476)
!2239 = !DILocation(line: 350, column: 300, scope: !476)
!2240 = !DILocation(line: 350, column: 237, scope: !476)
!2241 = !DILocation(line: 350, column: 336, scope: !2242)
!2242 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 6)
!2243 = !DILocation(line: 350, column: 318, scope: !476)
!2244 = !DILocation(line: 350, column: 345, scope: !476)
!2245 = !DILocation(line: 350, column: 310, scope: !476)
!2246 = !DILocation(line: 350, column: 389, scope: !2247)
!2247 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 7)
!2248 = !DILocation(line: 350, column: 362, scope: !476)
!2249 = !DILocation(line: 350, column: 398, scope: !476)
!2250 = !DILocation(line: 350, column: 354, scope: !476)
!2251 = !DILocation(line: 350, column: 188, scope: !2252)
!2252 = !DILexicalBlockFile(scope: !2253, file: !13, discriminator: 9)
!2253 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 8)
!2254 = !DILocation(line: 350, column: 446, scope: !2255)
!2255 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 5)
!2256 = !DILocation(line: 350, column: 425, scope: !476)
!2257 = !DILocation(line: 350, column: 457, scope: !476)
!2258 = !DILocation(line: 350, column: 462, scope: !476)
!2259 = !DILocation(line: 350, column: 154, scope: !2260)
!2260 = !DILexicalBlockFile(scope: !2261, file: !13, discriminator: 11)
!2261 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 10)
!2262 = !DILocation(line: 350, column: 542, scope: !2263)
!2263 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 3)
!2264 = !DILocation(line: 350, column: 523, scope: !476)
!2265 = !DILocation(line: 350, column: 553, scope: !476)
!2266 = !DILocation(line: 350, column: 559, scope: !476)
!2267 = !DILocation(line: 350, column: 565, scope: !476)
!2268 = !DILocation(line: 350, column: 493, scope: !476)
!2269 = !DILocation(line: 350, column: 910, scope: !2270)
!2270 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 13)
!2271 = !DILocation(line: 350, column: 921, scope: !476)
!2272 = !DILocation(line: 350, column: 645, scope: !476)
!2273 = !DILocation(line: 350, column: 627, scope: !476)
!2274 = !DILocation(line: 350, column: 656, scope: !476)
!2275 = !DILocation(line: 350, column: 662, scope: !476)
!2276 = !DILocation(line: 350, column: 625, scope: !476)
!2277 = !DILocation(line: 350, column: 721, scope: !2278)
!2278 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 15)
!2279 = !DILocation(line: 350, column: 704, scope: !476)
!2280 = !DILocation(line: 350, column: 731, scope: !476)
!2281 = !DILocation(line: 350, column: 737, scope: !476)
!2282 = !DILocation(line: 350, column: 674, scope: !476)
!2283 = !DILocation(line: 350, column: 773, scope: !2284)
!2284 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 17)
!2285 = !DILocation(line: 350, column: 755, scope: !476)
!2286 = !DILocation(line: 350, column: 782, scope: !476)
!2287 = !DILocation(line: 350, column: 747, scope: !476)
!2288 = !DILocation(line: 350, column: 826, scope: !2289)
!2289 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 18)
!2290 = !DILocation(line: 350, column: 799, scope: !476)
!2291 = !DILocation(line: 350, column: 835, scope: !476)
!2292 = !DILocation(line: 350, column: 791, scope: !476)
!2293 = !DILocation(line: 350, column: 625, scope: !2294)
!2294 = !DILexicalBlockFile(scope: !2295, file: !13, discriminator: 20)
!2295 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 19)
!2296 = !DILocation(line: 350, column: 883, scope: !2297)
!2297 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 16)
!2298 = !DILocation(line: 350, column: 862, scope: !476)
!2299 = !DILocation(line: 350, column: 894, scope: !476)
!2300 = !DILocation(line: 350, column: 899, scope: !476)
!2301 = !DILocation(line: 350, column: 592, scope: !2302)
!2302 = !DILexicalBlockFile(scope: !2303, file: !13, discriminator: 22)
!2303 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 21)
!2304 = !DILocation(line: 350, column: 591, scope: !476)
!2305 = !DILocation(line: 350, column: 1248, scope: !2306)
!2306 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 14)
!2307 = !DILocation(line: 350, column: 1259, scope: !476)
!2308 = !DILocation(line: 350, column: 983, scope: !476)
!2309 = !DILocation(line: 350, column: 965, scope: !476)
!2310 = !DILocation(line: 350, column: 994, scope: !476)
!2311 = !DILocation(line: 350, column: 1000, scope: !476)
!2312 = !DILocation(line: 350, column: 963, scope: !476)
!2313 = !DILocation(line: 350, column: 1059, scope: !2314)
!2314 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 24)
!2315 = !DILocation(line: 350, column: 1042, scope: !476)
!2316 = !DILocation(line: 350, column: 1069, scope: !476)
!2317 = !DILocation(line: 350, column: 1075, scope: !476)
!2318 = !DILocation(line: 350, column: 1012, scope: !476)
!2319 = !DILocation(line: 350, column: 1111, scope: !2320)
!2320 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 26)
!2321 = !DILocation(line: 350, column: 1093, scope: !476)
!2322 = !DILocation(line: 350, column: 1120, scope: !476)
!2323 = !DILocation(line: 350, column: 1085, scope: !476)
!2324 = !DILocation(line: 350, column: 1164, scope: !2325)
!2325 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 27)
!2326 = !DILocation(line: 350, column: 1137, scope: !476)
!2327 = !DILocation(line: 350, column: 1173, scope: !476)
!2328 = !DILocation(line: 350, column: 1129, scope: !476)
!2329 = !DILocation(line: 350, column: 963, scope: !2330)
!2330 = !DILexicalBlockFile(scope: !2331, file: !13, discriminator: 29)
!2331 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 28)
!2332 = !DILocation(line: 350, column: 1221, scope: !2333)
!2333 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 25)
!2334 = !DILocation(line: 350, column: 1200, scope: !476)
!2335 = !DILocation(line: 350, column: 1232, scope: !476)
!2336 = !DILocation(line: 350, column: 1237, scope: !476)
!2337 = !DILocation(line: 350, column: 930, scope: !2338)
!2338 = !DILexicalBlockFile(scope: !2339, file: !13, discriminator: 31)
!2339 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 30)
!2340 = !DILocation(line: 350, column: 929, scope: !476)
!2341 = !DILocation(line: 350, column: 56, scope: !2342)
!2342 = !DILexicalBlockFile(scope: !2343, file: !13, discriminator: 32)
!2343 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 23)
!2344 = !DILocation(line: 350, column: 1270, scope: !2345)
!2345 = !DILexicalBlockFile(scope: !2346, file: !13, discriminator: 33)
!2346 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 12)
!2347 = !DILocation(line: 349, column: 13, scope: !477)
!2348 = !DILocation(line: 352, column: 13, scope: !475)
!2349 = !DILocation(line: 352, column: 23, scope: !475)
!2350 = !DILocation(line: 352, column: 54, scope: !475)
!2351 = !DILocation(line: 352, column: 65, scope: !475)
!2352 = !DILocation(line: 352, column: 76, scope: !475)
!2353 = !DILocation(line: 352, column: 34, scope: !475)
!2354 = !DILocation(line: 353, column: 17, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !475, file: !13, line: 353, column: 17)
!2356 = !DILocation(line: 353, column: 26, scope: !2355)
!2357 = !DILocation(line: 353, column: 17, scope: !475)
!2358 = !DILocation(line: 354, column: 17, scope: !2355)
!2359 = !DILocation(line: 355, column: 13, scope: !475)
!2360 = !DILocation(line: 355, column: 18, scope: !2361)
!2361 = !DILexicalBlockFile(scope: !480, file: !13, discriminator: 1)
!2362 = !DILocation(line: 355, column: 28, scope: !480)
!2363 = !DILocation(line: 355, column: 58, scope: !480)
!2364 = !DILocation(line: 355, column: 75, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !480, file: !13, line: 355, column: 72)
!2366 = !DILocation(line: 355, column: 92, scope: !2365)
!2367 = !DILocation(line: 355, column: 72, scope: !2365)
!2368 = !DILocation(line: 355, column: 102, scope: !2365)
!2369 = !DILocation(line: 355, column: 72, scope: !480)
!2370 = !DILocation(line: 355, column: 72, scope: !2371)
!2371 = !DILexicalBlockFile(scope: !480, file: !13, discriminator: 2)
!2372 = !DILocation(line: 355, column: 133, scope: !2373)
!2373 = !DILexicalBlockFile(scope: !2365, file: !13, discriminator: 3)
!2374 = !DILocation(line: 355, column: 151, scope: !2365)
!2375 = !DILocation(line: 355, column: 161, scope: !2365)
!2376 = !DILocation(line: 355, column: 186, scope: !2365)
!2377 = !DILocation(line: 355, column: 117, scope: !2365)
!2378 = !DILocation(line: 355, column: 205, scope: !2379)
!2379 = !DILexicalBlockFile(scope: !475, file: !13, discriminator: 4)
!2380 = !DILocation(line: 355, column: 205, scope: !480)
!2381 = !DILocation(line: 355, column: 205, scope: !2382)
!2382 = !DILexicalBlockFile(scope: !480, file: !13, discriminator: 5)
!2383 = !DILocation(line: 356, column: 22, scope: !475)
!2384 = !DILocation(line: 356, column: 20, scope: !475)
!2385 = !DILocation(line: 357, column: 13, scope: !475)
!2386 = !DILocation(line: 357, column: 19, scope: !475)
!2387 = !DILocation(line: 357, column: 29, scope: !475)
!2388 = !DILocation(line: 358, column: 9, scope: !476)
!2389 = !DILocation(line: 358, column: 9, scope: !2221)
!2390 = !DILocation(line: 358, column: 9, scope: !475)
!2391 = !DILocation(line: 359, column: 5, scope: !477)
!2392 = !DILocation(line: 364, column: 9, scope: !482)
!2393 = !DILocation(line: 364, column: 15, scope: !482)
!2394 = !DILocation(line: 365, column: 9, scope: !482)
!2395 = !DILocation(line: 365, column: 20, scope: !482)
!2396 = !DILocation(line: 366, column: 9, scope: !482)
!2397 = !DILocation(line: 366, column: 13, scope: !482)
!2398 = !DILocation(line: 366, column: 22, scope: !482)
!2399 = !DILocation(line: 366, column: 28, scope: !482)
!2400 = !DILocation(line: 367, column: 9, scope: !482)
!2401 = !DILocation(line: 367, column: 13, scope: !482)
!2402 = !DILocation(line: 368, column: 9, scope: !482)
!2403 = !DILocation(line: 368, column: 13, scope: !482)
!2404 = !DILocation(line: 370, column: 52, scope: !482)
!2405 = !DILocation(line: 370, column: 35, scope: !482)
!2406 = !DILocation(line: 370, column: 62, scope: !482)
!2407 = !DILocation(line: 370, column: 68, scope: !482)
!2408 = !DILocation(line: 370, column: 33, scope: !482)
!2409 = !DILocation(line: 370, column: 126, scope: !2410)
!2410 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 1)
!2411 = !DILocation(line: 370, column: 110, scope: !482)
!2412 = !DILocation(line: 370, column: 135, scope: !482)
!2413 = !DILocation(line: 370, column: 141, scope: !482)
!2414 = !DILocation(line: 370, column: 80, scope: !482)
!2415 = !DILocation(line: 370, column: 176, scope: !2416)
!2416 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 3)
!2417 = !DILocation(line: 370, column: 159, scope: !482)
!2418 = !DILocation(line: 370, column: 184, scope: !482)
!2419 = !DILocation(line: 370, column: 151, scope: !482)
!2420 = !DILocation(line: 370, column: 227, scope: !2421)
!2421 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 4)
!2422 = !DILocation(line: 370, column: 201, scope: !482)
!2423 = !DILocation(line: 370, column: 235, scope: !482)
!2424 = !DILocation(line: 370, column: 193, scope: !482)
!2425 = !DILocation(line: 370, column: 33, scope: !2426)
!2426 = !DILexicalBlockFile(scope: !2427, file: !13, discriminator: 6)
!2427 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 5)
!2428 = !DILocation(line: 370, column: 282, scope: !2429)
!2429 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 2)
!2430 = !DILocation(line: 370, column: 262, scope: !482)
!2431 = !DILocation(line: 370, column: 292, scope: !482)
!2432 = !DILocation(line: 370, column: 297, scope: !482)
!2433 = !DILocation(line: 370, column: 16, scope: !2434)
!2434 = !DILexicalBlockFile(scope: !2435, file: !13, discriminator: 8)
!2435 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 7)
!2436 = !DILocation(line: 371, column: 63, scope: !482)
!2437 = !DILocation(line: 371, column: 45, scope: !482)
!2438 = !DILocation(line: 371, column: 73, scope: !482)
!2439 = !DILocation(line: 371, column: 13, scope: !482)
!2440 = !DILocation(line: 372, column: 64, scope: !482)
!2441 = !DILocation(line: 372, column: 46, scope: !482)
!2442 = !DILocation(line: 372, column: 74, scope: !482)
!2443 = !DILocation(line: 372, column: 80, scope: !482)
!2444 = !DILocation(line: 372, column: 14, scope: !482)
!2445 = !DILocation(line: 374, column: 13, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !482, file: !13, line: 374, column: 13)
!2447 = !DILocation(line: 374, column: 17, scope: !2446)
!2448 = !DILocation(line: 374, column: 13, scope: !482)
!2449 = !DILocation(line: 375, column: 20, scope: !2446)
!2450 = !DILocation(line: 375, column: 13, scope: !2446)
!2451 = !DILocation(line: 380, column: 13, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !482, file: !13, line: 380, column: 13)
!2453 = !DILocation(line: 380, column: 20, scope: !2452)
!2454 = !DILocation(line: 380, column: 25, scope: !2452)
!2455 = !DILocation(line: 380, column: 28, scope: !2456)
!2456 = !DILexicalBlockFile(scope: !2452, file: !13, discriminator: 1)
!2457 = !DILocation(line: 380, column: 35, scope: !2452)
!2458 = !DILocation(line: 380, column: 13, scope: !482)
!2459 = !DILocation(line: 381, column: 31, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2452, file: !13, line: 380, column: 41)
!2461 = !DILocation(line: 381, column: 45, scope: !2460)
!2462 = !DILocation(line: 381, column: 52, scope: !2460)
!2463 = !DILocation(line: 381, column: 50, scope: !2460)
!2464 = !DILocation(line: 381, column: 24, scope: !2460)
!2465 = !DILocation(line: 381, column: 57, scope: !2460)
!2466 = !DILocation(line: 381, column: 21, scope: !2460)
!2467 = !DILocation(line: 382, column: 9, scope: !2460)
!2468 = !DILocation(line: 384, column: 13, scope: !493)
!2469 = !DILocation(line: 384, column: 13, scope: !482)
!2470 = !DILocation(line: 388, column: 17, scope: !491)
!2471 = !DILocation(line: 388, column: 24, scope: !491)
!2472 = !DILocation(line: 388, column: 29, scope: !491)
!2473 = !DILocation(line: 389, column: 24, scope: !491)
!2474 = !DILocation(line: 389, column: 38, scope: !491)
!2475 = !DILocation(line: 389, column: 45, scope: !491)
!2476 = !DILocation(line: 389, column: 43, scope: !491)
!2477 = !DILocation(line: 389, column: 17, scope: !491)
!2478 = !DILocation(line: 389, column: 50, scope: !491)
!2479 = !DILocation(line: 388, column: 17, scope: !492)
!2480 = !DILocation(line: 390, column: 21, scope: !489)
!2481 = !DILocation(line: 390, column: 26, scope: !489)
!2482 = !DILocation(line: 390, column: 21, scope: !490)
!2483 = !DILocation(line: 391, column: 28, scope: !489)
!2484 = !DILocation(line: 391, column: 21, scope: !489)
!2485 = !DILocation(line: 393, column: 21, scope: !488)
!2486 = !DILocation(line: 393, column: 32, scope: !488)
!2487 = !DILocation(line: 394, column: 21, scope: !488)
!2488 = !DILocation(line: 395, column: 25, scope: !495)
!2489 = !DILocation(line: 395, column: 33, scope: !495)
!2490 = !DILocation(line: 397, column: 25, scope: !495)
!2491 = !DILocation(line: 397, column: 45, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2493, file: !13, discriminator: 10)
!2493 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 1)
!2494 = !DILocation(line: 397, column: 51, scope: !495)
!2495 = !DILocation(line: 397, column: 44, scope: !495)
!2496 = !DILocation(line: 397, column: 106, scope: !2497)
!2497 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 2)
!2498 = !DILocation(line: 397, column: 96, scope: !495)
!2499 = !DILocation(line: 397, column: 77, scope: !495)
!2500 = !DILocation(line: 397, column: 114, scope: !2501)
!2501 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 3)
!2502 = !DILocation(line: 397, column: 120, scope: !495)
!2503 = !DILocation(line: 397, column: 113, scope: !495)
!2504 = !DILocation(line: 397, column: 175, scope: !2505)
!2505 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 5)
!2506 = !DILocation(line: 397, column: 165, scope: !495)
!2507 = !DILocation(line: 397, column: 147, scope: !495)
!2508 = !DILocation(line: 397, column: 146, scope: !495)
!2509 = !DILocation(line: 397, column: 210, scope: !2510)
!2510 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 6)
!2511 = !DILocation(line: 397, column: 200, scope: !495)
!2512 = !DILocation(line: 397, column: 182, scope: !495)
!2513 = !DILocation(line: 397, column: 181, scope: !495)
!2514 = !DILocation(line: 397, column: 44, scope: !2515)
!2515 = !DILexicalBlockFile(scope: !2516, file: !13, discriminator: 8)
!2516 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 7)
!2517 = !DILocation(line: 397, column: 219, scope: !2518)
!2518 = !DILexicalBlockFile(scope: !2519, file: !13, discriminator: 9)
!2519 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 4)
!2520 = !DILocation(line: 398, column: 30, scope: !495)
!2521 = !DILocation(line: 399, column: 42, scope: !495)
!2522 = !DILocation(line: 399, column: 48, scope: !495)
!2523 = !DILocation(line: 399, column: 41, scope: !495)
!2524 = !DILocation(line: 399, column: 104, scope: !2493)
!2525 = !DILocation(line: 399, column: 93, scope: !495)
!2526 = !DILocation(line: 399, column: 74, scope: !495)
!2527 = !DILocation(line: 399, column: 113, scope: !2497)
!2528 = !DILocation(line: 399, column: 119, scope: !495)
!2529 = !DILocation(line: 399, column: 112, scope: !495)
!2530 = !DILocation(line: 399, column: 175, scope: !2519)
!2531 = !DILocation(line: 399, column: 164, scope: !495)
!2532 = !DILocation(line: 399, column: 146, scope: !495)
!2533 = !DILocation(line: 399, column: 145, scope: !495)
!2534 = !DILocation(line: 399, column: 212, scope: !2505)
!2535 = !DILocation(line: 399, column: 201, scope: !495)
!2536 = !DILocation(line: 399, column: 183, scope: !495)
!2537 = !DILocation(line: 399, column: 182, scope: !495)
!2538 = !DILocation(line: 399, column: 41, scope: !2539)
!2539 = !DILexicalBlockFile(scope: !2510, file: !13, discriminator: 7)
!2540 = !DILocation(line: 399, column: 27, scope: !2541)
!2541 = !DILexicalBlockFile(scope: !2501, file: !13, discriminator: 8)
!2542 = !DILocation(line: 400, column: 29, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !495, file: !13, line: 400, column: 29)
!2544 = !DILocation(line: 400, column: 31, scope: !2543)
!2545 = !DILocation(line: 400, column: 29, scope: !495)
!2546 = !DILocation(line: 401, column: 36, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2543, file: !13, line: 400, column: 40)
!2548 = !DILocation(line: 402, column: 29, scope: !2547)
!2549 = !DILocation(line: 404, column: 29, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !495, file: !13, line: 404, column: 29)
!2551 = !DILocation(line: 404, column: 34, scope: !2550)
!2552 = !DILocation(line: 404, column: 31, scope: !2550)
!2553 = !DILocation(line: 404, column: 29, scope: !495)
!2554 = !DILocation(line: 405, column: 29, scope: !2550)
!2555 = !DILocation(line: 406, column: 21, scope: !496)
!2556 = !DILocation(line: 406, column: 21, scope: !2557)
!2557 = !DILexicalBlockFile(scope: !496, file: !13, discriminator: 1)
!2558 = !DILocation(line: 394, column: 21, scope: !496)
!2559 = !DILocation(line: 407, column: 17, scope: !489)
!2560 = !DILocation(line: 408, column: 13, scope: !490)
!2561 = !DILocation(line: 411, column: 9, scope: !492)
!2562 = !DILocation(line: 412, column: 19, scope: !500)
!2563 = !DILocation(line: 412, column: 25, scope: !500)
!2564 = !DILocation(line: 412, column: 18, scope: !493)
!2565 = !DILocation(line: 413, column: 13, scope: !499)
!2566 = !DILocation(line: 413, column: 24, scope: !499)
!2567 = !DILocation(line: 415, column: 17, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !499, file: !13, line: 415, column: 17)
!2569 = !DILocation(line: 415, column: 24, scope: !2568)
!2570 = !DILocation(line: 415, column: 17, scope: !499)
!2571 = !DILocation(line: 416, column: 17, scope: !2568)
!2572 = !DILocation(line: 417, column: 13, scope: !499)
!2573 = !DILocation(line: 418, column: 17, scope: !502)
!2574 = !DILocation(line: 418, column: 25, scope: !502)
!2575 = !DILocation(line: 420, column: 17, scope: !502)
!2576 = !DILocation(line: 420, column: 37, scope: !2577)
!2577 = !DILexicalBlockFile(scope: !2578, file: !13, discriminator: 10)
!2578 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 1)
!2579 = !DILocation(line: 420, column: 43, scope: !502)
!2580 = !DILocation(line: 420, column: 36, scope: !502)
!2581 = !DILocation(line: 420, column: 98, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 2)
!2583 = !DILocation(line: 420, column: 88, scope: !502)
!2584 = !DILocation(line: 420, column: 69, scope: !502)
!2585 = !DILocation(line: 420, column: 106, scope: !2586)
!2586 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 3)
!2587 = !DILocation(line: 420, column: 112, scope: !502)
!2588 = !DILocation(line: 420, column: 105, scope: !502)
!2589 = !DILocation(line: 420, column: 167, scope: !2590)
!2590 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 5)
!2591 = !DILocation(line: 420, column: 157, scope: !502)
!2592 = !DILocation(line: 420, column: 139, scope: !502)
!2593 = !DILocation(line: 420, column: 138, scope: !502)
!2594 = !DILocation(line: 420, column: 202, scope: !2595)
!2595 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 6)
!2596 = !DILocation(line: 420, column: 192, scope: !502)
!2597 = !DILocation(line: 420, column: 174, scope: !502)
!2598 = !DILocation(line: 420, column: 173, scope: !502)
!2599 = !DILocation(line: 420, column: 36, scope: !2600)
!2600 = !DILexicalBlockFile(scope: !2601, file: !13, discriminator: 8)
!2601 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 7)
!2602 = !DILocation(line: 420, column: 211, scope: !2603)
!2603 = !DILexicalBlockFile(scope: !2604, file: !13, discriminator: 9)
!2604 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 4)
!2605 = !DILocation(line: 421, column: 22, scope: !502)
!2606 = !DILocation(line: 422, column: 34, scope: !502)
!2607 = !DILocation(line: 422, column: 40, scope: !502)
!2608 = !DILocation(line: 422, column: 33, scope: !502)
!2609 = !DILocation(line: 422, column: 96, scope: !2578)
!2610 = !DILocation(line: 422, column: 85, scope: !502)
!2611 = !DILocation(line: 422, column: 66, scope: !502)
!2612 = !DILocation(line: 422, column: 105, scope: !2582)
!2613 = !DILocation(line: 422, column: 111, scope: !502)
!2614 = !DILocation(line: 422, column: 104, scope: !502)
!2615 = !DILocation(line: 422, column: 167, scope: !2604)
!2616 = !DILocation(line: 422, column: 156, scope: !502)
!2617 = !DILocation(line: 422, column: 138, scope: !502)
!2618 = !DILocation(line: 422, column: 137, scope: !502)
!2619 = !DILocation(line: 422, column: 204, scope: !2590)
!2620 = !DILocation(line: 422, column: 193, scope: !502)
!2621 = !DILocation(line: 422, column: 175, scope: !502)
!2622 = !DILocation(line: 422, column: 174, scope: !502)
!2623 = !DILocation(line: 422, column: 33, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !2595, file: !13, discriminator: 7)
!2625 = !DILocation(line: 422, column: 19, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2586, file: !13, discriminator: 8)
!2627 = !DILocation(line: 423, column: 21, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !502, file: !13, line: 423, column: 21)
!2629 = !DILocation(line: 423, column: 23, scope: !2628)
!2630 = !DILocation(line: 423, column: 21, scope: !502)
!2631 = !DILocation(line: 424, column: 28, scope: !2628)
!2632 = !DILocation(line: 424, column: 21, scope: !2628)
!2633 = !DILocation(line: 425, column: 26, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2628, file: !13, line: 425, column: 26)
!2635 = !DILocation(line: 425, column: 28, scope: !2634)
!2636 = !DILocation(line: 425, column: 26, scope: !2628)
!2637 = !DILocation(line: 426, column: 38, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2639, file: !13, line: 426, column: 25)
!2639 = distinct !DILexicalBlock(scope: !2634, file: !13, line: 425, column: 37)
!2640 = !DILocation(line: 426, column: 44, scope: !2638)
!2641 = !DILocation(line: 426, column: 37, scope: !2638)
!2642 = !DILocation(line: 426, column: 99, scope: !2643)
!2643 = !DILexicalBlockFile(scope: !2638, file: !13, discriminator: 1)
!2644 = !DILocation(line: 426, column: 89, scope: !2638)
!2645 = !DILocation(line: 426, column: 70, scope: !2638)
!2646 = !DILocation(line: 426, column: 107, scope: !2647)
!2647 = !DILexicalBlockFile(scope: !2638, file: !13, discriminator: 2)
!2648 = !DILocation(line: 426, column: 113, scope: !2638)
!2649 = !DILocation(line: 426, column: 106, scope: !2638)
!2650 = !DILocation(line: 426, column: 168, scope: !2651)
!2651 = !DILexicalBlockFile(scope: !2638, file: !13, discriminator: 4)
!2652 = !DILocation(line: 426, column: 158, scope: !2638)
!2653 = !DILocation(line: 426, column: 140, scope: !2638)
!2654 = !DILocation(line: 426, column: 139, scope: !2638)
!2655 = !DILocation(line: 426, column: 203, scope: !2656)
!2656 = !DILexicalBlockFile(scope: !2638, file: !13, discriminator: 5)
!2657 = !DILocation(line: 426, column: 193, scope: !2638)
!2658 = !DILocation(line: 426, column: 175, scope: !2638)
!2659 = !DILocation(line: 426, column: 174, scope: !2638)
!2660 = !DILocation(line: 426, column: 37, scope: !2661)
!2661 = !DILexicalBlockFile(scope: !2662, file: !13, discriminator: 7)
!2662 = !DILexicalBlockFile(scope: !2638, file: !13, discriminator: 6)
!2663 = !DILocation(line: 426, column: 212, scope: !2664)
!2664 = !DILexicalBlockFile(scope: !2665, file: !13, discriminator: 8)
!2665 = !DILexicalBlockFile(scope: !2638, file: !13, discriminator: 3)
!2666 = !DILocation(line: 426, column: 25, scope: !2639)
!2667 = !DILocation(line: 427, column: 32, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2638, file: !13, line: 426, column: 221)
!2669 = !DILocation(line: 428, column: 26, scope: !2668)
!2670 = !DILocation(line: 429, column: 21, scope: !2668)
!2671 = !DILocation(line: 431, column: 32, scope: !2638)
!2672 = !DILocation(line: 432, column: 17, scope: !2639)
!2673 = !DILocation(line: 433, column: 21, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !502, file: !13, line: 433, column: 21)
!2675 = !DILocation(line: 433, column: 26, scope: !2674)
!2676 = !DILocation(line: 433, column: 23, scope: !2674)
!2677 = !DILocation(line: 433, column: 21, scope: !502)
!2678 = !DILocation(line: 434, column: 21, scope: !2674)
!2679 = !DILocation(line: 435, column: 21, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !502, file: !13, line: 435, column: 21)
!2681 = !DILocation(line: 435, column: 28, scope: !2680)
!2682 = !DILocation(line: 435, column: 21, scope: !502)
!2683 = !DILocation(line: 436, column: 21, scope: !2680)
!2684 = !DILocation(line: 437, column: 13, scope: !503)
!2685 = !DILocation(line: 437, column: 13, scope: !2686)
!2686 = !DILexicalBlockFile(scope: !503, file: !13, discriminator: 1)
!2687 = !DILocation(line: 417, column: 13, scope: !503)
!2688 = !DILocation(line: 437, column: 13, scope: !504)
!2689 = !DILocation(line: 440, column: 9, scope: !500)
!2690 = !DILocation(line: 440, column: 9, scope: !499)
!2691 = !DILocation(line: 442, column: 13, scope: !506)
!2692 = !DILocation(line: 442, column: 19, scope: !506)
!2693 = !DILocation(line: 443, column: 13, scope: !506)
!2694 = !DILocation(line: 443, column: 17, scope: !506)
!2695 = !DILocation(line: 443, column: 72, scope: !506)
!2696 = !DILocation(line: 443, column: 54, scope: !506)
!2697 = !DILocation(line: 443, column: 82, scope: !506)
!2698 = !DILocation(line: 443, column: 88, scope: !506)
!2699 = !DILocation(line: 444, column: 13, scope: !506)
!2700 = !DILocation(line: 444, column: 19, scope: !506)
!2701 = !DILocation(line: 444, column: 62, scope: !506)
!2702 = !DILocation(line: 444, column: 45, scope: !506)
!2703 = !DILocation(line: 444, column: 72, scope: !506)
!2704 = !DILocation(line: 444, column: 78, scope: !506)
!2705 = !DILocation(line: 444, column: 43, scope: !506)
!2706 = !DILocation(line: 444, column: 136, scope: !2707)
!2707 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 1)
!2708 = !DILocation(line: 444, column: 120, scope: !506)
!2709 = !DILocation(line: 444, column: 145, scope: !506)
!2710 = !DILocation(line: 444, column: 151, scope: !506)
!2711 = !DILocation(line: 444, column: 90, scope: !506)
!2712 = !DILocation(line: 444, column: 186, scope: !2713)
!2713 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 3)
!2714 = !DILocation(line: 444, column: 169, scope: !506)
!2715 = !DILocation(line: 444, column: 194, scope: !506)
!2716 = !DILocation(line: 444, column: 161, scope: !506)
!2717 = !DILocation(line: 444, column: 237, scope: !2718)
!2718 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 4)
!2719 = !DILocation(line: 444, column: 211, scope: !506)
!2720 = !DILocation(line: 444, column: 245, scope: !506)
!2721 = !DILocation(line: 444, column: 203, scope: !506)
!2722 = !DILocation(line: 444, column: 43, scope: !2723)
!2723 = !DILexicalBlockFile(scope: !2724, file: !13, discriminator: 6)
!2724 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 5)
!2725 = !DILocation(line: 444, column: 292, scope: !2726)
!2726 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 2)
!2727 = !DILocation(line: 444, column: 272, scope: !506)
!2728 = !DILocation(line: 444, column: 302, scope: !506)
!2729 = !DILocation(line: 444, column: 307, scope: !506)
!2730 = !DILocation(line: 444, column: 19, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2732, file: !13, discriminator: 8)
!2732 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 7)
!2733 = !DILocation(line: 445, column: 13, scope: !506)
!2734 = !DILocation(line: 445, column: 24, scope: !506)
!2735 = !DILocation(line: 445, column: 28, scope: !506)
!2736 = !DILocation(line: 452, column: 39, scope: !506)
!2737 = !DILocation(line: 452, column: 46, scope: !506)
!2738 = !DILocation(line: 452, column: 44, scope: !506)
!2739 = !DILocation(line: 452, column: 26, scope: !506)
!2740 = !DILocation(line: 452, column: 24, scope: !506)
!2741 = !DILocation(line: 453, column: 17, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !506, file: !13, line: 453, column: 17)
!2743 = !DILocation(line: 453, column: 28, scope: !2742)
!2744 = !DILocation(line: 453, column: 17, scope: !506)
!2745 = !DILocation(line: 454, column: 17, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2742, file: !13, line: 453, column: 43)
!2747 = !DILocation(line: 455, column: 17, scope: !2746)
!2748 = !DILocation(line: 457, column: 22, scope: !506)
!2749 = !DILocation(line: 457, column: 16, scope: !506)
!2750 = !DILocation(line: 458, column: 13, scope: !506)
!2751 = !DILocation(line: 459, column: 17, scope: !512)
!2752 = !DILocation(line: 459, column: 25, scope: !512)
!2753 = !DILocation(line: 461, column: 17, scope: !512)
!2754 = !DILocation(line: 461, column: 42, scope: !2755)
!2755 = !DILexicalBlockFile(scope: !2756, file: !13, discriminator: 10)
!2756 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 1)
!2757 = !DILocation(line: 461, column: 48, scope: !512)
!2758 = !DILocation(line: 461, column: 41, scope: !512)
!2759 = !DILocation(line: 461, column: 105, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 2)
!2761 = !DILocation(line: 461, column: 93, scope: !512)
!2762 = !DILocation(line: 461, column: 74, scope: !512)
!2763 = !DILocation(line: 461, column: 114, scope: !2764)
!2764 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 3)
!2765 = !DILocation(line: 461, column: 120, scope: !512)
!2766 = !DILocation(line: 461, column: 113, scope: !512)
!2767 = !DILocation(line: 461, column: 177, scope: !2768)
!2768 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 5)
!2769 = !DILocation(line: 461, column: 165, scope: !512)
!2770 = !DILocation(line: 461, column: 147, scope: !512)
!2771 = !DILocation(line: 461, column: 146, scope: !512)
!2772 = !DILocation(line: 461, column: 215, scope: !2773)
!2773 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 6)
!2774 = !DILocation(line: 461, column: 203, scope: !512)
!2775 = !DILocation(line: 461, column: 185, scope: !512)
!2776 = !DILocation(line: 461, column: 184, scope: !512)
!2777 = !DILocation(line: 461, column: 41, scope: !2778)
!2778 = !DILexicalBlockFile(scope: !2779, file: !13, discriminator: 8)
!2779 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 7)
!2780 = !DILocation(line: 461, column: 27, scope: !2781)
!2781 = !DILexicalBlockFile(scope: !2782, file: !13, discriminator: 9)
!2782 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 4)
!2783 = !DILocation(line: 461, column: 226, scope: !512)
!2784 = !DILocation(line: 462, column: 21, scope: !512)
!2785 = !DILocation(line: 462, column: 35, scope: !2786)
!2786 = !DILexicalBlockFile(scope: !2787, file: !13, discriminator: 1)
!2787 = distinct !DILexicalBlock(scope: !512, file: !13, line: 462, column: 24)
!2788 = !DILocation(line: 462, column: 26, scope: !2787)
!2789 = !DILocation(line: 462, column: 120, scope: !2790)
!2790 = !DILexicalBlockFile(scope: !2791, file: !13, discriminator: 3)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !13, line: 462, column: 71)
!2792 = distinct !DILexicalBlock(scope: !2787, file: !13, line: 462, column: 42)
!2793 = !DILocation(line: 462, column: 110, scope: !2791)
!2794 = !DILocation(line: 462, column: 103, scope: !2791)
!2795 = !DILocation(line: 462, column: 86, scope: !2791)
!2796 = !DILocation(line: 462, column: 73, scope: !2791)
!2797 = !DILocation(line: 462, column: 108, scope: !2791)
!2798 = !DILocation(line: 462, column: 124, scope: !2791)
!2799 = !DILocation(line: 462, column: 209, scope: !2800)
!2800 = !DILexicalBlockFile(scope: !2801, file: !13, discriminator: 4)
!2801 = distinct !DILexicalBlock(scope: !2792, file: !13, line: 462, column: 160)
!2802 = !DILocation(line: 462, column: 199, scope: !2801)
!2803 = !DILocation(line: 462, column: 192, scope: !2801)
!2804 = !DILocation(line: 462, column: 175, scope: !2801)
!2805 = !DILocation(line: 462, column: 163, scope: !2801)
!2806 = !DILocation(line: 462, column: 162, scope: !2801)
!2807 = !DILocation(line: 462, column: 197, scope: !2801)
!2808 = !DILocation(line: 462, column: 213, scope: !2801)
!2809 = !DILocation(line: 462, column: 294, scope: !2810)
!2810 = !DILexicalBlockFile(scope: !2811, file: !13, discriminator: 2)
!2811 = distinct !DILexicalBlock(scope: !2792, file: !13, line: 462, column: 231)
!2812 = !DILocation(line: 462, column: 277, scope: !2811)
!2813 = !DILocation(line: 462, column: 260, scope: !2811)
!2814 = !DILocation(line: 462, column: 248, scope: !2811)
!2815 = !DILocation(line: 462, column: 247, scope: !2811)
!2816 = !DILocation(line: 462, column: 282, scope: !2811)
!2817 = !DILocation(line: 462, column: 300, scope: !2792)
!2818 = !DILocation(line: 462, column: 302, scope: !2819)
!2819 = !DILexicalBlockFile(scope: !2820, file: !13, discriminator: 7)
!2820 = !DILexicalBlockFile(scope: !2821, file: !13, discriminator: 6)
!2821 = !DILexicalBlockFile(scope: !2787, file: !13, discriminator: 5)
!2822 = !DILocation(line: 462, column: 302, scope: !2823)
!2823 = !DILexicalBlockFile(scope: !2787, file: !13, discriminator: 8)
!2824 = !DILocation(line: 463, column: 21, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !512, file: !13, line: 463, column: 21)
!2826 = !DILocation(line: 463, column: 23, scope: !2825)
!2827 = !DILocation(line: 463, column: 21, scope: !512)
!2828 = !DILocation(line: 464, column: 21, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2825, file: !13, line: 463, column: 32)
!2830 = !DILocation(line: 464, column: 35, scope: !2831)
!2831 = !DILexicalBlockFile(scope: !2832, file: !13, discriminator: 1)
!2832 = distinct !DILexicalBlock(scope: !2829, file: !13, line: 464, column: 24)
!2833 = !DILocation(line: 464, column: 26, scope: !2832)
!2834 = !DILocation(line: 464, column: 120, scope: !2835)
!2835 = !DILexicalBlockFile(scope: !2836, file: !13, discriminator: 3)
!2836 = distinct !DILexicalBlock(scope: !2837, file: !13, line: 464, column: 71)
!2837 = distinct !DILexicalBlock(scope: !2832, file: !13, line: 464, column: 42)
!2838 = !DILocation(line: 464, column: 110, scope: !2836)
!2839 = !DILocation(line: 464, column: 103, scope: !2836)
!2840 = !DILocation(line: 464, column: 86, scope: !2836)
!2841 = !DILocation(line: 464, column: 73, scope: !2836)
!2842 = !DILocation(line: 464, column: 108, scope: !2836)
!2843 = !DILocation(line: 464, column: 124, scope: !2836)
!2844 = !DILocation(line: 464, column: 209, scope: !2845)
!2845 = !DILexicalBlockFile(scope: !2846, file: !13, discriminator: 4)
!2846 = distinct !DILexicalBlock(scope: !2837, file: !13, line: 464, column: 160)
!2847 = !DILocation(line: 464, column: 199, scope: !2846)
!2848 = !DILocation(line: 464, column: 192, scope: !2846)
!2849 = !DILocation(line: 464, column: 175, scope: !2846)
!2850 = !DILocation(line: 464, column: 163, scope: !2846)
!2851 = !DILocation(line: 464, column: 162, scope: !2846)
!2852 = !DILocation(line: 464, column: 197, scope: !2846)
!2853 = !DILocation(line: 464, column: 213, scope: !2846)
!2854 = !DILocation(line: 464, column: 294, scope: !2855)
!2855 = !DILexicalBlockFile(scope: !2856, file: !13, discriminator: 2)
!2856 = distinct !DILexicalBlock(scope: !2837, file: !13, line: 464, column: 231)
!2857 = !DILocation(line: 464, column: 277, scope: !2856)
!2858 = !DILocation(line: 464, column: 260, scope: !2856)
!2859 = !DILocation(line: 464, column: 248, scope: !2856)
!2860 = !DILocation(line: 464, column: 247, scope: !2856)
!2861 = !DILocation(line: 464, column: 282, scope: !2856)
!2862 = !DILocation(line: 464, column: 300, scope: !2837)
!2863 = !DILocation(line: 464, column: 302, scope: !2864)
!2864 = !DILexicalBlockFile(scope: !2865, file: !13, discriminator: 7)
!2865 = !DILexicalBlockFile(scope: !2866, file: !13, discriminator: 6)
!2866 = !DILexicalBlockFile(scope: !2832, file: !13, discriminator: 5)
!2867 = !DILocation(line: 464, column: 302, scope: !2868)
!2868 = !DILexicalBlockFile(scope: !2832, file: !13, discriminator: 8)
!2869 = !DILocation(line: 465, column: 28, scope: !2829)
!2870 = !DILocation(line: 466, column: 21, scope: !2829)
!2871 = !DILocation(line: 468, column: 21, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !512, file: !13, line: 468, column: 21)
!2873 = !DILocation(line: 468, column: 23, scope: !2872)
!2874 = !DILocation(line: 468, column: 21, scope: !512)
!2875 = !DILocation(line: 469, column: 38, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !13, line: 469, column: 25)
!2877 = distinct !DILexicalBlock(scope: !2872, file: !13, line: 468, column: 32)
!2878 = !DILocation(line: 469, column: 44, scope: !2876)
!2879 = !DILocation(line: 469, column: 37, scope: !2876)
!2880 = !DILocation(line: 469, column: 99, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2876, file: !13, discriminator: 1)
!2882 = !DILocation(line: 469, column: 89, scope: !2876)
!2883 = !DILocation(line: 469, column: 70, scope: !2876)
!2884 = !DILocation(line: 469, column: 108, scope: !2885)
!2885 = !DILexicalBlockFile(scope: !2876, file: !13, discriminator: 2)
!2886 = !DILocation(line: 469, column: 114, scope: !2876)
!2887 = !DILocation(line: 469, column: 107, scope: !2876)
!2888 = !DILocation(line: 469, column: 169, scope: !2889)
!2889 = !DILexicalBlockFile(scope: !2876, file: !13, discriminator: 4)
!2890 = !DILocation(line: 469, column: 159, scope: !2876)
!2891 = !DILocation(line: 469, column: 141, scope: !2876)
!2892 = !DILocation(line: 469, column: 140, scope: !2876)
!2893 = !DILocation(line: 469, column: 205, scope: !2894)
!2894 = !DILexicalBlockFile(scope: !2876, file: !13, discriminator: 5)
!2895 = !DILocation(line: 469, column: 195, scope: !2876)
!2896 = !DILocation(line: 469, column: 177, scope: !2876)
!2897 = !DILocation(line: 469, column: 176, scope: !2876)
!2898 = !DILocation(line: 469, column: 37, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2900, file: !13, discriminator: 7)
!2900 = !DILexicalBlockFile(scope: !2876, file: !13, discriminator: 6)
!2901 = !DILocation(line: 469, column: 215, scope: !2902)
!2902 = !DILexicalBlockFile(scope: !2903, file: !13, discriminator: 8)
!2903 = !DILexicalBlockFile(scope: !2876, file: !13, discriminator: 3)
!2904 = !DILocation(line: 469, column: 25, scope: !2877)
!2905 = !DILocation(line: 470, column: 27, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2876, file: !13, line: 469, column: 224)
!2907 = !DILocation(line: 471, column: 32, scope: !2906)
!2908 = !DILocation(line: 472, column: 21, scope: !2906)
!2909 = !DILocation(line: 474, column: 32, scope: !2876)
!2910 = !DILocation(line: 475, column: 21, scope: !2877)
!2911 = !DILocation(line: 475, column: 35, scope: !2912)
!2912 = !DILexicalBlockFile(scope: !2913, file: !13, discriminator: 1)
!2913 = distinct !DILexicalBlock(scope: !2877, file: !13, line: 475, column: 24)
!2914 = !DILocation(line: 475, column: 26, scope: !2913)
!2915 = !DILocation(line: 475, column: 103, scope: !2916)
!2916 = !DILexicalBlockFile(scope: !2917, file: !13, discriminator: 3)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !13, line: 475, column: 71)
!2918 = distinct !DILexicalBlock(scope: !2913, file: !13, line: 475, column: 42)
!2919 = !DILocation(line: 475, column: 86, scope: !2917)
!2920 = !DILocation(line: 475, column: 73, scope: !2917)
!2921 = !DILocation(line: 475, column: 108, scope: !2917)
!2922 = !DILocation(line: 475, column: 127, scope: !2917)
!2923 = !DILocation(line: 475, column: 195, scope: !2924)
!2924 = !DILexicalBlockFile(scope: !2925, file: !13, discriminator: 4)
!2925 = distinct !DILexicalBlock(scope: !2918, file: !13, line: 475, column: 163)
!2926 = !DILocation(line: 475, column: 178, scope: !2925)
!2927 = !DILocation(line: 475, column: 166, scope: !2925)
!2928 = !DILocation(line: 475, column: 165, scope: !2925)
!2929 = !DILocation(line: 475, column: 200, scope: !2925)
!2930 = !DILocation(line: 475, column: 219, scope: !2925)
!2931 = !DILocation(line: 475, column: 283, scope: !2932)
!2932 = !DILexicalBlockFile(scope: !2933, file: !13, discriminator: 2)
!2933 = distinct !DILexicalBlock(scope: !2918, file: !13, line: 475, column: 237)
!2934 = !DILocation(line: 475, column: 266, scope: !2933)
!2935 = !DILocation(line: 475, column: 254, scope: !2933)
!2936 = !DILocation(line: 475, column: 253, scope: !2933)
!2937 = !DILocation(line: 475, column: 288, scope: !2933)
!2938 = !DILocation(line: 475, column: 309, scope: !2918)
!2939 = !DILocation(line: 475, column: 311, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !2941, file: !13, discriminator: 7)
!2941 = !DILexicalBlockFile(scope: !2942, file: !13, discriminator: 6)
!2942 = !DILexicalBlockFile(scope: !2913, file: !13, discriminator: 5)
!2943 = !DILocation(line: 475, column: 311, scope: !2944)
!2944 = !DILexicalBlockFile(scope: !2913, file: !13, discriminator: 8)
!2945 = !DILocation(line: 476, column: 21, scope: !2877)
!2946 = !DILocation(line: 478, column: 21, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !512, file: !13, line: 478, column: 21)
!2948 = !DILocation(line: 478, column: 26, scope: !2947)
!2949 = !DILocation(line: 478, column: 24, scope: !2947)
!2950 = !DILocation(line: 478, column: 21, scope: !512)
!2951 = !DILocation(line: 479, column: 21, scope: !2947)
!2952 = !DILocation(line: 480, column: 17, scope: !512)
!2953 = !DILocation(line: 480, column: 31, scope: !2954)
!2954 = !DILexicalBlockFile(scope: !2955, file: !13, discriminator: 1)
!2955 = distinct !DILexicalBlock(scope: !512, file: !13, line: 480, column: 20)
!2956 = !DILocation(line: 480, column: 22, scope: !2955)
!2957 = !DILocation(line: 480, column: 116, scope: !2958)
!2958 = !DILexicalBlockFile(scope: !2959, file: !13, discriminator: 3)
!2959 = distinct !DILexicalBlock(scope: !2960, file: !13, line: 480, column: 67)
!2960 = distinct !DILexicalBlock(scope: !2955, file: !13, line: 480, column: 38)
!2961 = !DILocation(line: 480, column: 106, scope: !2959)
!2962 = !DILocation(line: 480, column: 99, scope: !2959)
!2963 = !DILocation(line: 480, column: 82, scope: !2959)
!2964 = !DILocation(line: 480, column: 69, scope: !2959)
!2965 = !DILocation(line: 480, column: 104, scope: !2959)
!2966 = !DILocation(line: 480, column: 120, scope: !2959)
!2967 = !DILocation(line: 480, column: 205, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2969, file: !13, discriminator: 4)
!2969 = distinct !DILexicalBlock(scope: !2960, file: !13, line: 480, column: 156)
!2970 = !DILocation(line: 480, column: 195, scope: !2969)
!2971 = !DILocation(line: 480, column: 188, scope: !2969)
!2972 = !DILocation(line: 480, column: 171, scope: !2969)
!2973 = !DILocation(line: 480, column: 159, scope: !2969)
!2974 = !DILocation(line: 480, column: 158, scope: !2969)
!2975 = !DILocation(line: 480, column: 193, scope: !2969)
!2976 = !DILocation(line: 480, column: 209, scope: !2969)
!2977 = !DILocation(line: 480, column: 290, scope: !2978)
!2978 = !DILexicalBlockFile(scope: !2979, file: !13, discriminator: 2)
!2979 = distinct !DILexicalBlock(scope: !2960, file: !13, line: 480, column: 227)
!2980 = !DILocation(line: 480, column: 273, scope: !2979)
!2981 = !DILocation(line: 480, column: 256, scope: !2979)
!2982 = !DILocation(line: 480, column: 244, scope: !2979)
!2983 = !DILocation(line: 480, column: 243, scope: !2979)
!2984 = !DILocation(line: 480, column: 278, scope: !2979)
!2985 = !DILocation(line: 480, column: 296, scope: !2960)
!2986 = !DILocation(line: 480, column: 298, scope: !2987)
!2987 = !DILexicalBlockFile(scope: !2988, file: !13, discriminator: 7)
!2988 = !DILexicalBlockFile(scope: !2989, file: !13, discriminator: 6)
!2989 = !DILexicalBlockFile(scope: !2955, file: !13, discriminator: 5)
!2990 = !DILocation(line: 480, column: 298, scope: !2991)
!2991 = !DILexicalBlockFile(scope: !2955, file: !13, discriminator: 8)
!2992 = !DILocation(line: 481, column: 13, scope: !513)
!2993 = !DILocation(line: 481, column: 13, scope: !2994)
!2994 = !DILexicalBlockFile(scope: !513, file: !13, discriminator: 1)
!2995 = !DILocation(line: 458, column: 13, scope: !513)
!2996 = !DILocation(line: 482, column: 13, scope: !506)
!2997 = !DILocation(line: 482, column: 18, scope: !2998)
!2998 = !DILexicalBlockFile(scope: !516, file: !13, discriminator: 1)
!2999 = !DILocation(line: 482, column: 28, scope: !516)
!3000 = !DILocation(line: 482, column: 58, scope: !516)
!3001 = !DILocation(line: 482, column: 75, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !516, file: !13, line: 482, column: 72)
!3003 = !DILocation(line: 482, column: 92, scope: !3002)
!3004 = !DILocation(line: 482, column: 72, scope: !3002)
!3005 = !DILocation(line: 482, column: 102, scope: !3002)
!3006 = !DILocation(line: 482, column: 72, scope: !516)
!3007 = !DILocation(line: 482, column: 72, scope: !3008)
!3008 = !DILexicalBlockFile(scope: !516, file: !13, discriminator: 2)
!3009 = !DILocation(line: 482, column: 133, scope: !3010)
!3010 = !DILexicalBlockFile(scope: !3002, file: !13, discriminator: 3)
!3011 = !DILocation(line: 482, column: 151, scope: !3002)
!3012 = !DILocation(line: 482, column: 161, scope: !3002)
!3013 = !DILocation(line: 482, column: 186, scope: !3002)
!3014 = !DILocation(line: 482, column: 117, scope: !3002)
!3015 = !DILocation(line: 482, column: 205, scope: !2718)
!3016 = !DILocation(line: 482, column: 205, scope: !516)
!3017 = !DILocation(line: 482, column: 205, scope: !3018)
!3018 = !DILexicalBlockFile(scope: !516, file: !13, discriminator: 5)
!3019 = !DILocation(line: 483, column: 48, scope: !506)
!3020 = !DILocation(line: 483, column: 54, scope: !506)
!3021 = !DILocation(line: 483, column: 66, scope: !506)
!3022 = !DILocation(line: 483, column: 22, scope: !506)
!3023 = !DILocation(line: 483, column: 20, scope: !506)
!3024 = !DILocation(line: 484, column: 24, scope: !506)
!3025 = !DILocation(line: 484, column: 13, scope: !506)
!3026 = !DILocation(line: 485, column: 18, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !506, file: !13, line: 485, column: 17)
!3028 = !DILocation(line: 485, column: 17, scope: !506)
!3029 = !DILocation(line: 486, column: 17, scope: !3027)
!3030 = !DILocation(line: 487, column: 9, scope: !500)
!3031 = !DILocation(line: 487, column: 9, scope: !3032)
!3032 = !DILexicalBlockFile(scope: !500, file: !13, discriminator: 1)
!3033 = !DILocation(line: 488, column: 25, scope: !482)
!3034 = !DILocation(line: 488, column: 9, scope: !482)
!3035 = !DILocation(line: 488, column: 15, scope: !482)
!3036 = !DILocation(line: 488, column: 22, scope: !482)
!3037 = !DILocation(line: 489, column: 5, scope: !459)
!3038 = !DILocation(line: 489, column: 5, scope: !3039)
!3039 = !DILexicalBlockFile(scope: !459, file: !13, discriminator: 1)
!3040 = !DILocation(line: 491, column: 12, scope: !459)
!3041 = !DILocation(line: 491, column: 5, scope: !459)
!3042 = !DILocation(line: 494, column: 5, scope: !459)
!3043 = !DILocation(line: 494, column: 10, scope: !3044)
!3044 = !DILexicalBlockFile(scope: !518, file: !13, discriminator: 1)
!3045 = !DILocation(line: 494, column: 20, scope: !518)
!3046 = !DILocation(line: 494, column: 50, scope: !518)
!3047 = !DILocation(line: 494, column: 67, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !518, file: !13, line: 494, column: 64)
!3049 = !DILocation(line: 494, column: 84, scope: !3048)
!3050 = !DILocation(line: 494, column: 64, scope: !3048)
!3051 = !DILocation(line: 494, column: 94, scope: !3048)
!3052 = !DILocation(line: 494, column: 64, scope: !518)
!3053 = !DILocation(line: 494, column: 64, scope: !3054)
!3054 = !DILexicalBlockFile(scope: !518, file: !13, discriminator: 2)
!3055 = !DILocation(line: 494, column: 125, scope: !3056)
!3056 = !DILexicalBlockFile(scope: !3048, file: !13, discriminator: 3)
!3057 = !DILocation(line: 494, column: 143, scope: !3048)
!3058 = !DILocation(line: 494, column: 153, scope: !3048)
!3059 = !DILocation(line: 494, column: 178, scope: !3048)
!3060 = !DILocation(line: 494, column: 109, scope: !3048)
!3061 = !DILocation(line: 494, column: 197, scope: !3062)
!3062 = !DILexicalBlockFile(scope: !459, file: !13, discriminator: 4)
!3063 = !DILocation(line: 494, column: 197, scope: !518)
!3064 = !DILocation(line: 494, column: 197, scope: !3065)
!3065 = !DILexicalBlockFile(scope: !518, file: !13, discriminator: 5)
!3066 = !DILocation(line: 495, column: 5, scope: !459)
!3067 = !DILocation(line: 496, column: 1, scope: !459)
!3068 = !DILocation(line: 274, column: 25, scope: !595)
!3069 = !DILocation(line: 276, column: 9, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !595, file: !13, line: 276, column: 9)
!3071 = !DILocation(line: 276, column: 17, scope: !3070)
!3072 = !DILocation(line: 276, column: 9, scope: !595)
!3073 = !DILocation(line: 277, column: 9, scope: !3070)
!3074 = !DILocation(line: 278, column: 27, scope: !601)
!3075 = !DILocation(line: 278, column: 38, scope: !601)
!3076 = !DILocation(line: 278, column: 49, scope: !601)
!3077 = !{!2198, !1900, i64 168}
!3078 = !DILocation(line: 278, column: 58, scope: !601)
!3079 = !DILocation(line: 278, column: 75, scope: !601)
!3080 = !DILocation(line: 278, column: 9, scope: !595)
!3081 = !DILocation(line: 279, column: 22, scope: !600)
!3082 = !DILocation(line: 281, column: 36, scope: !600)
!3083 = !DILocation(line: 281, column: 47, scope: !600)
!3084 = !DILocation(line: 281, column: 57, scope: !600)
!3085 = !{!2198, !1877, i64 24}
!3086 = !DILocation(line: 279, column: 9, scope: !600)
!3087 = !DILocation(line: 282, column: 9, scope: !600)
!3088 = !DILocation(line: 282, column: 14, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !599, file: !13, discriminator: 1)
!3090 = !DILocation(line: 282, column: 24, scope: !599)
!3091 = !DILocation(line: 282, column: 54, scope: !599)
!3092 = !DILocation(line: 282, column: 72, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !599, file: !13, line: 282, column: 69)
!3094 = !DILocation(line: 282, column: 89, scope: !3093)
!3095 = !DILocation(line: 282, column: 69, scope: !3093)
!3096 = !DILocation(line: 282, column: 99, scope: !3093)
!3097 = !DILocation(line: 282, column: 69, scope: !599)
!3098 = !DILocation(line: 282, column: 69, scope: !3099)
!3099 = !DILexicalBlockFile(scope: !599, file: !13, discriminator: 2)
!3100 = !DILocation(line: 282, column: 130, scope: !3101)
!3101 = !DILexicalBlockFile(scope: !3093, file: !13, discriminator: 3)
!3102 = !DILocation(line: 282, column: 148, scope: !3093)
!3103 = !DILocation(line: 282, column: 158, scope: !3093)
!3104 = !DILocation(line: 282, column: 183, scope: !3093)
!3105 = !DILocation(line: 282, column: 114, scope: !3093)
!3106 = !DILocation(line: 282, column: 202, scope: !3107)
!3107 = !DILexicalBlockFile(scope: !600, file: !13, discriminator: 4)
!3108 = !DILocation(line: 282, column: 202, scope: !599)
!3109 = !DILocation(line: 283, column: 9, scope: !600)
!3110 = !DILocation(line: 285, column: 43, scope: !605)
!3111 = !DILocation(line: 285, column: 27, scope: !605)
!3112 = !DILocation(line: 285, column: 53, scope: !605)
!3113 = !DILocation(line: 285, column: 59, scope: !605)
!3114 = !DILocation(line: 285, column: 25, scope: !605)
!3115 = !DILocation(line: 285, column: 25, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !605, file: !13, discriminator: 1)
!3117 = !DILocation(line: 285, column: 102, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !605, file: !13, discriminator: 2)
!3119 = !DILocation(line: 285, column: 72, scope: !605)
!3120 = !DILocation(line: 285, column: 114, scope: !3121)
!3121 = !DILexicalBlockFile(scope: !3122, file: !13, discriminator: 4)
!3122 = !DILexicalBlockFile(scope: !605, file: !13, discriminator: 3)
!3123 = !DILocation(line: 285, column: 9, scope: !595)
!3124 = !DILocation(line: 286, column: 9, scope: !604)
!3125 = !DILocation(line: 286, column: 14, scope: !3126)
!3126 = !DILexicalBlockFile(scope: !603, file: !13, discriminator: 1)
!3127 = !DILocation(line: 286, column: 24, scope: !603)
!3128 = !DILocation(line: 286, column: 54, scope: !603)
!3129 = !DILocation(line: 286, column: 72, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !603, file: !13, line: 286, column: 69)
!3131 = !DILocation(line: 286, column: 89, scope: !3130)
!3132 = !DILocation(line: 286, column: 69, scope: !3130)
!3133 = !DILocation(line: 286, column: 99, scope: !3130)
!3134 = !DILocation(line: 286, column: 69, scope: !603)
!3135 = !DILocation(line: 286, column: 69, scope: !3136)
!3136 = !DILexicalBlockFile(scope: !603, file: !13, discriminator: 2)
!3137 = !DILocation(line: 286, column: 130, scope: !3138)
!3138 = !DILexicalBlockFile(scope: !3130, file: !13, discriminator: 3)
!3139 = !DILocation(line: 286, column: 148, scope: !3130)
!3140 = !DILocation(line: 286, column: 158, scope: !3130)
!3141 = !DILocation(line: 286, column: 183, scope: !3130)
!3142 = !DILocation(line: 286, column: 114, scope: !3130)
!3143 = !DILocation(line: 286, column: 202, scope: !3144)
!3144 = !DILexicalBlockFile(scope: !604, file: !13, discriminator: 4)
!3145 = !DILocation(line: 286, column: 202, scope: !603)
!3146 = !DILocation(line: 287, column: 9, scope: !604)
!3147 = !DILocation(line: 289, column: 5, scope: !595)
!3148 = !DILocation(line: 290, column: 1, scope: !595)
!3149 = !DILocation(line: 266, column: 53, scope: !606)
!3150 = !DILocation(line: 268, column: 5, scope: !606)
!3151 = !DILocation(line: 268, column: 10, scope: !3152)
!3152 = !DILexicalBlockFile(scope: !612, file: !13, discriminator: 1)
!3153 = !DILocation(line: 268, column: 20, scope: !612)
!3154 = !DILocation(line: 268, column: 43, scope: !612)
!3155 = !DILocation(line: 268, column: 49, scope: !612)
!3156 = !DILocation(line: 268, column: 63, scope: !616)
!3157 = !DILocation(line: 268, column: 71, scope: !616)
!3158 = !DILocation(line: 268, column: 63, scope: !612)
!3159 = !DILocation(line: 268, column: 89, scope: !3160)
!3160 = !DILexicalBlockFile(scope: !615, file: !13, discriminator: 2)
!3161 = !DILocation(line: 268, column: 95, scope: !615)
!3162 = !DILocation(line: 268, column: 104, scope: !615)
!3163 = !DILocation(line: 268, column: 118, scope: !615)
!3164 = !DILocation(line: 268, column: 123, scope: !3165)
!3165 = !DILexicalBlockFile(scope: !614, file: !13, discriminator: 4)
!3166 = !DILocation(line: 268, column: 133, scope: !614)
!3167 = !DILocation(line: 268, column: 163, scope: !614)
!3168 = !DILocation(line: 268, column: 181, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !614, file: !13, line: 268, column: 178)
!3170 = !DILocation(line: 268, column: 198, scope: !3169)
!3171 = !DILocation(line: 268, column: 178, scope: !3169)
!3172 = !DILocation(line: 268, column: 208, scope: !3169)
!3173 = !DILocation(line: 268, column: 178, scope: !614)
!3174 = !DILocation(line: 268, column: 178, scope: !3175)
!3175 = !DILexicalBlockFile(scope: !614, file: !13, discriminator: 5)
!3176 = !DILocation(line: 268, column: 239, scope: !3177)
!3177 = !DILexicalBlockFile(scope: !3169, file: !13, discriminator: 6)
!3178 = !DILocation(line: 268, column: 257, scope: !3169)
!3179 = !DILocation(line: 268, column: 267, scope: !3169)
!3180 = !DILocation(line: 268, column: 292, scope: !3169)
!3181 = !DILocation(line: 268, column: 223, scope: !3169)
!3182 = !DILocation(line: 268, column: 311, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !615, file: !13, discriminator: 7)
!3184 = !DILocation(line: 268, column: 311, scope: !614)
!3185 = !DILocation(line: 268, column: 311, scope: !3186)
!3186 = !DILexicalBlockFile(scope: !614, file: !13, discriminator: 8)
!3187 = !DILocation(line: 268, column: 324, scope: !3188)
!3188 = !DILexicalBlockFile(scope: !615, file: !13, discriminator: 9)
!3189 = !DILocation(line: 268, column: 326, scope: !3190)
!3190 = !DILexicalBlockFile(scope: !3191, file: !13, discriminator: 10)
!3191 = !DILexicalBlockFile(scope: !606, file: !13, discriminator: 3)
!3192 = !DILocation(line: 268, column: 326, scope: !612)
!3193 = !DILocation(line: 269, column: 5, scope: !606)
!3194 = !DILocation(line: 269, column: 10, scope: !3195)
!3195 = !DILexicalBlockFile(scope: !618, file: !13, discriminator: 1)
!3196 = !DILocation(line: 269, column: 20, scope: !618)
!3197 = !DILocation(line: 269, column: 43, scope: !618)
!3198 = !DILocation(line: 269, column: 49, scope: !618)
!3199 = !{!1898, !1877, i64 24}
!3200 = !DILocation(line: 269, column: 62, scope: !622)
!3201 = !DILocation(line: 269, column: 70, scope: !622)
!3202 = !DILocation(line: 269, column: 62, scope: !618)
!3203 = !DILocation(line: 269, column: 88, scope: !3204)
!3204 = !DILexicalBlockFile(scope: !621, file: !13, discriminator: 2)
!3205 = !DILocation(line: 269, column: 94, scope: !621)
!3206 = !DILocation(line: 269, column: 102, scope: !621)
!3207 = !DILocation(line: 269, column: 116, scope: !621)
!3208 = !DILocation(line: 269, column: 121, scope: !3209)
!3209 = !DILexicalBlockFile(scope: !620, file: !13, discriminator: 4)
!3210 = !DILocation(line: 269, column: 131, scope: !620)
!3211 = !DILocation(line: 269, column: 161, scope: !620)
!3212 = !DILocation(line: 269, column: 179, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !620, file: !13, line: 269, column: 176)
!3214 = !DILocation(line: 269, column: 196, scope: !3213)
!3215 = !DILocation(line: 269, column: 176, scope: !3213)
!3216 = !DILocation(line: 269, column: 206, scope: !3213)
!3217 = !DILocation(line: 269, column: 176, scope: !620)
!3218 = !DILocation(line: 269, column: 176, scope: !3219)
!3219 = !DILexicalBlockFile(scope: !620, file: !13, discriminator: 5)
!3220 = !DILocation(line: 269, column: 237, scope: !3221)
!3221 = !DILexicalBlockFile(scope: !3213, file: !13, discriminator: 6)
!3222 = !DILocation(line: 269, column: 255, scope: !3213)
!3223 = !DILocation(line: 269, column: 265, scope: !3213)
!3224 = !DILocation(line: 269, column: 290, scope: !3213)
!3225 = !DILocation(line: 269, column: 221, scope: !3213)
!3226 = !DILocation(line: 269, column: 309, scope: !3227)
!3227 = !DILexicalBlockFile(scope: !621, file: !13, discriminator: 7)
!3228 = !DILocation(line: 269, column: 309, scope: !620)
!3229 = !DILocation(line: 269, column: 309, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !620, file: !13, discriminator: 8)
!3231 = !DILocation(line: 269, column: 322, scope: !3232)
!3232 = !DILexicalBlockFile(scope: !621, file: !13, discriminator: 9)
!3233 = !DILocation(line: 269, column: 324, scope: !3190)
!3234 = !DILocation(line: 269, column: 324, scope: !618)
!3235 = !DILocation(line: 270, column: 19, scope: !606)
!3236 = !DILocation(line: 270, column: 7, scope: !606)
!3237 = !DILocation(line: 270, column: 27, scope: !606)
!3238 = !DILocation(line: 270, column: 37, scope: !606)
!3239 = !{!2198, !1877, i64 320}
!3240 = !DILocation(line: 270, column: 57, scope: !606)
!3241 = !DILocation(line: 270, column: 45, scope: !606)
!3242 = !DILocation(line: 270, column: 5, scope: !606)
!3243 = !DILocation(line: 271, column: 1, scope: !606)
!3244 = !DILocation(line: 233, column: 50, scope: !670)
!3245 = !DILocation(line: 234, column: 42, scope: !670)
!3246 = !DILocation(line: 234, column: 58, scope: !670)
!3247 = !DILocation(line: 236, column: 5, scope: !670)
!3248 = !DILocation(line: 236, column: 15, scope: !670)
!3249 = !DILocation(line: 237, column: 5, scope: !670)
!3250 = !DILocation(line: 237, column: 9, scope: !670)
!3251 = !DILocation(line: 238, column: 5, scope: !670)
!3252 = !DILocation(line: 238, column: 15, scope: !670)
!3253 = !DILocation(line: 239, column: 5, scope: !670)
!3254 = !DILocation(line: 239, column: 11, scope: !670)
!3255 = !DILocation(line: 241, column: 45, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !670, file: !13, line: 241, column: 9)
!3257 = !DILocation(line: 241, column: 51, scope: !3256)
!3258 = !DILocation(line: 242, column: 38, scope: !3256)
!3259 = !DILocation(line: 241, column: 10, scope: !3256)
!3260 = !DILocation(line: 241, column: 9, scope: !670)
!3261 = !DILocation(line: 243, column: 9, scope: !3256)
!3262 = !DILocation(line: 245, column: 21, scope: !670)
!3263 = !DILocation(line: 245, column: 5, scope: !670)
!3264 = !DILocation(line: 245, column: 11, scope: !670)
!3265 = !DILocation(line: 245, column: 19, scope: !670)
!3266 = !DILocation(line: 246, column: 21, scope: !670)
!3267 = !DILocation(line: 246, column: 32, scope: !670)
!3268 = !DILocation(line: 246, column: 41, scope: !670)
!3269 = !DILocation(line: 248, column: 9, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !670, file: !13, line: 248, column: 9)
!3271 = !DILocation(line: 248, column: 16, scope: !3270)
!3272 = !DILocation(line: 248, column: 9, scope: !670)
!3273 = !DILocation(line: 249, column: 24, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3270, file: !13, line: 248, column: 31)
!3275 = !DILocation(line: 249, column: 9, scope: !3274)
!3276 = !DILocation(line: 249, column: 15, scope: !3274)
!3277 = !DILocation(line: 249, column: 22, scope: !3274)
!3278 = !DILocation(line: 250, column: 13, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3274, file: !13, line: 250, column: 13)
!3280 = !DILocation(line: 250, column: 19, scope: !3279)
!3281 = !DILocation(line: 250, column: 26, scope: !3279)
!3282 = !DILocation(line: 250, column: 13, scope: !3274)
!3283 = !DILocation(line: 251, column: 13, scope: !3279)
!3284 = !DILocation(line: 252, column: 5, scope: !3274)
!3285 = !DILocation(line: 254, column: 25, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3270, file: !13, line: 253, column: 10)
!3287 = !DILocation(line: 254, column: 35, scope: !3286)
!3288 = !DILocation(line: 254, column: 44, scope: !3286)
!3289 = !DILocation(line: 255, column: 24, scope: !3286)
!3290 = !DILocation(line: 255, column: 9, scope: !3286)
!3291 = !DILocation(line: 255, column: 15, scope: !3286)
!3292 = !DILocation(line: 255, column: 22, scope: !3286)
!3293 = !DILocation(line: 258, column: 23, scope: !670)
!3294 = !DILocation(line: 258, column: 5, scope: !670)
!3295 = !DILocation(line: 258, column: 11, scope: !670)
!3296 = !DILocation(line: 258, column: 21, scope: !670)
!3297 = !DILocation(line: 259, column: 5, scope: !670)
!3298 = !DILocation(line: 259, column: 11, scope: !670)
!3299 = !DILocation(line: 259, column: 18, scope: !670)
!3300 = !DILocation(line: 260, column: 5, scope: !670)
!3301 = !DILocation(line: 260, column: 11, scope: !670)
!3302 = !DILocation(line: 260, column: 21, scope: !670)
!3303 = !DILocation(line: 262, column: 5, scope: !670)
!3304 = !DILocation(line: 263, column: 1, scope: !670)
!3305 = !DILocation(line: 1682, column: 9, scope: !519)
!3306 = !DILocation(line: 1682, column: 25, scope: !519)
!3307 = !DILocation(line: 1682, column: 46, scope: !519)
!3308 = !DILocation(line: 1683, column: 9, scope: !519)
!3309 = !DILocation(line: 1683, column: 21, scope: !519)
!3310 = !DILocation(line: 1683, column: 34, scope: !519)
!3311 = !DILocation(line: 1683, column: 51, scope: !519)
!3312 = !DILocation(line: 1685, column: 5, scope: !519)
!3313 = !DILocation(line: 1685, column: 16, scope: !519)
!3314 = !DILocation(line: 1685, column: 30, scope: !519)
!3315 = !DILocation(line: 1685, column: 43, scope: !519)
!3316 = !DILocation(line: 1685, column: 34, scope: !519)
!3317 = !DILocation(line: 1685, column: 50, scope: !519)
!3318 = !DILocation(line: 1685, column: 49, scope: !519)
!3319 = !DILocation(line: 1687, column: 9, scope: !533)
!3320 = !DILocation(line: 1687, column: 9, scope: !519)
!3321 = !DILocation(line: 1689, column: 9, scope: !532)
!3322 = !DILocation(line: 1689, column: 15, scope: !532)
!3323 = !DILocation(line: 1689, column: 39, scope: !532)
!3324 = !DILocation(line: 1689, column: 45, scope: !532)
!3325 = !DILocation(line: 1689, column: 52, scope: !532)
!3326 = !DILocation(line: 1689, column: 21, scope: !532)
!3327 = !DILocation(line: 1690, column: 13, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !532, file: !13, line: 1690, column: 13)
!3329 = !DILocation(line: 1690, column: 17, scope: !3328)
!3330 = !DILocation(line: 1690, column: 13, scope: !532)
!3331 = !DILocation(line: 1691, column: 21, scope: !3328)
!3332 = !DILocation(line: 1691, column: 27, scope: !3328)
!3333 = !DILocation(line: 1691, column: 25, scope: !3328)
!3334 = !DILocation(line: 1691, column: 34, scope: !3328)
!3335 = !DILocation(line: 1691, column: 33, scope: !3328)
!3336 = !DILocation(line: 1691, column: 39, scope: !3328)
!3337 = !DILocation(line: 1691, column: 13, scope: !3328)
!3338 = !DILocation(line: 1693, column: 25, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3328, file: !13, line: 1692, column: 14)
!3340 = !DILocation(line: 1693, column: 14, scope: !3339)
!3341 = !DILocation(line: 1693, column: 23, scope: !3339)
!3342 = !DILocation(line: 1694, column: 13, scope: !3339)
!3343 = !DILocation(line: 1696, column: 5, scope: !533)
!3344 = !DILocation(line: 1697, column: 14, scope: !536)
!3345 = !DILocation(line: 1697, column: 14, scope: !533)
!3346 = !DILocation(line: 1701, column: 9, scope: !535)
!3347 = !DILocation(line: 1701, column: 15, scope: !535)
!3348 = !DILocation(line: 1701, column: 19, scope: !535)
!3349 = !DILocation(line: 1702, column: 9, scope: !535)
!3350 = !DILocation(line: 1703, column: 13, scope: !538)
!3351 = !DILocation(line: 1703, column: 21, scope: !538)
!3352 = !DILocation(line: 1706, column: 13, scope: !538)
!3353 = !DILocation(line: 1706, column: 33, scope: !3354)
!3354 = !DILexicalBlockFile(scope: !3355, file: !13, discriminator: 10)
!3355 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 1)
!3356 = !DILocation(line: 1706, column: 39, scope: !538)
!3357 = !DILocation(line: 1706, column: 32, scope: !538)
!3358 = !DILocation(line: 1706, column: 84, scope: !3359)
!3359 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 2)
!3360 = !DILocation(line: 1706, column: 65, scope: !538)
!3361 = !DILocation(line: 1706, column: 97, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 3)
!3363 = !DILocation(line: 1706, column: 103, scope: !538)
!3364 = !DILocation(line: 1706, column: 96, scope: !538)
!3365 = !DILocation(line: 1706, column: 148, scope: !3366)
!3366 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 5)
!3367 = !DILocation(line: 1706, column: 130, scope: !538)
!3368 = !DILocation(line: 1706, column: 129, scope: !538)
!3369 = !DILocation(line: 1706, column: 178, scope: !3370)
!3370 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 6)
!3371 = !DILocation(line: 1706, column: 160, scope: !538)
!3372 = !DILocation(line: 1706, column: 159, scope: !538)
!3373 = !DILocation(line: 1706, column: 32, scope: !3374)
!3374 = !DILexicalBlockFile(scope: !3375, file: !13, discriminator: 8)
!3375 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 7)
!3376 = !DILocation(line: 1706, column: 192, scope: !3377)
!3377 = !DILexicalBlockFile(scope: !3378, file: !13, discriminator: 9)
!3378 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 4)
!3379 = !DILocation(line: 1707, column: 22, scope: !538)
!3380 = !DILocation(line: 1707, column: 19, scope: !538)
!3381 = !DILocation(line: 1708, column: 17, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !538, file: !13, line: 1708, column: 17)
!3383 = !DILocation(line: 1708, column: 22, scope: !3382)
!3384 = !DILocation(line: 1708, column: 19, scope: !3382)
!3385 = !DILocation(line: 1708, column: 17, scope: !538)
!3386 = !DILocation(line: 1709, column: 29, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3382, file: !13, line: 1708, column: 27)
!3388 = !DILocation(line: 1709, column: 18, scope: !3387)
!3389 = !DILocation(line: 1709, column: 27, scope: !3387)
!3390 = !DILocation(line: 1710, column: 17, scope: !3387)
!3391 = !DILocation(line: 1712, column: 31, scope: !538)
!3392 = !DILocation(line: 1712, column: 37, scope: !538)
!3393 = !DILocation(line: 1712, column: 30, scope: !538)
!3394 = !DILocation(line: 1712, column: 82, scope: !3355)
!3395 = !DILocation(line: 1712, column: 63, scope: !538)
!3396 = !DILocation(line: 1712, column: 95, scope: !3359)
!3397 = !DILocation(line: 1712, column: 101, scope: !538)
!3398 = !DILocation(line: 1712, column: 94, scope: !538)
!3399 = !DILocation(line: 1712, column: 146, scope: !3378)
!3400 = !DILocation(line: 1712, column: 128, scope: !538)
!3401 = !DILocation(line: 1712, column: 127, scope: !538)
!3402 = !DILocation(line: 1712, column: 176, scope: !3366)
!3403 = !DILocation(line: 1712, column: 158, scope: !538)
!3404 = !DILocation(line: 1712, column: 157, scope: !538)
!3405 = !DILocation(line: 1712, column: 30, scope: !3406)
!3406 = !DILexicalBlockFile(scope: !3370, file: !13, discriminator: 7)
!3407 = !DILocation(line: 1712, column: 16, scope: !3408)
!3408 = !DILexicalBlockFile(scope: !3362, file: !13, discriminator: 8)
!3409 = !DILocation(line: 1713, column: 18, scope: !538)
!3410 = !DILocation(line: 1713, column: 15, scope: !538)
!3411 = !DILocation(line: 1714, column: 17, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !538, file: !13, line: 1714, column: 17)
!3413 = !DILocation(line: 1714, column: 20, scope: !3412)
!3414 = !DILocation(line: 1714, column: 17, scope: !538)
!3415 = !DILocation(line: 1715, column: 25, scope: !3412)
!3416 = !DILocation(line: 1715, column: 29, scope: !3412)
!3417 = !DILocation(line: 1715, column: 27, scope: !3412)
!3418 = !DILocation(line: 1715, column: 36, scope: !3412)
!3419 = !DILocation(line: 1715, column: 35, scope: !3412)
!3420 = !DILocation(line: 1715, column: 17, scope: !3412)
!3421 = !DILocation(line: 1716, column: 17, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !538, file: !13, line: 1716, column: 17)
!3423 = !DILocation(line: 1716, column: 20, scope: !3422)
!3424 = !DILocation(line: 1716, column: 17, scope: !538)
!3425 = !DILocation(line: 1717, column: 34, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !13, line: 1717, column: 21)
!3427 = distinct !DILexicalBlock(scope: !3422, file: !13, line: 1716, column: 29)
!3428 = !DILocation(line: 1717, column: 40, scope: !3426)
!3429 = !DILocation(line: 1717, column: 33, scope: !3426)
!3430 = !DILocation(line: 1717, column: 85, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !3426, file: !13, discriminator: 1)
!3432 = !DILocation(line: 1717, column: 66, scope: !3426)
!3433 = !DILocation(line: 1717, column: 98, scope: !3434)
!3434 = !DILexicalBlockFile(scope: !3426, file: !13, discriminator: 2)
!3435 = !DILocation(line: 1717, column: 104, scope: !3426)
!3436 = !DILocation(line: 1717, column: 97, scope: !3426)
!3437 = !DILocation(line: 1717, column: 149, scope: !3438)
!3438 = !DILexicalBlockFile(scope: !3426, file: !13, discriminator: 4)
!3439 = !DILocation(line: 1717, column: 131, scope: !3426)
!3440 = !DILocation(line: 1717, column: 130, scope: !3426)
!3441 = !DILocation(line: 1717, column: 179, scope: !3442)
!3442 = !DILexicalBlockFile(scope: !3426, file: !13, discriminator: 5)
!3443 = !DILocation(line: 1717, column: 161, scope: !3426)
!3444 = !DILocation(line: 1717, column: 160, scope: !3426)
!3445 = !DILocation(line: 1717, column: 33, scope: !3446)
!3446 = !DILexicalBlockFile(scope: !3447, file: !13, discriminator: 7)
!3447 = !DILexicalBlockFile(scope: !3426, file: !13, discriminator: 6)
!3448 = !DILocation(line: 1717, column: 193, scope: !3449)
!3449 = !DILexicalBlockFile(scope: !3450, file: !13, discriminator: 8)
!3450 = !DILexicalBlockFile(scope: !3426, file: !13, discriminator: 3)
!3451 = !DILocation(line: 1717, column: 21, scope: !3427)
!3452 = !DILocation(line: 1718, column: 29, scope: !3426)
!3453 = !DILocation(line: 1718, column: 33, scope: !3426)
!3454 = !DILocation(line: 1718, column: 31, scope: !3426)
!3455 = !DILocation(line: 1718, column: 40, scope: !3426)
!3456 = !DILocation(line: 1718, column: 39, scope: !3426)
!3457 = !DILocation(line: 1718, column: 45, scope: !3426)
!3458 = !DILocation(line: 1718, column: 21, scope: !3426)
!3459 = !DILocation(line: 1720, column: 29, scope: !3426)
!3460 = !DILocation(line: 1720, column: 33, scope: !3426)
!3461 = !DILocation(line: 1720, column: 31, scope: !3426)
!3462 = !DILocation(line: 1720, column: 40, scope: !3426)
!3463 = !DILocation(line: 1720, column: 39, scope: !3426)
!3464 = !DILocation(line: 1720, column: 21, scope: !3426)
!3465 = !DILocation(line: 1722, column: 9, scope: !539)
!3466 = !DILocation(line: 1722, column: 9, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !539, file: !13, discriminator: 1)
!3468 = !DILocation(line: 1702, column: 9, scope: !539)
!3469 = !DILocation(line: 1723, column: 5, scope: !536)
!3470 = !DILocation(line: 1726, column: 9, scope: !542)
!3471 = !DILocation(line: 1726, column: 20, scope: !542)
!3472 = !DILocation(line: 1726, column: 81, scope: !542)
!3473 = !DILocation(line: 1726, column: 63, scope: !542)
!3474 = !DILocation(line: 1726, column: 91, scope: !542)
!3475 = !DILocation(line: 1727, column: 9, scope: !542)
!3476 = !DILocation(line: 1727, column: 15, scope: !542)
!3477 = !DILocation(line: 1727, column: 54, scope: !542)
!3478 = !DILocation(line: 1727, column: 37, scope: !542)
!3479 = !DILocation(line: 1727, column: 64, scope: !542)
!3480 = !DILocation(line: 1727, column: 70, scope: !542)
!3481 = !DILocation(line: 1727, column: 35, scope: !542)
!3482 = !DILocation(line: 1727, column: 128, scope: !3483)
!3483 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 1)
!3484 = !DILocation(line: 1727, column: 112, scope: !542)
!3485 = !DILocation(line: 1727, column: 137, scope: !542)
!3486 = !DILocation(line: 1727, column: 143, scope: !542)
!3487 = !DILocation(line: 1727, column: 82, scope: !542)
!3488 = !DILocation(line: 1727, column: 178, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 3)
!3490 = !DILocation(line: 1727, column: 161, scope: !542)
!3491 = !DILocation(line: 1727, column: 186, scope: !542)
!3492 = !DILocation(line: 1727, column: 153, scope: !542)
!3493 = !DILocation(line: 1727, column: 229, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 4)
!3495 = !DILocation(line: 1727, column: 203, scope: !542)
!3496 = !DILocation(line: 1727, column: 237, scope: !542)
!3497 = !DILocation(line: 1727, column: 195, scope: !542)
!3498 = !DILocation(line: 1727, column: 35, scope: !3499)
!3499 = !DILexicalBlockFile(scope: !3500, file: !13, discriminator: 6)
!3500 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 5)
!3501 = !DILocation(line: 1727, column: 284, scope: !3502)
!3502 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 2)
!3503 = !DILocation(line: 1727, column: 264, scope: !542)
!3504 = !DILocation(line: 1727, column: 294, scope: !542)
!3505 = !DILocation(line: 1727, column: 299, scope: !542)
!3506 = !DILocation(line: 1727, column: 15, scope: !3507)
!3507 = !DILexicalBlockFile(scope: !3508, file: !13, discriminator: 8)
!3508 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 7)
!3509 = !DILocation(line: 1730, column: 13, scope: !546)
!3510 = !DILocation(line: 1730, column: 24, scope: !546)
!3511 = !DILocation(line: 1730, column: 13, scope: !542)
!3512 = !DILocation(line: 1731, column: 13, scope: !545)
!3513 = !DILocation(line: 1731, column: 19, scope: !545)
!3514 = !DILocation(line: 1731, column: 43, scope: !545)
!3515 = !DILocation(line: 1731, column: 49, scope: !545)
!3516 = !DILocation(line: 1731, column: 56, scope: !545)
!3517 = !DILocation(line: 1731, column: 61, scope: !545)
!3518 = !DILocation(line: 1731, column: 25, scope: !545)
!3519 = !DILocation(line: 1732, column: 17, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !545, file: !13, line: 1732, column: 17)
!3521 = !DILocation(line: 1732, column: 21, scope: !3520)
!3522 = !DILocation(line: 1732, column: 17, scope: !545)
!3523 = !DILocation(line: 1733, column: 25, scope: !3520)
!3524 = !DILocation(line: 1733, column: 31, scope: !3520)
!3525 = !DILocation(line: 1733, column: 29, scope: !3520)
!3526 = !DILocation(line: 1733, column: 38, scope: !3520)
!3527 = !DILocation(line: 1733, column: 37, scope: !3520)
!3528 = !DILocation(line: 1733, column: 43, scope: !3520)
!3529 = !DILocation(line: 1733, column: 17, scope: !3520)
!3530 = !DILocation(line: 1734, column: 25, scope: !545)
!3531 = !DILocation(line: 1734, column: 14, scope: !545)
!3532 = !DILocation(line: 1734, column: 23, scope: !545)
!3533 = !DILocation(line: 1735, column: 13, scope: !545)
!3534 = !DILocation(line: 1736, column: 9, scope: !546)
!3535 = !DILocation(line: 1738, column: 13, scope: !548)
!3536 = !DILocation(line: 1738, column: 19, scope: !548)
!3537 = !DILocation(line: 1738, column: 23, scope: !548)
!3538 = !DILocation(line: 1739, column: 13, scope: !548)
!3539 = !DILocation(line: 1739, column: 19, scope: !548)
!3540 = !DILocation(line: 1739, column: 23, scope: !548)
!3541 = !DILocation(line: 1739, column: 30, scope: !548)
!3542 = !DILocation(line: 1739, column: 41, scope: !548)
!3543 = !DILocation(line: 1739, column: 46, scope: !548)
!3544 = !DILocation(line: 1739, column: 45, scope: !548)
!3545 = !DILocation(line: 1739, column: 27, scope: !548)
!3546 = !DILocation(line: 1740, column: 13, scope: !548)
!3547 = !DILocation(line: 1740, column: 19, scope: !548)
!3548 = !DILocation(line: 1741, column: 17, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !548, file: !13, line: 1741, column: 17)
!3550 = !DILocation(line: 1741, column: 21, scope: !3549)
!3551 = !DILocation(line: 1741, column: 19, scope: !3549)
!3552 = !DILocation(line: 1741, column: 17, scope: !548)
!3553 = !DILocation(line: 1742, column: 21, scope: !3549)
!3554 = !DILocation(line: 1742, column: 19, scope: !3549)
!3555 = !DILocation(line: 1742, column: 17, scope: !3549)
!3556 = !DILocation(line: 1743, column: 13, scope: !548)
!3557 = !DILocation(line: 1743, column: 20, scope: !3558)
!3558 = !DILexicalBlockFile(scope: !3559, file: !13, discriminator: 2)
!3559 = !DILexicalBlockFile(scope: !548, file: !13, discriminator: 1)
!3560 = !DILocation(line: 1743, column: 24, scope: !548)
!3561 = !DILocation(line: 1743, column: 22, scope: !548)
!3562 = !DILocation(line: 1744, column: 17, scope: !552)
!3563 = !DILocation(line: 1744, column: 28, scope: !552)
!3564 = !DILocation(line: 1745, column: 17, scope: !552)
!3565 = !DILocation(line: 1745, column: 23, scope: !552)
!3566 = !DILocation(line: 1745, column: 47, scope: !552)
!3567 = !DILocation(line: 1745, column: 53, scope: !552)
!3568 = !DILocation(line: 1745, column: 56, scope: !552)
!3569 = !DILocation(line: 1745, column: 61, scope: !552)
!3570 = !DILocation(line: 1745, column: 29, scope: !552)
!3571 = !DILocation(line: 1746, column: 21, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !552, file: !13, line: 1746, column: 21)
!3573 = !DILocation(line: 1746, column: 25, scope: !3572)
!3574 = !DILocation(line: 1746, column: 39, scope: !3572)
!3575 = !DILocation(line: 1746, column: 42, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !3572, file: !13, discriminator: 1)
!3577 = !DILocation(line: 1746, column: 49, scope: !3572)
!3578 = !DILocation(line: 1746, column: 46, scope: !3572)
!3579 = !DILocation(line: 1746, column: 21, scope: !552)
!3580 = !DILocation(line: 1747, column: 21, scope: !3572)
!3581 = !DILocation(line: 1748, column: 24, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !552, file: !13, line: 1748, column: 17)
!3583 = !DILocation(line: 1748, column: 22, scope: !3582)
!3584 = !DILocation(line: 1748, column: 29, scope: !3585)
!3585 = !DILexicalBlockFile(scope: !3586, file: !13, discriminator: 2)
!3586 = !DILexicalBlockFile(scope: !3587, file: !13, discriminator: 1)
!3587 = distinct !DILexicalBlock(scope: !3582, file: !13, line: 1748, column: 17)
!3588 = !DILocation(line: 1748, column: 33, scope: !3587)
!3589 = !DILocation(line: 1748, column: 31, scope: !3587)
!3590 = !DILocation(line: 1748, column: 17, scope: !3582)
!3591 = !DILocation(line: 1749, column: 38, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !13, line: 1749, column: 25)
!3593 = distinct !DILexicalBlock(scope: !3587, file: !13, line: 1748, column: 50)
!3594 = !DILocation(line: 1749, column: 44, scope: !3592)
!3595 = !DILocation(line: 1749, column: 37, scope: !3592)
!3596 = !DILocation(line: 1749, column: 96, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !3592, file: !13, discriminator: 1)
!3598 = !DILocation(line: 1749, column: 89, scope: !3592)
!3599 = !DILocation(line: 1749, column: 70, scope: !3592)
!3600 = !DILocation(line: 1749, column: 104, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3592, file: !13, discriminator: 2)
!3602 = !DILocation(line: 1749, column: 110, scope: !3592)
!3603 = !DILocation(line: 1749, column: 103, scope: !3592)
!3604 = !DILocation(line: 1749, column: 162, scope: !3605)
!3605 = !DILexicalBlockFile(scope: !3592, file: !13, discriminator: 4)
!3606 = !DILocation(line: 1749, column: 155, scope: !3592)
!3607 = !DILocation(line: 1749, column: 137, scope: !3592)
!3608 = !DILocation(line: 1749, column: 136, scope: !3592)
!3609 = !DILocation(line: 1749, column: 194, scope: !3610)
!3610 = !DILexicalBlockFile(scope: !3592, file: !13, discriminator: 5)
!3611 = !DILocation(line: 1749, column: 187, scope: !3592)
!3612 = !DILocation(line: 1749, column: 169, scope: !3592)
!3613 = !DILocation(line: 1749, column: 168, scope: !3592)
!3614 = !DILocation(line: 1749, column: 37, scope: !3615)
!3615 = !DILexicalBlockFile(scope: !3616, file: !13, discriminator: 7)
!3616 = !DILexicalBlockFile(scope: !3592, file: !13, discriminator: 6)
!3617 = !DILocation(line: 1749, column: 209, scope: !3618)
!3618 = !DILexicalBlockFile(scope: !3619, file: !13, discriminator: 8)
!3619 = !DILexicalBlockFile(scope: !3592, file: !13, discriminator: 3)
!3620 = !DILocation(line: 1749, column: 206, scope: !3592)
!3621 = !DILocation(line: 1749, column: 203, scope: !3592)
!3622 = !DILocation(line: 1749, column: 25, scope: !3593)
!3623 = !DILocation(line: 1750, column: 25, scope: !3592)
!3624 = !DILocation(line: 1751, column: 17, scope: !3593)
!3625 = !DILocation(line: 1748, column: 46, scope: !3587)
!3626 = !DILocation(line: 1748, column: 17, scope: !3587)
!3627 = !DILocation(line: 1752, column: 21, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !552, file: !13, line: 1752, column: 21)
!3629 = !DILocation(line: 1752, column: 26, scope: !3628)
!3630 = !DILocation(line: 1752, column: 23, scope: !3628)
!3631 = !DILocation(line: 1752, column: 21, scope: !552)
!3632 = !DILocation(line: 1753, column: 29, scope: !3628)
!3633 = !DILocation(line: 1753, column: 35, scope: !3628)
!3634 = !DILocation(line: 1753, column: 33, scope: !3628)
!3635 = !DILocation(line: 1753, column: 42, scope: !3628)
!3636 = !DILocation(line: 1753, column: 41, scope: !3628)
!3637 = !DILocation(line: 1753, column: 49, scope: !3628)
!3638 = !DILocation(line: 1753, column: 47, scope: !3628)
!3639 = !DILocation(line: 1753, column: 21, scope: !3628)
!3640 = !DILocation(line: 1754, column: 21, scope: !552)
!3641 = !DILocation(line: 1754, column: 27, scope: !552)
!3642 = !DILocation(line: 1754, column: 25, scope: !552)
!3643 = !DILocation(line: 1754, column: 19, scope: !552)
!3644 = !DILocation(line: 1755, column: 13, scope: !548)
!3645 = !DILocation(line: 1755, column: 13, scope: !3559)
!3646 = !DILocation(line: 1756, column: 37, scope: !548)
!3647 = !DILocation(line: 1756, column: 43, scope: !548)
!3648 = !DILocation(line: 1756, column: 46, scope: !548)
!3649 = !DILocation(line: 1756, column: 51, scope: !548)
!3650 = !DILocation(line: 1756, column: 19, scope: !548)
!3651 = !DILocation(line: 1756, column: 17, scope: !548)
!3652 = !DILocation(line: 1757, column: 17, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !548, file: !13, line: 1757, column: 17)
!3654 = !DILocation(line: 1757, column: 21, scope: !3653)
!3655 = !DILocation(line: 1757, column: 17, scope: !548)
!3656 = !DILocation(line: 1758, column: 29, scope: !3653)
!3657 = !DILocation(line: 1758, column: 18, scope: !3653)
!3658 = !DILocation(line: 1758, column: 27, scope: !3653)
!3659 = !DILocation(line: 1758, column: 17, scope: !3653)
!3660 = !DILocation(line: 1760, column: 30, scope: !3653)
!3661 = !DILocation(line: 1760, column: 36, scope: !3653)
!3662 = !DILocation(line: 1760, column: 34, scope: !3653)
!3663 = !DILocation(line: 1760, column: 43, scope: !3653)
!3664 = !DILocation(line: 1760, column: 42, scope: !3653)
!3665 = !DILocation(line: 1760, column: 18, scope: !3653)
!3666 = !DILocation(line: 1760, column: 27, scope: !3653)
!3667 = !DILocation(line: 1761, column: 13, scope: !548)
!3668 = !DILocation(line: 1762, column: 9, scope: !546)
!3669 = !DILocation(line: 1763, column: 5, scope: !536)
!3670 = !DILocation(line: 1764, column: 1, scope: !519)
!3671 = !DILocation(line: 1663, column: 23, scope: !684)
!3672 = !DILocation(line: 1663, column: 35, scope: !684)
!3673 = !DILocation(line: 1663, column: 44, scope: !684)
!3674 = !DILocation(line: 1663, column: 57, scope: !684)
!3675 = !DILocation(line: 1665, column: 9, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !684, file: !13, line: 1665, column: 9)
!3677 = !DILocation(line: 1665, column: 14, scope: !3676)
!3678 = !DILocation(line: 1665, column: 9, scope: !684)
!3679 = !DILocation(line: 1667, column: 41, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3676, file: !13, line: 1665, column: 39)
!3681 = !DILocation(line: 1667, column: 51, scope: !3680)
!3682 = !DILocation(line: 1667, column: 44, scope: !3680)
!3683 = !DILocation(line: 1667, column: 55, scope: !3680)
!3684 = !DILocation(line: 1667, column: 61, scope: !3680)
!3685 = !DILocation(line: 1667, column: 59, scope: !3680)
!3686 = !DILocation(line: 1667, column: 25, scope: !3680)
!3687 = !DILocation(line: 1667, column: 9, scope: !3680)
!3688 = !DILocation(line: 1669, column: 5, scope: !684)
!3689 = !DILocation(line: 1670, column: 9, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !13, line: 1669, column: 14)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !13, line: 1669, column: 5)
!3692 = distinct !DILexicalBlock(scope: !684, file: !13, line: 1669, column: 5)
!3693 = !DILocation(line: 1670, column: 29, scope: !3694)
!3694 = !DILexicalBlockFile(scope: !3695, file: !13, discriminator: 10)
!3695 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 1)
!3696 = !DILocation(line: 1670, column: 35, scope: !3690)
!3697 = !DILocation(line: 1670, column: 28, scope: !3690)
!3698 = !DILocation(line: 1670, column: 80, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 2)
!3700 = !DILocation(line: 1670, column: 61, scope: !3690)
!3701 = !DILocation(line: 1670, column: 93, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 3)
!3703 = !DILocation(line: 1670, column: 99, scope: !3690)
!3704 = !DILocation(line: 1670, column: 92, scope: !3690)
!3705 = !DILocation(line: 1670, column: 144, scope: !3706)
!3706 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 5)
!3707 = !DILocation(line: 1670, column: 126, scope: !3690)
!3708 = !DILocation(line: 1670, column: 125, scope: !3690)
!3709 = !DILocation(line: 1670, column: 174, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 6)
!3711 = !DILocation(line: 1670, column: 156, scope: !3690)
!3712 = !DILocation(line: 1670, column: 155, scope: !3690)
!3713 = !DILocation(line: 1670, column: 28, scope: !3714)
!3714 = !DILexicalBlockFile(scope: !3715, file: !13, discriminator: 8)
!3715 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 7)
!3716 = !DILocation(line: 1670, column: 190, scope: !3717)
!3717 = !DILexicalBlockFile(scope: !3718, file: !13, discriminator: 9)
!3718 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 4)
!3719 = !DILocation(line: 1670, column: 188, scope: !3690)
!3720 = !DILocation(line: 1671, column: 18, scope: !3690)
!3721 = !DILocation(line: 1671, column: 15, scope: !3690)
!3722 = !DILocation(line: 1672, column: 26, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3690, file: !13, line: 1672, column: 13)
!3724 = !DILocation(line: 1672, column: 32, scope: !3723)
!3725 = !DILocation(line: 1672, column: 25, scope: !3723)
!3726 = !DILocation(line: 1672, column: 77, scope: !3727)
!3727 = !DILexicalBlockFile(scope: !3723, file: !13, discriminator: 1)
!3728 = !DILocation(line: 1672, column: 58, scope: !3723)
!3729 = !DILocation(line: 1672, column: 90, scope: !3730)
!3730 = !DILexicalBlockFile(scope: !3723, file: !13, discriminator: 2)
!3731 = !DILocation(line: 1672, column: 96, scope: !3723)
!3732 = !DILocation(line: 1672, column: 89, scope: !3723)
!3733 = !DILocation(line: 1672, column: 141, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !3723, file: !13, discriminator: 4)
!3735 = !DILocation(line: 1672, column: 123, scope: !3723)
!3736 = !DILocation(line: 1672, column: 122, scope: !3723)
!3737 = !DILocation(line: 1672, column: 171, scope: !3738)
!3738 = !DILexicalBlockFile(scope: !3723, file: !13, discriminator: 5)
!3739 = !DILocation(line: 1672, column: 153, scope: !3723)
!3740 = !DILocation(line: 1672, column: 152, scope: !3723)
!3741 = !DILocation(line: 1672, column: 25, scope: !3742)
!3742 = !DILexicalBlockFile(scope: !3743, file: !13, discriminator: 7)
!3743 = !DILexicalBlockFile(scope: !3723, file: !13, discriminator: 6)
!3744 = !DILocation(line: 1672, column: 188, scope: !3745)
!3745 = !DILexicalBlockFile(scope: !3746, file: !13, discriminator: 8)
!3746 = !DILexicalBlockFile(scope: !3723, file: !13, discriminator: 3)
!3747 = !DILocation(line: 1672, column: 185, scope: !3723)
!3748 = !DILocation(line: 1672, column: 13, scope: !3690)
!3749 = !DILocation(line: 1673, column: 20, scope: !3723)
!3750 = !DILocation(line: 1673, column: 13, scope: !3723)
!3751 = !DILocation(line: 1674, column: 13, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3690, file: !13, line: 1674, column: 13)
!3753 = !DILocation(line: 1674, column: 18, scope: !3752)
!3754 = !DILocation(line: 1674, column: 15, scope: !3752)
!3755 = !DILocation(line: 1674, column: 13, scope: !3690)
!3756 = !DILocation(line: 1675, column: 13, scope: !3752)
!3757 = !DILocation(line: 1676, column: 14, scope: !3690)
!3758 = !DILocation(line: 1676, column: 11, scope: !3690)
!3759 = !DILocation(line: 1669, column: 5, scope: !3691)
!3760 = !DILocation(line: 1678, column: 1, scope: !684)
!3761 = !DILocation(line: 1150, column: 31, scope: !692)
!3762 = !DILocation(line: 1152, column: 5, scope: !692)
!3763 = !DILocation(line: 1152, column: 11, scope: !692)
!3764 = !DILocation(line: 1152, column: 22, scope: !692)
!3765 = !{!3766, !1878, i64 96}
!3766 = !{!"", !1899, i64 0, !1884, i64 16, !1884, i64 20, !1900, i64 24, !1877, i64 32, !1877, i64 40, !1877, i64 48, !1877, i64 56, !1877, i64 64, !1877, i64 72, !1877, i64 80, !1878, i64 88, !1878, i64 89, !1878, i64 90, !1878, i64 91, !1878, i64 92, !1878, i64 93, !1878, i64 94, !1878, i64 95, !1878, i64 96, !1877, i64 104, !1878, i64 112, !1877, i64 120, !1900, i64 128, !1877, i64 136, !1900, i64 144, !1877, i64 152, !3767, i64 160, !1877, i64 168, !1877, i64 176, !1877, i64 184}
!3767 = !{!"double", !1878, i64 0}
!3768 = !DILocation(line: 1153, column: 41, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1153, column: 9)
!3770 = !DILocation(line: 1153, column: 28, scope: !3769)
!3771 = !DILocation(line: 1153, column: 9, scope: !3769)
!3772 = !DILocation(line: 1153, column: 47, scope: !3769)
!3773 = !DILocation(line: 1153, column: 9, scope: !692)
!3774 = !DILocation(line: 1154, column: 9, scope: !3769)
!3775 = !DILocation(line: 1155, column: 26, scope: !692)
!3776 = !DILocation(line: 1155, column: 5, scope: !692)
!3777 = !DILocation(line: 1156, column: 5, scope: !692)
!3778 = !DILocation(line: 1156, column: 10, scope: !3779)
!3779 = !DILexicalBlockFile(scope: !734, file: !13, discriminator: 1)
!3780 = !DILocation(line: 1156, column: 21, scope: !734)
!3781 = !DILocation(line: 1156, column: 40, scope: !734)
!3782 = !DILocation(line: 1156, column: 26, scope: !734)
!3783 = !DILocation(line: 1156, column: 45, scope: !734)
!3784 = !DILocation(line: 1156, column: 64, scope: !734)
!3785 = !DILocation(line: 1156, column: 89, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !3787, file: !13, discriminator: 2)
!3787 = distinct !DILexicalBlock(scope: !734, file: !13, line: 1156, column: 67)
!3788 = !DILocation(line: 1156, column: 93, scope: !3787)
!3789 = !DILocation(line: 1156, column: 96, scope: !3787)
!3790 = !{!3791, !1900, i64 16}
!3791 = !{!"", !1877, i64 0, !1877, i64 8, !1900, i64 16}
!3792 = !DILocation(line: 1156, column: 104, scope: !3787)
!3793 = !DILocation(line: 1156, column: 131, scope: !3787)
!3794 = !DILocation(line: 1156, column: 70, scope: !3787)
!3795 = !DILocation(line: 1156, column: 74, scope: !3787)
!3796 = !DILocation(line: 1156, column: 77, scope: !3787)
!3797 = !DILocation(line: 1156, column: 85, scope: !3787)
!3798 = !DILocation(line: 1156, column: 160, scope: !3787)
!3799 = !DILocation(line: 1156, column: 160, scope: !3800)
!3800 = !DILexicalBlockFile(scope: !3787, file: !13, discriminator: 3)
!3801 = !DILocation(line: 1156, column: 201, scope: !3802)
!3802 = !DILexicalBlockFile(scope: !734, file: !13, discriminator: 4)
!3803 = !DILocation(line: 1156, column: 204, scope: !734)
!3804 = !DILocation(line: 1156, column: 207, scope: !734)
!3805 = !{!3791, !1877, i64 0}
!3806 = !DILocation(line: 1156, column: 173, scope: !734)
!3807 = !DILocation(line: 1156, column: 176, scope: !734)
!3808 = !DILocation(line: 1156, column: 179, scope: !734)
!3809 = !{!3791, !1877, i64 8}
!3810 = !DILocation(line: 1156, column: 188, scope: !734)
!3811 = !DILocation(line: 1156, column: 191, scope: !734)
!3812 = !DILocation(line: 1156, column: 199, scope: !734)
!3813 = !DILocation(line: 1156, column: 244, scope: !734)
!3814 = !DILocation(line: 1156, column: 247, scope: !734)
!3815 = !DILocation(line: 1156, column: 250, scope: !734)
!3816 = !DILocation(line: 1156, column: 216, scope: !734)
!3817 = !DILocation(line: 1156, column: 219, scope: !734)
!3818 = !DILocation(line: 1156, column: 222, scope: !734)
!3819 = !DILocation(line: 1156, column: 231, scope: !734)
!3820 = !DILocation(line: 1156, column: 234, scope: !734)
!3821 = !DILocation(line: 1156, column: 242, scope: !734)
!3822 = !DILocation(line: 1156, column: 259, scope: !734)
!3823 = !DILocation(line: 1156, column: 262, scope: !734)
!3824 = !DILocation(line: 1156, column: 265, scope: !734)
!3825 = !DILocation(line: 1156, column: 273, scope: !734)
!3826 = !DILocation(line: 1156, column: 287, scope: !692)
!3827 = !DILocation(line: 1156, column: 287, scope: !734)
!3828 = !DILocation(line: 1157, column: 9, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1157, column: 9)
!3830 = !DILocation(line: 1157, column: 15, scope: !3829)
!3831 = !{!3766, !1877, i64 176}
!3832 = !DILocation(line: 1157, column: 27, scope: !3829)
!3833 = !DILocation(line: 1157, column: 9, scope: !692)
!3834 = !DILocation(line: 1158, column: 44, scope: !3829)
!3835 = !DILocation(line: 1158, column: 32, scope: !3829)
!3836 = !DILocation(line: 1158, column: 9, scope: !3829)
!3837 = !DILocation(line: 1159, column: 5, scope: !692)
!3838 = !DILocation(line: 1159, column: 10, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !736, file: !13, discriminator: 1)
!3840 = !DILocation(line: 1159, column: 20, scope: !736)
!3841 = !DILocation(line: 1159, column: 43, scope: !736)
!3842 = !DILocation(line: 1159, column: 49, scope: !736)
!3843 = !{!3766, !1877, i64 184}
!3844 = !DILocation(line: 1159, column: 60, scope: !740)
!3845 = !DILocation(line: 1159, column: 68, scope: !740)
!3846 = !DILocation(line: 1159, column: 60, scope: !736)
!3847 = !DILocation(line: 1159, column: 86, scope: !3848)
!3848 = !DILexicalBlockFile(scope: !739, file: !13, discriminator: 2)
!3849 = !DILocation(line: 1159, column: 92, scope: !739)
!3850 = !DILocation(line: 1159, column: 98, scope: !739)
!3851 = !DILocation(line: 1159, column: 112, scope: !739)
!3852 = !DILocation(line: 1159, column: 117, scope: !3853)
!3853 = !DILexicalBlockFile(scope: !738, file: !13, discriminator: 4)
!3854 = !DILocation(line: 1159, column: 127, scope: !738)
!3855 = !DILocation(line: 1159, column: 157, scope: !738)
!3856 = !DILocation(line: 1159, column: 175, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !738, file: !13, line: 1159, column: 172)
!3858 = !DILocation(line: 1159, column: 192, scope: !3857)
!3859 = !DILocation(line: 1159, column: 172, scope: !3857)
!3860 = !DILocation(line: 1159, column: 202, scope: !3857)
!3861 = !DILocation(line: 1159, column: 172, scope: !738)
!3862 = !DILocation(line: 1159, column: 172, scope: !3863)
!3863 = !DILexicalBlockFile(scope: !738, file: !13, discriminator: 5)
!3864 = !DILocation(line: 1159, column: 233, scope: !3865)
!3865 = !DILexicalBlockFile(scope: !3857, file: !13, discriminator: 6)
!3866 = !DILocation(line: 1159, column: 251, scope: !3857)
!3867 = !DILocation(line: 1159, column: 261, scope: !3857)
!3868 = !DILocation(line: 1159, column: 286, scope: !3857)
!3869 = !DILocation(line: 1159, column: 217, scope: !3857)
!3870 = !DILocation(line: 1159, column: 305, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !739, file: !13, discriminator: 7)
!3872 = !DILocation(line: 1159, column: 305, scope: !738)
!3873 = !DILocation(line: 1159, column: 305, scope: !3874)
!3874 = !DILexicalBlockFile(scope: !738, file: !13, discriminator: 8)
!3875 = !DILocation(line: 1159, column: 318, scope: !3876)
!3876 = !DILexicalBlockFile(scope: !739, file: !13, discriminator: 9)
!3877 = !DILocation(line: 1159, column: 320, scope: !3878)
!3878 = !DILexicalBlockFile(scope: !3879, file: !13, discriminator: 10)
!3879 = !DILexicalBlockFile(scope: !692, file: !13, discriminator: 3)
!3880 = !DILocation(line: 1159, column: 320, scope: !736)
!3881 = !DILocation(line: 1160, column: 19, scope: !692)
!3882 = !DILocation(line: 1160, column: 7, scope: !692)
!3883 = !DILocation(line: 1160, column: 27, scope: !692)
!3884 = !DILocation(line: 1160, column: 37, scope: !692)
!3885 = !DILocation(line: 1160, column: 57, scope: !692)
!3886 = !DILocation(line: 1160, column: 45, scope: !692)
!3887 = !DILocation(line: 1160, column: 5, scope: !692)
!3888 = !DILocation(line: 1161, column: 1, scope: !692)
!3889 = !DILocation(line: 1161, column: 1, scope: !3890)
!3890 = !DILexicalBlockFile(scope: !692, file: !13, discriminator: 1)
!3891 = !DILocation(line: 2469, column: 28, scope: !806)
!3892 = !DILocation(line: 2471, column: 5, scope: !806)
!3893 = !DILocation(line: 2471, column: 15, scope: !806)
!3894 = !DILocation(line: 2471, column: 25, scope: !806)
!3895 = !DILocation(line: 2471, column: 35, scope: !806)
!3896 = !DILocation(line: 2471, column: 41, scope: !806)
!3897 = !DILocation(line: 2473, column: 9, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2473, column: 9)
!3899 = !DILocation(line: 2473, column: 15, scope: !3898)
!3900 = !{!3766, !1884, i64 16}
!3901 = !DILocation(line: 2473, column: 18, scope: !3898)
!3902 = !DILocation(line: 2473, column: 9, scope: !806)
!3903 = !DILocation(line: 2473, column: 30, scope: !3904)
!3904 = !DILexicalBlockFile(scope: !3905, file: !13, discriminator: 1)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !13, line: 2473, column: 30)
!3906 = distinct !DILexicalBlock(scope: !3898, file: !13, line: 2473, column: 24)
!3907 = !DILocation(line: 2473, column: 36, scope: !3905)
!3908 = !{!3766, !1884, i64 20}
!3909 = !DILocation(line: 2473, column: 30, scope: !3905)
!3910 = !DILocation(line: 2473, column: 30, scope: !3906)
!3911 = !DILocation(line: 2473, column: 64, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3913, file: !13, discriminator: 2)
!3913 = distinct !DILexicalBlock(scope: !3905, file: !13, line: 2473, column: 46)
!3914 = !DILocation(line: 2473, column: 48, scope: !3913)
!3915 = !DILocation(line: 2473, column: 122, scope: !3913)
!3916 = !DILocation(line: 2473, column: 147, scope: !3917)
!3917 = !DILexicalBlockFile(scope: !3918, file: !13, discriminator: 3)
!3918 = distinct !DILexicalBlock(scope: !3905, file: !13, line: 2473, column: 129)
!3919 = !DILocation(line: 2473, column: 131, scope: !3918)
!3920 = !DILocation(line: 2473, column: 209, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3906, file: !13, discriminator: 4)
!3922 = !DILocation(line: 2473, column: 209, scope: !3906)
!3923 = !DILocation(line: 2475, column: 11, scope: !806)
!3924 = !DILocation(line: 2475, column: 9, scope: !806)
!3925 = !DILocation(line: 2476, column: 9, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2476, column: 9)
!3927 = !DILocation(line: 2476, column: 13, scope: !3926)
!3928 = !DILocation(line: 2476, column: 9, scope: !806)
!3929 = !DILocation(line: 2477, column: 9, scope: !3926)
!3930 = !DILocation(line: 2478, column: 48, scope: !806)
!3931 = !DILocation(line: 2478, column: 35, scope: !806)
!3932 = !DILocation(line: 2478, column: 15, scope: !806)
!3933 = !DILocation(line: 2478, column: 13, scope: !806)
!3934 = !DILocation(line: 2479, column: 9, scope: !818)
!3935 = !DILocation(line: 2479, column: 17, scope: !818)
!3936 = !DILocation(line: 2479, column: 9, scope: !806)
!3937 = !DILocation(line: 2480, column: 36, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !13, line: 2480, column: 13)
!3939 = distinct !DILexicalBlock(scope: !818, file: !13, line: 2479, column: 32)
!3940 = !DILocation(line: 2480, column: 13, scope: !3938)
!3941 = !DILocation(line: 2480, column: 13, scope: !3939)
!3942 = !DILocation(line: 2481, column: 13, scope: !3938)
!3943 = !DILocation(line: 2483, column: 13, scope: !3938)
!3944 = !DILocation(line: 2484, column: 5, scope: !3939)
!3945 = !DILocation(line: 2486, column: 46, scope: !817)
!3946 = !DILocation(line: 2486, column: 13, scope: !817)
!3947 = !DILocation(line: 2486, column: 11, scope: !817)
!3948 = !DILocation(line: 2487, column: 9, scope: !817)
!3949 = !DILocation(line: 2487, column: 14, scope: !3950)
!3950 = !DILexicalBlockFile(scope: !816, file: !13, discriminator: 1)
!3951 = !DILocation(line: 2487, column: 24, scope: !816)
!3952 = !DILocation(line: 2487, column: 54, scope: !816)
!3953 = !DILocation(line: 2487, column: 72, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !816, file: !13, line: 2487, column: 69)
!3955 = !DILocation(line: 2487, column: 89, scope: !3954)
!3956 = !DILocation(line: 2487, column: 69, scope: !3954)
!3957 = !DILocation(line: 2487, column: 99, scope: !3954)
!3958 = !DILocation(line: 2487, column: 69, scope: !816)
!3959 = !DILocation(line: 2487, column: 69, scope: !3960)
!3960 = !DILexicalBlockFile(scope: !816, file: !13, discriminator: 2)
!3961 = !DILocation(line: 2487, column: 130, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3954, file: !13, discriminator: 3)
!3963 = !DILocation(line: 2487, column: 148, scope: !3954)
!3964 = !DILocation(line: 2487, column: 158, scope: !3954)
!3965 = !DILocation(line: 2487, column: 183, scope: !3954)
!3966 = !DILocation(line: 2487, column: 114, scope: !3954)
!3967 = !DILocation(line: 2487, column: 202, scope: !3968)
!3968 = !DILexicalBlockFile(scope: !817, file: !13, discriminator: 4)
!3969 = !DILocation(line: 2487, column: 202, scope: !816)
!3970 = !DILocation(line: 2487, column: 202, scope: !3971)
!3971 = !DILexicalBlockFile(scope: !816, file: !13, discriminator: 5)
!3972 = !DILocation(line: 2488, column: 13, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !817, file: !13, line: 2488, column: 13)
!3974 = !DILocation(line: 2488, column: 15, scope: !3973)
!3975 = !DILocation(line: 2488, column: 13, scope: !817)
!3976 = !DILocation(line: 2489, column: 13, scope: !3973)
!3977 = !DILocation(line: 2490, column: 38, scope: !817)
!3978 = !DILocation(line: 2490, column: 9, scope: !817)
!3979 = !DILocation(line: 2491, column: 13, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !817, file: !13, line: 2491, column: 13)
!3981 = !DILocation(line: 2491, column: 17, scope: !3980)
!3982 = !DILocation(line: 2491, column: 13, scope: !817)
!3983 = !DILocation(line: 2492, column: 13, scope: !3980)
!3984 = !DILocation(line: 2494, column: 48, scope: !806)
!3985 = !DILocation(line: 2494, column: 35, scope: !806)
!3986 = !DILocation(line: 2494, column: 15, scope: !806)
!3987 = !DILocation(line: 2494, column: 13, scope: !806)
!3988 = !DILocation(line: 2495, column: 9, scope: !822)
!3989 = !DILocation(line: 2495, column: 17, scope: !822)
!3990 = !DILocation(line: 2495, column: 9, scope: !806)
!3991 = !DILocation(line: 2496, column: 36, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !13, line: 2496, column: 13)
!3993 = distinct !DILexicalBlock(scope: !822, file: !13, line: 2495, column: 32)
!3994 = !DILocation(line: 2496, column: 13, scope: !3992)
!3995 = !DILocation(line: 2496, column: 13, scope: !3993)
!3996 = !DILocation(line: 2497, column: 13, scope: !3992)
!3997 = !DILocation(line: 2499, column: 13, scope: !3992)
!3998 = !DILocation(line: 2500, column: 5, scope: !3993)
!3999 = !DILocation(line: 2502, column: 46, scope: !821)
!4000 = !DILocation(line: 2502, column: 13, scope: !821)
!4001 = !DILocation(line: 2502, column: 11, scope: !821)
!4002 = !DILocation(line: 2503, column: 9, scope: !821)
!4003 = !DILocation(line: 2503, column: 14, scope: !4004)
!4004 = !DILexicalBlockFile(scope: !820, file: !13, discriminator: 1)
!4005 = !DILocation(line: 2503, column: 24, scope: !820)
!4006 = !DILocation(line: 2503, column: 54, scope: !820)
!4007 = !DILocation(line: 2503, column: 72, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !820, file: !13, line: 2503, column: 69)
!4009 = !DILocation(line: 2503, column: 89, scope: !4008)
!4010 = !DILocation(line: 2503, column: 69, scope: !4008)
!4011 = !DILocation(line: 2503, column: 99, scope: !4008)
!4012 = !DILocation(line: 2503, column: 69, scope: !820)
!4013 = !DILocation(line: 2503, column: 69, scope: !4014)
!4014 = !DILexicalBlockFile(scope: !820, file: !13, discriminator: 2)
!4015 = !DILocation(line: 2503, column: 130, scope: !4016)
!4016 = !DILexicalBlockFile(scope: !4008, file: !13, discriminator: 3)
!4017 = !DILocation(line: 2503, column: 148, scope: !4008)
!4018 = !DILocation(line: 2503, column: 158, scope: !4008)
!4019 = !DILocation(line: 2503, column: 183, scope: !4008)
!4020 = !DILocation(line: 2503, column: 114, scope: !4008)
!4021 = !DILocation(line: 2503, column: 202, scope: !4022)
!4022 = !DILexicalBlockFile(scope: !821, file: !13, discriminator: 4)
!4023 = !DILocation(line: 2503, column: 202, scope: !820)
!4024 = !DILocation(line: 2503, column: 202, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !820, file: !13, discriminator: 5)
!4026 = !DILocation(line: 2504, column: 13, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !821, file: !13, line: 2504, column: 13)
!4028 = !DILocation(line: 2504, column: 15, scope: !4027)
!4029 = !DILocation(line: 2504, column: 13, scope: !821)
!4030 = !DILocation(line: 2505, column: 13, scope: !4027)
!4031 = !DILocation(line: 2506, column: 38, scope: !821)
!4032 = !DILocation(line: 2506, column: 9, scope: !821)
!4033 = !DILocation(line: 2507, column: 13, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !821, file: !13, line: 2507, column: 13)
!4035 = !DILocation(line: 2507, column: 17, scope: !4034)
!4036 = !DILocation(line: 2507, column: 13, scope: !821)
!4037 = !DILocation(line: 2508, column: 13, scope: !4034)
!4038 = !DILocation(line: 2511, column: 30, scope: !806)
!4039 = !DILocation(line: 2511, column: 35, scope: !806)
!4040 = !DILocation(line: 2511, column: 41, scope: !806)
!4041 = !{!3766, !1877, i64 40}
!4042 = !DILocation(line: 2510, column: 9, scope: !806)
!4043 = !DILocation(line: 2510, column: 7, scope: !806)
!4044 = !DILocation(line: 2512, column: 5, scope: !806)
!4045 = !DILocation(line: 2512, column: 10, scope: !4046)
!4046 = !DILexicalBlockFile(scope: !824, file: !13, discriminator: 1)
!4047 = !DILocation(line: 2512, column: 20, scope: !824)
!4048 = !DILocation(line: 2512, column: 50, scope: !824)
!4049 = !DILocation(line: 2512, column: 64, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !824, file: !13, line: 2512, column: 61)
!4051 = !DILocation(line: 2512, column: 81, scope: !4050)
!4052 = !DILocation(line: 2512, column: 61, scope: !4050)
!4053 = !DILocation(line: 2512, column: 91, scope: !4050)
!4054 = !DILocation(line: 2512, column: 61, scope: !824)
!4055 = !DILocation(line: 2512, column: 61, scope: !4056)
!4056 = !DILexicalBlockFile(scope: !824, file: !13, discriminator: 2)
!4057 = !DILocation(line: 2512, column: 122, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !4050, file: !13, discriminator: 3)
!4059 = !DILocation(line: 2512, column: 140, scope: !4050)
!4060 = !DILocation(line: 2512, column: 150, scope: !4050)
!4061 = !DILocation(line: 2512, column: 175, scope: !4050)
!4062 = !DILocation(line: 2512, column: 106, scope: !4050)
!4063 = !DILocation(line: 2512, column: 194, scope: !4064)
!4064 = !DILexicalBlockFile(scope: !806, file: !13, discriminator: 4)
!4065 = !DILocation(line: 2512, column: 194, scope: !824)
!4066 = !DILocation(line: 2512, column: 194, scope: !4067)
!4067 = !DILexicalBlockFile(scope: !824, file: !13, discriminator: 5)
!4068 = !DILocation(line: 2513, column: 12, scope: !806)
!4069 = !DILocation(line: 2513, column: 5, scope: !806)
!4070 = !DILocation(line: 2515, column: 5, scope: !806)
!4071 = !DILocation(line: 2515, column: 10, scope: !4072)
!4072 = !DILexicalBlockFile(scope: !826, file: !13, discriminator: 1)
!4073 = !DILocation(line: 2515, column: 20, scope: !826)
!4074 = !DILocation(line: 2515, column: 51, scope: !826)
!4075 = !DILocation(line: 2515, column: 61, scope: !829)
!4076 = !DILocation(line: 2515, column: 77, scope: !829)
!4077 = !DILocation(line: 2515, column: 61, scope: !826)
!4078 = !DILocation(line: 2515, column: 92, scope: !4079)
!4079 = !DILexicalBlockFile(scope: !829, file: !13, discriminator: 2)
!4080 = !DILocation(line: 2515, column: 97, scope: !4081)
!4081 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 4)
!4082 = !DILocation(line: 2515, column: 107, scope: !828)
!4083 = !DILocation(line: 2515, column: 137, scope: !828)
!4084 = !DILocation(line: 2515, column: 163, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !828, file: !13, line: 2515, column: 160)
!4086 = !DILocation(line: 2515, column: 180, scope: !4085)
!4087 = !DILocation(line: 2515, column: 160, scope: !4085)
!4088 = !DILocation(line: 2515, column: 190, scope: !4085)
!4089 = !DILocation(line: 2515, column: 160, scope: !828)
!4090 = !DILocation(line: 2515, column: 160, scope: !4091)
!4091 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 5)
!4092 = !DILocation(line: 2515, column: 221, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4085, file: !13, discriminator: 6)
!4094 = !DILocation(line: 2515, column: 239, scope: !4085)
!4095 = !DILocation(line: 2515, column: 249, scope: !4085)
!4096 = !DILocation(line: 2515, column: 274, scope: !4085)
!4097 = !DILocation(line: 2515, column: 205, scope: !4085)
!4098 = !DILocation(line: 2515, column: 293, scope: !4099)
!4099 = !DILexicalBlockFile(scope: !829, file: !13, discriminator: 7)
!4100 = !DILocation(line: 2515, column: 293, scope: !828)
!4101 = !DILocation(line: 2515, column: 293, scope: !4102)
!4102 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 8)
!4103 = !DILocation(line: 2515, column: 293, scope: !4104)
!4104 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 9)
!4105 = !DILocation(line: 2515, column: 306, scope: !4106)
!4106 = !DILexicalBlockFile(scope: !4107, file: !13, discriminator: 10)
!4107 = !DILexicalBlockFile(scope: !806, file: !13, discriminator: 3)
!4108 = !DILocation(line: 2515, column: 306, scope: !826)
!4109 = !DILocation(line: 2515, column: 306, scope: !4110)
!4110 = !DILexicalBlockFile(scope: !826, file: !13, discriminator: 11)
!4111 = !DILocation(line: 2516, column: 5, scope: !806)
!4112 = !DILocation(line: 2517, column: 1, scope: !806)
!4113 = !DILocation(line: 1164, column: 32, scope: !830)
!4114 = !DILocation(line: 1164, column: 48, scope: !830)
!4115 = !DILocation(line: 1164, column: 61, scope: !830)
!4116 = !DILocation(line: 1166, column: 5, scope: !830)
!4117 = !DILocation(line: 1166, column: 14, scope: !4118)
!4118 = !DILexicalBlockFile(scope: !839, file: !13, discriminator: 1)
!4119 = !DILocation(line: 1166, column: 20, scope: !839)
!4120 = !{!3766, !1877, i64 32}
!4121 = !DILocation(line: 1166, column: 14, scope: !839)
!4122 = !DILocation(line: 1166, column: 14, scope: !840)
!4123 = !DILocation(line: 1166, column: 30, scope: !4124)
!4124 = !DILexicalBlockFile(scope: !838, file: !13, discriminator: 2)
!4125 = !DILocation(line: 1166, column: 34, scope: !838)
!4126 = !DILocation(line: 1166, column: 41, scope: !838)
!4127 = !DILocation(line: 1166, column: 60, scope: !838)
!4128 = !DILocation(line: 1166, column: 66, scope: !838)
!4129 = !DILocation(line: 1166, column: 75, scope: !838)
!4130 = !DILocation(line: 1166, column: 85, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !838, file: !13, line: 1166, column: 85)
!4132 = !DILocation(line: 1166, column: 85, scope: !838)
!4133 = !DILocation(line: 1166, column: 98, scope: !4134)
!4134 = !DILexicalBlockFile(scope: !4131, file: !13, discriminator: 4)
!4135 = !DILocation(line: 1166, column: 91, scope: !4131)
!4136 = !DILocation(line: 1166, column: 104, scope: !4137)
!4137 = !DILexicalBlockFile(scope: !839, file: !13, discriminator: 5)
!4138 = !DILocation(line: 1166, column: 104, scope: !4139)
!4139 = !DILexicalBlockFile(scope: !4140, file: !13, discriminator: 7)
!4140 = !DILexicalBlockFile(scope: !839, file: !13, discriminator: 6)
!4141 = !DILocation(line: 1166, column: 104, scope: !838)
!4142 = !DILocation(line: 1166, column: 106, scope: !4143)
!4143 = !DILexicalBlockFile(scope: !4144, file: !13, discriminator: 8)
!4144 = !DILexicalBlockFile(scope: !840, file: !13, discriminator: 3)
!4145 = !DILocation(line: 1167, column: 5, scope: !830)
!4146 = !DILocation(line: 1167, column: 14, scope: !4147)
!4147 = !DILexicalBlockFile(scope: !843, file: !13, discriminator: 1)
!4148 = !DILocation(line: 1167, column: 20, scope: !843)
!4149 = !DILocation(line: 1167, column: 14, scope: !843)
!4150 = !DILocation(line: 1167, column: 14, scope: !844)
!4151 = !DILocation(line: 1167, column: 32, scope: !4152)
!4152 = !DILexicalBlockFile(scope: !842, file: !13, discriminator: 2)
!4153 = !DILocation(line: 1167, column: 36, scope: !842)
!4154 = !DILocation(line: 1167, column: 43, scope: !842)
!4155 = !DILocation(line: 1167, column: 62, scope: !842)
!4156 = !DILocation(line: 1167, column: 68, scope: !842)
!4157 = !DILocation(line: 1167, column: 79, scope: !842)
!4158 = !DILocation(line: 1167, column: 89, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !842, file: !13, line: 1167, column: 89)
!4160 = !DILocation(line: 1167, column: 89, scope: !842)
!4161 = !DILocation(line: 1167, column: 102, scope: !4162)
!4162 = !DILexicalBlockFile(scope: !4159, file: !13, discriminator: 4)
!4163 = !DILocation(line: 1167, column: 95, scope: !4159)
!4164 = !DILocation(line: 1167, column: 108, scope: !4165)
!4165 = !DILexicalBlockFile(scope: !843, file: !13, discriminator: 5)
!4166 = !DILocation(line: 1167, column: 108, scope: !4167)
!4167 = !DILexicalBlockFile(scope: !4168, file: !13, discriminator: 7)
!4168 = !DILexicalBlockFile(scope: !843, file: !13, discriminator: 6)
!4169 = !DILocation(line: 1167, column: 108, scope: !842)
!4170 = !DILocation(line: 1167, column: 110, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !4172, file: !13, discriminator: 8)
!4172 = !DILexicalBlockFile(scope: !844, file: !13, discriminator: 3)
!4173 = !DILocation(line: 1168, column: 5, scope: !830)
!4174 = !DILocation(line: 1168, column: 14, scope: !4175)
!4175 = !DILexicalBlockFile(scope: !847, file: !13, discriminator: 1)
!4176 = !DILocation(line: 1168, column: 20, scope: !847)
!4177 = !{!3766, !1877, i64 48}
!4178 = !DILocation(line: 1168, column: 14, scope: !847)
!4179 = !DILocation(line: 1168, column: 14, scope: !848)
!4180 = !DILocation(line: 1168, column: 31, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !846, file: !13, discriminator: 2)
!4182 = !DILocation(line: 1168, column: 35, scope: !846)
!4183 = !DILocation(line: 1168, column: 42, scope: !846)
!4184 = !DILocation(line: 1168, column: 61, scope: !846)
!4185 = !DILocation(line: 1168, column: 67, scope: !846)
!4186 = !DILocation(line: 1168, column: 77, scope: !846)
!4187 = !DILocation(line: 1168, column: 87, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !846, file: !13, line: 1168, column: 87)
!4189 = !DILocation(line: 1168, column: 87, scope: !846)
!4190 = !DILocation(line: 1168, column: 100, scope: !4191)
!4191 = !DILexicalBlockFile(scope: !4188, file: !13, discriminator: 4)
!4192 = !DILocation(line: 1168, column: 93, scope: !4188)
!4193 = !DILocation(line: 1168, column: 106, scope: !4194)
!4194 = !DILexicalBlockFile(scope: !847, file: !13, discriminator: 5)
!4195 = !DILocation(line: 1168, column: 106, scope: !4196)
!4196 = !DILexicalBlockFile(scope: !4197, file: !13, discriminator: 7)
!4197 = !DILexicalBlockFile(scope: !847, file: !13, discriminator: 6)
!4198 = !DILocation(line: 1168, column: 106, scope: !846)
!4199 = !DILocation(line: 1168, column: 108, scope: !4200)
!4200 = !DILexicalBlockFile(scope: !4201, file: !13, discriminator: 8)
!4201 = !DILexicalBlockFile(scope: !848, file: !13, discriminator: 3)
!4202 = !DILocation(line: 1169, column: 5, scope: !830)
!4203 = !DILocation(line: 1169, column: 14, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !851, file: !13, discriminator: 1)
!4205 = !DILocation(line: 1169, column: 20, scope: !851)
!4206 = !{!3766, !1877, i64 56}
!4207 = !DILocation(line: 1169, column: 14, scope: !851)
!4208 = !DILocation(line: 1169, column: 14, scope: !852)
!4209 = !DILocation(line: 1169, column: 31, scope: !4210)
!4210 = !DILexicalBlockFile(scope: !850, file: !13, discriminator: 2)
!4211 = !DILocation(line: 1169, column: 35, scope: !850)
!4212 = !DILocation(line: 1169, column: 42, scope: !850)
!4213 = !DILocation(line: 1169, column: 61, scope: !850)
!4214 = !DILocation(line: 1169, column: 67, scope: !850)
!4215 = !DILocation(line: 1169, column: 77, scope: !850)
!4216 = !DILocation(line: 1169, column: 87, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !850, file: !13, line: 1169, column: 87)
!4218 = !DILocation(line: 1169, column: 87, scope: !850)
!4219 = !DILocation(line: 1169, column: 100, scope: !4220)
!4220 = !DILexicalBlockFile(scope: !4217, file: !13, discriminator: 4)
!4221 = !DILocation(line: 1169, column: 93, scope: !4217)
!4222 = !DILocation(line: 1169, column: 106, scope: !4223)
!4223 = !DILexicalBlockFile(scope: !851, file: !13, discriminator: 5)
!4224 = !DILocation(line: 1169, column: 106, scope: !4225)
!4225 = !DILexicalBlockFile(scope: !4226, file: !13, discriminator: 7)
!4226 = !DILexicalBlockFile(scope: !851, file: !13, discriminator: 6)
!4227 = !DILocation(line: 1169, column: 106, scope: !850)
!4228 = !DILocation(line: 1169, column: 108, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4230, file: !13, discriminator: 8)
!4230 = !DILexicalBlockFile(scope: !852, file: !13, discriminator: 3)
!4231 = !DILocation(line: 1170, column: 5, scope: !830)
!4232 = !DILocation(line: 1170, column: 14, scope: !4233)
!4233 = !DILexicalBlockFile(scope: !855, file: !13, discriminator: 1)
!4234 = !DILocation(line: 1170, column: 20, scope: !855)
!4235 = !{!3766, !1877, i64 64}
!4236 = !DILocation(line: 1170, column: 14, scope: !855)
!4237 = !DILocation(line: 1170, column: 14, scope: !856)
!4238 = !DILocation(line: 1170, column: 30, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !854, file: !13, discriminator: 2)
!4240 = !DILocation(line: 1170, column: 34, scope: !854)
!4241 = !DILocation(line: 1170, column: 41, scope: !854)
!4242 = !DILocation(line: 1170, column: 60, scope: !854)
!4243 = !DILocation(line: 1170, column: 66, scope: !854)
!4244 = !DILocation(line: 1170, column: 75, scope: !854)
!4245 = !DILocation(line: 1170, column: 85, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !854, file: !13, line: 1170, column: 85)
!4247 = !DILocation(line: 1170, column: 85, scope: !854)
!4248 = !DILocation(line: 1170, column: 98, scope: !4249)
!4249 = !DILexicalBlockFile(scope: !4246, file: !13, discriminator: 4)
!4250 = !DILocation(line: 1170, column: 91, scope: !4246)
!4251 = !DILocation(line: 1170, column: 104, scope: !4252)
!4252 = !DILexicalBlockFile(scope: !855, file: !13, discriminator: 5)
!4253 = !DILocation(line: 1170, column: 104, scope: !4254)
!4254 = !DILexicalBlockFile(scope: !4255, file: !13, discriminator: 7)
!4255 = !DILexicalBlockFile(scope: !855, file: !13, discriminator: 6)
!4256 = !DILocation(line: 1170, column: 104, scope: !854)
!4257 = !DILocation(line: 1170, column: 106, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4259, file: !13, discriminator: 8)
!4259 = !DILexicalBlockFile(scope: !856, file: !13, discriminator: 3)
!4260 = !DILocation(line: 1171, column: 5, scope: !830)
!4261 = !DILocation(line: 1171, column: 14, scope: !4262)
!4262 = !DILexicalBlockFile(scope: !859, file: !13, discriminator: 1)
!4263 = !DILocation(line: 1171, column: 20, scope: !859)
!4264 = !{!3766, !1877, i64 120}
!4265 = !DILocation(line: 1171, column: 14, scope: !859)
!4266 = !DILocation(line: 1171, column: 14, scope: !860)
!4267 = !DILocation(line: 1171, column: 37, scope: !4268)
!4268 = !DILexicalBlockFile(scope: !858, file: !13, discriminator: 2)
!4269 = !DILocation(line: 1171, column: 41, scope: !858)
!4270 = !DILocation(line: 1171, column: 48, scope: !858)
!4271 = !DILocation(line: 1171, column: 67, scope: !858)
!4272 = !DILocation(line: 1171, column: 73, scope: !858)
!4273 = !DILocation(line: 1171, column: 89, scope: !858)
!4274 = !DILocation(line: 1171, column: 99, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !858, file: !13, line: 1171, column: 99)
!4276 = !DILocation(line: 1171, column: 99, scope: !858)
!4277 = !DILocation(line: 1171, column: 112, scope: !4278)
!4278 = !DILexicalBlockFile(scope: !4275, file: !13, discriminator: 4)
!4279 = !DILocation(line: 1171, column: 105, scope: !4275)
!4280 = !DILocation(line: 1171, column: 118, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !859, file: !13, discriminator: 5)
!4282 = !DILocation(line: 1171, column: 118, scope: !4283)
!4283 = !DILexicalBlockFile(scope: !4284, file: !13, discriminator: 7)
!4284 = !DILexicalBlockFile(scope: !859, file: !13, discriminator: 6)
!4285 = !DILocation(line: 1171, column: 118, scope: !858)
!4286 = !DILocation(line: 1171, column: 120, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !4288, file: !13, discriminator: 8)
!4288 = !DILexicalBlockFile(scope: !860, file: !13, discriminator: 3)
!4289 = !DILocation(line: 1172, column: 5, scope: !830)
!4290 = !DILocation(line: 1172, column: 14, scope: !4291)
!4291 = !DILexicalBlockFile(scope: !863, file: !13, discriminator: 1)
!4292 = !DILocation(line: 1172, column: 20, scope: !863)
!4293 = !{!3766, !1877, i64 136}
!4294 = !DILocation(line: 1172, column: 14, scope: !863)
!4295 = !DILocation(line: 1172, column: 14, scope: !864)
!4296 = !DILocation(line: 1172, column: 37, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !862, file: !13, discriminator: 2)
!4298 = !DILocation(line: 1172, column: 41, scope: !862)
!4299 = !DILocation(line: 1172, column: 48, scope: !862)
!4300 = !DILocation(line: 1172, column: 67, scope: !862)
!4301 = !DILocation(line: 1172, column: 73, scope: !862)
!4302 = !DILocation(line: 1172, column: 89, scope: !862)
!4303 = !DILocation(line: 1172, column: 99, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !862, file: !13, line: 1172, column: 99)
!4305 = !DILocation(line: 1172, column: 99, scope: !862)
!4306 = !DILocation(line: 1172, column: 112, scope: !4307)
!4307 = !DILexicalBlockFile(scope: !4304, file: !13, discriminator: 4)
!4308 = !DILocation(line: 1172, column: 105, scope: !4304)
!4309 = !DILocation(line: 1172, column: 118, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !863, file: !13, discriminator: 5)
!4311 = !DILocation(line: 1172, column: 118, scope: !4312)
!4312 = !DILexicalBlockFile(scope: !4313, file: !13, discriminator: 7)
!4313 = !DILexicalBlockFile(scope: !863, file: !13, discriminator: 6)
!4314 = !DILocation(line: 1172, column: 118, scope: !862)
!4315 = !DILocation(line: 1172, column: 120, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !4317, file: !13, discriminator: 8)
!4317 = !DILexicalBlockFile(scope: !864, file: !13, discriminator: 3)
!4318 = !DILocation(line: 1173, column: 5, scope: !830)
!4319 = !DILocation(line: 1173, column: 14, scope: !4320)
!4320 = !DILexicalBlockFile(scope: !867, file: !13, discriminator: 1)
!4321 = !DILocation(line: 1173, column: 20, scope: !867)
!4322 = !{!3766, !1877, i64 152}
!4323 = !DILocation(line: 1173, column: 14, scope: !867)
!4324 = !DILocation(line: 1173, column: 14, scope: !868)
!4325 = !DILocation(line: 1173, column: 32, scope: !4326)
!4326 = !DILexicalBlockFile(scope: !866, file: !13, discriminator: 2)
!4327 = !DILocation(line: 1173, column: 36, scope: !866)
!4328 = !DILocation(line: 1173, column: 43, scope: !866)
!4329 = !DILocation(line: 1173, column: 62, scope: !866)
!4330 = !DILocation(line: 1173, column: 68, scope: !866)
!4331 = !DILocation(line: 1173, column: 79, scope: !866)
!4332 = !DILocation(line: 1173, column: 89, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !866, file: !13, line: 1173, column: 89)
!4334 = !DILocation(line: 1173, column: 89, scope: !866)
!4335 = !DILocation(line: 1173, column: 102, scope: !4336)
!4336 = !DILexicalBlockFile(scope: !4333, file: !13, discriminator: 4)
!4337 = !DILocation(line: 1173, column: 95, scope: !4333)
!4338 = !DILocation(line: 1173, column: 108, scope: !4339)
!4339 = !DILexicalBlockFile(scope: !867, file: !13, discriminator: 5)
!4340 = !DILocation(line: 1173, column: 108, scope: !4341)
!4341 = !DILexicalBlockFile(scope: !4342, file: !13, discriminator: 7)
!4342 = !DILexicalBlockFile(scope: !867, file: !13, discriminator: 6)
!4343 = !DILocation(line: 1173, column: 108, scope: !866)
!4344 = !DILocation(line: 1173, column: 110, scope: !4345)
!4345 = !DILexicalBlockFile(scope: !4346, file: !13, discriminator: 8)
!4346 = !DILexicalBlockFile(scope: !868, file: !13, discriminator: 3)
!4347 = !DILocation(line: 1174, column: 5, scope: !830)
!4348 = !DILocation(line: 1174, column: 14, scope: !4349)
!4349 = !DILexicalBlockFile(scope: !871, file: !13, discriminator: 1)
!4350 = !DILocation(line: 1174, column: 20, scope: !871)
!4351 = !{!3766, !1877, i64 72}
!4352 = !DILocation(line: 1174, column: 14, scope: !871)
!4353 = !DILocation(line: 1174, column: 14, scope: !872)
!4354 = !DILocation(line: 1174, column: 30, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !870, file: !13, discriminator: 2)
!4356 = !DILocation(line: 1174, column: 34, scope: !870)
!4357 = !DILocation(line: 1174, column: 41, scope: !870)
!4358 = !DILocation(line: 1174, column: 60, scope: !870)
!4359 = !DILocation(line: 1174, column: 66, scope: !870)
!4360 = !DILocation(line: 1174, column: 75, scope: !870)
!4361 = !DILocation(line: 1174, column: 85, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !870, file: !13, line: 1174, column: 85)
!4363 = !DILocation(line: 1174, column: 85, scope: !870)
!4364 = !DILocation(line: 1174, column: 98, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4362, file: !13, discriminator: 4)
!4366 = !DILocation(line: 1174, column: 91, scope: !4362)
!4367 = !DILocation(line: 1174, column: 104, scope: !4368)
!4368 = !DILexicalBlockFile(scope: !871, file: !13, discriminator: 5)
!4369 = !DILocation(line: 1174, column: 104, scope: !4370)
!4370 = !DILexicalBlockFile(scope: !4371, file: !13, discriminator: 7)
!4371 = !DILexicalBlockFile(scope: !871, file: !13, discriminator: 6)
!4372 = !DILocation(line: 1174, column: 104, scope: !870)
!4373 = !DILocation(line: 1174, column: 106, scope: !4374)
!4374 = !DILexicalBlockFile(scope: !4375, file: !13, discriminator: 8)
!4375 = !DILexicalBlockFile(scope: !872, file: !13, discriminator: 3)
!4376 = !DILocation(line: 1175, column: 5, scope: !830)
!4377 = !DILocation(line: 1175, column: 14, scope: !4378)
!4378 = !DILexicalBlockFile(scope: !875, file: !13, discriminator: 1)
!4379 = !DILocation(line: 1175, column: 20, scope: !875)
!4380 = !{!3766, !1877, i64 168}
!4381 = !DILocation(line: 1175, column: 14, scope: !875)
!4382 = !DILocation(line: 1175, column: 14, scope: !876)
!4383 = !DILocation(line: 1175, column: 27, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !874, file: !13, discriminator: 2)
!4385 = !DILocation(line: 1175, column: 31, scope: !874)
!4386 = !DILocation(line: 1175, column: 38, scope: !874)
!4387 = !DILocation(line: 1175, column: 57, scope: !874)
!4388 = !DILocation(line: 1175, column: 63, scope: !874)
!4389 = !DILocation(line: 1175, column: 69, scope: !874)
!4390 = !DILocation(line: 1175, column: 79, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !874, file: !13, line: 1175, column: 79)
!4392 = !DILocation(line: 1175, column: 79, scope: !874)
!4393 = !DILocation(line: 1175, column: 92, scope: !4394)
!4394 = !DILexicalBlockFile(scope: !4391, file: !13, discriminator: 4)
!4395 = !DILocation(line: 1175, column: 85, scope: !4391)
!4396 = !DILocation(line: 1175, column: 98, scope: !4397)
!4397 = !DILexicalBlockFile(scope: !875, file: !13, discriminator: 5)
!4398 = !DILocation(line: 1175, column: 98, scope: !4399)
!4399 = !DILexicalBlockFile(scope: !4400, file: !13, discriminator: 7)
!4400 = !DILexicalBlockFile(scope: !875, file: !13, discriminator: 6)
!4401 = !DILocation(line: 1175, column: 98, scope: !874)
!4402 = !DILocation(line: 1175, column: 100, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !4404, file: !13, discriminator: 8)
!4404 = !DILexicalBlockFile(scope: !876, file: !13, discriminator: 3)
!4405 = !DILocation(line: 1177, column: 5, scope: !830)
!4406 = !DILocation(line: 1177, column: 14, scope: !4407)
!4407 = !DILexicalBlockFile(scope: !879, file: !13, discriminator: 1)
!4408 = !DILocation(line: 1177, column: 20, scope: !879)
!4409 = !DILocation(line: 1177, column: 14, scope: !879)
!4410 = !DILocation(line: 1177, column: 14, scope: !880)
!4411 = !DILocation(line: 1177, column: 28, scope: !4412)
!4412 = !DILexicalBlockFile(scope: !878, file: !13, discriminator: 2)
!4413 = !DILocation(line: 1177, column: 32, scope: !878)
!4414 = !DILocation(line: 1177, column: 39, scope: !878)
!4415 = !DILocation(line: 1177, column: 58, scope: !878)
!4416 = !DILocation(line: 1177, column: 64, scope: !878)
!4417 = !DILocation(line: 1177, column: 71, scope: !878)
!4418 = !DILocation(line: 1177, column: 81, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !878, file: !13, line: 1177, column: 81)
!4420 = !DILocation(line: 1177, column: 81, scope: !878)
!4421 = !DILocation(line: 1177, column: 94, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4419, file: !13, discriminator: 4)
!4423 = !DILocation(line: 1177, column: 87, scope: !4419)
!4424 = !DILocation(line: 1177, column: 100, scope: !4425)
!4425 = !DILexicalBlockFile(scope: !879, file: !13, discriminator: 5)
!4426 = !DILocation(line: 1177, column: 100, scope: !4427)
!4427 = !DILexicalBlockFile(scope: !4428, file: !13, discriminator: 7)
!4428 = !DILexicalBlockFile(scope: !879, file: !13, discriminator: 6)
!4429 = !DILocation(line: 1177, column: 100, scope: !878)
!4430 = !DILocation(line: 1177, column: 102, scope: !4431)
!4431 = !DILexicalBlockFile(scope: !4432, file: !13, discriminator: 8)
!4432 = !DILexicalBlockFile(scope: !880, file: !13, discriminator: 3)
!4433 = !DILocation(line: 1178, column: 5, scope: !830)
!4434 = !DILocation(line: 1179, column: 1, scope: !830)
!4435 = !DILocation(line: 1182, column: 29, scope: !881)
!4436 = !DILocation(line: 1184, column: 30, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !881, file: !13, line: 1184, column: 9)
!4438 = !DILocation(line: 1184, column: 9, scope: !4437)
!4439 = !DILocation(line: 1184, column: 36, scope: !4437)
!4440 = !DILocation(line: 1184, column: 9, scope: !881)
!4441 = !DILocation(line: 1185, column: 9, scope: !4437)
!4442 = !DILocation(line: 1186, column: 5, scope: !881)
!4443 = !DILocation(line: 1186, column: 10, scope: !4444)
!4444 = !DILexicalBlockFile(scope: !885, file: !13, discriminator: 1)
!4445 = !DILocation(line: 1186, column: 20, scope: !885)
!4446 = !DILocation(line: 1186, column: 43, scope: !885)
!4447 = !DILocation(line: 1186, column: 49, scope: !885)
!4448 = !DILocation(line: 1186, column: 60, scope: !889)
!4449 = !DILocation(line: 1186, column: 68, scope: !889)
!4450 = !DILocation(line: 1186, column: 60, scope: !885)
!4451 = !DILocation(line: 1186, column: 86, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !888, file: !13, discriminator: 2)
!4453 = !DILocation(line: 1186, column: 92, scope: !888)
!4454 = !DILocation(line: 1186, column: 98, scope: !888)
!4455 = !DILocation(line: 1186, column: 112, scope: !888)
!4456 = !DILocation(line: 1186, column: 117, scope: !4457)
!4457 = !DILexicalBlockFile(scope: !887, file: !13, discriminator: 4)
!4458 = !DILocation(line: 1186, column: 127, scope: !887)
!4459 = !DILocation(line: 1186, column: 157, scope: !887)
!4460 = !DILocation(line: 1186, column: 175, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !887, file: !13, line: 1186, column: 172)
!4462 = !DILocation(line: 1186, column: 192, scope: !4461)
!4463 = !DILocation(line: 1186, column: 172, scope: !4461)
!4464 = !DILocation(line: 1186, column: 202, scope: !4461)
!4465 = !DILocation(line: 1186, column: 172, scope: !887)
!4466 = !DILocation(line: 1186, column: 172, scope: !4467)
!4467 = !DILexicalBlockFile(scope: !887, file: !13, discriminator: 5)
!4468 = !DILocation(line: 1186, column: 233, scope: !4469)
!4469 = !DILexicalBlockFile(scope: !4461, file: !13, discriminator: 6)
!4470 = !DILocation(line: 1186, column: 251, scope: !4461)
!4471 = !DILocation(line: 1186, column: 261, scope: !4461)
!4472 = !DILocation(line: 1186, column: 286, scope: !4461)
!4473 = !DILocation(line: 1186, column: 217, scope: !4461)
!4474 = !DILocation(line: 1186, column: 305, scope: !4475)
!4475 = !DILexicalBlockFile(scope: !888, file: !13, discriminator: 7)
!4476 = !DILocation(line: 1186, column: 305, scope: !887)
!4477 = !DILocation(line: 1186, column: 305, scope: !4478)
!4478 = !DILexicalBlockFile(scope: !887, file: !13, discriminator: 8)
!4479 = !DILocation(line: 1186, column: 318, scope: !4480)
!4480 = !DILexicalBlockFile(scope: !888, file: !13, discriminator: 9)
!4481 = !DILocation(line: 1186, column: 320, scope: !4482)
!4482 = !DILexicalBlockFile(scope: !4483, file: !13, discriminator: 10)
!4483 = !DILexicalBlockFile(scope: !881, file: !13, discriminator: 3)
!4484 = !DILocation(line: 1186, column: 320, scope: !885)
!4485 = !DILocation(line: 1187, column: 5, scope: !881)
!4486 = !DILocation(line: 1188, column: 1, scope: !881)
!4487 = !DILocation(line: 2630, column: 32, scope: !890)
!4488 = !DILocation(line: 2632, column: 5, scope: !890)
!4489 = !DILocation(line: 2632, column: 15, scope: !890)
!4490 = !DILocation(line: 2634, column: 9, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2634, column: 9)
!4492 = !DILocation(line: 2634, column: 15, scope: !4491)
!4493 = !DILocation(line: 2634, column: 18, scope: !4491)
!4494 = !DILocation(line: 2634, column: 9, scope: !890)
!4495 = !DILocation(line: 2634, column: 30, scope: !4496)
!4496 = !DILexicalBlockFile(scope: !4497, file: !13, discriminator: 1)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !13, line: 2634, column: 30)
!4498 = distinct !DILexicalBlock(scope: !4491, file: !13, line: 2634, column: 24)
!4499 = !DILocation(line: 2634, column: 36, scope: !4497)
!4500 = !DILocation(line: 2634, column: 30, scope: !4497)
!4501 = !DILocation(line: 2634, column: 30, scope: !4498)
!4502 = !DILocation(line: 2634, column: 64, scope: !4503)
!4503 = !DILexicalBlockFile(scope: !4504, file: !13, discriminator: 2)
!4504 = distinct !DILexicalBlock(scope: !4497, file: !13, line: 2634, column: 46)
!4505 = !DILocation(line: 2634, column: 48, scope: !4504)
!4506 = !DILocation(line: 2634, column: 122, scope: !4504)
!4507 = !DILocation(line: 2634, column: 147, scope: !4508)
!4508 = !DILexicalBlockFile(scope: !4509, file: !13, discriminator: 3)
!4509 = distinct !DILexicalBlock(scope: !4497, file: !13, line: 2634, column: 129)
!4510 = !DILocation(line: 2634, column: 131, scope: !4509)
!4511 = !DILocation(line: 2634, column: 209, scope: !4512)
!4512 = !DILexicalBlockFile(scope: !4498, file: !13, discriminator: 4)
!4513 = !DILocation(line: 2634, column: 209, scope: !4498)
!4514 = !DILocation(line: 2636, column: 5, scope: !890)
!4515 = !DILocation(line: 2636, column: 11, scope: !890)
!4516 = !DILocation(line: 2636, column: 19, scope: !890)
!4517 = !{!3766, !1878, i64 95}
!4518 = !DILocation(line: 2637, column: 23, scope: !899)
!4519 = !DILocation(line: 2637, column: 11, scope: !899)
!4520 = !DILocation(line: 2637, column: 31, scope: !899)
!4521 = !DILocation(line: 2637, column: 40, scope: !899)
!4522 = !DILocation(line: 2637, column: 9, scope: !890)
!4523 = !DILocation(line: 2639, column: 40, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !899, file: !13, line: 2637, column: 66)
!4525 = !DILocation(line: 2639, column: 16, scope: !4524)
!4526 = !DILocation(line: 2639, column: 14, scope: !4524)
!4527 = !DILocation(line: 2640, column: 5, scope: !4524)
!4528 = !DILocation(line: 2642, column: 55, scope: !898)
!4529 = !DILocation(line: 2642, column: 43, scope: !898)
!4530 = !DILocation(line: 2643, column: 44, scope: !898)
!4531 = !DILocation(line: 2642, column: 16, scope: !898)
!4532 = !DILocation(line: 2642, column: 14, scope: !898)
!4533 = !DILocation(line: 2644, column: 13, scope: !897)
!4534 = !DILocation(line: 2644, column: 18, scope: !897)
!4535 = !DILocation(line: 2644, column: 39, scope: !4536)
!4536 = !DILexicalBlockFile(scope: !897, file: !13, discriminator: 1)
!4537 = !DILocation(line: 2644, column: 47, scope: !897)
!4538 = !DILocation(line: 2644, column: 58, scope: !897)
!4539 = !DILocation(line: 2644, column: 67, scope: !897)
!4540 = !DILocation(line: 2644, column: 84, scope: !897)
!4541 = !DILocation(line: 2644, column: 13, scope: !898)
!4542 = !DILocation(line: 2645, column: 26, scope: !896)
!4543 = !DILocation(line: 2647, column: 56, scope: !896)
!4544 = !DILocation(line: 2647, column: 64, scope: !896)
!4545 = !DILocation(line: 2647, column: 74, scope: !896)
!4546 = !DILocation(line: 2645, column: 13, scope: !896)
!4547 = !DILocation(line: 2648, column: 13, scope: !896)
!4548 = !DILocation(line: 2648, column: 18, scope: !4549)
!4549 = !DILexicalBlockFile(scope: !895, file: !13, discriminator: 1)
!4550 = !DILocation(line: 2648, column: 28, scope: !895)
!4551 = !DILocation(line: 2648, column: 58, scope: !895)
!4552 = !DILocation(line: 2648, column: 73, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !895, file: !13, line: 2648, column: 70)
!4554 = !DILocation(line: 2648, column: 90, scope: !4553)
!4555 = !DILocation(line: 2648, column: 70, scope: !4553)
!4556 = !DILocation(line: 2648, column: 100, scope: !4553)
!4557 = !DILocation(line: 2648, column: 70, scope: !895)
!4558 = !DILocation(line: 2648, column: 70, scope: !4559)
!4559 = !DILexicalBlockFile(scope: !895, file: !13, discriminator: 2)
!4560 = !DILocation(line: 2648, column: 131, scope: !4561)
!4561 = !DILexicalBlockFile(scope: !4553, file: !13, discriminator: 3)
!4562 = !DILocation(line: 2648, column: 149, scope: !4553)
!4563 = !DILocation(line: 2648, column: 159, scope: !4553)
!4564 = !DILocation(line: 2648, column: 184, scope: !4553)
!4565 = !DILocation(line: 2648, column: 115, scope: !4553)
!4566 = !DILocation(line: 2648, column: 203, scope: !4567)
!4567 = !DILexicalBlockFile(scope: !896, file: !13, discriminator: 4)
!4568 = !DILocation(line: 2648, column: 203, scope: !895)
!4569 = !DILocation(line: 2648, column: 203, scope: !4570)
!4570 = !DILexicalBlockFile(scope: !895, file: !13, discriminator: 5)
!4571 = !DILocation(line: 2649, column: 13, scope: !896)
!4572 = !DILocation(line: 2653, column: 9, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2653, column: 9)
!4574 = !DILocation(line: 2653, column: 14, scope: !4573)
!4575 = !DILocation(line: 2653, column: 28, scope: !4573)
!4576 = !DILocation(line: 2653, column: 65, scope: !4577)
!4577 = !DILexicalBlockFile(scope: !4573, file: !13, discriminator: 1)
!4578 = !DILocation(line: 2653, column: 49, scope: !4573)
!4579 = !DILocation(line: 2653, column: 72, scope: !4573)
!4580 = !DILocation(line: 2653, column: 78, scope: !4573)
!4581 = !DILocation(line: 2653, column: 47, scope: !4573)
!4582 = !DILocation(line: 2653, column: 47, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !4573, file: !13, discriminator: 2)
!4584 = !DILocation(line: 2653, column: 121, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !4573, file: !13, discriminator: 3)
!4586 = !DILocation(line: 2653, column: 91, scope: !4573)
!4587 = !DILocation(line: 2653, column: 130, scope: !4588)
!4588 = !DILexicalBlockFile(scope: !4589, file: !13, discriminator: 5)
!4589 = !DILexicalBlockFile(scope: !4573, file: !13, discriminator: 4)
!4590 = !DILocation(line: 2653, column: 9, scope: !890)
!4591 = !DILocation(line: 2654, column: 9, scope: !4573)
!4592 = !DILocation(line: 2656, column: 57, scope: !903)
!4593 = !DILocation(line: 2656, column: 39, scope: !903)
!4594 = !DILocation(line: 2656, column: 65, scope: !903)
!4595 = !DILocation(line: 2656, column: 73, scope: !903)
!4596 = !DILocation(line: 2656, column: 9, scope: !890)
!4597 = !DILocation(line: 2658, column: 9, scope: !902)
!4598 = !DILocation(line: 2658, column: 14, scope: !4599)
!4599 = !DILexicalBlockFile(scope: !901, file: !13, discriminator: 1)
!4600 = !DILocation(line: 2658, column: 24, scope: !901)
!4601 = !DILocation(line: 2658, column: 54, scope: !901)
!4602 = !DILocation(line: 2658, column: 69, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !901, file: !13, line: 2658, column: 66)
!4604 = !DILocation(line: 2658, column: 86, scope: !4603)
!4605 = !DILocation(line: 2658, column: 66, scope: !4603)
!4606 = !DILocation(line: 2658, column: 96, scope: !4603)
!4607 = !DILocation(line: 2658, column: 66, scope: !901)
!4608 = !DILocation(line: 2658, column: 66, scope: !4609)
!4609 = !DILexicalBlockFile(scope: !901, file: !13, discriminator: 2)
!4610 = !DILocation(line: 2658, column: 127, scope: !4611)
!4611 = !DILexicalBlockFile(scope: !4603, file: !13, discriminator: 3)
!4612 = !DILocation(line: 2658, column: 145, scope: !4603)
!4613 = !DILocation(line: 2658, column: 155, scope: !4603)
!4614 = !DILocation(line: 2658, column: 180, scope: !4603)
!4615 = !DILocation(line: 2658, column: 111, scope: !4603)
!4616 = !DILocation(line: 2658, column: 199, scope: !4617)
!4617 = !DILexicalBlockFile(scope: !902, file: !13, discriminator: 4)
!4618 = !DILocation(line: 2658, column: 199, scope: !901)
!4619 = !DILocation(line: 2658, column: 199, scope: !4620)
!4620 = !DILexicalBlockFile(scope: !901, file: !13, discriminator: 5)
!4621 = !DILocation(line: 2659, column: 9, scope: !902)
!4622 = !DILocation(line: 2659, column: 14, scope: !4623)
!4623 = !DILexicalBlockFile(scope: !905, file: !13, discriminator: 1)
!4624 = !DILocation(line: 2659, column: 24, scope: !905)
!4625 = !DILocation(line: 2659, column: 47, scope: !905)
!4626 = !DILocation(line: 2659, column: 53, scope: !905)
!4627 = !DILocation(line: 2659, column: 68, scope: !909)
!4628 = !DILocation(line: 2659, column: 76, scope: !909)
!4629 = !DILocation(line: 2659, column: 68, scope: !905)
!4630 = !DILocation(line: 2659, column: 94, scope: !4631)
!4631 = !DILexicalBlockFile(scope: !908, file: !13, discriminator: 2)
!4632 = !DILocation(line: 2659, column: 100, scope: !908)
!4633 = !DILocation(line: 2659, column: 110, scope: !908)
!4634 = !DILocation(line: 2659, column: 124, scope: !908)
!4635 = !DILocation(line: 2659, column: 129, scope: !4636)
!4636 = !DILexicalBlockFile(scope: !907, file: !13, discriminator: 4)
!4637 = !DILocation(line: 2659, column: 139, scope: !907)
!4638 = !DILocation(line: 2659, column: 169, scope: !907)
!4639 = !DILocation(line: 2659, column: 187, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !907, file: !13, line: 2659, column: 184)
!4641 = !DILocation(line: 2659, column: 204, scope: !4640)
!4642 = !DILocation(line: 2659, column: 184, scope: !4640)
!4643 = !DILocation(line: 2659, column: 214, scope: !4640)
!4644 = !DILocation(line: 2659, column: 184, scope: !907)
!4645 = !DILocation(line: 2659, column: 184, scope: !4646)
!4646 = !DILexicalBlockFile(scope: !907, file: !13, discriminator: 5)
!4647 = !DILocation(line: 2659, column: 245, scope: !4648)
!4648 = !DILexicalBlockFile(scope: !4640, file: !13, discriminator: 6)
!4649 = !DILocation(line: 2659, column: 263, scope: !4640)
!4650 = !DILocation(line: 2659, column: 273, scope: !4640)
!4651 = !DILocation(line: 2659, column: 298, scope: !4640)
!4652 = !DILocation(line: 2659, column: 229, scope: !4640)
!4653 = !DILocation(line: 2659, column: 317, scope: !4654)
!4654 = !DILexicalBlockFile(scope: !908, file: !13, discriminator: 7)
!4655 = !DILocation(line: 2659, column: 317, scope: !907)
!4656 = !DILocation(line: 2659, column: 317, scope: !4657)
!4657 = !DILexicalBlockFile(scope: !907, file: !13, discriminator: 8)
!4658 = !DILocation(line: 2659, column: 330, scope: !4659)
!4659 = !DILexicalBlockFile(scope: !908, file: !13, discriminator: 9)
!4660 = !DILocation(line: 2659, column: 332, scope: !4661)
!4661 = !DILexicalBlockFile(scope: !4662, file: !13, discriminator: 10)
!4662 = !DILexicalBlockFile(scope: !902, file: !13, discriminator: 3)
!4663 = !DILocation(line: 2659, column: 332, scope: !905)
!4664 = !DILocation(line: 2659, column: 332, scope: !4665)
!4665 = !DILexicalBlockFile(scope: !905, file: !13, discriminator: 11)
!4666 = !DILocation(line: 2660, column: 25, scope: !902)
!4667 = !DILocation(line: 2660, column: 31, scope: !902)
!4668 = !{!3766, !1878, i64 93}
!4669 = !DILocation(line: 2660, column: 9, scope: !902)
!4670 = !DILocation(line: 2660, column: 15, scope: !902)
!4671 = !DILocation(line: 2660, column: 23, scope: !902)
!4672 = !DILocation(line: 2661, column: 9, scope: !902)
!4673 = !DILocation(line: 2664, column: 12, scope: !890)
!4674 = !DILocation(line: 2664, column: 5, scope: !890)
!4675 = !DILocation(line: 2665, column: 1, scope: !890)
!4676 = !DILocation(line: 847, column: 28, scope: !1552)
!4677 = !DILocation(line: 847, column: 44, scope: !1552)
!4678 = !DILocation(line: 847, column: 60, scope: !1552)
!4679 = !DILocation(line: 849, column: 5, scope: !1552)
!4680 = !DILocation(line: 849, column: 11, scope: !1552)
!4681 = !DILocation(line: 852, column: 5, scope: !1552)
!4682 = !DILocation(line: 852, column: 15, scope: !1552)
!4683 = !DILocation(line: 852, column: 24, scope: !1552)
!4684 = !DILocation(line: 852, column: 30, scope: !1552)
!4685 = !DILocation(line: 853, column: 5, scope: !1552)
!4686 = !DILocation(line: 853, column: 11, scope: !1552)
!4687 = !DILocation(line: 854, column: 5, scope: !1552)
!4688 = !DILocation(line: 854, column: 11, scope: !1552)
!4689 = !DILocation(line: 855, column: 5, scope: !1552)
!4690 = !DILocation(line: 855, column: 11, scope: !1552)
!4691 = !DILocation(line: 856, column: 5, scope: !1552)
!4692 = !DILocation(line: 856, column: 9, scope: !1552)
!4693 = !DILocation(line: 856, column: 29, scope: !1552)
!4694 = !DILocation(line: 857, column: 5, scope: !1552)
!4695 = !DILocation(line: 857, column: 18, scope: !1552)
!4696 = !DILocation(line: 859, column: 5, scope: !1552)
!4697 = !DILocation(line: 859, column: 15, scope: !1552)
!4698 = !DILocation(line: 860, column: 5, scope: !1552)
!4699 = !DILocation(line: 860, column: 9, scope: !1552)
!4700 = !DILocation(line: 862, column: 5, scope: !1552)
!4701 = !DILocation(line: 862, column: 11, scope: !1552)
!4702 = !DILocation(line: 862, column: 14, scope: !1552)
!4703 = !DILocation(line: 863, column: 5, scope: !1552)
!4704 = !DILocation(line: 863, column: 11, scope: !1552)
!4705 = !DILocation(line: 863, column: 20, scope: !1552)
!4706 = !DILocation(line: 864, column: 45, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 864, column: 9)
!4708 = !DILocation(line: 864, column: 51, scope: !4707)
!4709 = !DILocation(line: 865, column: 38, scope: !4707)
!4710 = !DILocation(line: 864, column: 10, scope: !4707)
!4711 = !DILocation(line: 864, column: 9, scope: !1552)
!4712 = !DILocation(line: 867, column: 9, scope: !4707)
!4713 = !DILocation(line: 869, column: 9, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 869, column: 9)
!4715 = !DILocation(line: 869, column: 17, scope: !4714)
!4716 = !DILocation(line: 869, column: 20, scope: !4717)
!4717 = !DILexicalBlockFile(scope: !4714, file: !13, discriminator: 1)
!4718 = !DILocation(line: 869, column: 31, scope: !4714)
!4719 = !DILocation(line: 870, column: 9, scope: !4714)
!4720 = !DILocation(line: 870, column: 14, scope: !4717)
!4721 = !DILocation(line: 870, column: 25, scope: !4714)
!4722 = !DILocation(line: 870, column: 33, scope: !4714)
!4723 = !DILocation(line: 870, column: 36, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4714, file: !13, discriminator: 2)
!4725 = !DILocation(line: 870, column: 47, scope: !4714)
!4726 = !DILocation(line: 871, column: 9, scope: !4714)
!4727 = !DILocation(line: 871, column: 14, scope: !4717)
!4728 = !DILocation(line: 871, column: 25, scope: !4714)
!4729 = !DILocation(line: 871, column: 33, scope: !4714)
!4730 = !DILocation(line: 871, column: 36, scope: !4724)
!4731 = !DILocation(line: 871, column: 47, scope: !4714)
!4732 = !DILocation(line: 872, column: 9, scope: !4714)
!4733 = !DILocation(line: 872, column: 14, scope: !4717)
!4734 = !DILocation(line: 872, column: 25, scope: !4714)
!4735 = !DILocation(line: 872, column: 33, scope: !4714)
!4736 = !DILocation(line: 872, column: 36, scope: !4724)
!4737 = !DILocation(line: 872, column: 47, scope: !4714)
!4738 = !DILocation(line: 872, column: 55, scope: !4714)
!4739 = !DILocation(line: 872, column: 58, scope: !4740)
!4740 = !DILexicalBlockFile(scope: !4714, file: !13, discriminator: 3)
!4741 = !DILocation(line: 872, column: 69, scope: !4714)
!4742 = !DILocation(line: 869, column: 9, scope: !1552)
!4743 = !DILocation(line: 873, column: 22, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4714, file: !13, line: 872, column: 79)
!4745 = !DILocation(line: 874, column: 51, scope: !4744)
!4746 = !DILocation(line: 873, column: 9, scope: !4744)
!4747 = !DILocation(line: 875, column: 9, scope: !4744)
!4748 = !DILocation(line: 878, column: 5, scope: !1552)
!4749 = !DILocation(line: 878, column: 10, scope: !4750)
!4750 = !DILexicalBlockFile(scope: !1575, file: !13, discriminator: 1)
!4751 = !DILocation(line: 878, column: 20, scope: !1575)
!4752 = !DILocation(line: 878, column: 43, scope: !1575)
!4753 = !DILocation(line: 878, column: 49, scope: !1575)
!4754 = !DILocation(line: 878, column: 62, scope: !1579)
!4755 = !DILocation(line: 878, column: 70, scope: !1579)
!4756 = !DILocation(line: 878, column: 62, scope: !1575)
!4757 = !DILocation(line: 878, column: 88, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !1578, file: !13, discriminator: 2)
!4759 = !DILocation(line: 878, column: 94, scope: !1578)
!4760 = !DILocation(line: 878, column: 102, scope: !1578)
!4761 = !DILocation(line: 878, column: 116, scope: !1578)
!4762 = !DILocation(line: 878, column: 121, scope: !4763)
!4763 = !DILexicalBlockFile(scope: !1577, file: !13, discriminator: 4)
!4764 = !DILocation(line: 878, column: 131, scope: !1577)
!4765 = !DILocation(line: 878, column: 161, scope: !1577)
!4766 = !DILocation(line: 878, column: 179, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !1577, file: !13, line: 878, column: 176)
!4768 = !DILocation(line: 878, column: 196, scope: !4767)
!4769 = !DILocation(line: 878, column: 176, scope: !4767)
!4770 = !DILocation(line: 878, column: 206, scope: !4767)
!4771 = !DILocation(line: 878, column: 176, scope: !1577)
!4772 = !DILocation(line: 878, column: 176, scope: !4773)
!4773 = !DILexicalBlockFile(scope: !1577, file: !13, discriminator: 5)
!4774 = !DILocation(line: 878, column: 237, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4767, file: !13, discriminator: 6)
!4776 = !DILocation(line: 878, column: 255, scope: !4767)
!4777 = !DILocation(line: 878, column: 265, scope: !4767)
!4778 = !DILocation(line: 878, column: 290, scope: !4767)
!4779 = !DILocation(line: 878, column: 221, scope: !4767)
!4780 = !DILocation(line: 878, column: 309, scope: !4781)
!4781 = !DILexicalBlockFile(scope: !1578, file: !13, discriminator: 7)
!4782 = !DILocation(line: 878, column: 309, scope: !1577)
!4783 = !DILocation(line: 878, column: 309, scope: !4784)
!4784 = !DILexicalBlockFile(scope: !1577, file: !13, discriminator: 8)
!4785 = !DILocation(line: 878, column: 322, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !1578, file: !13, discriminator: 9)
!4787 = !DILocation(line: 878, column: 324, scope: !4788)
!4788 = !DILexicalBlockFile(scope: !4789, file: !13, discriminator: 10)
!4789 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 3)
!4790 = !DILocation(line: 878, column: 324, scope: !1575)
!4791 = !DILocation(line: 878, column: 324, scope: !4792)
!4792 = !DILexicalBlockFile(scope: !1575, file: !13, discriminator: 11)
!4793 = !DILocation(line: 879, column: 5, scope: !1552)
!4794 = !DILocation(line: 879, column: 10, scope: !4795)
!4795 = !DILexicalBlockFile(scope: !1581, file: !13, discriminator: 1)
!4796 = !DILocation(line: 879, column: 20, scope: !1581)
!4797 = !DILocation(line: 879, column: 43, scope: !1581)
!4798 = !DILocation(line: 879, column: 49, scope: !1581)
!4799 = !DILocation(line: 879, column: 64, scope: !1585)
!4800 = !DILocation(line: 879, column: 72, scope: !1585)
!4801 = !DILocation(line: 879, column: 64, scope: !1581)
!4802 = !DILocation(line: 879, column: 90, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !1584, file: !13, discriminator: 2)
!4804 = !DILocation(line: 879, column: 96, scope: !1584)
!4805 = !DILocation(line: 879, column: 106, scope: !1584)
!4806 = !DILocation(line: 879, column: 120, scope: !1584)
!4807 = !DILocation(line: 879, column: 125, scope: !4808)
!4808 = !DILexicalBlockFile(scope: !1583, file: !13, discriminator: 4)
!4809 = !DILocation(line: 879, column: 135, scope: !1583)
!4810 = !DILocation(line: 879, column: 165, scope: !1583)
!4811 = !DILocation(line: 879, column: 183, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !1583, file: !13, line: 879, column: 180)
!4813 = !DILocation(line: 879, column: 200, scope: !4812)
!4814 = !DILocation(line: 879, column: 180, scope: !4812)
!4815 = !DILocation(line: 879, column: 210, scope: !4812)
!4816 = !DILocation(line: 879, column: 180, scope: !1583)
!4817 = !DILocation(line: 879, column: 180, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !1583, file: !13, discriminator: 5)
!4819 = !DILocation(line: 879, column: 241, scope: !4820)
!4820 = !DILexicalBlockFile(scope: !4812, file: !13, discriminator: 6)
!4821 = !DILocation(line: 879, column: 259, scope: !4812)
!4822 = !DILocation(line: 879, column: 269, scope: !4812)
!4823 = !DILocation(line: 879, column: 294, scope: !4812)
!4824 = !DILocation(line: 879, column: 225, scope: !4812)
!4825 = !DILocation(line: 879, column: 313, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !1584, file: !13, discriminator: 7)
!4827 = !DILocation(line: 879, column: 313, scope: !1583)
!4828 = !DILocation(line: 879, column: 313, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !1583, file: !13, discriminator: 8)
!4830 = !DILocation(line: 879, column: 326, scope: !4831)
!4831 = !DILexicalBlockFile(scope: !1584, file: !13, discriminator: 9)
!4832 = !DILocation(line: 879, column: 328, scope: !4788)
!4833 = !DILocation(line: 879, column: 328, scope: !1581)
!4834 = !DILocation(line: 879, column: 328, scope: !4835)
!4835 = !DILexicalBlockFile(scope: !1581, file: !13, discriminator: 11)
!4836 = !DILocation(line: 880, column: 5, scope: !1552)
!4837 = !DILocation(line: 880, column: 10, scope: !4838)
!4838 = !DILexicalBlockFile(scope: !1587, file: !13, discriminator: 1)
!4839 = !DILocation(line: 880, column: 20, scope: !1587)
!4840 = !DILocation(line: 880, column: 43, scope: !1587)
!4841 = !DILocation(line: 880, column: 49, scope: !1587)
!4842 = !DILocation(line: 880, column: 63, scope: !1591)
!4843 = !DILocation(line: 880, column: 71, scope: !1591)
!4844 = !DILocation(line: 880, column: 63, scope: !1587)
!4845 = !DILocation(line: 880, column: 89, scope: !4846)
!4846 = !DILexicalBlockFile(scope: !1590, file: !13, discriminator: 2)
!4847 = !DILocation(line: 880, column: 95, scope: !1590)
!4848 = !DILocation(line: 880, column: 104, scope: !1590)
!4849 = !DILocation(line: 880, column: 118, scope: !1590)
!4850 = !DILocation(line: 880, column: 123, scope: !4851)
!4851 = !DILexicalBlockFile(scope: !1589, file: !13, discriminator: 4)
!4852 = !DILocation(line: 880, column: 133, scope: !1589)
!4853 = !DILocation(line: 880, column: 163, scope: !1589)
!4854 = !DILocation(line: 880, column: 181, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !1589, file: !13, line: 880, column: 178)
!4856 = !DILocation(line: 880, column: 198, scope: !4855)
!4857 = !DILocation(line: 880, column: 178, scope: !4855)
!4858 = !DILocation(line: 880, column: 208, scope: !4855)
!4859 = !DILocation(line: 880, column: 178, scope: !1589)
!4860 = !DILocation(line: 880, column: 178, scope: !4861)
!4861 = !DILexicalBlockFile(scope: !1589, file: !13, discriminator: 5)
!4862 = !DILocation(line: 880, column: 239, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !4855, file: !13, discriminator: 6)
!4864 = !DILocation(line: 880, column: 257, scope: !4855)
!4865 = !DILocation(line: 880, column: 267, scope: !4855)
!4866 = !DILocation(line: 880, column: 292, scope: !4855)
!4867 = !DILocation(line: 880, column: 223, scope: !4855)
!4868 = !DILocation(line: 880, column: 311, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !1590, file: !13, discriminator: 7)
!4870 = !DILocation(line: 880, column: 311, scope: !1589)
!4871 = !DILocation(line: 880, column: 311, scope: !4872)
!4872 = !DILexicalBlockFile(scope: !1589, file: !13, discriminator: 8)
!4873 = !DILocation(line: 880, column: 324, scope: !4874)
!4874 = !DILexicalBlockFile(scope: !1590, file: !13, discriminator: 9)
!4875 = !DILocation(line: 880, column: 326, scope: !4788)
!4876 = !DILocation(line: 880, column: 326, scope: !1587)
!4877 = !DILocation(line: 880, column: 326, scope: !4878)
!4878 = !DILexicalBlockFile(scope: !1587, file: !13, discriminator: 11)
!4879 = !DILocation(line: 881, column: 5, scope: !1552)
!4880 = !DILocation(line: 881, column: 10, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !1593, file: !13, discriminator: 1)
!4882 = !DILocation(line: 881, column: 20, scope: !1593)
!4883 = !DILocation(line: 881, column: 43, scope: !1593)
!4884 = !DILocation(line: 881, column: 49, scope: !1593)
!4885 = !DILocation(line: 881, column: 63, scope: !1597)
!4886 = !DILocation(line: 881, column: 71, scope: !1597)
!4887 = !DILocation(line: 881, column: 63, scope: !1593)
!4888 = !DILocation(line: 881, column: 89, scope: !4889)
!4889 = !DILexicalBlockFile(scope: !1596, file: !13, discriminator: 2)
!4890 = !DILocation(line: 881, column: 95, scope: !1596)
!4891 = !DILocation(line: 881, column: 104, scope: !1596)
!4892 = !DILocation(line: 881, column: 118, scope: !1596)
!4893 = !DILocation(line: 881, column: 123, scope: !4894)
!4894 = !DILexicalBlockFile(scope: !1595, file: !13, discriminator: 4)
!4895 = !DILocation(line: 881, column: 133, scope: !1595)
!4896 = !DILocation(line: 881, column: 163, scope: !1595)
!4897 = !DILocation(line: 881, column: 181, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !1595, file: !13, line: 881, column: 178)
!4899 = !DILocation(line: 881, column: 198, scope: !4898)
!4900 = !DILocation(line: 881, column: 178, scope: !4898)
!4901 = !DILocation(line: 881, column: 208, scope: !4898)
!4902 = !DILocation(line: 881, column: 178, scope: !1595)
!4903 = !DILocation(line: 881, column: 178, scope: !4904)
!4904 = !DILexicalBlockFile(scope: !1595, file: !13, discriminator: 5)
!4905 = !DILocation(line: 881, column: 239, scope: !4906)
!4906 = !DILexicalBlockFile(scope: !4898, file: !13, discriminator: 6)
!4907 = !DILocation(line: 881, column: 257, scope: !4898)
!4908 = !DILocation(line: 881, column: 267, scope: !4898)
!4909 = !DILocation(line: 881, column: 292, scope: !4898)
!4910 = !DILocation(line: 881, column: 223, scope: !4898)
!4911 = !DILocation(line: 881, column: 311, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !1596, file: !13, discriminator: 7)
!4913 = !DILocation(line: 881, column: 311, scope: !1595)
!4914 = !DILocation(line: 881, column: 311, scope: !4915)
!4915 = !DILexicalBlockFile(scope: !1595, file: !13, discriminator: 8)
!4916 = !DILocation(line: 881, column: 324, scope: !4917)
!4917 = !DILexicalBlockFile(scope: !1596, file: !13, discriminator: 9)
!4918 = !DILocation(line: 881, column: 326, scope: !4788)
!4919 = !DILocation(line: 881, column: 326, scope: !1593)
!4920 = !DILocation(line: 881, column: 326, scope: !4921)
!4921 = !DILexicalBlockFile(scope: !1593, file: !13, discriminator: 11)
!4922 = !DILocation(line: 882, column: 5, scope: !1552)
!4923 = !DILocation(line: 882, column: 10, scope: !4924)
!4924 = !DILexicalBlockFile(scope: !1599, file: !13, discriminator: 1)
!4925 = !DILocation(line: 882, column: 20, scope: !1599)
!4926 = !DILocation(line: 882, column: 43, scope: !1599)
!4927 = !DILocation(line: 882, column: 49, scope: !1599)
!4928 = !DILocation(line: 882, column: 62, scope: !1603)
!4929 = !DILocation(line: 882, column: 70, scope: !1603)
!4930 = !DILocation(line: 882, column: 62, scope: !1599)
!4931 = !DILocation(line: 882, column: 88, scope: !4932)
!4932 = !DILexicalBlockFile(scope: !1602, file: !13, discriminator: 2)
!4933 = !DILocation(line: 882, column: 94, scope: !1602)
!4934 = !DILocation(line: 882, column: 102, scope: !1602)
!4935 = !DILocation(line: 882, column: 116, scope: !1602)
!4936 = !DILocation(line: 882, column: 121, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !1601, file: !13, discriminator: 4)
!4938 = !DILocation(line: 882, column: 131, scope: !1601)
!4939 = !DILocation(line: 882, column: 161, scope: !1601)
!4940 = !DILocation(line: 882, column: 179, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !1601, file: !13, line: 882, column: 176)
!4942 = !DILocation(line: 882, column: 196, scope: !4941)
!4943 = !DILocation(line: 882, column: 176, scope: !4941)
!4944 = !DILocation(line: 882, column: 206, scope: !4941)
!4945 = !DILocation(line: 882, column: 176, scope: !1601)
!4946 = !DILocation(line: 882, column: 176, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !1601, file: !13, discriminator: 5)
!4948 = !DILocation(line: 882, column: 237, scope: !4949)
!4949 = !DILexicalBlockFile(scope: !4941, file: !13, discriminator: 6)
!4950 = !DILocation(line: 882, column: 255, scope: !4941)
!4951 = !DILocation(line: 882, column: 265, scope: !4941)
!4952 = !DILocation(line: 882, column: 290, scope: !4941)
!4953 = !DILocation(line: 882, column: 221, scope: !4941)
!4954 = !DILocation(line: 882, column: 309, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !1602, file: !13, discriminator: 7)
!4956 = !DILocation(line: 882, column: 309, scope: !1601)
!4957 = !DILocation(line: 882, column: 309, scope: !4958)
!4958 = !DILexicalBlockFile(scope: !1601, file: !13, discriminator: 8)
!4959 = !DILocation(line: 882, column: 322, scope: !4960)
!4960 = !DILexicalBlockFile(scope: !1602, file: !13, discriminator: 9)
!4961 = !DILocation(line: 882, column: 324, scope: !4788)
!4962 = !DILocation(line: 882, column: 324, scope: !1599)
!4963 = !DILocation(line: 882, column: 324, scope: !4964)
!4964 = !DILexicalBlockFile(scope: !1599, file: !13, discriminator: 11)
!4965 = !DILocation(line: 883, column: 5, scope: !1552)
!4966 = !DILocation(line: 883, column: 10, scope: !4967)
!4967 = !DILexicalBlockFile(scope: !1605, file: !13, discriminator: 1)
!4968 = !DILocation(line: 883, column: 20, scope: !1605)
!4969 = !DILocation(line: 883, column: 43, scope: !1605)
!4970 = !DILocation(line: 883, column: 49, scope: !1605)
!4971 = !DILocation(line: 883, column: 69, scope: !1609)
!4972 = !DILocation(line: 883, column: 77, scope: !1609)
!4973 = !DILocation(line: 883, column: 69, scope: !1605)
!4974 = !DILocation(line: 883, column: 95, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !1608, file: !13, discriminator: 2)
!4976 = !DILocation(line: 883, column: 101, scope: !1608)
!4977 = !DILocation(line: 883, column: 116, scope: !1608)
!4978 = !DILocation(line: 883, column: 130, scope: !1608)
!4979 = !DILocation(line: 883, column: 135, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !1607, file: !13, discriminator: 4)
!4981 = !DILocation(line: 883, column: 145, scope: !1607)
!4982 = !DILocation(line: 883, column: 175, scope: !1607)
!4983 = !DILocation(line: 883, column: 193, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !1607, file: !13, line: 883, column: 190)
!4985 = !DILocation(line: 883, column: 210, scope: !4984)
!4986 = !DILocation(line: 883, column: 190, scope: !4984)
!4987 = !DILocation(line: 883, column: 220, scope: !4984)
!4988 = !DILocation(line: 883, column: 190, scope: !1607)
!4989 = !DILocation(line: 883, column: 190, scope: !4990)
!4990 = !DILexicalBlockFile(scope: !1607, file: !13, discriminator: 5)
!4991 = !DILocation(line: 883, column: 251, scope: !4992)
!4992 = !DILexicalBlockFile(scope: !4984, file: !13, discriminator: 6)
!4993 = !DILocation(line: 883, column: 269, scope: !4984)
!4994 = !DILocation(line: 883, column: 279, scope: !4984)
!4995 = !DILocation(line: 883, column: 304, scope: !4984)
!4996 = !DILocation(line: 883, column: 235, scope: !4984)
!4997 = !DILocation(line: 883, column: 323, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !1608, file: !13, discriminator: 7)
!4999 = !DILocation(line: 883, column: 323, scope: !1607)
!5000 = !DILocation(line: 883, column: 323, scope: !5001)
!5001 = !DILexicalBlockFile(scope: !1607, file: !13, discriminator: 8)
!5002 = !DILocation(line: 883, column: 336, scope: !5003)
!5003 = !DILexicalBlockFile(scope: !1608, file: !13, discriminator: 9)
!5004 = !DILocation(line: 883, column: 338, scope: !4788)
!5005 = !DILocation(line: 883, column: 338, scope: !1605)
!5006 = !DILocation(line: 883, column: 338, scope: !5007)
!5007 = !DILexicalBlockFile(scope: !1605, file: !13, discriminator: 11)
!5008 = !DILocation(line: 884, column: 5, scope: !1552)
!5009 = !DILocation(line: 884, column: 10, scope: !5010)
!5010 = !DILexicalBlockFile(scope: !1611, file: !13, discriminator: 1)
!5011 = !DILocation(line: 884, column: 20, scope: !1611)
!5012 = !DILocation(line: 884, column: 43, scope: !1611)
!5013 = !DILocation(line: 884, column: 49, scope: !1611)
!5014 = !DILocation(line: 884, column: 69, scope: !1615)
!5015 = !DILocation(line: 884, column: 77, scope: !1615)
!5016 = !DILocation(line: 884, column: 69, scope: !1611)
!5017 = !DILocation(line: 884, column: 95, scope: !5018)
!5018 = !DILexicalBlockFile(scope: !1614, file: !13, discriminator: 2)
!5019 = !DILocation(line: 884, column: 101, scope: !1614)
!5020 = !DILocation(line: 884, column: 116, scope: !1614)
!5021 = !DILocation(line: 884, column: 130, scope: !1614)
!5022 = !DILocation(line: 884, column: 135, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !1613, file: !13, discriminator: 4)
!5024 = !DILocation(line: 884, column: 145, scope: !1613)
!5025 = !DILocation(line: 884, column: 175, scope: !1613)
!5026 = !DILocation(line: 884, column: 193, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !1613, file: !13, line: 884, column: 190)
!5028 = !DILocation(line: 884, column: 210, scope: !5027)
!5029 = !DILocation(line: 884, column: 190, scope: !5027)
!5030 = !DILocation(line: 884, column: 220, scope: !5027)
!5031 = !DILocation(line: 884, column: 190, scope: !1613)
!5032 = !DILocation(line: 884, column: 190, scope: !5033)
!5033 = !DILexicalBlockFile(scope: !1613, file: !13, discriminator: 5)
!5034 = !DILocation(line: 884, column: 251, scope: !5035)
!5035 = !DILexicalBlockFile(scope: !5027, file: !13, discriminator: 6)
!5036 = !DILocation(line: 884, column: 269, scope: !5027)
!5037 = !DILocation(line: 884, column: 279, scope: !5027)
!5038 = !DILocation(line: 884, column: 304, scope: !5027)
!5039 = !DILocation(line: 884, column: 235, scope: !5027)
!5040 = !DILocation(line: 884, column: 323, scope: !5041)
!5041 = !DILexicalBlockFile(scope: !1614, file: !13, discriminator: 7)
!5042 = !DILocation(line: 884, column: 323, scope: !1613)
!5043 = !DILocation(line: 884, column: 323, scope: !5044)
!5044 = !DILexicalBlockFile(scope: !1613, file: !13, discriminator: 8)
!5045 = !DILocation(line: 884, column: 336, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !1614, file: !13, discriminator: 9)
!5047 = !DILocation(line: 884, column: 338, scope: !4788)
!5048 = !DILocation(line: 884, column: 338, scope: !1611)
!5049 = !DILocation(line: 884, column: 338, scope: !5050)
!5050 = !DILexicalBlockFile(scope: !1611, file: !13, discriminator: 11)
!5051 = !DILocation(line: 885, column: 5, scope: !1552)
!5052 = !DILocation(line: 885, column: 10, scope: !5053)
!5053 = !DILexicalBlockFile(scope: !1617, file: !13, discriminator: 1)
!5054 = !DILocation(line: 885, column: 20, scope: !1617)
!5055 = !DILocation(line: 885, column: 43, scope: !1617)
!5056 = !DILocation(line: 885, column: 49, scope: !1617)
!5057 = !DILocation(line: 885, column: 64, scope: !1621)
!5058 = !DILocation(line: 885, column: 72, scope: !1621)
!5059 = !DILocation(line: 885, column: 64, scope: !1617)
!5060 = !DILocation(line: 885, column: 90, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !1620, file: !13, discriminator: 2)
!5062 = !DILocation(line: 885, column: 96, scope: !1620)
!5063 = !DILocation(line: 885, column: 106, scope: !1620)
!5064 = !DILocation(line: 885, column: 120, scope: !1620)
!5065 = !DILocation(line: 885, column: 125, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !1619, file: !13, discriminator: 4)
!5067 = !DILocation(line: 885, column: 135, scope: !1619)
!5068 = !DILocation(line: 885, column: 165, scope: !1619)
!5069 = !DILocation(line: 885, column: 183, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !1619, file: !13, line: 885, column: 180)
!5071 = !DILocation(line: 885, column: 200, scope: !5070)
!5072 = !DILocation(line: 885, column: 180, scope: !5070)
!5073 = !DILocation(line: 885, column: 210, scope: !5070)
!5074 = !DILocation(line: 885, column: 180, scope: !1619)
!5075 = !DILocation(line: 885, column: 180, scope: !5076)
!5076 = !DILexicalBlockFile(scope: !1619, file: !13, discriminator: 5)
!5077 = !DILocation(line: 885, column: 241, scope: !5078)
!5078 = !DILexicalBlockFile(scope: !5070, file: !13, discriminator: 6)
!5079 = !DILocation(line: 885, column: 259, scope: !5070)
!5080 = !DILocation(line: 885, column: 269, scope: !5070)
!5081 = !DILocation(line: 885, column: 294, scope: !5070)
!5082 = !DILocation(line: 885, column: 225, scope: !5070)
!5083 = !DILocation(line: 885, column: 313, scope: !5084)
!5084 = !DILexicalBlockFile(scope: !1620, file: !13, discriminator: 7)
!5085 = !DILocation(line: 885, column: 313, scope: !1619)
!5086 = !DILocation(line: 885, column: 313, scope: !5087)
!5087 = !DILexicalBlockFile(scope: !1619, file: !13, discriminator: 8)
!5088 = !DILocation(line: 885, column: 326, scope: !5089)
!5089 = !DILexicalBlockFile(scope: !1620, file: !13, discriminator: 9)
!5090 = !DILocation(line: 885, column: 328, scope: !4788)
!5091 = !DILocation(line: 885, column: 328, scope: !1617)
!5092 = !DILocation(line: 885, column: 328, scope: !5093)
!5093 = !DILexicalBlockFile(scope: !1617, file: !13, discriminator: 11)
!5094 = !DILocation(line: 886, column: 5, scope: !1552)
!5095 = !DILocation(line: 886, column: 10, scope: !5096)
!5096 = !DILexicalBlockFile(scope: !1623, file: !13, discriminator: 1)
!5097 = !DILocation(line: 886, column: 20, scope: !1623)
!5098 = !DILocation(line: 886, column: 43, scope: !1623)
!5099 = !DILocation(line: 886, column: 49, scope: !1623)
!5100 = !DILocation(line: 886, column: 62, scope: !1627)
!5101 = !DILocation(line: 886, column: 70, scope: !1627)
!5102 = !DILocation(line: 886, column: 62, scope: !1623)
!5103 = !DILocation(line: 886, column: 88, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !1626, file: !13, discriminator: 2)
!5105 = !DILocation(line: 886, column: 94, scope: !1626)
!5106 = !DILocation(line: 886, column: 102, scope: !1626)
!5107 = !DILocation(line: 886, column: 116, scope: !1626)
!5108 = !DILocation(line: 886, column: 121, scope: !5109)
!5109 = !DILexicalBlockFile(scope: !1625, file: !13, discriminator: 4)
!5110 = !DILocation(line: 886, column: 131, scope: !1625)
!5111 = !DILocation(line: 886, column: 161, scope: !1625)
!5112 = !DILocation(line: 886, column: 179, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !1625, file: !13, line: 886, column: 176)
!5114 = !DILocation(line: 886, column: 196, scope: !5113)
!5115 = !DILocation(line: 886, column: 176, scope: !5113)
!5116 = !DILocation(line: 886, column: 206, scope: !5113)
!5117 = !DILocation(line: 886, column: 176, scope: !1625)
!5118 = !DILocation(line: 886, column: 176, scope: !5119)
!5119 = !DILexicalBlockFile(scope: !1625, file: !13, discriminator: 5)
!5120 = !DILocation(line: 886, column: 237, scope: !5121)
!5121 = !DILexicalBlockFile(scope: !5113, file: !13, discriminator: 6)
!5122 = !DILocation(line: 886, column: 255, scope: !5113)
!5123 = !DILocation(line: 886, column: 265, scope: !5113)
!5124 = !DILocation(line: 886, column: 290, scope: !5113)
!5125 = !DILocation(line: 886, column: 221, scope: !5113)
!5126 = !DILocation(line: 886, column: 309, scope: !5127)
!5127 = !DILexicalBlockFile(scope: !1626, file: !13, discriminator: 7)
!5128 = !DILocation(line: 886, column: 309, scope: !1625)
!5129 = !DILocation(line: 886, column: 309, scope: !5130)
!5130 = !DILexicalBlockFile(scope: !1625, file: !13, discriminator: 8)
!5131 = !DILocation(line: 886, column: 322, scope: !5132)
!5132 = !DILexicalBlockFile(scope: !1626, file: !13, discriminator: 9)
!5133 = !DILocation(line: 886, column: 324, scope: !4788)
!5134 = !DILocation(line: 886, column: 324, scope: !1623)
!5135 = !DILocation(line: 886, column: 324, scope: !5136)
!5136 = !DILexicalBlockFile(scope: !1623, file: !13, discriminator: 11)
!5137 = !DILocation(line: 887, column: 5, scope: !1552)
!5138 = !DILocation(line: 887, column: 10, scope: !5139)
!5139 = !DILexicalBlockFile(scope: !1629, file: !13, discriminator: 1)
!5140 = !DILocation(line: 887, column: 20, scope: !1629)
!5141 = !DILocation(line: 887, column: 43, scope: !1629)
!5142 = !DILocation(line: 887, column: 49, scope: !1629)
!5143 = !DILocation(line: 887, column: 59, scope: !1633)
!5144 = !DILocation(line: 887, column: 67, scope: !1633)
!5145 = !DILocation(line: 887, column: 59, scope: !1629)
!5146 = !DILocation(line: 887, column: 85, scope: !5147)
!5147 = !DILexicalBlockFile(scope: !1632, file: !13, discriminator: 2)
!5148 = !DILocation(line: 887, column: 91, scope: !1632)
!5149 = !DILocation(line: 887, column: 96, scope: !1632)
!5150 = !DILocation(line: 887, column: 110, scope: !1632)
!5151 = !DILocation(line: 887, column: 115, scope: !5152)
!5152 = !DILexicalBlockFile(scope: !1631, file: !13, discriminator: 4)
!5153 = !DILocation(line: 887, column: 125, scope: !1631)
!5154 = !DILocation(line: 887, column: 155, scope: !1631)
!5155 = !DILocation(line: 887, column: 173, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !1631, file: !13, line: 887, column: 170)
!5157 = !DILocation(line: 887, column: 190, scope: !5156)
!5158 = !DILocation(line: 887, column: 170, scope: !5156)
!5159 = !DILocation(line: 887, column: 200, scope: !5156)
!5160 = !DILocation(line: 887, column: 170, scope: !1631)
!5161 = !DILocation(line: 887, column: 170, scope: !5162)
!5162 = !DILexicalBlockFile(scope: !1631, file: !13, discriminator: 5)
!5163 = !DILocation(line: 887, column: 231, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !5156, file: !13, discriminator: 6)
!5165 = !DILocation(line: 887, column: 249, scope: !5156)
!5166 = !DILocation(line: 887, column: 259, scope: !5156)
!5167 = !DILocation(line: 887, column: 284, scope: !5156)
!5168 = !DILocation(line: 887, column: 215, scope: !5156)
!5169 = !DILocation(line: 887, column: 303, scope: !5170)
!5170 = !DILexicalBlockFile(scope: !1632, file: !13, discriminator: 7)
!5171 = !DILocation(line: 887, column: 303, scope: !1631)
!5172 = !DILocation(line: 887, column: 303, scope: !5173)
!5173 = !DILexicalBlockFile(scope: !1631, file: !13, discriminator: 8)
!5174 = !DILocation(line: 887, column: 316, scope: !5175)
!5175 = !DILexicalBlockFile(scope: !1632, file: !13, discriminator: 9)
!5176 = !DILocation(line: 887, column: 318, scope: !4788)
!5177 = !DILocation(line: 887, column: 318, scope: !1629)
!5178 = !DILocation(line: 887, column: 318, scope: !5179)
!5179 = !DILexicalBlockFile(scope: !1629, file: !13, discriminator: 11)
!5180 = !DILocation(line: 888, column: 5, scope: !1552)
!5181 = !DILocation(line: 888, column: 11, scope: !1552)
!5182 = !DILocation(line: 888, column: 30, scope: !1552)
!5183 = !{!3766, !1900, i64 128}
!5184 = !DILocation(line: 889, column: 5, scope: !1552)
!5185 = !DILocation(line: 889, column: 11, scope: !1552)
!5186 = !DILocation(line: 889, column: 31, scope: !1552)
!5187 = !{!3766, !1900, i64 144}
!5188 = !DILocation(line: 890, column: 5, scope: !1552)
!5189 = !DILocation(line: 890, column: 11, scope: !1552)
!5190 = !DILocation(line: 890, column: 22, scope: !1552)
!5191 = !{!3766, !1877, i64 104}
!5192 = !DILocation(line: 891, column: 5, scope: !1552)
!5193 = !DILocation(line: 891, column: 11, scope: !1552)
!5194 = !DILocation(line: 891, column: 20, scope: !1552)
!5195 = !{!3766, !3767, i64 160}
!5196 = !DILocation(line: 893, column: 9, scope: !1636)
!5197 = !DILocation(line: 893, column: 18, scope: !1636)
!5198 = !DILocation(line: 893, column: 9, scope: !1552)
!5199 = !DILocation(line: 895, column: 9, scope: !1635)
!5200 = !DILocation(line: 895, column: 19, scope: !1635)
!5201 = !DILocation(line: 896, column: 17, scope: !1635)
!5202 = !DILocation(line: 896, column: 15, scope: !1635)
!5203 = !DILocation(line: 897, column: 13, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !1635, file: !13, line: 897, column: 13)
!5205 = !DILocation(line: 897, column: 19, scope: !5204)
!5206 = !DILocation(line: 897, column: 13, scope: !1635)
!5207 = !DILocation(line: 898, column: 13, scope: !5204)
!5208 = !DILocation(line: 899, column: 47, scope: !1635)
!5209 = !DILocation(line: 899, column: 18, scope: !1635)
!5210 = !DILocation(line: 899, column: 16, scope: !1635)
!5211 = !DILocation(line: 901, column: 13, scope: !1639)
!5212 = !DILocation(line: 901, column: 20, scope: !1639)
!5213 = !DILocation(line: 901, column: 13, scope: !1635)
!5214 = !DILocation(line: 902, column: 40, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !13, line: 902, column: 17)
!5216 = distinct !DILexicalBlock(scope: !1639, file: !13, line: 901, column: 35)
!5217 = !DILocation(line: 902, column: 17, scope: !5215)
!5218 = !DILocation(line: 902, column: 62, scope: !5215)
!5219 = !DILocation(line: 903, column: 40, scope: !5215)
!5220 = !DILocation(line: 903, column: 47, scope: !5215)
!5221 = !{!5222, !1877, i64 16}
!5222 = !{!"", !1884, i64 0, !1877, i64 8, !1877, i64 16}
!5223 = !DILocation(line: 903, column: 17, scope: !5215)
!5224 = !DILocation(line: 902, column: 17, scope: !5216)
!5225 = !DILocation(line: 904, column: 17, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5215, file: !13, line: 903, column: 71)
!5227 = !DILocation(line: 905, column: 13, scope: !5226)
!5228 = !DILocation(line: 907, column: 17, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5215, file: !13, line: 906, column: 18)
!5230 = !DILocation(line: 909, column: 9, scope: !5216)
!5231 = !DILocation(line: 911, column: 13, scope: !1638)
!5232 = !DILocation(line: 911, column: 17, scope: !1638)
!5233 = !DILocation(line: 911, column: 36, scope: !1638)
!5234 = !DILocation(line: 911, column: 22, scope: !1638)
!5235 = !DILocation(line: 912, column: 13, scope: !1638)
!5236 = !DILocation(line: 912, column: 18, scope: !5237)
!5237 = !DILexicalBlockFile(scope: !1641, file: !13, discriminator: 1)
!5238 = !DILocation(line: 912, column: 28, scope: !1641)
!5239 = !DILocation(line: 912, column: 58, scope: !1641)
!5240 = !DILocation(line: 912, column: 75, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !1641, file: !13, line: 912, column: 72)
!5242 = !DILocation(line: 912, column: 92, scope: !5241)
!5243 = !DILocation(line: 912, column: 72, scope: !5241)
!5244 = !DILocation(line: 912, column: 102, scope: !5241)
!5245 = !DILocation(line: 912, column: 72, scope: !1641)
!5246 = !DILocation(line: 912, column: 72, scope: !5247)
!5247 = !DILexicalBlockFile(scope: !1641, file: !13, discriminator: 2)
!5248 = !DILocation(line: 912, column: 133, scope: !5249)
!5249 = !DILexicalBlockFile(scope: !5241, file: !13, discriminator: 3)
!5250 = !DILocation(line: 912, column: 151, scope: !5241)
!5251 = !DILocation(line: 912, column: 161, scope: !5241)
!5252 = !DILocation(line: 912, column: 186, scope: !5241)
!5253 = !DILocation(line: 912, column: 117, scope: !5241)
!5254 = !DILocation(line: 912, column: 205, scope: !5255)
!5255 = !DILexicalBlockFile(scope: !1638, file: !13, discriminator: 4)
!5256 = !DILocation(line: 912, column: 205, scope: !1641)
!5257 = !DILocation(line: 912, column: 205, scope: !5258)
!5258 = !DILexicalBlockFile(scope: !1641, file: !13, discriminator: 5)
!5259 = !DILocation(line: 913, column: 17, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !1638, file: !13, line: 913, column: 17)
!5261 = !DILocation(line: 913, column: 20, scope: !5260)
!5262 = !DILocation(line: 913, column: 26, scope: !5260)
!5263 = !DILocation(line: 913, column: 29, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !5260, file: !13, discriminator: 1)
!5265 = !DILocation(line: 913, column: 17, scope: !1638)
!5266 = !DILocation(line: 914, column: 17, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5260, file: !13, line: 913, column: 47)
!5268 = !DILocation(line: 917, column: 50, scope: !1638)
!5269 = !DILocation(line: 917, column: 30, scope: !1638)
!5270 = !DILocation(line: 917, column: 13, scope: !1638)
!5271 = !DILocation(line: 917, column: 19, scope: !1638)
!5272 = !DILocation(line: 917, column: 28, scope: !1638)
!5273 = !DILocation(line: 918, column: 17, scope: !1645)
!5274 = !DILocation(line: 918, column: 23, scope: !1645)
!5275 = !DILocation(line: 918, column: 32, scope: !1645)
!5276 = !DILocation(line: 918, column: 17, scope: !1638)
!5277 = !DILocation(line: 919, column: 17, scope: !1645)
!5278 = !DILocation(line: 920, column: 40, scope: !1644)
!5279 = !DILocation(line: 920, column: 46, scope: !1644)
!5280 = !DILocation(line: 920, column: 58, scope: !1644)
!5281 = !DILocation(line: 920, column: 69, scope: !1644)
!5282 = !DILocation(line: 920, column: 78, scope: !1644)
!5283 = !DILocation(line: 920, column: 95, scope: !1644)
!5284 = !DILocation(line: 920, column: 22, scope: !1645)
!5285 = !DILocation(line: 921, column: 17, scope: !1644)
!5286 = !DILocation(line: 921, column: 22, scope: !5287)
!5287 = !DILexicalBlockFile(scope: !1643, file: !13, discriminator: 1)
!5288 = !DILocation(line: 921, column: 32, scope: !1643)
!5289 = !DILocation(line: 921, column: 55, scope: !1643)
!5290 = !DILocation(line: 921, column: 61, scope: !1643)
!5291 = !DILocation(line: 921, column: 76, scope: !1649)
!5292 = !DILocation(line: 921, column: 84, scope: !1649)
!5293 = !DILocation(line: 921, column: 76, scope: !1643)
!5294 = !DILocation(line: 921, column: 102, scope: !5295)
!5295 = !DILexicalBlockFile(scope: !1648, file: !13, discriminator: 2)
!5296 = !DILocation(line: 921, column: 108, scope: !1648)
!5297 = !DILocation(line: 921, column: 118, scope: !1648)
!5298 = !DILocation(line: 921, column: 132, scope: !1648)
!5299 = !DILocation(line: 921, column: 137, scope: !5300)
!5300 = !DILexicalBlockFile(scope: !1647, file: !13, discriminator: 4)
!5301 = !DILocation(line: 921, column: 147, scope: !1647)
!5302 = !DILocation(line: 921, column: 177, scope: !1647)
!5303 = !DILocation(line: 921, column: 195, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !1647, file: !13, line: 921, column: 192)
!5305 = !DILocation(line: 921, column: 212, scope: !5304)
!5306 = !DILocation(line: 921, column: 192, scope: !5304)
!5307 = !DILocation(line: 921, column: 222, scope: !5304)
!5308 = !DILocation(line: 921, column: 192, scope: !1647)
!5309 = !DILocation(line: 921, column: 192, scope: !5310)
!5310 = !DILexicalBlockFile(scope: !1647, file: !13, discriminator: 5)
!5311 = !DILocation(line: 921, column: 253, scope: !5312)
!5312 = !DILexicalBlockFile(scope: !5304, file: !13, discriminator: 6)
!5313 = !DILocation(line: 921, column: 271, scope: !5304)
!5314 = !DILocation(line: 921, column: 281, scope: !5304)
!5315 = !DILocation(line: 921, column: 306, scope: !5304)
!5316 = !DILocation(line: 921, column: 237, scope: !5304)
!5317 = !DILocation(line: 921, column: 325, scope: !5318)
!5318 = !DILexicalBlockFile(scope: !1648, file: !13, discriminator: 7)
!5319 = !DILocation(line: 921, column: 325, scope: !1647)
!5320 = !DILocation(line: 921, column: 325, scope: !5321)
!5321 = !DILexicalBlockFile(scope: !1647, file: !13, discriminator: 8)
!5322 = !DILocation(line: 921, column: 338, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !1648, file: !13, discriminator: 9)
!5324 = !DILocation(line: 921, column: 340, scope: !5325)
!5325 = !DILexicalBlockFile(scope: !5326, file: !13, discriminator: 10)
!5326 = !DILexicalBlockFile(scope: !1644, file: !13, discriminator: 3)
!5327 = !DILocation(line: 921, column: 340, scope: !1643)
!5328 = !DILocation(line: 921, column: 340, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !1643, file: !13, discriminator: 11)
!5330 = !DILocation(line: 921, column: 340, scope: !5331)
!5331 = !DILexicalBlockFile(scope: !1643, file: !13, discriminator: 12)
!5332 = !DILocation(line: 922, column: 9, scope: !1639)
!5333 = !DILocation(line: 922, column: 9, scope: !5334)
!5334 = !DILexicalBlockFile(scope: !1639, file: !13, discriminator: 1)
!5335 = !DILocation(line: 923, column: 5, scope: !1636)
!5336 = !DILocation(line: 923, column: 5, scope: !5337)
!5337 = !DILexicalBlockFile(scope: !1636, file: !13, discriminator: 1)
!5338 = !DILocation(line: 923, column: 5, scope: !1635)
!5339 = !DILocation(line: 924, column: 9, scope: !1652)
!5340 = !DILocation(line: 924, column: 18, scope: !1652)
!5341 = !DILocation(line: 924, column: 32, scope: !1652)
!5342 = !DILocation(line: 924, column: 35, scope: !5343)
!5343 = !DILexicalBlockFile(scope: !1652, file: !13, discriminator: 1)
!5344 = !DILocation(line: 924, column: 41, scope: !1652)
!5345 = !DILocation(line: 924, column: 50, scope: !1652)
!5346 = !DILocation(line: 924, column: 9, scope: !1552)
!5347 = !DILocation(line: 925, column: 9, scope: !1651)
!5348 = !DILocation(line: 925, column: 19, scope: !1651)
!5349 = !DILocation(line: 925, column: 59, scope: !1651)
!5350 = !DILocation(line: 925, column: 35, scope: !1651)
!5351 = !DILocation(line: 926, column: 13, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !1651, file: !13, line: 926, column: 13)
!5353 = !DILocation(line: 926, column: 27, scope: !5352)
!5354 = !DILocation(line: 926, column: 13, scope: !1651)
!5355 = !DILocation(line: 927, column: 13, scope: !5352)
!5356 = !DILocation(line: 929, column: 13, scope: !1651)
!5357 = !DILocation(line: 928, column: 26, scope: !1651)
!5358 = !DILocation(line: 928, column: 9, scope: !1651)
!5359 = !DILocation(line: 928, column: 15, scope: !1651)
!5360 = !DILocation(line: 928, column: 24, scope: !1651)
!5361 = !DILocation(line: 930, column: 9, scope: !1651)
!5362 = !DILocation(line: 930, column: 14, scope: !5363)
!5363 = !DILexicalBlockFile(scope: !1654, file: !13, discriminator: 1)
!5364 = !DILocation(line: 930, column: 24, scope: !1654)
!5365 = !DILocation(line: 930, column: 54, scope: !1654)
!5366 = !DILocation(line: 930, column: 78, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !1654, file: !13, line: 930, column: 75)
!5368 = !DILocation(line: 930, column: 95, scope: !5367)
!5369 = !DILocation(line: 930, column: 75, scope: !5367)
!5370 = !DILocation(line: 930, column: 105, scope: !5367)
!5371 = !DILocation(line: 930, column: 75, scope: !1654)
!5372 = !DILocation(line: 930, column: 75, scope: !5373)
!5373 = !DILexicalBlockFile(scope: !1654, file: !13, discriminator: 2)
!5374 = !DILocation(line: 930, column: 136, scope: !5375)
!5375 = !DILexicalBlockFile(scope: !5367, file: !13, discriminator: 3)
!5376 = !DILocation(line: 930, column: 154, scope: !5367)
!5377 = !DILocation(line: 930, column: 164, scope: !5367)
!5378 = !DILocation(line: 930, column: 189, scope: !5367)
!5379 = !DILocation(line: 930, column: 120, scope: !5367)
!5380 = !DILocation(line: 930, column: 208, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !1651, file: !13, discriminator: 4)
!5382 = !DILocation(line: 930, column: 208, scope: !1654)
!5383 = !DILocation(line: 930, column: 208, scope: !5384)
!5384 = !DILexicalBlockFile(scope: !1654, file: !13, discriminator: 5)
!5385 = !DILocation(line: 931, column: 13, scope: !1658)
!5386 = !DILocation(line: 931, column: 19, scope: !1658)
!5387 = !DILocation(line: 931, column: 28, scope: !1658)
!5388 = !DILocation(line: 931, column: 13, scope: !1651)
!5389 = !DILocation(line: 931, column: 43, scope: !5390)
!5390 = !DILexicalBlockFile(scope: !1658, file: !13, discriminator: 1)
!5391 = !DILocation(line: 939, column: 40, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !13, line: 939, column: 17)
!5393 = distinct !DILexicalBlock(scope: !1658, file: !13, line: 931, column: 43)
!5394 = !DILocation(line: 939, column: 17, scope: !5392)
!5395 = !DILocation(line: 939, column: 17, scope: !5393)
!5396 = !DILocation(line: 940, column: 17, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5392, file: !13, line: 939, column: 60)
!5398 = !DILocation(line: 941, column: 34, scope: !5397)
!5399 = !DILocation(line: 941, column: 17, scope: !5397)
!5400 = !DILocation(line: 941, column: 23, scope: !5397)
!5401 = !DILocation(line: 941, column: 32, scope: !5397)
!5402 = !DILocation(line: 942, column: 13, scope: !5397)
!5403 = !DILocation(line: 944, column: 17, scope: !5392)
!5404 = !DILocation(line: 945, column: 9, scope: !5393)
!5405 = !DILocation(line: 946, column: 36, scope: !1657)
!5406 = !DILocation(line: 946, column: 42, scope: !1657)
!5407 = !DILocation(line: 946, column: 54, scope: !1657)
!5408 = !DILocation(line: 946, column: 65, scope: !1657)
!5409 = !DILocation(line: 946, column: 74, scope: !1657)
!5410 = !DILocation(line: 946, column: 91, scope: !1657)
!5411 = !DILocation(line: 946, column: 18, scope: !1658)
!5412 = !DILocation(line: 947, column: 13, scope: !1657)
!5413 = !DILocation(line: 947, column: 18, scope: !5414)
!5414 = !DILexicalBlockFile(scope: !1656, file: !13, discriminator: 1)
!5415 = !DILocation(line: 947, column: 28, scope: !1656)
!5416 = !DILocation(line: 947, column: 51, scope: !1656)
!5417 = !DILocation(line: 947, column: 57, scope: !1656)
!5418 = !DILocation(line: 947, column: 72, scope: !1662)
!5419 = !DILocation(line: 947, column: 80, scope: !1662)
!5420 = !DILocation(line: 947, column: 72, scope: !1656)
!5421 = !DILocation(line: 947, column: 98, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !1661, file: !13, discriminator: 2)
!5423 = !DILocation(line: 947, column: 104, scope: !1661)
!5424 = !DILocation(line: 947, column: 114, scope: !1661)
!5425 = !DILocation(line: 947, column: 128, scope: !1661)
!5426 = !DILocation(line: 947, column: 133, scope: !5427)
!5427 = !DILexicalBlockFile(scope: !1660, file: !13, discriminator: 4)
!5428 = !DILocation(line: 947, column: 143, scope: !1660)
!5429 = !DILocation(line: 947, column: 173, scope: !1660)
!5430 = !DILocation(line: 947, column: 191, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !1660, file: !13, line: 947, column: 188)
!5432 = !DILocation(line: 947, column: 208, scope: !5431)
!5433 = !DILocation(line: 947, column: 188, scope: !5431)
!5434 = !DILocation(line: 947, column: 218, scope: !5431)
!5435 = !DILocation(line: 947, column: 188, scope: !1660)
!5436 = !DILocation(line: 947, column: 188, scope: !5437)
!5437 = !DILexicalBlockFile(scope: !1660, file: !13, discriminator: 5)
!5438 = !DILocation(line: 947, column: 249, scope: !5439)
!5439 = !DILexicalBlockFile(scope: !5431, file: !13, discriminator: 6)
!5440 = !DILocation(line: 947, column: 267, scope: !5431)
!5441 = !DILocation(line: 947, column: 277, scope: !5431)
!5442 = !DILocation(line: 947, column: 302, scope: !5431)
!5443 = !DILocation(line: 947, column: 233, scope: !5431)
!5444 = !DILocation(line: 947, column: 321, scope: !5445)
!5445 = !DILexicalBlockFile(scope: !1661, file: !13, discriminator: 7)
!5446 = !DILocation(line: 947, column: 321, scope: !1660)
!5447 = !DILocation(line: 947, column: 321, scope: !5448)
!5448 = !DILexicalBlockFile(scope: !1660, file: !13, discriminator: 8)
!5449 = !DILocation(line: 947, column: 334, scope: !5450)
!5450 = !DILexicalBlockFile(scope: !1661, file: !13, discriminator: 9)
!5451 = !DILocation(line: 947, column: 336, scope: !5452)
!5452 = !DILexicalBlockFile(scope: !5453, file: !13, discriminator: 10)
!5453 = !DILexicalBlockFile(scope: !1657, file: !13, discriminator: 3)
!5454 = !DILocation(line: 947, column: 336, scope: !1656)
!5455 = !DILocation(line: 947, column: 336, scope: !5456)
!5456 = !DILexicalBlockFile(scope: !1656, file: !13, discriminator: 11)
!5457 = !DILocation(line: 947, column: 336, scope: !5458)
!5458 = !DILexicalBlockFile(scope: !1656, file: !13, discriminator: 12)
!5459 = !DILocation(line: 948, column: 5, scope: !1652)
!5460 = !DILocation(line: 948, column: 5, scope: !5343)
!5461 = !DILocation(line: 948, column: 5, scope: !1651)
!5462 = !DILocation(line: 949, column: 9, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 949, column: 9)
!5464 = !DILocation(line: 949, column: 15, scope: !5463)
!5465 = !DILocation(line: 949, column: 24, scope: !5463)
!5466 = !DILocation(line: 949, column: 9, scope: !1552)
!5467 = !DILocation(line: 950, column: 37, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5463, file: !13, line: 949, column: 39)
!5469 = !DILocation(line: 950, column: 43, scope: !5468)
!5470 = !DILocation(line: 950, column: 20, scope: !5468)
!5471 = !DILocation(line: 950, column: 18, scope: !5468)
!5472 = !DILocation(line: 951, column: 13, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5468, file: !13, line: 951, column: 13)
!5474 = !DILocation(line: 951, column: 22, scope: !5473)
!5475 = !DILocation(line: 951, column: 13, scope: !5468)
!5476 = !DILocation(line: 952, column: 13, scope: !5473)
!5477 = !DILocation(line: 953, column: 5, scope: !5468)
!5478 = !DILocation(line: 954, column: 14, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5463, file: !13, line: 954, column: 14)
!5480 = !DILocation(line: 954, column: 23, scope: !5479)
!5481 = !DILocation(line: 954, column: 14, scope: !5463)
!5482 = !DILocation(line: 955, column: 47, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5479, file: !13, line: 954, column: 38)
!5484 = !DILocation(line: 955, column: 26, scope: !5483)
!5485 = !DILocation(line: 955, column: 9, scope: !5483)
!5486 = !DILocation(line: 955, column: 15, scope: !5483)
!5487 = !DILocation(line: 955, column: 24, scope: !5483)
!5488 = !DILocation(line: 956, column: 13, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5483, file: !13, line: 956, column: 13)
!5490 = !DILocation(line: 956, column: 19, scope: !5489)
!5491 = !DILocation(line: 956, column: 28, scope: !5489)
!5492 = !DILocation(line: 956, column: 13, scope: !5483)
!5493 = !DILocation(line: 957, column: 13, scope: !5489)
!5494 = !DILocation(line: 958, column: 5, scope: !5483)
!5495 = !DILocation(line: 960, column: 25, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5479, file: !13, line: 959, column: 10)
!5497 = !DILocation(line: 960, column: 9, scope: !5496)
!5498 = !DILocation(line: 965, column: 46, scope: !1552)
!5499 = !DILocation(line: 965, column: 18, scope: !1552)
!5500 = !DILocation(line: 965, column: 16, scope: !1552)
!5501 = !DILocation(line: 966, column: 9, scope: !1666)
!5502 = !DILocation(line: 966, column: 20, scope: !1666)
!5503 = !DILocation(line: 966, column: 9, scope: !1552)
!5504 = !DILocation(line: 967, column: 9, scope: !1665)
!5505 = !DILocation(line: 967, column: 14, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !1664, file: !13, discriminator: 1)
!5507 = !DILocation(line: 967, column: 24, scope: !1664)
!5508 = !DILocation(line: 967, column: 47, scope: !1664)
!5509 = !DILocation(line: 967, column: 53, scope: !1664)
!5510 = !DILocation(line: 967, column: 68, scope: !1670)
!5511 = !DILocation(line: 967, column: 76, scope: !1670)
!5512 = !DILocation(line: 967, column: 68, scope: !1664)
!5513 = !DILocation(line: 967, column: 94, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !1669, file: !13, discriminator: 2)
!5515 = !DILocation(line: 967, column: 100, scope: !1669)
!5516 = !DILocation(line: 967, column: 110, scope: !1669)
!5517 = !DILocation(line: 967, column: 124, scope: !1669)
!5518 = !DILocation(line: 967, column: 129, scope: !5519)
!5519 = !DILexicalBlockFile(scope: !1668, file: !13, discriminator: 4)
!5520 = !DILocation(line: 967, column: 139, scope: !1668)
!5521 = !DILocation(line: 967, column: 169, scope: !1668)
!5522 = !DILocation(line: 967, column: 187, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !1668, file: !13, line: 967, column: 184)
!5524 = !DILocation(line: 967, column: 204, scope: !5523)
!5525 = !DILocation(line: 967, column: 184, scope: !5523)
!5526 = !DILocation(line: 967, column: 214, scope: !5523)
!5527 = !DILocation(line: 967, column: 184, scope: !1668)
!5528 = !DILocation(line: 967, column: 184, scope: !5529)
!5529 = !DILexicalBlockFile(scope: !1668, file: !13, discriminator: 5)
!5530 = !DILocation(line: 967, column: 245, scope: !5531)
!5531 = !DILexicalBlockFile(scope: !5523, file: !13, discriminator: 6)
!5532 = !DILocation(line: 967, column: 263, scope: !5523)
!5533 = !DILocation(line: 967, column: 273, scope: !5523)
!5534 = !DILocation(line: 967, column: 298, scope: !5523)
!5535 = !DILocation(line: 967, column: 229, scope: !5523)
!5536 = !DILocation(line: 967, column: 317, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !1669, file: !13, discriminator: 7)
!5538 = !DILocation(line: 967, column: 317, scope: !1668)
!5539 = !DILocation(line: 967, column: 317, scope: !5540)
!5540 = !DILexicalBlockFile(scope: !1668, file: !13, discriminator: 8)
!5541 = !DILocation(line: 967, column: 330, scope: !5542)
!5542 = !DILexicalBlockFile(scope: !1669, file: !13, discriminator: 9)
!5543 = !DILocation(line: 967, column: 332, scope: !5544)
!5544 = !DILexicalBlockFile(scope: !5545, file: !13, discriminator: 10)
!5545 = !DILexicalBlockFile(scope: !1665, file: !13, discriminator: 3)
!5546 = !DILocation(line: 967, column: 332, scope: !1664)
!5547 = !DILocation(line: 967, column: 332, scope: !5548)
!5548 = !DILexicalBlockFile(scope: !1664, file: !13, discriminator: 11)
!5549 = !DILocation(line: 968, column: 9, scope: !1665)
!5550 = !DILocation(line: 975, column: 9, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 975, column: 9)
!5552 = !DILocation(line: 975, column: 16, scope: !5551)
!5553 = !DILocation(line: 975, column: 9, scope: !1552)
!5554 = !DILocation(line: 976, column: 16, scope: !5551)
!5555 = !DILocation(line: 976, column: 9, scope: !5551)
!5556 = !DILocation(line: 977, column: 39, scope: !1552)
!5557 = !DILocation(line: 977, column: 20, scope: !1552)
!5558 = !DILocation(line: 977, column: 5, scope: !1552)
!5559 = !DILocation(line: 977, column: 11, scope: !1552)
!5560 = !DILocation(line: 977, column: 18, scope: !1552)
!5561 = !DILocation(line: 978, column: 9, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 978, column: 9)
!5563 = !DILocation(line: 978, column: 15, scope: !5562)
!5564 = !DILocation(line: 978, column: 22, scope: !5562)
!5565 = !DILocation(line: 978, column: 9, scope: !1552)
!5566 = !DILocation(line: 979, column: 9, scope: !5562)
!5567 = !DILocation(line: 981, column: 5, scope: !1552)
!5568 = !DILocation(line: 981, column: 11, scope: !1552)
!5569 = !DILocation(line: 981, column: 22, scope: !1552)
!5570 = !{!3766, !1900, i64 24}
!5571 = !DILocation(line: 982, column: 28, scope: !1552)
!5572 = !DILocation(line: 982, column: 36, scope: !1552)
!5573 = !DILocation(line: 982, column: 50, scope: !1552)
!5574 = !DILocation(line: 982, column: 53, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 2)
!5576 = !DILocation(line: 982, column: 64, scope: !1552)
!5577 = !DILocation(line: 982, column: 50, scope: !5578)
!5578 = !DILexicalBlockFile(scope: !5579, file: !13, discriminator: 3)
!5579 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 1)
!5580 = !DILocation(line: 982, column: 27, scope: !1552)
!5581 = !DILocation(line: 982, column: 5, scope: !1552)
!5582 = !DILocation(line: 982, column: 11, scope: !1552)
!5583 = !DILocation(line: 982, column: 25, scope: !1552)
!5584 = !{!3766, !1878, i64 90}
!5585 = !DILocation(line: 983, column: 28, scope: !1552)
!5586 = !DILocation(line: 983, column: 5, scope: !1552)
!5587 = !DILocation(line: 983, column: 11, scope: !1552)
!5588 = !DILocation(line: 983, column: 26, scope: !1552)
!5589 = !{!3766, !1878, i64 88}
!5590 = !DILocation(line: 984, column: 27, scope: !1552)
!5591 = !DILocation(line: 984, column: 5, scope: !1552)
!5592 = !DILocation(line: 984, column: 11, scope: !1552)
!5593 = !DILocation(line: 984, column: 25, scope: !1552)
!5594 = !{!3766, !1878, i64 89}
!5595 = !DILocation(line: 985, column: 28, scope: !1552)
!5596 = !DILocation(line: 985, column: 36, scope: !1552)
!5597 = !DILocation(line: 985, column: 27, scope: !1552)
!5598 = !DILocation(line: 985, column: 5, scope: !1552)
!5599 = !DILocation(line: 985, column: 11, scope: !1552)
!5600 = !DILocation(line: 985, column: 25, scope: !1552)
!5601 = !{!3766, !1878, i64 91}
!5602 = !DILocation(line: 986, column: 9, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 986, column: 9)
!5604 = !DILocation(line: 986, column: 9, scope: !1552)
!5605 = !DILocation(line: 987, column: 45, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5603, file: !13, line: 986, column: 18)
!5607 = !DILocation(line: 987, column: 24, scope: !5606)
!5608 = !DILocation(line: 987, column: 9, scope: !5606)
!5609 = !DILocation(line: 987, column: 15, scope: !5606)
!5610 = !DILocation(line: 987, column: 22, scope: !5606)
!5611 = !DILocation(line: 988, column: 13, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5606, file: !13, line: 988, column: 13)
!5613 = !DILocation(line: 988, column: 19, scope: !5612)
!5614 = !DILocation(line: 988, column: 26, scope: !5612)
!5615 = !DILocation(line: 988, column: 13, scope: !5606)
!5616 = !DILocation(line: 989, column: 13, scope: !5612)
!5617 = !DILocation(line: 990, column: 5, scope: !5606)
!5618 = !DILocation(line: 991, column: 29, scope: !1552)
!5619 = !DILocation(line: 991, column: 37, scope: !1552)
!5620 = !DILocation(line: 991, column: 51, scope: !1552)
!5621 = !DILocation(line: 991, column: 54, scope: !5575)
!5622 = !DILocation(line: 991, column: 65, scope: !1552)
!5623 = !DILocation(line: 991, column: 51, scope: !5578)
!5624 = !DILocation(line: 991, column: 28, scope: !1552)
!5625 = !DILocation(line: 991, column: 5, scope: !1552)
!5626 = !DILocation(line: 991, column: 11, scope: !1552)
!5627 = !DILocation(line: 991, column: 26, scope: !1552)
!5628 = !{!3766, !1878, i64 92}
!5629 = !DILocation(line: 992, column: 10, scope: !1675)
!5630 = !DILocation(line: 992, column: 16, scope: !1675)
!5631 = !DILocation(line: 992, column: 30, scope: !1675)
!5632 = !DILocation(line: 992, column: 33, scope: !5633)
!5633 = !DILexicalBlockFile(scope: !1675, file: !13, discriminator: 1)
!5634 = !DILocation(line: 992, column: 39, scope: !1675)
!5635 = !DILocation(line: 992, column: 33, scope: !1675)
!5636 = !DILocation(line: 992, column: 9, scope: !1552)
!5637 = !DILocation(line: 993, column: 42, scope: !1674)
!5638 = !DILocation(line: 993, column: 48, scope: !1674)
!5639 = !DILocation(line: 993, column: 25, scope: !1674)
!5640 = !DILocation(line: 993, column: 9, scope: !1674)
!5641 = !DILocation(line: 993, column: 15, scope: !1674)
!5642 = !DILocation(line: 993, column: 23, scope: !1674)
!5643 = !{!3766, !1877, i64 80}
!5644 = !DILocation(line: 994, column: 13, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !1674, file: !13, line: 994, column: 13)
!5646 = !DILocation(line: 994, column: 19, scope: !5645)
!5647 = !DILocation(line: 994, column: 27, scope: !5645)
!5648 = !DILocation(line: 994, column: 13, scope: !1674)
!5649 = !DILocation(line: 995, column: 13, scope: !5645)
!5650 = !DILocation(line: 996, column: 31, scope: !1672)
!5651 = !DILocation(line: 996, column: 38, scope: !1672)
!5652 = !DILocation(line: 996, column: 48, scope: !1672)
!5653 = !DILocation(line: 996, column: 1455, scope: !1672)
!5654 = !DILocation(line: 996, column: 1468, scope: !5655)
!5655 = !DILexicalBlockFile(scope: !1672, file: !13, discriminator: 1)
!5656 = !DILocation(line: 996, column: 1485, scope: !1672)
!5657 = !DILocation(line: 996, column: 1494, scope: !1672)
!5658 = !DILocation(line: 996, column: 1351, scope: !1672)
!5659 = !DILocation(line: 996, column: 1694, scope: !5660)
!5660 = !DILexicalBlockFile(scope: !1678, file: !13, discriminator: 3)
!5661 = !DILocation(line: 996, column: 1715, scope: !1678)
!5662 = !DILocation(line: 996, column: 1762, scope: !1678)
!5663 = !DILocation(line: 996, column: 1768, scope: !1678)
!5664 = !DILocation(line: 996, column: 1778, scope: !1678)
!5665 = !DILocation(line: 996, column: 1791, scope: !1678)
!5666 = !DILocation(line: 996, column: 1802, scope: !1678)
!5667 = !DILocation(line: 996, column: 1812, scope: !1678)
!5668 = !DILocation(line: 996, column: 1810, scope: !1678)
!5669 = !DILocation(line: 996, column: 1868, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !1678, file: !13, line: 996, column: 1868)
!5671 = !DILocation(line: 996, column: 1877, scope: !5670)
!5672 = !DILocation(line: 996, column: 1881, scope: !5670)
!5673 = !DILocation(line: 996, column: 1884, scope: !5674)
!5674 = !DILexicalBlockFile(scope: !5670, file: !13, discriminator: 5)
!5675 = !DILocation(line: 996, column: 1893, scope: !5670)
!5676 = !DILocation(line: 996, column: 1868, scope: !1678)
!5677 = !DILocation(line: 996, column: 1913, scope: !5678)
!5678 = !DILexicalBlockFile(scope: !5679, file: !13, discriminator: 7)
!5679 = distinct !DILexicalBlock(scope: !5670, file: !13, line: 996, column: 1899)
!5680 = !DILocation(line: 996, column: 1923, scope: !5679)
!5681 = !DILocation(line: 996, column: 1921, scope: !5679)
!5682 = !DILocation(line: 996, column: 1910, scope: !5679)
!5683 = !DILocation(line: 996, column: 1980, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5679, file: !13, line: 996, column: 1980)
!5685 = !DILocation(line: 996, column: 1989, scope: !5684)
!5686 = !DILocation(line: 996, column: 1993, scope: !5684)
!5687 = !DILocation(line: 996, column: 1996, scope: !5688)
!5688 = !DILexicalBlockFile(scope: !5684, file: !13, discriminator: 9)
!5689 = !DILocation(line: 996, column: 2005, scope: !5684)
!5690 = !DILocation(line: 996, column: 1980, scope: !5679)
!5691 = !DILocation(line: 996, column: 2025, scope: !5692)
!5692 = !DILexicalBlockFile(scope: !5693, file: !13, discriminator: 11)
!5693 = distinct !DILexicalBlock(scope: !5684, file: !13, line: 996, column: 2011)
!5694 = !DILocation(line: 996, column: 2035, scope: !5693)
!5695 = !DILocation(line: 996, column: 2033, scope: !5693)
!5696 = !DILocation(line: 996, column: 2022, scope: !5693)
!5697 = !DILocation(line: 996, column: 2092, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5693, file: !13, line: 996, column: 2092)
!5699 = !DILocation(line: 996, column: 2101, scope: !5698)
!5700 = !DILocation(line: 996, column: 2105, scope: !5698)
!5701 = !DILocation(line: 996, column: 2108, scope: !5702)
!5702 = !DILexicalBlockFile(scope: !5698, file: !13, discriminator: 13)
!5703 = !DILocation(line: 996, column: 2117, scope: !5698)
!5704 = !DILocation(line: 996, column: 2092, scope: !5693)
!5705 = !DILocation(line: 996, column: 2135, scope: !5706)
!5706 = !DILexicalBlockFile(scope: !5698, file: !13, discriminator: 15)
!5707 = !DILocation(line: 996, column: 2145, scope: !5698)
!5708 = !DILocation(line: 996, column: 2143, scope: !5698)
!5709 = !DILocation(line: 996, column: 2132, scope: !5698)
!5710 = !DILocation(line: 996, column: 2123, scope: !5698)
!5711 = !DILocation(line: 996, column: 2198, scope: !5712)
!5712 = !DILexicalBlockFile(scope: !5713, file: !13, discriminator: 17)
!5713 = !DILexicalBlockFile(scope: !5714, file: !13, discriminator: 16)
!5714 = !DILexicalBlockFile(scope: !5693, file: !13, discriminator: 14)
!5715 = !DILocation(line: 996, column: 2200, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5717, file: !13, discriminator: 18)
!5717 = !DILexicalBlockFile(scope: !5718, file: !13, discriminator: 12)
!5718 = !DILexicalBlockFile(scope: !5679, file: !13, discriminator: 10)
!5719 = !DILocation(line: 996, column: 2202, scope: !5720)
!5720 = !DILexicalBlockFile(scope: !5721, file: !13, discriminator: 19)
!5721 = !DILexicalBlockFile(scope: !5722, file: !13, discriminator: 8)
!5722 = !DILexicalBlockFile(scope: !1678, file: !13, discriminator: 6)
!5723 = !DILocation(line: 996, column: 1896, scope: !5670)
!5724 = !DILocation(line: 996, column: 2212, scope: !1672)
!5725 = !DILocation(line: 996, column: 2212, scope: !1678)
!5726 = !DILocation(line: 996, column: 2237, scope: !5727)
!5727 = !DILexicalBlockFile(scope: !5728, file: !13, discriminator: 4)
!5728 = !DILexicalBlockFile(scope: !1672, file: !13, discriminator: 2)
!5729 = !DILocation(line: 996, column: 2243, scope: !1672)
!5730 = !DILocation(line: 996, column: 2219, scope: !1672)
!5731 = !DILocation(line: 996, column: 31, scope: !5732)
!5732 = !DILexicalBlockFile(scope: !5733, file: !13, discriminator: 21)
!5733 = !DILexicalBlockFile(scope: !1672, file: !13, discriminator: 20)
!5734 = !DILocation(line: 996, column: 2262, scope: !1673)
!5735 = !DILocation(line: 996, column: 2262, scope: !1672)
!5736 = !DILocation(line: 996, column: 28, scope: !1673)
!5737 = !DILocation(line: 996, column: 13, scope: !1674)
!5738 = !DILocation(line: 997, column: 13, scope: !1673)
!5739 = !DILocation(line: 997, column: 19, scope: !1673)
!5740 = !DILocation(line: 997, column: 27, scope: !1673)
!5741 = !DILocation(line: 998, column: 5, scope: !1674)
!5742 = !DILocation(line: 1005, column: 40, scope: !1552)
!5743 = !DILocation(line: 1005, column: 11, scope: !1552)
!5744 = !DILocation(line: 1005, column: 9, scope: !1552)
!5745 = !DILocation(line: 1006, column: 9, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1006, column: 9)
!5747 = !DILocation(line: 1006, column: 13, scope: !5746)
!5748 = !DILocation(line: 1006, column: 9, scope: !1552)
!5749 = !DILocation(line: 1007, column: 9, scope: !5746)
!5750 = !DILocation(line: 1008, column: 25, scope: !1552)
!5751 = !DILocation(line: 1008, column: 9, scope: !1552)
!5752 = !DILocation(line: 1008, column: 7, scope: !1552)
!5753 = !DILocation(line: 1009, column: 5, scope: !1552)
!5754 = !DILocation(line: 1009, column: 10, scope: !5755)
!5755 = !DILexicalBlockFile(scope: !1681, file: !13, discriminator: 1)
!5756 = !DILocation(line: 1009, column: 20, scope: !1681)
!5757 = !DILocation(line: 1009, column: 50, scope: !1681)
!5758 = !DILocation(line: 1009, column: 64, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !1681, file: !13, line: 1009, column: 61)
!5760 = !DILocation(line: 1009, column: 81, scope: !5759)
!5761 = !DILocation(line: 1009, column: 61, scope: !5759)
!5762 = !DILocation(line: 1009, column: 91, scope: !5759)
!5763 = !DILocation(line: 1009, column: 61, scope: !1681)
!5764 = !DILocation(line: 1009, column: 61, scope: !5765)
!5765 = !DILexicalBlockFile(scope: !1681, file: !13, discriminator: 2)
!5766 = !DILocation(line: 1009, column: 122, scope: !5767)
!5767 = !DILexicalBlockFile(scope: !5759, file: !13, discriminator: 3)
!5768 = !DILocation(line: 1009, column: 140, scope: !5759)
!5769 = !DILocation(line: 1009, column: 150, scope: !5759)
!5770 = !DILocation(line: 1009, column: 175, scope: !5759)
!5771 = !DILocation(line: 1009, column: 106, scope: !5759)
!5772 = !DILocation(line: 1009, column: 194, scope: !5773)
!5773 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 4)
!5774 = !DILocation(line: 1009, column: 194, scope: !1681)
!5775 = !DILocation(line: 1009, column: 194, scope: !5776)
!5776 = !DILexicalBlockFile(scope: !1681, file: !13, discriminator: 5)
!5777 = !DILocation(line: 1010, column: 9, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1010, column: 9)
!5779 = !DILocation(line: 1010, column: 11, scope: !5778)
!5780 = !DILocation(line: 1010, column: 9, scope: !1552)
!5781 = !DILocation(line: 1011, column: 9, scope: !5778)
!5782 = !DILocation(line: 1012, column: 9, scope: !1686)
!5783 = !DILocation(line: 1012, column: 11, scope: !1686)
!5784 = !DILocation(line: 1012, column: 9, scope: !1552)
!5785 = !DILocation(line: 1013, column: 60, scope: !1685)
!5786 = !DILocation(line: 1014, column: 60, scope: !1685)
!5787 = !DILocation(line: 1013, column: 25, scope: !1685)
!5788 = !DILocation(line: 1013, column: 9, scope: !1685)
!5789 = !DILocation(line: 1013, column: 15, scope: !1685)
!5790 = !DILocation(line: 1013, column: 23, scope: !1685)
!5791 = !DILocation(line: 1015, column: 13, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !1685, file: !13, line: 1015, column: 13)
!5793 = !DILocation(line: 1015, column: 19, scope: !5792)
!5794 = !DILocation(line: 1015, column: 27, scope: !5792)
!5795 = !DILocation(line: 1015, column: 13, scope: !1685)
!5796 = !DILocation(line: 1016, column: 13, scope: !5792)
!5797 = !DILocation(line: 1018, column: 13, scope: !1684)
!5798 = !DILocation(line: 1018, column: 19, scope: !1684)
!5799 = !DILocation(line: 1018, column: 13, scope: !1685)
!5800 = !DILocation(line: 1019, column: 13, scope: !1683)
!5801 = !DILocation(line: 1019, column: 23, scope: !1683)
!5802 = !DILocation(line: 1021, column: 23, scope: !1683)
!5803 = !DILocation(line: 1021, column: 29, scope: !1683)
!5804 = !DILocation(line: 1021, column: 43, scope: !1683)
!5805 = !DILocation(line: 1021, column: 49, scope: !1683)
!5806 = !DILocation(line: 1021, column: 38, scope: !1683)
!5807 = !DILocation(line: 1019, column: 44, scope: !1683)
!5808 = !DILocation(line: 1022, column: 17, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !1683, file: !13, line: 1022, column: 17)
!5810 = !DILocation(line: 1022, column: 36, scope: !5809)
!5811 = !DILocation(line: 1022, column: 17, scope: !1683)
!5812 = !DILocation(line: 1023, column: 17, scope: !5809)
!5813 = !DILocation(line: 1024, column: 13, scope: !1683)
!5814 = !DILocation(line: 1024, column: 18, scope: !5815)
!5815 = !DILexicalBlockFile(scope: !1688, file: !13, discriminator: 1)
!5816 = !DILocation(line: 1024, column: 28, scope: !1688)
!5817 = !DILocation(line: 1024, column: 51, scope: !1688)
!5818 = !DILocation(line: 1024, column: 57, scope: !1688)
!5819 = !DILocation(line: 1024, column: 71, scope: !1692)
!5820 = !DILocation(line: 1024, column: 79, scope: !1692)
!5821 = !DILocation(line: 1024, column: 71, scope: !1688)
!5822 = !DILocation(line: 1024, column: 97, scope: !5823)
!5823 = !DILexicalBlockFile(scope: !1691, file: !13, discriminator: 2)
!5824 = !DILocation(line: 1024, column: 103, scope: !1691)
!5825 = !DILocation(line: 1024, column: 112, scope: !1691)
!5826 = !DILocation(line: 1024, column: 126, scope: !1691)
!5827 = !DILocation(line: 1024, column: 131, scope: !5828)
!5828 = !DILexicalBlockFile(scope: !1690, file: !13, discriminator: 4)
!5829 = !DILocation(line: 1024, column: 141, scope: !1690)
!5830 = !DILocation(line: 1024, column: 171, scope: !1690)
!5831 = !DILocation(line: 1024, column: 189, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !1690, file: !13, line: 1024, column: 186)
!5833 = !DILocation(line: 1024, column: 206, scope: !5832)
!5834 = !DILocation(line: 1024, column: 186, scope: !5832)
!5835 = !DILocation(line: 1024, column: 216, scope: !5832)
!5836 = !DILocation(line: 1024, column: 186, scope: !1690)
!5837 = !DILocation(line: 1024, column: 186, scope: !5838)
!5838 = !DILexicalBlockFile(scope: !1690, file: !13, discriminator: 5)
!5839 = !DILocation(line: 1024, column: 247, scope: !5840)
!5840 = !DILexicalBlockFile(scope: !5832, file: !13, discriminator: 6)
!5841 = !DILocation(line: 1024, column: 265, scope: !5832)
!5842 = !DILocation(line: 1024, column: 275, scope: !5832)
!5843 = !DILocation(line: 1024, column: 300, scope: !5832)
!5844 = !DILocation(line: 1024, column: 231, scope: !5832)
!5845 = !DILocation(line: 1024, column: 319, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !1691, file: !13, discriminator: 7)
!5847 = !DILocation(line: 1024, column: 319, scope: !1690)
!5848 = !DILocation(line: 1024, column: 319, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !1690, file: !13, discriminator: 8)
!5850 = !DILocation(line: 1024, column: 332, scope: !5851)
!5851 = !DILexicalBlockFile(scope: !1691, file: !13, discriminator: 9)
!5852 = !DILocation(line: 1024, column: 334, scope: !5853)
!5853 = !DILexicalBlockFile(scope: !5854, file: !13, discriminator: 10)
!5854 = !DILexicalBlockFile(scope: !1683, file: !13, discriminator: 3)
!5855 = !DILocation(line: 1024, column: 334, scope: !1688)
!5856 = !DILocation(line: 1024, column: 334, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !1688, file: !13, discriminator: 11)
!5858 = !DILocation(line: 1025, column: 29, scope: !1683)
!5859 = !DILocation(line: 1025, column: 13, scope: !1683)
!5860 = !DILocation(line: 1025, column: 19, scope: !1683)
!5861 = !DILocation(line: 1025, column: 27, scope: !1683)
!5862 = !DILocation(line: 1026, column: 9, scope: !1684)
!5863 = !DILocation(line: 1026, column: 9, scope: !5864)
!5864 = !DILexicalBlockFile(scope: !1684, file: !13, discriminator: 1)
!5865 = !DILocation(line: 1026, column: 9, scope: !1683)
!5866 = !DILocation(line: 1027, column: 5, scope: !1685)
!5867 = !DILocation(line: 1030, column: 40, scope: !1552)
!5868 = !DILocation(line: 1030, column: 11, scope: !1552)
!5869 = !DILocation(line: 1030, column: 9, scope: !1552)
!5870 = !DILocation(line: 1031, column: 9, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1031, column: 9)
!5872 = !DILocation(line: 1031, column: 13, scope: !5871)
!5873 = !DILocation(line: 1031, column: 9, scope: !1552)
!5874 = !DILocation(line: 1032, column: 9, scope: !5871)
!5875 = !DILocation(line: 1033, column: 25, scope: !1552)
!5876 = !DILocation(line: 1033, column: 9, scope: !1552)
!5877 = !DILocation(line: 1033, column: 7, scope: !1552)
!5878 = !DILocation(line: 1034, column: 5, scope: !1552)
!5879 = !DILocation(line: 1034, column: 10, scope: !5880)
!5880 = !DILexicalBlockFile(scope: !1694, file: !13, discriminator: 1)
!5881 = !DILocation(line: 1034, column: 20, scope: !1694)
!5882 = !DILocation(line: 1034, column: 50, scope: !1694)
!5883 = !DILocation(line: 1034, column: 64, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !1694, file: !13, line: 1034, column: 61)
!5885 = !DILocation(line: 1034, column: 81, scope: !5884)
!5886 = !DILocation(line: 1034, column: 61, scope: !5884)
!5887 = !DILocation(line: 1034, column: 91, scope: !5884)
!5888 = !DILocation(line: 1034, column: 61, scope: !1694)
!5889 = !DILocation(line: 1034, column: 61, scope: !5890)
!5890 = !DILexicalBlockFile(scope: !1694, file: !13, discriminator: 2)
!5891 = !DILocation(line: 1034, column: 122, scope: !5892)
!5892 = !DILexicalBlockFile(scope: !5884, file: !13, discriminator: 3)
!5893 = !DILocation(line: 1034, column: 140, scope: !5884)
!5894 = !DILocation(line: 1034, column: 150, scope: !5884)
!5895 = !DILocation(line: 1034, column: 175, scope: !5884)
!5896 = !DILocation(line: 1034, column: 106, scope: !5884)
!5897 = !DILocation(line: 1034, column: 194, scope: !5773)
!5898 = !DILocation(line: 1034, column: 194, scope: !1694)
!5899 = !DILocation(line: 1034, column: 194, scope: !5900)
!5900 = !DILexicalBlockFile(scope: !1694, file: !13, discriminator: 5)
!5901 = !DILocation(line: 1035, column: 9, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1035, column: 9)
!5903 = !DILocation(line: 1035, column: 11, scope: !5902)
!5904 = !DILocation(line: 1035, column: 9, scope: !1552)
!5905 = !DILocation(line: 1036, column: 9, scope: !5902)
!5906 = !DILocation(line: 1037, column: 9, scope: !1700)
!5907 = !DILocation(line: 1037, column: 11, scope: !1700)
!5908 = !DILocation(line: 1037, column: 9, scope: !1552)
!5909 = !DILocation(line: 1038, column: 60, scope: !1699)
!5910 = !DILocation(line: 1039, column: 60, scope: !1699)
!5911 = !DILocation(line: 1038, column: 25, scope: !1699)
!5912 = !DILocation(line: 1038, column: 9, scope: !1699)
!5913 = !DILocation(line: 1038, column: 15, scope: !1699)
!5914 = !DILocation(line: 1038, column: 23, scope: !1699)
!5915 = !DILocation(line: 1040, column: 13, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !1699, file: !13, line: 1040, column: 13)
!5917 = !DILocation(line: 1040, column: 19, scope: !5916)
!5918 = !DILocation(line: 1040, column: 27, scope: !5916)
!5919 = !DILocation(line: 1040, column: 13, scope: !1699)
!5920 = !DILocation(line: 1041, column: 13, scope: !5916)
!5921 = !DILocation(line: 1043, column: 35, scope: !1699)
!5922 = !DILocation(line: 1043, column: 15, scope: !1699)
!5923 = !DILocation(line: 1043, column: 13, scope: !1699)
!5924 = !DILocation(line: 1044, column: 13, scope: !1698)
!5925 = !DILocation(line: 1044, column: 17, scope: !1698)
!5926 = !DILocation(line: 1044, column: 13, scope: !1699)
!5927 = !DILocation(line: 1045, column: 40, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5929, file: !13, line: 1045, column: 17)
!5929 = distinct !DILexicalBlock(scope: !1698, file: !13, line: 1044, column: 32)
!5930 = !DILocation(line: 1045, column: 17, scope: !5928)
!5931 = !DILocation(line: 1045, column: 17, scope: !5929)
!5932 = !DILocation(line: 1046, column: 17, scope: !5928)
!5933 = !DILocation(line: 1048, column: 17, scope: !5928)
!5934 = !DILocation(line: 1049, column: 9, scope: !5929)
!5935 = !DILocation(line: 1050, column: 35, scope: !1697)
!5936 = !DILocation(line: 1050, column: 42, scope: !1697)
!5937 = !DILocation(line: 1050, column: 53, scope: !1697)
!5938 = !DILocation(line: 1050, column: 62, scope: !1697)
!5939 = !DILocation(line: 1050, column: 79, scope: !1697)
!5940 = !DILocation(line: 1050, column: 18, scope: !1698)
!5941 = !DILocation(line: 1051, column: 13, scope: !1696)
!5942 = !DILocation(line: 1051, column: 30, scope: !1696)
!5943 = !DILocation(line: 1052, column: 13, scope: !1696)
!5944 = !DILocation(line: 1052, column: 20, scope: !5945)
!5945 = !DILexicalBlockFile(scope: !5946, file: !13, discriminator: 2)
!5946 = !DILexicalBlockFile(scope: !1696, file: !13, discriminator: 1)
!5947 = !DILocation(line: 1052, column: 23, scope: !1696)
!5948 = !{!5949, !1877, i64 0}
!5949 = !{!"", !1877, i64 0, !1877, i64 8}
!5950 = !DILocation(line: 1052, column: 28, scope: !1696)
!5951 = !DILocation(line: 1053, column: 55, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5953, file: !13, line: 1053, column: 21)
!5953 = distinct !DILexicalBlock(scope: !1696, file: !13, line: 1052, column: 43)
!5954 = !DILocation(line: 1053, column: 60, scope: !5952)
!5955 = !DILocation(line: 1053, column: 63, scope: !5952)
!5956 = !DILocation(line: 1053, column: 22, scope: !5952)
!5957 = !DILocation(line: 1053, column: 21, scope: !5953)
!5958 = !DILocation(line: 1054, column: 40, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5952, file: !13, line: 1053, column: 70)
!5960 = !DILocation(line: 1054, column: 43, scope: !5959)
!5961 = !{!5949, !1877, i64 8}
!5962 = !DILocation(line: 1054, column: 21, scope: !5959)
!5963 = !DILocation(line: 1054, column: 27, scope: !5959)
!5964 = !DILocation(line: 1054, column: 38, scope: !5959)
!5965 = !DILocation(line: 1055, column: 21, scope: !5959)
!5966 = !DILocation(line: 1057, column: 18, scope: !5953)
!5967 = !DILocation(line: 1059, column: 9, scope: !1697)
!5968 = !DILocation(line: 1059, column: 9, scope: !1696)
!5969 = !DILocation(line: 1060, column: 9, scope: !1699)
!5970 = !DILocation(line: 1060, column: 14, scope: !5971)
!5971 = !DILexicalBlockFile(scope: !1708, file: !13, discriminator: 1)
!5972 = !DILocation(line: 1060, column: 24, scope: !1708)
!5973 = !DILocation(line: 1060, column: 55, scope: !1708)
!5974 = !DILocation(line: 1060, column: 65, scope: !1711)
!5975 = !DILocation(line: 1060, column: 81, scope: !1711)
!5976 = !DILocation(line: 1060, column: 65, scope: !1708)
!5977 = !DILocation(line: 1060, column: 96, scope: !5978)
!5978 = !DILexicalBlockFile(scope: !1711, file: !13, discriminator: 2)
!5979 = !DILocation(line: 1060, column: 101, scope: !5980)
!5980 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 4)
!5981 = !DILocation(line: 1060, column: 111, scope: !1710)
!5982 = !DILocation(line: 1060, column: 141, scope: !1710)
!5983 = !DILocation(line: 1060, column: 167, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !1710, file: !13, line: 1060, column: 164)
!5985 = !DILocation(line: 1060, column: 184, scope: !5984)
!5986 = !DILocation(line: 1060, column: 164, scope: !5984)
!5987 = !DILocation(line: 1060, column: 194, scope: !5984)
!5988 = !DILocation(line: 1060, column: 164, scope: !1710)
!5989 = !DILocation(line: 1060, column: 164, scope: !5990)
!5990 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 5)
!5991 = !DILocation(line: 1060, column: 225, scope: !5992)
!5992 = !DILexicalBlockFile(scope: !5984, file: !13, discriminator: 6)
!5993 = !DILocation(line: 1060, column: 243, scope: !5984)
!5994 = !DILocation(line: 1060, column: 253, scope: !5984)
!5995 = !DILocation(line: 1060, column: 278, scope: !5984)
!5996 = !DILocation(line: 1060, column: 209, scope: !5984)
!5997 = !DILocation(line: 1060, column: 297, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !1711, file: !13, discriminator: 7)
!5999 = !DILocation(line: 1060, column: 297, scope: !1710)
!6000 = !DILocation(line: 1060, column: 297, scope: !6001)
!6001 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 8)
!6002 = !DILocation(line: 1060, column: 297, scope: !6003)
!6003 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 9)
!6004 = !DILocation(line: 1060, column: 310, scope: !6005)
!6005 = !DILexicalBlockFile(scope: !6006, file: !13, discriminator: 10)
!6006 = !DILexicalBlockFile(scope: !1699, file: !13, discriminator: 3)
!6007 = !DILocation(line: 1060, column: 310, scope: !1708)
!6008 = !DILocation(line: 1060, column: 310, scope: !6009)
!6009 = !DILexicalBlockFile(scope: !1708, file: !13, discriminator: 11)
!6010 = !DILocation(line: 1061, column: 5, scope: !1699)
!6011 = !DILocation(line: 1064, column: 5, scope: !1552)
!6012 = !DILocation(line: 1064, column: 10, scope: !6013)
!6013 = !DILexicalBlockFile(scope: !1713, file: !13, discriminator: 1)
!6014 = !DILocation(line: 1064, column: 20, scope: !1713)
!6015 = !DILocation(line: 1064, column: 50, scope: !1713)
!6016 = !DILocation(line: 1064, column: 71, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !1713, file: !13, line: 1064, column: 68)
!6018 = !DILocation(line: 1064, column: 88, scope: !6017)
!6019 = !DILocation(line: 1064, column: 68, scope: !6017)
!6020 = !DILocation(line: 1064, column: 98, scope: !6017)
!6021 = !DILocation(line: 1064, column: 68, scope: !1713)
!6022 = !DILocation(line: 1064, column: 68, scope: !6023)
!6023 = !DILexicalBlockFile(scope: !1713, file: !13, discriminator: 2)
!6024 = !DILocation(line: 1064, column: 129, scope: !6025)
!6025 = !DILexicalBlockFile(scope: !6017, file: !13, discriminator: 3)
!6026 = !DILocation(line: 1064, column: 147, scope: !6017)
!6027 = !DILocation(line: 1064, column: 157, scope: !6017)
!6028 = !DILocation(line: 1064, column: 182, scope: !6017)
!6029 = !DILocation(line: 1064, column: 113, scope: !6017)
!6030 = !DILocation(line: 1064, column: 201, scope: !5773)
!6031 = !DILocation(line: 1064, column: 201, scope: !1713)
!6032 = !DILocation(line: 1064, column: 201, scope: !6033)
!6033 = !DILexicalBlockFile(scope: !1713, file: !13, discriminator: 5)
!6034 = !DILocation(line: 1066, column: 20, scope: !1552)
!6035 = !DILocation(line: 1066, column: 5, scope: !1552)
!6036 = !DILocation(line: 1066, column: 11, scope: !1552)
!6037 = !DILocation(line: 1066, column: 18, scope: !1552)
!6038 = !DILocation(line: 1067, column: 21, scope: !1552)
!6039 = !DILocation(line: 1067, column: 31, scope: !1552)
!6040 = !DILocation(line: 1067, column: 40, scope: !1552)
!6041 = !DILocation(line: 1069, column: 23, scope: !1719)
!6042 = !DILocation(line: 1069, column: 33, scope: !1719)
!6043 = !DILocation(line: 1069, column: 42, scope: !1719)
!6044 = !DILocation(line: 1069, column: 68, scope: !1719)
!6045 = !DILocation(line: 1070, column: 23, scope: !1719)
!6046 = !DILocation(line: 1070, column: 33, scope: !1719)
!6047 = !DILocation(line: 1070, column: 42, scope: !1719)
!6048 = !DILocation(line: 1070, column: 68, scope: !1719)
!6049 = !DILocation(line: 1071, column: 23, scope: !1719)
!6050 = !DILocation(line: 1071, column: 33, scope: !1719)
!6051 = !DILocation(line: 1071, column: 42, scope: !1719)
!6052 = !DILocation(line: 1069, column: 9, scope: !1552)
!6053 = !DILocation(line: 1072, column: 35, scope: !1718)
!6054 = !DILocation(line: 1072, column: 15, scope: !1718)
!6055 = !DILocation(line: 1072, column: 13, scope: !1718)
!6056 = !DILocation(line: 1074, column: 13, scope: !1717)
!6057 = !DILocation(line: 1074, column: 17, scope: !1717)
!6058 = !DILocation(line: 1074, column: 13, scope: !1718)
!6059 = !DILocation(line: 1075, column: 40, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6061, file: !13, line: 1075, column: 17)
!6061 = distinct !DILexicalBlock(scope: !1717, file: !13, line: 1074, column: 32)
!6062 = !DILocation(line: 1075, column: 17, scope: !6060)
!6063 = !DILocation(line: 1075, column: 17, scope: !6061)
!6064 = !DILocation(line: 1076, column: 17, scope: !6060)
!6065 = !DILocation(line: 1078, column: 17, scope: !6060)
!6066 = !DILocation(line: 1079, column: 9, scope: !6061)
!6067 = !DILocation(line: 1080, column: 32, scope: !1716)
!6068 = !DILocation(line: 1080, column: 39, scope: !1716)
!6069 = !DILocation(line: 1080, column: 48, scope: !1716)
!6070 = !DILocation(line: 1080, column: 18, scope: !1717)
!6071 = !DILocation(line: 1081, column: 25, scope: !1716)
!6072 = !DILocation(line: 1081, column: 13, scope: !1716)
!6073 = !DILocation(line: 1081, column: 19, scope: !1716)
!6074 = !DILocation(line: 1081, column: 23, scope: !1716)
!6075 = !DILocation(line: 1083, column: 13, scope: !1716)
!6076 = !DILocation(line: 1083, column: 18, scope: !6077)
!6077 = !DILexicalBlockFile(scope: !1715, file: !13, discriminator: 1)
!6078 = !DILocation(line: 1083, column: 28, scope: !1715)
!6079 = !DILocation(line: 1083, column: 58, scope: !1715)
!6080 = !DILocation(line: 1083, column: 72, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !1715, file: !13, line: 1083, column: 69)
!6082 = !DILocation(line: 1083, column: 89, scope: !6081)
!6083 = !DILocation(line: 1083, column: 69, scope: !6081)
!6084 = !DILocation(line: 1083, column: 99, scope: !6081)
!6085 = !DILocation(line: 1083, column: 69, scope: !1715)
!6086 = !DILocation(line: 1083, column: 69, scope: !6087)
!6087 = !DILexicalBlockFile(scope: !1715, file: !13, discriminator: 2)
!6088 = !DILocation(line: 1083, column: 130, scope: !6089)
!6089 = !DILexicalBlockFile(scope: !6081, file: !13, discriminator: 3)
!6090 = !DILocation(line: 1083, column: 148, scope: !6081)
!6091 = !DILocation(line: 1083, column: 158, scope: !6081)
!6092 = !DILocation(line: 1083, column: 183, scope: !6081)
!6093 = !DILocation(line: 1083, column: 114, scope: !6081)
!6094 = !DILocation(line: 1083, column: 202, scope: !6095)
!6095 = !DILexicalBlockFile(scope: !1716, file: !13, discriminator: 4)
!6096 = !DILocation(line: 1083, column: 202, scope: !1715)
!6097 = !DILocation(line: 1083, column: 202, scope: !6098)
!6098 = !DILexicalBlockFile(scope: !1715, file: !13, discriminator: 5)
!6099 = !DILocation(line: 1084, column: 5, scope: !1718)
!6100 = !DILocation(line: 1086, column: 40, scope: !1552)
!6101 = !DILocation(line: 1086, column: 11, scope: !1552)
!6102 = !DILocation(line: 1086, column: 9, scope: !1552)
!6103 = !DILocation(line: 1087, column: 9, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1087, column: 9)
!6105 = !DILocation(line: 1087, column: 13, scope: !6104)
!6106 = !DILocation(line: 1087, column: 9, scope: !1552)
!6107 = !DILocation(line: 1088, column: 9, scope: !6104)
!6108 = !DILocation(line: 1089, column: 25, scope: !1552)
!6109 = !DILocation(line: 1089, column: 9, scope: !1552)
!6110 = !DILocation(line: 1089, column: 7, scope: !1552)
!6111 = !DILocation(line: 1090, column: 5, scope: !1552)
!6112 = !DILocation(line: 1090, column: 10, scope: !6113)
!6113 = !DILexicalBlockFile(scope: !1721, file: !13, discriminator: 1)
!6114 = !DILocation(line: 1090, column: 20, scope: !1721)
!6115 = !DILocation(line: 1090, column: 50, scope: !1721)
!6116 = !DILocation(line: 1090, column: 64, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !1721, file: !13, line: 1090, column: 61)
!6118 = !DILocation(line: 1090, column: 81, scope: !6117)
!6119 = !DILocation(line: 1090, column: 61, scope: !6117)
!6120 = !DILocation(line: 1090, column: 91, scope: !6117)
!6121 = !DILocation(line: 1090, column: 61, scope: !1721)
!6122 = !DILocation(line: 1090, column: 61, scope: !6123)
!6123 = !DILexicalBlockFile(scope: !1721, file: !13, discriminator: 2)
!6124 = !DILocation(line: 1090, column: 122, scope: !6125)
!6125 = !DILexicalBlockFile(scope: !6117, file: !13, discriminator: 3)
!6126 = !DILocation(line: 1090, column: 140, scope: !6117)
!6127 = !DILocation(line: 1090, column: 150, scope: !6117)
!6128 = !DILocation(line: 1090, column: 175, scope: !6117)
!6129 = !DILocation(line: 1090, column: 106, scope: !6117)
!6130 = !DILocation(line: 1090, column: 194, scope: !5773)
!6131 = !DILocation(line: 1090, column: 194, scope: !1721)
!6132 = !DILocation(line: 1090, column: 194, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !1721, file: !13, discriminator: 5)
!6134 = !DILocation(line: 1091, column: 9, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1091, column: 9)
!6136 = !DILocation(line: 1091, column: 11, scope: !6135)
!6137 = !DILocation(line: 1091, column: 9, scope: !1552)
!6138 = !DILocation(line: 1092, column: 9, scope: !6135)
!6139 = !DILocation(line: 1093, column: 38, scope: !1552)
!6140 = !DILocation(line: 1093, column: 22, scope: !1552)
!6141 = !DILocation(line: 1093, column: 28, scope: !1552)
!6142 = !DILocation(line: 1093, column: 36, scope: !1552)
!6143 = !DILocation(line: 1093, column: 5, scope: !1552)
!6144 = !DILocation(line: 1093, column: 11, scope: !1552)
!6145 = !DILocation(line: 1093, column: 20, scope: !1552)
!6146 = !DILocation(line: 1095, column: 43, scope: !1552)
!6147 = !DILocation(line: 1095, column: 23, scope: !1552)
!6148 = !DILocation(line: 1095, column: 5, scope: !1552)
!6149 = !DILocation(line: 1095, column: 11, scope: !1552)
!6150 = !DILocation(line: 1095, column: 21, scope: !1552)
!6151 = !{!3766, !1878, i64 94}
!6152 = !DILocation(line: 1097, column: 5, scope: !1552)
!6153 = !DILocation(line: 1097, column: 11, scope: !1552)
!6154 = !DILocation(line: 1097, column: 36, scope: !1552)
!6155 = !{!3766, !1878, i64 112}
!6156 = !DILocation(line: 1098, column: 9, scope: !1724)
!6157 = !DILocation(line: 1098, column: 15, scope: !1724)
!6158 = !DILocation(line: 1098, column: 24, scope: !1724)
!6159 = !DILocation(line: 1098, column: 27, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !1724, file: !13, discriminator: 1)
!6161 = !DILocation(line: 1098, column: 33, scope: !1724)
!6162 = !DILocation(line: 1098, column: 27, scope: !1724)
!6163 = !DILocation(line: 1098, column: 9, scope: !1552)
!6164 = !DILocation(line: 1099, column: 9, scope: !1723)
!6165 = !DILocation(line: 1099, column: 19, scope: !1723)
!6166 = !DILocation(line: 1100, column: 9, scope: !1723)
!6167 = !DILocation(line: 1100, column: 13, scope: !1723)
!6168 = !DILocation(line: 1102, column: 9, scope: !1723)
!6169 = !DILocation(line: 1102, column: 15, scope: !1723)
!6170 = !DILocation(line: 1102, column: 40, scope: !1723)
!6171 = !DILocation(line: 1104, column: 48, scope: !1723)
!6172 = !DILocation(line: 1104, column: 56, scope: !1723)
!6173 = !DILocation(line: 1104, column: 21, scope: !1723)
!6174 = !DILocation(line: 1104, column: 19, scope: !1723)
!6175 = !DILocation(line: 1105, column: 13, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1105, column: 13)
!6177 = !DILocation(line: 1105, column: 23, scope: !6176)
!6178 = !DILocation(line: 1105, column: 13, scope: !1723)
!6179 = !DILocation(line: 1106, column: 13, scope: !6176)
!6180 = !DILocation(line: 1108, column: 40, scope: !1723)
!6181 = !DILocation(line: 1108, column: 51, scope: !1723)
!6182 = !DILocation(line: 1108, column: 15, scope: !1723)
!6183 = !DILocation(line: 1108, column: 13, scope: !1723)
!6184 = !DILocation(line: 1109, column: 9, scope: !1723)
!6185 = !DILocation(line: 1109, column: 14, scope: !6186)
!6186 = !DILexicalBlockFile(scope: !1727, file: !13, discriminator: 1)
!6187 = !DILocation(line: 1109, column: 24, scope: !1727)
!6188 = !DILocation(line: 1109, column: 54, scope: !1727)
!6189 = !DILocation(line: 1109, column: 74, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !1727, file: !13, line: 1109, column: 71)
!6191 = !DILocation(line: 1109, column: 91, scope: !6190)
!6192 = !DILocation(line: 1109, column: 71, scope: !6190)
!6193 = !DILocation(line: 1109, column: 101, scope: !6190)
!6194 = !DILocation(line: 1109, column: 71, scope: !1727)
!6195 = !DILocation(line: 1109, column: 71, scope: !6196)
!6196 = !DILexicalBlockFile(scope: !1727, file: !13, discriminator: 2)
!6197 = !DILocation(line: 1109, column: 132, scope: !6198)
!6198 = !DILexicalBlockFile(scope: !6190, file: !13, discriminator: 3)
!6199 = !DILocation(line: 1109, column: 150, scope: !6190)
!6200 = !DILocation(line: 1109, column: 160, scope: !6190)
!6201 = !DILocation(line: 1109, column: 185, scope: !6190)
!6202 = !DILocation(line: 1109, column: 116, scope: !6190)
!6203 = !DILocation(line: 1109, column: 204, scope: !6204)
!6204 = !DILexicalBlockFile(scope: !1723, file: !13, discriminator: 4)
!6205 = !DILocation(line: 1109, column: 204, scope: !1727)
!6206 = !DILocation(line: 1109, column: 204, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !1727, file: !13, discriminator: 5)
!6208 = !DILocation(line: 1110, column: 13, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1110, column: 13)
!6210 = !DILocation(line: 1110, column: 17, scope: !6209)
!6211 = !DILocation(line: 1110, column: 13, scope: !1723)
!6212 = !DILocation(line: 1111, column: 13, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !13, line: 1110, column: 22)
!6214 = !DILocation(line: 1114, column: 13, scope: !1731)
!6215 = !DILocation(line: 1114, column: 17, scope: !1731)
!6216 = !DILocation(line: 1114, column: 13, scope: !1723)
!6217 = !DILocation(line: 1115, column: 13, scope: !1730)
!6218 = !DILocation(line: 1115, column: 19, scope: !1730)
!6219 = !DILocation(line: 1115, column: 44, scope: !1730)
!6220 = !DILocation(line: 1116, column: 46, scope: !1730)
!6221 = !DILocation(line: 1116, column: 52, scope: !1730)
!6222 = !DILocation(line: 1116, column: 61, scope: !1730)
!6223 = !DILocation(line: 1117, column: 46, scope: !1730)
!6224 = !DILocation(line: 1116, column: 19, scope: !1730)
!6225 = !DILocation(line: 1116, column: 17, scope: !1730)
!6226 = !DILocation(line: 1118, column: 17, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !1730, file: !13, line: 1118, column: 17)
!6228 = !DILocation(line: 1118, column: 21, scope: !6227)
!6229 = !DILocation(line: 1118, column: 17, scope: !1730)
!6230 = !DILocation(line: 1119, column: 17, scope: !6227)
!6231 = !DILocation(line: 1120, column: 13, scope: !1730)
!6232 = !DILocation(line: 1120, column: 18, scope: !6233)
!6233 = !DILexicalBlockFile(scope: !1729, file: !13, discriminator: 1)
!6234 = !DILocation(line: 1120, column: 28, scope: !1729)
!6235 = !DILocation(line: 1120, column: 58, scope: !1729)
!6236 = !DILocation(line: 1120, column: 72, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !1729, file: !13, line: 1120, column: 69)
!6238 = !DILocation(line: 1120, column: 89, scope: !6237)
!6239 = !DILocation(line: 1120, column: 69, scope: !6237)
!6240 = !DILocation(line: 1120, column: 99, scope: !6237)
!6241 = !DILocation(line: 1120, column: 69, scope: !1729)
!6242 = !DILocation(line: 1120, column: 69, scope: !6243)
!6243 = !DILexicalBlockFile(scope: !1729, file: !13, discriminator: 2)
!6244 = !DILocation(line: 1120, column: 130, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6237, file: !13, discriminator: 3)
!6246 = !DILocation(line: 1120, column: 148, scope: !6237)
!6247 = !DILocation(line: 1120, column: 158, scope: !6237)
!6248 = !DILocation(line: 1120, column: 183, scope: !6237)
!6249 = !DILocation(line: 1120, column: 114, scope: !6237)
!6250 = !DILocation(line: 1120, column: 202, scope: !6251)
!6251 = !DILexicalBlockFile(scope: !1730, file: !13, discriminator: 4)
!6252 = !DILocation(line: 1120, column: 202, scope: !1729)
!6253 = !DILocation(line: 1120, column: 202, scope: !6254)
!6254 = !DILexicalBlockFile(scope: !1729, file: !13, discriminator: 5)
!6255 = !DILocation(line: 1121, column: 9, scope: !1730)
!6256 = !DILocation(line: 1122, column: 5, scope: !1724)
!6257 = !DILocation(line: 1122, column: 5, scope: !6160)
!6258 = !DILocation(line: 1122, column: 5, scope: !1723)
!6259 = !DILocation(line: 1124, column: 5, scope: !1552)
!6260 = !DILocation(line: 1124, column: 11, scope: !1552)
!6261 = !DILocation(line: 1124, column: 14, scope: !1552)
!6262 = !DILocation(line: 1125, column: 5, scope: !1552)
!6263 = !DILocation(line: 1128, column: 5, scope: !1552)
!6264 = !DILocation(line: 1128, column: 10, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !1733, file: !13, discriminator: 1)
!6266 = !DILocation(line: 1128, column: 20, scope: !1733)
!6267 = !DILocation(line: 1128, column: 51, scope: !1733)
!6268 = !DILocation(line: 1128, column: 68, scope: !1736)
!6269 = !DILocation(line: 1128, column: 84, scope: !1736)
!6270 = !DILocation(line: 1128, column: 68, scope: !1733)
!6271 = !DILocation(line: 1128, column: 99, scope: !6272)
!6272 = !DILexicalBlockFile(scope: !1736, file: !13, discriminator: 2)
!6273 = !DILocation(line: 1128, column: 104, scope: !6274)
!6274 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 4)
!6275 = !DILocation(line: 1128, column: 114, scope: !1735)
!6276 = !DILocation(line: 1128, column: 144, scope: !1735)
!6277 = !DILocation(line: 1128, column: 170, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !1735, file: !13, line: 1128, column: 167)
!6279 = !DILocation(line: 1128, column: 187, scope: !6278)
!6280 = !DILocation(line: 1128, column: 167, scope: !6278)
!6281 = !DILocation(line: 1128, column: 197, scope: !6278)
!6282 = !DILocation(line: 1128, column: 167, scope: !1735)
!6283 = !DILocation(line: 1128, column: 167, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 5)
!6285 = !DILocation(line: 1128, column: 228, scope: !6286)
!6286 = !DILexicalBlockFile(scope: !6278, file: !13, discriminator: 6)
!6287 = !DILocation(line: 1128, column: 246, scope: !6278)
!6288 = !DILocation(line: 1128, column: 256, scope: !6278)
!6289 = !DILocation(line: 1128, column: 281, scope: !6278)
!6290 = !DILocation(line: 1128, column: 212, scope: !6278)
!6291 = !DILocation(line: 1128, column: 300, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !1736, file: !13, discriminator: 7)
!6293 = !DILocation(line: 1128, column: 300, scope: !1735)
!6294 = !DILocation(line: 1128, column: 300, scope: !6295)
!6295 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 8)
!6296 = !DILocation(line: 1128, column: 300, scope: !6297)
!6297 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 9)
!6298 = !DILocation(line: 1128, column: 313, scope: !4788)
!6299 = !DILocation(line: 1128, column: 313, scope: !1733)
!6300 = !DILocation(line: 1128, column: 313, scope: !6301)
!6301 = !DILexicalBlockFile(scope: !1733, file: !13, discriminator: 11)
!6302 = !DILocation(line: 1129, column: 5, scope: !1552)
!6303 = !DILocation(line: 1130, column: 1, scope: !1552)
!6304 = !DILocation(line: 62, column: 29, scope: !554)
!6305 = !DILocation(line: 64, column: 12, scope: !554)
!6306 = !DILocation(line: 64, column: 5, scope: !554)
!6307 = !DILocation(line: 75, column: 27, scope: !571)
!6308 = !DILocation(line: 75, column: 43, scope: !571)
!6309 = !DILocation(line: 77, column: 12, scope: !571)
!6310 = !DILocation(line: 77, column: 5, scope: !571)
!6311 = !DILocation(line: 87, column: 31, scope: !575)
!6312 = !DILocation(line: 87, column: 47, scope: !575)
!6313 = !DILocation(line: 89, column: 12, scope: !575)
!6314 = !DILocation(line: 89, column: 5, scope: !575)
!6315 = !DILocation(line: 99, column: 28, scope: !579)
!6316 = !DILocation(line: 99, column: 44, scope: !579)
!6317 = !DILocation(line: 101, column: 12, scope: !579)
!6318 = !DILocation(line: 101, column: 5, scope: !579)
!6319 = !DILocation(line: 46, column: 26, scope: !557)
!6320 = !DILocation(line: 48, column: 5, scope: !557)
!6321 = !DILocation(line: 48, column: 18, scope: !557)
!6322 = !DILocation(line: 48, column: 26, scope: !557)
!6323 = !DILocation(line: 49, column: 9, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !557, file: !13, line: 49, column: 9)
!6325 = !DILocation(line: 49, column: 15, scope: !6324)
!6326 = !DILocation(line: 49, column: 9, scope: !557)
!6327 = !DILocation(line: 50, column: 25, scope: !6324)
!6328 = !DILocation(line: 50, column: 32, scope: !6324)
!6329 = !DILocation(line: 50, column: 55, scope: !6324)
!6330 = !DILocation(line: 50, column: 9, scope: !6324)
!6331 = !DILocation(line: 52, column: 1, scope: !557)
!6332 = !DILocation(line: 51, column: 5, scope: !557)
!6333 = !DILocation(line: 111, column: 35, scope: !583)
!6334 = !DILocation(line: 111, column: 47, scope: !583)
!6335 = !DILocation(line: 113, column: 58, scope: !583)
!6336 = !DILocation(line: 113, column: 5, scope: !583)
!6337 = !DILocation(line: 125, column: 35, scope: !587)
!6338 = !DILocation(line: 125, column: 47, scope: !587)
!6339 = !DILocation(line: 127, column: 58, scope: !587)
!6340 = !DILocation(line: 127, column: 5, scope: !587)
!6341 = !DILocation(line: 137, column: 33, scope: !591)
!6342 = !DILocation(line: 137, column: 45, scope: !591)
!6343 = !DILocation(line: 139, column: 58, scope: !591)
!6344 = !DILocation(line: 139, column: 5, scope: !591)
!6345 = !DILocation(line: 499, column: 52, scope: !623)
!6346 = !DILocation(line: 500, column: 44, scope: !623)
!6347 = !DILocation(line: 500, column: 60, scope: !623)
!6348 = !DILocation(line: 502, column: 5, scope: !623)
!6349 = !DILocation(line: 502, column: 11, scope: !623)
!6350 = !DILocation(line: 503, column: 5, scope: !623)
!6351 = !DILocation(line: 503, column: 15, scope: !623)
!6352 = !DILocation(line: 504, column: 5, scope: !623)
!6353 = !DILocation(line: 504, column: 9, scope: !623)
!6354 = !DILocation(line: 506, column: 45, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !623, file: !13, line: 506, column: 9)
!6356 = !DILocation(line: 506, column: 51, scope: !6355)
!6357 = !DILocation(line: 507, column: 38, scope: !6355)
!6358 = !DILocation(line: 506, column: 10, scope: !6355)
!6359 = !DILocation(line: 506, column: 9, scope: !623)
!6360 = !DILocation(line: 508, column: 9, scope: !6355)
!6361 = !DILocation(line: 509, column: 61, scope: !623)
!6362 = !DILocation(line: 509, column: 48, scope: !623)
!6363 = !DILocation(line: 509, column: 67, scope: !623)
!6364 = !DILocation(line: 509, column: 74, scope: !623)
!6365 = !DILocation(line: 509, column: 12, scope: !623)
!6366 = !DILocation(line: 509, column: 5, scope: !623)
!6367 = !DILocation(line: 510, column: 1, scope: !623)
!6368 = !DILocation(line: 513, column: 54, scope: !636)
!6369 = !DILocation(line: 513, column: 70, scope: !636)
!6370 = !DILocation(line: 515, column: 5, scope: !636)
!6371 = !DILocation(line: 515, column: 15, scope: !636)
!6372 = !DILocation(line: 516, column: 5, scope: !636)
!6373 = !DILocation(line: 516, column: 24, scope: !636)
!6374 = !DILocation(line: 518, column: 9, scope: !647)
!6375 = !DILocation(line: 518, column: 15, scope: !647)
!6376 = !DILocation(line: 518, column: 23, scope: !647)
!6377 = !DILocation(line: 518, column: 9, scope: !636)
!6378 = !DILocation(line: 519, column: 9, scope: !646)
!6379 = !DILocation(line: 519, column: 19, scope: !646)
!6380 = !DILocation(line: 519, column: 54, scope: !646)
!6381 = !DILocation(line: 519, column: 60, scope: !646)
!6382 = !DILocation(line: 520, column: 12, scope: !646)
!6383 = !DILocation(line: 519, column: 27, scope: !646)
!6384 = !DILocation(line: 521, column: 13, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !646, file: !13, line: 521, column: 13)
!6386 = !DILocation(line: 521, column: 19, scope: !6385)
!6387 = !DILocation(line: 521, column: 13, scope: !646)
!6388 = !DILocation(line: 522, column: 13, scope: !6385)
!6389 = !DILocation(line: 523, column: 33, scope: !651)
!6390 = !DILocation(line: 523, column: 14, scope: !651)
!6391 = !DILocation(line: 523, column: 13, scope: !646)
!6392 = !DILocation(line: 524, column: 13, scope: !650)
!6393 = !DILocation(line: 524, column: 18, scope: !6394)
!6394 = !DILexicalBlockFile(scope: !649, file: !13, discriminator: 1)
!6395 = !DILocation(line: 524, column: 28, scope: !649)
!6396 = !DILocation(line: 524, column: 58, scope: !649)
!6397 = !DILocation(line: 524, column: 74, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !649, file: !13, line: 524, column: 71)
!6399 = !DILocation(line: 524, column: 91, scope: !6398)
!6400 = !DILocation(line: 524, column: 71, scope: !6398)
!6401 = !DILocation(line: 524, column: 101, scope: !6398)
!6402 = !DILocation(line: 524, column: 71, scope: !649)
!6403 = !DILocation(line: 524, column: 71, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !649, file: !13, discriminator: 2)
!6405 = !DILocation(line: 524, column: 132, scope: !6406)
!6406 = !DILexicalBlockFile(scope: !6398, file: !13, discriminator: 3)
!6407 = !DILocation(line: 524, column: 150, scope: !6398)
!6408 = !DILocation(line: 524, column: 160, scope: !6398)
!6409 = !DILocation(line: 524, column: 185, scope: !6398)
!6410 = !DILocation(line: 524, column: 116, scope: !6398)
!6411 = !DILocation(line: 524, column: 204, scope: !6412)
!6412 = !DILexicalBlockFile(scope: !650, file: !13, discriminator: 4)
!6413 = !DILocation(line: 524, column: 204, scope: !649)
!6414 = !DILocation(line: 524, column: 204, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !649, file: !13, discriminator: 5)
!6416 = !DILocation(line: 525, column: 13, scope: !650)
!6417 = !DILocation(line: 527, column: 25, scope: !646)
!6418 = !DILocation(line: 527, column: 35, scope: !646)
!6419 = !DILocation(line: 527, column: 44, scope: !646)
!6420 = !DILocation(line: 528, column: 9, scope: !646)
!6421 = !DILocation(line: 528, column: 14, scope: !6422)
!6422 = !DILexicalBlockFile(scope: !653, file: !13, discriminator: 1)
!6423 = !DILocation(line: 528, column: 24, scope: !653)
!6424 = !DILocation(line: 528, column: 54, scope: !653)
!6425 = !DILocation(line: 528, column: 70, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !653, file: !13, line: 528, column: 67)
!6427 = !DILocation(line: 528, column: 87, scope: !6426)
!6428 = !DILocation(line: 528, column: 67, scope: !6426)
!6429 = !DILocation(line: 528, column: 97, scope: !6426)
!6430 = !DILocation(line: 528, column: 67, scope: !653)
!6431 = !DILocation(line: 528, column: 67, scope: !6432)
!6432 = !DILexicalBlockFile(scope: !653, file: !13, discriminator: 2)
!6433 = !DILocation(line: 528, column: 128, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !6426, file: !13, discriminator: 3)
!6435 = !DILocation(line: 528, column: 146, scope: !6426)
!6436 = !DILocation(line: 528, column: 156, scope: !6426)
!6437 = !DILocation(line: 528, column: 181, scope: !6426)
!6438 = !DILocation(line: 528, column: 112, scope: !6426)
!6439 = !DILocation(line: 528, column: 200, scope: !6440)
!6440 = !DILexicalBlockFile(scope: !646, file: !13, discriminator: 4)
!6441 = !DILocation(line: 528, column: 200, scope: !653)
!6442 = !DILocation(line: 528, column: 200, scope: !6443)
!6443 = !DILexicalBlockFile(scope: !653, file: !13, discriminator: 5)
!6444 = !DILocation(line: 529, column: 5, scope: !647)
!6445 = !DILocation(line: 529, column: 5, scope: !6446)
!6446 = !DILexicalBlockFile(scope: !647, file: !13, discriminator: 1)
!6447 = !DILocation(line: 529, column: 5, scope: !646)
!6448 = !DILocation(line: 531, column: 18, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !647, file: !13, line: 530, column: 10)
!6450 = !DILocation(line: 531, column: 16, scope: !6449)
!6451 = !DILocation(line: 532, column: 14, scope: !6449)
!6452 = !{!6453, !6453, i64 0}
!6453 = !{!"long long", !1878, i64 0}
!6454 = !DILocation(line: 534, column: 10, scope: !636)
!6455 = !DILocation(line: 535, column: 9, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !636, file: !13, line: 535, column: 9)
!6457 = !DILocation(line: 535, column: 15, scope: !6456)
!6458 = !DILocation(line: 535, column: 9, scope: !636)
!6459 = !DILocation(line: 536, column: 14, scope: !6456)
!6460 = !DILocation(line: 536, column: 9, scope: !6456)
!6461 = !DILocation(line: 537, column: 39, scope: !636)
!6462 = !DILocation(line: 537, column: 47, scope: !636)
!6463 = !DILocation(line: 537, column: 12, scope: !636)
!6464 = !DILocation(line: 537, column: 5, scope: !636)
!6465 = !DILocation(line: 538, column: 1, scope: !636)
!6466 = !DILocation(line: 541, column: 54, scope: !654)
!6467 = !DILocation(line: 541, column: 70, scope: !654)
!6468 = !DILocation(line: 543, column: 5, scope: !654)
!6469 = !DILocation(line: 543, column: 15, scope: !654)
!6470 = !DILocation(line: 544, column: 5, scope: !654)
!6471 = !DILocation(line: 544, column: 24, scope: !654)
!6472 = !DILocation(line: 546, column: 29, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !654, file: !13, line: 546, column: 9)
!6474 = !DILocation(line: 546, column: 10, scope: !6473)
!6475 = !DILocation(line: 546, column: 9, scope: !654)
!6476 = !DILocation(line: 547, column: 9, scope: !6473)
!6477 = !DILocation(line: 549, column: 29, scope: !654)
!6478 = !DILocation(line: 549, column: 23, scope: !654)
!6479 = !DILocation(line: 549, column: 34, scope: !654)
!6480 = !DILocation(line: 549, column: 5, scope: !654)
!6481 = !DILocation(line: 549, column: 11, scope: !654)
!6482 = !DILocation(line: 549, column: 21, scope: !654)
!6483 = !DILocation(line: 550, column: 10, scope: !654)
!6484 = !DILocation(line: 552, column: 9, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !654, file: !13, line: 552, column: 9)
!6486 = !DILocation(line: 552, column: 15, scope: !6485)
!6487 = !DILocation(line: 552, column: 23, scope: !6485)
!6488 = !DILocation(line: 552, column: 9, scope: !654)
!6489 = !DILocation(line: 553, column: 45, scope: !6485)
!6490 = !DILocation(line: 553, column: 51, scope: !6485)
!6491 = !DILocation(line: 554, column: 65, scope: !6485)
!6492 = !DILocation(line: 554, column: 73, scope: !6485)
!6493 = !DILocation(line: 553, column: 16, scope: !6485)
!6494 = !DILocation(line: 553, column: 9, scope: !6485)
!6495 = !DILocation(line: 556, column: 62, scope: !6485)
!6496 = !DILocation(line: 556, column: 9, scope: !6485)
!6497 = !DILocation(line: 557, column: 1, scope: !654)
!6498 = !DILocation(line: 560, column: 51, scope: !660)
!6499 = !DILocation(line: 560, column: 67, scope: !660)
!6500 = !DILocation(line: 562, column: 5, scope: !660)
!6501 = !DILocation(line: 562, column: 11, scope: !660)
!6502 = !DILocation(line: 562, column: 18, scope: !660)
!6503 = !DILocation(line: 563, column: 5, scope: !660)
!6504 = !DILocation(line: 563, column: 11, scope: !660)
!6505 = !DILocation(line: 563, column: 21, scope: !660)
!6506 = !DILocation(line: 564, column: 9, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !660, file: !13, line: 564, column: 9)
!6508 = !DILocation(line: 564, column: 15, scope: !6507)
!6509 = !DILocation(line: 564, column: 23, scope: !6507)
!6510 = !DILocation(line: 564, column: 9, scope: !660)
!6511 = !DILocation(line: 565, column: 43, scope: !6507)
!6512 = !DILocation(line: 565, column: 49, scope: !6507)
!6513 = !DILocation(line: 565, column: 58, scope: !6507)
!6514 = !DILocation(line: 565, column: 16, scope: !6507)
!6515 = !DILocation(line: 565, column: 9, scope: !6507)
!6516 = !DILocation(line: 567, column: 62, scope: !6507)
!6517 = !DILocation(line: 567, column: 9, scope: !6507)
!6518 = !DILocation(line: 568, column: 1, scope: !660)
!6519 = !DILocation(line: 571, column: 58, scope: !664)
!6520 = !DILocation(line: 571, column: 70, scope: !664)
!6521 = !DILocation(line: 573, column: 13, scope: !664)
!6522 = !DILocation(line: 573, column: 19, scope: !664)
!6523 = !DILocation(line: 573, column: 5, scope: !664)
!6524 = !DILocation(line: 575, column: 16, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !664, file: !13, line: 573, column: 27)
!6526 = !DILocation(line: 575, column: 9, scope: !6525)
!6527 = !DILocation(line: 577, column: 16, scope: !6525)
!6528 = !DILocation(line: 577, column: 9, scope: !6525)
!6529 = !DILocation(line: 579, column: 16, scope: !6525)
!6530 = !DILocation(line: 579, column: 9, scope: !6525)
!6531 = !DILocation(line: 581, column: 16, scope: !6525)
!6532 = !DILocation(line: 581, column: 9, scope: !6525)
!6533 = !DILocation(line: 583, column: 16, scope: !6525)
!6534 = !DILocation(line: 583, column: 9, scope: !6525)
!6535 = !DILocation(line: 585, column: 16, scope: !6525)
!6536 = !DILocation(line: 585, column: 9, scope: !6525)
!6537 = !DILocation(line: 587, column: 16, scope: !6525)
!6538 = !DILocation(line: 587, column: 9, scope: !6525)
!6539 = !DILocation(line: 589, column: 62, scope: !6525)
!6540 = !DILocation(line: 589, column: 9, scope: !6525)
!6541 = !DILocation(line: 592, column: 1, scope: !664)
!6542 = !DILocation(line: 1133, column: 30, scope: !741)
!6543 = !DILocation(line: 1135, column: 5, scope: !741)
!6544 = !DILocation(line: 1135, column: 11, scope: !741)
!6545 = !DILocation(line: 1135, column: 14, scope: !741)
!6546 = !DILocation(line: 1136, column: 5, scope: !741)
!6547 = !DILocation(line: 1136, column: 10, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !747, file: !13, discriminator: 1)
!6549 = !DILocation(line: 1136, column: 20, scope: !747)
!6550 = !DILocation(line: 1136, column: 43, scope: !747)
!6551 = !DILocation(line: 1136, column: 49, scope: !747)
!6552 = !DILocation(line: 1136, column: 62, scope: !751)
!6553 = !DILocation(line: 1136, column: 70, scope: !751)
!6554 = !DILocation(line: 1136, column: 62, scope: !747)
!6555 = !DILocation(line: 1136, column: 88, scope: !6556)
!6556 = !DILexicalBlockFile(scope: !750, file: !13, discriminator: 2)
!6557 = !DILocation(line: 1136, column: 94, scope: !750)
!6558 = !DILocation(line: 1136, column: 102, scope: !750)
!6559 = !DILocation(line: 1136, column: 116, scope: !750)
!6560 = !DILocation(line: 1136, column: 121, scope: !6561)
!6561 = !DILexicalBlockFile(scope: !749, file: !13, discriminator: 4)
!6562 = !DILocation(line: 1136, column: 131, scope: !749)
!6563 = !DILocation(line: 1136, column: 161, scope: !749)
!6564 = !DILocation(line: 1136, column: 179, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !749, file: !13, line: 1136, column: 176)
!6566 = !DILocation(line: 1136, column: 196, scope: !6565)
!6567 = !DILocation(line: 1136, column: 176, scope: !6565)
!6568 = !DILocation(line: 1136, column: 206, scope: !6565)
!6569 = !DILocation(line: 1136, column: 176, scope: !749)
!6570 = !DILocation(line: 1136, column: 176, scope: !6571)
!6571 = !DILexicalBlockFile(scope: !749, file: !13, discriminator: 5)
!6572 = !DILocation(line: 1136, column: 237, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !6565, file: !13, discriminator: 6)
!6574 = !DILocation(line: 1136, column: 255, scope: !6565)
!6575 = !DILocation(line: 1136, column: 265, scope: !6565)
!6576 = !DILocation(line: 1136, column: 290, scope: !6565)
!6577 = !DILocation(line: 1136, column: 221, scope: !6565)
!6578 = !DILocation(line: 1136, column: 309, scope: !6579)
!6579 = !DILexicalBlockFile(scope: !750, file: !13, discriminator: 7)
!6580 = !DILocation(line: 1136, column: 309, scope: !749)
!6581 = !DILocation(line: 1136, column: 309, scope: !6582)
!6582 = !DILexicalBlockFile(scope: !749, file: !13, discriminator: 8)
!6583 = !DILocation(line: 1136, column: 322, scope: !6584)
!6584 = !DILexicalBlockFile(scope: !750, file: !13, discriminator: 9)
!6585 = !DILocation(line: 1136, column: 324, scope: !6586)
!6586 = !DILexicalBlockFile(scope: !6587, file: !13, discriminator: 10)
!6587 = !DILexicalBlockFile(scope: !741, file: !13, discriminator: 3)
!6588 = !DILocation(line: 1136, column: 324, scope: !747)
!6589 = !DILocation(line: 1137, column: 5, scope: !741)
!6590 = !DILocation(line: 1137, column: 10, scope: !6591)
!6591 = !DILexicalBlockFile(scope: !753, file: !13, discriminator: 1)
!6592 = !DILocation(line: 1137, column: 20, scope: !753)
!6593 = !DILocation(line: 1137, column: 43, scope: !753)
!6594 = !DILocation(line: 1137, column: 49, scope: !753)
!6595 = !DILocation(line: 1137, column: 64, scope: !757)
!6596 = !DILocation(line: 1137, column: 72, scope: !757)
!6597 = !DILocation(line: 1137, column: 64, scope: !753)
!6598 = !DILocation(line: 1137, column: 90, scope: !6599)
!6599 = !DILexicalBlockFile(scope: !756, file: !13, discriminator: 2)
!6600 = !DILocation(line: 1137, column: 96, scope: !756)
!6601 = !DILocation(line: 1137, column: 106, scope: !756)
!6602 = !DILocation(line: 1137, column: 120, scope: !756)
!6603 = !DILocation(line: 1137, column: 125, scope: !6604)
!6604 = !DILexicalBlockFile(scope: !755, file: !13, discriminator: 4)
!6605 = !DILocation(line: 1137, column: 135, scope: !755)
!6606 = !DILocation(line: 1137, column: 165, scope: !755)
!6607 = !DILocation(line: 1137, column: 183, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !755, file: !13, line: 1137, column: 180)
!6609 = !DILocation(line: 1137, column: 200, scope: !6608)
!6610 = !DILocation(line: 1137, column: 180, scope: !6608)
!6611 = !DILocation(line: 1137, column: 210, scope: !6608)
!6612 = !DILocation(line: 1137, column: 180, scope: !755)
!6613 = !DILocation(line: 1137, column: 180, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !755, file: !13, discriminator: 5)
!6615 = !DILocation(line: 1137, column: 241, scope: !6616)
!6616 = !DILexicalBlockFile(scope: !6608, file: !13, discriminator: 6)
!6617 = !DILocation(line: 1137, column: 259, scope: !6608)
!6618 = !DILocation(line: 1137, column: 269, scope: !6608)
!6619 = !DILocation(line: 1137, column: 294, scope: !6608)
!6620 = !DILocation(line: 1137, column: 225, scope: !6608)
!6621 = !DILocation(line: 1137, column: 313, scope: !6622)
!6622 = !DILexicalBlockFile(scope: !756, file: !13, discriminator: 7)
!6623 = !DILocation(line: 1137, column: 313, scope: !755)
!6624 = !DILocation(line: 1137, column: 313, scope: !6625)
!6625 = !DILexicalBlockFile(scope: !755, file: !13, discriminator: 8)
!6626 = !DILocation(line: 1137, column: 326, scope: !6627)
!6627 = !DILexicalBlockFile(scope: !756, file: !13, discriminator: 9)
!6628 = !DILocation(line: 1137, column: 328, scope: !6586)
!6629 = !DILocation(line: 1137, column: 328, scope: !753)
!6630 = !DILocation(line: 1138, column: 5, scope: !741)
!6631 = !DILocation(line: 1138, column: 10, scope: !6632)
!6632 = !DILexicalBlockFile(scope: !759, file: !13, discriminator: 1)
!6633 = !DILocation(line: 1138, column: 20, scope: !759)
!6634 = !DILocation(line: 1138, column: 43, scope: !759)
!6635 = !DILocation(line: 1138, column: 49, scope: !759)
!6636 = !DILocation(line: 1138, column: 63, scope: !763)
!6637 = !DILocation(line: 1138, column: 71, scope: !763)
!6638 = !DILocation(line: 1138, column: 63, scope: !759)
!6639 = !DILocation(line: 1138, column: 89, scope: !6640)
!6640 = !DILexicalBlockFile(scope: !762, file: !13, discriminator: 2)
!6641 = !DILocation(line: 1138, column: 95, scope: !762)
!6642 = !DILocation(line: 1138, column: 104, scope: !762)
!6643 = !DILocation(line: 1138, column: 118, scope: !762)
!6644 = !DILocation(line: 1138, column: 123, scope: !6645)
!6645 = !DILexicalBlockFile(scope: !761, file: !13, discriminator: 4)
!6646 = !DILocation(line: 1138, column: 133, scope: !761)
!6647 = !DILocation(line: 1138, column: 163, scope: !761)
!6648 = !DILocation(line: 1138, column: 181, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !761, file: !13, line: 1138, column: 178)
!6650 = !DILocation(line: 1138, column: 198, scope: !6649)
!6651 = !DILocation(line: 1138, column: 178, scope: !6649)
!6652 = !DILocation(line: 1138, column: 208, scope: !6649)
!6653 = !DILocation(line: 1138, column: 178, scope: !761)
!6654 = !DILocation(line: 1138, column: 178, scope: !6655)
!6655 = !DILexicalBlockFile(scope: !761, file: !13, discriminator: 5)
!6656 = !DILocation(line: 1138, column: 239, scope: !6657)
!6657 = !DILexicalBlockFile(scope: !6649, file: !13, discriminator: 6)
!6658 = !DILocation(line: 1138, column: 257, scope: !6649)
!6659 = !DILocation(line: 1138, column: 267, scope: !6649)
!6660 = !DILocation(line: 1138, column: 292, scope: !6649)
!6661 = !DILocation(line: 1138, column: 223, scope: !6649)
!6662 = !DILocation(line: 1138, column: 311, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !762, file: !13, discriminator: 7)
!6664 = !DILocation(line: 1138, column: 311, scope: !761)
!6665 = !DILocation(line: 1138, column: 311, scope: !6666)
!6666 = !DILexicalBlockFile(scope: !761, file: !13, discriminator: 8)
!6667 = !DILocation(line: 1138, column: 324, scope: !6668)
!6668 = !DILexicalBlockFile(scope: !762, file: !13, discriminator: 9)
!6669 = !DILocation(line: 1138, column: 326, scope: !6586)
!6670 = !DILocation(line: 1138, column: 326, scope: !759)
!6671 = !DILocation(line: 1139, column: 5, scope: !741)
!6672 = !DILocation(line: 1139, column: 10, scope: !6673)
!6673 = !DILexicalBlockFile(scope: !765, file: !13, discriminator: 1)
!6674 = !DILocation(line: 1139, column: 20, scope: !765)
!6675 = !DILocation(line: 1139, column: 43, scope: !765)
!6676 = !DILocation(line: 1139, column: 49, scope: !765)
!6677 = !DILocation(line: 1139, column: 63, scope: !769)
!6678 = !DILocation(line: 1139, column: 71, scope: !769)
!6679 = !DILocation(line: 1139, column: 63, scope: !765)
!6680 = !DILocation(line: 1139, column: 89, scope: !6681)
!6681 = !DILexicalBlockFile(scope: !768, file: !13, discriminator: 2)
!6682 = !DILocation(line: 1139, column: 95, scope: !768)
!6683 = !DILocation(line: 1139, column: 104, scope: !768)
!6684 = !DILocation(line: 1139, column: 118, scope: !768)
!6685 = !DILocation(line: 1139, column: 123, scope: !6686)
!6686 = !DILexicalBlockFile(scope: !767, file: !13, discriminator: 4)
!6687 = !DILocation(line: 1139, column: 133, scope: !767)
!6688 = !DILocation(line: 1139, column: 163, scope: !767)
!6689 = !DILocation(line: 1139, column: 181, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !767, file: !13, line: 1139, column: 178)
!6691 = !DILocation(line: 1139, column: 198, scope: !6690)
!6692 = !DILocation(line: 1139, column: 178, scope: !6690)
!6693 = !DILocation(line: 1139, column: 208, scope: !6690)
!6694 = !DILocation(line: 1139, column: 178, scope: !767)
!6695 = !DILocation(line: 1139, column: 178, scope: !6696)
!6696 = !DILexicalBlockFile(scope: !767, file: !13, discriminator: 5)
!6697 = !DILocation(line: 1139, column: 239, scope: !6698)
!6698 = !DILexicalBlockFile(scope: !6690, file: !13, discriminator: 6)
!6699 = !DILocation(line: 1139, column: 257, scope: !6690)
!6700 = !DILocation(line: 1139, column: 267, scope: !6690)
!6701 = !DILocation(line: 1139, column: 292, scope: !6690)
!6702 = !DILocation(line: 1139, column: 223, scope: !6690)
!6703 = !DILocation(line: 1139, column: 311, scope: !6704)
!6704 = !DILexicalBlockFile(scope: !768, file: !13, discriminator: 7)
!6705 = !DILocation(line: 1139, column: 311, scope: !767)
!6706 = !DILocation(line: 1139, column: 311, scope: !6707)
!6707 = !DILexicalBlockFile(scope: !767, file: !13, discriminator: 8)
!6708 = !DILocation(line: 1139, column: 324, scope: !6709)
!6709 = !DILexicalBlockFile(scope: !768, file: !13, discriminator: 9)
!6710 = !DILocation(line: 1139, column: 326, scope: !6586)
!6711 = !DILocation(line: 1139, column: 326, scope: !765)
!6712 = !DILocation(line: 1140, column: 5, scope: !741)
!6713 = !DILocation(line: 1140, column: 10, scope: !6714)
!6714 = !DILexicalBlockFile(scope: !771, file: !13, discriminator: 1)
!6715 = !DILocation(line: 1140, column: 20, scope: !771)
!6716 = !DILocation(line: 1140, column: 43, scope: !771)
!6717 = !DILocation(line: 1140, column: 49, scope: !771)
!6718 = !DILocation(line: 1140, column: 62, scope: !775)
!6719 = !DILocation(line: 1140, column: 70, scope: !775)
!6720 = !DILocation(line: 1140, column: 62, scope: !771)
!6721 = !DILocation(line: 1140, column: 88, scope: !6722)
!6722 = !DILexicalBlockFile(scope: !774, file: !13, discriminator: 2)
!6723 = !DILocation(line: 1140, column: 94, scope: !774)
!6724 = !DILocation(line: 1140, column: 102, scope: !774)
!6725 = !DILocation(line: 1140, column: 116, scope: !774)
!6726 = !DILocation(line: 1140, column: 121, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !773, file: !13, discriminator: 4)
!6728 = !DILocation(line: 1140, column: 131, scope: !773)
!6729 = !DILocation(line: 1140, column: 161, scope: !773)
!6730 = !DILocation(line: 1140, column: 179, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !773, file: !13, line: 1140, column: 176)
!6732 = !DILocation(line: 1140, column: 196, scope: !6731)
!6733 = !DILocation(line: 1140, column: 176, scope: !6731)
!6734 = !DILocation(line: 1140, column: 206, scope: !6731)
!6735 = !DILocation(line: 1140, column: 176, scope: !773)
!6736 = !DILocation(line: 1140, column: 176, scope: !6737)
!6737 = !DILexicalBlockFile(scope: !773, file: !13, discriminator: 5)
!6738 = !DILocation(line: 1140, column: 237, scope: !6739)
!6739 = !DILexicalBlockFile(scope: !6731, file: !13, discriminator: 6)
!6740 = !DILocation(line: 1140, column: 255, scope: !6731)
!6741 = !DILocation(line: 1140, column: 265, scope: !6731)
!6742 = !DILocation(line: 1140, column: 290, scope: !6731)
!6743 = !DILocation(line: 1140, column: 221, scope: !6731)
!6744 = !DILocation(line: 1140, column: 309, scope: !6745)
!6745 = !DILexicalBlockFile(scope: !774, file: !13, discriminator: 7)
!6746 = !DILocation(line: 1140, column: 309, scope: !773)
!6747 = !DILocation(line: 1140, column: 309, scope: !6748)
!6748 = !DILexicalBlockFile(scope: !773, file: !13, discriminator: 8)
!6749 = !DILocation(line: 1140, column: 322, scope: !6750)
!6750 = !DILexicalBlockFile(scope: !774, file: !13, discriminator: 9)
!6751 = !DILocation(line: 1140, column: 324, scope: !6586)
!6752 = !DILocation(line: 1140, column: 324, scope: !771)
!6753 = !DILocation(line: 1141, column: 5, scope: !741)
!6754 = !DILocation(line: 1141, column: 10, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !777, file: !13, discriminator: 1)
!6756 = !DILocation(line: 1141, column: 20, scope: !777)
!6757 = !DILocation(line: 1141, column: 43, scope: !777)
!6758 = !DILocation(line: 1141, column: 49, scope: !777)
!6759 = !DILocation(line: 1141, column: 69, scope: !781)
!6760 = !DILocation(line: 1141, column: 77, scope: !781)
!6761 = !DILocation(line: 1141, column: 69, scope: !777)
!6762 = !DILocation(line: 1141, column: 95, scope: !6763)
!6763 = !DILexicalBlockFile(scope: !780, file: !13, discriminator: 2)
!6764 = !DILocation(line: 1141, column: 101, scope: !780)
!6765 = !DILocation(line: 1141, column: 116, scope: !780)
!6766 = !DILocation(line: 1141, column: 130, scope: !780)
!6767 = !DILocation(line: 1141, column: 135, scope: !6768)
!6768 = !DILexicalBlockFile(scope: !779, file: !13, discriminator: 4)
!6769 = !DILocation(line: 1141, column: 145, scope: !779)
!6770 = !DILocation(line: 1141, column: 175, scope: !779)
!6771 = !DILocation(line: 1141, column: 193, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !779, file: !13, line: 1141, column: 190)
!6773 = !DILocation(line: 1141, column: 210, scope: !6772)
!6774 = !DILocation(line: 1141, column: 190, scope: !6772)
!6775 = !DILocation(line: 1141, column: 220, scope: !6772)
!6776 = !DILocation(line: 1141, column: 190, scope: !779)
!6777 = !DILocation(line: 1141, column: 190, scope: !6778)
!6778 = !DILexicalBlockFile(scope: !779, file: !13, discriminator: 5)
!6779 = !DILocation(line: 1141, column: 251, scope: !6780)
!6780 = !DILexicalBlockFile(scope: !6772, file: !13, discriminator: 6)
!6781 = !DILocation(line: 1141, column: 269, scope: !6772)
!6782 = !DILocation(line: 1141, column: 279, scope: !6772)
!6783 = !DILocation(line: 1141, column: 304, scope: !6772)
!6784 = !DILocation(line: 1141, column: 235, scope: !6772)
!6785 = !DILocation(line: 1141, column: 323, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !780, file: !13, discriminator: 7)
!6787 = !DILocation(line: 1141, column: 323, scope: !779)
!6788 = !DILocation(line: 1141, column: 323, scope: !6789)
!6789 = !DILexicalBlockFile(scope: !779, file: !13, discriminator: 8)
!6790 = !DILocation(line: 1141, column: 336, scope: !6791)
!6791 = !DILexicalBlockFile(scope: !780, file: !13, discriminator: 9)
!6792 = !DILocation(line: 1141, column: 338, scope: !6586)
!6793 = !DILocation(line: 1141, column: 338, scope: !777)
!6794 = !DILocation(line: 1142, column: 5, scope: !741)
!6795 = !DILocation(line: 1142, column: 10, scope: !6796)
!6796 = !DILexicalBlockFile(scope: !783, file: !13, discriminator: 1)
!6797 = !DILocation(line: 1142, column: 20, scope: !783)
!6798 = !DILocation(line: 1142, column: 43, scope: !783)
!6799 = !DILocation(line: 1142, column: 49, scope: !783)
!6800 = !DILocation(line: 1142, column: 69, scope: !787)
!6801 = !DILocation(line: 1142, column: 77, scope: !787)
!6802 = !DILocation(line: 1142, column: 69, scope: !783)
!6803 = !DILocation(line: 1142, column: 95, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !786, file: !13, discriminator: 2)
!6805 = !DILocation(line: 1142, column: 101, scope: !786)
!6806 = !DILocation(line: 1142, column: 116, scope: !786)
!6807 = !DILocation(line: 1142, column: 130, scope: !786)
!6808 = !DILocation(line: 1142, column: 135, scope: !6809)
!6809 = !DILexicalBlockFile(scope: !785, file: !13, discriminator: 4)
!6810 = !DILocation(line: 1142, column: 145, scope: !785)
!6811 = !DILocation(line: 1142, column: 175, scope: !785)
!6812 = !DILocation(line: 1142, column: 193, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !785, file: !13, line: 1142, column: 190)
!6814 = !DILocation(line: 1142, column: 210, scope: !6813)
!6815 = !DILocation(line: 1142, column: 190, scope: !6813)
!6816 = !DILocation(line: 1142, column: 220, scope: !6813)
!6817 = !DILocation(line: 1142, column: 190, scope: !785)
!6818 = !DILocation(line: 1142, column: 190, scope: !6819)
!6819 = !DILexicalBlockFile(scope: !785, file: !13, discriminator: 5)
!6820 = !DILocation(line: 1142, column: 251, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !6813, file: !13, discriminator: 6)
!6822 = !DILocation(line: 1142, column: 269, scope: !6813)
!6823 = !DILocation(line: 1142, column: 279, scope: !6813)
!6824 = !DILocation(line: 1142, column: 304, scope: !6813)
!6825 = !DILocation(line: 1142, column: 235, scope: !6813)
!6826 = !DILocation(line: 1142, column: 323, scope: !6827)
!6827 = !DILexicalBlockFile(scope: !786, file: !13, discriminator: 7)
!6828 = !DILocation(line: 1142, column: 323, scope: !785)
!6829 = !DILocation(line: 1142, column: 323, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !785, file: !13, discriminator: 8)
!6831 = !DILocation(line: 1142, column: 336, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !786, file: !13, discriminator: 9)
!6833 = !DILocation(line: 1142, column: 338, scope: !6586)
!6834 = !DILocation(line: 1142, column: 338, scope: !783)
!6835 = !DILocation(line: 1143, column: 5, scope: !741)
!6836 = !DILocation(line: 1143, column: 10, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !789, file: !13, discriminator: 1)
!6838 = !DILocation(line: 1143, column: 20, scope: !789)
!6839 = !DILocation(line: 1143, column: 43, scope: !789)
!6840 = !DILocation(line: 1143, column: 49, scope: !789)
!6841 = !DILocation(line: 1143, column: 64, scope: !793)
!6842 = !DILocation(line: 1143, column: 72, scope: !793)
!6843 = !DILocation(line: 1143, column: 64, scope: !789)
!6844 = !DILocation(line: 1143, column: 90, scope: !6845)
!6845 = !DILexicalBlockFile(scope: !792, file: !13, discriminator: 2)
!6846 = !DILocation(line: 1143, column: 96, scope: !792)
!6847 = !DILocation(line: 1143, column: 106, scope: !792)
!6848 = !DILocation(line: 1143, column: 120, scope: !792)
!6849 = !DILocation(line: 1143, column: 125, scope: !6850)
!6850 = !DILexicalBlockFile(scope: !791, file: !13, discriminator: 4)
!6851 = !DILocation(line: 1143, column: 135, scope: !791)
!6852 = !DILocation(line: 1143, column: 165, scope: !791)
!6853 = !DILocation(line: 1143, column: 183, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !791, file: !13, line: 1143, column: 180)
!6855 = !DILocation(line: 1143, column: 200, scope: !6854)
!6856 = !DILocation(line: 1143, column: 180, scope: !6854)
!6857 = !DILocation(line: 1143, column: 210, scope: !6854)
!6858 = !DILocation(line: 1143, column: 180, scope: !791)
!6859 = !DILocation(line: 1143, column: 180, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !791, file: !13, discriminator: 5)
!6861 = !DILocation(line: 1143, column: 241, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !6854, file: !13, discriminator: 6)
!6863 = !DILocation(line: 1143, column: 259, scope: !6854)
!6864 = !DILocation(line: 1143, column: 269, scope: !6854)
!6865 = !DILocation(line: 1143, column: 294, scope: !6854)
!6866 = !DILocation(line: 1143, column: 225, scope: !6854)
!6867 = !DILocation(line: 1143, column: 313, scope: !6868)
!6868 = !DILexicalBlockFile(scope: !792, file: !13, discriminator: 7)
!6869 = !DILocation(line: 1143, column: 313, scope: !791)
!6870 = !DILocation(line: 1143, column: 313, scope: !6871)
!6871 = !DILexicalBlockFile(scope: !791, file: !13, discriminator: 8)
!6872 = !DILocation(line: 1143, column: 326, scope: !6873)
!6873 = !DILexicalBlockFile(scope: !792, file: !13, discriminator: 9)
!6874 = !DILocation(line: 1143, column: 328, scope: !6586)
!6875 = !DILocation(line: 1143, column: 328, scope: !789)
!6876 = !DILocation(line: 1144, column: 5, scope: !741)
!6877 = !DILocation(line: 1144, column: 10, scope: !6878)
!6878 = !DILexicalBlockFile(scope: !795, file: !13, discriminator: 1)
!6879 = !DILocation(line: 1144, column: 20, scope: !795)
!6880 = !DILocation(line: 1144, column: 43, scope: !795)
!6881 = !DILocation(line: 1144, column: 49, scope: !795)
!6882 = !DILocation(line: 1144, column: 62, scope: !799)
!6883 = !DILocation(line: 1144, column: 70, scope: !799)
!6884 = !DILocation(line: 1144, column: 62, scope: !795)
!6885 = !DILocation(line: 1144, column: 88, scope: !6886)
!6886 = !DILexicalBlockFile(scope: !798, file: !13, discriminator: 2)
!6887 = !DILocation(line: 1144, column: 94, scope: !798)
!6888 = !DILocation(line: 1144, column: 102, scope: !798)
!6889 = !DILocation(line: 1144, column: 116, scope: !798)
!6890 = !DILocation(line: 1144, column: 121, scope: !6891)
!6891 = !DILexicalBlockFile(scope: !797, file: !13, discriminator: 4)
!6892 = !DILocation(line: 1144, column: 131, scope: !797)
!6893 = !DILocation(line: 1144, column: 161, scope: !797)
!6894 = !DILocation(line: 1144, column: 179, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !797, file: !13, line: 1144, column: 176)
!6896 = !DILocation(line: 1144, column: 196, scope: !6895)
!6897 = !DILocation(line: 1144, column: 176, scope: !6895)
!6898 = !DILocation(line: 1144, column: 206, scope: !6895)
!6899 = !DILocation(line: 1144, column: 176, scope: !797)
!6900 = !DILocation(line: 1144, column: 176, scope: !6901)
!6901 = !DILexicalBlockFile(scope: !797, file: !13, discriminator: 5)
!6902 = !DILocation(line: 1144, column: 237, scope: !6903)
!6903 = !DILexicalBlockFile(scope: !6895, file: !13, discriminator: 6)
!6904 = !DILocation(line: 1144, column: 255, scope: !6895)
!6905 = !DILocation(line: 1144, column: 265, scope: !6895)
!6906 = !DILocation(line: 1144, column: 290, scope: !6895)
!6907 = !DILocation(line: 1144, column: 221, scope: !6895)
!6908 = !DILocation(line: 1144, column: 309, scope: !6909)
!6909 = !DILexicalBlockFile(scope: !798, file: !13, discriminator: 7)
!6910 = !DILocation(line: 1144, column: 309, scope: !797)
!6911 = !DILocation(line: 1144, column: 309, scope: !6912)
!6912 = !DILexicalBlockFile(scope: !797, file: !13, discriminator: 8)
!6913 = !DILocation(line: 1144, column: 322, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !798, file: !13, discriminator: 9)
!6915 = !DILocation(line: 1144, column: 324, scope: !6586)
!6916 = !DILocation(line: 1144, column: 324, scope: !795)
!6917 = !DILocation(line: 1145, column: 5, scope: !741)
!6918 = !DILocation(line: 1145, column: 10, scope: !6919)
!6919 = !DILexicalBlockFile(scope: !801, file: !13, discriminator: 1)
!6920 = !DILocation(line: 1145, column: 20, scope: !801)
!6921 = !DILocation(line: 1145, column: 43, scope: !801)
!6922 = !DILocation(line: 1145, column: 49, scope: !801)
!6923 = !DILocation(line: 1145, column: 59, scope: !805)
!6924 = !DILocation(line: 1145, column: 67, scope: !805)
!6925 = !DILocation(line: 1145, column: 59, scope: !801)
!6926 = !DILocation(line: 1145, column: 85, scope: !6927)
!6927 = !DILexicalBlockFile(scope: !804, file: !13, discriminator: 2)
!6928 = !DILocation(line: 1145, column: 91, scope: !804)
!6929 = !DILocation(line: 1145, column: 96, scope: !804)
!6930 = !DILocation(line: 1145, column: 110, scope: !804)
!6931 = !DILocation(line: 1145, column: 115, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !803, file: !13, discriminator: 4)
!6933 = !DILocation(line: 1145, column: 125, scope: !803)
!6934 = !DILocation(line: 1145, column: 155, scope: !803)
!6935 = !DILocation(line: 1145, column: 173, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !803, file: !13, line: 1145, column: 170)
!6937 = !DILocation(line: 1145, column: 190, scope: !6936)
!6938 = !DILocation(line: 1145, column: 170, scope: !6936)
!6939 = !DILocation(line: 1145, column: 200, scope: !6936)
!6940 = !DILocation(line: 1145, column: 170, scope: !803)
!6941 = !DILocation(line: 1145, column: 170, scope: !6942)
!6942 = !DILexicalBlockFile(scope: !803, file: !13, discriminator: 5)
!6943 = !DILocation(line: 1145, column: 231, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6936, file: !13, discriminator: 6)
!6945 = !DILocation(line: 1145, column: 249, scope: !6936)
!6946 = !DILocation(line: 1145, column: 259, scope: !6936)
!6947 = !DILocation(line: 1145, column: 284, scope: !6936)
!6948 = !DILocation(line: 1145, column: 215, scope: !6936)
!6949 = !DILocation(line: 1145, column: 303, scope: !6950)
!6950 = !DILexicalBlockFile(scope: !804, file: !13, discriminator: 7)
!6951 = !DILocation(line: 1145, column: 303, scope: !803)
!6952 = !DILocation(line: 1145, column: 303, scope: !6953)
!6953 = !DILexicalBlockFile(scope: !803, file: !13, discriminator: 8)
!6954 = !DILocation(line: 1145, column: 316, scope: !6955)
!6955 = !DILexicalBlockFile(scope: !804, file: !13, discriminator: 9)
!6956 = !DILocation(line: 1145, column: 318, scope: !6586)
!6957 = !DILocation(line: 1145, column: 318, scope: !801)
!6958 = !DILocation(line: 1146, column: 5, scope: !741)
!6959 = !DILocation(line: 1767, column: 33, scope: !910)
!6960 = !DILocation(line: 1767, column: 50, scope: !910)
!6961 = !DILocation(line: 1769, column: 5, scope: !910)
!6962 = !DILocation(line: 1769, column: 15, scope: !910)
!6963 = !DILocation(line: 1769, column: 35, scope: !910)
!6964 = !DILocation(line: 1769, column: 57, scope: !910)
!6965 = !DILocation(line: 1770, column: 5, scope: !910)
!6966 = !DILocation(line: 1770, column: 16, scope: !910)
!6967 = !DILocation(line: 1770, column: 23, scope: !910)
!6968 = !DILocation(line: 1770, column: 31, scope: !910)
!6969 = !DILocation(line: 1770, column: 40, scope: !910)
!6970 = !DILocation(line: 1771, column: 5, scope: !910)
!6971 = !DILocation(line: 1771, column: 9, scope: !910)
!6972 = !DILocation(line: 1773, column: 5, scope: !910)
!6973 = !DILocation(line: 1773, column: 10, scope: !6974)
!6974 = !DILexicalBlockFile(scope: !925, file: !13, discriminator: 1)
!6975 = !DILocation(line: 1773, column: 14, scope: !925)
!6976 = !DILocation(line: 1773, column: 17, scope: !925)
!6977 = !DILocation(line: 1773, column: 27, scope: !925)
!6978 = !DILocation(line: 1773, column: 51, scope: !932)
!6979 = !DILocation(line: 1773, column: 39, scope: !932)
!6980 = !DILocation(line: 1773, column: 59, scope: !932)
!6981 = !DILocation(line: 1773, column: 68, scope: !932)
!6982 = !DILocation(line: 1773, column: 37, scope: !925)
!6983 = !DILocation(line: 1773, column: 100, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !930, file: !13, discriminator: 2)
!6985 = !DILocation(line: 1773, column: 106, scope: !930)
!6986 = !DILocation(line: 1773, column: 110, scope: !930)
!6987 = !DILocation(line: 1773, column: 100, scope: !931)
!6988 = !DILocation(line: 1773, column: 146, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !930, file: !13, discriminator: 4)
!6990 = !DILocation(line: 1773, column: 152, scope: !930)
!6991 = !DILocation(line: 1773, column: 129, scope: !930)
!6992 = !DILocation(line: 1773, column: 127, scope: !930)
!6993 = !DILocation(line: 1773, column: 125, scope: !930)
!6994 = !DILocation(line: 1773, column: 197, scope: !6995)
!6995 = !DILexicalBlockFile(scope: !929, file: !13, discriminator: 5)
!6996 = !DILocation(line: 1773, column: 172, scope: !929)
!6997 = !DILocation(line: 1773, column: 170, scope: !929)
!6998 = !DILocation(line: 1773, column: 220, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !929, file: !13, line: 1773, column: 220)
!7000 = !DILocation(line: 1773, column: 225, scope: !6999)
!7001 = !DILocation(line: 1773, column: 220, scope: !929)
!7002 = !DILocation(line: 1773, column: 240, scope: !7003)
!7003 = !DILexicalBlockFile(scope: !6999, file: !13, discriminator: 7)
!7004 = !DILocation(line: 1773, column: 240, scope: !6999)
!7005 = !DILocation(line: 1773, column: 279, scope: !7006)
!7006 = !DILexicalBlockFile(scope: !929, file: !13, discriminator: 8)
!7007 = !DILocation(line: 1773, column: 263, scope: !929)
!7008 = !DILocation(line: 1773, column: 261, scope: !929)
!7009 = !DILocation(line: 1773, column: 286, scope: !929)
!7010 = !DILocation(line: 1773, column: 291, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !928, file: !13, discriminator: 10)
!7012 = !DILocation(line: 1773, column: 301, scope: !928)
!7013 = !DILocation(line: 1773, column: 331, scope: !928)
!7014 = !DILocation(line: 1773, column: 346, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !928, file: !13, line: 1773, column: 343)
!7016 = !DILocation(line: 1773, column: 363, scope: !7015)
!7017 = !DILocation(line: 1773, column: 343, scope: !7015)
!7018 = !DILocation(line: 1773, column: 373, scope: !7015)
!7019 = !DILocation(line: 1773, column: 343, scope: !928)
!7020 = !DILocation(line: 1773, column: 343, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !928, file: !13, discriminator: 11)
!7022 = !DILocation(line: 1773, column: 404, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !7015, file: !13, discriminator: 12)
!7024 = !DILocation(line: 1773, column: 422, scope: !7015)
!7025 = !DILocation(line: 1773, column: 432, scope: !7015)
!7026 = !DILocation(line: 1773, column: 457, scope: !7015)
!7027 = !DILocation(line: 1773, column: 388, scope: !7015)
!7028 = !DILocation(line: 1773, column: 476, scope: !7029)
!7029 = !DILexicalBlockFile(scope: !929, file: !13, discriminator: 13)
!7030 = !DILocation(line: 1773, column: 476, scope: !928)
!7031 = !DILocation(line: 1773, column: 476, scope: !7032)
!7032 = !DILexicalBlockFile(scope: !928, file: !13, discriminator: 14)
!7033 = !DILocation(line: 1773, column: 493, scope: !7034)
!7034 = !DILexicalBlockFile(scope: !7035, file: !13, discriminator: 15)
!7035 = distinct !DILexicalBlock(scope: !929, file: !13, line: 1773, column: 493)
!7036 = !DILocation(line: 1773, column: 495, scope: !7035)
!7037 = !DILocation(line: 1773, column: 493, scope: !929)
!7038 = !DILocation(line: 1773, column: 500, scope: !7039)
!7039 = !DILexicalBlockFile(scope: !7035, file: !13, discriminator: 16)
!7040 = !DILocation(line: 1773, column: 500, scope: !7035)
!7041 = !DILocation(line: 1773, column: 525, scope: !7042)
!7042 = !DILexicalBlockFile(scope: !7043, file: !13, discriminator: 6)
!7043 = distinct !DILexicalBlock(scope: !931, file: !13, line: 1773, column: 525)
!7044 = !DILocation(line: 1773, column: 527, scope: !7043)
!7045 = !DILocation(line: 1773, column: 525, scope: !931)
!7046 = !DILocation(line: 1773, column: 550, scope: !7047)
!7047 = !DILexicalBlockFile(scope: !7048, file: !13, discriminator: 18)
!7048 = distinct !DILexicalBlock(scope: !7043, file: !13, line: 1773, column: 532)
!7049 = !DILocation(line: 1773, column: 534, scope: !7048)
!7050 = !DILocation(line: 1773, column: 602, scope: !7048)
!7051 = !DILocation(line: 1773, column: 623, scope: !7052)
!7052 = !DILexicalBlockFile(scope: !931, file: !13, discriminator: 19)
!7053 = !DILocation(line: 1773, column: 669, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !7055, file: !13, discriminator: 3)
!7055 = distinct !DILexicalBlock(scope: !932, file: !13, line: 1773, column: 634)
!7056 = !DILocation(line: 1773, column: 657, scope: !7055)
!7057 = !DILocation(line: 1773, column: 634, scope: !7055)
!7058 = !DILocation(line: 1773, column: 707, scope: !7055)
!7059 = !DILocation(line: 1773, column: 634, scope: !932)
!7060 = !DILocation(line: 1773, column: 722, scope: !7061)
!7061 = !DILexicalBlockFile(scope: !7055, file: !13, discriminator: 22)
!7062 = !DILocation(line: 1773, column: 722, scope: !7055)
!7063 = !DILocation(line: 1773, column: 741, scope: !7064)
!7064 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 21)
!7065 = !DILocation(line: 1773, column: 741, scope: !7066)
!7066 = !DILexicalBlockFile(scope: !7067, file: !13, discriminator: 24)
!7067 = !DILexicalBlockFile(scope: !7068, file: !13, discriminator: 23)
!7068 = !DILexicalBlockFile(scope: !7069, file: !13, discriminator: 20)
!7069 = !DILexicalBlockFile(scope: !7070, file: !13, discriminator: 17)
!7070 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 9)
!7071 = !DILocation(line: 1773, column: 741, scope: !925)
!7072 = !DILocation(line: 1773, column: 741, scope: !7073)
!7073 = !DILexicalBlockFile(scope: !925, file: !13, discriminator: 25)
!7074 = !DILocation(line: 1775, column: 35, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1775, column: 9)
!7076 = !DILocation(line: 1775, column: 9, scope: !7075)
!7077 = !DILocation(line: 1775, column: 41, scope: !7075)
!7078 = !DILocation(line: 1775, column: 9, scope: !910)
!7079 = !DILocation(line: 1776, column: 9, scope: !7075)
!7080 = !DILocation(line: 1778, column: 13, scope: !910)
!7081 = !DILocation(line: 1780, column: 5, scope: !910)
!7082 = !DILocation(line: 1780, column: 5, scope: !7083)
!7083 = !DILexicalBlockFile(scope: !7084, file: !13, discriminator: 2)
!7084 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 1)
!7085 = !DILocation(line: 1781, column: 9, scope: !934)
!7086 = !DILocation(line: 1781, column: 15, scope: !934)
!7087 = !DILocation(line: 1782, column: 9, scope: !934)
!7088 = !DILocation(line: 1782, column: 20, scope: !934)
!7089 = !DILocation(line: 1783, column: 9, scope: !934)
!7090 = !DILocation(line: 1783, column: 13, scope: !934)
!7091 = !DILocation(line: 1784, column: 9, scope: !934)
!7092 = !DILocation(line: 1784, column: 20, scope: !934)
!7093 = !DILocation(line: 1787, column: 13, scope: !934)
!7094 = !DILocation(line: 1788, column: 9, scope: !934)
!7095 = !DILocation(line: 1788, column: 17, scope: !7096)
!7096 = !DILexicalBlockFile(scope: !7097, file: !13, discriminator: 4)
!7097 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 1)
!7098 = !DILocation(line: 1788, column: 23, scope: !934)
!7099 = !DILocation(line: 1788, column: 17, scope: !934)
!7100 = !DILocation(line: 1788, column: 37, scope: !934)
!7101 = !DILocation(line: 1789, column: 65, scope: !934)
!7102 = !DILocation(line: 1789, column: 71, scope: !934)
!7103 = !DILocation(line: 1789, column: 47, scope: !934)
!7104 = !DILocation(line: 1789, column: 88, scope: !934)
!7105 = !DILocation(line: 1789, column: 16, scope: !934)
!7106 = !DILocation(line: 1788, column: 9, scope: !7107)
!7107 = !DILexicalBlockFile(scope: !7108, file: !13, discriminator: 3)
!7108 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 2)
!7109 = !DILocation(line: 1790, column: 44, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1789, column: 97)
!7111 = !DILocation(line: 1790, column: 19, scope: !7110)
!7112 = !DILocation(line: 1790, column: 17, scope: !7110)
!7113 = !DILocation(line: 1791, column: 17, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7110, file: !13, line: 1791, column: 17)
!7115 = !DILocation(line: 1791, column: 21, scope: !7114)
!7116 = !DILocation(line: 1791, column: 17, scope: !7110)
!7117 = !DILocation(line: 1794, column: 21, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !13, line: 1794, column: 21)
!7119 = distinct !DILexicalBlock(scope: !7114, file: !13, line: 1791, column: 26)
!7120 = !DILocation(line: 1794, column: 21, scope: !7119)
!7121 = !DILocation(line: 1795, column: 21, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7118, file: !13, line: 1794, column: 41)
!7123 = !DILocation(line: 1797, column: 17, scope: !7119)
!7124 = !DILocation(line: 1799, column: 17, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7110, file: !13, line: 1799, column: 17)
!7126 = !DILocation(line: 1799, column: 21, scope: !7125)
!7127 = !DILocation(line: 1799, column: 17, scope: !7110)
!7128 = !DILocation(line: 1800, column: 17, scope: !7125)
!7129 = !DILocation(line: 1802, column: 13, scope: !941)
!7130 = !DILocation(line: 1802, column: 17, scope: !941)
!7131 = !DILocation(line: 1802, column: 13, scope: !934)
!7132 = !DILocation(line: 1804, column: 45, scope: !940)
!7133 = !DILocation(line: 1804, column: 13, scope: !940)
!7134 = !DILocation(line: 1805, column: 13, scope: !940)
!7135 = !DILocation(line: 1805, column: 18, scope: !7136)
!7136 = !DILexicalBlockFile(scope: !939, file: !13, discriminator: 1)
!7137 = !DILocation(line: 1805, column: 28, scope: !939)
!7138 = !DILocation(line: 1805, column: 51, scope: !939)
!7139 = !DILocation(line: 1805, column: 57, scope: !939)
!7140 = !DILocation(line: 1805, column: 72, scope: !945)
!7141 = !DILocation(line: 1805, column: 80, scope: !945)
!7142 = !DILocation(line: 1805, column: 72, scope: !939)
!7143 = !DILocation(line: 1805, column: 98, scope: !7144)
!7144 = !DILexicalBlockFile(scope: !944, file: !13, discriminator: 2)
!7145 = !DILocation(line: 1805, column: 104, scope: !944)
!7146 = !DILocation(line: 1805, column: 114, scope: !944)
!7147 = !DILocation(line: 1805, column: 128, scope: !944)
!7148 = !DILocation(line: 1805, column: 133, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !943, file: !13, discriminator: 4)
!7150 = !DILocation(line: 1805, column: 143, scope: !943)
!7151 = !DILocation(line: 1805, column: 173, scope: !943)
!7152 = !DILocation(line: 1805, column: 191, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !943, file: !13, line: 1805, column: 188)
!7154 = !DILocation(line: 1805, column: 208, scope: !7153)
!7155 = !DILocation(line: 1805, column: 188, scope: !7153)
!7156 = !DILocation(line: 1805, column: 218, scope: !7153)
!7157 = !DILocation(line: 1805, column: 188, scope: !943)
!7158 = !DILocation(line: 1805, column: 188, scope: !7159)
!7159 = !DILexicalBlockFile(scope: !943, file: !13, discriminator: 5)
!7160 = !DILocation(line: 1805, column: 249, scope: !7161)
!7161 = !DILexicalBlockFile(scope: !7153, file: !13, discriminator: 6)
!7162 = !DILocation(line: 1805, column: 267, scope: !7153)
!7163 = !DILocation(line: 1805, column: 277, scope: !7153)
!7164 = !DILocation(line: 1805, column: 302, scope: !7153)
!7165 = !DILocation(line: 1805, column: 233, scope: !7153)
!7166 = !DILocation(line: 1805, column: 321, scope: !7167)
!7167 = !DILexicalBlockFile(scope: !944, file: !13, discriminator: 7)
!7168 = !DILocation(line: 1805, column: 321, scope: !943)
!7169 = !DILocation(line: 1805, column: 321, scope: !7170)
!7170 = !DILexicalBlockFile(scope: !943, file: !13, discriminator: 8)
!7171 = !DILocation(line: 1805, column: 334, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !944, file: !13, discriminator: 9)
!7173 = !DILocation(line: 1805, column: 336, scope: !7174)
!7174 = !DILexicalBlockFile(scope: !7175, file: !13, discriminator: 10)
!7175 = !DILexicalBlockFile(scope: !940, file: !13, discriminator: 3)
!7176 = !DILocation(line: 1805, column: 336, scope: !939)
!7177 = !DILocation(line: 1805, column: 336, scope: !7178)
!7178 = !DILexicalBlockFile(scope: !939, file: !13, discriminator: 11)
!7179 = !DILocation(line: 1806, column: 47, scope: !940)
!7180 = !DILocation(line: 1806, column: 28, scope: !940)
!7181 = !DILocation(line: 1806, column: 19, scope: !940)
!7182 = !DILocation(line: 1807, column: 13, scope: !940)
!7183 = !DILocation(line: 1810, column: 13, scope: !949)
!7184 = !DILocation(line: 1810, column: 23, scope: !949)
!7185 = !DILocation(line: 1810, column: 13, scope: !934)
!7186 = !DILocation(line: 1811, column: 20, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !949, file: !13, line: 1810, column: 38)
!7188 = !DILocation(line: 1811, column: 26, scope: !7187)
!7189 = !DILocation(line: 1811, column: 18, scope: !7187)
!7190 = !DILocation(line: 1812, column: 21, scope: !7187)
!7191 = !DILocation(line: 1812, column: 27, scope: !7187)
!7192 = !DILocation(line: 1812, column: 19, scope: !7187)
!7193 = !DILocation(line: 1813, column: 30, scope: !7187)
!7194 = !DILocation(line: 1814, column: 29, scope: !7187)
!7195 = !DILocation(line: 1814, column: 37, scope: !7187)
!7196 = !DILocation(line: 1814, column: 46, scope: !7187)
!7197 = !DILocation(line: 1815, column: 9, scope: !7187)
!7198 = !DILocation(line: 1818, column: 37, scope: !948)
!7199 = !DILocation(line: 1818, column: 48, scope: !948)
!7200 = !DILocation(line: 1818, column: 54, scope: !948)
!7201 = !DILocation(line: 1818, column: 20, scope: !948)
!7202 = !DILocation(line: 1818, column: 18, scope: !948)
!7203 = !DILocation(line: 1819, column: 19, scope: !948)
!7204 = !DILocation(line: 1820, column: 80, scope: !948)
!7205 = !DILocation(line: 1820, column: 62, scope: !948)
!7206 = !DILocation(line: 1820, column: 93, scope: !948)
!7207 = !DILocation(line: 1820, column: 30, scope: !948)
!7208 = !DILocation(line: 1821, column: 13, scope: !948)
!7209 = !DILocation(line: 1821, column: 18, scope: !7210)
!7210 = !DILexicalBlockFile(scope: !947, file: !13, discriminator: 1)
!7211 = !DILocation(line: 1821, column: 28, scope: !947)
!7212 = !DILocation(line: 1821, column: 51, scope: !947)
!7213 = !DILocation(line: 1821, column: 67, scope: !953)
!7214 = !DILocation(line: 1821, column: 75, scope: !953)
!7215 = !DILocation(line: 1821, column: 67, scope: !947)
!7216 = !DILocation(line: 1821, column: 104, scope: !7217)
!7217 = !DILexicalBlockFile(scope: !952, file: !13, discriminator: 2)
!7218 = !DILocation(line: 1821, column: 118, scope: !952)
!7219 = !DILocation(line: 1821, column: 123, scope: !7220)
!7220 = !DILexicalBlockFile(scope: !951, file: !13, discriminator: 4)
!7221 = !DILocation(line: 1821, column: 133, scope: !951)
!7222 = !DILocation(line: 1821, column: 163, scope: !951)
!7223 = !DILocation(line: 1821, column: 181, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !951, file: !13, line: 1821, column: 178)
!7225 = !DILocation(line: 1821, column: 198, scope: !7224)
!7226 = !DILocation(line: 1821, column: 178, scope: !7224)
!7227 = !DILocation(line: 1821, column: 208, scope: !7224)
!7228 = !DILocation(line: 1821, column: 178, scope: !951)
!7229 = !DILocation(line: 1821, column: 178, scope: !7230)
!7230 = !DILexicalBlockFile(scope: !951, file: !13, discriminator: 5)
!7231 = !DILocation(line: 1821, column: 239, scope: !7232)
!7232 = !DILexicalBlockFile(scope: !7224, file: !13, discriminator: 6)
!7233 = !DILocation(line: 1821, column: 257, scope: !7224)
!7234 = !DILocation(line: 1821, column: 267, scope: !7224)
!7235 = !DILocation(line: 1821, column: 292, scope: !7224)
!7236 = !DILocation(line: 1821, column: 223, scope: !7224)
!7237 = !DILocation(line: 1821, column: 311, scope: !7238)
!7238 = !DILexicalBlockFile(scope: !952, file: !13, discriminator: 7)
!7239 = !DILocation(line: 1821, column: 311, scope: !951)
!7240 = !DILocation(line: 1821, column: 311, scope: !7241)
!7241 = !DILexicalBlockFile(scope: !951, file: !13, discriminator: 8)
!7242 = !DILocation(line: 1821, column: 324, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !952, file: !13, discriminator: 9)
!7244 = !DILocation(line: 1821, column: 326, scope: !7245)
!7245 = !DILexicalBlockFile(scope: !7246, file: !13, discriminator: 10)
!7246 = !DILexicalBlockFile(scope: !948, file: !13, discriminator: 3)
!7247 = !DILocation(line: 1821, column: 326, scope: !947)
!7248 = !DILocation(line: 1821, column: 326, scope: !7249)
!7249 = !DILexicalBlockFile(scope: !947, file: !13, discriminator: 11)
!7250 = !DILocation(line: 1822, column: 17, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !948, file: !13, line: 1822, column: 17)
!7252 = !DILocation(line: 1822, column: 22, scope: !7251)
!7253 = !DILocation(line: 1822, column: 17, scope: !948)
!7254 = !DILocation(line: 1823, column: 17, scope: !7251)
!7255 = !DILocation(line: 1824, column: 51, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !948, file: !13, line: 1824, column: 17)
!7257 = !DILocation(line: 1824, column: 35, scope: !7256)
!7258 = !DILocation(line: 1824, column: 58, scope: !7256)
!7259 = !DILocation(line: 1824, column: 64, scope: !7256)
!7260 = !DILocation(line: 1824, column: 33, scope: !7256)
!7261 = !DILocation(line: 1824, column: 33, scope: !7262)
!7262 = !DILexicalBlockFile(scope: !7256, file: !13, discriminator: 1)
!7263 = !DILocation(line: 1824, column: 107, scope: !7264)
!7264 = !DILexicalBlockFile(scope: !7256, file: !13, discriminator: 2)
!7265 = !DILocation(line: 1824, column: 77, scope: !7256)
!7266 = !DILocation(line: 1824, column: 116, scope: !7267)
!7267 = !DILexicalBlockFile(scope: !7268, file: !13, discriminator: 4)
!7268 = !DILexicalBlockFile(scope: !7256, file: !13, discriminator: 3)
!7269 = !DILocation(line: 1824, column: 17, scope: !948)
!7270 = !DILocation(line: 1825, column: 17, scope: !7256)
!7271 = !DILocation(line: 1828, column: 49, scope: !934)
!7272 = !DILocation(line: 1828, column: 32, scope: !934)
!7273 = !DILocation(line: 1828, column: 57, scope: !934)
!7274 = !DILocation(line: 1828, column: 63, scope: !934)
!7275 = !DILocation(line: 1828, column: 30, scope: !934)
!7276 = !DILocation(line: 1828, column: 121, scope: !7097)
!7277 = !DILocation(line: 1828, column: 105, scope: !934)
!7278 = !DILocation(line: 1828, column: 128, scope: !934)
!7279 = !DILocation(line: 1828, column: 134, scope: !934)
!7280 = !DILocation(line: 1828, column: 75, scope: !934)
!7281 = !DILocation(line: 1828, column: 169, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 3)
!7283 = !DILocation(line: 1828, column: 152, scope: !934)
!7284 = !DILocation(line: 1828, column: 175, scope: !934)
!7285 = !DILocation(line: 1828, column: 144, scope: !934)
!7286 = !DILocation(line: 1828, column: 218, scope: !7287)
!7287 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 4)
!7288 = !DILocation(line: 1828, column: 192, scope: !934)
!7289 = !DILocation(line: 1828, column: 224, scope: !934)
!7290 = !DILocation(line: 1828, column: 184, scope: !934)
!7291 = !DILocation(line: 1828, column: 30, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !7293, file: !13, discriminator: 6)
!7293 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 5)
!7294 = !DILocation(line: 1828, column: 271, scope: !7108)
!7295 = !DILocation(line: 1828, column: 251, scope: !934)
!7296 = !DILocation(line: 1828, column: 279, scope: !934)
!7297 = !DILocation(line: 1828, column: 284, scope: !934)
!7298 = !DILocation(line: 1828, column: 13, scope: !7299)
!7299 = !DILexicalBlockFile(scope: !7300, file: !13, discriminator: 8)
!7300 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 7)
!7301 = !DILocation(line: 1829, column: 68, scope: !934)
!7302 = !DILocation(line: 1829, column: 50, scope: !934)
!7303 = !DILocation(line: 1829, column: 76, scope: !934)
!7304 = !DILocation(line: 1829, column: 18, scope: !934)
!7305 = !DILocation(line: 1830, column: 64, scope: !934)
!7306 = !DILocation(line: 1830, column: 46, scope: !934)
!7307 = !DILocation(line: 1830, column: 72, scope: !934)
!7308 = !DILocation(line: 1830, column: 78, scope: !934)
!7309 = !DILocation(line: 1830, column: 14, scope: !934)
!7310 = !DILocation(line: 1833, column: 13, scope: !934)
!7311 = !DILocation(line: 1833, column: 19, scope: !934)
!7312 = !DILocation(line: 1833, column: 34, scope: !934)
!7313 = !DILocation(line: 1833, column: 40, scope: !934)
!7314 = !DILocation(line: 1833, column: 55, scope: !934)
!7315 = !DILocation(line: 1833, column: 61, scope: !934)
!7316 = !DILocation(line: 1834, column: 13, scope: !934)
!7317 = !DILocation(line: 1835, column: 13, scope: !934)
!7318 = !DILocation(line: 1835, column: 19, scope: !934)
!7319 = !DILocation(line: 1835, column: 26, scope: !934)
!7320 = !DILocation(line: 1835, column: 24, scope: !934)
!7321 = !DILocation(line: 1835, column: 17, scope: !934)
!7322 = !DILocation(line: 1836, column: 13, scope: !934)
!7323 = !DILocation(line: 1836, column: 19, scope: !934)
!7324 = !DILocation(line: 1836, column: 26, scope: !934)
!7325 = !DILocation(line: 1836, column: 24, scope: !934)
!7326 = !DILocation(line: 1836, column: 17, scope: !934)
!7327 = !DILocation(line: 1832, column: 18, scope: !934)
!7328 = !DILocation(line: 1832, column: 16, scope: !934)
!7329 = !DILocation(line: 1838, column: 13, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1838, column: 13)
!7331 = !DILocation(line: 1838, column: 20, scope: !7330)
!7332 = !DILocation(line: 1838, column: 13, scope: !934)
!7333 = !DILocation(line: 1839, column: 23, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7330, file: !13, line: 1838, column: 26)
!7335 = !DILocation(line: 1839, column: 20, scope: !7334)
!7336 = !DILocation(line: 1840, column: 17, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7334, file: !13, line: 1840, column: 17)
!7338 = !DILocation(line: 1840, column: 23, scope: !7337)
!7339 = !DILocation(line: 1840, column: 28, scope: !7337)
!7340 = !DILocation(line: 1840, column: 32, scope: !7341)
!7341 = !DILexicalBlockFile(scope: !7337, file: !13, discriminator: 1)
!7342 = !DILocation(line: 1840, column: 41, scope: !7337)
!7343 = !DILocation(line: 1840, column: 39, scope: !7337)
!7344 = !DILocation(line: 1840, column: 50, scope: !7337)
!7345 = !DILocation(line: 1840, column: 48, scope: !7337)
!7346 = !DILocation(line: 1840, column: 61, scope: !7337)
!7347 = !DILocation(line: 1840, column: 58, scope: !7337)
!7348 = !DILocation(line: 1840, column: 17, scope: !7334)
!7349 = !DILocation(line: 1841, column: 26, scope: !7337)
!7350 = !DILocation(line: 1841, column: 34, scope: !7337)
!7351 = !DILocation(line: 1841, column: 32, scope: !7337)
!7352 = !DILocation(line: 1841, column: 42, scope: !7337)
!7353 = !DILocation(line: 1841, column: 40, scope: !7337)
!7354 = !DILocation(line: 1841, column: 24, scope: !7337)
!7355 = !DILocation(line: 1841, column: 17, scope: !7337)
!7356 = !DILocation(line: 1842, column: 13, scope: !7334)
!7357 = !DILocation(line: 1846, column: 18, scope: !934)
!7358 = !DILocation(line: 1846, column: 29, scope: !934)
!7359 = !DILocation(line: 1846, column: 27, scope: !934)
!7360 = !DILocation(line: 1846, column: 16, scope: !934)
!7361 = !DILocation(line: 1847, column: 13, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1847, column: 13)
!7363 = !DILocation(line: 1847, column: 19, scope: !7362)
!7364 = !DILocation(line: 1847, column: 24, scope: !7362)
!7365 = !DILocation(line: 1847, column: 28, scope: !7366)
!7366 = !DILexicalBlockFile(scope: !7362, file: !13, discriminator: 1)
!7367 = !DILocation(line: 1847, column: 37, scope: !7362)
!7368 = !DILocation(line: 1847, column: 35, scope: !7362)
!7369 = !DILocation(line: 1847, column: 46, scope: !7362)
!7370 = !DILocation(line: 1847, column: 44, scope: !7362)
!7371 = !DILocation(line: 1847, column: 57, scope: !7362)
!7372 = !DILocation(line: 1847, column: 54, scope: !7362)
!7373 = !DILocation(line: 1847, column: 13, scope: !934)
!7374 = !DILocation(line: 1849, column: 22, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7362, file: !13, line: 1847, column: 64)
!7376 = !DILocation(line: 1849, column: 30, scope: !7375)
!7377 = !DILocation(line: 1849, column: 28, scope: !7375)
!7378 = !DILocation(line: 1849, column: 38, scope: !7375)
!7379 = !DILocation(line: 1849, column: 36, scope: !7375)
!7380 = !DILocation(line: 1849, column: 20, scope: !7375)
!7381 = !DILocation(line: 1850, column: 13, scope: !7375)
!7382 = !DILocation(line: 1853, column: 13, scope: !956)
!7383 = !DILocation(line: 1853, column: 22, scope: !956)
!7384 = !DILocation(line: 1853, column: 20, scope: !956)
!7385 = !DILocation(line: 1853, column: 13, scope: !934)
!7386 = !DILocation(line: 1855, column: 13, scope: !955)
!7387 = !DILocation(line: 1855, column: 23, scope: !955)
!7388 = !DILocation(line: 1856, column: 17, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1856, column: 17)
!7390 = !DILocation(line: 1856, column: 24, scope: !7389)
!7391 = !DILocation(line: 1856, column: 17, scope: !955)
!7392 = !DILocation(line: 1857, column: 26, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7389, file: !13, line: 1856, column: 39)
!7394 = !DILocation(line: 1857, column: 24, scope: !7393)
!7395 = !DILocation(line: 1858, column: 21, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7393, file: !13, line: 1858, column: 21)
!7397 = !DILocation(line: 1858, column: 28, scope: !7396)
!7398 = !DILocation(line: 1858, column: 21, scope: !7393)
!7399 = !DILocation(line: 1859, column: 21, scope: !7396)
!7400 = !DILocation(line: 1860, column: 13, scope: !7393)
!7401 = !DILocation(line: 1861, column: 37, scope: !955)
!7402 = !DILocation(line: 1861, column: 43, scope: !955)
!7403 = !DILocation(line: 1861, column: 50, scope: !955)
!7404 = !DILocation(line: 1861, column: 17, scope: !955)
!7405 = !DILocation(line: 1861, column: 15, scope: !955)
!7406 = !DILocation(line: 1862, column: 17, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1862, column: 17)
!7408 = !DILocation(line: 1862, column: 19, scope: !7407)
!7409 = !DILocation(line: 1862, column: 17, scope: !955)
!7410 = !DILocation(line: 1863, column: 17, scope: !7407)
!7411 = !DILocation(line: 1864, column: 31, scope: !960)
!7412 = !DILocation(line: 1864, column: 39, scope: !960)
!7413 = !DILocation(line: 1864, column: 17, scope: !960)
!7414 = !DILocation(line: 1864, column: 42, scope: !960)
!7415 = !DILocation(line: 1864, column: 17, scope: !955)
!7416 = !DILocation(line: 1865, column: 17, scope: !959)
!7417 = !DILocation(line: 1865, column: 22, scope: !7418)
!7418 = !DILexicalBlockFile(scope: !958, file: !13, discriminator: 1)
!7419 = !DILocation(line: 1865, column: 32, scope: !958)
!7420 = !DILocation(line: 1865, column: 62, scope: !958)
!7421 = !DILocation(line: 1865, column: 74, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !958, file: !13, line: 1865, column: 71)
!7423 = !DILocation(line: 1865, column: 91, scope: !7422)
!7424 = !DILocation(line: 1865, column: 71, scope: !7422)
!7425 = !DILocation(line: 1865, column: 101, scope: !7422)
!7426 = !DILocation(line: 1865, column: 71, scope: !958)
!7427 = !DILocation(line: 1865, column: 71, scope: !7428)
!7428 = !DILexicalBlockFile(scope: !958, file: !13, discriminator: 2)
!7429 = !DILocation(line: 1865, column: 132, scope: !7430)
!7430 = !DILexicalBlockFile(scope: !7422, file: !13, discriminator: 3)
!7431 = !DILocation(line: 1865, column: 150, scope: !7422)
!7432 = !DILocation(line: 1865, column: 160, scope: !7422)
!7433 = !DILocation(line: 1865, column: 185, scope: !7422)
!7434 = !DILocation(line: 1865, column: 116, scope: !7422)
!7435 = !DILocation(line: 1865, column: 204, scope: !7436)
!7436 = !DILexicalBlockFile(scope: !959, file: !13, discriminator: 4)
!7437 = !DILocation(line: 1865, column: 204, scope: !958)
!7438 = !DILocation(line: 1865, column: 204, scope: !7439)
!7439 = !DILexicalBlockFile(scope: !958, file: !13, discriminator: 5)
!7440 = !DILocation(line: 1866, column: 17, scope: !959)
!7441 = !DILocation(line: 1868, column: 72, scope: !955)
!7442 = !DILocation(line: 1868, column: 54, scope: !955)
!7443 = !DILocation(line: 1868, column: 77, scope: !955)
!7444 = !DILocation(line: 1868, column: 21, scope: !955)
!7445 = !DILocation(line: 1869, column: 13, scope: !955)
!7446 = !DILocation(line: 1869, column: 18, scope: !7447)
!7447 = !DILexicalBlockFile(scope: !962, file: !13, discriminator: 1)
!7448 = !DILocation(line: 1869, column: 28, scope: !962)
!7449 = !DILocation(line: 1869, column: 58, scope: !962)
!7450 = !DILocation(line: 1869, column: 70, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !962, file: !13, line: 1869, column: 67)
!7452 = !DILocation(line: 1869, column: 87, scope: !7451)
!7453 = !DILocation(line: 1869, column: 67, scope: !7451)
!7454 = !DILocation(line: 1869, column: 97, scope: !7451)
!7455 = !DILocation(line: 1869, column: 67, scope: !962)
!7456 = !DILocation(line: 1869, column: 67, scope: !7457)
!7457 = !DILexicalBlockFile(scope: !962, file: !13, discriminator: 2)
!7458 = !DILocation(line: 1869, column: 128, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !7451, file: !13, discriminator: 3)
!7460 = !DILocation(line: 1869, column: 146, scope: !7451)
!7461 = !DILocation(line: 1869, column: 156, scope: !7451)
!7462 = !DILocation(line: 1869, column: 181, scope: !7451)
!7463 = !DILocation(line: 1869, column: 112, scope: !7451)
!7464 = !DILocation(line: 1869, column: 200, scope: !7465)
!7465 = !DILexicalBlockFile(scope: !955, file: !13, discriminator: 4)
!7466 = !DILocation(line: 1869, column: 200, scope: !962)
!7467 = !DILocation(line: 1869, column: 200, scope: !7468)
!7468 = !DILexicalBlockFile(scope: !962, file: !13, discriminator: 5)
!7469 = !DILocation(line: 1870, column: 9, scope: !956)
!7470 = !DILocation(line: 1870, column: 9, scope: !7471)
!7471 = !DILexicalBlockFile(scope: !956, file: !13, discriminator: 1)
!7472 = !DILocation(line: 1870, column: 9, scope: !955)
!7473 = !DILocation(line: 1873, column: 13, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1873, column: 13)
!7475 = !DILocation(line: 1873, column: 22, scope: !7474)
!7476 = !DILocation(line: 1873, column: 20, scope: !7474)
!7477 = !DILocation(line: 1873, column: 13, scope: !934)
!7478 = !DILocation(line: 1874, column: 45, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7474, file: !13, line: 1873, column: 32)
!7480 = !DILocation(line: 1874, column: 51, scope: !7479)
!7481 = !DILocation(line: 1874, column: 59, scope: !7479)
!7482 = !DILocation(line: 1874, column: 25, scope: !7479)
!7483 = !DILocation(line: 1874, column: 23, scope: !7479)
!7484 = !DILocation(line: 1875, column: 17, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7479, file: !13, line: 1875, column: 17)
!7486 = !DILocation(line: 1875, column: 27, scope: !7485)
!7487 = !DILocation(line: 1875, column: 17, scope: !7479)
!7488 = !DILocation(line: 1876, column: 17, scope: !7485)
!7489 = !DILocation(line: 1877, column: 9, scope: !7479)
!7490 = !DILocation(line: 1878, column: 9, scope: !934)
!7491 = !DILocation(line: 1878, column: 14, scope: !7492)
!7492 = !DILexicalBlockFile(scope: !964, file: !13, discriminator: 1)
!7493 = !DILocation(line: 1878, column: 24, scope: !964)
!7494 = !DILocation(line: 1878, column: 47, scope: !964)
!7495 = !DILocation(line: 1878, column: 58, scope: !968)
!7496 = !DILocation(line: 1878, column: 66, scope: !968)
!7497 = !DILocation(line: 1878, column: 58, scope: !964)
!7498 = !DILocation(line: 1878, column: 90, scope: !7499)
!7499 = !DILexicalBlockFile(scope: !967, file: !13, discriminator: 2)
!7500 = !DILocation(line: 1878, column: 104, scope: !967)
!7501 = !DILocation(line: 1878, column: 109, scope: !7502)
!7502 = !DILexicalBlockFile(scope: !966, file: !13, discriminator: 4)
!7503 = !DILocation(line: 1878, column: 119, scope: !966)
!7504 = !DILocation(line: 1878, column: 149, scope: !966)
!7505 = !DILocation(line: 1878, column: 167, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !966, file: !13, line: 1878, column: 164)
!7507 = !DILocation(line: 1878, column: 184, scope: !7506)
!7508 = !DILocation(line: 1878, column: 164, scope: !7506)
!7509 = !DILocation(line: 1878, column: 194, scope: !7506)
!7510 = !DILocation(line: 1878, column: 164, scope: !966)
!7511 = !DILocation(line: 1878, column: 164, scope: !7512)
!7512 = !DILexicalBlockFile(scope: !966, file: !13, discriminator: 5)
!7513 = !DILocation(line: 1878, column: 225, scope: !7514)
!7514 = !DILexicalBlockFile(scope: !7506, file: !13, discriminator: 6)
!7515 = !DILocation(line: 1878, column: 243, scope: !7506)
!7516 = !DILocation(line: 1878, column: 253, scope: !7506)
!7517 = !DILocation(line: 1878, column: 278, scope: !7506)
!7518 = !DILocation(line: 1878, column: 209, scope: !7506)
!7519 = !DILocation(line: 1878, column: 297, scope: !7520)
!7520 = !DILexicalBlockFile(scope: !967, file: !13, discriminator: 7)
!7521 = !DILocation(line: 1878, column: 297, scope: !966)
!7522 = !DILocation(line: 1878, column: 297, scope: !7523)
!7523 = !DILexicalBlockFile(scope: !966, file: !13, discriminator: 8)
!7524 = !DILocation(line: 1878, column: 310, scope: !7525)
!7525 = !DILexicalBlockFile(scope: !967, file: !13, discriminator: 9)
!7526 = !DILocation(line: 1878, column: 312, scope: !7527)
!7527 = !DILexicalBlockFile(scope: !7282, file: !13, discriminator: 10)
!7528 = !DILocation(line: 1878, column: 312, scope: !964)
!7529 = !DILocation(line: 1878, column: 312, scope: !7530)
!7530 = !DILexicalBlockFile(scope: !964, file: !13, discriminator: 11)
!7531 = !DILocation(line: 1880, column: 41, scope: !934)
!7532 = !DILocation(line: 1880, column: 9, scope: !934)
!7533 = !DILocation(line: 1881, column: 5, scope: !910)
!7534 = !DILocation(line: 1881, column: 5, scope: !7084)
!7535 = !DILocation(line: 1883, column: 9, scope: !973)
!7536 = !DILocation(line: 1883, column: 14, scope: !973)
!7537 = !DILocation(line: 1883, column: 9, scope: !910)
!7538 = !DILocation(line: 1885, column: 36, scope: !972)
!7539 = !DILocation(line: 1885, column: 45, scope: !972)
!7540 = !DILocation(line: 1885, column: 43, scope: !972)
!7541 = !DILocation(line: 1885, column: 9, scope: !972)
!7542 = !DILocation(line: 1885, column: 15, scope: !972)
!7543 = !DILocation(line: 1885, column: 34, scope: !972)
!7544 = !DILocation(line: 1886, column: 13, scope: !971)
!7545 = !DILocation(line: 1886, column: 19, scope: !971)
!7546 = !DILocation(line: 1886, column: 23, scope: !971)
!7547 = !DILocation(line: 1886, column: 26, scope: !7548)
!7548 = !DILexicalBlockFile(scope: !971, file: !13, discriminator: 1)
!7549 = !DILocation(line: 1886, column: 83, scope: !971)
!7550 = !DILocation(line: 1886, column: 65, scope: !971)
!7551 = !DILocation(line: 1886, column: 91, scope: !971)
!7552 = !DILocation(line: 1886, column: 33, scope: !971)
!7553 = !DILocation(line: 1886, column: 13, scope: !972)
!7554 = !DILocation(line: 1887, column: 13, scope: !970)
!7555 = !DILocation(line: 1887, column: 23, scope: !970)
!7556 = !DILocation(line: 1887, column: 47, scope: !970)
!7557 = !DILocation(line: 1887, column: 53, scope: !970)
!7558 = !DILocation(line: 1887, column: 60, scope: !970)
!7559 = !DILocation(line: 1887, column: 27, scope: !970)
!7560 = !DILocation(line: 1888, column: 13, scope: !970)
!7561 = !DILocation(line: 1888, column: 18, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !975, file: !13, discriminator: 1)
!7563 = !DILocation(line: 1888, column: 28, scope: !975)
!7564 = !DILocation(line: 1888, column: 51, scope: !975)
!7565 = !DILocation(line: 1888, column: 62, scope: !979)
!7566 = !DILocation(line: 1888, column: 70, scope: !979)
!7567 = !DILocation(line: 1888, column: 62, scope: !975)
!7568 = !DILocation(line: 1888, column: 94, scope: !7569)
!7569 = !DILexicalBlockFile(scope: !978, file: !13, discriminator: 2)
!7570 = !DILocation(line: 1888, column: 108, scope: !978)
!7571 = !DILocation(line: 1888, column: 113, scope: !7572)
!7572 = !DILexicalBlockFile(scope: !977, file: !13, discriminator: 4)
!7573 = !DILocation(line: 1888, column: 123, scope: !977)
!7574 = !DILocation(line: 1888, column: 153, scope: !977)
!7575 = !DILocation(line: 1888, column: 171, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !977, file: !13, line: 1888, column: 168)
!7577 = !DILocation(line: 1888, column: 188, scope: !7576)
!7578 = !DILocation(line: 1888, column: 168, scope: !7576)
!7579 = !DILocation(line: 1888, column: 198, scope: !7576)
!7580 = !DILocation(line: 1888, column: 168, scope: !977)
!7581 = !DILocation(line: 1888, column: 168, scope: !7582)
!7582 = !DILexicalBlockFile(scope: !977, file: !13, discriminator: 5)
!7583 = !DILocation(line: 1888, column: 229, scope: !7584)
!7584 = !DILexicalBlockFile(scope: !7576, file: !13, discriminator: 6)
!7585 = !DILocation(line: 1888, column: 247, scope: !7576)
!7586 = !DILocation(line: 1888, column: 257, scope: !7576)
!7587 = !DILocation(line: 1888, column: 282, scope: !7576)
!7588 = !DILocation(line: 1888, column: 213, scope: !7576)
!7589 = !DILocation(line: 1888, column: 301, scope: !7590)
!7590 = !DILexicalBlockFile(scope: !978, file: !13, discriminator: 7)
!7591 = !DILocation(line: 1888, column: 301, scope: !977)
!7592 = !DILocation(line: 1888, column: 301, scope: !7593)
!7593 = !DILexicalBlockFile(scope: !977, file: !13, discriminator: 8)
!7594 = !DILocation(line: 1888, column: 314, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !978, file: !13, discriminator: 9)
!7596 = !DILocation(line: 1888, column: 316, scope: !7597)
!7597 = !DILexicalBlockFile(scope: !7598, file: !13, discriminator: 10)
!7598 = !DILexicalBlockFile(scope: !970, file: !13, discriminator: 3)
!7599 = !DILocation(line: 1888, column: 316, scope: !975)
!7600 = !DILocation(line: 1888, column: 316, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !975, file: !13, discriminator: 11)
!7602 = !DILocation(line: 1889, column: 17, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !970, file: !13, line: 1889, column: 17)
!7604 = !DILocation(line: 1889, column: 19, scope: !7603)
!7605 = !DILocation(line: 1889, column: 17, scope: !970)
!7606 = !DILocation(line: 1890, column: 17, scope: !7603)
!7607 = !DILocation(line: 1891, column: 20, scope: !970)
!7608 = !DILocation(line: 1891, column: 18, scope: !970)
!7609 = !DILocation(line: 1892, column: 9, scope: !971)
!7610 = !DILocation(line: 1892, column: 9, scope: !7548)
!7611 = !DILocation(line: 1892, column: 9, scope: !970)
!7612 = !DILocation(line: 1893, column: 5, scope: !972)
!7613 = !DILocation(line: 1894, column: 9, scope: !983)
!7614 = !DILocation(line: 1894, column: 19, scope: !983)
!7615 = !DILocation(line: 1894, column: 9, scope: !910)
!7616 = !DILocation(line: 1895, column: 13, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !982, file: !13, line: 1895, column: 13)
!7618 = !DILocation(line: 1895, column: 20, scope: !7617)
!7619 = !DILocation(line: 1895, column: 13, scope: !982)
!7620 = !DILocation(line: 1896, column: 22, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7617, file: !13, line: 1895, column: 35)
!7622 = !DILocation(line: 1896, column: 20, scope: !7621)
!7623 = !DILocation(line: 1897, column: 17, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7621, file: !13, line: 1897, column: 17)
!7625 = !DILocation(line: 1897, column: 24, scope: !7624)
!7626 = !DILocation(line: 1897, column: 17, scope: !7621)
!7627 = !DILocation(line: 1898, column: 17, scope: !7624)
!7628 = !DILocation(line: 1899, column: 9, scope: !7621)
!7629 = !DILocation(line: 1900, column: 27, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !982, file: !13, line: 1900, column: 13)
!7631 = !DILocation(line: 1900, column: 35, scope: !7630)
!7632 = !DILocation(line: 1900, column: 13, scope: !7630)
!7633 = !DILocation(line: 1900, column: 46, scope: !7630)
!7634 = !DILocation(line: 1900, column: 13, scope: !982)
!7635 = !DILocation(line: 1901, column: 13, scope: !7630)
!7636 = !DILocation(line: 1902, column: 9, scope: !982)
!7637 = !DILocation(line: 1902, column: 14, scope: !7638)
!7638 = !DILexicalBlockFile(scope: !981, file: !13, discriminator: 1)
!7639 = !DILocation(line: 1902, column: 24, scope: !981)
!7640 = !DILocation(line: 1902, column: 47, scope: !981)
!7641 = !DILocation(line: 1902, column: 63, scope: !987)
!7642 = !DILocation(line: 1902, column: 71, scope: !987)
!7643 = !DILocation(line: 1902, column: 63, scope: !981)
!7644 = !DILocation(line: 1902, column: 100, scope: !7645)
!7645 = !DILexicalBlockFile(scope: !986, file: !13, discriminator: 2)
!7646 = !DILocation(line: 1902, column: 114, scope: !986)
!7647 = !DILocation(line: 1902, column: 119, scope: !7648)
!7648 = !DILexicalBlockFile(scope: !985, file: !13, discriminator: 4)
!7649 = !DILocation(line: 1902, column: 129, scope: !985)
!7650 = !DILocation(line: 1902, column: 159, scope: !985)
!7651 = !DILocation(line: 1902, column: 177, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !985, file: !13, line: 1902, column: 174)
!7653 = !DILocation(line: 1902, column: 194, scope: !7652)
!7654 = !DILocation(line: 1902, column: 174, scope: !7652)
!7655 = !DILocation(line: 1902, column: 204, scope: !7652)
!7656 = !DILocation(line: 1902, column: 174, scope: !985)
!7657 = !DILocation(line: 1902, column: 174, scope: !7658)
!7658 = !DILexicalBlockFile(scope: !985, file: !13, discriminator: 5)
!7659 = !DILocation(line: 1902, column: 235, scope: !7660)
!7660 = !DILexicalBlockFile(scope: !7652, file: !13, discriminator: 6)
!7661 = !DILocation(line: 1902, column: 253, scope: !7652)
!7662 = !DILocation(line: 1902, column: 263, scope: !7652)
!7663 = !DILocation(line: 1902, column: 288, scope: !7652)
!7664 = !DILocation(line: 1902, column: 219, scope: !7652)
!7665 = !DILocation(line: 1902, column: 307, scope: !7666)
!7666 = !DILexicalBlockFile(scope: !986, file: !13, discriminator: 7)
!7667 = !DILocation(line: 1902, column: 307, scope: !985)
!7668 = !DILocation(line: 1902, column: 307, scope: !7669)
!7669 = !DILexicalBlockFile(scope: !985, file: !13, discriminator: 8)
!7670 = !DILocation(line: 1902, column: 320, scope: !7671)
!7671 = !DILexicalBlockFile(scope: !986, file: !13, discriminator: 9)
!7672 = !DILocation(line: 1902, column: 322, scope: !7673)
!7673 = !DILexicalBlockFile(scope: !7674, file: !13, discriminator: 10)
!7674 = !DILexicalBlockFile(scope: !982, file: !13, discriminator: 3)
!7675 = !DILocation(line: 1902, column: 322, scope: !981)
!7676 = !DILocation(line: 1902, column: 322, scope: !7677)
!7677 = !DILexicalBlockFile(scope: !981, file: !13, discriminator: 11)
!7678 = !DILocation(line: 1903, column: 5, scope: !982)
!7679 = !DILocation(line: 1904, column: 9, scope: !993)
!7680 = !DILocation(line: 1904, column: 16, scope: !993)
!7681 = !DILocation(line: 1904, column: 9, scope: !910)
!7682 = !DILocation(line: 1905, column: 13, scope: !991)
!7683 = !DILocation(line: 1905, column: 18, scope: !991)
!7684 = !DILocation(line: 1905, column: 13, scope: !992)
!7685 = !DILocation(line: 1906, column: 31, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !990, file: !13, line: 1906, column: 17)
!7687 = !DILocation(line: 1906, column: 39, scope: !7686)
!7688 = !DILocation(line: 1906, column: 17, scope: !7686)
!7689 = !DILocation(line: 1906, column: 45, scope: !7686)
!7690 = !DILocation(line: 1906, column: 17, scope: !990)
!7691 = !DILocation(line: 1907, column: 17, scope: !7686)
!7692 = !DILocation(line: 1908, column: 13, scope: !990)
!7693 = !DILocation(line: 1908, column: 18, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !989, file: !13, discriminator: 1)
!7695 = !DILocation(line: 1908, column: 28, scope: !989)
!7696 = !DILocation(line: 1908, column: 58, scope: !989)
!7697 = !DILocation(line: 1908, column: 73, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !989, file: !13, line: 1908, column: 70)
!7699 = !DILocation(line: 1908, column: 90, scope: !7698)
!7700 = !DILocation(line: 1908, column: 70, scope: !7698)
!7701 = !DILocation(line: 1908, column: 100, scope: !7698)
!7702 = !DILocation(line: 1908, column: 70, scope: !989)
!7703 = !DILocation(line: 1908, column: 70, scope: !7704)
!7704 = !DILexicalBlockFile(scope: !989, file: !13, discriminator: 2)
!7705 = !DILocation(line: 1908, column: 131, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !7698, file: !13, discriminator: 3)
!7707 = !DILocation(line: 1908, column: 149, scope: !7698)
!7708 = !DILocation(line: 1908, column: 159, scope: !7698)
!7709 = !DILocation(line: 1908, column: 184, scope: !7698)
!7710 = !DILocation(line: 1908, column: 115, scope: !7698)
!7711 = !DILocation(line: 1908, column: 203, scope: !7712)
!7712 = !DILexicalBlockFile(scope: !990, file: !13, discriminator: 4)
!7713 = !DILocation(line: 1908, column: 203, scope: !989)
!7714 = !DILocation(line: 1908, column: 203, scope: !7715)
!7715 = !DILexicalBlockFile(scope: !989, file: !13, discriminator: 5)
!7716 = !DILocation(line: 1909, column: 9, scope: !990)
!7717 = !DILocation(line: 1910, column: 31, scope: !992)
!7718 = !DILocation(line: 1910, column: 48, scope: !992)
!7719 = !DILocation(line: 1910, column: 16, scope: !992)
!7720 = !DILocation(line: 1910, column: 14, scope: !992)
!7721 = !DILocation(line: 1911, column: 13, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !992, file: !13, line: 1911, column: 13)
!7723 = !DILocation(line: 1911, column: 18, scope: !7722)
!7724 = !DILocation(line: 1911, column: 13, scope: !992)
!7725 = !DILocation(line: 1912, column: 13, scope: !7722)
!7726 = !DILocation(line: 1913, column: 9, scope: !992)
!7727 = !DILocation(line: 1913, column: 14, scope: !7728)
!7728 = !DILexicalBlockFile(scope: !995, file: !13, discriminator: 1)
!7729 = !DILocation(line: 1913, column: 24, scope: !995)
!7730 = !DILocation(line: 1913, column: 47, scope: !995)
!7731 = !DILocation(line: 1913, column: 60, scope: !999)
!7732 = !DILocation(line: 1913, column: 68, scope: !999)
!7733 = !DILocation(line: 1913, column: 60, scope: !995)
!7734 = !DILocation(line: 1913, column: 94, scope: !7735)
!7735 = !DILexicalBlockFile(scope: !998, file: !13, discriminator: 2)
!7736 = !DILocation(line: 1913, column: 108, scope: !998)
!7737 = !DILocation(line: 1913, column: 113, scope: !7738)
!7738 = !DILexicalBlockFile(scope: !997, file: !13, discriminator: 4)
!7739 = !DILocation(line: 1913, column: 123, scope: !997)
!7740 = !DILocation(line: 1913, column: 153, scope: !997)
!7741 = !DILocation(line: 1913, column: 171, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !997, file: !13, line: 1913, column: 168)
!7743 = !DILocation(line: 1913, column: 188, scope: !7742)
!7744 = !DILocation(line: 1913, column: 168, scope: !7742)
!7745 = !DILocation(line: 1913, column: 198, scope: !7742)
!7746 = !DILocation(line: 1913, column: 168, scope: !997)
!7747 = !DILocation(line: 1913, column: 168, scope: !7748)
!7748 = !DILexicalBlockFile(scope: !997, file: !13, discriminator: 5)
!7749 = !DILocation(line: 1913, column: 229, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !7742, file: !13, discriminator: 6)
!7751 = !DILocation(line: 1913, column: 247, scope: !7742)
!7752 = !DILocation(line: 1913, column: 257, scope: !7742)
!7753 = !DILocation(line: 1913, column: 282, scope: !7742)
!7754 = !DILocation(line: 1913, column: 213, scope: !7742)
!7755 = !DILocation(line: 1913, column: 301, scope: !7756)
!7756 = !DILexicalBlockFile(scope: !998, file: !13, discriminator: 7)
!7757 = !DILocation(line: 1913, column: 301, scope: !997)
!7758 = !DILocation(line: 1913, column: 301, scope: !7759)
!7759 = !DILexicalBlockFile(scope: !997, file: !13, discriminator: 8)
!7760 = !DILocation(line: 1913, column: 314, scope: !7761)
!7761 = !DILexicalBlockFile(scope: !998, file: !13, discriminator: 9)
!7762 = !DILocation(line: 1913, column: 316, scope: !7763)
!7763 = !DILexicalBlockFile(scope: !7764, file: !13, discriminator: 10)
!7764 = !DILexicalBlockFile(scope: !992, file: !13, discriminator: 3)
!7765 = !DILocation(line: 1913, column: 316, scope: !995)
!7766 = !DILocation(line: 1913, column: 316, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !995, file: !13, discriminator: 11)
!7768 = !DILocation(line: 1914, column: 5, scope: !992)
!7769 = !DILocation(line: 1915, column: 9, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1915, column: 9)
!7771 = !DILocation(line: 1915, column: 14, scope: !7770)
!7772 = !DILocation(line: 1915, column: 9, scope: !910)
!7773 = !DILocation(line: 1916, column: 25, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7770, file: !13, line: 1915, column: 29)
!7775 = !DILocation(line: 1916, column: 44, scope: !7774)
!7776 = !DILocation(line: 1916, column: 53, scope: !7774)
!7777 = !DILocation(line: 1917, column: 16, scope: !7774)
!7778 = !DILocation(line: 1917, column: 14, scope: !7774)
!7779 = !DILocation(line: 1918, column: 5, scope: !7774)
!7780 = !DILocation(line: 1920, column: 12, scope: !910)
!7781 = !DILocation(line: 1920, column: 5, scope: !910)
!7782 = !DILocation(line: 1923, column: 5, scope: !910)
!7783 = !DILocation(line: 1923, column: 10, scope: !7784)
!7784 = !DILexicalBlockFile(scope: !1001, file: !13, discriminator: 1)
!7785 = !DILocation(line: 1923, column: 20, scope: !1001)
!7786 = !DILocation(line: 1923, column: 51, scope: !1001)
!7787 = !DILocation(line: 1923, column: 64, scope: !1004)
!7788 = !DILocation(line: 1923, column: 80, scope: !1004)
!7789 = !DILocation(line: 1923, column: 64, scope: !1001)
!7790 = !DILocation(line: 1923, column: 95, scope: !7791)
!7791 = !DILexicalBlockFile(scope: !1004, file: !13, discriminator: 2)
!7792 = !DILocation(line: 1923, column: 100, scope: !7793)
!7793 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 4)
!7794 = !DILocation(line: 1923, column: 110, scope: !1003)
!7795 = !DILocation(line: 1923, column: 140, scope: !1003)
!7796 = !DILocation(line: 1923, column: 166, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !1003, file: !13, line: 1923, column: 163)
!7798 = !DILocation(line: 1923, column: 183, scope: !7797)
!7799 = !DILocation(line: 1923, column: 163, scope: !7797)
!7800 = !DILocation(line: 1923, column: 193, scope: !7797)
!7801 = !DILocation(line: 1923, column: 163, scope: !1003)
!7802 = !DILocation(line: 1923, column: 163, scope: !7803)
!7803 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 5)
!7804 = !DILocation(line: 1923, column: 224, scope: !7805)
!7805 = !DILexicalBlockFile(scope: !7797, file: !13, discriminator: 6)
!7806 = !DILocation(line: 1923, column: 242, scope: !7797)
!7807 = !DILocation(line: 1923, column: 252, scope: !7797)
!7808 = !DILocation(line: 1923, column: 277, scope: !7797)
!7809 = !DILocation(line: 1923, column: 208, scope: !7797)
!7810 = !DILocation(line: 1923, column: 296, scope: !7811)
!7811 = !DILexicalBlockFile(scope: !1004, file: !13, discriminator: 7)
!7812 = !DILocation(line: 1923, column: 296, scope: !1003)
!7813 = !DILocation(line: 1923, column: 296, scope: !7814)
!7814 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 8)
!7815 = !DILocation(line: 1923, column: 296, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 9)
!7817 = !DILocation(line: 1923, column: 309, scope: !7818)
!7818 = !DILexicalBlockFile(scope: !7819, file: !13, discriminator: 10)
!7819 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 3)
!7820 = !DILocation(line: 1923, column: 309, scope: !1001)
!7821 = !DILocation(line: 1923, column: 309, scope: !7822)
!7822 = !DILexicalBlockFile(scope: !1001, file: !13, discriminator: 11)
!7823 = !DILocation(line: 1924, column: 5, scope: !910)
!7824 = !DILocation(line: 1924, column: 10, scope: !7825)
!7825 = !DILexicalBlockFile(scope: !1006, file: !13, discriminator: 1)
!7826 = !DILocation(line: 1924, column: 20, scope: !1006)
!7827 = !DILocation(line: 1924, column: 51, scope: !1006)
!7828 = !DILocation(line: 1924, column: 67, scope: !1009)
!7829 = !DILocation(line: 1924, column: 83, scope: !1009)
!7830 = !DILocation(line: 1924, column: 67, scope: !1006)
!7831 = !DILocation(line: 1924, column: 98, scope: !7832)
!7832 = !DILexicalBlockFile(scope: !1009, file: !13, discriminator: 2)
!7833 = !DILocation(line: 1924, column: 103, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 4)
!7835 = !DILocation(line: 1924, column: 113, scope: !1008)
!7836 = !DILocation(line: 1924, column: 143, scope: !1008)
!7837 = !DILocation(line: 1924, column: 169, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !1008, file: !13, line: 1924, column: 166)
!7839 = !DILocation(line: 1924, column: 186, scope: !7838)
!7840 = !DILocation(line: 1924, column: 166, scope: !7838)
!7841 = !DILocation(line: 1924, column: 196, scope: !7838)
!7842 = !DILocation(line: 1924, column: 166, scope: !1008)
!7843 = !DILocation(line: 1924, column: 166, scope: !7844)
!7844 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 5)
!7845 = !DILocation(line: 1924, column: 227, scope: !7846)
!7846 = !DILexicalBlockFile(scope: !7838, file: !13, discriminator: 6)
!7847 = !DILocation(line: 1924, column: 245, scope: !7838)
!7848 = !DILocation(line: 1924, column: 255, scope: !7838)
!7849 = !DILocation(line: 1924, column: 280, scope: !7838)
!7850 = !DILocation(line: 1924, column: 211, scope: !7838)
!7851 = !DILocation(line: 1924, column: 299, scope: !7852)
!7852 = !DILexicalBlockFile(scope: !1009, file: !13, discriminator: 7)
!7853 = !DILocation(line: 1924, column: 299, scope: !1008)
!7854 = !DILocation(line: 1924, column: 299, scope: !7855)
!7855 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 8)
!7856 = !DILocation(line: 1924, column: 299, scope: !7857)
!7857 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 9)
!7858 = !DILocation(line: 1924, column: 312, scope: !7818)
!7859 = !DILocation(line: 1924, column: 312, scope: !1006)
!7860 = !DILocation(line: 1924, column: 312, scope: !7861)
!7861 = !DILexicalBlockFile(scope: !1006, file: !13, discriminator: 11)
!7862 = !DILocation(line: 1925, column: 5, scope: !910)
!7863 = !DILocation(line: 1925, column: 10, scope: !7864)
!7864 = !DILexicalBlockFile(scope: !1011, file: !13, discriminator: 1)
!7865 = !DILocation(line: 1925, column: 20, scope: !1011)
!7866 = !DILocation(line: 1925, column: 51, scope: !1011)
!7867 = !DILocation(line: 1925, column: 62, scope: !1014)
!7868 = !DILocation(line: 1925, column: 78, scope: !1014)
!7869 = !DILocation(line: 1925, column: 62, scope: !1011)
!7870 = !DILocation(line: 1925, column: 93, scope: !7871)
!7871 = !DILexicalBlockFile(scope: !1014, file: !13, discriminator: 2)
!7872 = !DILocation(line: 1925, column: 98, scope: !7873)
!7873 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 4)
!7874 = !DILocation(line: 1925, column: 108, scope: !1013)
!7875 = !DILocation(line: 1925, column: 138, scope: !1013)
!7876 = !DILocation(line: 1925, column: 164, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !1013, file: !13, line: 1925, column: 161)
!7878 = !DILocation(line: 1925, column: 181, scope: !7877)
!7879 = !DILocation(line: 1925, column: 161, scope: !7877)
!7880 = !DILocation(line: 1925, column: 191, scope: !7877)
!7881 = !DILocation(line: 1925, column: 161, scope: !1013)
!7882 = !DILocation(line: 1925, column: 161, scope: !7883)
!7883 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 5)
!7884 = !DILocation(line: 1925, column: 222, scope: !7885)
!7885 = !DILexicalBlockFile(scope: !7877, file: !13, discriminator: 6)
!7886 = !DILocation(line: 1925, column: 240, scope: !7877)
!7887 = !DILocation(line: 1925, column: 250, scope: !7877)
!7888 = !DILocation(line: 1925, column: 275, scope: !7877)
!7889 = !DILocation(line: 1925, column: 206, scope: !7877)
!7890 = !DILocation(line: 1925, column: 294, scope: !7891)
!7891 = !DILexicalBlockFile(scope: !1014, file: !13, discriminator: 7)
!7892 = !DILocation(line: 1925, column: 294, scope: !1013)
!7893 = !DILocation(line: 1925, column: 294, scope: !7894)
!7894 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 8)
!7895 = !DILocation(line: 1925, column: 294, scope: !7896)
!7896 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 9)
!7897 = !DILocation(line: 1925, column: 307, scope: !7818)
!7898 = !DILocation(line: 1925, column: 307, scope: !1011)
!7899 = !DILocation(line: 1925, column: 307, scope: !7900)
!7900 = !DILexicalBlockFile(scope: !1011, file: !13, discriminator: 11)
!7901 = !DILocation(line: 1926, column: 5, scope: !910)
!7902 = !DILocation(line: 1927, column: 1, scope: !910)
!7903 = !DILocation(line: 2675, column: 34, scope: !1015)
!7904 = !DILocation(line: 2675, column: 46, scope: !1015)
!7905 = !DILocation(line: 2677, column: 9, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !1015, file: !13, line: 2677, column: 9)
!7907 = !DILocation(line: 2677, column: 15, scope: !7906)
!7908 = !DILocation(line: 2677, column: 18, scope: !7906)
!7909 = !DILocation(line: 2677, column: 9, scope: !1015)
!7910 = !DILocation(line: 2677, column: 30, scope: !7911)
!7911 = !DILexicalBlockFile(scope: !7912, file: !13, discriminator: 1)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !13, line: 2677, column: 30)
!7913 = distinct !DILexicalBlock(scope: !7906, file: !13, line: 2677, column: 24)
!7914 = !DILocation(line: 2677, column: 36, scope: !7912)
!7915 = !DILocation(line: 2677, column: 30, scope: !7912)
!7916 = !DILocation(line: 2677, column: 30, scope: !7913)
!7917 = !DILocation(line: 2677, column: 64, scope: !7918)
!7918 = !DILexicalBlockFile(scope: !7919, file: !13, discriminator: 2)
!7919 = distinct !DILexicalBlock(scope: !7912, file: !13, line: 2677, column: 46)
!7920 = !DILocation(line: 2677, column: 48, scope: !7919)
!7921 = !DILocation(line: 2677, column: 122, scope: !7919)
!7922 = !DILocation(line: 2677, column: 147, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !7924, file: !13, discriminator: 3)
!7924 = distinct !DILexicalBlock(scope: !7912, file: !13, line: 2677, column: 129)
!7925 = !DILocation(line: 2677, column: 131, scope: !7924)
!7926 = !DILocation(line: 2677, column: 209, scope: !7927)
!7927 = !DILexicalBlockFile(scope: !7913, file: !13, discriminator: 4)
!7928 = !DILocation(line: 2678, column: 29, scope: !1015)
!7929 = !DILocation(line: 2678, column: 35, scope: !1015)
!7930 = !DILocation(line: 2678, column: 43, scope: !1015)
!7931 = !DILocation(line: 2678, column: 12, scope: !1015)
!7932 = !DILocation(line: 2678, column: 5, scope: !1015)
!7933 = !DILocation(line: 2679, column: 1, scope: !1015)
!7934 = !DILocation(line: 1264, column: 35, scope: !1021)
!7935 = !DILocation(line: 1266, column: 5, scope: !1021)
!7936 = !DILocation(line: 1266, column: 15, scope: !1021)
!7937 = !DILocation(line: 1266, column: 25, scope: !1021)
!7938 = !DILocation(line: 1266, column: 29, scope: !1021)
!7939 = !DILocation(line: 1268, column: 9, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1268, column: 9)
!7941 = !DILocation(line: 1268, column: 15, scope: !7940)
!7942 = !DILocation(line: 1268, column: 29, scope: !7940)
!7943 = !DILocation(line: 1268, column: 9, scope: !1021)
!7944 = !DILocation(line: 1269, column: 9, scope: !7940)
!7945 = !DILocation(line: 1271, column: 15, scope: !1021)
!7946 = !DILocation(line: 1271, column: 21, scope: !1021)
!7947 = !DILocation(line: 1271, column: 13, scope: !1021)
!7948 = !DILocation(line: 1272, column: 21, scope: !1021)
!7949 = !DILocation(line: 1272, column: 32, scope: !1021)
!7950 = !DILocation(line: 1272, column: 41, scope: !1021)
!7951 = !DILocation(line: 1273, column: 5, scope: !1021)
!7952 = !DILocation(line: 1273, column: 11, scope: !1021)
!7953 = !DILocation(line: 1273, column: 31, scope: !1021)
!7954 = !DILocation(line: 1274, column: 5, scope: !1021)
!7955 = !DILocation(line: 1274, column: 10, scope: !7956)
!7956 = !DILexicalBlockFile(scope: !1028, file: !13, discriminator: 1)
!7957 = !DILocation(line: 1274, column: 20, scope: !1028)
!7958 = !DILocation(line: 1274, column: 43, scope: !1028)
!7959 = !DILocation(line: 1274, column: 49, scope: !1028)
!7960 = !DILocation(line: 1274, column: 69, scope: !1032)
!7961 = !DILocation(line: 1274, column: 77, scope: !1032)
!7962 = !DILocation(line: 1274, column: 69, scope: !1028)
!7963 = !DILocation(line: 1274, column: 95, scope: !7964)
!7964 = !DILexicalBlockFile(scope: !1031, file: !13, discriminator: 2)
!7965 = !DILocation(line: 1274, column: 101, scope: !1031)
!7966 = !DILocation(line: 1274, column: 116, scope: !1031)
!7967 = !DILocation(line: 1274, column: 130, scope: !1031)
!7968 = !DILocation(line: 1274, column: 135, scope: !7969)
!7969 = !DILexicalBlockFile(scope: !1030, file: !13, discriminator: 4)
!7970 = !DILocation(line: 1274, column: 145, scope: !1030)
!7971 = !DILocation(line: 1274, column: 175, scope: !1030)
!7972 = !DILocation(line: 1274, column: 193, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !1030, file: !13, line: 1274, column: 190)
!7974 = !DILocation(line: 1274, column: 210, scope: !7973)
!7975 = !DILocation(line: 1274, column: 190, scope: !7973)
!7976 = !DILocation(line: 1274, column: 220, scope: !7973)
!7977 = !DILocation(line: 1274, column: 190, scope: !1030)
!7978 = !DILocation(line: 1274, column: 190, scope: !7979)
!7979 = !DILexicalBlockFile(scope: !1030, file: !13, discriminator: 5)
!7980 = !DILocation(line: 1274, column: 251, scope: !7981)
!7981 = !DILexicalBlockFile(scope: !7973, file: !13, discriminator: 6)
!7982 = !DILocation(line: 1274, column: 269, scope: !7973)
!7983 = !DILocation(line: 1274, column: 279, scope: !7973)
!7984 = !DILocation(line: 1274, column: 304, scope: !7973)
!7985 = !DILocation(line: 1274, column: 235, scope: !7973)
!7986 = !DILocation(line: 1274, column: 323, scope: !7987)
!7987 = !DILexicalBlockFile(scope: !1031, file: !13, discriminator: 7)
!7988 = !DILocation(line: 1274, column: 323, scope: !1030)
!7989 = !DILocation(line: 1274, column: 323, scope: !7990)
!7990 = !DILexicalBlockFile(scope: !1030, file: !13, discriminator: 8)
!7991 = !DILocation(line: 1274, column: 336, scope: !7992)
!7992 = !DILexicalBlockFile(scope: !1031, file: !13, discriminator: 9)
!7993 = !DILocation(line: 1274, column: 338, scope: !7994)
!7994 = !DILexicalBlockFile(scope: !7995, file: !13, discriminator: 10)
!7995 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 3)
!7996 = !DILocation(line: 1274, column: 338, scope: !1028)
!7997 = !DILocation(line: 1274, column: 338, scope: !7998)
!7998 = !DILexicalBlockFile(scope: !1028, file: !13, discriminator: 11)
!7999 = !DILocation(line: 1276, column: 23, scope: !1021)
!8000 = !DILocation(line: 1276, column: 42, scope: !1021)
!8001 = !DILocation(line: 1276, column: 9, scope: !1021)
!8002 = !DILocation(line: 1276, column: 7, scope: !1021)
!8003 = !DILocation(line: 1277, column: 5, scope: !1021)
!8004 = !DILocation(line: 1277, column: 10, scope: !8005)
!8005 = !DILexicalBlockFile(scope: !1034, file: !13, discriminator: 1)
!8006 = !DILocation(line: 1277, column: 20, scope: !1034)
!8007 = !DILocation(line: 1277, column: 50, scope: !1034)
!8008 = !DILocation(line: 1277, column: 68, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !1034, file: !13, line: 1277, column: 65)
!8010 = !DILocation(line: 1277, column: 85, scope: !8009)
!8011 = !DILocation(line: 1277, column: 65, scope: !8009)
!8012 = !DILocation(line: 1277, column: 95, scope: !8009)
!8013 = !DILocation(line: 1277, column: 65, scope: !1034)
!8014 = !DILocation(line: 1277, column: 65, scope: !8015)
!8015 = !DILexicalBlockFile(scope: !1034, file: !13, discriminator: 2)
!8016 = !DILocation(line: 1277, column: 126, scope: !8017)
!8017 = !DILexicalBlockFile(scope: !8009, file: !13, discriminator: 3)
!8018 = !DILocation(line: 1277, column: 144, scope: !8009)
!8019 = !DILocation(line: 1277, column: 154, scope: !8009)
!8020 = !DILocation(line: 1277, column: 179, scope: !8009)
!8021 = !DILocation(line: 1277, column: 110, scope: !8009)
!8022 = !DILocation(line: 1277, column: 198, scope: !8023)
!8023 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 4)
!8024 = !DILocation(line: 1277, column: 198, scope: !1034)
!8025 = !DILocation(line: 1277, column: 198, scope: !8026)
!8026 = !DILexicalBlockFile(scope: !1034, file: !13, discriminator: 5)
!8027 = !DILocation(line: 1278, column: 9, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1278, column: 9)
!8029 = !DILocation(line: 1278, column: 11, scope: !8028)
!8030 = !DILocation(line: 1278, column: 9, scope: !1021)
!8031 = !DILocation(line: 1279, column: 9, scope: !8028)
!8032 = !DILocation(line: 1280, column: 9, scope: !1021)
!8033 = !DILocation(line: 1281, column: 5, scope: !1021)
!8034 = !DILocation(line: 1282, column: 42, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1281, column: 8)
!8036 = !DILocation(line: 1282, column: 48, scope: !8035)
!8037 = !DILocation(line: 1283, column: 42, scope: !8035)
!8038 = !DILocation(line: 1283, column: 59, scope: !8035)
!8039 = !DILocation(line: 1282, column: 15, scope: !8035)
!8040 = !DILocation(line: 1282, column: 13, scope: !8035)
!8041 = !DILocation(line: 1284, column: 5, scope: !8035)
!8042 = !DILocation(line: 1284, column: 14, scope: !8043)
!8043 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 1)
!8044 = !DILocation(line: 1284, column: 18, scope: !1021)
!8045 = !DILocation(line: 1284, column: 32, scope: !1021)
!8046 = !DILocation(line: 1284, column: 35, scope: !8047)
!8047 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 2)
!8048 = !DILocation(line: 1284, column: 5, scope: !8049)
!8049 = !DILexicalBlockFile(scope: !8035, file: !13, discriminator: 3)
!8050 = !DILocation(line: 1285, column: 5, scope: !1021)
!8051 = !DILocation(line: 1285, column: 10, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !1036, file: !13, discriminator: 1)
!8053 = !DILocation(line: 1285, column: 20, scope: !1036)
!8054 = !DILocation(line: 1285, column: 50, scope: !1036)
!8055 = !DILocation(line: 1285, column: 62, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !1036, file: !13, line: 1285, column: 59)
!8057 = !DILocation(line: 1285, column: 79, scope: !8056)
!8058 = !DILocation(line: 1285, column: 59, scope: !8056)
!8059 = !DILocation(line: 1285, column: 89, scope: !8056)
!8060 = !DILocation(line: 1285, column: 59, scope: !1036)
!8061 = !DILocation(line: 1285, column: 59, scope: !8062)
!8062 = !DILexicalBlockFile(scope: !1036, file: !13, discriminator: 2)
!8063 = !DILocation(line: 1285, column: 120, scope: !8064)
!8064 = !DILexicalBlockFile(scope: !8056, file: !13, discriminator: 3)
!8065 = !DILocation(line: 1285, column: 138, scope: !8056)
!8066 = !DILocation(line: 1285, column: 148, scope: !8056)
!8067 = !DILocation(line: 1285, column: 173, scope: !8056)
!8068 = !DILocation(line: 1285, column: 104, scope: !8056)
!8069 = !DILocation(line: 1285, column: 192, scope: !8023)
!8070 = !DILocation(line: 1285, column: 192, scope: !1036)
!8071 = !DILocation(line: 1285, column: 192, scope: !8072)
!8072 = !DILexicalBlockFile(scope: !1036, file: !13, discriminator: 5)
!8073 = !DILocation(line: 1286, column: 9, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1286, column: 9)
!8075 = !DILocation(line: 1286, column: 13, scope: !8074)
!8076 = !DILocation(line: 1286, column: 9, scope: !1021)
!8077 = !DILocation(line: 1287, column: 9, scope: !8074)
!8078 = !DILocation(line: 1288, column: 5, scope: !1021)
!8079 = !DILocation(line: 1288, column: 10, scope: !8080)
!8080 = !DILexicalBlockFile(scope: !1038, file: !13, discriminator: 1)
!8081 = !DILocation(line: 1288, column: 20, scope: !1038)
!8082 = !DILocation(line: 1288, column: 50, scope: !1038)
!8083 = !DILocation(line: 1288, column: 64, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !1038, file: !13, line: 1288, column: 61)
!8085 = !DILocation(line: 1288, column: 81, scope: !8084)
!8086 = !DILocation(line: 1288, column: 61, scope: !8084)
!8087 = !DILocation(line: 1288, column: 91, scope: !8084)
!8088 = !DILocation(line: 1288, column: 61, scope: !1038)
!8089 = !DILocation(line: 1288, column: 61, scope: !8090)
!8090 = !DILexicalBlockFile(scope: !1038, file: !13, discriminator: 2)
!8091 = !DILocation(line: 1288, column: 122, scope: !8092)
!8092 = !DILexicalBlockFile(scope: !8084, file: !13, discriminator: 3)
!8093 = !DILocation(line: 1288, column: 140, scope: !8084)
!8094 = !DILocation(line: 1288, column: 150, scope: !8084)
!8095 = !DILocation(line: 1288, column: 175, scope: !8084)
!8096 = !DILocation(line: 1288, column: 106, scope: !8084)
!8097 = !DILocation(line: 1288, column: 194, scope: !8023)
!8098 = !DILocation(line: 1288, column: 194, scope: !1038)
!8099 = !DILocation(line: 1288, column: 194, scope: !8100)
!8100 = !DILexicalBlockFile(scope: !1038, file: !13, discriminator: 5)
!8101 = !DILocation(line: 1289, column: 5, scope: !1021)
!8102 = !DILocation(line: 1290, column: 1, scope: !1021)
!8103 = !DILocation(line: 1438, column: 34, scope: !1039)
!8104 = !DILocation(line: 1438, column: 51, scope: !1039)
!8105 = !DILocation(line: 1440, column: 5, scope: !1039)
!8106 = !DILocation(line: 1440, column: 15, scope: !1039)
!8107 = !DILocation(line: 1441, column: 5, scope: !1039)
!8108 = !DILocation(line: 1441, column: 15, scope: !1039)
!8109 = !DILocation(line: 1442, column: 5, scope: !1039)
!8110 = !DILocation(line: 1442, column: 15, scope: !1039)
!8111 = !DILocation(line: 1443, column: 5, scope: !1039)
!8112 = !DILocation(line: 1443, column: 15, scope: !1039)
!8113 = !DILocation(line: 1443, column: 31, scope: !1039)
!8114 = !DILocation(line: 1444, column: 5, scope: !1039)
!8115 = !DILocation(line: 1444, column: 16, scope: !1039)
!8116 = !DILocation(line: 1444, column: 24, scope: !1039)
!8117 = !DILocation(line: 1445, column: 5, scope: !1039)
!8118 = !DILocation(line: 1445, column: 9, scope: !1039)
!8119 = !DILocation(line: 1453, column: 9, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1453, column: 9)
!8121 = !DILocation(line: 1453, column: 15, scope: !8120)
!8122 = !DILocation(line: 1453, column: 23, scope: !8120)
!8123 = !DILocation(line: 1453, column: 9, scope: !1039)
!8124 = !DILocation(line: 1454, column: 9, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8120, file: !13, line: 1453, column: 38)
!8126 = !DILocation(line: 1455, column: 9, scope: !8125)
!8127 = !DILocation(line: 1458, column: 9, scope: !1055)
!8128 = !DILocation(line: 1458, column: 15, scope: !1055)
!8129 = !DILocation(line: 1458, column: 9, scope: !1039)
!8130 = !DILocation(line: 1463, column: 9, scope: !1054)
!8131 = !DILocation(line: 1463, column: 19, scope: !1054)
!8132 = !DILocation(line: 1463, column: 54, scope: !1054)
!8133 = !DILocation(line: 1463, column: 60, scope: !1054)
!8134 = !DILocation(line: 1464, column: 54, scope: !1054)
!8135 = !DILocation(line: 1463, column: 27, scope: !1054)
!8136 = !DILocation(line: 1465, column: 13, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !1054, file: !13, line: 1465, column: 13)
!8138 = !DILocation(line: 1465, column: 19, scope: !8137)
!8139 = !DILocation(line: 1465, column: 13, scope: !1054)
!8140 = !DILocation(line: 1466, column: 13, scope: !8137)
!8141 = !DILocation(line: 1470, column: 32, scope: !1059)
!8142 = !DILocation(line: 1470, column: 13, scope: !1059)
!8143 = !DILocation(line: 1470, column: 72, scope: !1059)
!8144 = !DILocation(line: 1470, column: 13, scope: !1054)
!8145 = !DILocation(line: 1471, column: 13, scope: !1058)
!8146 = !DILocation(line: 1471, column: 18, scope: !8147)
!8147 = !DILexicalBlockFile(scope: !1057, file: !13, discriminator: 1)
!8148 = !DILocation(line: 1471, column: 28, scope: !1057)
!8149 = !DILocation(line: 1471, column: 58, scope: !1057)
!8150 = !DILocation(line: 1471, column: 74, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !1057, file: !13, line: 1471, column: 71)
!8152 = !DILocation(line: 1471, column: 91, scope: !8151)
!8153 = !DILocation(line: 1471, column: 71, scope: !8151)
!8154 = !DILocation(line: 1471, column: 101, scope: !8151)
!8155 = !DILocation(line: 1471, column: 71, scope: !1057)
!8156 = !DILocation(line: 1471, column: 71, scope: !8157)
!8157 = !DILexicalBlockFile(scope: !1057, file: !13, discriminator: 2)
!8158 = !DILocation(line: 1471, column: 132, scope: !8159)
!8159 = !DILexicalBlockFile(scope: !8151, file: !13, discriminator: 3)
!8160 = !DILocation(line: 1471, column: 150, scope: !8151)
!8161 = !DILocation(line: 1471, column: 160, scope: !8151)
!8162 = !DILocation(line: 1471, column: 185, scope: !8151)
!8163 = !DILocation(line: 1471, column: 116, scope: !8151)
!8164 = !DILocation(line: 1471, column: 204, scope: !8165)
!8165 = !DILexicalBlockFile(scope: !1058, file: !13, discriminator: 4)
!8166 = !DILocation(line: 1471, column: 204, scope: !1057)
!8167 = !DILocation(line: 1471, column: 204, scope: !8168)
!8168 = !DILexicalBlockFile(scope: !1057, file: !13, discriminator: 5)
!8169 = !DILocation(line: 1472, column: 13, scope: !1058)
!8170 = !DILocation(line: 1474, column: 25, scope: !1054)
!8171 = !DILocation(line: 1474, column: 39, scope: !1054)
!8172 = !DILocation(line: 1474, column: 48, scope: !1054)
!8173 = !DILocation(line: 1475, column: 25, scope: !1054)
!8174 = !DILocation(line: 1475, column: 38, scope: !1054)
!8175 = !DILocation(line: 1475, column: 47, scope: !1054)
!8176 = !DILocation(line: 1476, column: 9, scope: !1054)
!8177 = !DILocation(line: 1476, column: 14, scope: !8178)
!8178 = !DILexicalBlockFile(scope: !1061, file: !13, discriminator: 1)
!8179 = !DILocation(line: 1476, column: 24, scope: !1061)
!8180 = !DILocation(line: 1476, column: 54, scope: !1061)
!8181 = !DILocation(line: 1476, column: 70, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !1061, file: !13, line: 1476, column: 67)
!8183 = !DILocation(line: 1476, column: 87, scope: !8182)
!8184 = !DILocation(line: 1476, column: 67, scope: !8182)
!8185 = !DILocation(line: 1476, column: 97, scope: !8182)
!8186 = !DILocation(line: 1476, column: 67, scope: !1061)
!8187 = !DILocation(line: 1476, column: 67, scope: !8188)
!8188 = !DILexicalBlockFile(scope: !1061, file: !13, discriminator: 2)
!8189 = !DILocation(line: 1476, column: 128, scope: !8190)
!8190 = !DILexicalBlockFile(scope: !8182, file: !13, discriminator: 3)
!8191 = !DILocation(line: 1476, column: 146, scope: !8182)
!8192 = !DILocation(line: 1476, column: 156, scope: !8182)
!8193 = !DILocation(line: 1476, column: 181, scope: !8182)
!8194 = !DILocation(line: 1476, column: 112, scope: !8182)
!8195 = !DILocation(line: 1476, column: 200, scope: !8196)
!8196 = !DILexicalBlockFile(scope: !1054, file: !13, discriminator: 4)
!8197 = !DILocation(line: 1476, column: 200, scope: !1061)
!8198 = !DILocation(line: 1476, column: 200, scope: !8199)
!8199 = !DILexicalBlockFile(scope: !1061, file: !13, discriminator: 5)
!8200 = !DILocation(line: 1477, column: 5, scope: !1055)
!8201 = !DILocation(line: 1477, column: 5, scope: !8202)
!8202 = !DILexicalBlockFile(scope: !1055, file: !13, discriminator: 1)
!8203 = !DILocation(line: 1477, column: 5, scope: !1054)
!8204 = !DILocation(line: 1480, column: 9, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1480, column: 9)
!8206 = !DILocation(line: 1480, column: 19, scope: !8205)
!8207 = !DILocation(line: 1480, column: 9, scope: !1039)
!8208 = !DILocation(line: 1481, column: 37, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8205, file: !13, line: 1480, column: 24)
!8210 = !DILocation(line: 1481, column: 43, scope: !8209)
!8211 = !DILocation(line: 1481, column: 53, scope: !8209)
!8212 = !DILocation(line: 1481, column: 35, scope: !8209)
!8213 = !DILocation(line: 1481, column: 65, scope: !8214)
!8214 = !DILexicalBlockFile(scope: !8209, file: !13, discriminator: 1)
!8215 = !DILocation(line: 1481, column: 71, scope: !8209)
!8216 = !DILocation(line: 1481, column: 35, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !8209, file: !13, discriminator: 2)
!8218 = !DILocation(line: 1481, column: 92, scope: !8219)
!8219 = !DILexicalBlockFile(scope: !8220, file: !13, discriminator: 4)
!8220 = !DILexicalBlockFile(scope: !8209, file: !13, discriminator: 3)
!8221 = !DILocation(line: 1481, column: 90, scope: !8209)
!8222 = !DILocation(line: 1481, column: 21, scope: !8209)
!8223 = !DILocation(line: 1481, column: 19, scope: !8209)
!8224 = !DILocation(line: 1482, column: 5, scope: !8209)
!8225 = !DILocation(line: 1483, column: 40, scope: !1039)
!8226 = !DILocation(line: 1483, column: 46, scope: !1039)
!8227 = !DILocation(line: 1483, column: 61, scope: !1039)
!8228 = !DILocation(line: 1483, column: 58, scope: !1039)
!8229 = !DILocation(line: 1483, column: 38, scope: !1039)
!8230 = !DILocation(line: 1483, column: 76, scope: !8231)
!8231 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 1)
!8232 = !DILocation(line: 1483, column: 82, scope: !1039)
!8233 = !DILocation(line: 1483, column: 97, scope: !8234)
!8234 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 2)
!8235 = !DILocation(line: 1483, column: 18, scope: !8236)
!8236 = !DILexicalBlockFile(scope: !8237, file: !13, discriminator: 4)
!8237 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 3)
!8238 = !DILocation(line: 1483, column: 16, scope: !1039)
!8239 = !DILocation(line: 1484, column: 9, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1484, column: 9)
!8241 = !DILocation(line: 1484, column: 20, scope: !8240)
!8242 = !DILocation(line: 1484, column: 9, scope: !1039)
!8243 = !DILocation(line: 1485, column: 9, scope: !8240)
!8244 = !DILocation(line: 1486, column: 46, scope: !1039)
!8245 = !DILocation(line: 1486, column: 52, scope: !1039)
!8246 = !DILocation(line: 1487, column: 10, scope: !1039)
!8247 = !DILocation(line: 1487, column: 16, scope: !1039)
!8248 = !DILocation(line: 1487, column: 28, scope: !8231)
!8249 = !DILocation(line: 1487, column: 45, scope: !8234)
!8250 = !DILocation(line: 1488, column: 9, scope: !1039)
!8251 = !DILocation(line: 1486, column: 19, scope: !1039)
!8252 = !DILocation(line: 1486, column: 17, scope: !1039)
!8253 = !DILocation(line: 1489, column: 5, scope: !1039)
!8254 = !DILocation(line: 1489, column: 10, scope: !8255)
!8255 = !DILexicalBlockFile(scope: !1063, file: !13, discriminator: 1)
!8256 = !DILocation(line: 1489, column: 20, scope: !1063)
!8257 = !DILocation(line: 1489, column: 50, scope: !1063)
!8258 = !DILocation(line: 1489, column: 71, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !1063, file: !13, line: 1489, column: 68)
!8260 = !DILocation(line: 1489, column: 88, scope: !8259)
!8261 = !DILocation(line: 1489, column: 68, scope: !8259)
!8262 = !DILocation(line: 1489, column: 98, scope: !8259)
!8263 = !DILocation(line: 1489, column: 68, scope: !1063)
!8264 = !DILocation(line: 1489, column: 68, scope: !8265)
!8265 = !DILexicalBlockFile(scope: !1063, file: !13, discriminator: 2)
!8266 = !DILocation(line: 1489, column: 129, scope: !8267)
!8267 = !DILexicalBlockFile(scope: !8259, file: !13, discriminator: 3)
!8268 = !DILocation(line: 1489, column: 147, scope: !8259)
!8269 = !DILocation(line: 1489, column: 157, scope: !8259)
!8270 = !DILocation(line: 1489, column: 182, scope: !8259)
!8271 = !DILocation(line: 1489, column: 113, scope: !8259)
!8272 = !DILocation(line: 1489, column: 201, scope: !8273)
!8273 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 4)
!8274 = !DILocation(line: 1489, column: 201, scope: !1063)
!8275 = !DILocation(line: 1489, column: 201, scope: !8276)
!8276 = !DILexicalBlockFile(scope: !1063, file: !13, discriminator: 5)
!8277 = !DILocation(line: 1490, column: 9, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1490, column: 9)
!8279 = !DILocation(line: 1490, column: 21, scope: !8278)
!8280 = !DILocation(line: 1490, column: 9, scope: !1039)
!8281 = !DILocation(line: 1491, column: 9, scope: !8278)
!8282 = !DILocation(line: 1492, column: 27, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1492, column: 9)
!8284 = !DILocation(line: 1492, column: 42, scope: !8283)
!8285 = !DILocation(line: 1492, column: 53, scope: !8283)
!8286 = !DILocation(line: 1492, column: 62, scope: !8283)
!8287 = !DILocation(line: 1492, column: 79, scope: !8283)
!8288 = !DILocation(line: 1492, column: 9, scope: !1039)
!8289 = !DILocation(line: 1493, column: 22, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8283, file: !13, line: 1492, column: 86)
!8291 = !DILocation(line: 1495, column: 39, scope: !8290)
!8292 = !DILocation(line: 1495, column: 45, scope: !8290)
!8293 = !DILocation(line: 1496, column: 36, scope: !8290)
!8294 = !DILocation(line: 1496, column: 51, scope: !8290)
!8295 = !DILocation(line: 1496, column: 61, scope: !8290)
!8296 = !DILocation(line: 1493, column: 9, scope: !8290)
!8297 = !DILocation(line: 1497, column: 9, scope: !8290)
!8298 = !DILocation(line: 1500, column: 27, scope: !1039)
!8299 = !DILocation(line: 1500, column: 14, scope: !1039)
!8300 = !DILocation(line: 1500, column: 12, scope: !1039)
!8301 = !DILocation(line: 1501, column: 12, scope: !1039)
!8302 = !DILocation(line: 1501, column: 19, scope: !1039)
!8303 = !DILocation(line: 1501, column: 9, scope: !1039)
!8304 = !DILocation(line: 1503, column: 23, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1503, column: 9)
!8306 = !DILocation(line: 1503, column: 29, scope: !8305)
!8307 = !DILocation(line: 1503, column: 40, scope: !8305)
!8308 = !DILocation(line: 1503, column: 49, scope: !8305)
!8309 = !DILocation(line: 1503, column: 9, scope: !1039)
!8310 = !DILocation(line: 1505, column: 13, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8305, file: !13, line: 1503, column: 87)
!8312 = !DILocation(line: 1505, column: 19, scope: !8311)
!8313 = !DILocation(line: 1505, column: 28, scope: !8311)
!8314 = !DILocation(line: 1505, column: 41, scope: !8311)
!8315 = !DILocation(line: 1504, column: 25, scope: !8311)
!8316 = !DILocation(line: 1504, column: 23, scope: !8311)
!8317 = !DILocation(line: 1506, column: 5, scope: !8311)
!8318 = !DILocation(line: 1508, column: 52, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8305, file: !13, line: 1507, column: 10)
!8320 = !DILocation(line: 1508, column: 58, scope: !8319)
!8321 = !DILocation(line: 1509, column: 13, scope: !8319)
!8322 = !DILocation(line: 1509, column: 31, scope: !8319)
!8323 = !DILocation(line: 1509, column: 44, scope: !8319)
!8324 = !DILocation(line: 1508, column: 25, scope: !8319)
!8325 = !DILocation(line: 1508, column: 23, scope: !8319)
!8326 = !DILocation(line: 1512, column: 23, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1512, column: 9)
!8328 = !DILocation(line: 1512, column: 9, scope: !8327)
!8329 = !DILocation(line: 1512, column: 38, scope: !8327)
!8330 = !DILocation(line: 1512, column: 9, scope: !1039)
!8331 = !DILocation(line: 1513, column: 9, scope: !8327)
!8332 = !DILocation(line: 1514, column: 37, scope: !1039)
!8333 = !DILocation(line: 1514, column: 43, scope: !1039)
!8334 = !DILocation(line: 1514, column: 5, scope: !1039)
!8335 = !DILocation(line: 1515, column: 62, scope: !1039)
!8336 = !DILocation(line: 1515, column: 44, scope: !1039)
!8337 = !DILocation(line: 1515, column: 79, scope: !1039)
!8338 = !DILocation(line: 1515, column: 12, scope: !1039)
!8339 = !DILocation(line: 1516, column: 9, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1516, column: 9)
!8341 = !DILocation(line: 1516, column: 16, scope: !8340)
!8342 = !DILocation(line: 1516, column: 9, scope: !1039)
!8343 = !DILocation(line: 1517, column: 35, scope: !8340)
!8344 = !DILocation(line: 1517, column: 26, scope: !8340)
!8345 = !DILocation(line: 1517, column: 44, scope: !8340)
!8346 = !DILocation(line: 1517, column: 42, scope: !8340)
!8347 = !DILocation(line: 1517, column: 9, scope: !8340)
!8348 = !DILocation(line: 1517, column: 15, scope: !8340)
!8349 = !DILocation(line: 1517, column: 24, scope: !8340)
!8350 = !DILocation(line: 1519, column: 9, scope: !8340)
!8351 = !DILocation(line: 1519, column: 15, scope: !8340)
!8352 = !DILocation(line: 1519, column: 24, scope: !8340)
!8353 = !DILocation(line: 1520, column: 9, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1520, column: 9)
!8355 = !DILocation(line: 1520, column: 16, scope: !8354)
!8356 = !DILocation(line: 1520, column: 9, scope: !1039)
!8357 = !DILocation(line: 1521, column: 13, scope: !8354)
!8358 = !DILocation(line: 1521, column: 9, scope: !8354)
!8359 = !DILocation(line: 1523, column: 9, scope: !1066)
!8360 = !DILocation(line: 1523, column: 15, scope: !1066)
!8361 = !DILocation(line: 1523, column: 9, scope: !1039)
!8362 = !DILocation(line: 1527, column: 9, scope: !1065)
!8363 = !DILocation(line: 1527, column: 19, scope: !1065)
!8364 = !DILocation(line: 1527, column: 45, scope: !1065)
!8365 = !DILocation(line: 1527, column: 57, scope: !1065)
!8366 = !DILocation(line: 1527, column: 32, scope: !1065)
!8367 = !DILocation(line: 1528, column: 13, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1528, column: 13)
!8369 = !DILocation(line: 1528, column: 24, scope: !8368)
!8370 = !DILocation(line: 1528, column: 13, scope: !1065)
!8371 = !DILocation(line: 1529, column: 13, scope: !8368)
!8372 = !DILocation(line: 1530, column: 31, scope: !1070)
!8373 = !DILocation(line: 1530, column: 45, scope: !1070)
!8374 = !DILocation(line: 1530, column: 56, scope: !1070)
!8375 = !DILocation(line: 1530, column: 65, scope: !1070)
!8376 = !DILocation(line: 1530, column: 82, scope: !1070)
!8377 = !DILocation(line: 1530, column: 13, scope: !1065)
!8378 = !DILocation(line: 1531, column: 26, scope: !1069)
!8379 = !DILocation(line: 1534, column: 40, scope: !1069)
!8380 = !DILocation(line: 1534, column: 54, scope: !1069)
!8381 = !DILocation(line: 1534, column: 64, scope: !1069)
!8382 = !DILocation(line: 1531, column: 13, scope: !1069)
!8383 = !DILocation(line: 1535, column: 13, scope: !1069)
!8384 = !DILocation(line: 1535, column: 18, scope: !8385)
!8385 = !DILexicalBlockFile(scope: !1068, file: !13, discriminator: 1)
!8386 = !DILocation(line: 1535, column: 28, scope: !1068)
!8387 = !DILocation(line: 1535, column: 58, scope: !1068)
!8388 = !DILocation(line: 1535, column: 79, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !1068, file: !13, line: 1535, column: 76)
!8390 = !DILocation(line: 1535, column: 96, scope: !8389)
!8391 = !DILocation(line: 1535, column: 76, scope: !8389)
!8392 = !DILocation(line: 1535, column: 106, scope: !8389)
!8393 = !DILocation(line: 1535, column: 76, scope: !1068)
!8394 = !DILocation(line: 1535, column: 76, scope: !8395)
!8395 = !DILexicalBlockFile(scope: !1068, file: !13, discriminator: 2)
!8396 = !DILocation(line: 1535, column: 137, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !8389, file: !13, discriminator: 3)
!8398 = !DILocation(line: 1535, column: 155, scope: !8389)
!8399 = !DILocation(line: 1535, column: 165, scope: !8389)
!8400 = !DILocation(line: 1535, column: 190, scope: !8389)
!8401 = !DILocation(line: 1535, column: 121, scope: !8389)
!8402 = !DILocation(line: 1535, column: 209, scope: !8403)
!8403 = !DILexicalBlockFile(scope: !1069, file: !13, discriminator: 4)
!8404 = !DILocation(line: 1535, column: 209, scope: !1068)
!8405 = !DILocation(line: 1535, column: 209, scope: !8406)
!8406 = !DILexicalBlockFile(scope: !1068, file: !13, discriminator: 5)
!8407 = !DILocation(line: 1536, column: 13, scope: !1069)
!8408 = !DILocation(line: 1538, column: 9, scope: !1065)
!8409 = !DILocation(line: 1538, column: 14, scope: !8410)
!8410 = !DILexicalBlockFile(scope: !1072, file: !13, discriminator: 1)
!8411 = !DILocation(line: 1538, column: 24, scope: !1072)
!8412 = !DILocation(line: 1538, column: 54, scope: !1072)
!8413 = !DILocation(line: 1538, column: 75, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !1072, file: !13, line: 1538, column: 72)
!8415 = !DILocation(line: 1538, column: 92, scope: !8414)
!8416 = !DILocation(line: 1538, column: 72, scope: !8414)
!8417 = !DILocation(line: 1538, column: 102, scope: !8414)
!8418 = !DILocation(line: 1538, column: 72, scope: !1072)
!8419 = !DILocation(line: 1538, column: 72, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !1072, file: !13, discriminator: 2)
!8421 = !DILocation(line: 1538, column: 133, scope: !8422)
!8422 = !DILexicalBlockFile(scope: !8414, file: !13, discriminator: 3)
!8423 = !DILocation(line: 1538, column: 151, scope: !8414)
!8424 = !DILocation(line: 1538, column: 161, scope: !8414)
!8425 = !DILocation(line: 1538, column: 186, scope: !8414)
!8426 = !DILocation(line: 1538, column: 117, scope: !8414)
!8427 = !DILocation(line: 1538, column: 205, scope: !8428)
!8428 = !DILexicalBlockFile(scope: !1065, file: !13, discriminator: 4)
!8429 = !DILocation(line: 1538, column: 205, scope: !1072)
!8430 = !DILocation(line: 1538, column: 205, scope: !8431)
!8431 = !DILexicalBlockFile(scope: !1072, file: !13, discriminator: 5)
!8432 = !DILocation(line: 1539, column: 9, scope: !1065)
!8433 = !DILocation(line: 1539, column: 14, scope: !8434)
!8434 = !DILexicalBlockFile(scope: !1074, file: !13, discriminator: 1)
!8435 = !DILocation(line: 1539, column: 24, scope: !1074)
!8436 = !DILocation(line: 1539, column: 47, scope: !1074)
!8437 = !DILocation(line: 1539, column: 53, scope: !1074)
!8438 = !DILocation(line: 1539, column: 68, scope: !1078)
!8439 = !DILocation(line: 1539, column: 76, scope: !1078)
!8440 = !DILocation(line: 1539, column: 68, scope: !1074)
!8441 = !DILocation(line: 1539, column: 94, scope: !8442)
!8442 = !DILexicalBlockFile(scope: !1077, file: !13, discriminator: 2)
!8443 = !DILocation(line: 1539, column: 100, scope: !1077)
!8444 = !DILocation(line: 1539, column: 110, scope: !1077)
!8445 = !DILocation(line: 1539, column: 124, scope: !1077)
!8446 = !DILocation(line: 1539, column: 129, scope: !8447)
!8447 = !DILexicalBlockFile(scope: !1076, file: !13, discriminator: 4)
!8448 = !DILocation(line: 1539, column: 139, scope: !1076)
!8449 = !DILocation(line: 1539, column: 169, scope: !1076)
!8450 = !DILocation(line: 1539, column: 187, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !1076, file: !13, line: 1539, column: 184)
!8452 = !DILocation(line: 1539, column: 204, scope: !8451)
!8453 = !DILocation(line: 1539, column: 184, scope: !8451)
!8454 = !DILocation(line: 1539, column: 214, scope: !8451)
!8455 = !DILocation(line: 1539, column: 184, scope: !1076)
!8456 = !DILocation(line: 1539, column: 184, scope: !8457)
!8457 = !DILexicalBlockFile(scope: !1076, file: !13, discriminator: 5)
!8458 = !DILocation(line: 1539, column: 245, scope: !8459)
!8459 = !DILexicalBlockFile(scope: !8451, file: !13, discriminator: 6)
!8460 = !DILocation(line: 1539, column: 263, scope: !8451)
!8461 = !DILocation(line: 1539, column: 273, scope: !8451)
!8462 = !DILocation(line: 1539, column: 298, scope: !8451)
!8463 = !DILocation(line: 1539, column: 229, scope: !8451)
!8464 = !DILocation(line: 1539, column: 317, scope: !8465)
!8465 = !DILexicalBlockFile(scope: !1077, file: !13, discriminator: 7)
!8466 = !DILocation(line: 1539, column: 317, scope: !1076)
!8467 = !DILocation(line: 1539, column: 317, scope: !8468)
!8468 = !DILexicalBlockFile(scope: !1076, file: !13, discriminator: 8)
!8469 = !DILocation(line: 1539, column: 330, scope: !8470)
!8470 = !DILexicalBlockFile(scope: !1077, file: !13, discriminator: 9)
!8471 = !DILocation(line: 1539, column: 332, scope: !8472)
!8472 = !DILexicalBlockFile(scope: !8473, file: !13, discriminator: 10)
!8473 = !DILexicalBlockFile(scope: !1065, file: !13, discriminator: 3)
!8474 = !DILocation(line: 1539, column: 332, scope: !1074)
!8475 = !DILocation(line: 1539, column: 332, scope: !8476)
!8476 = !DILexicalBlockFile(scope: !1074, file: !13, discriminator: 11)
!8477 = !DILocation(line: 1540, column: 53, scope: !1065)
!8478 = !DILocation(line: 1540, column: 64, scope: !1065)
!8479 = !DILocation(line: 1540, column: 26, scope: !1065)
!8480 = !DILocation(line: 1540, column: 9, scope: !1065)
!8481 = !DILocation(line: 1540, column: 15, scope: !1065)
!8482 = !DILocation(line: 1540, column: 24, scope: !1065)
!8483 = !DILocation(line: 1541, column: 5, scope: !1066)
!8484 = !DILocation(line: 1541, column: 5, scope: !8485)
!8485 = !DILexicalBlockFile(scope: !1066, file: !13, discriminator: 1)
!8486 = !DILocation(line: 1541, column: 5, scope: !1065)
!8487 = !DILocation(line: 1542, column: 5, scope: !1039)
!8488 = !DILocation(line: 1542, column: 10, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !1080, file: !13, discriminator: 1)
!8490 = !DILocation(line: 1542, column: 20, scope: !1080)
!8491 = !DILocation(line: 1542, column: 50, scope: !1080)
!8492 = !DILocation(line: 1542, column: 72, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !1080, file: !13, line: 1542, column: 69)
!8494 = !DILocation(line: 1542, column: 89, scope: !8493)
!8495 = !DILocation(line: 1542, column: 69, scope: !8493)
!8496 = !DILocation(line: 1542, column: 99, scope: !8493)
!8497 = !DILocation(line: 1542, column: 69, scope: !1080)
!8498 = !DILocation(line: 1542, column: 69, scope: !8499)
!8499 = !DILexicalBlockFile(scope: !1080, file: !13, discriminator: 2)
!8500 = !DILocation(line: 1542, column: 130, scope: !8501)
!8501 = !DILexicalBlockFile(scope: !8493, file: !13, discriminator: 3)
!8502 = !DILocation(line: 1542, column: 148, scope: !8493)
!8503 = !DILocation(line: 1542, column: 158, scope: !8493)
!8504 = !DILocation(line: 1542, column: 183, scope: !8493)
!8505 = !DILocation(line: 1542, column: 114, scope: !8493)
!8506 = !DILocation(line: 1542, column: 202, scope: !8273)
!8507 = !DILocation(line: 1542, column: 202, scope: !1080)
!8508 = !DILocation(line: 1542, column: 202, scope: !8509)
!8509 = !DILexicalBlockFile(scope: !1080, file: !13, discriminator: 5)
!8510 = !DILocation(line: 1544, column: 13, scope: !1039)
!8511 = !DILocation(line: 1544, column: 17, scope: !1039)
!8512 = !DILocation(line: 1544, column: 5, scope: !1039)
!8513 = !DILocation(line: 1547, column: 5, scope: !1039)
!8514 = !DILocation(line: 1547, column: 10, scope: !8515)
!8515 = !DILexicalBlockFile(scope: !1082, file: !13, discriminator: 1)
!8516 = !DILocation(line: 1547, column: 20, scope: !1082)
!8517 = !DILocation(line: 1547, column: 51, scope: !1082)
!8518 = !DILocation(line: 1547, column: 68, scope: !1085)
!8519 = !DILocation(line: 1547, column: 84, scope: !1085)
!8520 = !DILocation(line: 1547, column: 68, scope: !1082)
!8521 = !DILocation(line: 1547, column: 99, scope: !8522)
!8522 = !DILexicalBlockFile(scope: !1085, file: !13, discriminator: 2)
!8523 = !DILocation(line: 1547, column: 104, scope: !8524)
!8524 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 4)
!8525 = !DILocation(line: 1547, column: 114, scope: !1084)
!8526 = !DILocation(line: 1547, column: 144, scope: !1084)
!8527 = !DILocation(line: 1547, column: 170, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !1084, file: !13, line: 1547, column: 167)
!8529 = !DILocation(line: 1547, column: 187, scope: !8528)
!8530 = !DILocation(line: 1547, column: 167, scope: !8528)
!8531 = !DILocation(line: 1547, column: 197, scope: !8528)
!8532 = !DILocation(line: 1547, column: 167, scope: !1084)
!8533 = !DILocation(line: 1547, column: 167, scope: !8534)
!8534 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 5)
!8535 = !DILocation(line: 1547, column: 228, scope: !8536)
!8536 = !DILexicalBlockFile(scope: !8528, file: !13, discriminator: 6)
!8537 = !DILocation(line: 1547, column: 246, scope: !8528)
!8538 = !DILocation(line: 1547, column: 256, scope: !8528)
!8539 = !DILocation(line: 1547, column: 281, scope: !8528)
!8540 = !DILocation(line: 1547, column: 212, scope: !8528)
!8541 = !DILocation(line: 1547, column: 300, scope: !8542)
!8542 = !DILexicalBlockFile(scope: !1085, file: !13, discriminator: 7)
!8543 = !DILocation(line: 1547, column: 300, scope: !1084)
!8544 = !DILocation(line: 1547, column: 300, scope: !8545)
!8545 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 8)
!8546 = !DILocation(line: 1547, column: 300, scope: !8547)
!8547 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 9)
!8548 = !DILocation(line: 1547, column: 313, scope: !8549)
!8549 = !DILexicalBlockFile(scope: !8237, file: !13, discriminator: 10)
!8550 = !DILocation(line: 1547, column: 313, scope: !1082)
!8551 = !DILocation(line: 1547, column: 313, scope: !8552)
!8552 = !DILexicalBlockFile(scope: !1082, file: !13, discriminator: 11)
!8553 = !DILocation(line: 1548, column: 5, scope: !1039)
!8554 = !DILocation(line: 1548, column: 10, scope: !8555)
!8555 = !DILexicalBlockFile(scope: !1087, file: !13, discriminator: 1)
!8556 = !DILocation(line: 1548, column: 20, scope: !1087)
!8557 = !DILocation(line: 1548, column: 51, scope: !1087)
!8558 = !DILocation(line: 1548, column: 67, scope: !1090)
!8559 = !DILocation(line: 1548, column: 83, scope: !1090)
!8560 = !DILocation(line: 1548, column: 67, scope: !1087)
!8561 = !DILocation(line: 1548, column: 98, scope: !8562)
!8562 = !DILexicalBlockFile(scope: !1090, file: !13, discriminator: 2)
!8563 = !DILocation(line: 1548, column: 103, scope: !8564)
!8564 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 4)
!8565 = !DILocation(line: 1548, column: 113, scope: !1089)
!8566 = !DILocation(line: 1548, column: 143, scope: !1089)
!8567 = !DILocation(line: 1548, column: 169, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !1089, file: !13, line: 1548, column: 166)
!8569 = !DILocation(line: 1548, column: 186, scope: !8568)
!8570 = !DILocation(line: 1548, column: 166, scope: !8568)
!8571 = !DILocation(line: 1548, column: 196, scope: !8568)
!8572 = !DILocation(line: 1548, column: 166, scope: !1089)
!8573 = !DILocation(line: 1548, column: 166, scope: !8574)
!8574 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 5)
!8575 = !DILocation(line: 1548, column: 227, scope: !8576)
!8576 = !DILexicalBlockFile(scope: !8568, file: !13, discriminator: 6)
!8577 = !DILocation(line: 1548, column: 245, scope: !8568)
!8578 = !DILocation(line: 1548, column: 255, scope: !8568)
!8579 = !DILocation(line: 1548, column: 280, scope: !8568)
!8580 = !DILocation(line: 1548, column: 211, scope: !8568)
!8581 = !DILocation(line: 1548, column: 299, scope: !8582)
!8582 = !DILexicalBlockFile(scope: !1090, file: !13, discriminator: 7)
!8583 = !DILocation(line: 1548, column: 299, scope: !1089)
!8584 = !DILocation(line: 1548, column: 299, scope: !8585)
!8585 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 8)
!8586 = !DILocation(line: 1548, column: 299, scope: !8587)
!8587 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 9)
!8588 = !DILocation(line: 1548, column: 312, scope: !8549)
!8589 = !DILocation(line: 1548, column: 312, scope: !1087)
!8590 = !DILocation(line: 1548, column: 312, scope: !8591)
!8591 = !DILexicalBlockFile(scope: !1087, file: !13, discriminator: 11)
!8592 = !DILocation(line: 1549, column: 5, scope: !1039)
!8593 = !DILocation(line: 1549, column: 10, scope: !8594)
!8594 = !DILexicalBlockFile(scope: !1092, file: !13, discriminator: 1)
!8595 = !DILocation(line: 1549, column: 20, scope: !1092)
!8596 = !DILocation(line: 1549, column: 51, scope: !1092)
!8597 = !DILocation(line: 1549, column: 69, scope: !1095)
!8598 = !DILocation(line: 1549, column: 85, scope: !1095)
!8599 = !DILocation(line: 1549, column: 69, scope: !1092)
!8600 = !DILocation(line: 1549, column: 100, scope: !8601)
!8601 = !DILexicalBlockFile(scope: !1095, file: !13, discriminator: 2)
!8602 = !DILocation(line: 1549, column: 105, scope: !8603)
!8603 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 4)
!8604 = !DILocation(line: 1549, column: 115, scope: !1094)
!8605 = !DILocation(line: 1549, column: 145, scope: !1094)
!8606 = !DILocation(line: 1549, column: 171, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !1094, file: !13, line: 1549, column: 168)
!8608 = !DILocation(line: 1549, column: 188, scope: !8607)
!8609 = !DILocation(line: 1549, column: 168, scope: !8607)
!8610 = !DILocation(line: 1549, column: 198, scope: !8607)
!8611 = !DILocation(line: 1549, column: 168, scope: !1094)
!8612 = !DILocation(line: 1549, column: 168, scope: !8613)
!8613 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 5)
!8614 = !DILocation(line: 1549, column: 229, scope: !8615)
!8615 = !DILexicalBlockFile(scope: !8607, file: !13, discriminator: 6)
!8616 = !DILocation(line: 1549, column: 247, scope: !8607)
!8617 = !DILocation(line: 1549, column: 257, scope: !8607)
!8618 = !DILocation(line: 1549, column: 282, scope: !8607)
!8619 = !DILocation(line: 1549, column: 213, scope: !8607)
!8620 = !DILocation(line: 1549, column: 301, scope: !8621)
!8621 = !DILexicalBlockFile(scope: !1095, file: !13, discriminator: 7)
!8622 = !DILocation(line: 1549, column: 301, scope: !1094)
!8623 = !DILocation(line: 1549, column: 301, scope: !8624)
!8624 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 8)
!8625 = !DILocation(line: 1549, column: 301, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 9)
!8627 = !DILocation(line: 1549, column: 314, scope: !8549)
!8628 = !DILocation(line: 1549, column: 314, scope: !1092)
!8629 = !DILocation(line: 1549, column: 314, scope: !8630)
!8630 = !DILexicalBlockFile(scope: !1092, file: !13, discriminator: 11)
!8631 = !DILocation(line: 1550, column: 5, scope: !1039)
!8632 = !DILocation(line: 1551, column: 1, scope: !1039)
!8633 = !DILocation(line: 1394, column: 41, scope: !1096)
!8634 = !DILocation(line: 1394, column: 57, scope: !1096)
!8635 = !DILocation(line: 1396, column: 5, scope: !1096)
!8636 = !DILocation(line: 1396, column: 10, scope: !8637)
!8637 = !DILexicalBlockFile(scope: !1103, file: !13, discriminator: 1)
!8638 = !DILocation(line: 1396, column: 20, scope: !1103)
!8639 = !DILocation(line: 1396, column: 43, scope: !1103)
!8640 = !DILocation(line: 1396, column: 49, scope: !1103)
!8641 = !DILocation(line: 1396, column: 69, scope: !1107)
!8642 = !DILocation(line: 1396, column: 77, scope: !1107)
!8643 = !DILocation(line: 1396, column: 69, scope: !1103)
!8644 = !DILocation(line: 1396, column: 95, scope: !8645)
!8645 = !DILexicalBlockFile(scope: !1106, file: !13, discriminator: 2)
!8646 = !DILocation(line: 1396, column: 101, scope: !1106)
!8647 = !DILocation(line: 1396, column: 116, scope: !1106)
!8648 = !DILocation(line: 1396, column: 130, scope: !1106)
!8649 = !DILocation(line: 1396, column: 135, scope: !8650)
!8650 = !DILexicalBlockFile(scope: !1105, file: !13, discriminator: 4)
!8651 = !DILocation(line: 1396, column: 145, scope: !1105)
!8652 = !DILocation(line: 1396, column: 175, scope: !1105)
!8653 = !DILocation(line: 1396, column: 193, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !1105, file: !13, line: 1396, column: 190)
!8655 = !DILocation(line: 1396, column: 210, scope: !8654)
!8656 = !DILocation(line: 1396, column: 190, scope: !8654)
!8657 = !DILocation(line: 1396, column: 220, scope: !8654)
!8658 = !DILocation(line: 1396, column: 190, scope: !1105)
!8659 = !DILocation(line: 1396, column: 190, scope: !8660)
!8660 = !DILexicalBlockFile(scope: !1105, file: !13, discriminator: 5)
!8661 = !DILocation(line: 1396, column: 251, scope: !8662)
!8662 = !DILexicalBlockFile(scope: !8654, file: !13, discriminator: 6)
!8663 = !DILocation(line: 1396, column: 269, scope: !8654)
!8664 = !DILocation(line: 1396, column: 279, scope: !8654)
!8665 = !DILocation(line: 1396, column: 304, scope: !8654)
!8666 = !DILocation(line: 1396, column: 235, scope: !8654)
!8667 = !DILocation(line: 1396, column: 323, scope: !8668)
!8668 = !DILexicalBlockFile(scope: !1106, file: !13, discriminator: 7)
!8669 = !DILocation(line: 1396, column: 323, scope: !1105)
!8670 = !DILocation(line: 1396, column: 323, scope: !8671)
!8671 = !DILexicalBlockFile(scope: !1105, file: !13, discriminator: 8)
!8672 = !DILocation(line: 1396, column: 336, scope: !8673)
!8673 = !DILexicalBlockFile(scope: !1106, file: !13, discriminator: 9)
!8674 = !DILocation(line: 1396, column: 338, scope: !8675)
!8675 = !DILexicalBlockFile(scope: !8676, file: !13, discriminator: 10)
!8676 = !DILexicalBlockFile(scope: !1096, file: !13, discriminator: 3)
!8677 = !DILocation(line: 1396, column: 338, scope: !1103)
!8678 = !DILocation(line: 1397, column: 27, scope: !1096)
!8679 = !DILocation(line: 1397, column: 5, scope: !1096)
!8680 = !DILocation(line: 1397, column: 11, scope: !1096)
!8681 = !DILocation(line: 1397, column: 25, scope: !1096)
!8682 = !DILocation(line: 1398, column: 5, scope: !1096)
!8683 = !DILocation(line: 1398, column: 11, scope: !1096)
!8684 = !DILocation(line: 1398, column: 30, scope: !1096)
!8685 = !DILocation(line: 1399, column: 1, scope: !1096)
!8686 = !DILocation(line: 1246, column: 30, scope: !1108)
!8687 = !DILocation(line: 1248, column: 5, scope: !1108)
!8688 = !DILocation(line: 1248, column: 15, scope: !1108)
!8689 = !DILocation(line: 1248, column: 24, scope: !1108)
!8690 = !DILocation(line: 1249, column: 9, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !1108, file: !13, line: 1249, column: 9)
!8692 = !DILocation(line: 1249, column: 15, scope: !8691)
!8693 = !DILocation(line: 1249, column: 18, scope: !8691)
!8694 = !DILocation(line: 1249, column: 9, scope: !1108)
!8695 = !DILocation(line: 1249, column: 30, scope: !8696)
!8696 = !DILexicalBlockFile(scope: !8697, file: !13, discriminator: 1)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !13, line: 1249, column: 30)
!8698 = distinct !DILexicalBlock(scope: !8691, file: !13, line: 1249, column: 24)
!8699 = !DILocation(line: 1249, column: 36, scope: !8697)
!8700 = !DILocation(line: 1249, column: 30, scope: !8697)
!8701 = !DILocation(line: 1249, column: 30, scope: !8698)
!8702 = !DILocation(line: 1249, column: 64, scope: !8703)
!8703 = !DILexicalBlockFile(scope: !8704, file: !13, discriminator: 2)
!8704 = distinct !DILexicalBlock(scope: !8697, file: !13, line: 1249, column: 46)
!8705 = !DILocation(line: 1249, column: 48, scope: !8704)
!8706 = !DILocation(line: 1249, column: 122, scope: !8704)
!8707 = !DILocation(line: 1249, column: 147, scope: !8708)
!8708 = !DILexicalBlockFile(scope: !8709, file: !13, discriminator: 3)
!8709 = distinct !DILexicalBlock(scope: !8697, file: !13, line: 1249, column: 129)
!8710 = !DILocation(line: 1249, column: 131, scope: !8709)
!8711 = !DILocation(line: 1249, column: 209, scope: !8712)
!8712 = !DILexicalBlockFile(scope: !8698, file: !13, discriminator: 4)
!8713 = !DILocation(line: 1249, column: 209, scope: !8698)
!8714 = !DILocation(line: 1250, column: 50, scope: !1108)
!8715 = !DILocation(line: 1250, column: 38, scope: !1108)
!8716 = !DILocation(line: 1250, column: 56, scope: !1108)
!8717 = !DILocation(line: 1250, column: 11, scope: !1108)
!8718 = !DILocation(line: 1250, column: 9, scope: !1108)
!8719 = !DILocation(line: 1251, column: 9, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !1108, file: !13, line: 1251, column: 9)
!8721 = !DILocation(line: 1251, column: 13, scope: !8720)
!8722 = !DILocation(line: 1251, column: 9, scope: !1108)
!8723 = !DILocation(line: 1252, column: 9, scope: !8720)
!8724 = !DILocation(line: 1253, column: 5, scope: !1108)
!8725 = !DILocation(line: 1253, column: 10, scope: !8726)
!8726 = !DILexicalBlockFile(scope: !1114, file: !13, discriminator: 1)
!8727 = !DILocation(line: 1253, column: 20, scope: !1114)
!8728 = !DILocation(line: 1253, column: 50, scope: !1114)
!8729 = !DILocation(line: 1253, column: 64, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !1114, file: !13, line: 1253, column: 61)
!8731 = !DILocation(line: 1253, column: 81, scope: !8730)
!8732 = !DILocation(line: 1253, column: 61, scope: !8730)
!8733 = !DILocation(line: 1253, column: 91, scope: !8730)
!8734 = !DILocation(line: 1253, column: 61, scope: !1114)
!8735 = !DILocation(line: 1253, column: 61, scope: !8736)
!8736 = !DILexicalBlockFile(scope: !1114, file: !13, discriminator: 2)
!8737 = !DILocation(line: 1253, column: 122, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !8730, file: !13, discriminator: 3)
!8739 = !DILocation(line: 1253, column: 140, scope: !8730)
!8740 = !DILocation(line: 1253, column: 150, scope: !8730)
!8741 = !DILocation(line: 1253, column: 175, scope: !8730)
!8742 = !DILocation(line: 1253, column: 106, scope: !8730)
!8743 = !DILocation(line: 1253, column: 194, scope: !8744)
!8744 = !DILexicalBlockFile(scope: !1108, file: !13, discriminator: 4)
!8745 = !DILocation(line: 1253, column: 194, scope: !1114)
!8746 = !DILocation(line: 1253, column: 194, scope: !8747)
!8747 = !DILexicalBlockFile(scope: !1114, file: !13, discriminator: 5)
!8748 = !DILocation(line: 1254, column: 14, scope: !1108)
!8749 = !DILocation(line: 1254, column: 20, scope: !1108)
!8750 = !DILocation(line: 1254, column: 12, scope: !1108)
!8751 = !DILocation(line: 1255, column: 5, scope: !1108)
!8752 = !DILocation(line: 1255, column: 11, scope: !1108)
!8753 = !DILocation(line: 1255, column: 18, scope: !1108)
!8754 = !DILocation(line: 1256, column: 5, scope: !1108)
!8755 = !DILocation(line: 1256, column: 11, scope: !1108)
!8756 = !DILocation(line: 1256, column: 20, scope: !1108)
!8757 = !DILocation(line: 1257, column: 5, scope: !1108)
!8758 = !DILocation(line: 1257, column: 11, scope: !1108)
!8759 = !DILocation(line: 1257, column: 14, scope: !1108)
!8760 = !DILocation(line: 1258, column: 12, scope: !1108)
!8761 = !DILocation(line: 1258, column: 5, scope: !1108)
!8762 = !DILocation(line: 1259, column: 1, scope: !1108)
!8763 = !DILocation(line: 1293, column: 29, scope: !1115)
!8764 = !DILocation(line: 1293, column: 45, scope: !1115)
!8765 = !DILocation(line: 1295, column: 5, scope: !1115)
!8766 = !DILocation(line: 1295, column: 15, scope: !1115)
!8767 = !DILocation(line: 1296, column: 5, scope: !1115)
!8768 = !DILocation(line: 1296, column: 15, scope: !1115)
!8769 = !DILocation(line: 1297, column: 5, scope: !1115)
!8770 = !DILocation(line: 1297, column: 15, scope: !1115)
!8771 = !DILocation(line: 1298, column: 5, scope: !1115)
!8772 = !DILocation(line: 1298, column: 16, scope: !1115)
!8773 = !DILocation(line: 1299, column: 5, scope: !1115)
!8774 = !DILocation(line: 1299, column: 9, scope: !1115)
!8775 = !DILocation(line: 1300, column: 5, scope: !1115)
!8776 = !DILocation(line: 1300, column: 9, scope: !1115)
!8777 = !DILocation(line: 1300, column: 24, scope: !1115)
!8778 = !DILocation(line: 1302, column: 9, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1302, column: 9)
!8780 = !DILocation(line: 1302, column: 15, scope: !8779)
!8781 = !DILocation(line: 1302, column: 18, scope: !8779)
!8782 = !DILocation(line: 1302, column: 9, scope: !1115)
!8783 = !DILocation(line: 1302, column: 30, scope: !8784)
!8784 = !DILexicalBlockFile(scope: !8785, file: !13, discriminator: 1)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !13, line: 1302, column: 30)
!8786 = distinct !DILexicalBlock(scope: !8779, file: !13, line: 1302, column: 24)
!8787 = !DILocation(line: 1302, column: 36, scope: !8785)
!8788 = !DILocation(line: 1302, column: 30, scope: !8785)
!8789 = !DILocation(line: 1302, column: 30, scope: !8786)
!8790 = !DILocation(line: 1302, column: 64, scope: !8791)
!8791 = !DILexicalBlockFile(scope: !8792, file: !13, discriminator: 2)
!8792 = distinct !DILexicalBlock(scope: !8785, file: !13, line: 1302, column: 46)
!8793 = !DILocation(line: 1302, column: 48, scope: !8792)
!8794 = !DILocation(line: 1302, column: 122, scope: !8792)
!8795 = !DILocation(line: 1302, column: 147, scope: !8796)
!8796 = !DILexicalBlockFile(scope: !8797, file: !13, discriminator: 3)
!8797 = distinct !DILexicalBlock(scope: !8785, file: !13, line: 1302, column: 129)
!8798 = !DILocation(line: 1302, column: 131, scope: !8797)
!8799 = !DILocation(line: 1302, column: 209, scope: !8800)
!8800 = !DILexicalBlockFile(scope: !8786, file: !13, discriminator: 4)
!8801 = !DILocation(line: 1302, column: 209, scope: !8786)
!8802 = !DILocation(line: 1304, column: 34, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1304, column: 9)
!8804 = !DILocation(line: 1304, column: 10, scope: !8803)
!8805 = !DILocation(line: 1304, column: 9, scope: !1115)
!8806 = !DILocation(line: 1305, column: 9, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !13, line: 1304, column: 59)
!8808 = !DILocation(line: 1308, column: 43, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1308, column: 9)
!8810 = !DILocation(line: 1308, column: 27, scope: !8809)
!8811 = !DILocation(line: 1308, column: 50, scope: !8809)
!8812 = !DILocation(line: 1308, column: 56, scope: !8809)
!8813 = !DILocation(line: 1308, column: 25, scope: !8809)
!8814 = !DILocation(line: 1308, column: 25, scope: !8815)
!8815 = !DILexicalBlockFile(scope: !8809, file: !13, discriminator: 1)
!8816 = !DILocation(line: 1308, column: 99, scope: !8817)
!8817 = !DILexicalBlockFile(scope: !8809, file: !13, discriminator: 2)
!8818 = !DILocation(line: 1308, column: 69, scope: !8809)
!8819 = !DILocation(line: 1308, column: 108, scope: !8820)
!8820 = !DILexicalBlockFile(scope: !8821, file: !13, discriminator: 4)
!8821 = !DILexicalBlockFile(scope: !8809, file: !13, discriminator: 3)
!8822 = !DILocation(line: 1308, column: 9, scope: !1115)
!8823 = !DILocation(line: 1309, column: 9, scope: !8809)
!8824 = !DILocation(line: 1311, column: 5, scope: !1115)
!8825 = !DILocation(line: 1311, column: 10, scope: !8826)
!8826 = !DILexicalBlockFile(scope: !1129, file: !13, discriminator: 1)
!8827 = !DILocation(line: 1311, column: 14, scope: !1129)
!8828 = !DILocation(line: 1311, column: 17, scope: !1129)
!8829 = !DILocation(line: 1311, column: 27, scope: !1129)
!8830 = !DILocation(line: 1311, column: 51, scope: !1136)
!8831 = !DILocation(line: 1311, column: 39, scope: !1136)
!8832 = !DILocation(line: 1311, column: 59, scope: !1136)
!8833 = !DILocation(line: 1311, column: 68, scope: !1136)
!8834 = !DILocation(line: 1311, column: 37, scope: !1129)
!8835 = !DILocation(line: 1311, column: 100, scope: !8836)
!8836 = !DILexicalBlockFile(scope: !1134, file: !13, discriminator: 2)
!8837 = !DILocation(line: 1311, column: 106, scope: !1134)
!8838 = !DILocation(line: 1311, column: 110, scope: !1134)
!8839 = !DILocation(line: 1311, column: 100, scope: !1135)
!8840 = !DILocation(line: 1311, column: 146, scope: !8841)
!8841 = !DILexicalBlockFile(scope: !1134, file: !13, discriminator: 4)
!8842 = !DILocation(line: 1311, column: 152, scope: !1134)
!8843 = !DILocation(line: 1311, column: 129, scope: !1134)
!8844 = !DILocation(line: 1311, column: 127, scope: !1134)
!8845 = !DILocation(line: 1311, column: 125, scope: !1134)
!8846 = !DILocation(line: 1311, column: 197, scope: !8847)
!8847 = !DILexicalBlockFile(scope: !1133, file: !13, discriminator: 5)
!8848 = !DILocation(line: 1311, column: 172, scope: !1133)
!8849 = !DILocation(line: 1311, column: 170, scope: !1133)
!8850 = !DILocation(line: 1311, column: 220, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !1133, file: !13, line: 1311, column: 220)
!8852 = !DILocation(line: 1311, column: 225, scope: !8851)
!8853 = !DILocation(line: 1311, column: 220, scope: !1133)
!8854 = !DILocation(line: 1311, column: 240, scope: !8855)
!8855 = !DILexicalBlockFile(scope: !8851, file: !13, discriminator: 7)
!8856 = !DILocation(line: 1311, column: 240, scope: !8851)
!8857 = !DILocation(line: 1311, column: 279, scope: !8858)
!8858 = !DILexicalBlockFile(scope: !1133, file: !13, discriminator: 8)
!8859 = !DILocation(line: 1311, column: 263, scope: !1133)
!8860 = !DILocation(line: 1311, column: 261, scope: !1133)
!8861 = !DILocation(line: 1311, column: 286, scope: !1133)
!8862 = !DILocation(line: 1311, column: 291, scope: !8863)
!8863 = !DILexicalBlockFile(scope: !1132, file: !13, discriminator: 10)
!8864 = !DILocation(line: 1311, column: 301, scope: !1132)
!8865 = !DILocation(line: 1311, column: 331, scope: !1132)
!8866 = !DILocation(line: 1311, column: 346, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !1132, file: !13, line: 1311, column: 343)
!8868 = !DILocation(line: 1311, column: 363, scope: !8867)
!8869 = !DILocation(line: 1311, column: 343, scope: !8867)
!8870 = !DILocation(line: 1311, column: 373, scope: !8867)
!8871 = !DILocation(line: 1311, column: 343, scope: !1132)
!8872 = !DILocation(line: 1311, column: 343, scope: !8873)
!8873 = !DILexicalBlockFile(scope: !1132, file: !13, discriminator: 11)
!8874 = !DILocation(line: 1311, column: 404, scope: !8875)
!8875 = !DILexicalBlockFile(scope: !8867, file: !13, discriminator: 12)
!8876 = !DILocation(line: 1311, column: 422, scope: !8867)
!8877 = !DILocation(line: 1311, column: 432, scope: !8867)
!8878 = !DILocation(line: 1311, column: 457, scope: !8867)
!8879 = !DILocation(line: 1311, column: 388, scope: !8867)
!8880 = !DILocation(line: 1311, column: 476, scope: !8881)
!8881 = !DILexicalBlockFile(scope: !1133, file: !13, discriminator: 13)
!8882 = !DILocation(line: 1311, column: 476, scope: !1132)
!8883 = !DILocation(line: 1311, column: 476, scope: !8884)
!8884 = !DILexicalBlockFile(scope: !1132, file: !13, discriminator: 14)
!8885 = !DILocation(line: 1311, column: 493, scope: !8886)
!8886 = !DILexicalBlockFile(scope: !8887, file: !13, discriminator: 15)
!8887 = distinct !DILexicalBlock(scope: !1133, file: !13, line: 1311, column: 493)
!8888 = !DILocation(line: 1311, column: 495, scope: !8887)
!8889 = !DILocation(line: 1311, column: 493, scope: !1133)
!8890 = !DILocation(line: 1311, column: 500, scope: !8891)
!8891 = !DILexicalBlockFile(scope: !8887, file: !13, discriminator: 16)
!8892 = !DILocation(line: 1311, column: 500, scope: !8887)
!8893 = !DILocation(line: 1311, column: 525, scope: !8894)
!8894 = !DILexicalBlockFile(scope: !8895, file: !13, discriminator: 6)
!8895 = distinct !DILexicalBlock(scope: !1135, file: !13, line: 1311, column: 525)
!8896 = !DILocation(line: 1311, column: 527, scope: !8895)
!8897 = !DILocation(line: 1311, column: 525, scope: !1135)
!8898 = !DILocation(line: 1311, column: 550, scope: !8899)
!8899 = !DILexicalBlockFile(scope: !8900, file: !13, discriminator: 18)
!8900 = distinct !DILexicalBlock(scope: !8895, file: !13, line: 1311, column: 532)
!8901 = !DILocation(line: 1311, column: 534, scope: !8900)
!8902 = !DILocation(line: 1311, column: 602, scope: !8900)
!8903 = !DILocation(line: 1311, column: 623, scope: !8904)
!8904 = !DILexicalBlockFile(scope: !1135, file: !13, discriminator: 19)
!8905 = !DILocation(line: 1311, column: 669, scope: !8906)
!8906 = !DILexicalBlockFile(scope: !8907, file: !13, discriminator: 3)
!8907 = distinct !DILexicalBlock(scope: !1136, file: !13, line: 1311, column: 634)
!8908 = !DILocation(line: 1311, column: 657, scope: !8907)
!8909 = !DILocation(line: 1311, column: 634, scope: !8907)
!8910 = !DILocation(line: 1311, column: 707, scope: !8907)
!8911 = !DILocation(line: 1311, column: 634, scope: !1136)
!8912 = !DILocation(line: 1311, column: 722, scope: !8913)
!8913 = !DILexicalBlockFile(scope: !8907, file: !13, discriminator: 22)
!8914 = !DILocation(line: 1311, column: 722, scope: !8907)
!8915 = !DILocation(line: 1311, column: 741, scope: !8916)
!8916 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 21)
!8917 = !DILocation(line: 1311, column: 741, scope: !8918)
!8918 = !DILexicalBlockFile(scope: !8919, file: !13, discriminator: 24)
!8919 = !DILexicalBlockFile(scope: !8920, file: !13, discriminator: 23)
!8920 = !DILexicalBlockFile(scope: !8921, file: !13, discriminator: 20)
!8921 = !DILexicalBlockFile(scope: !8922, file: !13, discriminator: 17)
!8922 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 9)
!8923 = !DILocation(line: 1311, column: 741, scope: !1129)
!8924 = !DILocation(line: 1311, column: 741, scope: !8925)
!8925 = !DILexicalBlockFile(scope: !1129, file: !13, discriminator: 25)
!8926 = !DILocation(line: 1313, column: 9, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1313, column: 9)
!8928 = !DILocation(line: 1313, column: 15, scope: !8927)
!8929 = !DILocation(line: 1313, column: 23, scope: !8927)
!8930 = !DILocation(line: 1313, column: 9, scope: !1115)
!8931 = !DILocation(line: 1314, column: 16, scope: !8927)
!8932 = !DILocation(line: 1314, column: 9, scope: !8927)
!8933 = !DILocation(line: 1316, column: 21, scope: !1115)
!8934 = !DILocation(line: 1316, column: 29, scope: !1115)
!8935 = !DILocation(line: 1316, column: 38, scope: !1115)
!8936 = !DILocation(line: 1318, column: 63, scope: !1115)
!8937 = !DILocation(line: 1318, column: 45, scope: !1115)
!8938 = !DILocation(line: 1318, column: 71, scope: !1115)
!8939 = !DILocation(line: 1318, column: 13, scope: !1115)
!8940 = !DILocation(line: 1320, column: 10, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1320, column: 9)
!8942 = !DILocation(line: 1320, column: 16, scope: !8941)
!8943 = !DILocation(line: 1320, column: 31, scope: !8941)
!8944 = !DILocation(line: 1320, column: 34, scope: !8945)
!8945 = !DILexicalBlockFile(scope: !8941, file: !13, discriminator: 1)
!8946 = !DILocation(line: 1320, column: 40, scope: !8941)
!8947 = !DILocation(line: 1320, column: 48, scope: !8941)
!8948 = !DILocation(line: 1320, column: 63, scope: !8941)
!8949 = !DILocation(line: 1320, column: 66, scope: !8950)
!8950 = !DILexicalBlockFile(scope: !8951, file: !13, discriminator: 3)
!8951 = !DILexicalBlockFile(scope: !8941, file: !13, discriminator: 2)
!8952 = !DILocation(line: 1320, column: 72, scope: !8941)
!8953 = !DILocation(line: 1320, column: 66, scope: !8941)
!8954 = !DILocation(line: 1320, column: 9, scope: !1115)
!8955 = !DILocation(line: 1321, column: 32, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8941, file: !13, line: 1321, column: 13)
!8957 = !DILocation(line: 1321, column: 95, scope: !8956)
!8958 = !DILocation(line: 1321, column: 77, scope: !8956)
!8959 = !DILocation(line: 1321, column: 103, scope: !8956)
!8960 = !DILocation(line: 1321, column: 13, scope: !8956)
!8961 = !DILocation(line: 1321, column: 115, scope: !8956)
!8962 = !DILocation(line: 1321, column: 13, scope: !8941)
!8963 = !DILocation(line: 1322, column: 19, scope: !8956)
!8964 = !DILocation(line: 1322, column: 13, scope: !8956)
!8965 = !DILocation(line: 1321, column: 119, scope: !8966)
!8966 = !DILexicalBlockFile(scope: !8956, file: !13, discriminator: 1)
!8967 = !DILocation(line: 1324, column: 9, scope: !1139)
!8968 = !DILocation(line: 1324, column: 15, scope: !1139)
!8969 = !DILocation(line: 1324, column: 18, scope: !8970)
!8970 = !DILexicalBlockFile(scope: !1139, file: !13, discriminator: 1)
!8971 = !DILocation(line: 1324, column: 24, scope: !1139)
!8972 = !DILocation(line: 1324, column: 18, scope: !1139)
!8973 = !DILocation(line: 1324, column: 39, scope: !1139)
!8974 = !DILocation(line: 1324, column: 42, scope: !8975)
!8975 = !DILexicalBlockFile(scope: !1139, file: !13, discriminator: 2)
!8976 = !DILocation(line: 1324, column: 48, scope: !1139)
!8977 = !DILocation(line: 1324, column: 56, scope: !1139)
!8978 = !DILocation(line: 1324, column: 9, scope: !1115)
!8979 = !DILocation(line: 1325, column: 9, scope: !1138)
!8980 = !DILocation(line: 1325, column: 19, scope: !1138)
!8981 = !DILocation(line: 1326, column: 13, scope: !1138)
!8982 = !DILocation(line: 1326, column: 46, scope: !1138)
!8983 = !DILocation(line: 1326, column: 52, scope: !1138)
!8984 = !DILocation(line: 1325, column: 29, scope: !1138)
!8985 = !DILocation(line: 1327, column: 9, scope: !1138)
!8986 = !DILocation(line: 1327, column: 14, scope: !8987)
!8987 = !DILexicalBlockFile(scope: !1141, file: !13, discriminator: 1)
!8988 = !DILocation(line: 1327, column: 24, scope: !1141)
!8989 = !DILocation(line: 1327, column: 54, scope: !1141)
!8990 = !DILocation(line: 1327, column: 69, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !1141, file: !13, line: 1327, column: 66)
!8992 = !DILocation(line: 1327, column: 86, scope: !8991)
!8993 = !DILocation(line: 1327, column: 66, scope: !8991)
!8994 = !DILocation(line: 1327, column: 96, scope: !8991)
!8995 = !DILocation(line: 1327, column: 66, scope: !1141)
!8996 = !DILocation(line: 1327, column: 66, scope: !8997)
!8997 = !DILexicalBlockFile(scope: !1141, file: !13, discriminator: 2)
!8998 = !DILocation(line: 1327, column: 127, scope: !8999)
!8999 = !DILexicalBlockFile(scope: !8991, file: !13, discriminator: 3)
!9000 = !DILocation(line: 1327, column: 145, scope: !8991)
!9001 = !DILocation(line: 1327, column: 155, scope: !8991)
!9002 = !DILocation(line: 1327, column: 180, scope: !8991)
!9003 = !DILocation(line: 1327, column: 111, scope: !8991)
!9004 = !DILocation(line: 1327, column: 199, scope: !9005)
!9005 = !DILexicalBlockFile(scope: !1138, file: !13, discriminator: 4)
!9006 = !DILocation(line: 1327, column: 199, scope: !1141)
!9007 = !DILocation(line: 1327, column: 199, scope: !9008)
!9008 = !DILexicalBlockFile(scope: !1141, file: !13, discriminator: 5)
!9009 = !DILocation(line: 1328, column: 13, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !1138, file: !13, line: 1328, column: 13)
!9011 = !DILocation(line: 1328, column: 21, scope: !9010)
!9012 = !DILocation(line: 1328, column: 13, scope: !1138)
!9013 = !DILocation(line: 1329, column: 13, scope: !9010)
!9014 = !DILocation(line: 1330, column: 16, scope: !1138)
!9015 = !DILocation(line: 1330, column: 14, scope: !1138)
!9016 = !DILocation(line: 1331, column: 5, scope: !1139)
!9017 = !DILocation(line: 1331, column: 5, scope: !8970)
!9018 = !DILocation(line: 1331, column: 5, scope: !1138)
!9019 = !DILocation(line: 1333, column: 9, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1333, column: 9)
!9021 = !DILocation(line: 1333, column: 15, scope: !9020)
!9022 = !DILocation(line: 1333, column: 9, scope: !1115)
!9023 = !DILocation(line: 1334, column: 24, scope: !9020)
!9024 = !DILocation(line: 1334, column: 9, scope: !9020)
!9025 = !DILocation(line: 1335, column: 9, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1335, column: 9)
!9027 = !DILocation(line: 1335, column: 15, scope: !9026)
!9028 = !DILocation(line: 1335, column: 30, scope: !9026)
!9029 = !DILocation(line: 1336, column: 10, scope: !9026)
!9030 = !DILocation(line: 1336, column: 16, scope: !9026)
!9031 = !DILocation(line: 1337, column: 29, scope: !9026)
!9032 = !DILocation(line: 1337, column: 92, scope: !9026)
!9033 = !DILocation(line: 1337, column: 74, scope: !9026)
!9034 = !DILocation(line: 1337, column: 100, scope: !9026)
!9035 = !DILocation(line: 1337, column: 10, scope: !9026)
!9036 = !DILocation(line: 1337, column: 112, scope: !9026)
!9037 = !DILocation(line: 1335, column: 9, scope: !1115)
!9038 = !DILocation(line: 1338, column: 19, scope: !9026)
!9039 = !DILocation(line: 1338, column: 9, scope: !9026)
!9040 = !DILocation(line: 1341, column: 9, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1341, column: 9)
!9042 = !DILocation(line: 1341, column: 15, scope: !9041)
!9043 = !DILocation(line: 1341, column: 26, scope: !9041)
!9044 = !DILocation(line: 1341, column: 9, scope: !1115)
!9045 = !DILocation(line: 1342, column: 15, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9041, file: !13, line: 1341, column: 41)
!9047 = !DILocation(line: 1342, column: 21, scope: !9046)
!9048 = !DILocation(line: 1342, column: 46, scope: !9046)
!9049 = !DILocation(line: 1342, column: 33, scope: !9046)
!9050 = !DILocation(line: 1342, column: 52, scope: !9046)
!9051 = !DILocation(line: 1342, column: 13, scope: !9046)
!9052 = !DILocation(line: 1342, column: 11, scope: !9046)
!9053 = !DILocation(line: 1343, column: 9, scope: !9046)
!9054 = !DILocation(line: 1343, column: 15, scope: !9046)
!9055 = !DILocation(line: 1343, column: 40, scope: !9046)
!9056 = !DILocation(line: 1344, column: 5, scope: !9046)
!9057 = !DILocation(line: 1346, column: 40, scope: !9041)
!9058 = !DILocation(line: 1346, column: 46, scope: !9041)
!9059 = !DILocation(line: 1347, column: 40, scope: !9041)
!9060 = !DILocation(line: 1347, column: 58, scope: !9041)
!9061 = !DILocation(line: 1346, column: 13, scope: !9041)
!9062 = !DILocation(line: 1346, column: 11, scope: !9041)
!9063 = !DILocation(line: 1348, column: 5, scope: !1115)
!9064 = !DILocation(line: 1348, column: 10, scope: !9065)
!9065 = !DILexicalBlockFile(scope: !1143, file: !13, discriminator: 1)
!9066 = !DILocation(line: 1348, column: 20, scope: !1143)
!9067 = !DILocation(line: 1348, column: 50, scope: !1143)
!9068 = !DILocation(line: 1348, column: 65, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !1143, file: !13, line: 1348, column: 62)
!9070 = !DILocation(line: 1348, column: 82, scope: !9069)
!9071 = !DILocation(line: 1348, column: 62, scope: !9069)
!9072 = !DILocation(line: 1348, column: 92, scope: !9069)
!9073 = !DILocation(line: 1348, column: 62, scope: !1143)
!9074 = !DILocation(line: 1348, column: 62, scope: !9075)
!9075 = !DILexicalBlockFile(scope: !1143, file: !13, discriminator: 2)
!9076 = !DILocation(line: 1348, column: 123, scope: !9077)
!9077 = !DILexicalBlockFile(scope: !9069, file: !13, discriminator: 3)
!9078 = !DILocation(line: 1348, column: 141, scope: !9069)
!9079 = !DILocation(line: 1348, column: 151, scope: !9069)
!9080 = !DILocation(line: 1348, column: 176, scope: !9069)
!9081 = !DILocation(line: 1348, column: 107, scope: !9069)
!9082 = !DILocation(line: 1348, column: 195, scope: !9083)
!9083 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 4)
!9084 = !DILocation(line: 1348, column: 195, scope: !1143)
!9085 = !DILocation(line: 1348, column: 195, scope: !9086)
!9086 = !DILexicalBlockFile(scope: !1143, file: !13, discriminator: 5)
!9087 = !DILocation(line: 1349, column: 9, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1349, column: 9)
!9089 = !DILocation(line: 1349, column: 11, scope: !9088)
!9090 = !DILocation(line: 1349, column: 9, scope: !1115)
!9091 = !DILocation(line: 1350, column: 9, scope: !9088)
!9092 = !DILocation(line: 1352, column: 9, scope: !1149)
!9093 = !DILocation(line: 1352, column: 15, scope: !1149)
!9094 = !DILocation(line: 1352, column: 29, scope: !1149)
!9095 = !DILocation(line: 1352, column: 9, scope: !1115)
!9096 = !DILocation(line: 1353, column: 31, scope: !1148)
!9097 = !DILocation(line: 1353, column: 9, scope: !1148)
!9098 = !DILocation(line: 1353, column: 15, scope: !1148)
!9099 = !DILocation(line: 1353, column: 29, scope: !1148)
!9100 = !DILocation(line: 1354, column: 13, scope: !1147)
!9101 = !DILocation(line: 1354, column: 19, scope: !1147)
!9102 = !DILocation(line: 1354, column: 33, scope: !1147)
!9103 = !DILocation(line: 1354, column: 13, scope: !1148)
!9104 = !DILocation(line: 1355, column: 13, scope: !1146)
!9105 = !DILocation(line: 1355, column: 18, scope: !9106)
!9106 = !DILexicalBlockFile(scope: !1145, file: !13, discriminator: 1)
!9107 = !DILocation(line: 1355, column: 28, scope: !1145)
!9108 = !DILocation(line: 1355, column: 58, scope: !1145)
!9109 = !DILocation(line: 1355, column: 70, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !1145, file: !13, line: 1355, column: 67)
!9111 = !DILocation(line: 1355, column: 87, scope: !9110)
!9112 = !DILocation(line: 1355, column: 67, scope: !9110)
!9113 = !DILocation(line: 1355, column: 97, scope: !9110)
!9114 = !DILocation(line: 1355, column: 67, scope: !1145)
!9115 = !DILocation(line: 1355, column: 67, scope: !9116)
!9116 = !DILexicalBlockFile(scope: !1145, file: !13, discriminator: 2)
!9117 = !DILocation(line: 1355, column: 128, scope: !9118)
!9118 = !DILexicalBlockFile(scope: !9110, file: !13, discriminator: 3)
!9119 = !DILocation(line: 1355, column: 146, scope: !9110)
!9120 = !DILocation(line: 1355, column: 156, scope: !9110)
!9121 = !DILocation(line: 1355, column: 181, scope: !9110)
!9122 = !DILocation(line: 1355, column: 112, scope: !9110)
!9123 = !DILocation(line: 1355, column: 200, scope: !9124)
!9124 = !DILexicalBlockFile(scope: !1146, file: !13, discriminator: 4)
!9125 = !DILocation(line: 1355, column: 200, scope: !1145)
!9126 = !DILocation(line: 1355, column: 200, scope: !9127)
!9127 = !DILexicalBlockFile(scope: !1145, file: !13, discriminator: 5)
!9128 = !DILocation(line: 1356, column: 13, scope: !1146)
!9129 = !DILocation(line: 1358, column: 9, scope: !1148)
!9130 = !DILocation(line: 1358, column: 15, scope: !1148)
!9131 = !DILocation(line: 1358, column: 35, scope: !1148)
!9132 = !DILocation(line: 1359, column: 5, scope: !1148)
!9133 = !DILocation(line: 1360, column: 23, scope: !1153)
!9134 = !DILocation(line: 1360, column: 29, scope: !1153)
!9135 = !DILocation(line: 1360, column: 44, scope: !1153)
!9136 = !DILocation(line: 1360, column: 9, scope: !1153)
!9137 = !DILocation(line: 1360, column: 47, scope: !1153)
!9138 = !DILocation(line: 1360, column: 9, scope: !1115)
!9139 = !DILocation(line: 1361, column: 9, scope: !1152)
!9140 = !DILocation(line: 1361, column: 14, scope: !9141)
!9141 = !DILexicalBlockFile(scope: !1151, file: !13, discriminator: 1)
!9142 = !DILocation(line: 1361, column: 24, scope: !1151)
!9143 = !DILocation(line: 1361, column: 54, scope: !1151)
!9144 = !DILocation(line: 1361, column: 66, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !1151, file: !13, line: 1361, column: 63)
!9146 = !DILocation(line: 1361, column: 83, scope: !9145)
!9147 = !DILocation(line: 1361, column: 63, scope: !9145)
!9148 = !DILocation(line: 1361, column: 93, scope: !9145)
!9149 = !DILocation(line: 1361, column: 63, scope: !1151)
!9150 = !DILocation(line: 1361, column: 63, scope: !9151)
!9151 = !DILexicalBlockFile(scope: !1151, file: !13, discriminator: 2)
!9152 = !DILocation(line: 1361, column: 124, scope: !9153)
!9153 = !DILexicalBlockFile(scope: !9145, file: !13, discriminator: 3)
!9154 = !DILocation(line: 1361, column: 142, scope: !9145)
!9155 = !DILocation(line: 1361, column: 152, scope: !9145)
!9156 = !DILocation(line: 1361, column: 177, scope: !9145)
!9157 = !DILocation(line: 1361, column: 108, scope: !9145)
!9158 = !DILocation(line: 1361, column: 196, scope: !9159)
!9159 = !DILexicalBlockFile(scope: !1152, file: !13, discriminator: 4)
!9160 = !DILocation(line: 1361, column: 196, scope: !1151)
!9161 = !DILocation(line: 1361, column: 196, scope: !9162)
!9162 = !DILexicalBlockFile(scope: !1151, file: !13, discriminator: 5)
!9163 = !DILocation(line: 1362, column: 9, scope: !1152)
!9164 = !DILocation(line: 1364, column: 65, scope: !1115)
!9165 = !DILocation(line: 1364, column: 50, scope: !1115)
!9166 = !DILocation(line: 1364, column: 70, scope: !1115)
!9167 = !{!2199, !1900, i64 16}
!9168 = !DILocation(line: 1364, column: 5, scope: !1115)
!9169 = !DILocation(line: 1364, column: 11, scope: !1115)
!9170 = !DILocation(line: 1364, column: 31, scope: !1115)
!9171 = !DILocation(line: 1365, column: 5, scope: !1115)
!9172 = !DILocation(line: 1365, column: 10, scope: !9173)
!9173 = !DILexicalBlockFile(scope: !1155, file: !13, discriminator: 1)
!9174 = !DILocation(line: 1365, column: 20, scope: !1155)
!9175 = !DILocation(line: 1365, column: 50, scope: !1155)
!9176 = !DILocation(line: 1365, column: 62, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !1155, file: !13, line: 1365, column: 59)
!9178 = !DILocation(line: 1365, column: 79, scope: !9177)
!9179 = !DILocation(line: 1365, column: 59, scope: !9177)
!9180 = !DILocation(line: 1365, column: 89, scope: !9177)
!9181 = !DILocation(line: 1365, column: 59, scope: !1155)
!9182 = !DILocation(line: 1365, column: 59, scope: !9183)
!9183 = !DILexicalBlockFile(scope: !1155, file: !13, discriminator: 2)
!9184 = !DILocation(line: 1365, column: 120, scope: !9185)
!9185 = !DILexicalBlockFile(scope: !9177, file: !13, discriminator: 3)
!9186 = !DILocation(line: 1365, column: 138, scope: !9177)
!9187 = !DILocation(line: 1365, column: 148, scope: !9177)
!9188 = !DILocation(line: 1365, column: 173, scope: !9177)
!9189 = !DILocation(line: 1365, column: 104, scope: !9177)
!9190 = !DILocation(line: 1365, column: 192, scope: !9083)
!9191 = !DILocation(line: 1365, column: 192, scope: !1155)
!9192 = !DILocation(line: 1365, column: 192, scope: !9193)
!9193 = !DILexicalBlockFile(scope: !1155, file: !13, discriminator: 5)
!9194 = !DILocation(line: 1366, column: 9, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1366, column: 9)
!9196 = !DILocation(line: 1366, column: 15, scope: !9195)
!9197 = !DILocation(line: 1366, column: 37, scope: !9195)
!9198 = !DILocation(line: 1366, column: 43, scope: !9195)
!9199 = !DILocation(line: 1366, column: 35, scope: !9195)
!9200 = !DILocation(line: 1366, column: 54, scope: !9195)
!9201 = !DILocation(line: 1366, column: 57, scope: !9202)
!9202 = !DILexicalBlockFile(scope: !9195, file: !13, discriminator: 1)
!9203 = !DILocation(line: 1366, column: 67, scope: !9195)
!9204 = !DILocation(line: 1367, column: 9, scope: !9195)
!9205 = !DILocation(line: 1366, column: 9, scope: !1115)
!9206 = !DILocation(line: 1368, column: 39, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !13, line: 1368, column: 13)
!9208 = distinct !DILexicalBlock(scope: !9195, file: !13, line: 1367, column: 25)
!9209 = !DILocation(line: 1368, column: 13, scope: !9207)
!9210 = !DILocation(line: 1368, column: 45, scope: !9207)
!9211 = !DILocation(line: 1368, column: 13, scope: !9208)
!9212 = !DILocation(line: 1369, column: 13, scope: !9207)
!9213 = !DILocation(line: 1370, column: 5, scope: !9208)
!9214 = !DILocation(line: 1372, column: 9, scope: !1159)
!9215 = !DILocation(line: 1372, column: 9, scope: !1115)
!9216 = !DILocation(line: 1373, column: 42, scope: !1158)
!9217 = !DILocation(line: 1373, column: 48, scope: !1158)
!9218 = !DILocation(line: 1373, column: 56, scope: !1158)
!9219 = !DILocation(line: 1373, column: 15, scope: !1158)
!9220 = !DILocation(line: 1373, column: 13, scope: !1158)
!9221 = !DILocation(line: 1374, column: 13, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !1158, file: !13, line: 1374, column: 13)
!9223 = !DILocation(line: 1374, column: 17, scope: !9222)
!9224 = !DILocation(line: 1374, column: 13, scope: !1158)
!9225 = !DILocation(line: 1375, column: 13, scope: !9222)
!9226 = !DILocation(line: 1376, column: 9, scope: !1158)
!9227 = !DILocation(line: 1376, column: 14, scope: !9228)
!9228 = !DILexicalBlockFile(scope: !1157, file: !13, discriminator: 1)
!9229 = !DILocation(line: 1376, column: 24, scope: !1157)
!9230 = !DILocation(line: 1376, column: 54, scope: !1157)
!9231 = !DILocation(line: 1376, column: 68, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !1157, file: !13, line: 1376, column: 65)
!9233 = !DILocation(line: 1376, column: 85, scope: !9232)
!9234 = !DILocation(line: 1376, column: 65, scope: !9232)
!9235 = !DILocation(line: 1376, column: 95, scope: !9232)
!9236 = !DILocation(line: 1376, column: 65, scope: !1157)
!9237 = !DILocation(line: 1376, column: 65, scope: !9238)
!9238 = !DILexicalBlockFile(scope: !1157, file: !13, discriminator: 2)
!9239 = !DILocation(line: 1376, column: 126, scope: !9240)
!9240 = !DILexicalBlockFile(scope: !9232, file: !13, discriminator: 3)
!9241 = !DILocation(line: 1376, column: 144, scope: !9232)
!9242 = !DILocation(line: 1376, column: 154, scope: !9232)
!9243 = !DILocation(line: 1376, column: 179, scope: !9232)
!9244 = !DILocation(line: 1376, column: 110, scope: !9232)
!9245 = !DILocation(line: 1376, column: 198, scope: !9246)
!9246 = !DILexicalBlockFile(scope: !1158, file: !13, discriminator: 4)
!9247 = !DILocation(line: 1376, column: 198, scope: !1157)
!9248 = !DILocation(line: 1376, column: 198, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !1157, file: !13, discriminator: 5)
!9250 = !DILocation(line: 1377, column: 5, scope: !1158)
!9251 = !DILocation(line: 1379, column: 5, scope: !1115)
!9252 = !DILocation(line: 1379, column: 10, scope: !9253)
!9253 = !DILexicalBlockFile(scope: !1161, file: !13, discriminator: 1)
!9254 = !DILocation(line: 1379, column: 20, scope: !1161)
!9255 = !DILocation(line: 1379, column: 43, scope: !1161)
!9256 = !DILocation(line: 1379, column: 49, scope: !1161)
!9257 = !DILocation(line: 1379, column: 64, scope: !1165)
!9258 = !DILocation(line: 1379, column: 72, scope: !1165)
!9259 = !DILocation(line: 1379, column: 64, scope: !1161)
!9260 = !DILocation(line: 1379, column: 90, scope: !9261)
!9261 = !DILexicalBlockFile(scope: !1164, file: !13, discriminator: 2)
!9262 = !DILocation(line: 1379, column: 96, scope: !1164)
!9263 = !DILocation(line: 1379, column: 106, scope: !1164)
!9264 = !DILocation(line: 1379, column: 120, scope: !1164)
!9265 = !DILocation(line: 1379, column: 125, scope: !9266)
!9266 = !DILexicalBlockFile(scope: !1163, file: !13, discriminator: 4)
!9267 = !DILocation(line: 1379, column: 135, scope: !1163)
!9268 = !DILocation(line: 1379, column: 165, scope: !1163)
!9269 = !DILocation(line: 1379, column: 183, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !1163, file: !13, line: 1379, column: 180)
!9271 = !DILocation(line: 1379, column: 200, scope: !9270)
!9272 = !DILocation(line: 1379, column: 180, scope: !9270)
!9273 = !DILocation(line: 1379, column: 210, scope: !9270)
!9274 = !DILocation(line: 1379, column: 180, scope: !1163)
!9275 = !DILocation(line: 1379, column: 180, scope: !9276)
!9276 = !DILexicalBlockFile(scope: !1163, file: !13, discriminator: 5)
!9277 = !DILocation(line: 1379, column: 241, scope: !9278)
!9278 = !DILexicalBlockFile(scope: !9270, file: !13, discriminator: 6)
!9279 = !DILocation(line: 1379, column: 259, scope: !9270)
!9280 = !DILocation(line: 1379, column: 269, scope: !9270)
!9281 = !DILocation(line: 1379, column: 294, scope: !9270)
!9282 = !DILocation(line: 1379, column: 225, scope: !9270)
!9283 = !DILocation(line: 1379, column: 313, scope: !9284)
!9284 = !DILexicalBlockFile(scope: !1164, file: !13, discriminator: 7)
!9285 = !DILocation(line: 1379, column: 313, scope: !1163)
!9286 = !DILocation(line: 1379, column: 313, scope: !9287)
!9287 = !DILexicalBlockFile(scope: !1163, file: !13, discriminator: 8)
!9288 = !DILocation(line: 1379, column: 326, scope: !9289)
!9289 = !DILexicalBlockFile(scope: !1164, file: !13, discriminator: 9)
!9290 = !DILocation(line: 1379, column: 328, scope: !9291)
!9291 = !DILexicalBlockFile(scope: !9292, file: !13, discriminator: 10)
!9292 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 3)
!9293 = !DILocation(line: 1379, column: 328, scope: !1161)
!9294 = !DILocation(line: 1379, column: 328, scope: !9295)
!9295 = !DILexicalBlockFile(scope: !1161, file: !13, discriminator: 11)
!9296 = !DILocation(line: 1381, column: 9, scope: !1169)
!9297 = !DILocation(line: 1381, column: 15, scope: !1169)
!9298 = !DILocation(line: 1381, column: 9, scope: !1115)
!9299 = !DILocation(line: 1382, column: 44, scope: !1168)
!9300 = !DILocation(line: 1382, column: 50, scope: !1168)
!9301 = !DILocation(line: 1382, column: 15, scope: !1168)
!9302 = !DILocation(line: 1382, column: 13, scope: !1168)
!9303 = !DILocation(line: 1383, column: 13, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !1168, file: !13, line: 1383, column: 13)
!9305 = !DILocation(line: 1383, column: 17, scope: !9304)
!9306 = !DILocation(line: 1383, column: 13, scope: !1168)
!9307 = !DILocation(line: 1384, column: 13, scope: !9304)
!9308 = !DILocation(line: 1385, column: 9, scope: !1168)
!9309 = !DILocation(line: 1385, column: 14, scope: !9310)
!9310 = !DILexicalBlockFile(scope: !1167, file: !13, discriminator: 1)
!9311 = !DILocation(line: 1385, column: 24, scope: !1167)
!9312 = !DILocation(line: 1385, column: 54, scope: !1167)
!9313 = !DILocation(line: 1385, column: 68, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !1167, file: !13, line: 1385, column: 65)
!9315 = !DILocation(line: 1385, column: 85, scope: !9314)
!9316 = !DILocation(line: 1385, column: 65, scope: !9314)
!9317 = !DILocation(line: 1385, column: 95, scope: !9314)
!9318 = !DILocation(line: 1385, column: 65, scope: !1167)
!9319 = !DILocation(line: 1385, column: 65, scope: !9320)
!9320 = !DILexicalBlockFile(scope: !1167, file: !13, discriminator: 2)
!9321 = !DILocation(line: 1385, column: 126, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !9314, file: !13, discriminator: 3)
!9323 = !DILocation(line: 1385, column: 144, scope: !9314)
!9324 = !DILocation(line: 1385, column: 154, scope: !9314)
!9325 = !DILocation(line: 1385, column: 179, scope: !9314)
!9326 = !DILocation(line: 1385, column: 110, scope: !9314)
!9327 = !DILocation(line: 1385, column: 198, scope: !9328)
!9328 = !DILexicalBlockFile(scope: !1168, file: !13, discriminator: 4)
!9329 = !DILocation(line: 1385, column: 198, scope: !1167)
!9330 = !DILocation(line: 1385, column: 198, scope: !9331)
!9331 = !DILexicalBlockFile(scope: !1167, file: !13, discriminator: 5)
!9332 = !DILocation(line: 1386, column: 5, scope: !1168)
!9333 = !DILocation(line: 1388, column: 31, scope: !1115)
!9334 = !DILocation(line: 1388, column: 12, scope: !1115)
!9335 = !DILocation(line: 1388, column: 5, scope: !1115)
!9336 = !DILocation(line: 1389, column: 1, scope: !1115)
!9337 = !DILocation(line: 1554, column: 28, scope: !1170)
!9338 = !DILocation(line: 1554, column: 44, scope: !1170)
!9339 = !DILocation(line: 1556, column: 5, scope: !1170)
!9340 = !DILocation(line: 1556, column: 16, scope: !1170)
!9341 = !DILocation(line: 1557, column: 5, scope: !1170)
!9342 = !DILocation(line: 1557, column: 15, scope: !1170)
!9343 = !DILocation(line: 1557, column: 37, scope: !1170)
!9344 = !DILocation(line: 1559, column: 9, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1559, column: 9)
!9346 = !DILocation(line: 1559, column: 15, scope: !9345)
!9347 = !DILocation(line: 1559, column: 18, scope: !9345)
!9348 = !DILocation(line: 1559, column: 9, scope: !1170)
!9349 = !DILocation(line: 1559, column: 30, scope: !9350)
!9350 = !DILexicalBlockFile(scope: !9351, file: !13, discriminator: 1)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !13, line: 1559, column: 30)
!9352 = distinct !DILexicalBlock(scope: !9345, file: !13, line: 1559, column: 24)
!9353 = !DILocation(line: 1559, column: 36, scope: !9351)
!9354 = !DILocation(line: 1559, column: 30, scope: !9351)
!9355 = !DILocation(line: 1559, column: 30, scope: !9352)
!9356 = !DILocation(line: 1559, column: 64, scope: !9357)
!9357 = !DILexicalBlockFile(scope: !9358, file: !13, discriminator: 2)
!9358 = distinct !DILexicalBlock(scope: !9351, file: !13, line: 1559, column: 46)
!9359 = !DILocation(line: 1559, column: 48, scope: !9358)
!9360 = !DILocation(line: 1559, column: 122, scope: !9358)
!9361 = !DILocation(line: 1559, column: 147, scope: !9362)
!9362 = !DILexicalBlockFile(scope: !9363, file: !13, discriminator: 3)
!9363 = distinct !DILexicalBlock(scope: !9351, file: !13, line: 1559, column: 129)
!9364 = !DILocation(line: 1559, column: 131, scope: !9363)
!9365 = !DILocation(line: 1559, column: 209, scope: !9366)
!9366 = !DILexicalBlockFile(scope: !9352, file: !13, discriminator: 4)
!9367 = !DILocation(line: 1559, column: 209, scope: !9352)
!9368 = !DILocation(line: 1561, column: 34, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1561, column: 9)
!9370 = !DILocation(line: 1561, column: 10, scope: !9369)
!9371 = !DILocation(line: 1561, column: 9, scope: !1170)
!9372 = !DILocation(line: 1562, column: 9, scope: !9369)
!9373 = !DILocation(line: 1564, column: 5, scope: !1170)
!9374 = !DILocation(line: 1564, column: 10, scope: !9375)
!9375 = !DILexicalBlockFile(scope: !1178, file: !13, discriminator: 1)
!9376 = !DILocation(line: 1564, column: 14, scope: !1178)
!9377 = !DILocation(line: 1564, column: 17, scope: !1178)
!9378 = !DILocation(line: 1564, column: 27, scope: !1178)
!9379 = !DILocation(line: 1564, column: 51, scope: !1185)
!9380 = !DILocation(line: 1564, column: 39, scope: !1185)
!9381 = !DILocation(line: 1564, column: 59, scope: !1185)
!9382 = !DILocation(line: 1564, column: 68, scope: !1185)
!9383 = !DILocation(line: 1564, column: 37, scope: !1178)
!9384 = !DILocation(line: 1564, column: 100, scope: !9385)
!9385 = !DILexicalBlockFile(scope: !1183, file: !13, discriminator: 2)
!9386 = !DILocation(line: 1564, column: 106, scope: !1183)
!9387 = !DILocation(line: 1564, column: 110, scope: !1183)
!9388 = !DILocation(line: 1564, column: 100, scope: !1184)
!9389 = !DILocation(line: 1564, column: 146, scope: !9390)
!9390 = !DILexicalBlockFile(scope: !1183, file: !13, discriminator: 4)
!9391 = !DILocation(line: 1564, column: 152, scope: !1183)
!9392 = !DILocation(line: 1564, column: 129, scope: !1183)
!9393 = !DILocation(line: 1564, column: 127, scope: !1183)
!9394 = !DILocation(line: 1564, column: 125, scope: !1183)
!9395 = !DILocation(line: 1564, column: 197, scope: !9396)
!9396 = !DILexicalBlockFile(scope: !1182, file: !13, discriminator: 5)
!9397 = !DILocation(line: 1564, column: 172, scope: !1182)
!9398 = !DILocation(line: 1564, column: 170, scope: !1182)
!9399 = !DILocation(line: 1564, column: 220, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !1182, file: !13, line: 1564, column: 220)
!9401 = !DILocation(line: 1564, column: 225, scope: !9400)
!9402 = !DILocation(line: 1564, column: 220, scope: !1182)
!9403 = !DILocation(line: 1564, column: 240, scope: !9404)
!9404 = !DILexicalBlockFile(scope: !9400, file: !13, discriminator: 7)
!9405 = !DILocation(line: 1564, column: 240, scope: !9400)
!9406 = !DILocation(line: 1564, column: 279, scope: !9407)
!9407 = !DILexicalBlockFile(scope: !1182, file: !13, discriminator: 8)
!9408 = !DILocation(line: 1564, column: 263, scope: !1182)
!9409 = !DILocation(line: 1564, column: 261, scope: !1182)
!9410 = !DILocation(line: 1564, column: 286, scope: !1182)
!9411 = !DILocation(line: 1564, column: 291, scope: !9412)
!9412 = !DILexicalBlockFile(scope: !1181, file: !13, discriminator: 10)
!9413 = !DILocation(line: 1564, column: 301, scope: !1181)
!9414 = !DILocation(line: 1564, column: 331, scope: !1181)
!9415 = !DILocation(line: 1564, column: 346, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !1181, file: !13, line: 1564, column: 343)
!9417 = !DILocation(line: 1564, column: 363, scope: !9416)
!9418 = !DILocation(line: 1564, column: 343, scope: !9416)
!9419 = !DILocation(line: 1564, column: 373, scope: !9416)
!9420 = !DILocation(line: 1564, column: 343, scope: !1181)
!9421 = !DILocation(line: 1564, column: 343, scope: !9422)
!9422 = !DILexicalBlockFile(scope: !1181, file: !13, discriminator: 11)
!9423 = !DILocation(line: 1564, column: 404, scope: !9424)
!9424 = !DILexicalBlockFile(scope: !9416, file: !13, discriminator: 12)
!9425 = !DILocation(line: 1564, column: 422, scope: !9416)
!9426 = !DILocation(line: 1564, column: 432, scope: !9416)
!9427 = !DILocation(line: 1564, column: 457, scope: !9416)
!9428 = !DILocation(line: 1564, column: 388, scope: !9416)
!9429 = !DILocation(line: 1564, column: 476, scope: !9430)
!9430 = !DILexicalBlockFile(scope: !1182, file: !13, discriminator: 13)
!9431 = !DILocation(line: 1564, column: 476, scope: !1181)
!9432 = !DILocation(line: 1564, column: 476, scope: !9433)
!9433 = !DILexicalBlockFile(scope: !1181, file: !13, discriminator: 14)
!9434 = !DILocation(line: 1564, column: 493, scope: !9435)
!9435 = !DILexicalBlockFile(scope: !9436, file: !13, discriminator: 15)
!9436 = distinct !DILexicalBlock(scope: !1182, file: !13, line: 1564, column: 493)
!9437 = !DILocation(line: 1564, column: 495, scope: !9436)
!9438 = !DILocation(line: 1564, column: 493, scope: !1182)
!9439 = !DILocation(line: 1564, column: 500, scope: !9440)
!9440 = !DILexicalBlockFile(scope: !9436, file: !13, discriminator: 16)
!9441 = !DILocation(line: 1564, column: 500, scope: !9436)
!9442 = !DILocation(line: 1564, column: 525, scope: !9443)
!9443 = !DILexicalBlockFile(scope: !9444, file: !13, discriminator: 6)
!9444 = distinct !DILexicalBlock(scope: !1184, file: !13, line: 1564, column: 525)
!9445 = !DILocation(line: 1564, column: 527, scope: !9444)
!9446 = !DILocation(line: 1564, column: 525, scope: !1184)
!9447 = !DILocation(line: 1564, column: 550, scope: !9448)
!9448 = !DILexicalBlockFile(scope: !9449, file: !13, discriminator: 18)
!9449 = distinct !DILexicalBlock(scope: !9444, file: !13, line: 1564, column: 532)
!9450 = !DILocation(line: 1564, column: 534, scope: !9449)
!9451 = !DILocation(line: 1564, column: 602, scope: !9449)
!9452 = !DILocation(line: 1564, column: 623, scope: !9453)
!9453 = !DILexicalBlockFile(scope: !1184, file: !13, discriminator: 19)
!9454 = !DILocation(line: 1564, column: 669, scope: !9455)
!9455 = !DILexicalBlockFile(scope: !9456, file: !13, discriminator: 3)
!9456 = distinct !DILexicalBlock(scope: !1185, file: !13, line: 1564, column: 634)
!9457 = !DILocation(line: 1564, column: 657, scope: !9456)
!9458 = !DILocation(line: 1564, column: 634, scope: !9456)
!9459 = !DILocation(line: 1564, column: 707, scope: !9456)
!9460 = !DILocation(line: 1564, column: 634, scope: !1185)
!9461 = !DILocation(line: 1564, column: 722, scope: !9462)
!9462 = !DILexicalBlockFile(scope: !9456, file: !13, discriminator: 22)
!9463 = !DILocation(line: 1564, column: 722, scope: !9456)
!9464 = !DILocation(line: 1564, column: 741, scope: !9465)
!9465 = !DILexicalBlockFile(scope: !1170, file: !13, discriminator: 21)
!9466 = !DILocation(line: 1564, column: 741, scope: !9467)
!9467 = !DILexicalBlockFile(scope: !9468, file: !13, discriminator: 24)
!9468 = !DILexicalBlockFile(scope: !9469, file: !13, discriminator: 23)
!9469 = !DILexicalBlockFile(scope: !9470, file: !13, discriminator: 20)
!9470 = !DILexicalBlockFile(scope: !9471, file: !13, discriminator: 17)
!9471 = !DILexicalBlockFile(scope: !1170, file: !13, discriminator: 9)
!9472 = !DILocation(line: 1564, column: 741, scope: !1178)
!9473 = !DILocation(line: 1564, column: 741, scope: !9474)
!9474 = !DILexicalBlockFile(scope: !1178, file: !13, discriminator: 25)
!9475 = !DILocation(line: 1566, column: 9, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1566, column: 9)
!9477 = !DILocation(line: 1566, column: 15, scope: !9476)
!9478 = !DILocation(line: 1566, column: 23, scope: !9476)
!9479 = !DILocation(line: 1566, column: 9, scope: !1170)
!9480 = !DILocation(line: 1567, column: 16, scope: !9476)
!9481 = !DILocation(line: 1567, column: 9, scope: !9476)
!9482 = !DILocation(line: 1569, column: 35, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1569, column: 9)
!9484 = !DILocation(line: 1569, column: 9, scope: !9483)
!9485 = !DILocation(line: 1569, column: 41, scope: !9483)
!9486 = !DILocation(line: 1569, column: 9, scope: !1170)
!9487 = !DILocation(line: 1570, column: 9, scope: !9483)
!9488 = !DILocation(line: 1572, column: 9, scope: !1188)
!9489 = !DILocation(line: 1572, column: 11, scope: !1188)
!9490 = !DILocation(line: 1572, column: 9, scope: !1170)
!9491 = !DILocation(line: 1574, column: 9, scope: !1187)
!9492 = !DILocation(line: 1574, column: 19, scope: !1187)
!9493 = !DILocation(line: 1574, column: 56, scope: !1187)
!9494 = !DILocation(line: 1574, column: 62, scope: !1187)
!9495 = !DILocation(line: 1574, column: 27, scope: !1187)
!9496 = !DILocation(line: 1575, column: 9, scope: !1187)
!9497 = !DILocation(line: 1575, column: 19, scope: !1187)
!9498 = !DILocation(line: 1576, column: 13, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1576, column: 13)
!9500 = !DILocation(line: 1576, column: 19, scope: !9499)
!9501 = !DILocation(line: 1576, column: 13, scope: !1187)
!9502 = !DILocation(line: 1577, column: 13, scope: !9499)
!9503 = !DILocation(line: 1579, column: 27, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1579, column: 13)
!9505 = !DILocation(line: 1579, column: 33, scope: !9504)
!9506 = !DILocation(line: 1579, column: 44, scope: !9504)
!9507 = !DILocation(line: 1579, column: 53, scope: !9504)
!9508 = !DILocation(line: 1579, column: 13, scope: !1187)
!9509 = !DILocation(line: 1580, column: 59, scope: !9504)
!9510 = !DILocation(line: 1580, column: 65, scope: !9504)
!9511 = !DILocation(line: 1581, column: 59, scope: !9504)
!9512 = !DILocation(line: 1580, column: 23, scope: !9504)
!9513 = !DILocation(line: 1580, column: 21, scope: !9504)
!9514 = !DILocation(line: 1580, column: 13, scope: !9504)
!9515 = !DILocation(line: 1584, column: 17, scope: !9504)
!9516 = !DILocation(line: 1584, column: 23, scope: !9504)
!9517 = !DILocation(line: 1584, column: 32, scope: !9504)
!9518 = !DILocation(line: 1584, column: 50, scope: !9504)
!9519 = !DILocation(line: 1583, column: 23, scope: !9504)
!9520 = !DILocation(line: 1583, column: 21, scope: !9504)
!9521 = !DILocation(line: 1585, column: 9, scope: !1187)
!9522 = !DILocation(line: 1585, column: 14, scope: !9523)
!9523 = !DILexicalBlockFile(scope: !1191, file: !13, discriminator: 1)
!9524 = !DILocation(line: 1585, column: 24, scope: !1191)
!9525 = !DILocation(line: 1585, column: 54, scope: !1191)
!9526 = !DILocation(line: 1585, column: 70, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !1191, file: !13, line: 1585, column: 67)
!9528 = !DILocation(line: 1585, column: 87, scope: !9527)
!9529 = !DILocation(line: 1585, column: 67, scope: !9527)
!9530 = !DILocation(line: 1585, column: 97, scope: !9527)
!9531 = !DILocation(line: 1585, column: 67, scope: !1191)
!9532 = !DILocation(line: 1585, column: 67, scope: !9533)
!9533 = !DILexicalBlockFile(scope: !1191, file: !13, discriminator: 2)
!9534 = !DILocation(line: 1585, column: 128, scope: !9535)
!9535 = !DILexicalBlockFile(scope: !9527, file: !13, discriminator: 3)
!9536 = !DILocation(line: 1585, column: 146, scope: !9527)
!9537 = !DILocation(line: 1585, column: 156, scope: !9527)
!9538 = !DILocation(line: 1585, column: 181, scope: !9527)
!9539 = !DILocation(line: 1585, column: 112, scope: !9527)
!9540 = !DILocation(line: 1585, column: 200, scope: !9541)
!9541 = !DILexicalBlockFile(scope: !1187, file: !13, discriminator: 4)
!9542 = !DILocation(line: 1585, column: 200, scope: !1191)
!9543 = !DILocation(line: 1585, column: 200, scope: !9544)
!9544 = !DILexicalBlockFile(scope: !1191, file: !13, discriminator: 5)
!9545 = !DILocation(line: 1586, column: 27, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1586, column: 13)
!9547 = !DILocation(line: 1586, column: 13, scope: !9546)
!9548 = !DILocation(line: 1586, column: 36, scope: !9546)
!9549 = !DILocation(line: 1586, column: 13, scope: !1187)
!9550 = !DILocation(line: 1587, column: 13, scope: !9546)
!9551 = !DILocation(line: 1589, column: 50, scope: !1187)
!9552 = !DILocation(line: 1589, column: 18, scope: !1187)
!9553 = !DILocation(line: 1589, column: 16, scope: !1187)
!9554 = !DILocation(line: 1591, column: 13, scope: !1195)
!9555 = !DILocation(line: 1591, column: 20, scope: !1195)
!9556 = !DILocation(line: 1591, column: 13, scope: !1187)
!9557 = !DILocation(line: 1592, column: 13, scope: !1194)
!9558 = !DILocation(line: 1592, column: 18, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !1193, file: !13, discriminator: 1)
!9560 = !DILocation(line: 1592, column: 28, scope: !1193)
!9561 = !DILocation(line: 1592, column: 58, scope: !1193)
!9562 = !DILocation(line: 1592, column: 76, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !1193, file: !13, line: 1592, column: 73)
!9564 = !DILocation(line: 1592, column: 93, scope: !9563)
!9565 = !DILocation(line: 1592, column: 73, scope: !9563)
!9566 = !DILocation(line: 1592, column: 103, scope: !9563)
!9567 = !DILocation(line: 1592, column: 73, scope: !1193)
!9568 = !DILocation(line: 1592, column: 73, scope: !9569)
!9569 = !DILexicalBlockFile(scope: !1193, file: !13, discriminator: 2)
!9570 = !DILocation(line: 1592, column: 134, scope: !9571)
!9571 = !DILexicalBlockFile(scope: !9563, file: !13, discriminator: 3)
!9572 = !DILocation(line: 1592, column: 152, scope: !9563)
!9573 = !DILocation(line: 1592, column: 162, scope: !9563)
!9574 = !DILocation(line: 1592, column: 187, scope: !9563)
!9575 = !DILocation(line: 1592, column: 118, scope: !9563)
!9576 = !DILocation(line: 1592, column: 206, scope: !9577)
!9577 = !DILexicalBlockFile(scope: !1194, file: !13, discriminator: 4)
!9578 = !DILocation(line: 1592, column: 206, scope: !1193)
!9579 = !DILocation(line: 1592, column: 206, scope: !9580)
!9580 = !DILexicalBlockFile(scope: !1193, file: !13, discriminator: 5)
!9581 = !DILocation(line: 1593, column: 13, scope: !1194)
!9582 = !DILocation(line: 1596, column: 41, scope: !1187)
!9583 = !DILocation(line: 1596, column: 9, scope: !1187)
!9584 = !DILocation(line: 1597, column: 13, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1597, column: 13)
!9586 = !DILocation(line: 1597, column: 20, scope: !9585)
!9587 = !DILocation(line: 1597, column: 13, scope: !1187)
!9588 = !DILocation(line: 1598, column: 13, scope: !9585)
!9589 = !DILocation(line: 1600, column: 9, scope: !1187)
!9590 = !DILocation(line: 1600, column: 14, scope: !9591)
!9591 = !DILexicalBlockFile(scope: !1197, file: !13, discriminator: 1)
!9592 = !DILocation(line: 1600, column: 24, scope: !1197)
!9593 = !DILocation(line: 1600, column: 47, scope: !1197)
!9594 = !DILocation(line: 1600, column: 53, scope: !1197)
!9595 = !DILocation(line: 1600, column: 68, scope: !1201)
!9596 = !DILocation(line: 1600, column: 76, scope: !1201)
!9597 = !DILocation(line: 1600, column: 68, scope: !1197)
!9598 = !DILocation(line: 1600, column: 94, scope: !9599)
!9599 = !DILexicalBlockFile(scope: !1200, file: !13, discriminator: 2)
!9600 = !DILocation(line: 1600, column: 100, scope: !1200)
!9601 = !DILocation(line: 1600, column: 110, scope: !1200)
!9602 = !DILocation(line: 1600, column: 124, scope: !1200)
!9603 = !DILocation(line: 1600, column: 129, scope: !9604)
!9604 = !DILexicalBlockFile(scope: !1199, file: !13, discriminator: 4)
!9605 = !DILocation(line: 1600, column: 139, scope: !1199)
!9606 = !DILocation(line: 1600, column: 169, scope: !1199)
!9607 = !DILocation(line: 1600, column: 187, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !1199, file: !13, line: 1600, column: 184)
!9609 = !DILocation(line: 1600, column: 204, scope: !9608)
!9610 = !DILocation(line: 1600, column: 184, scope: !9608)
!9611 = !DILocation(line: 1600, column: 214, scope: !9608)
!9612 = !DILocation(line: 1600, column: 184, scope: !1199)
!9613 = !DILocation(line: 1600, column: 184, scope: !9614)
!9614 = !DILexicalBlockFile(scope: !1199, file: !13, discriminator: 5)
!9615 = !DILocation(line: 1600, column: 245, scope: !9616)
!9616 = !DILexicalBlockFile(scope: !9608, file: !13, discriminator: 6)
!9617 = !DILocation(line: 1600, column: 263, scope: !9608)
!9618 = !DILocation(line: 1600, column: 273, scope: !9608)
!9619 = !DILocation(line: 1600, column: 298, scope: !9608)
!9620 = !DILocation(line: 1600, column: 229, scope: !9608)
!9621 = !DILocation(line: 1600, column: 317, scope: !9622)
!9622 = !DILexicalBlockFile(scope: !1200, file: !13, discriminator: 7)
!9623 = !DILocation(line: 1600, column: 317, scope: !1199)
!9624 = !DILocation(line: 1600, column: 317, scope: !9625)
!9625 = !DILexicalBlockFile(scope: !1199, file: !13, discriminator: 8)
!9626 = !DILocation(line: 1600, column: 330, scope: !9627)
!9627 = !DILexicalBlockFile(scope: !1200, file: !13, discriminator: 9)
!9628 = !DILocation(line: 1600, column: 332, scope: !9629)
!9629 = !DILexicalBlockFile(scope: !9630, file: !13, discriminator: 10)
!9630 = !DILexicalBlockFile(scope: !1187, file: !13, discriminator: 3)
!9631 = !DILocation(line: 1600, column: 332, scope: !1197)
!9632 = !DILocation(line: 1600, column: 332, scope: !9633)
!9633 = !DILexicalBlockFile(scope: !1197, file: !13, discriminator: 11)
!9634 = !DILocation(line: 1601, column: 16, scope: !1187)
!9635 = !DILocation(line: 1601, column: 9, scope: !1187)
!9636 = !DILocation(line: 1602, column: 5, scope: !1188)
!9637 = !DILocation(line: 1604, column: 9, scope: !1203)
!9638 = !DILocation(line: 1604, column: 13, scope: !1203)
!9639 = !DILocation(line: 1605, column: 9, scope: !1203)
!9640 = !DILocation(line: 1605, column: 20, scope: !1203)
!9641 = !DILocation(line: 1605, column: 32, scope: !1203)
!9642 = !DILocation(line: 1607, column: 50, scope: !1203)
!9643 = !DILocation(line: 1607, column: 56, scope: !1203)
!9644 = !DILocation(line: 1607, column: 18, scope: !1203)
!9645 = !DILocation(line: 1607, column: 16, scope: !1203)
!9646 = !DILocation(line: 1608, column: 13, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1608, column: 13)
!9648 = !DILocation(line: 1608, column: 20, scope: !9647)
!9649 = !DILocation(line: 1608, column: 13, scope: !1203)
!9650 = !DILocation(line: 1609, column: 13, scope: !9647)
!9651 = !DILocation(line: 1610, column: 47, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1610, column: 13)
!9653 = !DILocation(line: 1610, column: 31, scope: !9652)
!9654 = !DILocation(line: 1610, column: 56, scope: !9652)
!9655 = !DILocation(line: 1610, column: 62, scope: !9652)
!9656 = !DILocation(line: 1610, column: 29, scope: !9652)
!9657 = !DILocation(line: 1610, column: 29, scope: !9658)
!9658 = !DILexicalBlockFile(scope: !9652, file: !13, discriminator: 1)
!9659 = !DILocation(line: 1610, column: 105, scope: !9660)
!9660 = !DILexicalBlockFile(scope: !9652, file: !13, discriminator: 2)
!9661 = !DILocation(line: 1610, column: 75, scope: !9652)
!9662 = !DILocation(line: 1610, column: 116, scope: !9663)
!9663 = !DILexicalBlockFile(scope: !9664, file: !13, discriminator: 4)
!9664 = !DILexicalBlockFile(scope: !9652, file: !13, discriminator: 3)
!9665 = !DILocation(line: 1610, column: 13, scope: !1203)
!9666 = !DILocation(line: 1611, column: 13, scope: !9652)
!9667 = !DILocation(line: 1612, column: 70, scope: !1203)
!9668 = !DILocation(line: 1612, column: 52, scope: !1203)
!9669 = !DILocation(line: 1612, column: 80, scope: !1203)
!9670 = !DILocation(line: 1612, column: 19, scope: !1203)
!9671 = !DILocation(line: 1615, column: 9, scope: !1203)
!9672 = !DILocation(line: 1615, column: 16, scope: !9673)
!9673 = !DILexicalBlockFile(scope: !9674, file: !13, discriminator: 2)
!9674 = !DILexicalBlockFile(scope: !1203, file: !13, discriminator: 1)
!9675 = !DILocation(line: 1615, column: 26, scope: !1203)
!9676 = !DILocation(line: 1616, column: 44, scope: !1207)
!9677 = !DILocation(line: 1616, column: 50, scope: !1207)
!9678 = !DILocation(line: 1616, column: 19, scope: !1207)
!9679 = !DILocation(line: 1616, column: 17, scope: !1207)
!9680 = !DILocation(line: 1617, column: 17, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1617, column: 17)
!9682 = !DILocation(line: 1617, column: 21, scope: !9681)
!9683 = !DILocation(line: 1617, column: 17, scope: !1207)
!9684 = !DILocation(line: 1620, column: 21, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9686, file: !13, line: 1620, column: 21)
!9686 = distinct !DILexicalBlock(scope: !9681, file: !13, line: 1617, column: 26)
!9687 = !DILocation(line: 1620, column: 21, scope: !9686)
!9688 = !DILocation(line: 1621, column: 21, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9685, file: !13, line: 1620, column: 41)
!9690 = !DILocation(line: 1623, column: 17, scope: !9686)
!9691 = !DILocation(line: 1625, column: 17, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1625, column: 17)
!9693 = !DILocation(line: 1625, column: 21, scope: !9692)
!9694 = !DILocation(line: 1625, column: 17, scope: !1207)
!9695 = !DILocation(line: 1626, column: 17, scope: !9692)
!9696 = !DILocation(line: 1627, column: 17, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1627, column: 17)
!9698 = !DILocation(line: 1627, column: 24, scope: !9697)
!9699 = !DILocation(line: 1627, column: 17, scope: !1207)
!9700 = !DILocation(line: 1628, column: 26, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9697, file: !13, line: 1627, column: 39)
!9702 = !DILocation(line: 1628, column: 24, scope: !9701)
!9703 = !DILocation(line: 1629, column: 21, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9701, file: !13, line: 1629, column: 21)
!9705 = !DILocation(line: 1629, column: 28, scope: !9704)
!9706 = !DILocation(line: 1629, column: 21, scope: !9701)
!9707 = !DILocation(line: 1630, column: 21, scope: !9704)
!9708 = !DILocation(line: 1631, column: 13, scope: !9701)
!9709 = !DILocation(line: 1632, column: 65, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1632, column: 17)
!9711 = !DILocation(line: 1632, column: 47, scope: !9710)
!9712 = !DILocation(line: 1632, column: 75, scope: !9710)
!9713 = !DILocation(line: 1632, column: 83, scope: !9710)
!9714 = !DILocation(line: 1632, column: 87, scope: !9710)
!9715 = !DILocation(line: 1633, column: 31, scope: !9710)
!9716 = !DILocation(line: 1633, column: 39, scope: !9710)
!9717 = !DILocation(line: 1633, column: 17, scope: !9710)
!9718 = !DILocation(line: 1633, column: 47, scope: !9710)
!9719 = !DILocation(line: 1632, column: 17, scope: !1207)
!9720 = !DILocation(line: 1634, column: 17, scope: !9710)
!9721 = !DILocation(line: 1635, column: 13, scope: !1207)
!9722 = !DILocation(line: 1635, column: 18, scope: !9723)
!9723 = !DILexicalBlockFile(scope: !1206, file: !13, discriminator: 1)
!9724 = !DILocation(line: 1635, column: 28, scope: !1206)
!9725 = !DILocation(line: 1635, column: 58, scope: !1206)
!9726 = !DILocation(line: 1635, column: 75, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !1206, file: !13, line: 1635, column: 72)
!9728 = !DILocation(line: 1635, column: 92, scope: !9727)
!9729 = !DILocation(line: 1635, column: 72, scope: !9727)
!9730 = !DILocation(line: 1635, column: 102, scope: !9727)
!9731 = !DILocation(line: 1635, column: 72, scope: !1206)
!9732 = !DILocation(line: 1635, column: 72, scope: !9733)
!9733 = !DILexicalBlockFile(scope: !1206, file: !13, discriminator: 2)
!9734 = !DILocation(line: 1635, column: 133, scope: !9735)
!9735 = !DILexicalBlockFile(scope: !9727, file: !13, discriminator: 3)
!9736 = !DILocation(line: 1635, column: 151, scope: !9727)
!9737 = !DILocation(line: 1635, column: 161, scope: !9727)
!9738 = !DILocation(line: 1635, column: 186, scope: !9727)
!9739 = !DILocation(line: 1635, column: 117, scope: !9727)
!9740 = !DILocation(line: 1635, column: 205, scope: !9741)
!9741 = !DILexicalBlockFile(scope: !1207, file: !13, discriminator: 4)
!9742 = !DILocation(line: 1635, column: 205, scope: !1206)
!9743 = !DILocation(line: 1635, column: 205, scope: !9744)
!9744 = !DILexicalBlockFile(scope: !1206, file: !13, discriminator: 5)
!9745 = !DILocation(line: 1636, column: 54, scope: !1207)
!9746 = !DILocation(line: 1636, column: 60, scope: !1207)
!9747 = !DILocation(line: 1636, column: 22, scope: !1207)
!9748 = !DILocation(line: 1636, column: 20, scope: !1207)
!9749 = !DILocation(line: 1637, column: 17, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1637, column: 17)
!9751 = !DILocation(line: 1637, column: 24, scope: !9750)
!9752 = !DILocation(line: 1637, column: 17, scope: !1207)
!9753 = !DILocation(line: 1638, column: 17, scope: !9750)
!9754 = !DILocation(line: 1639, column: 74, scope: !1207)
!9755 = !DILocation(line: 1639, column: 56, scope: !1207)
!9756 = !DILocation(line: 1639, column: 84, scope: !1207)
!9757 = !DILocation(line: 1639, column: 23, scope: !1207)
!9758 = !DILocation(line: 1641, column: 13, scope: !1211)
!9759 = !DILocation(line: 1641, column: 20, scope: !1211)
!9760 = !DILocation(line: 1641, column: 13, scope: !1203)
!9761 = !DILocation(line: 1642, column: 17, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1642, column: 17)
!9763 = !DILocation(line: 1642, column: 24, scope: !9762)
!9764 = !DILocation(line: 1642, column: 38, scope: !9762)
!9765 = !DILocation(line: 1642, column: 55, scope: !9766)
!9766 = !DILexicalBlockFile(scope: !9762, file: !13, discriminator: 1)
!9767 = !DILocation(line: 1642, column: 63, scope: !9762)
!9768 = !DILocation(line: 1642, column: 41, scope: !9762)
!9769 = !DILocation(line: 1642, column: 71, scope: !9762)
!9770 = !DILocation(line: 1642, column: 17, scope: !1210)
!9771 = !DILocation(line: 1643, column: 17, scope: !9762)
!9772 = !DILocation(line: 1644, column: 13, scope: !1210)
!9773 = !DILocation(line: 1644, column: 18, scope: !9774)
!9774 = !DILexicalBlockFile(scope: !1209, file: !13, discriminator: 1)
!9775 = !DILocation(line: 1644, column: 28, scope: !1209)
!9776 = !DILocation(line: 1644, column: 51, scope: !1209)
!9777 = !DILocation(line: 1644, column: 64, scope: !1215)
!9778 = !DILocation(line: 1644, column: 72, scope: !1215)
!9779 = !DILocation(line: 1644, column: 64, scope: !1209)
!9780 = !DILocation(line: 1644, column: 98, scope: !9781)
!9781 = !DILexicalBlockFile(scope: !1214, file: !13, discriminator: 2)
!9782 = !DILocation(line: 1644, column: 112, scope: !1214)
!9783 = !DILocation(line: 1644, column: 117, scope: !9784)
!9784 = !DILexicalBlockFile(scope: !1213, file: !13, discriminator: 4)
!9785 = !DILocation(line: 1644, column: 127, scope: !1213)
!9786 = !DILocation(line: 1644, column: 157, scope: !1213)
!9787 = !DILocation(line: 1644, column: 175, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !1213, file: !13, line: 1644, column: 172)
!9789 = !DILocation(line: 1644, column: 192, scope: !9788)
!9790 = !DILocation(line: 1644, column: 172, scope: !9788)
!9791 = !DILocation(line: 1644, column: 202, scope: !9788)
!9792 = !DILocation(line: 1644, column: 172, scope: !1213)
!9793 = !DILocation(line: 1644, column: 172, scope: !9794)
!9794 = !DILexicalBlockFile(scope: !1213, file: !13, discriminator: 5)
!9795 = !DILocation(line: 1644, column: 233, scope: !9796)
!9796 = !DILexicalBlockFile(scope: !9788, file: !13, discriminator: 6)
!9797 = !DILocation(line: 1644, column: 251, scope: !9788)
!9798 = !DILocation(line: 1644, column: 261, scope: !9788)
!9799 = !DILocation(line: 1644, column: 286, scope: !9788)
!9800 = !DILocation(line: 1644, column: 217, scope: !9788)
!9801 = !DILocation(line: 1644, column: 305, scope: !9802)
!9802 = !DILexicalBlockFile(scope: !1214, file: !13, discriminator: 7)
!9803 = !DILocation(line: 1644, column: 305, scope: !1213)
!9804 = !DILocation(line: 1644, column: 305, scope: !9805)
!9805 = !DILexicalBlockFile(scope: !1213, file: !13, discriminator: 8)
!9806 = !DILocation(line: 1644, column: 318, scope: !9807)
!9807 = !DILexicalBlockFile(scope: !1214, file: !13, discriminator: 9)
!9808 = !DILocation(line: 1644, column: 320, scope: !9809)
!9809 = !DILexicalBlockFile(scope: !9810, file: !13, discriminator: 10)
!9810 = !DILexicalBlockFile(scope: !1210, file: !13, discriminator: 3)
!9811 = !DILocation(line: 1644, column: 320, scope: !1209)
!9812 = !DILocation(line: 1644, column: 320, scope: !9813)
!9813 = !DILexicalBlockFile(scope: !1209, file: !13, discriminator: 11)
!9814 = !DILocation(line: 1645, column: 37, scope: !1210)
!9815 = !DILocation(line: 1645, column: 54, scope: !1210)
!9816 = !DILocation(line: 1645, column: 22, scope: !1210)
!9817 = !DILocation(line: 1645, column: 20, scope: !1210)
!9818 = !DILocation(line: 1646, column: 17, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1646, column: 17)
!9820 = !DILocation(line: 1646, column: 24, scope: !9819)
!9821 = !DILocation(line: 1646, column: 17, scope: !1210)
!9822 = !DILocation(line: 1647, column: 17, scope: !9819)
!9823 = !DILocation(line: 1648, column: 13, scope: !1210)
!9824 = !DILocation(line: 1648, column: 18, scope: !9825)
!9825 = !DILexicalBlockFile(scope: !1217, file: !13, discriminator: 1)
!9826 = !DILocation(line: 1648, column: 28, scope: !1217)
!9827 = !DILocation(line: 1648, column: 51, scope: !1217)
!9828 = !DILocation(line: 1648, column: 64, scope: !1221)
!9829 = !DILocation(line: 1648, column: 72, scope: !1221)
!9830 = !DILocation(line: 1648, column: 64, scope: !1217)
!9831 = !DILocation(line: 1648, column: 98, scope: !9832)
!9832 = !DILexicalBlockFile(scope: !1220, file: !13, discriminator: 2)
!9833 = !DILocation(line: 1648, column: 112, scope: !1220)
!9834 = !DILocation(line: 1648, column: 117, scope: !9835)
!9835 = !DILexicalBlockFile(scope: !1219, file: !13, discriminator: 4)
!9836 = !DILocation(line: 1648, column: 127, scope: !1219)
!9837 = !DILocation(line: 1648, column: 157, scope: !1219)
!9838 = !DILocation(line: 1648, column: 175, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !1219, file: !13, line: 1648, column: 172)
!9840 = !DILocation(line: 1648, column: 192, scope: !9839)
!9841 = !DILocation(line: 1648, column: 172, scope: !9839)
!9842 = !DILocation(line: 1648, column: 202, scope: !9839)
!9843 = !DILocation(line: 1648, column: 172, scope: !1219)
!9844 = !DILocation(line: 1648, column: 172, scope: !9845)
!9845 = !DILexicalBlockFile(scope: !1219, file: !13, discriminator: 5)
!9846 = !DILocation(line: 1648, column: 233, scope: !9847)
!9847 = !DILexicalBlockFile(scope: !9839, file: !13, discriminator: 6)
!9848 = !DILocation(line: 1648, column: 251, scope: !9839)
!9849 = !DILocation(line: 1648, column: 261, scope: !9839)
!9850 = !DILocation(line: 1648, column: 286, scope: !9839)
!9851 = !DILocation(line: 1648, column: 217, scope: !9839)
!9852 = !DILocation(line: 1648, column: 305, scope: !9853)
!9853 = !DILexicalBlockFile(scope: !1220, file: !13, discriminator: 7)
!9854 = !DILocation(line: 1648, column: 305, scope: !1219)
!9855 = !DILocation(line: 1648, column: 305, scope: !9856)
!9856 = !DILexicalBlockFile(scope: !1219, file: !13, discriminator: 8)
!9857 = !DILocation(line: 1648, column: 318, scope: !9858)
!9858 = !DILexicalBlockFile(scope: !1220, file: !13, discriminator: 9)
!9859 = !DILocation(line: 1648, column: 320, scope: !9809)
!9860 = !DILocation(line: 1648, column: 320, scope: !1217)
!9861 = !DILocation(line: 1648, column: 320, scope: !9862)
!9862 = !DILexicalBlockFile(scope: !1217, file: !13, discriminator: 11)
!9863 = !DILocation(line: 1649, column: 9, scope: !1210)
!9864 = !DILocation(line: 1650, column: 16, scope: !1203)
!9865 = !DILocation(line: 1650, column: 9, scope: !1203)
!9866 = !DILocation(line: 1651, column: 5, scope: !1188)
!9867 = !DILocation(line: 1653, column: 5, scope: !1170)
!9868 = !DILocation(line: 1653, column: 10, scope: !9869)
!9869 = !DILexicalBlockFile(scope: !1223, file: !13, discriminator: 1)
!9870 = !DILocation(line: 1653, column: 20, scope: !1223)
!9871 = !DILocation(line: 1653, column: 51, scope: !1223)
!9872 = !DILocation(line: 1653, column: 64, scope: !1226)
!9873 = !DILocation(line: 1653, column: 80, scope: !1226)
!9874 = !DILocation(line: 1653, column: 64, scope: !1223)
!9875 = !DILocation(line: 1653, column: 95, scope: !9876)
!9876 = !DILexicalBlockFile(scope: !1226, file: !13, discriminator: 2)
!9877 = !DILocation(line: 1653, column: 100, scope: !9878)
!9878 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 4)
!9879 = !DILocation(line: 1653, column: 110, scope: !1225)
!9880 = !DILocation(line: 1653, column: 140, scope: !1225)
!9881 = !DILocation(line: 1653, column: 166, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !1225, file: !13, line: 1653, column: 163)
!9883 = !DILocation(line: 1653, column: 183, scope: !9882)
!9884 = !DILocation(line: 1653, column: 163, scope: !9882)
!9885 = !DILocation(line: 1653, column: 193, scope: !9882)
!9886 = !DILocation(line: 1653, column: 163, scope: !1225)
!9887 = !DILocation(line: 1653, column: 163, scope: !9888)
!9888 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 5)
!9889 = !DILocation(line: 1653, column: 224, scope: !9890)
!9890 = !DILexicalBlockFile(scope: !9882, file: !13, discriminator: 6)
!9891 = !DILocation(line: 1653, column: 242, scope: !9882)
!9892 = !DILocation(line: 1653, column: 252, scope: !9882)
!9893 = !DILocation(line: 1653, column: 277, scope: !9882)
!9894 = !DILocation(line: 1653, column: 208, scope: !9882)
!9895 = !DILocation(line: 1653, column: 296, scope: !9896)
!9896 = !DILexicalBlockFile(scope: !1226, file: !13, discriminator: 7)
!9897 = !DILocation(line: 1653, column: 296, scope: !1225)
!9898 = !DILocation(line: 1653, column: 296, scope: !9899)
!9899 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 8)
!9900 = !DILocation(line: 1653, column: 296, scope: !9901)
!9901 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 9)
!9902 = !DILocation(line: 1653, column: 309, scope: !9903)
!9903 = !DILexicalBlockFile(scope: !9904, file: !13, discriminator: 10)
!9904 = !DILexicalBlockFile(scope: !1170, file: !13, discriminator: 3)
!9905 = !DILocation(line: 1653, column: 309, scope: !1223)
!9906 = !DILocation(line: 1653, column: 309, scope: !9907)
!9907 = !DILexicalBlockFile(scope: !1223, file: !13, discriminator: 11)
!9908 = !DILocation(line: 1654, column: 5, scope: !1170)
!9909 = !DILocation(line: 1654, column: 10, scope: !9910)
!9910 = !DILexicalBlockFile(scope: !1228, file: !13, discriminator: 1)
!9911 = !DILocation(line: 1654, column: 20, scope: !1228)
!9912 = !DILocation(line: 1654, column: 51, scope: !1228)
!9913 = !DILocation(line: 1654, column: 64, scope: !1231)
!9914 = !DILocation(line: 1654, column: 80, scope: !1231)
!9915 = !DILocation(line: 1654, column: 64, scope: !1228)
!9916 = !DILocation(line: 1654, column: 95, scope: !9917)
!9917 = !DILexicalBlockFile(scope: !1231, file: !13, discriminator: 2)
!9918 = !DILocation(line: 1654, column: 100, scope: !9919)
!9919 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 4)
!9920 = !DILocation(line: 1654, column: 110, scope: !1230)
!9921 = !DILocation(line: 1654, column: 140, scope: !1230)
!9922 = !DILocation(line: 1654, column: 166, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !1230, file: !13, line: 1654, column: 163)
!9924 = !DILocation(line: 1654, column: 183, scope: !9923)
!9925 = !DILocation(line: 1654, column: 163, scope: !9923)
!9926 = !DILocation(line: 1654, column: 193, scope: !9923)
!9927 = !DILocation(line: 1654, column: 163, scope: !1230)
!9928 = !DILocation(line: 1654, column: 163, scope: !9929)
!9929 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 5)
!9930 = !DILocation(line: 1654, column: 224, scope: !9931)
!9931 = !DILexicalBlockFile(scope: !9923, file: !13, discriminator: 6)
!9932 = !DILocation(line: 1654, column: 242, scope: !9923)
!9933 = !DILocation(line: 1654, column: 252, scope: !9923)
!9934 = !DILocation(line: 1654, column: 277, scope: !9923)
!9935 = !DILocation(line: 1654, column: 208, scope: !9923)
!9936 = !DILocation(line: 1654, column: 296, scope: !9937)
!9937 = !DILexicalBlockFile(scope: !1231, file: !13, discriminator: 7)
!9938 = !DILocation(line: 1654, column: 296, scope: !1230)
!9939 = !DILocation(line: 1654, column: 296, scope: !9940)
!9940 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 8)
!9941 = !DILocation(line: 1654, column: 296, scope: !9942)
!9942 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 9)
!9943 = !DILocation(line: 1654, column: 309, scope: !9903)
!9944 = !DILocation(line: 1654, column: 309, scope: !1228)
!9945 = !DILocation(line: 1654, column: 309, scope: !9946)
!9946 = !DILexicalBlockFile(scope: !1228, file: !13, discriminator: 11)
!9947 = !DILocation(line: 1655, column: 5, scope: !1170)
!9948 = !DILocation(line: 1656, column: 1, scope: !1170)
!9949 = !DILocation(line: 1930, column: 32, scope: !1238)
!9950 = !DILocation(line: 1930, column: 48, scope: !1238)
!9951 = !DILocation(line: 1932, column: 5, scope: !1238)
!9952 = !DILocation(line: 1932, column: 16, scope: !1238)
!9953 = !DILocation(line: 1934, column: 9, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !1238, file: !13, line: 1934, column: 9)
!9955 = !DILocation(line: 1934, column: 15, scope: !9954)
!9956 = !DILocation(line: 1934, column: 18, scope: !9954)
!9957 = !DILocation(line: 1934, column: 9, scope: !1238)
!9958 = !DILocation(line: 1934, column: 30, scope: !9959)
!9959 = !DILexicalBlockFile(scope: !9960, file: !13, discriminator: 1)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !13, line: 1934, column: 30)
!9961 = distinct !DILexicalBlock(scope: !9954, file: !13, line: 1934, column: 24)
!9962 = !DILocation(line: 1934, column: 36, scope: !9960)
!9963 = !DILocation(line: 1934, column: 30, scope: !9960)
!9964 = !DILocation(line: 1934, column: 30, scope: !9961)
!9965 = !DILocation(line: 1934, column: 64, scope: !9966)
!9966 = !DILexicalBlockFile(scope: !9967, file: !13, discriminator: 2)
!9967 = distinct !DILexicalBlock(scope: !9960, file: !13, line: 1934, column: 46)
!9968 = !DILocation(line: 1934, column: 48, scope: !9967)
!9969 = !DILocation(line: 1934, column: 122, scope: !9967)
!9970 = !DILocation(line: 1934, column: 147, scope: !9971)
!9971 = !DILexicalBlockFile(scope: !9972, file: !13, discriminator: 3)
!9972 = distinct !DILexicalBlock(scope: !9960, file: !13, line: 1934, column: 129)
!9973 = !DILocation(line: 1934, column: 131, scope: !9972)
!9974 = !DILocation(line: 1934, column: 209, scope: !9975)
!9975 = !DILexicalBlockFile(scope: !9961, file: !13, discriminator: 4)
!9976 = !DILocation(line: 1934, column: 209, scope: !9961)
!9977 = !DILocation(line: 1935, column: 34, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !1238, file: !13, line: 1935, column: 9)
!9979 = !DILocation(line: 1935, column: 10, scope: !9978)
!9980 = !DILocation(line: 1935, column: 9, scope: !1238)
!9981 = !DILocation(line: 1936, column: 9, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9978, file: !13, line: 1935, column: 64)
!9983 = !DILocation(line: 1938, column: 36, scope: !1238)
!9984 = !DILocation(line: 1938, column: 42, scope: !1238)
!9985 = !DILocation(line: 1938, column: 12, scope: !1238)
!9986 = !DILocation(line: 1938, column: 5, scope: !1238)
!9987 = !DILocation(line: 1939, column: 1, scope: !1238)
!9988 = !DILocation(line: 2566, column: 29, scope: !1243)
!9989 = !DILocation(line: 2566, column: 45, scope: !1243)
!9990 = !DILocation(line: 2568, column: 9, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !1243, file: !13, line: 2568, column: 9)
!9992 = !DILocation(line: 2568, column: 15, scope: !9991)
!9993 = !DILocation(line: 2568, column: 18, scope: !9991)
!9994 = !DILocation(line: 2568, column: 9, scope: !1243)
!9995 = !DILocation(line: 2568, column: 30, scope: !9996)
!9996 = !DILexicalBlockFile(scope: !9997, file: !13, discriminator: 1)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !13, line: 2568, column: 30)
!9998 = distinct !DILexicalBlock(scope: !9991, file: !13, line: 2568, column: 24)
!9999 = !DILocation(line: 2568, column: 36, scope: !9997)
!10000 = !DILocation(line: 2568, column: 30, scope: !9997)
!10001 = !DILocation(line: 2568, column: 30, scope: !9998)
!10002 = !DILocation(line: 2568, column: 64, scope: !10003)
!10003 = !DILexicalBlockFile(scope: !10004, file: !13, discriminator: 2)
!10004 = distinct !DILexicalBlock(scope: !9997, file: !13, line: 2568, column: 46)
!10005 = !DILocation(line: 2568, column: 48, scope: !10004)
!10006 = !DILocation(line: 2568, column: 122, scope: !10004)
!10007 = !DILocation(line: 2568, column: 147, scope: !10008)
!10008 = !DILexicalBlockFile(scope: !10009, file: !13, discriminator: 3)
!10009 = distinct !DILexicalBlock(scope: !9997, file: !13, line: 2568, column: 129)
!10010 = !DILocation(line: 2568, column: 131, scope: !10009)
!10011 = !DILocation(line: 2568, column: 209, scope: !10012)
!10012 = !DILexicalBlockFile(scope: !9998, file: !13, discriminator: 4)
!10013 = !DILocation(line: 2569, column: 5, scope: !1243)
!10014 = !DILocation(line: 2569, column: 10, scope: !10015)
!10015 = !DILexicalBlockFile(scope: !1248, file: !13, discriminator: 1)
!10016 = !DILocation(line: 2569, column: 14, scope: !1248)
!10017 = !DILocation(line: 2569, column: 17, scope: !1248)
!10018 = !DILocation(line: 2569, column: 27, scope: !1248)
!10019 = !DILocation(line: 2569, column: 51, scope: !1255)
!10020 = !DILocation(line: 2569, column: 39, scope: !1255)
!10021 = !DILocation(line: 2569, column: 59, scope: !1255)
!10022 = !DILocation(line: 2569, column: 68, scope: !1255)
!10023 = !DILocation(line: 2569, column: 37, scope: !1248)
!10024 = !DILocation(line: 2569, column: 100, scope: !10025)
!10025 = !DILexicalBlockFile(scope: !1253, file: !13, discriminator: 2)
!10026 = !DILocation(line: 2569, column: 106, scope: !1253)
!10027 = !DILocation(line: 2569, column: 110, scope: !1253)
!10028 = !DILocation(line: 2569, column: 100, scope: !1254)
!10029 = !DILocation(line: 2569, column: 146, scope: !10030)
!10030 = !DILexicalBlockFile(scope: !1253, file: !13, discriminator: 4)
!10031 = !DILocation(line: 2569, column: 152, scope: !1253)
!10032 = !DILocation(line: 2569, column: 129, scope: !1253)
!10033 = !DILocation(line: 2569, column: 127, scope: !1253)
!10034 = !DILocation(line: 2569, column: 125, scope: !1253)
!10035 = !DILocation(line: 2569, column: 197, scope: !10036)
!10036 = !DILexicalBlockFile(scope: !1252, file: !13, discriminator: 5)
!10037 = !DILocation(line: 2569, column: 172, scope: !1252)
!10038 = !DILocation(line: 2569, column: 170, scope: !1252)
!10039 = !DILocation(line: 2569, column: 220, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !1252, file: !13, line: 2569, column: 220)
!10041 = !DILocation(line: 2569, column: 225, scope: !10040)
!10042 = !DILocation(line: 2569, column: 220, scope: !1252)
!10043 = !DILocation(line: 2569, column: 240, scope: !10044)
!10044 = !DILexicalBlockFile(scope: !10040, file: !13, discriminator: 7)
!10045 = !DILocation(line: 2569, column: 240, scope: !10040)
!10046 = !DILocation(line: 2569, column: 279, scope: !10047)
!10047 = !DILexicalBlockFile(scope: !1252, file: !13, discriminator: 8)
!10048 = !DILocation(line: 2569, column: 263, scope: !1252)
!10049 = !DILocation(line: 2569, column: 261, scope: !1252)
!10050 = !DILocation(line: 2569, column: 286, scope: !1252)
!10051 = !DILocation(line: 2569, column: 291, scope: !10052)
!10052 = !DILexicalBlockFile(scope: !1251, file: !13, discriminator: 10)
!10053 = !DILocation(line: 2569, column: 301, scope: !1251)
!10054 = !DILocation(line: 2569, column: 331, scope: !1251)
!10055 = !DILocation(line: 2569, column: 346, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !1251, file: !13, line: 2569, column: 343)
!10057 = !DILocation(line: 2569, column: 363, scope: !10056)
!10058 = !DILocation(line: 2569, column: 343, scope: !10056)
!10059 = !DILocation(line: 2569, column: 373, scope: !10056)
!10060 = !DILocation(line: 2569, column: 343, scope: !1251)
!10061 = !DILocation(line: 2569, column: 343, scope: !10062)
!10062 = !DILexicalBlockFile(scope: !1251, file: !13, discriminator: 11)
!10063 = !DILocation(line: 2569, column: 404, scope: !10064)
!10064 = !DILexicalBlockFile(scope: !10056, file: !13, discriminator: 12)
!10065 = !DILocation(line: 2569, column: 422, scope: !10056)
!10066 = !DILocation(line: 2569, column: 432, scope: !10056)
!10067 = !DILocation(line: 2569, column: 457, scope: !10056)
!10068 = !DILocation(line: 2569, column: 388, scope: !10056)
!10069 = !DILocation(line: 2569, column: 476, scope: !10070)
!10070 = !DILexicalBlockFile(scope: !1252, file: !13, discriminator: 13)
!10071 = !DILocation(line: 2569, column: 476, scope: !1251)
!10072 = !DILocation(line: 2569, column: 476, scope: !10073)
!10073 = !DILexicalBlockFile(scope: !1251, file: !13, discriminator: 14)
!10074 = !DILocation(line: 2569, column: 493, scope: !10075)
!10075 = !DILexicalBlockFile(scope: !10076, file: !13, discriminator: 15)
!10076 = distinct !DILexicalBlock(scope: !1252, file: !13, line: 2569, column: 493)
!10077 = !DILocation(line: 2569, column: 495, scope: !10076)
!10078 = !DILocation(line: 2569, column: 493, scope: !1252)
!10079 = !DILocation(line: 2569, column: 500, scope: !10080)
!10080 = !DILexicalBlockFile(scope: !10076, file: !13, discriminator: 16)
!10081 = !DILocation(line: 2569, column: 500, scope: !10076)
!10082 = !DILocation(line: 2569, column: 525, scope: !10083)
!10083 = !DILexicalBlockFile(scope: !10084, file: !13, discriminator: 6)
!10084 = distinct !DILexicalBlock(scope: !1254, file: !13, line: 2569, column: 525)
!10085 = !DILocation(line: 2569, column: 527, scope: !10084)
!10086 = !DILocation(line: 2569, column: 525, scope: !1254)
!10087 = !DILocation(line: 2569, column: 550, scope: !10088)
!10088 = !DILexicalBlockFile(scope: !10089, file: !13, discriminator: 18)
!10089 = distinct !DILexicalBlock(scope: !10084, file: !13, line: 2569, column: 532)
!10090 = !DILocation(line: 2569, column: 534, scope: !10089)
!10091 = !DILocation(line: 2569, column: 602, scope: !10089)
!10092 = !DILocation(line: 2569, column: 623, scope: !10093)
!10093 = !DILexicalBlockFile(scope: !1254, file: !13, discriminator: 19)
!10094 = !DILocation(line: 2569, column: 669, scope: !10095)
!10095 = !DILexicalBlockFile(scope: !10096, file: !13, discriminator: 3)
!10096 = distinct !DILexicalBlock(scope: !1255, file: !13, line: 2569, column: 634)
!10097 = !DILocation(line: 2569, column: 657, scope: !10096)
!10098 = !DILocation(line: 2569, column: 634, scope: !10096)
!10099 = !DILocation(line: 2569, column: 707, scope: !10096)
!10100 = !DILocation(line: 2569, column: 634, scope: !1255)
!10101 = !DILocation(line: 2569, column: 722, scope: !10102)
!10102 = !DILexicalBlockFile(scope: !10096, file: !13, discriminator: 22)
!10103 = !DILocation(line: 2569, column: 722, scope: !10096)
!10104 = !DILocation(line: 2569, column: 741, scope: !10105)
!10105 = !DILexicalBlockFile(scope: !1243, file: !13, discriminator: 21)
!10106 = !DILocation(line: 2569, column: 741, scope: !10107)
!10107 = !DILexicalBlockFile(scope: !10108, file: !13, discriminator: 24)
!10108 = !DILexicalBlockFile(scope: !10109, file: !13, discriminator: 23)
!10109 = !DILexicalBlockFile(scope: !10110, file: !13, discriminator: 20)
!10110 = !DILexicalBlockFile(scope: !10111, file: !13, discriminator: 17)
!10111 = !DILexicalBlockFile(scope: !1243, file: !13, discriminator: 9)
!10112 = !DILocation(line: 2569, column: 741, scope: !1248)
!10113 = !DILocation(line: 2570, column: 21, scope: !1243)
!10114 = !DILocation(line: 2570, column: 27, scope: !1243)
!10115 = !DILocation(line: 2570, column: 5, scope: !1243)
!10116 = !DILocation(line: 2570, column: 11, scope: !1243)
!10117 = !DILocation(line: 2570, column: 19, scope: !1243)
!10118 = !DILocation(line: 2571, column: 35, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !1243, file: !13, line: 2571, column: 9)
!10120 = !DILocation(line: 2571, column: 9, scope: !10119)
!10121 = !DILocation(line: 2571, column: 41, scope: !10119)
!10122 = !DILocation(line: 2571, column: 9, scope: !1243)
!10123 = !DILocation(line: 2572, column: 9, scope: !10119)
!10124 = !DILocation(line: 2573, column: 41, scope: !1243)
!10125 = !DILocation(line: 2573, column: 47, scope: !1243)
!10126 = !DILocation(line: 2573, column: 12, scope: !1243)
!10127 = !DILocation(line: 2573, column: 5, scope: !1243)
!10128 = !DILocation(line: 2574, column: 1, scope: !1243)
!10129 = !DILocation(line: 2577, column: 29, scope: !1256)
!10130 = !DILocation(line: 2577, column: 45, scope: !1256)
!10131 = !DILocation(line: 2579, column: 5, scope: !1256)
!10132 = !DILocation(line: 2579, column: 15, scope: !1256)
!10133 = !DILocation(line: 2580, column: 5, scope: !1256)
!10134 = !DILocation(line: 2580, column: 9, scope: !1256)
!10135 = !DILocation(line: 2581, column: 9, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2581, column: 9)
!10137 = !DILocation(line: 2581, column: 15, scope: !10136)
!10138 = !DILocation(line: 2581, column: 18, scope: !10136)
!10139 = !DILocation(line: 2581, column: 9, scope: !1256)
!10140 = !DILocation(line: 2581, column: 30, scope: !10141)
!10141 = !DILexicalBlockFile(scope: !10142, file: !13, discriminator: 1)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !13, line: 2581, column: 30)
!10143 = distinct !DILexicalBlock(scope: !10136, file: !13, line: 2581, column: 24)
!10144 = !DILocation(line: 2581, column: 36, scope: !10142)
!10145 = !DILocation(line: 2581, column: 30, scope: !10142)
!10146 = !DILocation(line: 2581, column: 30, scope: !10143)
!10147 = !DILocation(line: 2581, column: 64, scope: !10148)
!10148 = !DILexicalBlockFile(scope: !10149, file: !13, discriminator: 2)
!10149 = distinct !DILexicalBlock(scope: !10142, file: !13, line: 2581, column: 46)
!10150 = !DILocation(line: 2581, column: 48, scope: !10149)
!10151 = !DILocation(line: 2581, column: 122, scope: !10149)
!10152 = !DILocation(line: 2581, column: 147, scope: !10153)
!10153 = !DILexicalBlockFile(scope: !10154, file: !13, discriminator: 3)
!10154 = distinct !DILexicalBlock(scope: !10142, file: !13, line: 2581, column: 129)
!10155 = !DILocation(line: 2581, column: 131, scope: !10154)
!10156 = !DILocation(line: 2581, column: 209, scope: !10157)
!10157 = !DILexicalBlockFile(scope: !10143, file: !13, discriminator: 4)
!10158 = !DILocation(line: 2581, column: 209, scope: !10143)
!10159 = !DILocation(line: 2583, column: 36, scope: !1256)
!10160 = !DILocation(line: 2583, column: 11, scope: !1256)
!10161 = !DILocation(line: 2583, column: 9, scope: !1256)
!10162 = !DILocation(line: 2584, column: 9, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2584, column: 9)
!10164 = !DILocation(line: 2584, column: 13, scope: !10163)
!10165 = !DILocation(line: 2584, column: 9, scope: !1256)
!10166 = !DILocation(line: 2585, column: 9, scope: !10163)
!10167 = !DILocation(line: 2586, column: 25, scope: !1256)
!10168 = !DILocation(line: 2586, column: 9, scope: !1256)
!10169 = !DILocation(line: 2586, column: 7, scope: !1256)
!10170 = !DILocation(line: 2587, column: 5, scope: !1256)
!10171 = !DILocation(line: 2587, column: 10, scope: !10172)
!10172 = !DILexicalBlockFile(scope: !1263, file: !13, discriminator: 1)
!10173 = !DILocation(line: 2587, column: 20, scope: !1263)
!10174 = !DILocation(line: 2587, column: 50, scope: !1263)
!10175 = !DILocation(line: 2587, column: 64, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !1263, file: !13, line: 2587, column: 61)
!10177 = !DILocation(line: 2587, column: 81, scope: !10176)
!10178 = !DILocation(line: 2587, column: 61, scope: !10176)
!10179 = !DILocation(line: 2587, column: 91, scope: !10176)
!10180 = !DILocation(line: 2587, column: 61, scope: !1263)
!10181 = !DILocation(line: 2587, column: 61, scope: !10182)
!10182 = !DILexicalBlockFile(scope: !1263, file: !13, discriminator: 2)
!10183 = !DILocation(line: 2587, column: 122, scope: !10184)
!10184 = !DILexicalBlockFile(scope: !10176, file: !13, discriminator: 3)
!10185 = !DILocation(line: 2587, column: 140, scope: !10176)
!10186 = !DILocation(line: 2587, column: 150, scope: !10176)
!10187 = !DILocation(line: 2587, column: 175, scope: !10176)
!10188 = !DILocation(line: 2587, column: 106, scope: !10176)
!10189 = !DILocation(line: 2587, column: 194, scope: !10190)
!10190 = !DILexicalBlockFile(scope: !1256, file: !13, discriminator: 4)
!10191 = !DILocation(line: 2587, column: 194, scope: !1263)
!10192 = !DILocation(line: 2587, column: 194, scope: !10193)
!10193 = !DILexicalBlockFile(scope: !1263, file: !13, discriminator: 5)
!10194 = !DILocation(line: 2588, column: 9, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2588, column: 9)
!10196 = !DILocation(line: 2588, column: 11, scope: !10195)
!10197 = !DILocation(line: 2588, column: 9, scope: !1256)
!10198 = !DILocation(line: 2589, column: 9, scope: !10195)
!10199 = !DILocation(line: 2591, column: 9, scope: !1266)
!10200 = !DILocation(line: 2591, column: 11, scope: !1266)
!10201 = !DILocation(line: 2591, column: 9, scope: !1256)
!10202 = !DILocation(line: 2592, column: 62, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !1266, file: !13, line: 2591, column: 16)
!10204 = !DILocation(line: 2592, column: 9, scope: !10203)
!10205 = !DILocation(line: 2595, column: 9, scope: !1265)
!10206 = !DILocation(line: 2595, column: 19, scope: !1265)
!10207 = !DILocation(line: 2595, column: 38, scope: !1265)
!10208 = !DILocation(line: 2595, column: 44, scope: !1265)
!10209 = !DILocation(line: 2596, column: 13, scope: !1273)
!10210 = !DILocation(line: 2596, column: 19, scope: !1273)
!10211 = !DILocation(line: 2596, column: 13, scope: !1265)
!10212 = !DILocation(line: 2597, column: 48, scope: !1272)
!10213 = !DILocation(line: 2597, column: 54, scope: !1272)
!10214 = !DILocation(line: 2597, column: 88, scope: !1272)
!10215 = !DILocation(line: 2597, column: 19, scope: !1272)
!10216 = !DILocation(line: 2597, column: 17, scope: !1272)
!10217 = !DILocation(line: 2598, column: 17, scope: !1271)
!10218 = !DILocation(line: 2598, column: 17, scope: !1272)
!10219 = !DILocation(line: 2599, column: 17, scope: !1271)
!10220 = !DILocation(line: 2599, column: 22, scope: !10221)
!10221 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 1)
!10222 = !DILocation(line: 2599, column: 32, scope: !1270)
!10223 = !DILocation(line: 2599, column: 62, scope: !1270)
!10224 = !DILocation(line: 2599, column: 76, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !1270, file: !13, line: 2599, column: 73)
!10226 = !DILocation(line: 2599, column: 93, scope: !10225)
!10227 = !DILocation(line: 2599, column: 73, scope: !10225)
!10228 = !DILocation(line: 2599, column: 103, scope: !10225)
!10229 = !DILocation(line: 2599, column: 73, scope: !1270)
!10230 = !DILocation(line: 2599, column: 73, scope: !10231)
!10231 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 2)
!10232 = !DILocation(line: 2599, column: 134, scope: !10233)
!10233 = !DILexicalBlockFile(scope: !10225, file: !13, discriminator: 3)
!10234 = !DILocation(line: 2599, column: 152, scope: !10225)
!10235 = !DILocation(line: 2599, column: 162, scope: !10225)
!10236 = !DILocation(line: 2599, column: 187, scope: !10225)
!10237 = !DILocation(line: 2599, column: 118, scope: !10225)
!10238 = !DILocation(line: 2599, column: 206, scope: !10239)
!10239 = !DILexicalBlockFile(scope: !1271, file: !13, discriminator: 4)
!10240 = !DILocation(line: 2599, column: 206, scope: !1270)
!10241 = !DILocation(line: 2599, column: 206, scope: !10242)
!10242 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 5)
!10243 = !DILocation(line: 2599, column: 206, scope: !10244)
!10244 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 6)
!10245 = !DILocation(line: 2601, column: 17, scope: !1271)
!10246 = !DILocation(line: 2602, column: 9, scope: !1272)
!10247 = !DILocation(line: 2603, column: 56, scope: !1265)
!10248 = !DILocation(line: 2603, column: 44, scope: !1265)
!10249 = !DILocation(line: 2603, column: 15, scope: !1265)
!10250 = !DILocation(line: 2603, column: 13, scope: !1265)
!10251 = !DILocation(line: 2604, column: 13, scope: !1276)
!10252 = !DILocation(line: 2604, column: 17, scope: !1276)
!10253 = !DILocation(line: 2604, column: 13, scope: !1265)
!10254 = !DILocation(line: 2605, column: 13, scope: !1276)
!10255 = !DILocation(line: 2607, column: 13, scope: !1276)
!10256 = !DILocation(line: 2607, column: 18, scope: !10257)
!10257 = !DILexicalBlockFile(scope: !1275, file: !13, discriminator: 1)
!10258 = !DILocation(line: 2607, column: 28, scope: !1275)
!10259 = !DILocation(line: 2607, column: 58, scope: !1275)
!10260 = !DILocation(line: 2607, column: 72, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !1275, file: !13, line: 2607, column: 69)
!10262 = !DILocation(line: 2607, column: 89, scope: !10261)
!10263 = !DILocation(line: 2607, column: 69, scope: !10261)
!10264 = !DILocation(line: 2607, column: 99, scope: !10261)
!10265 = !DILocation(line: 2607, column: 69, scope: !1275)
!10266 = !DILocation(line: 2607, column: 69, scope: !10267)
!10267 = !DILexicalBlockFile(scope: !1275, file: !13, discriminator: 2)
!10268 = !DILocation(line: 2607, column: 130, scope: !10269)
!10269 = !DILexicalBlockFile(scope: !10261, file: !13, discriminator: 3)
!10270 = !DILocation(line: 2607, column: 148, scope: !10261)
!10271 = !DILocation(line: 2607, column: 158, scope: !10261)
!10272 = !DILocation(line: 2607, column: 183, scope: !10261)
!10273 = !DILocation(line: 2607, column: 114, scope: !10261)
!10274 = !DILocation(line: 2607, column: 202, scope: !10275)
!10275 = !DILexicalBlockFile(scope: !1276, file: !13, discriminator: 4)
!10276 = !DILocation(line: 2607, column: 202, scope: !1275)
!10277 = !DILocation(line: 2607, column: 202, scope: !10278)
!10278 = !DILexicalBlockFile(scope: !1275, file: !13, discriminator: 5)
!10279 = !DILocation(line: 2609, column: 44, scope: !1265)
!10280 = !DILocation(line: 2609, column: 50, scope: !1265)
!10281 = !DILocation(line: 2609, column: 15, scope: !1265)
!10282 = !DILocation(line: 2609, column: 13, scope: !1265)
!10283 = !DILocation(line: 2610, column: 13, scope: !1282)
!10284 = !DILocation(line: 2610, column: 17, scope: !1282)
!10285 = !DILocation(line: 2610, column: 13, scope: !1265)
!10286 = !DILocation(line: 2611, column: 17, scope: !1280)
!10287 = !DILocation(line: 2611, column: 21, scope: !1280)
!10288 = !DILocation(line: 2611, column: 17, scope: !1281)
!10289 = !DILocation(line: 2612, column: 17, scope: !1279)
!10290 = !DILocation(line: 2612, column: 22, scope: !10291)
!10291 = !DILexicalBlockFile(scope: !1278, file: !13, discriminator: 1)
!10292 = !DILocation(line: 2612, column: 32, scope: !1278)
!10293 = !DILocation(line: 2612, column: 55, scope: !1278)
!10294 = !DILocation(line: 2612, column: 65, scope: !1286)
!10295 = !DILocation(line: 2612, column: 73, scope: !1286)
!10296 = !DILocation(line: 2612, column: 65, scope: !1278)
!10297 = !DILocation(line: 2612, column: 96, scope: !10298)
!10298 = !DILexicalBlockFile(scope: !1285, file: !13, discriminator: 2)
!10299 = !DILocation(line: 2612, column: 110, scope: !1285)
!10300 = !DILocation(line: 2612, column: 115, scope: !10301)
!10301 = !DILexicalBlockFile(scope: !1284, file: !13, discriminator: 4)
!10302 = !DILocation(line: 2612, column: 125, scope: !1284)
!10303 = !DILocation(line: 2612, column: 155, scope: !1284)
!10304 = !DILocation(line: 2612, column: 173, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !1284, file: !13, line: 2612, column: 170)
!10306 = !DILocation(line: 2612, column: 190, scope: !10305)
!10307 = !DILocation(line: 2612, column: 170, scope: !10305)
!10308 = !DILocation(line: 2612, column: 200, scope: !10305)
!10309 = !DILocation(line: 2612, column: 170, scope: !1284)
!10310 = !DILocation(line: 2612, column: 170, scope: !10311)
!10311 = !DILexicalBlockFile(scope: !1284, file: !13, discriminator: 5)
!10312 = !DILocation(line: 2612, column: 231, scope: !10313)
!10313 = !DILexicalBlockFile(scope: !10305, file: !13, discriminator: 6)
!10314 = !DILocation(line: 2612, column: 249, scope: !10305)
!10315 = !DILocation(line: 2612, column: 259, scope: !10305)
!10316 = !DILocation(line: 2612, column: 284, scope: !10305)
!10317 = !DILocation(line: 2612, column: 215, scope: !10305)
!10318 = !DILocation(line: 2612, column: 303, scope: !10319)
!10319 = !DILexicalBlockFile(scope: !1285, file: !13, discriminator: 7)
!10320 = !DILocation(line: 2612, column: 303, scope: !1284)
!10321 = !DILocation(line: 2612, column: 303, scope: !10322)
!10322 = !DILexicalBlockFile(scope: !1284, file: !13, discriminator: 8)
!10323 = !DILocation(line: 2612, column: 316, scope: !10324)
!10324 = !DILexicalBlockFile(scope: !1285, file: !13, discriminator: 9)
!10325 = !DILocation(line: 2612, column: 318, scope: !10326)
!10326 = !DILexicalBlockFile(scope: !10327, file: !13, discriminator: 10)
!10327 = !DILexicalBlockFile(scope: !1279, file: !13, discriminator: 3)
!10328 = !DILocation(line: 2612, column: 318, scope: !1278)
!10329 = !DILocation(line: 2612, column: 318, scope: !10330)
!10330 = !DILexicalBlockFile(scope: !1278, file: !13, discriminator: 11)
!10331 = !DILocation(line: 2613, column: 31, scope: !1279)
!10332 = !DILocation(line: 2613, column: 36, scope: !1279)
!10333 = !DILocation(line: 2613, column: 41, scope: !1279)
!10334 = !DILocation(line: 2613, column: 17, scope: !1279)
!10335 = !DILocation(line: 2614, column: 13, scope: !1279)
!10336 = !DILocation(line: 2616, column: 17, scope: !1288)
!10337 = !DILocation(line: 2616, column: 27, scope: !1288)
!10338 = !DILocation(line: 2617, column: 17, scope: !1288)
!10339 = !DILocation(line: 2617, column: 22, scope: !10340)
!10340 = !DILexicalBlockFile(scope: !1290, file: !13, discriminator: 1)
!10341 = !DILocation(line: 2617, column: 32, scope: !1290)
!10342 = !DILocation(line: 2617, column: 62, scope: !1290)
!10343 = !DILocation(line: 2617, column: 76, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !1290, file: !13, line: 2617, column: 73)
!10345 = !DILocation(line: 2617, column: 93, scope: !10344)
!10346 = !DILocation(line: 2617, column: 73, scope: !10344)
!10347 = !DILocation(line: 2617, column: 103, scope: !10344)
!10348 = !DILocation(line: 2617, column: 73, scope: !1290)
!10349 = !DILocation(line: 2617, column: 73, scope: !10350)
!10350 = !DILexicalBlockFile(scope: !1290, file: !13, discriminator: 2)
!10351 = !DILocation(line: 2617, column: 134, scope: !10352)
!10352 = !DILexicalBlockFile(scope: !10344, file: !13, discriminator: 3)
!10353 = !DILocation(line: 2617, column: 152, scope: !10344)
!10354 = !DILocation(line: 2617, column: 162, scope: !10344)
!10355 = !DILocation(line: 2617, column: 187, scope: !10344)
!10356 = !DILocation(line: 2617, column: 118, scope: !10344)
!10357 = !DILocation(line: 2617, column: 206, scope: !10358)
!10358 = !DILexicalBlockFile(scope: !1288, file: !13, discriminator: 4)
!10359 = !DILocation(line: 2617, column: 206, scope: !1290)
!10360 = !DILocation(line: 2617, column: 206, scope: !10361)
!10361 = !DILexicalBlockFile(scope: !1290, file: !13, discriminator: 5)
!10362 = !DILocation(line: 2618, column: 17, scope: !1288)
!10363 = !DILocation(line: 2618, column: 22, scope: !10364)
!10364 = !DILexicalBlockFile(scope: !1292, file: !13, discriminator: 1)
!10365 = !DILocation(line: 2618, column: 32, scope: !1292)
!10366 = !DILocation(line: 2618, column: 63, scope: !1292)
!10367 = !DILocation(line: 2618, column: 72, scope: !1295)
!10368 = !DILocation(line: 2618, column: 88, scope: !1295)
!10369 = !DILocation(line: 2618, column: 72, scope: !1292)
!10370 = !DILocation(line: 2618, column: 103, scope: !10371)
!10371 = !DILexicalBlockFile(scope: !1295, file: !13, discriminator: 2)
!10372 = !DILocation(line: 2618, column: 108, scope: !10373)
!10373 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 4)
!10374 = !DILocation(line: 2618, column: 118, scope: !1294)
!10375 = !DILocation(line: 2618, column: 148, scope: !1294)
!10376 = !DILocation(line: 2618, column: 174, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !1294, file: !13, line: 2618, column: 171)
!10378 = !DILocation(line: 2618, column: 191, scope: !10377)
!10379 = !DILocation(line: 2618, column: 171, scope: !10377)
!10380 = !DILocation(line: 2618, column: 201, scope: !10377)
!10381 = !DILocation(line: 2618, column: 171, scope: !1294)
!10382 = !DILocation(line: 2618, column: 171, scope: !10383)
!10383 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 5)
!10384 = !DILocation(line: 2618, column: 232, scope: !10385)
!10385 = !DILexicalBlockFile(scope: !10377, file: !13, discriminator: 6)
!10386 = !DILocation(line: 2618, column: 250, scope: !10377)
!10387 = !DILocation(line: 2618, column: 260, scope: !10377)
!10388 = !DILocation(line: 2618, column: 285, scope: !10377)
!10389 = !DILocation(line: 2618, column: 216, scope: !10377)
!10390 = !DILocation(line: 2618, column: 304, scope: !10391)
!10391 = !DILexicalBlockFile(scope: !1295, file: !13, discriminator: 7)
!10392 = !DILocation(line: 2618, column: 304, scope: !1294)
!10393 = !DILocation(line: 2618, column: 304, scope: !10394)
!10394 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 8)
!10395 = !DILocation(line: 2618, column: 304, scope: !10396)
!10396 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 9)
!10397 = !DILocation(line: 2618, column: 317, scope: !10398)
!10398 = !DILexicalBlockFile(scope: !10399, file: !13, discriminator: 10)
!10399 = !DILexicalBlockFile(scope: !1288, file: !13, discriminator: 3)
!10400 = !DILocation(line: 2618, column: 317, scope: !1292)
!10401 = !DILocation(line: 2618, column: 317, scope: !10402)
!10402 = !DILexicalBlockFile(scope: !1292, file: !13, discriminator: 11)
!10403 = !DILocation(line: 2619, column: 17, scope: !1288)
!10404 = !DILocation(line: 2620, column: 17, scope: !1288)
!10405 = !DILocation(line: 2621, column: 40, scope: !1288)
!10406 = !DILocation(line: 2621, column: 46, scope: !1288)
!10407 = !DILocation(line: 2621, column: 17, scope: !1288)
!10408 = !DILocation(line: 2622, column: 31, scope: !1288)
!10409 = !DILocation(line: 2622, column: 36, scope: !1288)
!10410 = !DILocation(line: 2622, column: 42, scope: !1288)
!10411 = !DILocation(line: 2622, column: 17, scope: !1288)
!10412 = !DILocation(line: 2623, column: 13, scope: !1280)
!10413 = !DILocation(line: 2624, column: 9, scope: !1281)
!10414 = !DILocation(line: 2625, column: 16, scope: !1265)
!10415 = !DILocation(line: 2625, column: 9, scope: !1265)
!10416 = !DILocation(line: 2626, column: 5, scope: !1266)
!10417 = !DILocation(line: 2627, column: 1, scope: !1256)
!10418 = !DILocation(line: 2523, column: 30, scope: !1296)
!10419 = !DILocation(line: 2523, column: 46, scope: !1296)
!10420 = !DILocation(line: 2525, column: 9, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !1296, file: !13, line: 2525, column: 9)
!10422 = !DILocation(line: 2525, column: 15, scope: !10421)
!10423 = !DILocation(line: 2525, column: 18, scope: !10421)
!10424 = !DILocation(line: 2525, column: 9, scope: !1296)
!10425 = !DILocation(line: 2525, column: 30, scope: !10426)
!10426 = !DILexicalBlockFile(scope: !10427, file: !13, discriminator: 1)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !13, line: 2525, column: 30)
!10428 = distinct !DILexicalBlock(scope: !10421, file: !13, line: 2525, column: 24)
!10429 = !DILocation(line: 2525, column: 36, scope: !10427)
!10430 = !DILocation(line: 2525, column: 30, scope: !10427)
!10431 = !DILocation(line: 2525, column: 30, scope: !10428)
!10432 = !DILocation(line: 2525, column: 64, scope: !10433)
!10433 = !DILexicalBlockFile(scope: !10434, file: !13, discriminator: 2)
!10434 = distinct !DILexicalBlock(scope: !10427, file: !13, line: 2525, column: 46)
!10435 = !DILocation(line: 2525, column: 48, scope: !10434)
!10436 = !DILocation(line: 2525, column: 122, scope: !10434)
!10437 = !DILocation(line: 2525, column: 147, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !10439, file: !13, discriminator: 3)
!10439 = distinct !DILexicalBlock(scope: !10427, file: !13, line: 2525, column: 129)
!10440 = !DILocation(line: 2525, column: 131, scope: !10439)
!10441 = !DILocation(line: 2525, column: 209, scope: !10442)
!10442 = !DILexicalBlockFile(scope: !10428, file: !13, discriminator: 4)
!10443 = !DILocation(line: 2526, column: 41, scope: !1296)
!10444 = !DILocation(line: 2526, column: 47, scope: !1296)
!10445 = !DILocation(line: 2526, column: 12, scope: !1296)
!10446 = !DILocation(line: 2526, column: 5, scope: !1296)
!10447 = !DILocation(line: 2527, column: 1, scope: !1296)
!10448 = !DILocation(line: 2530, column: 32, scope: !1300)
!10449 = !DILocation(line: 2530, column: 48, scope: !1300)
!10450 = !DILocation(line: 2532, column: 9, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !1300, file: !13, line: 2532, column: 9)
!10452 = !DILocation(line: 2532, column: 15, scope: !10451)
!10453 = !DILocation(line: 2532, column: 18, scope: !10451)
!10454 = !DILocation(line: 2532, column: 9, scope: !1300)
!10455 = !DILocation(line: 2532, column: 30, scope: !10456)
!10456 = !DILexicalBlockFile(scope: !10457, file: !13, discriminator: 1)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !13, line: 2532, column: 30)
!10458 = distinct !DILexicalBlock(scope: !10451, file: !13, line: 2532, column: 24)
!10459 = !DILocation(line: 2532, column: 36, scope: !10457)
!10460 = !DILocation(line: 2532, column: 30, scope: !10457)
!10461 = !DILocation(line: 2532, column: 30, scope: !10458)
!10462 = !DILocation(line: 2532, column: 64, scope: !10463)
!10463 = !DILexicalBlockFile(scope: !10464, file: !13, discriminator: 2)
!10464 = distinct !DILexicalBlock(scope: !10457, file: !13, line: 2532, column: 46)
!10465 = !DILocation(line: 2532, column: 48, scope: !10464)
!10466 = !DILocation(line: 2532, column: 122, scope: !10464)
!10467 = !DILocation(line: 2532, column: 147, scope: !10468)
!10468 = !DILexicalBlockFile(scope: !10469, file: !13, discriminator: 3)
!10469 = distinct !DILexicalBlock(scope: !10457, file: !13, line: 2532, column: 129)
!10470 = !DILocation(line: 2532, column: 131, scope: !10469)
!10471 = !DILocation(line: 2532, column: 209, scope: !10472)
!10472 = !DILexicalBlockFile(scope: !10458, file: !13, discriminator: 4)
!10473 = !DILocation(line: 2533, column: 41, scope: !1300)
!10474 = !DILocation(line: 2533, column: 47, scope: !1300)
!10475 = !DILocation(line: 2533, column: 12, scope: !1300)
!10476 = !DILocation(line: 2533, column: 5, scope: !1300)
!10477 = !DILocation(line: 2534, column: 1, scope: !1300)
!10478 = !DILocation(line: 2537, column: 32, scope: !1304)
!10479 = !DILocation(line: 2537, column: 48, scope: !1304)
!10480 = !DILocation(line: 2539, column: 9, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !1304, file: !13, line: 2539, column: 9)
!10482 = !DILocation(line: 2539, column: 15, scope: !10481)
!10483 = !DILocation(line: 2539, column: 18, scope: !10481)
!10484 = !DILocation(line: 2539, column: 9, scope: !1304)
!10485 = !DILocation(line: 2539, column: 30, scope: !10486)
!10486 = !DILexicalBlockFile(scope: !10487, file: !13, discriminator: 1)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !13, line: 2539, column: 30)
!10488 = distinct !DILexicalBlock(scope: !10481, file: !13, line: 2539, column: 24)
!10489 = !DILocation(line: 2539, column: 36, scope: !10487)
!10490 = !DILocation(line: 2539, column: 30, scope: !10487)
!10491 = !DILocation(line: 2539, column: 30, scope: !10488)
!10492 = !DILocation(line: 2539, column: 64, scope: !10493)
!10493 = !DILexicalBlockFile(scope: !10494, file: !13, discriminator: 2)
!10494 = distinct !DILexicalBlock(scope: !10487, file: !13, line: 2539, column: 46)
!10495 = !DILocation(line: 2539, column: 48, scope: !10494)
!10496 = !DILocation(line: 2539, column: 122, scope: !10494)
!10497 = !DILocation(line: 2539, column: 147, scope: !10498)
!10498 = !DILexicalBlockFile(scope: !10499, file: !13, discriminator: 3)
!10499 = distinct !DILexicalBlock(scope: !10487, file: !13, line: 2539, column: 129)
!10500 = !DILocation(line: 2539, column: 131, scope: !10499)
!10501 = !DILocation(line: 2539, column: 209, scope: !10502)
!10502 = !DILexicalBlockFile(scope: !10488, file: !13, discriminator: 4)
!10503 = !DILocation(line: 2540, column: 41, scope: !1304)
!10504 = !DILocation(line: 2540, column: 47, scope: !1304)
!10505 = !DILocation(line: 2540, column: 12, scope: !1304)
!10506 = !DILocation(line: 2540, column: 5, scope: !1304)
!10507 = !DILocation(line: 2541, column: 1, scope: !1304)
!10508 = !DILocation(line: 2544, column: 32, scope: !1308)
!10509 = !DILocation(line: 2544, column: 48, scope: !1308)
!10510 = !DILocation(line: 2546, column: 9, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !1308, file: !13, line: 2546, column: 9)
!10512 = !DILocation(line: 2546, column: 15, scope: !10511)
!10513 = !DILocation(line: 2546, column: 18, scope: !10511)
!10514 = !DILocation(line: 2546, column: 9, scope: !1308)
!10515 = !DILocation(line: 2546, column: 30, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !10517, file: !13, discriminator: 1)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !13, line: 2546, column: 30)
!10518 = distinct !DILexicalBlock(scope: !10511, file: !13, line: 2546, column: 24)
!10519 = !DILocation(line: 2546, column: 36, scope: !10517)
!10520 = !DILocation(line: 2546, column: 30, scope: !10517)
!10521 = !DILocation(line: 2546, column: 30, scope: !10518)
!10522 = !DILocation(line: 2546, column: 64, scope: !10523)
!10523 = !DILexicalBlockFile(scope: !10524, file: !13, discriminator: 2)
!10524 = distinct !DILexicalBlock(scope: !10517, file: !13, line: 2546, column: 46)
!10525 = !DILocation(line: 2546, column: 48, scope: !10524)
!10526 = !DILocation(line: 2546, column: 122, scope: !10524)
!10527 = !DILocation(line: 2546, column: 147, scope: !10528)
!10528 = !DILexicalBlockFile(scope: !10529, file: !13, discriminator: 3)
!10529 = distinct !DILexicalBlock(scope: !10517, file: !13, line: 2546, column: 129)
!10530 = !DILocation(line: 2546, column: 131, scope: !10529)
!10531 = !DILocation(line: 2546, column: 209, scope: !10532)
!10532 = !DILexicalBlockFile(scope: !10518, file: !13, discriminator: 4)
!10533 = !DILocation(line: 2547, column: 41, scope: !1308)
!10534 = !DILocation(line: 2547, column: 47, scope: !1308)
!10535 = !DILocation(line: 2547, column: 12, scope: !1308)
!10536 = !DILocation(line: 2547, column: 5, scope: !1308)
!10537 = !DILocation(line: 2548, column: 1, scope: !1308)
!10538 = !DILocation(line: 2551, column: 30, scope: !1312)
!10539 = !DILocation(line: 2551, column: 46, scope: !1312)
!10540 = !DILocation(line: 2553, column: 9, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !1312, file: !13, line: 2553, column: 9)
!10542 = !DILocation(line: 2553, column: 15, scope: !10541)
!10543 = !DILocation(line: 2553, column: 18, scope: !10541)
!10544 = !DILocation(line: 2553, column: 9, scope: !1312)
!10545 = !DILocation(line: 2553, column: 30, scope: !10546)
!10546 = !DILexicalBlockFile(scope: !10547, file: !13, discriminator: 1)
!10547 = distinct !DILexicalBlock(scope: !10548, file: !13, line: 2553, column: 30)
!10548 = distinct !DILexicalBlock(scope: !10541, file: !13, line: 2553, column: 24)
!10549 = !DILocation(line: 2553, column: 36, scope: !10547)
!10550 = !DILocation(line: 2553, column: 30, scope: !10547)
!10551 = !DILocation(line: 2553, column: 30, scope: !10548)
!10552 = !DILocation(line: 2553, column: 64, scope: !10553)
!10553 = !DILexicalBlockFile(scope: !10554, file: !13, discriminator: 2)
!10554 = distinct !DILexicalBlock(scope: !10547, file: !13, line: 2553, column: 46)
!10555 = !DILocation(line: 2553, column: 48, scope: !10554)
!10556 = !DILocation(line: 2553, column: 122, scope: !10554)
!10557 = !DILocation(line: 2553, column: 147, scope: !10558)
!10558 = !DILexicalBlockFile(scope: !10559, file: !13, discriminator: 3)
!10559 = distinct !DILexicalBlock(scope: !10547, file: !13, line: 2553, column: 129)
!10560 = !DILocation(line: 2553, column: 131, scope: !10559)
!10561 = !DILocation(line: 2553, column: 209, scope: !10562)
!10562 = !DILexicalBlockFile(scope: !10548, file: !13, discriminator: 4)
!10563 = !DILocation(line: 2554, column: 41, scope: !1312)
!10564 = !DILocation(line: 2554, column: 47, scope: !1312)
!10565 = !DILocation(line: 2554, column: 12, scope: !1312)
!10566 = !DILocation(line: 2554, column: 5, scope: !1312)
!10567 = !DILocation(line: 2555, column: 1, scope: !1312)
!10568 = !DILocation(line: 2558, column: 32, scope: !1316)
!10569 = !DILocation(line: 2558, column: 48, scope: !1316)
!10570 = !DILocation(line: 2560, column: 18, scope: !1316)
!10571 = !DILocation(line: 2561, column: 64, scope: !1316)
!10572 = !DILocation(line: 2561, column: 52, scope: !1316)
!10573 = !DILocation(line: 2561, column: 72, scope: !1316)
!10574 = !DILocation(line: 2561, column: 82, scope: !1316)
!10575 = !DILocation(line: 2560, column: 5, scope: !1316)
!10576 = !DILocation(line: 2562, column: 5, scope: !1316)
!10577 = !DILocation(line: 2064, column: 28, scope: !1320)
!10578 = !DILocation(line: 2064, column: 44, scope: !1320)
!10579 = !DILocation(line: 2066, column: 5, scope: !1320)
!10580 = !DILocation(line: 2066, column: 15, scope: !1320)
!10581 = !DILocation(line: 2066, column: 27, scope: !1320)
!10582 = !DILocation(line: 2067, column: 5, scope: !1320)
!10583 = !DILocation(line: 2067, column: 17, scope: !1320)
!10584 = !DILocation(line: 2068, column: 5, scope: !1320)
!10585 = !DILocation(line: 2068, column: 9, scope: !1320)
!10586 = !DILocation(line: 2069, column: 5, scope: !1320)
!10587 = !DILocation(line: 2069, column: 15, scope: !1320)
!10588 = !DILocation(line: 2070, column: 5, scope: !1320)
!10589 = !DILocation(line: 2070, column: 9, scope: !1320)
!10590 = !DILocation(line: 2072, column: 9, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2072, column: 9)
!10592 = !DILocation(line: 2072, column: 15, scope: !10591)
!10593 = !DILocation(line: 2072, column: 18, scope: !10591)
!10594 = !DILocation(line: 2072, column: 9, scope: !1320)
!10595 = !DILocation(line: 2072, column: 30, scope: !10596)
!10596 = !DILexicalBlockFile(scope: !10597, file: !13, discriminator: 1)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !13, line: 2072, column: 30)
!10598 = distinct !DILexicalBlock(scope: !10591, file: !13, line: 2072, column: 24)
!10599 = !DILocation(line: 2072, column: 36, scope: !10597)
!10600 = !DILocation(line: 2072, column: 30, scope: !10597)
!10601 = !DILocation(line: 2072, column: 30, scope: !10598)
!10602 = !DILocation(line: 2072, column: 64, scope: !10603)
!10603 = !DILexicalBlockFile(scope: !10604, file: !13, discriminator: 2)
!10604 = distinct !DILexicalBlock(scope: !10597, file: !13, line: 2072, column: 46)
!10605 = !DILocation(line: 2072, column: 48, scope: !10604)
!10606 = !DILocation(line: 2072, column: 122, scope: !10604)
!10607 = !DILocation(line: 2072, column: 147, scope: !10608)
!10608 = !DILexicalBlockFile(scope: !10609, file: !13, discriminator: 3)
!10609 = distinct !DILexicalBlock(scope: !10597, file: !13, line: 2072, column: 129)
!10610 = !DILocation(line: 2072, column: 131, scope: !10609)
!10611 = !DILocation(line: 2072, column: 209, scope: !10612)
!10612 = !DILexicalBlockFile(scope: !10598, file: !13, discriminator: 4)
!10613 = !DILocation(line: 2072, column: 209, scope: !10598)
!10614 = !DILocation(line: 2074, column: 34, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2074, column: 9)
!10616 = !DILocation(line: 2074, column: 10, scope: !10615)
!10617 = !DILocation(line: 2074, column: 9, scope: !1320)
!10618 = !DILocation(line: 2075, column: 9, scope: !10615)
!10619 = !DILocation(line: 2076, column: 5, scope: !1320)
!10620 = !DILocation(line: 2076, column: 10, scope: !10621)
!10621 = !DILexicalBlockFile(scope: !1341, file: !13, discriminator: 1)
!10622 = !DILocation(line: 2076, column: 14, scope: !1341)
!10623 = !DILocation(line: 2076, column: 17, scope: !1341)
!10624 = !DILocation(line: 2076, column: 27, scope: !1341)
!10625 = !DILocation(line: 2076, column: 51, scope: !1348)
!10626 = !DILocation(line: 2076, column: 39, scope: !1348)
!10627 = !DILocation(line: 2076, column: 59, scope: !1348)
!10628 = !DILocation(line: 2076, column: 68, scope: !1348)
!10629 = !DILocation(line: 2076, column: 37, scope: !1341)
!10630 = !DILocation(line: 2076, column: 100, scope: !10631)
!10631 = !DILexicalBlockFile(scope: !1346, file: !13, discriminator: 2)
!10632 = !DILocation(line: 2076, column: 106, scope: !1346)
!10633 = !DILocation(line: 2076, column: 110, scope: !1346)
!10634 = !DILocation(line: 2076, column: 100, scope: !1347)
!10635 = !DILocation(line: 2076, column: 146, scope: !10636)
!10636 = !DILexicalBlockFile(scope: !1346, file: !13, discriminator: 4)
!10637 = !DILocation(line: 2076, column: 152, scope: !1346)
!10638 = !DILocation(line: 2076, column: 129, scope: !1346)
!10639 = !DILocation(line: 2076, column: 127, scope: !1346)
!10640 = !DILocation(line: 2076, column: 125, scope: !1346)
!10641 = !DILocation(line: 2076, column: 197, scope: !10642)
!10642 = !DILexicalBlockFile(scope: !1345, file: !13, discriminator: 5)
!10643 = !DILocation(line: 2076, column: 172, scope: !1345)
!10644 = !DILocation(line: 2076, column: 170, scope: !1345)
!10645 = !DILocation(line: 2076, column: 220, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !1345, file: !13, line: 2076, column: 220)
!10647 = !DILocation(line: 2076, column: 225, scope: !10646)
!10648 = !DILocation(line: 2076, column: 220, scope: !1345)
!10649 = !DILocation(line: 2076, column: 240, scope: !10650)
!10650 = !DILexicalBlockFile(scope: !10646, file: !13, discriminator: 7)
!10651 = !DILocation(line: 2076, column: 240, scope: !10646)
!10652 = !DILocation(line: 2076, column: 279, scope: !10653)
!10653 = !DILexicalBlockFile(scope: !1345, file: !13, discriminator: 8)
!10654 = !DILocation(line: 2076, column: 263, scope: !1345)
!10655 = !DILocation(line: 2076, column: 261, scope: !1345)
!10656 = !DILocation(line: 2076, column: 286, scope: !1345)
!10657 = !DILocation(line: 2076, column: 291, scope: !10658)
!10658 = !DILexicalBlockFile(scope: !1344, file: !13, discriminator: 10)
!10659 = !DILocation(line: 2076, column: 301, scope: !1344)
!10660 = !DILocation(line: 2076, column: 331, scope: !1344)
!10661 = !DILocation(line: 2076, column: 346, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !1344, file: !13, line: 2076, column: 343)
!10663 = !DILocation(line: 2076, column: 363, scope: !10662)
!10664 = !DILocation(line: 2076, column: 343, scope: !10662)
!10665 = !DILocation(line: 2076, column: 373, scope: !10662)
!10666 = !DILocation(line: 2076, column: 343, scope: !1344)
!10667 = !DILocation(line: 2076, column: 343, scope: !10668)
!10668 = !DILexicalBlockFile(scope: !1344, file: !13, discriminator: 11)
!10669 = !DILocation(line: 2076, column: 404, scope: !10670)
!10670 = !DILexicalBlockFile(scope: !10662, file: !13, discriminator: 12)
!10671 = !DILocation(line: 2076, column: 422, scope: !10662)
!10672 = !DILocation(line: 2076, column: 432, scope: !10662)
!10673 = !DILocation(line: 2076, column: 457, scope: !10662)
!10674 = !DILocation(line: 2076, column: 388, scope: !10662)
!10675 = !DILocation(line: 2076, column: 476, scope: !10676)
!10676 = !DILexicalBlockFile(scope: !1345, file: !13, discriminator: 13)
!10677 = !DILocation(line: 2076, column: 476, scope: !1344)
!10678 = !DILocation(line: 2076, column: 476, scope: !10679)
!10679 = !DILexicalBlockFile(scope: !1344, file: !13, discriminator: 14)
!10680 = !DILocation(line: 2076, column: 493, scope: !10681)
!10681 = !DILexicalBlockFile(scope: !10682, file: !13, discriminator: 15)
!10682 = distinct !DILexicalBlock(scope: !1345, file: !13, line: 2076, column: 493)
!10683 = !DILocation(line: 2076, column: 495, scope: !10682)
!10684 = !DILocation(line: 2076, column: 493, scope: !1345)
!10685 = !DILocation(line: 2076, column: 500, scope: !10686)
!10686 = !DILexicalBlockFile(scope: !10682, file: !13, discriminator: 16)
!10687 = !DILocation(line: 2076, column: 500, scope: !10682)
!10688 = !DILocation(line: 2076, column: 525, scope: !10689)
!10689 = !DILexicalBlockFile(scope: !10690, file: !13, discriminator: 6)
!10690 = distinct !DILexicalBlock(scope: !1347, file: !13, line: 2076, column: 525)
!10691 = !DILocation(line: 2076, column: 527, scope: !10690)
!10692 = !DILocation(line: 2076, column: 525, scope: !1347)
!10693 = !DILocation(line: 2076, column: 550, scope: !10694)
!10694 = !DILexicalBlockFile(scope: !10695, file: !13, discriminator: 18)
!10695 = distinct !DILexicalBlock(scope: !10690, file: !13, line: 2076, column: 532)
!10696 = !DILocation(line: 2076, column: 534, scope: !10695)
!10697 = !DILocation(line: 2076, column: 602, scope: !10695)
!10698 = !DILocation(line: 2076, column: 623, scope: !10699)
!10699 = !DILexicalBlockFile(scope: !1347, file: !13, discriminator: 19)
!10700 = !DILocation(line: 2076, column: 669, scope: !10701)
!10701 = !DILexicalBlockFile(scope: !10702, file: !13, discriminator: 3)
!10702 = distinct !DILexicalBlock(scope: !1348, file: !13, line: 2076, column: 634)
!10703 = !DILocation(line: 2076, column: 657, scope: !10702)
!10704 = !DILocation(line: 2076, column: 634, scope: !10702)
!10705 = !DILocation(line: 2076, column: 707, scope: !10702)
!10706 = !DILocation(line: 2076, column: 634, scope: !1348)
!10707 = !DILocation(line: 2076, column: 722, scope: !10708)
!10708 = !DILexicalBlockFile(scope: !10702, file: !13, discriminator: 22)
!10709 = !DILocation(line: 2076, column: 722, scope: !10702)
!10710 = !DILocation(line: 2076, column: 741, scope: !10711)
!10711 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 21)
!10712 = !DILocation(line: 2076, column: 741, scope: !10713)
!10713 = !DILexicalBlockFile(scope: !10714, file: !13, discriminator: 24)
!10714 = !DILexicalBlockFile(scope: !10715, file: !13, discriminator: 23)
!10715 = !DILexicalBlockFile(scope: !10716, file: !13, discriminator: 20)
!10716 = !DILexicalBlockFile(scope: !10717, file: !13, discriminator: 17)
!10717 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 9)
!10718 = !DILocation(line: 2076, column: 741, scope: !1341)
!10719 = !DILocation(line: 2076, column: 741, scope: !10720)
!10720 = !DILexicalBlockFile(scope: !1341, file: !13, discriminator: 25)
!10721 = !DILocation(line: 2078, column: 21, scope: !1320)
!10722 = !DILocation(line: 2078, column: 34, scope: !1320)
!10723 = !DILocation(line: 2078, column: 43, scope: !1320)
!10724 = !DILocation(line: 2080, column: 10, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2080, column: 9)
!10726 = !DILocation(line: 2080, column: 16, scope: !10725)
!10727 = !DILocation(line: 2080, column: 9, scope: !1320)
!10728 = !DILocation(line: 2081, column: 9, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10725, file: !13, line: 2080, column: 26)
!10730 = !DILocation(line: 2082, column: 9, scope: !10729)
!10731 = !DILocation(line: 2085, column: 9, scope: !1352)
!10732 = !DILocation(line: 2085, column: 16, scope: !1352)
!10733 = !DILocation(line: 2085, column: 9, scope: !1320)
!10734 = !DILocation(line: 2087, column: 40, scope: !1351)
!10735 = !DILocation(line: 2087, column: 51, scope: !1351)
!10736 = !DILocation(line: 2087, column: 15, scope: !1351)
!10737 = !DILocation(line: 2087, column: 13, scope: !1351)
!10738 = !DILocation(line: 2088, column: 13, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2088, column: 13)
!10740 = !DILocation(line: 2088, column: 17, scope: !10739)
!10741 = !DILocation(line: 2088, column: 13, scope: !1351)
!10742 = !DILocation(line: 2089, column: 13, scope: !10739)
!10743 = !DILocation(line: 2091, column: 13, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2091, column: 13)
!10745 = !DILocation(line: 2091, column: 17, scope: !10744)
!10746 = !DILocation(line: 2091, column: 13, scope: !1351)
!10747 = !DILocation(line: 2092, column: 13, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10744, file: !13, line: 2091, column: 23)
!10749 = !DILocation(line: 2093, column: 13, scope: !10748)
!10750 = !DILocation(line: 2099, column: 9, scope: !1351)
!10751 = !DILocation(line: 2099, column: 14, scope: !10752)
!10752 = !DILexicalBlockFile(scope: !1350, file: !13, discriminator: 1)
!10753 = !DILocation(line: 2099, column: 24, scope: !1350)
!10754 = !DILocation(line: 2099, column: 54, scope: !1350)
!10755 = !DILocation(line: 2099, column: 74, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !1350, file: !13, line: 2099, column: 71)
!10757 = !DILocation(line: 2099, column: 91, scope: !10756)
!10758 = !DILocation(line: 2099, column: 71, scope: !10756)
!10759 = !DILocation(line: 2099, column: 101, scope: !10756)
!10760 = !DILocation(line: 2099, column: 71, scope: !1350)
!10761 = !DILocation(line: 2099, column: 71, scope: !10762)
!10762 = !DILexicalBlockFile(scope: !1350, file: !13, discriminator: 2)
!10763 = !DILocation(line: 2099, column: 132, scope: !10764)
!10764 = !DILexicalBlockFile(scope: !10756, file: !13, discriminator: 3)
!10765 = !DILocation(line: 2099, column: 150, scope: !10756)
!10766 = !DILocation(line: 2099, column: 160, scope: !10756)
!10767 = !DILocation(line: 2099, column: 185, scope: !10756)
!10768 = !DILocation(line: 2099, column: 116, scope: !10756)
!10769 = !DILocation(line: 2099, column: 204, scope: !10770)
!10770 = !DILexicalBlockFile(scope: !1351, file: !13, discriminator: 4)
!10771 = !DILocation(line: 2099, column: 204, scope: !1350)
!10772 = !DILocation(line: 2099, column: 204, scope: !10773)
!10773 = !DILexicalBlockFile(scope: !1350, file: !13, discriminator: 5)
!10774 = !DILocation(line: 2100, column: 62, scope: !1351)
!10775 = !DILocation(line: 2100, column: 50, scope: !1351)
!10776 = !DILocation(line: 2100, column: 21, scope: !1351)
!10777 = !DILocation(line: 2100, column: 19, scope: !1351)
!10778 = !DILocation(line: 2101, column: 13, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2101, column: 13)
!10780 = !DILocation(line: 2101, column: 23, scope: !10779)
!10781 = !DILocation(line: 2101, column: 13, scope: !1351)
!10782 = !DILocation(line: 2102, column: 13, scope: !10779)
!10783 = !DILocation(line: 2103, column: 5, scope: !1351)
!10784 = !DILocation(line: 2104, column: 14, scope: !1356)
!10785 = !DILocation(line: 2104, column: 21, scope: !1356)
!10786 = !DILocation(line: 2104, column: 14, scope: !1352)
!10787 = !DILocation(line: 2106, column: 40, scope: !1355)
!10788 = !DILocation(line: 2106, column: 51, scope: !1355)
!10789 = !DILocation(line: 2106, column: 15, scope: !1355)
!10790 = !DILocation(line: 2106, column: 13, scope: !1355)
!10791 = !DILocation(line: 2107, column: 13, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2107, column: 13)
!10793 = !DILocation(line: 2107, column: 17, scope: !10792)
!10794 = !DILocation(line: 2107, column: 13, scope: !1355)
!10795 = !DILocation(line: 2108, column: 13, scope: !10792)
!10796 = !DILocation(line: 2110, column: 13, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2110, column: 13)
!10798 = !DILocation(line: 2110, column: 17, scope: !10797)
!10799 = !DILocation(line: 2110, column: 13, scope: !1355)
!10800 = !DILocation(line: 2111, column: 13, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10797, file: !13, line: 2110, column: 23)
!10802 = !DILocation(line: 2112, column: 13, scope: !10801)
!10803 = !DILocation(line: 2115, column: 56, scope: !1355)
!10804 = !DILocation(line: 2115, column: 44, scope: !1355)
!10805 = !DILocation(line: 2115, column: 15, scope: !1355)
!10806 = !DILocation(line: 2115, column: 13, scope: !1355)
!10807 = !DILocation(line: 2116, column: 13, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2116, column: 13)
!10809 = !DILocation(line: 2116, column: 17, scope: !10808)
!10810 = !DILocation(line: 2116, column: 13, scope: !1355)
!10811 = !DILocation(line: 2117, column: 13, scope: !10808)
!10812 = !DILocation(line: 2118, column: 9, scope: !1355)
!10813 = !DILocation(line: 2118, column: 14, scope: !10814)
!10814 = !DILexicalBlockFile(scope: !1354, file: !13, discriminator: 1)
!10815 = !DILocation(line: 2118, column: 24, scope: !1354)
!10816 = !DILocation(line: 2118, column: 54, scope: !1354)
!10817 = !DILocation(line: 2118, column: 68, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !1354, file: !13, line: 2118, column: 65)
!10819 = !DILocation(line: 2118, column: 85, scope: !10818)
!10820 = !DILocation(line: 2118, column: 65, scope: !10818)
!10821 = !DILocation(line: 2118, column: 95, scope: !10818)
!10822 = !DILocation(line: 2118, column: 65, scope: !1354)
!10823 = !DILocation(line: 2118, column: 65, scope: !10824)
!10824 = !DILexicalBlockFile(scope: !1354, file: !13, discriminator: 2)
!10825 = !DILocation(line: 2118, column: 126, scope: !10826)
!10826 = !DILexicalBlockFile(scope: !10818, file: !13, discriminator: 3)
!10827 = !DILocation(line: 2118, column: 144, scope: !10818)
!10828 = !DILocation(line: 2118, column: 154, scope: !10818)
!10829 = !DILocation(line: 2118, column: 179, scope: !10818)
!10830 = !DILocation(line: 2118, column: 110, scope: !10818)
!10831 = !DILocation(line: 2118, column: 198, scope: !10832)
!10832 = !DILexicalBlockFile(scope: !1355, file: !13, discriminator: 4)
!10833 = !DILocation(line: 2118, column: 198, scope: !1354)
!10834 = !DILocation(line: 2118, column: 198, scope: !10835)
!10835 = !DILexicalBlockFile(scope: !1354, file: !13, discriminator: 5)
!10836 = !DILocation(line: 2120, column: 41, scope: !1355)
!10837 = !DILocation(line: 2120, column: 9, scope: !1355)
!10838 = !DILocation(line: 2121, column: 9, scope: !1355)
!10839 = !DILocation(line: 2121, column: 14, scope: !10840)
!10840 = !DILexicalBlockFile(scope: !1358, file: !13, discriminator: 1)
!10841 = !DILocation(line: 2121, column: 24, scope: !1358)
!10842 = !DILocation(line: 2121, column: 47, scope: !1358)
!10843 = !DILocation(line: 2121, column: 53, scope: !1358)
!10844 = !DILocation(line: 2121, column: 68, scope: !1362)
!10845 = !DILocation(line: 2121, column: 76, scope: !1362)
!10846 = !DILocation(line: 2121, column: 68, scope: !1358)
!10847 = !DILocation(line: 2121, column: 94, scope: !10848)
!10848 = !DILexicalBlockFile(scope: !1361, file: !13, discriminator: 2)
!10849 = !DILocation(line: 2121, column: 100, scope: !1361)
!10850 = !DILocation(line: 2121, column: 110, scope: !1361)
!10851 = !DILocation(line: 2121, column: 124, scope: !1361)
!10852 = !DILocation(line: 2121, column: 129, scope: !10853)
!10853 = !DILexicalBlockFile(scope: !1360, file: !13, discriminator: 4)
!10854 = !DILocation(line: 2121, column: 139, scope: !1360)
!10855 = !DILocation(line: 2121, column: 169, scope: !1360)
!10856 = !DILocation(line: 2121, column: 187, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !1360, file: !13, line: 2121, column: 184)
!10858 = !DILocation(line: 2121, column: 204, scope: !10857)
!10859 = !DILocation(line: 2121, column: 184, scope: !10857)
!10860 = !DILocation(line: 2121, column: 214, scope: !10857)
!10861 = !DILocation(line: 2121, column: 184, scope: !1360)
!10862 = !DILocation(line: 2121, column: 184, scope: !10863)
!10863 = !DILexicalBlockFile(scope: !1360, file: !13, discriminator: 5)
!10864 = !DILocation(line: 2121, column: 245, scope: !10865)
!10865 = !DILexicalBlockFile(scope: !10857, file: !13, discriminator: 6)
!10866 = !DILocation(line: 2121, column: 263, scope: !10857)
!10867 = !DILocation(line: 2121, column: 273, scope: !10857)
!10868 = !DILocation(line: 2121, column: 298, scope: !10857)
!10869 = !DILocation(line: 2121, column: 229, scope: !10857)
!10870 = !DILocation(line: 2121, column: 317, scope: !10871)
!10871 = !DILexicalBlockFile(scope: !1361, file: !13, discriminator: 7)
!10872 = !DILocation(line: 2121, column: 317, scope: !1360)
!10873 = !DILocation(line: 2121, column: 317, scope: !10874)
!10874 = !DILexicalBlockFile(scope: !1360, file: !13, discriminator: 8)
!10875 = !DILocation(line: 2121, column: 330, scope: !10876)
!10876 = !DILexicalBlockFile(scope: !1361, file: !13, discriminator: 9)
!10877 = !DILocation(line: 2121, column: 332, scope: !10878)
!10878 = !DILexicalBlockFile(scope: !10879, file: !13, discriminator: 10)
!10879 = !DILexicalBlockFile(scope: !1355, file: !13, discriminator: 3)
!10880 = !DILocation(line: 2121, column: 332, scope: !1358)
!10881 = !DILocation(line: 2121, column: 332, scope: !10882)
!10882 = !DILexicalBlockFile(scope: !1358, file: !13, discriminator: 11)
!10883 = !DILocation(line: 2122, column: 13, scope: !1366)
!10884 = !DILocation(line: 2122, column: 19, scope: !1366)
!10885 = !DILocation(line: 2122, column: 13, scope: !1355)
!10886 = !DILocation(line: 2123, column: 48, scope: !1365)
!10887 = !DILocation(line: 2123, column: 54, scope: !1365)
!10888 = !DILocation(line: 2123, column: 19, scope: !1365)
!10889 = !DILocation(line: 2123, column: 17, scope: !1365)
!10890 = !DILocation(line: 2124, column: 17, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !1365, file: !13, line: 2124, column: 17)
!10892 = !DILocation(line: 2124, column: 21, scope: !10891)
!10893 = !DILocation(line: 2124, column: 17, scope: !1365)
!10894 = !DILocation(line: 2125, column: 17, scope: !10891)
!10895 = !DILocation(line: 2126, column: 13, scope: !1365)
!10896 = !DILocation(line: 2126, column: 18, scope: !10897)
!10897 = !DILexicalBlockFile(scope: !1364, file: !13, discriminator: 1)
!10898 = !DILocation(line: 2126, column: 28, scope: !1364)
!10899 = !DILocation(line: 2126, column: 58, scope: !1364)
!10900 = !DILocation(line: 2126, column: 72, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !1364, file: !13, line: 2126, column: 69)
!10902 = !DILocation(line: 2126, column: 89, scope: !10901)
!10903 = !DILocation(line: 2126, column: 69, scope: !10901)
!10904 = !DILocation(line: 2126, column: 99, scope: !10901)
!10905 = !DILocation(line: 2126, column: 69, scope: !1364)
!10906 = !DILocation(line: 2126, column: 69, scope: !10907)
!10907 = !DILexicalBlockFile(scope: !1364, file: !13, discriminator: 2)
!10908 = !DILocation(line: 2126, column: 130, scope: !10909)
!10909 = !DILexicalBlockFile(scope: !10901, file: !13, discriminator: 3)
!10910 = !DILocation(line: 2126, column: 148, scope: !10901)
!10911 = !DILocation(line: 2126, column: 158, scope: !10901)
!10912 = !DILocation(line: 2126, column: 183, scope: !10901)
!10913 = !DILocation(line: 2126, column: 114, scope: !10901)
!10914 = !DILocation(line: 2126, column: 202, scope: !10915)
!10915 = !DILexicalBlockFile(scope: !1365, file: !13, discriminator: 4)
!10916 = !DILocation(line: 2126, column: 202, scope: !1364)
!10917 = !DILocation(line: 2126, column: 202, scope: !10918)
!10918 = !DILexicalBlockFile(scope: !1364, file: !13, discriminator: 5)
!10919 = !DILocation(line: 2127, column: 9, scope: !1365)
!10920 = !DILocation(line: 2129, column: 44, scope: !1355)
!10921 = !DILocation(line: 2129, column: 50, scope: !1355)
!10922 = !DILocation(line: 2129, column: 15, scope: !1355)
!10923 = !DILocation(line: 2129, column: 13, scope: !1355)
!10924 = !DILocation(line: 2130, column: 9, scope: !1355)
!10925 = !DILocation(line: 2130, column: 14, scope: !10926)
!10926 = !DILexicalBlockFile(scope: !1368, file: !13, discriminator: 1)
!10927 = !DILocation(line: 2130, column: 24, scope: !1368)
!10928 = !DILocation(line: 2130, column: 55, scope: !1368)
!10929 = !DILocation(line: 2130, column: 71, scope: !1371)
!10930 = !DILocation(line: 2130, column: 87, scope: !1371)
!10931 = !DILocation(line: 2130, column: 71, scope: !1368)
!10932 = !DILocation(line: 2130, column: 102, scope: !10933)
!10933 = !DILexicalBlockFile(scope: !1371, file: !13, discriminator: 2)
!10934 = !DILocation(line: 2130, column: 107, scope: !10935)
!10935 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 4)
!10936 = !DILocation(line: 2130, column: 117, scope: !1370)
!10937 = !DILocation(line: 2130, column: 147, scope: !1370)
!10938 = !DILocation(line: 2130, column: 173, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !1370, file: !13, line: 2130, column: 170)
!10940 = !DILocation(line: 2130, column: 190, scope: !10939)
!10941 = !DILocation(line: 2130, column: 170, scope: !10939)
!10942 = !DILocation(line: 2130, column: 200, scope: !10939)
!10943 = !DILocation(line: 2130, column: 170, scope: !1370)
!10944 = !DILocation(line: 2130, column: 170, scope: !10945)
!10945 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 5)
!10946 = !DILocation(line: 2130, column: 231, scope: !10947)
!10947 = !DILexicalBlockFile(scope: !10939, file: !13, discriminator: 6)
!10948 = !DILocation(line: 2130, column: 249, scope: !10939)
!10949 = !DILocation(line: 2130, column: 259, scope: !10939)
!10950 = !DILocation(line: 2130, column: 284, scope: !10939)
!10951 = !DILocation(line: 2130, column: 215, scope: !10939)
!10952 = !DILocation(line: 2130, column: 303, scope: !10953)
!10953 = !DILexicalBlockFile(scope: !1371, file: !13, discriminator: 7)
!10954 = !DILocation(line: 2130, column: 303, scope: !1370)
!10955 = !DILocation(line: 2130, column: 303, scope: !10956)
!10956 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 8)
!10957 = !DILocation(line: 2130, column: 303, scope: !10958)
!10958 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 9)
!10959 = !DILocation(line: 2130, column: 316, scope: !10878)
!10960 = !DILocation(line: 2130, column: 316, scope: !1368)
!10961 = !DILocation(line: 2130, column: 316, scope: !10962)
!10962 = !DILexicalBlockFile(scope: !1368, file: !13, discriminator: 11)
!10963 = !DILocation(line: 2131, column: 16, scope: !1355)
!10964 = !DILocation(line: 2131, column: 9, scope: !1355)
!10965 = !DILocation(line: 2133, column: 14, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !1356, file: !13, line: 2133, column: 14)
!10967 = !DILocation(line: 2133, column: 21, scope: !10966)
!10968 = !DILocation(line: 2133, column: 14, scope: !1356)
!10969 = !DILocation(line: 2134, column: 22, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10966, file: !13, line: 2133, column: 27)
!10971 = !DILocation(line: 2135, column: 66, scope: !10970)
!10972 = !DILocation(line: 2134, column: 9, scope: !10970)
!10973 = !DILocation(line: 2136, column: 9, scope: !10970)
!10974 = !DILocation(line: 2139, column: 36, scope: !1320)
!10975 = !DILocation(line: 2139, column: 47, scope: !1320)
!10976 = !DILocation(line: 2139, column: 11, scope: !1320)
!10977 = !DILocation(line: 2139, column: 9, scope: !1320)
!10978 = !DILocation(line: 2140, column: 9, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2140, column: 9)
!10980 = !DILocation(line: 2140, column: 13, scope: !10979)
!10981 = !DILocation(line: 2140, column: 9, scope: !1320)
!10982 = !DILocation(line: 2141, column: 9, scope: !10979)
!10983 = !DILocation(line: 2143, column: 9, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2143, column: 9)
!10985 = !DILocation(line: 2143, column: 13, scope: !10984)
!10986 = !DILocation(line: 2143, column: 9, scope: !1320)
!10987 = !DILocation(line: 2144, column: 22, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10984, file: !13, line: 2143, column: 19)
!10989 = !DILocation(line: 2145, column: 51, scope: !10988)
!10990 = !DILocation(line: 2144, column: 9, scope: !10988)
!10991 = !DILocation(line: 2146, column: 9, scope: !10988)
!10992 = !DILocation(line: 2149, column: 50, scope: !1320)
!10993 = !DILocation(line: 2149, column: 38, scope: !1320)
!10994 = !DILocation(line: 2149, column: 56, scope: !1320)
!10995 = !DILocation(line: 2149, column: 11, scope: !1320)
!10996 = !DILocation(line: 2149, column: 9, scope: !1320)
!10997 = !DILocation(line: 2150, column: 9, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2150, column: 9)
!10999 = !DILocation(line: 2150, column: 13, scope: !10998)
!11000 = !DILocation(line: 2150, column: 9, scope: !1320)
!11001 = !DILocation(line: 2151, column: 9, scope: !10998)
!11002 = !DILocation(line: 2152, column: 5, scope: !1320)
!11003 = !DILocation(line: 2152, column: 10, scope: !11004)
!11004 = !DILexicalBlockFile(scope: !1373, file: !13, discriminator: 1)
!11005 = !DILocation(line: 2152, column: 20, scope: !1373)
!11006 = !DILocation(line: 2152, column: 50, scope: !1373)
!11007 = !DILocation(line: 2152, column: 64, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !1373, file: !13, line: 2152, column: 61)
!11009 = !DILocation(line: 2152, column: 81, scope: !11008)
!11010 = !DILocation(line: 2152, column: 61, scope: !11008)
!11011 = !DILocation(line: 2152, column: 91, scope: !11008)
!11012 = !DILocation(line: 2152, column: 61, scope: !1373)
!11013 = !DILocation(line: 2152, column: 61, scope: !11014)
!11014 = !DILexicalBlockFile(scope: !1373, file: !13, discriminator: 2)
!11015 = !DILocation(line: 2152, column: 122, scope: !11016)
!11016 = !DILexicalBlockFile(scope: !11008, file: !13, discriminator: 3)
!11017 = !DILocation(line: 2152, column: 140, scope: !11008)
!11018 = !DILocation(line: 2152, column: 150, scope: !11008)
!11019 = !DILocation(line: 2152, column: 175, scope: !11008)
!11020 = !DILocation(line: 2152, column: 106, scope: !11008)
!11021 = !DILocation(line: 2152, column: 194, scope: !11022)
!11022 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 4)
!11023 = !DILocation(line: 2152, column: 194, scope: !1373)
!11024 = !DILocation(line: 2152, column: 194, scope: !11025)
!11025 = !DILexicalBlockFile(scope: !1373, file: !13, discriminator: 5)
!11026 = !DILocation(line: 2157, column: 45, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2157, column: 9)
!11028 = !DILocation(line: 2157, column: 9, scope: !11027)
!11029 = !DILocation(line: 2157, column: 56, scope: !11027)
!11030 = !DILocation(line: 2157, column: 9, scope: !1320)
!11031 = !DILocation(line: 2158, column: 9, scope: !11027)
!11032 = !DILocation(line: 2161, column: 40, scope: !1320)
!11033 = !{!11034, !1900, i64 0}
!11034 = !{!"", !1900, i64 0, !1884, i64 8, !1884, i64 12, !1884, i64 16, !1878, i64 20}
!11035 = !DILocation(line: 2161, column: 14, scope: !1320)
!11036 = !DILocation(line: 2161, column: 12, scope: !1320)
!11037 = !DILocation(line: 2162, column: 9, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2162, column: 9)
!11039 = !DILocation(line: 2162, column: 16, scope: !11038)
!11040 = !DILocation(line: 2162, column: 9, scope: !1320)
!11041 = !DILocation(line: 2163, column: 9, scope: !11038)
!11042 = !DILocation(line: 2164, column: 38, scope: !1320)
!11043 = !DILocation(line: 2164, column: 44, scope: !1320)
!11044 = !DILocation(line: 2165, column: 38, scope: !1320)
!11045 = !DILocation(line: 2165, column: 54, scope: !1320)
!11046 = !DILocation(line: 2164, column: 11, scope: !1320)
!11047 = !DILocation(line: 2164, column: 9, scope: !1320)
!11048 = !DILocation(line: 2166, column: 5, scope: !1320)
!11049 = !DILocation(line: 2166, column: 10, scope: !11050)
!11050 = !DILexicalBlockFile(scope: !1375, file: !13, discriminator: 1)
!11051 = !DILocation(line: 2166, column: 20, scope: !1375)
!11052 = !DILocation(line: 2166, column: 50, scope: !1375)
!11053 = !DILocation(line: 2166, column: 67, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !1375, file: !13, line: 2166, column: 64)
!11055 = !DILocation(line: 2166, column: 84, scope: !11054)
!11056 = !DILocation(line: 2166, column: 64, scope: !11054)
!11057 = !DILocation(line: 2166, column: 94, scope: !11054)
!11058 = !DILocation(line: 2166, column: 64, scope: !1375)
!11059 = !DILocation(line: 2166, column: 64, scope: !11060)
!11060 = !DILexicalBlockFile(scope: !1375, file: !13, discriminator: 2)
!11061 = !DILocation(line: 2166, column: 125, scope: !11062)
!11062 = !DILexicalBlockFile(scope: !11054, file: !13, discriminator: 3)
!11063 = !DILocation(line: 2166, column: 143, scope: !11054)
!11064 = !DILocation(line: 2166, column: 153, scope: !11054)
!11065 = !DILocation(line: 2166, column: 178, scope: !11054)
!11066 = !DILocation(line: 2166, column: 109, scope: !11054)
!11067 = !DILocation(line: 2166, column: 197, scope: !11022)
!11068 = !DILocation(line: 2166, column: 197, scope: !1375)
!11069 = !DILocation(line: 2166, column: 197, scope: !11070)
!11070 = !DILexicalBlockFile(scope: !1375, file: !13, discriminator: 5)
!11071 = !DILocation(line: 2167, column: 9, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2167, column: 9)
!11073 = !DILocation(line: 2167, column: 13, scope: !11072)
!11074 = !DILocation(line: 2167, column: 9, scope: !1320)
!11075 = !DILocation(line: 2168, column: 9, scope: !11072)
!11076 = !DILocation(line: 2169, column: 5, scope: !1320)
!11077 = !DILocation(line: 2169, column: 10, scope: !11078)
!11078 = !DILexicalBlockFile(scope: !1377, file: !13, discriminator: 1)
!11079 = !DILocation(line: 2169, column: 20, scope: !1377)
!11080 = !DILocation(line: 2169, column: 50, scope: !1377)
!11081 = !DILocation(line: 2169, column: 64, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !1377, file: !13, line: 2169, column: 61)
!11083 = !DILocation(line: 2169, column: 81, scope: !11082)
!11084 = !DILocation(line: 2169, column: 61, scope: !11082)
!11085 = !DILocation(line: 2169, column: 91, scope: !11082)
!11086 = !DILocation(line: 2169, column: 61, scope: !1377)
!11087 = !DILocation(line: 2169, column: 61, scope: !11088)
!11088 = !DILexicalBlockFile(scope: !1377, file: !13, discriminator: 2)
!11089 = !DILocation(line: 2169, column: 122, scope: !11090)
!11090 = !DILexicalBlockFile(scope: !11082, file: !13, discriminator: 3)
!11091 = !DILocation(line: 2169, column: 140, scope: !11082)
!11092 = !DILocation(line: 2169, column: 150, scope: !11082)
!11093 = !DILocation(line: 2169, column: 175, scope: !11082)
!11094 = !DILocation(line: 2169, column: 106, scope: !11082)
!11095 = !DILocation(line: 2169, column: 194, scope: !11022)
!11096 = !DILocation(line: 2169, column: 194, scope: !1377)
!11097 = !DILocation(line: 2169, column: 194, scope: !11098)
!11098 = !DILexicalBlockFile(scope: !1377, file: !13, discriminator: 5)
!11099 = !DILocation(line: 2171, column: 37, scope: !1320)
!11100 = !DILocation(line: 2171, column: 5, scope: !1320)
!11101 = !DILocation(line: 2172, column: 5, scope: !1320)
!11102 = !DILocation(line: 2172, column: 10, scope: !11103)
!11103 = !DILexicalBlockFile(scope: !1379, file: !13, discriminator: 1)
!11104 = !DILocation(line: 2172, column: 20, scope: !1379)
!11105 = !DILocation(line: 2172, column: 43, scope: !1379)
!11106 = !DILocation(line: 2172, column: 49, scope: !1379)
!11107 = !DILocation(line: 2172, column: 64, scope: !1383)
!11108 = !DILocation(line: 2172, column: 72, scope: !1383)
!11109 = !DILocation(line: 2172, column: 64, scope: !1379)
!11110 = !DILocation(line: 2172, column: 90, scope: !11111)
!11111 = !DILexicalBlockFile(scope: !1382, file: !13, discriminator: 2)
!11112 = !DILocation(line: 2172, column: 96, scope: !1382)
!11113 = !DILocation(line: 2172, column: 106, scope: !1382)
!11114 = !DILocation(line: 2172, column: 120, scope: !1382)
!11115 = !DILocation(line: 2172, column: 125, scope: !11116)
!11116 = !DILexicalBlockFile(scope: !1381, file: !13, discriminator: 4)
!11117 = !DILocation(line: 2172, column: 135, scope: !1381)
!11118 = !DILocation(line: 2172, column: 165, scope: !1381)
!11119 = !DILocation(line: 2172, column: 183, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !1381, file: !13, line: 2172, column: 180)
!11121 = !DILocation(line: 2172, column: 200, scope: !11120)
!11122 = !DILocation(line: 2172, column: 180, scope: !11120)
!11123 = !DILocation(line: 2172, column: 210, scope: !11120)
!11124 = !DILocation(line: 2172, column: 180, scope: !1381)
!11125 = !DILocation(line: 2172, column: 180, scope: !11126)
!11126 = !DILexicalBlockFile(scope: !1381, file: !13, discriminator: 5)
!11127 = !DILocation(line: 2172, column: 241, scope: !11128)
!11128 = !DILexicalBlockFile(scope: !11120, file: !13, discriminator: 6)
!11129 = !DILocation(line: 2172, column: 259, scope: !11120)
!11130 = !DILocation(line: 2172, column: 269, scope: !11120)
!11131 = !DILocation(line: 2172, column: 294, scope: !11120)
!11132 = !DILocation(line: 2172, column: 225, scope: !11120)
!11133 = !DILocation(line: 2172, column: 313, scope: !11134)
!11134 = !DILexicalBlockFile(scope: !1382, file: !13, discriminator: 7)
!11135 = !DILocation(line: 2172, column: 313, scope: !1381)
!11136 = !DILocation(line: 2172, column: 313, scope: !11137)
!11137 = !DILexicalBlockFile(scope: !1381, file: !13, discriminator: 8)
!11138 = !DILocation(line: 2172, column: 326, scope: !11139)
!11139 = !DILexicalBlockFile(scope: !1382, file: !13, discriminator: 9)
!11140 = !DILocation(line: 2172, column: 328, scope: !11141)
!11141 = !DILexicalBlockFile(scope: !11142, file: !13, discriminator: 10)
!11142 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 3)
!11143 = !DILocation(line: 2172, column: 328, scope: !1379)
!11144 = !DILocation(line: 2172, column: 328, scope: !11145)
!11145 = !DILexicalBlockFile(scope: !1379, file: !13, discriminator: 11)
!11146 = !DILocation(line: 2175, column: 9, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2175, column: 9)
!11148 = !DILocation(line: 2175, column: 15, scope: !11147)
!11149 = !DILocation(line: 2175, column: 9, scope: !1320)
!11150 = !DILocation(line: 2176, column: 45, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !13, line: 2176, column: 13)
!11152 = distinct !DILexicalBlock(scope: !11147, file: !13, line: 2175, column: 24)
!11153 = !DILocation(line: 2176, column: 13, scope: !11151)
!11154 = !DILocation(line: 2176, column: 60, scope: !11151)
!11155 = !DILocation(line: 2176, column: 13, scope: !11152)
!11156 = !DILocation(line: 2177, column: 13, scope: !11151)
!11157 = !DILocation(line: 2178, column: 5, scope: !11152)
!11158 = !DILocation(line: 2180, column: 16, scope: !1386)
!11159 = !{!11034, !1884, i64 16}
!11160 = !DILocation(line: 2180, column: 9, scope: !1386)
!11161 = !DILocation(line: 2180, column: 9, scope: !1320)
!11162 = !DILocation(line: 2182, column: 9, scope: !1385)
!11163 = !DILocation(line: 2182, column: 19, scope: !1385)
!11164 = !DILocation(line: 2183, column: 13, scope: !1385)
!11165 = !DILocation(line: 2183, column: 19, scope: !1385)
!11166 = !DILocation(line: 2183, column: 51, scope: !1385)
!11167 = !{!11034, !1884, i64 12}
!11168 = !DILocation(line: 2182, column: 33, scope: !1385)
!11169 = !DILocation(line: 2184, column: 9, scope: !1385)
!11170 = !DILocation(line: 2184, column: 19, scope: !1385)
!11171 = !DILocation(line: 2186, column: 13, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2186, column: 13)
!11173 = !DILocation(line: 2186, column: 25, scope: !11172)
!11174 = !DILocation(line: 2186, column: 13, scope: !1385)
!11175 = !DILocation(line: 2187, column: 13, scope: !11172)
!11176 = !DILocation(line: 2189, column: 31, scope: !1391)
!11177 = !DILocation(line: 2189, column: 46, scope: !1391)
!11178 = !DILocation(line: 2189, column: 57, scope: !1391)
!11179 = !DILocation(line: 2189, column: 66, scope: !1391)
!11180 = !DILocation(line: 2189, column: 83, scope: !1391)
!11181 = !DILocation(line: 2189, column: 13, scope: !1385)
!11182 = !DILocation(line: 2190, column: 26, scope: !1390)
!11183 = !DILocation(line: 2193, column: 40, scope: !1390)
!11184 = !DILocation(line: 2193, column: 55, scope: !1390)
!11185 = !DILocation(line: 2193, column: 65, scope: !1390)
!11186 = !DILocation(line: 2190, column: 13, scope: !1390)
!11187 = !DILocation(line: 2194, column: 13, scope: !1390)
!11188 = !DILocation(line: 2194, column: 18, scope: !11189)
!11189 = !DILexicalBlockFile(scope: !1389, file: !13, discriminator: 1)
!11190 = !DILocation(line: 2194, column: 28, scope: !1389)
!11191 = !DILocation(line: 2194, column: 58, scope: !1389)
!11192 = !DILocation(line: 2194, column: 80, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !1389, file: !13, line: 2194, column: 77)
!11194 = !DILocation(line: 2194, column: 97, scope: !11193)
!11195 = !DILocation(line: 2194, column: 77, scope: !11193)
!11196 = !DILocation(line: 2194, column: 107, scope: !11193)
!11197 = !DILocation(line: 2194, column: 77, scope: !1389)
!11198 = !DILocation(line: 2194, column: 77, scope: !11199)
!11199 = !DILexicalBlockFile(scope: !1389, file: !13, discriminator: 2)
!11200 = !DILocation(line: 2194, column: 138, scope: !11201)
!11201 = !DILexicalBlockFile(scope: !11193, file: !13, discriminator: 3)
!11202 = !DILocation(line: 2194, column: 156, scope: !11193)
!11203 = !DILocation(line: 2194, column: 166, scope: !11193)
!11204 = !DILocation(line: 2194, column: 191, scope: !11193)
!11205 = !DILocation(line: 2194, column: 122, scope: !11193)
!11206 = !DILocation(line: 2194, column: 210, scope: !11207)
!11207 = !DILexicalBlockFile(scope: !1390, file: !13, discriminator: 4)
!11208 = !DILocation(line: 2194, column: 210, scope: !1389)
!11209 = !DILocation(line: 2194, column: 210, scope: !11210)
!11210 = !DILexicalBlockFile(scope: !1389, file: !13, discriminator: 5)
!11211 = !DILocation(line: 2195, column: 13, scope: !1390)
!11212 = !DILocation(line: 2198, column: 60, scope: !1385)
!11213 = !{!11034, !1884, i64 8}
!11214 = !DILocation(line: 2198, column: 71, scope: !1385)
!11215 = !DILocation(line: 2198, column: 26, scope: !1385)
!11216 = !DILocation(line: 2198, column: 9, scope: !1385)
!11217 = !DILocation(line: 2198, column: 15, scope: !1385)
!11218 = !DILocation(line: 2198, column: 24, scope: !1385)
!11219 = !DILocation(line: 2199, column: 13, scope: !1395)
!11220 = !DILocation(line: 2199, column: 19, scope: !1395)
!11221 = !DILocation(line: 2199, column: 28, scope: !1395)
!11222 = !DILocation(line: 2199, column: 13, scope: !1385)
!11223 = !DILocation(line: 2200, column: 13, scope: !1394)
!11224 = !DILocation(line: 2200, column: 18, scope: !11225)
!11225 = !DILexicalBlockFile(scope: !1393, file: !13, discriminator: 1)
!11226 = !DILocation(line: 2200, column: 28, scope: !1393)
!11227 = !DILocation(line: 2200, column: 58, scope: !1393)
!11228 = !DILocation(line: 2200, column: 80, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !1393, file: !13, line: 2200, column: 77)
!11230 = !DILocation(line: 2200, column: 97, scope: !11229)
!11231 = !DILocation(line: 2200, column: 77, scope: !11229)
!11232 = !DILocation(line: 2200, column: 107, scope: !11229)
!11233 = !DILocation(line: 2200, column: 77, scope: !1393)
!11234 = !DILocation(line: 2200, column: 77, scope: !11235)
!11235 = !DILexicalBlockFile(scope: !1393, file: !13, discriminator: 2)
!11236 = !DILocation(line: 2200, column: 138, scope: !11237)
!11237 = !DILexicalBlockFile(scope: !11229, file: !13, discriminator: 3)
!11238 = !DILocation(line: 2200, column: 156, scope: !11229)
!11239 = !DILocation(line: 2200, column: 166, scope: !11229)
!11240 = !DILocation(line: 2200, column: 191, scope: !11229)
!11241 = !DILocation(line: 2200, column: 122, scope: !11229)
!11242 = !DILocation(line: 2200, column: 210, scope: !11243)
!11243 = !DILexicalBlockFile(scope: !1394, file: !13, discriminator: 4)
!11244 = !DILocation(line: 2200, column: 210, scope: !1393)
!11245 = !DILocation(line: 2200, column: 210, scope: !11246)
!11246 = !DILexicalBlockFile(scope: !1393, file: !13, discriminator: 5)
!11247 = !DILocation(line: 2201, column: 13, scope: !1394)
!11248 = !DILocation(line: 2204, column: 48, scope: !1385)
!11249 = !DILocation(line: 2204, column: 54, scope: !1385)
!11250 = !DILocation(line: 2205, column: 19, scope: !1385)
!11251 = !DILocation(line: 2205, column: 44, scope: !1385)
!11252 = !{!11034, !1878, i64 20}
!11253 = !DILocation(line: 2205, column: 32, scope: !1385)
!11254 = !DILocation(line: 2204, column: 19, scope: !1385)
!11255 = !DILocation(line: 2204, column: 17, scope: !1385)
!11256 = !DILocation(line: 2207, column: 27, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2207, column: 13)
!11258 = !DILocation(line: 2207, column: 13, scope: !11257)
!11259 = !DILocation(line: 2207, column: 36, scope: !11257)
!11260 = !DILocation(line: 2207, column: 13, scope: !1385)
!11261 = !DILocation(line: 2208, column: 13, scope: !11257)
!11262 = !DILocation(line: 2210, column: 41, scope: !1385)
!11263 = !DILocation(line: 2210, column: 47, scope: !1385)
!11264 = !DILocation(line: 2210, column: 9, scope: !1385)
!11265 = !DILocation(line: 2213, column: 33, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2213, column: 13)
!11267 = !DILocation(line: 2213, column: 39, scope: !11266)
!11268 = !DILocation(line: 2213, column: 13, scope: !11266)
!11269 = !DILocation(line: 2213, column: 63, scope: !11266)
!11270 = !DILocation(line: 2213, column: 56, scope: !11266)
!11271 = !DILocation(line: 2213, column: 54, scope: !11266)
!11272 = !DILocation(line: 2213, column: 13, scope: !1385)
!11273 = !DILocation(line: 2214, column: 29, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11266, file: !13, line: 2213, column: 78)
!11275 = !DILocation(line: 2214, column: 13, scope: !11274)
!11276 = !DILocation(line: 2215, column: 13, scope: !11274)
!11277 = !DILocation(line: 2217, column: 43, scope: !1385)
!11278 = !DILocation(line: 2217, column: 36, scope: !1385)
!11279 = !DILocation(line: 2217, column: 9, scope: !1385)
!11280 = !DILocation(line: 2217, column: 15, scope: !1385)
!11281 = !DILocation(line: 2217, column: 34, scope: !1385)
!11282 = !DILocation(line: 2218, column: 5, scope: !1386)
!11283 = !DILocation(line: 2218, column: 5, scope: !11284)
!11284 = !DILexicalBlockFile(scope: !1386, file: !13, discriminator: 1)
!11285 = !DILocation(line: 2218, column: 5, scope: !1385)
!11286 = !DILocation(line: 2220, column: 60, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !1386, file: !13, line: 2219, column: 10)
!11288 = !DILocation(line: 2220, column: 26, scope: !11287)
!11289 = !DILocation(line: 2220, column: 9, scope: !11287)
!11290 = !DILocation(line: 2220, column: 15, scope: !11287)
!11291 = !DILocation(line: 2220, column: 24, scope: !11287)
!11292 = !DILocation(line: 2221, column: 13, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11287, file: !13, line: 2221, column: 13)
!11294 = !DILocation(line: 2221, column: 19, scope: !11293)
!11295 = !DILocation(line: 2221, column: 28, scope: !11293)
!11296 = !DILocation(line: 2221, column: 13, scope: !11287)
!11297 = !DILocation(line: 2222, column: 13, scope: !11293)
!11298 = !DILocation(line: 2226, column: 9, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2226, column: 9)
!11300 = !DILocation(line: 2226, column: 15, scope: !11299)
!11301 = !DILocation(line: 2226, column: 9, scope: !1320)
!11302 = !DILocation(line: 2227, column: 45, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !13, line: 2227, column: 13)
!11304 = distinct !DILexicalBlock(scope: !11299, file: !13, line: 2226, column: 24)
!11305 = !DILocation(line: 2227, column: 13, scope: !11303)
!11306 = !DILocation(line: 2227, column: 60, scope: !11303)
!11307 = !DILocation(line: 2227, column: 13, scope: !11304)
!11308 = !DILocation(line: 2228, column: 13, scope: !11303)
!11309 = !DILocation(line: 2229, column: 5, scope: !11304)
!11310 = !DILocation(line: 2230, column: 12, scope: !1320)
!11311 = !DILocation(line: 2230, column: 5, scope: !1320)
!11312 = !DILocation(line: 2232, column: 5, scope: !1320)
!11313 = !DILocation(line: 2232, column: 10, scope: !11314)
!11314 = !DILexicalBlockFile(scope: !1397, file: !13, discriminator: 1)
!11315 = !DILocation(line: 2232, column: 20, scope: !1397)
!11316 = !DILocation(line: 2232, column: 51, scope: !1397)
!11317 = !DILocation(line: 2232, column: 67, scope: !1400)
!11318 = !DILocation(line: 2232, column: 83, scope: !1400)
!11319 = !DILocation(line: 2232, column: 67, scope: !1397)
!11320 = !DILocation(line: 2232, column: 98, scope: !11321)
!11321 = !DILexicalBlockFile(scope: !1400, file: !13, discriminator: 2)
!11322 = !DILocation(line: 2232, column: 103, scope: !11323)
!11323 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 4)
!11324 = !DILocation(line: 2232, column: 113, scope: !1399)
!11325 = !DILocation(line: 2232, column: 143, scope: !1399)
!11326 = !DILocation(line: 2232, column: 169, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !1399, file: !13, line: 2232, column: 166)
!11328 = !DILocation(line: 2232, column: 186, scope: !11327)
!11329 = !DILocation(line: 2232, column: 166, scope: !11327)
!11330 = !DILocation(line: 2232, column: 196, scope: !11327)
!11331 = !DILocation(line: 2232, column: 166, scope: !1399)
!11332 = !DILocation(line: 2232, column: 166, scope: !11333)
!11333 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 5)
!11334 = !DILocation(line: 2232, column: 227, scope: !11335)
!11335 = !DILexicalBlockFile(scope: !11327, file: !13, discriminator: 6)
!11336 = !DILocation(line: 2232, column: 245, scope: !11327)
!11337 = !DILocation(line: 2232, column: 255, scope: !11327)
!11338 = !DILocation(line: 2232, column: 280, scope: !11327)
!11339 = !DILocation(line: 2232, column: 211, scope: !11327)
!11340 = !DILocation(line: 2232, column: 299, scope: !11341)
!11341 = !DILexicalBlockFile(scope: !1400, file: !13, discriminator: 7)
!11342 = !DILocation(line: 2232, column: 299, scope: !1399)
!11343 = !DILocation(line: 2232, column: 299, scope: !11344)
!11344 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 8)
!11345 = !DILocation(line: 2232, column: 299, scope: !11346)
!11346 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 9)
!11347 = !DILocation(line: 2232, column: 312, scope: !11141)
!11348 = !DILocation(line: 2232, column: 312, scope: !1397)
!11349 = !DILocation(line: 2232, column: 312, scope: !11350)
!11350 = !DILexicalBlockFile(scope: !1397, file: !13, discriminator: 11)
!11351 = !DILocation(line: 2233, column: 5, scope: !1320)
!11352 = !DILocation(line: 2235, column: 1, scope: !1320)
!11353 = !DILocation(line: 2238, column: 28, scope: !1435)
!11354 = !DILocation(line: 2238, column: 44, scope: !1435)
!11355 = !DILocation(line: 2240, column: 5, scope: !1435)
!11356 = !DILocation(line: 2240, column: 15, scope: !1435)
!11357 = !DILocation(line: 2241, column: 5, scope: !1435)
!11358 = !DILocation(line: 2241, column: 15, scope: !1435)
!11359 = !DILocation(line: 2242, column: 5, scope: !1435)
!11360 = !DILocation(line: 2242, column: 17, scope: !1435)
!11361 = !DILocation(line: 2243, column: 5, scope: !1435)
!11362 = !DILocation(line: 2243, column: 15, scope: !1435)
!11363 = !DILocation(line: 2244, column: 5, scope: !1435)
!11364 = !DILocation(line: 2244, column: 16, scope: !1435)
!11365 = !DILocation(line: 2244, column: 31, scope: !1435)
!11366 = !DILocation(line: 2245, column: 5, scope: !1435)
!11367 = !DILocation(line: 2245, column: 16, scope: !1435)
!11368 = !DILocation(line: 2245, column: 28, scope: !1435)
!11369 = !DILocation(line: 2246, column: 5, scope: !1435)
!11370 = !DILocation(line: 2246, column: 15, scope: !1435)
!11371 = !DILocation(line: 2247, column: 5, scope: !1435)
!11372 = !DILocation(line: 2247, column: 11, scope: !1435)
!11373 = !DILocation(line: 2247, column: 19, scope: !1435)
!11374 = !DILocation(line: 2248, column: 5, scope: !1435)
!11375 = !DILocation(line: 2248, column: 11, scope: !1435)
!11376 = !DILocation(line: 2249, column: 5, scope: !1435)
!11377 = !DILocation(line: 2249, column: 16, scope: !1435)
!11378 = !DILocation(line: 2250, column: 5, scope: !1435)
!11379 = !DILocation(line: 2250, column: 9, scope: !1435)
!11380 = !DILocation(line: 2252, column: 9, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2252, column: 9)
!11382 = !DILocation(line: 2252, column: 15, scope: !11381)
!11383 = !DILocation(line: 2252, column: 18, scope: !11381)
!11384 = !DILocation(line: 2252, column: 9, scope: !1435)
!11385 = !DILocation(line: 2252, column: 30, scope: !11386)
!11386 = !DILexicalBlockFile(scope: !11387, file: !13, discriminator: 1)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !13, line: 2252, column: 30)
!11388 = distinct !DILexicalBlock(scope: !11381, file: !13, line: 2252, column: 24)
!11389 = !DILocation(line: 2252, column: 36, scope: !11387)
!11390 = !DILocation(line: 2252, column: 30, scope: !11387)
!11391 = !DILocation(line: 2252, column: 30, scope: !11388)
!11392 = !DILocation(line: 2252, column: 64, scope: !11393)
!11393 = !DILexicalBlockFile(scope: !11394, file: !13, discriminator: 2)
!11394 = distinct !DILexicalBlock(scope: !11387, file: !13, line: 2252, column: 46)
!11395 = !DILocation(line: 2252, column: 48, scope: !11394)
!11396 = !DILocation(line: 2252, column: 122, scope: !11394)
!11397 = !DILocation(line: 2252, column: 147, scope: !11398)
!11398 = !DILexicalBlockFile(scope: !11399, file: !13, discriminator: 3)
!11399 = distinct !DILexicalBlock(scope: !11387, file: !13, line: 2252, column: 129)
!11400 = !DILocation(line: 2252, column: 131, scope: !11399)
!11401 = !DILocation(line: 2252, column: 209, scope: !11402)
!11402 = !DILexicalBlockFile(scope: !11388, file: !13, discriminator: 4)
!11403 = !DILocation(line: 2252, column: 209, scope: !11388)
!11404 = !DILocation(line: 2253, column: 5, scope: !1435)
!11405 = !DILocation(line: 2253, column: 10, scope: !11406)
!11406 = !DILexicalBlockFile(scope: !1454, file: !13, discriminator: 1)
!11407 = !DILocation(line: 2253, column: 14, scope: !1454)
!11408 = !DILocation(line: 2253, column: 17, scope: !1454)
!11409 = !DILocation(line: 2253, column: 27, scope: !1454)
!11410 = !DILocation(line: 2253, column: 51, scope: !1461)
!11411 = !DILocation(line: 2253, column: 39, scope: !1461)
!11412 = !DILocation(line: 2253, column: 59, scope: !1461)
!11413 = !DILocation(line: 2253, column: 68, scope: !1461)
!11414 = !DILocation(line: 2253, column: 37, scope: !1454)
!11415 = !DILocation(line: 2253, column: 100, scope: !11416)
!11416 = !DILexicalBlockFile(scope: !1459, file: !13, discriminator: 2)
!11417 = !DILocation(line: 2253, column: 106, scope: !1459)
!11418 = !DILocation(line: 2253, column: 110, scope: !1459)
!11419 = !DILocation(line: 2253, column: 100, scope: !1460)
!11420 = !DILocation(line: 2253, column: 146, scope: !11421)
!11421 = !DILexicalBlockFile(scope: !1459, file: !13, discriminator: 4)
!11422 = !DILocation(line: 2253, column: 152, scope: !1459)
!11423 = !DILocation(line: 2253, column: 129, scope: !1459)
!11424 = !DILocation(line: 2253, column: 127, scope: !1459)
!11425 = !DILocation(line: 2253, column: 125, scope: !1459)
!11426 = !DILocation(line: 2253, column: 197, scope: !11427)
!11427 = !DILexicalBlockFile(scope: !1458, file: !13, discriminator: 5)
!11428 = !DILocation(line: 2253, column: 172, scope: !1458)
!11429 = !DILocation(line: 2253, column: 170, scope: !1458)
!11430 = !DILocation(line: 2253, column: 220, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !1458, file: !13, line: 2253, column: 220)
!11432 = !DILocation(line: 2253, column: 225, scope: !11431)
!11433 = !DILocation(line: 2253, column: 220, scope: !1458)
!11434 = !DILocation(line: 2253, column: 240, scope: !11435)
!11435 = !DILexicalBlockFile(scope: !11431, file: !13, discriminator: 7)
!11436 = !DILocation(line: 2253, column: 240, scope: !11431)
!11437 = !DILocation(line: 2253, column: 279, scope: !11438)
!11438 = !DILexicalBlockFile(scope: !1458, file: !13, discriminator: 8)
!11439 = !DILocation(line: 2253, column: 263, scope: !1458)
!11440 = !DILocation(line: 2253, column: 261, scope: !1458)
!11441 = !DILocation(line: 2253, column: 286, scope: !1458)
!11442 = !DILocation(line: 2253, column: 291, scope: !11443)
!11443 = !DILexicalBlockFile(scope: !1457, file: !13, discriminator: 10)
!11444 = !DILocation(line: 2253, column: 301, scope: !1457)
!11445 = !DILocation(line: 2253, column: 331, scope: !1457)
!11446 = !DILocation(line: 2253, column: 346, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !1457, file: !13, line: 2253, column: 343)
!11448 = !DILocation(line: 2253, column: 363, scope: !11447)
!11449 = !DILocation(line: 2253, column: 343, scope: !11447)
!11450 = !DILocation(line: 2253, column: 373, scope: !11447)
!11451 = !DILocation(line: 2253, column: 343, scope: !1457)
!11452 = !DILocation(line: 2253, column: 343, scope: !11453)
!11453 = !DILexicalBlockFile(scope: !1457, file: !13, discriminator: 11)
!11454 = !DILocation(line: 2253, column: 404, scope: !11455)
!11455 = !DILexicalBlockFile(scope: !11447, file: !13, discriminator: 12)
!11456 = !DILocation(line: 2253, column: 422, scope: !11447)
!11457 = !DILocation(line: 2253, column: 432, scope: !11447)
!11458 = !DILocation(line: 2253, column: 457, scope: !11447)
!11459 = !DILocation(line: 2253, column: 388, scope: !11447)
!11460 = !DILocation(line: 2253, column: 476, scope: !11461)
!11461 = !DILexicalBlockFile(scope: !1458, file: !13, discriminator: 13)
!11462 = !DILocation(line: 2253, column: 476, scope: !1457)
!11463 = !DILocation(line: 2253, column: 476, scope: !11464)
!11464 = !DILexicalBlockFile(scope: !1457, file: !13, discriminator: 14)
!11465 = !DILocation(line: 2253, column: 493, scope: !11466)
!11466 = !DILexicalBlockFile(scope: !11467, file: !13, discriminator: 15)
!11467 = distinct !DILexicalBlock(scope: !1458, file: !13, line: 2253, column: 493)
!11468 = !DILocation(line: 2253, column: 495, scope: !11467)
!11469 = !DILocation(line: 2253, column: 493, scope: !1458)
!11470 = !DILocation(line: 2253, column: 500, scope: !11471)
!11471 = !DILexicalBlockFile(scope: !11467, file: !13, discriminator: 16)
!11472 = !DILocation(line: 2253, column: 500, scope: !11467)
!11473 = !DILocation(line: 2253, column: 525, scope: !11474)
!11474 = !DILexicalBlockFile(scope: !11475, file: !13, discriminator: 6)
!11475 = distinct !DILexicalBlock(scope: !1460, file: !13, line: 2253, column: 525)
!11476 = !DILocation(line: 2253, column: 527, scope: !11475)
!11477 = !DILocation(line: 2253, column: 525, scope: !1460)
!11478 = !DILocation(line: 2253, column: 550, scope: !11479)
!11479 = !DILexicalBlockFile(scope: !11480, file: !13, discriminator: 18)
!11480 = distinct !DILexicalBlock(scope: !11475, file: !13, line: 2253, column: 532)
!11481 = !DILocation(line: 2253, column: 534, scope: !11480)
!11482 = !DILocation(line: 2253, column: 602, scope: !11480)
!11483 = !DILocation(line: 2253, column: 623, scope: !11484)
!11484 = !DILexicalBlockFile(scope: !1460, file: !13, discriminator: 19)
!11485 = !DILocation(line: 2253, column: 669, scope: !11486)
!11486 = !DILexicalBlockFile(scope: !11487, file: !13, discriminator: 3)
!11487 = distinct !DILexicalBlock(scope: !1461, file: !13, line: 2253, column: 634)
!11488 = !DILocation(line: 2253, column: 657, scope: !11487)
!11489 = !DILocation(line: 2253, column: 634, scope: !11487)
!11490 = !DILocation(line: 2253, column: 707, scope: !11487)
!11491 = !DILocation(line: 2253, column: 634, scope: !1461)
!11492 = !DILocation(line: 2253, column: 722, scope: !11493)
!11493 = !DILexicalBlockFile(scope: !11487, file: !13, discriminator: 22)
!11494 = !DILocation(line: 2253, column: 722, scope: !11487)
!11495 = !DILocation(line: 2253, column: 741, scope: !11496)
!11496 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 21)
!11497 = !DILocation(line: 2253, column: 741, scope: !11498)
!11498 = !DILexicalBlockFile(scope: !11499, file: !13, discriminator: 24)
!11499 = !DILexicalBlockFile(scope: !11500, file: !13, discriminator: 23)
!11500 = !DILexicalBlockFile(scope: !11501, file: !13, discriminator: 20)
!11501 = !DILexicalBlockFile(scope: !11502, file: !13, discriminator: 17)
!11502 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 9)
!11503 = !DILocation(line: 2253, column: 741, scope: !1454)
!11504 = !DILocation(line: 2253, column: 741, scope: !11505)
!11505 = !DILexicalBlockFile(scope: !1454, file: !13, discriminator: 25)
!11506 = !DILocation(line: 2255, column: 10, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2255, column: 9)
!11508 = !DILocation(line: 2255, column: 16, scope: !11507)
!11509 = !DILocation(line: 2255, column: 9, scope: !1435)
!11510 = !DILocation(line: 2256, column: 9, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11507, file: !13, line: 2255, column: 26)
!11512 = !DILocation(line: 2257, column: 9, scope: !11511)
!11513 = !DILocation(line: 2259, column: 10, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2259, column: 9)
!11515 = !DILocation(line: 2259, column: 16, scope: !11514)
!11516 = !DILocation(line: 2259, column: 9, scope: !1435)
!11517 = !DILocation(line: 2260, column: 25, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11514, file: !13, line: 2259, column: 25)
!11519 = !DILocation(line: 2260, column: 9, scope: !11518)
!11520 = !DILocation(line: 2262, column: 9, scope: !11518)
!11521 = !DILocation(line: 2265, column: 35, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2265, column: 9)
!11523 = !DILocation(line: 2265, column: 9, scope: !11522)
!11524 = !DILocation(line: 2265, column: 41, scope: !11522)
!11525 = !DILocation(line: 2265, column: 9, scope: !1435)
!11526 = !DILocation(line: 2266, column: 9, scope: !11522)
!11527 = !DILocation(line: 2267, column: 52, scope: !1435)
!11528 = !DILocation(line: 2267, column: 40, scope: !1435)
!11529 = !DILocation(line: 2267, column: 11, scope: !1435)
!11530 = !DILocation(line: 2267, column: 9, scope: !1435)
!11531 = !DILocation(line: 2268, column: 9, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2268, column: 9)
!11533 = !DILocation(line: 2268, column: 13, scope: !11532)
!11534 = !DILocation(line: 2268, column: 9, scope: !1435)
!11535 = !DILocation(line: 2269, column: 9, scope: !11532)
!11536 = !DILocation(line: 2270, column: 5, scope: !1435)
!11537 = !DILocation(line: 2270, column: 10, scope: !11538)
!11538 = !DILexicalBlockFile(scope: !1463, file: !13, discriminator: 1)
!11539 = !DILocation(line: 2270, column: 20, scope: !1463)
!11540 = !DILocation(line: 2270, column: 50, scope: !1463)
!11541 = !DILocation(line: 2270, column: 64, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !1463, file: !13, line: 2270, column: 61)
!11543 = !DILocation(line: 2270, column: 81, scope: !11542)
!11544 = !DILocation(line: 2270, column: 61, scope: !11542)
!11545 = !DILocation(line: 2270, column: 91, scope: !11542)
!11546 = !DILocation(line: 2270, column: 61, scope: !1463)
!11547 = !DILocation(line: 2270, column: 61, scope: !11548)
!11548 = !DILexicalBlockFile(scope: !1463, file: !13, discriminator: 2)
!11549 = !DILocation(line: 2270, column: 122, scope: !11550)
!11550 = !DILexicalBlockFile(scope: !11542, file: !13, discriminator: 3)
!11551 = !DILocation(line: 2270, column: 140, scope: !11542)
!11552 = !DILocation(line: 2270, column: 150, scope: !11542)
!11553 = !DILocation(line: 2270, column: 175, scope: !11542)
!11554 = !DILocation(line: 2270, column: 106, scope: !11542)
!11555 = !DILocation(line: 2270, column: 194, scope: !11556)
!11556 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 4)
!11557 = !DILocation(line: 2270, column: 194, scope: !1463)
!11558 = !DILocation(line: 2270, column: 194, scope: !11559)
!11559 = !DILexicalBlockFile(scope: !1463, file: !13, discriminator: 5)
!11560 = !DILocation(line: 2272, column: 43, scope: !1435)
!11561 = !DILocation(line: 2272, column: 49, scope: !1435)
!11562 = !DILocation(line: 2272, column: 14, scope: !1435)
!11563 = !DILocation(line: 2272, column: 12, scope: !1435)
!11564 = !DILocation(line: 2273, column: 9, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2273, column: 9)
!11566 = !DILocation(line: 2273, column: 16, scope: !11565)
!11567 = !DILocation(line: 2273, column: 9, scope: !1435)
!11568 = !DILocation(line: 2274, column: 9, scope: !11565)
!11569 = !DILocation(line: 2276, column: 9, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2276, column: 9)
!11571 = !DILocation(line: 2276, column: 15, scope: !11570)
!11572 = !DILocation(line: 2276, column: 23, scope: !11570)
!11573 = !DILocation(line: 2276, column: 37, scope: !11570)
!11574 = !DILocation(line: 2276, column: 40, scope: !11575)
!11575 = !DILexicalBlockFile(scope: !11570, file: !13, discriminator: 1)
!11576 = !DILocation(line: 2276, column: 46, scope: !11570)
!11577 = !DILocation(line: 2276, column: 55, scope: !11570)
!11578 = !DILocation(line: 2276, column: 9, scope: !1435)
!11579 = !DILocation(line: 2278, column: 16, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11570, file: !13, line: 2276, column: 70)
!11581 = !DILocation(line: 2278, column: 9, scope: !11580)
!11582 = !DILocation(line: 2284, column: 38, scope: !1435)
!11583 = !DILocation(line: 2284, column: 24, scope: !1435)
!11584 = !DILocation(line: 2284, column: 12, scope: !1435)
!11585 = !DILocation(line: 2284, column: 22, scope: !1435)
!11586 = !DILocation(line: 2286, column: 5, scope: !1435)
!11587 = !DILocation(line: 2286, column: 10, scope: !11588)
!11588 = !DILexicalBlockFile(scope: !1465, file: !13, discriminator: 1)
!11589 = !DILocation(line: 2286, column: 20, scope: !1465)
!11590 = !DILocation(line: 2286, column: 50, scope: !1465)
!11591 = !DILocation(line: 2286, column: 67, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !1465, file: !13, line: 2286, column: 64)
!11593 = !DILocation(line: 2286, column: 84, scope: !11592)
!11594 = !DILocation(line: 2286, column: 64, scope: !11592)
!11595 = !DILocation(line: 2286, column: 94, scope: !11592)
!11596 = !DILocation(line: 2286, column: 64, scope: !1465)
!11597 = !DILocation(line: 2286, column: 64, scope: !11598)
!11598 = !DILexicalBlockFile(scope: !1465, file: !13, discriminator: 2)
!11599 = !DILocation(line: 2286, column: 125, scope: !11600)
!11600 = !DILexicalBlockFile(scope: !11592, file: !13, discriminator: 3)
!11601 = !DILocation(line: 2286, column: 143, scope: !11592)
!11602 = !DILocation(line: 2286, column: 153, scope: !11592)
!11603 = !DILocation(line: 2286, column: 178, scope: !11592)
!11604 = !DILocation(line: 2286, column: 109, scope: !11592)
!11605 = !DILocation(line: 2286, column: 197, scope: !11556)
!11606 = !DILocation(line: 2286, column: 197, scope: !1465)
!11607 = !DILocation(line: 2286, column: 197, scope: !11608)
!11608 = !DILexicalBlockFile(scope: !1465, file: !13, discriminator: 5)
!11609 = !DILocation(line: 2287, column: 9, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2287, column: 9)
!11611 = !DILocation(line: 2287, column: 9, scope: !1435)
!11612 = !DILocation(line: 2288, column: 9, scope: !11610)
!11613 = !DILocation(line: 2291, column: 29, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2291, column: 9)
!11615 = !DILocation(line: 2291, column: 35, scope: !11614)
!11616 = !DILocation(line: 2291, column: 61, scope: !11614)
!11617 = !DILocation(line: 2291, column: 10, scope: !11614)
!11618 = !DILocation(line: 2291, column: 9, scope: !1435)
!11619 = !DILocation(line: 2292, column: 9, scope: !11614)
!11620 = !DILocation(line: 2296, column: 56, scope: !1435)
!11621 = !DILocation(line: 2296, column: 41, scope: !1435)
!11622 = !DILocation(line: 2296, column: 70, scope: !1435)
!11623 = !DILocation(line: 2296, column: 12, scope: !1435)
!11624 = !DILocation(line: 2296, column: 22, scope: !1435)
!11625 = !DILocation(line: 2299, column: 9, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2299, column: 9)
!11627 = !DILocation(line: 2299, column: 15, scope: !11626)
!11628 = !DILocation(line: 2299, column: 34, scope: !11626)
!11629 = !DILocation(line: 2299, column: 9, scope: !1435)
!11630 = !DILocation(line: 2301, column: 16, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11626, file: !13, line: 2299, column: 40)
!11632 = !DILocation(line: 2301, column: 9, scope: !11631)
!11633 = !DILocation(line: 2304, column: 21, scope: !1435)
!11634 = !DILocation(line: 2304, column: 27, scope: !1435)
!11635 = !DILocation(line: 2304, column: 19, scope: !1435)
!11636 = !DILocation(line: 2307, column: 46, scope: !1435)
!11637 = !DILocation(line: 2307, column: 52, scope: !1435)
!11638 = !DILocation(line: 2308, column: 46, scope: !1435)
!11639 = !DILocation(line: 2307, column: 19, scope: !1435)
!11640 = !DILocation(line: 2307, column: 17, scope: !1435)
!11641 = !DILocation(line: 2309, column: 9, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2309, column: 9)
!11643 = !DILocation(line: 2309, column: 21, scope: !11642)
!11644 = !DILocation(line: 2309, column: 9, scope: !1435)
!11645 = !DILocation(line: 2310, column: 9, scope: !11642)
!11646 = !DILocation(line: 2335, column: 32, scope: !1435)
!11647 = !DILocation(line: 2335, column: 38, scope: !1435)
!11648 = !DILocation(line: 2335, column: 49, scope: !1435)
!11649 = !DILocation(line: 2335, column: 47, scope: !1435)
!11650 = !DILocation(line: 2335, column: 18, scope: !1435)
!11651 = !DILocation(line: 2335, column: 16, scope: !1435)
!11652 = !DILocation(line: 2336, column: 15, scope: !1435)
!11653 = !DILocation(line: 2338, column: 48, scope: !1435)
!11654 = !DILocation(line: 2338, column: 30, scope: !1435)
!11655 = !DILocation(line: 2338, column: 62, scope: !1435)
!11656 = !DILocation(line: 2338, column: 28, scope: !1435)
!11657 = !DILocation(line: 2338, column: 11, scope: !1435)
!11658 = !DILocation(line: 2339, column: 5, scope: !1435)
!11659 = !DILocation(line: 2339, column: 12, scope: !11660)
!11660 = !DILexicalBlockFile(scope: !11661, file: !13, discriminator: 2)
!11661 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 1)
!11662 = !DILocation(line: 2339, column: 23, scope: !1435)
!11663 = !DILocation(line: 2341, column: 45, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !1468, file: !13, line: 2341, column: 13)
!11665 = !DILocation(line: 2341, column: 13, scope: !11664)
!11666 = !DILocation(line: 2341, column: 60, scope: !11664)
!11667 = !DILocation(line: 2341, column: 13, scope: !1468)
!11668 = !DILocation(line: 2342, column: 13, scope: !11664)
!11669 = !DILocation(line: 2343, column: 9, scope: !1468)
!11670 = !DILocation(line: 2343, column: 14, scope: !11671)
!11671 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 1)
!11672 = !DILocation(line: 2343, column: 24, scope: !1467)
!11673 = !DILocation(line: 2343, column: 65, scope: !1467)
!11674 = !DILocation(line: 2343, column: 71, scope: !1467)
!11675 = !DILocation(line: 2343, column: 100, scope: !1467)
!11676 = !DILocation(line: 2343, column: 107, scope: !1467)
!11677 = !DILocation(line: 2343, column: 35, scope: !1467)
!11678 = !DILocation(line: 2343, column: 138, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !1467, file: !13, line: 2343, column: 124)
!11680 = !DILocation(line: 2343, column: 124, scope: !11679)
!11681 = !DILocation(line: 2343, column: 148, scope: !11679)
!11682 = !DILocation(line: 2343, column: 124, scope: !1467)
!11683 = !DILocation(line: 2343, column: 153, scope: !11679)
!11684 = !DILocation(line: 2343, column: 228, scope: !11685)
!11685 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 2)
!11686 = !DILocation(line: 2343, column: 210, scope: !1467)
!11687 = !DILocation(line: 2343, column: 240, scope: !1467)
!11688 = !DILocation(line: 2343, column: 178, scope: !1467)
!11689 = !DILocation(line: 2343, column: 249, scope: !1467)
!11690 = !DILocation(line: 2343, column: 254, scope: !11691)
!11691 = !DILexicalBlockFile(scope: !1470, file: !13, discriminator: 4)
!11692 = !DILocation(line: 2343, column: 264, scope: !1470)
!11693 = !DILocation(line: 2343, column: 294, scope: !1470)
!11694 = !DILocation(line: 2343, column: 313, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !1470, file: !13, line: 2343, column: 310)
!11696 = !DILocation(line: 2343, column: 330, scope: !11695)
!11697 = !DILocation(line: 2343, column: 310, scope: !11695)
!11698 = !DILocation(line: 2343, column: 340, scope: !11695)
!11699 = !DILocation(line: 2343, column: 310, scope: !1470)
!11700 = !DILocation(line: 2343, column: 310, scope: !11701)
!11701 = !DILexicalBlockFile(scope: !1470, file: !13, discriminator: 5)
!11702 = !DILocation(line: 2343, column: 371, scope: !11703)
!11703 = !DILexicalBlockFile(scope: !11695, file: !13, discriminator: 6)
!11704 = !DILocation(line: 2343, column: 389, scope: !11695)
!11705 = !DILocation(line: 2343, column: 399, scope: !11695)
!11706 = !DILocation(line: 2343, column: 424, scope: !11695)
!11707 = !DILocation(line: 2343, column: 355, scope: !11695)
!11708 = !DILocation(line: 2343, column: 443, scope: !11709)
!11709 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 7)
!11710 = !DILocation(line: 2343, column: 443, scope: !1470)
!11711 = !DILocation(line: 2343, column: 443, scope: !11712)
!11712 = !DILexicalBlockFile(scope: !1470, file: !13, discriminator: 8)
!11713 = !DILocation(line: 2343, column: 456, scope: !11714)
!11714 = !DILexicalBlockFile(scope: !1468, file: !13, discriminator: 9)
!11715 = !DILocation(line: 2343, column: 456, scope: !11716)
!11716 = !DILexicalBlockFile(scope: !11717, file: !13, discriminator: 10)
!11717 = !DILexicalBlockFile(scope: !1468, file: !13, discriminator: 3)
!11718 = !DILocation(line: 2343, column: 456, scope: !1467)
!11719 = !DILocation(line: 2343, column: 456, scope: !11720)
!11720 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 11)
!11721 = !DILocation(line: 2344, column: 13, scope: !1474)
!11722 = !DILocation(line: 2344, column: 30, scope: !1474)
!11723 = !DILocation(line: 2344, column: 27, scope: !1474)
!11724 = !DILocation(line: 2344, column: 13, scope: !1468)
!11725 = !DILocation(line: 2345, column: 13, scope: !1473)
!11726 = !DILocation(line: 2345, column: 18, scope: !11727)
!11727 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 1)
!11728 = !DILocation(line: 2345, column: 28, scope: !1472)
!11729 = !DILocation(line: 2345, column: 64, scope: !1472)
!11730 = !DILocation(line: 2345, column: 70, scope: !1472)
!11731 = !DILocation(line: 2345, column: 79, scope: !1472)
!11732 = !DILocation(line: 2345, column: 37, scope: !1472)
!11733 = !DILocation(line: 2345, column: 116, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !1472, file: !13, line: 2345, column: 116)
!11735 = !DILocation(line: 2345, column: 123, scope: !11734)
!11736 = !DILocation(line: 2345, column: 116, scope: !1472)
!11737 = !DILocation(line: 2345, column: 138, scope: !11734)
!11738 = !DILocation(line: 2345, column: 173, scope: !11739)
!11739 = !DILexicalBlockFile(scope: !1478, file: !13, discriminator: 2)
!11740 = !DILocation(line: 2345, column: 154, scope: !1478)
!11741 = !DILocation(line: 2345, column: 153, scope: !1472)
!11742 = !DILocation(line: 2345, column: 235, scope: !11743)
!11743 = !DILexicalBlockFile(scope: !1477, file: !13, discriminator: 5)
!11744 = !DILocation(line: 2345, column: 240, scope: !11745)
!11745 = !DILexicalBlockFile(scope: !1476, file: !13, discriminator: 6)
!11746 = !DILocation(line: 2345, column: 250, scope: !1476)
!11747 = !DILocation(line: 2345, column: 280, scope: !1476)
!11748 = !DILocation(line: 2345, column: 297, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !1476, file: !13, line: 2345, column: 294)
!11750 = !DILocation(line: 2345, column: 314, scope: !11749)
!11751 = !DILocation(line: 2345, column: 294, scope: !11749)
!11752 = !DILocation(line: 2345, column: 324, scope: !11749)
!11753 = !DILocation(line: 2345, column: 294, scope: !1476)
!11754 = !DILocation(line: 2345, column: 294, scope: !11755)
!11755 = !DILexicalBlockFile(scope: !1476, file: !13, discriminator: 7)
!11756 = !DILocation(line: 2345, column: 355, scope: !11757)
!11757 = !DILexicalBlockFile(scope: !11749, file: !13, discriminator: 8)
!11758 = !DILocation(line: 2345, column: 373, scope: !11749)
!11759 = !DILocation(line: 2345, column: 383, scope: !11749)
!11760 = !DILocation(line: 2345, column: 408, scope: !11749)
!11761 = !DILocation(line: 2345, column: 339, scope: !11749)
!11762 = !DILocation(line: 2345, column: 427, scope: !11763)
!11763 = !DILexicalBlockFile(scope: !1477, file: !13, discriminator: 9)
!11764 = !DILocation(line: 2345, column: 427, scope: !1476)
!11765 = !DILocation(line: 2345, column: 427, scope: !11766)
!11766 = !DILexicalBlockFile(scope: !1476, file: !13, discriminator: 10)
!11767 = !DILocation(line: 2345, column: 440, scope: !1477)
!11768 = !DILocation(line: 2345, column: 453, scope: !11769)
!11769 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 4)
!11770 = !DILocation(line: 2345, column: 458, scope: !11771)
!11771 = !DILexicalBlockFile(scope: !1480, file: !13, discriminator: 12)
!11772 = !DILocation(line: 2345, column: 468, scope: !1480)
!11773 = !DILocation(line: 2345, column: 498, scope: !1480)
!11774 = !DILocation(line: 2345, column: 515, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !1480, file: !13, line: 2345, column: 512)
!11776 = !DILocation(line: 2345, column: 532, scope: !11775)
!11777 = !DILocation(line: 2345, column: 512, scope: !11775)
!11778 = !DILocation(line: 2345, column: 542, scope: !11775)
!11779 = !DILocation(line: 2345, column: 512, scope: !1480)
!11780 = !DILocation(line: 2345, column: 512, scope: !11781)
!11781 = !DILexicalBlockFile(scope: !1480, file: !13, discriminator: 13)
!11782 = !DILocation(line: 2345, column: 573, scope: !11783)
!11783 = !DILexicalBlockFile(scope: !11775, file: !13, discriminator: 14)
!11784 = !DILocation(line: 2345, column: 591, scope: !11775)
!11785 = !DILocation(line: 2345, column: 601, scope: !11775)
!11786 = !DILocation(line: 2345, column: 626, scope: !11775)
!11787 = !DILocation(line: 2345, column: 557, scope: !11775)
!11788 = !DILocation(line: 2345, column: 645, scope: !11789)
!11789 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 15)
!11790 = !DILocation(line: 2345, column: 645, scope: !1480)
!11791 = !DILocation(line: 2345, column: 645, scope: !11792)
!11792 = !DILexicalBlockFile(scope: !1480, file: !13, discriminator: 16)
!11793 = !DILocation(line: 2345, column: 658, scope: !11794)
!11794 = !DILexicalBlockFile(scope: !1473, file: !13, discriminator: 17)
!11795 = !DILocation(line: 2345, column: 658, scope: !11796)
!11796 = !DILexicalBlockFile(scope: !11797, file: !13, discriminator: 18)
!11797 = !DILexicalBlockFile(scope: !11798, file: !13, discriminator: 11)
!11798 = !DILexicalBlockFile(scope: !1473, file: !13, discriminator: 3)
!11799 = !DILocation(line: 2345, column: 658, scope: !1472)
!11800 = !DILocation(line: 2345, column: 658, scope: !11801)
!11801 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 19)
!11802 = !DILocation(line: 2346, column: 17, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !1473, file: !13, line: 2346, column: 17)
!11804 = !DILocation(line: 2346, column: 32, scope: !11803)
!11805 = !DILocation(line: 2346, column: 17, scope: !1473)
!11806 = !DILocation(line: 2348, column: 36, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11803, file: !13, line: 2346, column: 38)
!11808 = !DILocation(line: 2348, column: 24, scope: !11807)
!11809 = !DILocation(line: 2348, column: 34, scope: !11807)
!11810 = !DILocation(line: 2349, column: 34, scope: !11807)
!11811 = !DILocation(line: 2349, column: 31, scope: !11807)
!11812 = !DILocation(line: 2350, column: 17, scope: !11807)
!11813 = !DILocation(line: 2353, column: 27, scope: !1473)
!11814 = !DILocation(line: 2353, column: 24, scope: !1473)
!11815 = !DILocation(line: 2354, column: 23, scope: !1473)
!11816 = !DILocation(line: 2355, column: 9, scope: !1473)
!11817 = !DILocation(line: 2358, column: 27, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !1474, file: !13, line: 2356, column: 14)
!11819 = !DILocation(line: 2358, column: 24, scope: !11818)
!11820 = !DILocation(line: 2359, column: 23, scope: !11818)
!11821 = !DILocation(line: 2362, column: 9, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2362, column: 9)
!11823 = !DILocation(line: 2362, column: 20, scope: !11822)
!11824 = !DILocation(line: 2362, column: 9, scope: !1435)
!11825 = !DILocation(line: 2363, column: 20, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11822, file: !13, line: 2362, column: 26)
!11827 = !DILocation(line: 2364, column: 45, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11826, file: !13, line: 2364, column: 13)
!11829 = !DILocation(line: 2364, column: 13, scope: !11828)
!11830 = !DILocation(line: 2364, column: 60, scope: !11828)
!11831 = !DILocation(line: 2364, column: 13, scope: !11826)
!11832 = !DILocation(line: 2365, column: 13, scope: !11828)
!11833 = !DILocation(line: 2366, column: 5, scope: !11826)
!11834 = !DILocation(line: 2369, column: 25, scope: !1435)
!11835 = !DILocation(line: 2369, column: 12, scope: !1435)
!11836 = !DILocation(line: 2369, column: 22, scope: !1435)
!11837 = !DILocation(line: 2370, column: 34, scope: !1435)
!11838 = !DILocation(line: 2370, column: 28, scope: !1435)
!11839 = !DILocation(line: 2370, column: 12, scope: !1435)
!11840 = !DILocation(line: 2370, column: 26, scope: !1435)
!11841 = !DILocation(line: 2371, column: 9, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2371, column: 9)
!11843 = !DILocation(line: 2371, column: 23, scope: !11842)
!11844 = !DILocation(line: 2371, column: 9, scope: !1435)
!11845 = !DILocation(line: 2372, column: 9, scope: !11842)
!11846 = !DILocation(line: 2380, column: 19, scope: !1435)
!11847 = !DILocation(line: 2381, column: 48, scope: !1435)
!11848 = !DILocation(line: 2381, column: 30, scope: !1435)
!11849 = !DILocation(line: 2381, column: 62, scope: !1435)
!11850 = !DILocation(line: 2381, column: 28, scope: !1435)
!11851 = !DILocation(line: 2381, column: 11, scope: !1435)
!11852 = !DILocation(line: 2382, column: 17, scope: !1435)
!11853 = !DILocation(line: 2382, column: 56, scope: !1435)
!11854 = !DILocation(line: 2382, column: 41, scope: !1435)
!11855 = !DILocation(line: 2382, column: 70, scope: !1435)
!11856 = !DILocation(line: 2382, column: 23, scope: !1435)
!11857 = !DILocation(line: 2382, column: 15, scope: !1435)
!11858 = !DILocation(line: 2383, column: 14, scope: !1435)
!11859 = !DILocation(line: 2383, column: 11, scope: !1435)
!11860 = !DILocation(line: 2384, column: 5, scope: !1435)
!11861 = !DILocation(line: 2384, column: 12, scope: !11660)
!11862 = !DILocation(line: 2384, column: 20, scope: !1435)
!11863 = !DILocation(line: 2384, column: 18, scope: !1435)
!11864 = !DILocation(line: 2385, column: 9, scope: !1482)
!11865 = !DILocation(line: 2385, column: 20, scope: !1482)
!11866 = !DILocation(line: 2387, column: 9, scope: !1482)
!11867 = !DILocation(line: 2387, column: 14, scope: !11868)
!11868 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 1)
!11869 = !DILocation(line: 2387, column: 24, scope: !1484)
!11870 = !DILocation(line: 2387, column: 65, scope: !1484)
!11871 = !DILocation(line: 2387, column: 71, scope: !1484)
!11872 = !DILocation(line: 2387, column: 100, scope: !1484)
!11873 = !DILocation(line: 2387, column: 35, scope: !1484)
!11874 = !DILocation(line: 2387, column: 141, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !1484, file: !13, line: 2387, column: 127)
!11876 = !DILocation(line: 2387, column: 127, scope: !11875)
!11877 = !DILocation(line: 2387, column: 151, scope: !11875)
!11878 = !DILocation(line: 2387, column: 127, scope: !1484)
!11879 = !DILocation(line: 2387, column: 156, scope: !11875)
!11880 = !DILocation(line: 2387, column: 219, scope: !11881)
!11881 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 2)
!11882 = !DILocation(line: 2387, column: 201, scope: !1484)
!11883 = !DILocation(line: 2387, column: 231, scope: !1484)
!11884 = !DILocation(line: 2387, column: 169, scope: !1484)
!11885 = !DILocation(line: 2387, column: 240, scope: !1484)
!11886 = !DILocation(line: 2387, column: 245, scope: !11887)
!11887 = !DILexicalBlockFile(scope: !1486, file: !13, discriminator: 4)
!11888 = !DILocation(line: 2387, column: 255, scope: !1486)
!11889 = !DILocation(line: 2387, column: 285, scope: !1486)
!11890 = !DILocation(line: 2387, column: 304, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !1486, file: !13, line: 2387, column: 301)
!11892 = !DILocation(line: 2387, column: 321, scope: !11891)
!11893 = !DILocation(line: 2387, column: 301, scope: !11891)
!11894 = !DILocation(line: 2387, column: 331, scope: !11891)
!11895 = !DILocation(line: 2387, column: 301, scope: !1486)
!11896 = !DILocation(line: 2387, column: 301, scope: !11897)
!11897 = !DILexicalBlockFile(scope: !1486, file: !13, discriminator: 5)
!11898 = !DILocation(line: 2387, column: 362, scope: !11899)
!11899 = !DILexicalBlockFile(scope: !11891, file: !13, discriminator: 6)
!11900 = !DILocation(line: 2387, column: 380, scope: !11891)
!11901 = !DILocation(line: 2387, column: 390, scope: !11891)
!11902 = !DILocation(line: 2387, column: 415, scope: !11891)
!11903 = !DILocation(line: 2387, column: 346, scope: !11891)
!11904 = !DILocation(line: 2387, column: 434, scope: !11905)
!11905 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 7)
!11906 = !DILocation(line: 2387, column: 434, scope: !1486)
!11907 = !DILocation(line: 2387, column: 434, scope: !11908)
!11908 = !DILexicalBlockFile(scope: !1486, file: !13, discriminator: 8)
!11909 = !DILocation(line: 2387, column: 447, scope: !11910)
!11910 = !DILexicalBlockFile(scope: !1482, file: !13, discriminator: 9)
!11911 = !DILocation(line: 2387, column: 447, scope: !11912)
!11912 = !DILexicalBlockFile(scope: !11913, file: !13, discriminator: 10)
!11913 = !DILexicalBlockFile(scope: !1482, file: !13, discriminator: 3)
!11914 = !DILocation(line: 2387, column: 447, scope: !1484)
!11915 = !DILocation(line: 2387, column: 447, scope: !11916)
!11916 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 11)
!11917 = !DILocation(line: 2389, column: 26, scope: !1482)
!11918 = !DILocation(line: 2389, column: 23, scope: !1482)
!11919 = !DILocation(line: 2390, column: 16, scope: !1482)
!11920 = !DILocation(line: 2390, column: 30, scope: !1482)
!11921 = !DILocation(line: 2391, column: 9, scope: !1482)
!11922 = !DILocation(line: 2391, column: 14, scope: !11923)
!11923 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 1)
!11924 = !DILocation(line: 2391, column: 24, scope: !1488)
!11925 = !DILocation(line: 2391, column: 60, scope: !1488)
!11926 = !DILocation(line: 2391, column: 66, scope: !1488)
!11927 = !DILocation(line: 2391, column: 75, scope: !1488)
!11928 = !DILocation(line: 2391, column: 33, scope: !1488)
!11929 = !DILocation(line: 2391, column: 112, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !1488, file: !13, line: 2391, column: 112)
!11931 = !DILocation(line: 2391, column: 119, scope: !11930)
!11932 = !DILocation(line: 2391, column: 112, scope: !1488)
!11933 = !DILocation(line: 2391, column: 134, scope: !11930)
!11934 = !DILocation(line: 2391, column: 169, scope: !11935)
!11935 = !DILexicalBlockFile(scope: !1492, file: !13, discriminator: 2)
!11936 = !DILocation(line: 2391, column: 150, scope: !1492)
!11937 = !DILocation(line: 2391, column: 149, scope: !1488)
!11938 = !DILocation(line: 2391, column: 231, scope: !11939)
!11939 = !DILexicalBlockFile(scope: !1491, file: !13, discriminator: 5)
!11940 = !DILocation(line: 2391, column: 236, scope: !11941)
!11941 = !DILexicalBlockFile(scope: !1490, file: !13, discriminator: 6)
!11942 = !DILocation(line: 2391, column: 246, scope: !1490)
!11943 = !DILocation(line: 2391, column: 276, scope: !1490)
!11944 = !DILocation(line: 2391, column: 293, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !1490, file: !13, line: 2391, column: 290)
!11946 = !DILocation(line: 2391, column: 310, scope: !11945)
!11947 = !DILocation(line: 2391, column: 290, scope: !11945)
!11948 = !DILocation(line: 2391, column: 320, scope: !11945)
!11949 = !DILocation(line: 2391, column: 290, scope: !1490)
!11950 = !DILocation(line: 2391, column: 290, scope: !11951)
!11951 = !DILexicalBlockFile(scope: !1490, file: !13, discriminator: 7)
!11952 = !DILocation(line: 2391, column: 351, scope: !11953)
!11953 = !DILexicalBlockFile(scope: !11945, file: !13, discriminator: 8)
!11954 = !DILocation(line: 2391, column: 369, scope: !11945)
!11955 = !DILocation(line: 2391, column: 379, scope: !11945)
!11956 = !DILocation(line: 2391, column: 404, scope: !11945)
!11957 = !DILocation(line: 2391, column: 335, scope: !11945)
!11958 = !DILocation(line: 2391, column: 423, scope: !11959)
!11959 = !DILexicalBlockFile(scope: !1491, file: !13, discriminator: 9)
!11960 = !DILocation(line: 2391, column: 423, scope: !1490)
!11961 = !DILocation(line: 2391, column: 423, scope: !11962)
!11962 = !DILexicalBlockFile(scope: !1490, file: !13, discriminator: 10)
!11963 = !DILocation(line: 2391, column: 436, scope: !1491)
!11964 = !DILocation(line: 2391, column: 449, scope: !11965)
!11965 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 4)
!11966 = !DILocation(line: 2391, column: 454, scope: !11967)
!11967 = !DILexicalBlockFile(scope: !1494, file: !13, discriminator: 12)
!11968 = !DILocation(line: 2391, column: 464, scope: !1494)
!11969 = !DILocation(line: 2391, column: 494, scope: !1494)
!11970 = !DILocation(line: 2391, column: 511, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !1494, file: !13, line: 2391, column: 508)
!11972 = !DILocation(line: 2391, column: 528, scope: !11971)
!11973 = !DILocation(line: 2391, column: 508, scope: !11971)
!11974 = !DILocation(line: 2391, column: 538, scope: !11971)
!11975 = !DILocation(line: 2391, column: 508, scope: !1494)
!11976 = !DILocation(line: 2391, column: 508, scope: !11977)
!11977 = !DILexicalBlockFile(scope: !1494, file: !13, discriminator: 13)
!11978 = !DILocation(line: 2391, column: 569, scope: !11979)
!11979 = !DILexicalBlockFile(scope: !11971, file: !13, discriminator: 14)
!11980 = !DILocation(line: 2391, column: 587, scope: !11971)
!11981 = !DILocation(line: 2391, column: 597, scope: !11971)
!11982 = !DILocation(line: 2391, column: 622, scope: !11971)
!11983 = !DILocation(line: 2391, column: 553, scope: !11971)
!11984 = !DILocation(line: 2391, column: 641, scope: !11985)
!11985 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 15)
!11986 = !DILocation(line: 2391, column: 641, scope: !1494)
!11987 = !DILocation(line: 2391, column: 641, scope: !11988)
!11988 = !DILexicalBlockFile(scope: !1494, file: !13, discriminator: 16)
!11989 = !DILocation(line: 2391, column: 654, scope: !11990)
!11990 = !DILexicalBlockFile(scope: !1482, file: !13, discriminator: 17)
!11991 = !DILocation(line: 2391, column: 654, scope: !11992)
!11992 = !DILexicalBlockFile(scope: !11993, file: !13, discriminator: 18)
!11993 = !DILexicalBlockFile(scope: !11913, file: !13, discriminator: 11)
!11994 = !DILocation(line: 2391, column: 654, scope: !1488)
!11995 = !DILocation(line: 2391, column: 654, scope: !11996)
!11996 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 19)
!11997 = !DILocation(line: 2393, column: 13, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2393, column: 13)
!11999 = !DILocation(line: 2393, column: 28, scope: !11998)
!12000 = !DILocation(line: 2393, column: 33, scope: !11998)
!12001 = !DILocation(line: 2393, column: 36, scope: !12002)
!12002 = !DILexicalBlockFile(scope: !11998, file: !13, discriminator: 1)
!12003 = !DILocation(line: 2393, column: 53, scope: !11998)
!12004 = !DILocation(line: 2393, column: 50, scope: !11998)
!12005 = !DILocation(line: 2393, column: 13, scope: !1482)
!12006 = !DILocation(line: 2395, column: 40, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11998, file: !13, line: 2393, column: 68)
!12008 = !DILocation(line: 2395, column: 33, scope: !12007)
!12009 = !DILocation(line: 2395, column: 20, scope: !12007)
!12010 = !DILocation(line: 2395, column: 30, scope: !12007)
!12011 = !DILocation(line: 2396, column: 30, scope: !12007)
!12012 = !DILocation(line: 2396, column: 27, scope: !12007)
!12013 = !DILocation(line: 2397, column: 32, scope: !12007)
!12014 = !DILocation(line: 2397, column: 20, scope: !12007)
!12015 = !DILocation(line: 2397, column: 30, scope: !12007)
!12016 = !DILocation(line: 2398, column: 20, scope: !12007)
!12017 = !DILocation(line: 2398, column: 34, scope: !12007)
!12018 = !DILocation(line: 2399, column: 27, scope: !12007)
!12019 = !DILocation(line: 2400, column: 9, scope: !12007)
!12020 = !DILocation(line: 2401, column: 13, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2401, column: 13)
!12022 = !DILocation(line: 2401, column: 30, scope: !12021)
!12023 = !DILocation(line: 2401, column: 27, scope: !12021)
!12024 = !DILocation(line: 2401, column: 13, scope: !1482)
!12025 = !DILocation(line: 2402, column: 13, scope: !12021)
!12026 = !DILocation(line: 2403, column: 14, scope: !1482)
!12027 = !DILocation(line: 2404, column: 5, scope: !1435)
!12028 = !DILocation(line: 2404, column: 5, scope: !11661)
!12029 = !DILocation(line: 2405, column: 9, scope: !1497)
!12030 = !DILocation(line: 2405, column: 18, scope: !1497)
!12031 = !DILocation(line: 2405, column: 15, scope: !1497)
!12032 = !DILocation(line: 2405, column: 9, scope: !1435)
!12033 = !DILocation(line: 2407, column: 9, scope: !1496)
!12034 = !DILocation(line: 2407, column: 19, scope: !1496)
!12035 = !DILocation(line: 2408, column: 13, scope: !1496)
!12036 = !DILocation(line: 2408, column: 19, scope: !1496)
!12037 = !DILocation(line: 2407, column: 29, scope: !1496)
!12038 = !DILocation(line: 2409, column: 27, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !1496, file: !13, line: 2409, column: 13)
!12040 = !DILocation(line: 2409, column: 13, scope: !12039)
!12041 = !DILocation(line: 2409, column: 36, scope: !12039)
!12042 = !DILocation(line: 2409, column: 13, scope: !1496)
!12043 = !DILocation(line: 2410, column: 13, scope: !12039)
!12044 = !DILocation(line: 2411, column: 74, scope: !1496)
!12045 = !DILocation(line: 2411, column: 56, scope: !1496)
!12046 = !DILocation(line: 2411, column: 85, scope: !1496)
!12047 = !DILocation(line: 2411, column: 23, scope: !1496)
!12048 = !DILocation(line: 2412, column: 9, scope: !1496)
!12049 = !DILocation(line: 2412, column: 14, scope: !12050)
!12050 = !DILexicalBlockFile(scope: !1499, file: !13, discriminator: 1)
!12051 = !DILocation(line: 2412, column: 24, scope: !1499)
!12052 = !DILocation(line: 2412, column: 54, scope: !1499)
!12053 = !DILocation(line: 2412, column: 72, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !1499, file: !13, line: 2412, column: 69)
!12055 = !DILocation(line: 2412, column: 89, scope: !12054)
!12056 = !DILocation(line: 2412, column: 69, scope: !12054)
!12057 = !DILocation(line: 2412, column: 99, scope: !12054)
!12058 = !DILocation(line: 2412, column: 69, scope: !1499)
!12059 = !DILocation(line: 2412, column: 69, scope: !12060)
!12060 = !DILexicalBlockFile(scope: !1499, file: !13, discriminator: 2)
!12061 = !DILocation(line: 2412, column: 130, scope: !12062)
!12062 = !DILexicalBlockFile(scope: !12054, file: !13, discriminator: 3)
!12063 = !DILocation(line: 2412, column: 148, scope: !12054)
!12064 = !DILocation(line: 2412, column: 158, scope: !12054)
!12065 = !DILocation(line: 2412, column: 183, scope: !12054)
!12066 = !DILocation(line: 2412, column: 114, scope: !12054)
!12067 = !DILocation(line: 2412, column: 202, scope: !12068)
!12068 = !DILexicalBlockFile(scope: !1496, file: !13, discriminator: 4)
!12069 = !DILocation(line: 2412, column: 202, scope: !1499)
!12070 = !DILocation(line: 2412, column: 202, scope: !12071)
!12071 = !DILexicalBlockFile(scope: !1499, file: !13, discriminator: 5)
!12072 = !DILocation(line: 2413, column: 16, scope: !1496)
!12073 = !DILocation(line: 2413, column: 25, scope: !1496)
!12074 = !DILocation(line: 2415, column: 13, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !1496, file: !13, line: 2415, column: 13)
!12076 = !DILocation(line: 2415, column: 29, scope: !12075)
!12077 = !DILocation(line: 2415, column: 27, scope: !12075)
!12078 = !DILocation(line: 2415, column: 13, scope: !1496)
!12079 = !DILocation(line: 2416, column: 29, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12075, file: !13, line: 2415, column: 44)
!12081 = !DILocation(line: 2416, column: 13, scope: !12080)
!12082 = !DILocation(line: 2418, column: 13, scope: !12080)
!12083 = !DILocation(line: 2420, column: 5, scope: !1497)
!12084 = !DILocation(line: 2420, column: 5, scope: !12085)
!12085 = !DILexicalBlockFile(scope: !1497, file: !13, discriminator: 1)
!12086 = !DILocation(line: 2420, column: 5, scope: !1496)
!12087 = !DILocation(line: 2405, column: 18, scope: !12085)
!12088 = !DILocation(line: 2423, column: 40, scope: !1435)
!12089 = !DILocation(line: 2423, column: 46, scope: !1435)
!12090 = !DILocation(line: 2423, column: 78, scope: !1435)
!12091 = !DILocation(line: 2423, column: 11, scope: !1435)
!12092 = !DILocation(line: 2423, column: 9, scope: !1435)
!12093 = !DILocation(line: 2424, column: 5, scope: !1435)
!12094 = !DILocation(line: 2424, column: 10, scope: !12095)
!12095 = !DILexicalBlockFile(scope: !1501, file: !13, discriminator: 1)
!12096 = !DILocation(line: 2424, column: 20, scope: !1501)
!12097 = !DILocation(line: 2424, column: 50, scope: !1501)
!12098 = !DILocation(line: 2424, column: 72, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !1501, file: !13, line: 2424, column: 69)
!12100 = !DILocation(line: 2424, column: 89, scope: !12099)
!12101 = !DILocation(line: 2424, column: 69, scope: !12099)
!12102 = !DILocation(line: 2424, column: 99, scope: !12099)
!12103 = !DILocation(line: 2424, column: 69, scope: !1501)
!12104 = !DILocation(line: 2424, column: 69, scope: !12105)
!12105 = !DILexicalBlockFile(scope: !1501, file: !13, discriminator: 2)
!12106 = !DILocation(line: 2424, column: 130, scope: !12107)
!12107 = !DILexicalBlockFile(scope: !12099, file: !13, discriminator: 3)
!12108 = !DILocation(line: 2424, column: 148, scope: !12099)
!12109 = !DILocation(line: 2424, column: 158, scope: !12099)
!12110 = !DILocation(line: 2424, column: 183, scope: !12099)
!12111 = !DILocation(line: 2424, column: 114, scope: !12099)
!12112 = !DILocation(line: 2424, column: 202, scope: !11556)
!12113 = !DILocation(line: 2424, column: 202, scope: !1501)
!12114 = !DILocation(line: 2424, column: 202, scope: !12115)
!12115 = !DILexicalBlockFile(scope: !1501, file: !13, discriminator: 5)
!12116 = !DILocation(line: 2425, column: 9, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2425, column: 9)
!12118 = !DILocation(line: 2425, column: 13, scope: !12117)
!12119 = !DILocation(line: 2425, column: 9, scope: !1435)
!12120 = !DILocation(line: 2426, column: 9, scope: !12117)
!12121 = !DILocation(line: 2427, column: 5, scope: !1435)
!12122 = !DILocation(line: 2427, column: 10, scope: !12123)
!12123 = !DILexicalBlockFile(scope: !1503, file: !13, discriminator: 1)
!12124 = !DILocation(line: 2427, column: 20, scope: !1503)
!12125 = !DILocation(line: 2427, column: 50, scope: !1503)
!12126 = !DILocation(line: 2427, column: 64, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !1503, file: !13, line: 2427, column: 61)
!12128 = !DILocation(line: 2427, column: 81, scope: !12127)
!12129 = !DILocation(line: 2427, column: 61, scope: !12127)
!12130 = !DILocation(line: 2427, column: 91, scope: !12127)
!12131 = !DILocation(line: 2427, column: 61, scope: !1503)
!12132 = !DILocation(line: 2427, column: 61, scope: !12133)
!12133 = !DILexicalBlockFile(scope: !1503, file: !13, discriminator: 2)
!12134 = !DILocation(line: 2427, column: 122, scope: !12135)
!12135 = !DILexicalBlockFile(scope: !12127, file: !13, discriminator: 3)
!12136 = !DILocation(line: 2427, column: 140, scope: !12127)
!12137 = !DILocation(line: 2427, column: 150, scope: !12127)
!12138 = !DILocation(line: 2427, column: 175, scope: !12127)
!12139 = !DILocation(line: 2427, column: 106, scope: !12127)
!12140 = !DILocation(line: 2427, column: 194, scope: !11556)
!12141 = !DILocation(line: 2427, column: 194, scope: !1503)
!12142 = !DILocation(line: 2427, column: 194, scope: !12143)
!12143 = !DILexicalBlockFile(scope: !1503, file: !13, discriminator: 5)
!12144 = !DILocation(line: 2430, column: 34, scope: !1435)
!12145 = !DILocation(line: 2430, column: 28, scope: !1435)
!12146 = !DILocation(line: 2430, column: 12, scope: !1435)
!12147 = !DILocation(line: 2430, column: 26, scope: !1435)
!12148 = !DILocation(line: 2431, column: 12, scope: !1435)
!12149 = !DILocation(line: 2431, column: 5, scope: !1435)
!12150 = !DILocation(line: 2434, column: 9, scope: !1506)
!12151 = !DILocation(line: 2434, column: 9, scope: !1435)
!12152 = !DILocation(line: 2435, column: 9, scope: !1505)
!12153 = !DILocation(line: 2435, column: 19, scope: !1505)
!12154 = !DILocation(line: 2435, column: 26, scope: !1505)
!12155 = !DILocation(line: 2435, column: 34, scope: !1505)
!12156 = !DILocation(line: 2436, column: 9, scope: !1505)
!12157 = !DILocation(line: 2438, column: 44, scope: !1505)
!12158 = !DILocation(line: 2438, column: 50, scope: !1505)
!12159 = !DILocation(line: 2438, column: 82, scope: !1505)
!12160 = !DILocation(line: 2438, column: 15, scope: !1505)
!12161 = !DILocation(line: 2438, column: 13, scope: !1505)
!12162 = !DILocation(line: 2439, column: 9, scope: !1505)
!12163 = !DILocation(line: 2439, column: 14, scope: !12164)
!12164 = !DILexicalBlockFile(scope: !1510, file: !13, discriminator: 1)
!12165 = !DILocation(line: 2439, column: 24, scope: !1510)
!12166 = !DILocation(line: 2439, column: 54, scope: !1510)
!12167 = !DILocation(line: 2439, column: 76, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !1510, file: !13, line: 2439, column: 73)
!12169 = !DILocation(line: 2439, column: 93, scope: !12168)
!12170 = !DILocation(line: 2439, column: 73, scope: !12168)
!12171 = !DILocation(line: 2439, column: 103, scope: !12168)
!12172 = !DILocation(line: 2439, column: 73, scope: !1510)
!12173 = !DILocation(line: 2439, column: 73, scope: !12174)
!12174 = !DILexicalBlockFile(scope: !1510, file: !13, discriminator: 2)
!12175 = !DILocation(line: 2439, column: 134, scope: !12176)
!12176 = !DILexicalBlockFile(scope: !12168, file: !13, discriminator: 3)
!12177 = !DILocation(line: 2439, column: 152, scope: !12168)
!12178 = !DILocation(line: 2439, column: 162, scope: !12168)
!12179 = !DILocation(line: 2439, column: 187, scope: !12168)
!12180 = !DILocation(line: 2439, column: 118, scope: !12168)
!12181 = !DILocation(line: 2439, column: 206, scope: !12182)
!12182 = !DILexicalBlockFile(scope: !1505, file: !13, discriminator: 4)
!12183 = !DILocation(line: 2439, column: 206, scope: !1510)
!12184 = !DILocation(line: 2439, column: 206, scope: !12185)
!12185 = !DILexicalBlockFile(scope: !1510, file: !13, discriminator: 5)
!12186 = !DILocation(line: 2440, column: 13, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !1505, file: !13, line: 2440, column: 13)
!12188 = !DILocation(line: 2440, column: 17, scope: !12187)
!12189 = !DILocation(line: 2440, column: 13, scope: !1505)
!12190 = !DILocation(line: 2441, column: 13, scope: !12187)
!12191 = !DILocation(line: 2442, column: 9, scope: !1505)
!12192 = !DILocation(line: 2442, column: 14, scope: !12193)
!12193 = !DILexicalBlockFile(scope: !1512, file: !13, discriminator: 1)
!12194 = !DILocation(line: 2442, column: 24, scope: !1512)
!12195 = !DILocation(line: 2442, column: 54, scope: !1512)
!12196 = !DILocation(line: 2442, column: 68, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !1512, file: !13, line: 2442, column: 65)
!12198 = !DILocation(line: 2442, column: 85, scope: !12197)
!12199 = !DILocation(line: 2442, column: 65, scope: !12197)
!12200 = !DILocation(line: 2442, column: 95, scope: !12197)
!12201 = !DILocation(line: 2442, column: 65, scope: !1512)
!12202 = !DILocation(line: 2442, column: 65, scope: !12203)
!12203 = !DILexicalBlockFile(scope: !1512, file: !13, discriminator: 2)
!12204 = !DILocation(line: 2442, column: 126, scope: !12205)
!12205 = !DILexicalBlockFile(scope: !12197, file: !13, discriminator: 3)
!12206 = !DILocation(line: 2442, column: 144, scope: !12197)
!12207 = !DILocation(line: 2442, column: 154, scope: !12197)
!12208 = !DILocation(line: 2442, column: 179, scope: !12197)
!12209 = !DILocation(line: 2442, column: 110, scope: !12197)
!12210 = !DILocation(line: 2442, column: 198, scope: !12182)
!12211 = !DILocation(line: 2442, column: 198, scope: !1512)
!12212 = !DILocation(line: 2442, column: 198, scope: !12213)
!12213 = !DILexicalBlockFile(scope: !1512, file: !13, discriminator: 5)
!12214 = !DILocation(line: 2444, column: 23, scope: !1505)
!12215 = !DILocation(line: 2444, column: 29, scope: !1505)
!12216 = !DILocation(line: 2444, column: 36, scope: !1505)
!12217 = !DILocation(line: 2444, column: 9, scope: !1505)
!12218 = !DILocation(line: 2445, column: 5, scope: !1506)
!12219 = !DILocation(line: 2445, column: 5, scope: !12220)
!12220 = !DILexicalBlockFile(scope: !1506, file: !13, discriminator: 1)
!12221 = !DILocation(line: 2445, column: 5, scope: !1505)
!12222 = !DILocation(line: 2446, column: 5, scope: !1435)
!12223 = !DILocation(line: 2447, column: 1, scope: !1435)
!12224 = !DILocation(line: 2450, column: 32, scope: !1519)
!12225 = !DILocation(line: 2450, column: 48, scope: !1519)
!12226 = !DILocation(line: 2452, column: 5, scope: !1519)
!12227 = !DILocation(line: 2452, column: 15, scope: !1519)
!12228 = !DILocation(line: 2453, column: 5, scope: !1519)
!12229 = !DILocation(line: 2453, column: 15, scope: !1519)
!12230 = !DILocation(line: 2455, column: 9, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2455, column: 9)
!12232 = !DILocation(line: 2455, column: 15, scope: !12231)
!12233 = !DILocation(line: 2455, column: 18, scope: !12231)
!12234 = !DILocation(line: 2455, column: 9, scope: !1519)
!12235 = !DILocation(line: 2455, column: 30, scope: !12236)
!12236 = !DILexicalBlockFile(scope: !12237, file: !13, discriminator: 1)
!12237 = distinct !DILexicalBlock(scope: !12238, file: !13, line: 2455, column: 30)
!12238 = distinct !DILexicalBlock(scope: !12231, file: !13, line: 2455, column: 24)
!12239 = !DILocation(line: 2455, column: 36, scope: !12237)
!12240 = !DILocation(line: 2455, column: 30, scope: !12237)
!12241 = !DILocation(line: 2455, column: 30, scope: !12238)
!12242 = !DILocation(line: 2455, column: 64, scope: !12243)
!12243 = !DILexicalBlockFile(scope: !12244, file: !13, discriminator: 2)
!12244 = distinct !DILexicalBlock(scope: !12237, file: !13, line: 2455, column: 46)
!12245 = !DILocation(line: 2455, column: 48, scope: !12244)
!12246 = !DILocation(line: 2455, column: 122, scope: !12244)
!12247 = !DILocation(line: 2455, column: 147, scope: !12248)
!12248 = !DILexicalBlockFile(scope: !12249, file: !13, discriminator: 3)
!12249 = distinct !DILexicalBlock(scope: !12237, file: !13, line: 2455, column: 129)
!12250 = !DILocation(line: 2455, column: 131, scope: !12249)
!12251 = !DILocation(line: 2455, column: 209, scope: !12252)
!12252 = !DILexicalBlockFile(scope: !12238, file: !13, discriminator: 4)
!12253 = !DILocation(line: 2455, column: 209, scope: !12238)
!12254 = !DILocation(line: 2456, column: 34, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2456, column: 9)
!12256 = !DILocation(line: 2456, column: 10, scope: !12255)
!12257 = !DILocation(line: 2456, column: 9, scope: !1519)
!12258 = !DILocation(line: 2457, column: 9, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12255, file: !13, line: 2456, column: 62)
!12260 = !DILocation(line: 2460, column: 51, scope: !1519)
!12261 = !DILocation(line: 2460, column: 38, scope: !1519)
!12262 = !DILocation(line: 2460, column: 57, scope: !1519)
!12263 = !DILocation(line: 2460, column: 11, scope: !1519)
!12264 = !DILocation(line: 2460, column: 9, scope: !1519)
!12265 = !DILocation(line: 2461, column: 9, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2461, column: 9)
!12267 = !DILocation(line: 2461, column: 13, scope: !12266)
!12268 = !DILocation(line: 2461, column: 9, scope: !1519)
!12269 = !DILocation(line: 2462, column: 9, scope: !12266)
!12270 = !DILocation(line: 2463, column: 5, scope: !1519)
!12271 = !DILocation(line: 2463, column: 10, scope: !12272)
!12272 = !DILexicalBlockFile(scope: !1526, file: !13, discriminator: 1)
!12273 = !DILocation(line: 2463, column: 20, scope: !1526)
!12274 = !DILocation(line: 2463, column: 50, scope: !1526)
!12275 = !DILocation(line: 2463, column: 64, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !1526, file: !13, line: 2463, column: 61)
!12277 = !DILocation(line: 2463, column: 81, scope: !12276)
!12278 = !DILocation(line: 2463, column: 61, scope: !12276)
!12279 = !DILocation(line: 2463, column: 91, scope: !12276)
!12280 = !DILocation(line: 2463, column: 61, scope: !1526)
!12281 = !DILocation(line: 2463, column: 61, scope: !12282)
!12282 = !DILexicalBlockFile(scope: !1526, file: !13, discriminator: 2)
!12283 = !DILocation(line: 2463, column: 122, scope: !12284)
!12284 = !DILexicalBlockFile(scope: !12276, file: !13, discriminator: 3)
!12285 = !DILocation(line: 2463, column: 140, scope: !12276)
!12286 = !DILocation(line: 2463, column: 150, scope: !12276)
!12287 = !DILocation(line: 2463, column: 175, scope: !12276)
!12288 = !DILocation(line: 2463, column: 106, scope: !12276)
!12289 = !DILocation(line: 2463, column: 194, scope: !12290)
!12290 = !DILexicalBlockFile(scope: !1519, file: !13, discriminator: 4)
!12291 = !DILocation(line: 2463, column: 194, scope: !1526)
!12292 = !DILocation(line: 2463, column: 194, scope: !12293)
!12293 = !DILexicalBlockFile(scope: !1526, file: !13, discriminator: 5)
!12294 = !DILocation(line: 2465, column: 39, scope: !1519)
!12295 = !DILocation(line: 2465, column: 45, scope: !1519)
!12296 = !DILocation(line: 2465, column: 53, scope: !1519)
!12297 = !DILocation(line: 2465, column: 73, scope: !1519)
!12298 = !DILocation(line: 2465, column: 12, scope: !1519)
!12299 = !DILocation(line: 2465, column: 5, scope: !1519)
!12300 = !DILocation(line: 2466, column: 1, scope: !1519)
!12301 = !DILocation(line: 1402, column: 41, scope: !1232)
!12302 = !DILocation(line: 1402, column: 58, scope: !1232)
!12303 = !DILocation(line: 1404, column: 5, scope: !1232)
!12304 = !DILocation(line: 1404, column: 15, scope: !1232)
!12305 = !DILocation(line: 1405, column: 5, scope: !1232)
!12306 = !DILocation(line: 1405, column: 16, scope: !1232)
!12307 = !DILocation(line: 1407, column: 9, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !1232, file: !13, line: 1407, column: 9)
!12309 = !DILocation(line: 1407, column: 15, scope: !12308)
!12310 = !DILocation(line: 1407, column: 29, scope: !12308)
!12311 = !DILocation(line: 1407, column: 9, scope: !1232)
!12312 = !DILocation(line: 1408, column: 16, scope: !12308)
!12313 = !DILocation(line: 1408, column: 9, scope: !12308)
!12314 = !DILocation(line: 1411, column: 62, scope: !1232)
!12315 = !DILocation(line: 1411, column: 68, scope: !1232)
!12316 = !DILocation(line: 1411, column: 44, scope: !1232)
!12317 = !DILocation(line: 1411, column: 85, scope: !1232)
!12318 = !DILocation(line: 1412, column: 16, scope: !1232)
!12319 = !DILocation(line: 1412, column: 22, scope: !1232)
!12320 = !DILocation(line: 1412, column: 14, scope: !1232)
!12321 = !DILocation(line: 1411, column: 11, scope: !1232)
!12322 = !DILocation(line: 1416, column: 9, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !1232, file: !13, line: 1416, column: 9)
!12324 = !DILocation(line: 1416, column: 11, scope: !12323)
!12325 = !DILocation(line: 1416, column: 15, scope: !12323)
!12326 = !DILocation(line: 1416, column: 18, scope: !12327)
!12327 = !DILexicalBlockFile(scope: !12323, file: !13, discriminator: 1)
!12328 = !DILocation(line: 1416, column: 22, scope: !12323)
!12329 = !DILocation(line: 1416, column: 20, scope: !12323)
!12330 = !DILocation(line: 1416, column: 9, scope: !1232)
!12331 = !DILocation(line: 1417, column: 13, scope: !12323)
!12332 = !DILocation(line: 1417, column: 11, scope: !12323)
!12333 = !DILocation(line: 1417, column: 9, scope: !12323)
!12334 = !DILocation(line: 1419, column: 9, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !1232, file: !13, line: 1419, column: 9)
!12336 = !DILocation(line: 1419, column: 15, scope: !12335)
!12337 = !DILocation(line: 1419, column: 34, scope: !12335)
!12338 = !DILocation(line: 1419, column: 38, scope: !12335)
!12339 = !DILocation(line: 1419, column: 41, scope: !12340)
!12340 = !DILexicalBlockFile(scope: !12335, file: !13, discriminator: 1)
!12341 = !DILocation(line: 1419, column: 45, scope: !12335)
!12342 = !DILocation(line: 1419, column: 43, scope: !12335)
!12343 = !DILocation(line: 1419, column: 9, scope: !1232)
!12344 = !DILocation(line: 1420, column: 37, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12335, file: !13, line: 1419, column: 52)
!12346 = !DILocation(line: 1420, column: 43, scope: !12345)
!12347 = !DILocation(line: 1421, column: 37, scope: !12345)
!12348 = !DILocation(line: 1421, column: 43, scope: !12345)
!12349 = !DILocation(line: 1422, column: 37, scope: !12345)
!12350 = !DILocation(line: 1422, column: 43, scope: !12345)
!12351 = !DILocation(line: 1422, column: 64, scope: !12345)
!12352 = !DILocation(line: 1422, column: 62, scope: !12345)
!12353 = !DILocation(line: 1420, column: 17, scope: !12345)
!12354 = !DILocation(line: 1420, column: 15, scope: !12345)
!12355 = !DILocation(line: 1423, column: 13, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12345, file: !13, line: 1423, column: 13)
!12357 = !DILocation(line: 1423, column: 19, scope: !12356)
!12358 = !DILocation(line: 1423, column: 13, scope: !12345)
!12359 = !DILocation(line: 1424, column: 13, scope: !12356)
!12360 = !DILocation(line: 1425, column: 5, scope: !12345)
!12361 = !DILocation(line: 1427, column: 17, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12335, file: !13, line: 1426, column: 10)
!12363 = !DILocation(line: 1427, column: 23, scope: !12362)
!12364 = !DILocation(line: 1427, column: 15, scope: !12362)
!12365 = !DILocation(line: 1428, column: 25, scope: !12362)
!12366 = !DILocation(line: 1428, column: 34, scope: !12362)
!12367 = !DILocation(line: 1428, column: 43, scope: !12362)
!12368 = !DILocation(line: 1431, column: 33, scope: !1232)
!12369 = !DILocation(line: 1431, column: 5, scope: !1232)
!12370 = !DILocation(line: 1431, column: 11, scope: !1232)
!12371 = !DILocation(line: 1431, column: 30, scope: !1232)
!12372 = !DILocation(line: 1432, column: 12, scope: !1232)
!12373 = !DILocation(line: 1432, column: 5, scope: !1232)
!12374 = !DILocation(line: 1433, column: 1, scope: !1232)
!12375 = !DILocation(line: 1984, column: 41, scope: !1401)
!12376 = !DILocation(line: 1984, column: 59, scope: !1401)
!12377 = !DILocation(line: 1986, column: 5, scope: !1401)
!12378 = !DILocation(line: 1986, column: 19, scope: !1401)
!12379 = !DILocation(line: 1987, column: 5, scope: !1401)
!12380 = !DILocation(line: 1987, column: 19, scope: !1401)
!12381 = !DILocation(line: 1987, column: 62, scope: !1401)
!12382 = !DILocation(line: 1987, column: 48, scope: !1401)
!12383 = !DILocation(line: 1987, column: 32, scope: !1401)
!12384 = !DILocation(line: 1988, column: 9, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !1401, file: !13, line: 1988, column: 9)
!12386 = !DILocation(line: 1988, column: 20, scope: !12385)
!12387 = !DILocation(line: 1988, column: 9, scope: !1401)
!12388 = !DILocation(line: 1989, column: 9, scope: !12385)
!12389 = !DILocation(line: 1991, column: 29, scope: !1416)
!12390 = !DILocation(line: 1991, column: 41, scope: !1416)
!12391 = !DILocation(line: 1991, column: 9, scope: !1416)
!12392 = !DILocation(line: 1992, column: 35, scope: !1416)
!12393 = !DILocation(line: 1991, column: 9, scope: !1401)
!12394 = !DILocation(line: 1993, column: 9, scope: !1415)
!12395 = !DILocation(line: 1993, column: 14, scope: !12396)
!12396 = !DILexicalBlockFile(scope: !1414, file: !13, discriminator: 1)
!12397 = !DILocation(line: 1993, column: 24, scope: !1414)
!12398 = !DILocation(line: 1993, column: 54, scope: !1414)
!12399 = !DILocation(line: 1993, column: 41, scope: !1414)
!12400 = !DILocation(line: 1993, column: 75, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !1414, file: !13, line: 1993, column: 72)
!12402 = !DILocation(line: 1993, column: 92, scope: !12401)
!12403 = !DILocation(line: 1993, column: 72, scope: !12401)
!12404 = !DILocation(line: 1993, column: 102, scope: !12401)
!12405 = !DILocation(line: 1993, column: 72, scope: !1414)
!12406 = !DILocation(line: 1993, column: 72, scope: !12407)
!12407 = !DILexicalBlockFile(scope: !1414, file: !13, discriminator: 2)
!12408 = !DILocation(line: 1993, column: 133, scope: !12409)
!12409 = !DILexicalBlockFile(scope: !12401, file: !13, discriminator: 3)
!12410 = !DILocation(line: 1993, column: 151, scope: !12401)
!12411 = !DILocation(line: 1993, column: 161, scope: !12401)
!12412 = !DILocation(line: 1993, column: 186, scope: !12401)
!12413 = !DILocation(line: 1993, column: 117, scope: !12401)
!12414 = !DILocation(line: 1993, column: 205, scope: !12415)
!12415 = !DILexicalBlockFile(scope: !1415, file: !13, discriminator: 4)
!12416 = !DILocation(line: 1993, column: 205, scope: !1414)
!12417 = !DILocation(line: 1993, column: 205, scope: !12418)
!12418 = !DILexicalBlockFile(scope: !1414, file: !13, discriminator: 5)
!12419 = !DILocation(line: 1994, column: 9, scope: !1415)
!12420 = !DILocation(line: 1996, column: 5, scope: !1401)
!12421 = !DILocation(line: 1996, column: 10, scope: !12422)
!12422 = !DILexicalBlockFile(scope: !1418, file: !13, discriminator: 1)
!12423 = !DILocation(line: 1996, column: 20, scope: !1418)
!12424 = !DILocation(line: 1996, column: 50, scope: !1418)
!12425 = !DILocation(line: 1996, column: 37, scope: !1418)
!12426 = !DILocation(line: 1996, column: 71, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !1418, file: !13, line: 1996, column: 68)
!12428 = !DILocation(line: 1996, column: 88, scope: !12427)
!12429 = !DILocation(line: 1996, column: 68, scope: !12427)
!12430 = !DILocation(line: 1996, column: 98, scope: !12427)
!12431 = !DILocation(line: 1996, column: 68, scope: !1418)
!12432 = !DILocation(line: 1996, column: 68, scope: !12433)
!12433 = !DILexicalBlockFile(scope: !1418, file: !13, discriminator: 2)
!12434 = !DILocation(line: 1996, column: 129, scope: !12435)
!12435 = !DILexicalBlockFile(scope: !12427, file: !13, discriminator: 3)
!12436 = !DILocation(line: 1996, column: 147, scope: !12427)
!12437 = !DILocation(line: 1996, column: 157, scope: !12427)
!12438 = !DILocation(line: 1996, column: 182, scope: !12427)
!12439 = !DILocation(line: 1996, column: 113, scope: !12427)
!12440 = !DILocation(line: 1996, column: 201, scope: !12441)
!12441 = !DILexicalBlockFile(scope: !1401, file: !13, discriminator: 4)
!12442 = !DILocation(line: 1996, column: 201, scope: !1418)
!12443 = !DILocation(line: 1996, column: 201, scope: !12444)
!12444 = !DILexicalBlockFile(scope: !1418, file: !13, discriminator: 5)
!12445 = !DILocation(line: 1998, column: 13, scope: !1401)
!12446 = !DILocation(line: 1998, column: 21, scope: !1401)
!12447 = !DILocation(line: 1998, column: 5, scope: !1401)
!12448 = !DILocation(line: 1998, column: 32, scope: !1401)
!12449 = !DILocation(line: 1998, column: 39, scope: !1401)
!12450 = !DILocation(line: 1999, column: 13, scope: !1401)
!12451 = !DILocation(line: 1999, column: 21, scope: !1401)
!12452 = !DILocation(line: 1999, column: 5, scope: !1401)
!12453 = !DILocation(line: 1999, column: 32, scope: !1401)
!12454 = !DILocation(line: 1999, column: 39, scope: !1401)
!12455 = !DILocation(line: 2000, column: 13, scope: !1401)
!12456 = !DILocation(line: 2000, column: 21, scope: !1401)
!12457 = !DILocation(line: 2000, column: 5, scope: !1401)
!12458 = !DILocation(line: 2000, column: 36, scope: !1401)
!12459 = !DILocation(line: 2000, column: 43, scope: !1401)
!12460 = !DILocation(line: 2001, column: 13, scope: !1401)
!12461 = !DILocation(line: 2001, column: 21, scope: !1401)
!12462 = !DILocation(line: 2001, column: 5, scope: !1401)
!12463 = !DILocation(line: 2001, column: 36, scope: !1401)
!12464 = !DILocation(line: 2001, column: 43, scope: !1401)
!12465 = !DILocation(line: 2002, column: 13, scope: !1401)
!12466 = !DILocation(line: 2002, column: 21, scope: !1401)
!12467 = !DILocation(line: 2002, column: 31, scope: !1401)
!12468 = !DILocation(line: 2002, column: 38, scope: !1401)
!12469 = !DILocation(line: 2002, column: 5, scope: !1401)
!12470 = !DILocation(line: 2004, column: 5, scope: !1401)
!12471 = !DILocation(line: 2005, column: 1, scope: !1401)
!12472 = !DILocation(line: 2023, column: 41, scope: !1419)
!12473 = !DILocation(line: 2023, column: 60, scope: !1419)
!12474 = !DILocation(line: 2025, column: 5, scope: !1419)
!12475 = !DILocation(line: 2025, column: 15, scope: !1419)
!12476 = !DILocation(line: 2032, column: 9, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !1419, file: !13, line: 2032, column: 9)
!12478 = !DILocation(line: 2032, column: 17, scope: !12477)
!12479 = !DILocation(line: 2032, column: 27, scope: !12477)
!12480 = !DILocation(line: 2032, column: 32, scope: !12477)
!12481 = !DILocation(line: 2032, column: 35, scope: !12482)
!12482 = !DILexicalBlockFile(scope: !12477, file: !13, discriminator: 1)
!12483 = !DILocation(line: 2032, column: 43, scope: !12477)
!12484 = !DILocation(line: 2032, column: 53, scope: !12477)
!12485 = !DILocation(line: 2032, column: 9, scope: !1419)
!12486 = !DILocation(line: 2033, column: 42, scope: !12477)
!12487 = !DILocation(line: 2033, column: 48, scope: !12477)
!12488 = !DILocation(line: 2033, column: 57, scope: !12477)
!12489 = !DILocation(line: 2033, column: 15, scope: !12477)
!12490 = !DILocation(line: 2033, column: 13, scope: !12477)
!12491 = !DILocation(line: 2033, column: 9, scope: !12477)
!12492 = !DILocation(line: 2035, column: 44, scope: !12477)
!12493 = !DILocation(line: 2035, column: 50, scope: !12477)
!12494 = !DILocation(line: 2036, column: 52, scope: !12477)
!12495 = !DILocation(line: 2036, column: 60, scope: !12477)
!12496 = !DILocation(line: 2035, column: 15, scope: !12477)
!12497 = !DILocation(line: 2035, column: 13, scope: !12477)
!12498 = !DILocation(line: 2037, column: 9, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !1419, file: !13, line: 2037, column: 9)
!12500 = !DILocation(line: 2037, column: 13, scope: !12499)
!12501 = !DILocation(line: 2037, column: 9, scope: !1419)
!12502 = !DILocation(line: 2038, column: 9, scope: !12499)
!12503 = !DILocation(line: 2039, column: 5, scope: !1419)
!12504 = !DILocation(line: 2039, column: 10, scope: !12505)
!12505 = !DILexicalBlockFile(scope: !1427, file: !13, discriminator: 1)
!12506 = !DILocation(line: 2039, column: 20, scope: !1427)
!12507 = !DILocation(line: 2039, column: 50, scope: !1427)
!12508 = !DILocation(line: 2039, column: 64, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !1427, file: !13, line: 2039, column: 61)
!12510 = !DILocation(line: 2039, column: 81, scope: !12509)
!12511 = !DILocation(line: 2039, column: 61, scope: !12509)
!12512 = !DILocation(line: 2039, column: 91, scope: !12509)
!12513 = !DILocation(line: 2039, column: 61, scope: !1427)
!12514 = !DILocation(line: 2039, column: 61, scope: !12515)
!12515 = !DILexicalBlockFile(scope: !1427, file: !13, discriminator: 2)
!12516 = !DILocation(line: 2039, column: 122, scope: !12517)
!12517 = !DILexicalBlockFile(scope: !12509, file: !13, discriminator: 3)
!12518 = !DILocation(line: 2039, column: 140, scope: !12509)
!12519 = !DILocation(line: 2039, column: 150, scope: !12509)
!12520 = !DILocation(line: 2039, column: 175, scope: !12509)
!12521 = !DILocation(line: 2039, column: 106, scope: !12509)
!12522 = !DILocation(line: 2039, column: 194, scope: !12523)
!12523 = !DILexicalBlockFile(scope: !1419, file: !13, discriminator: 4)
!12524 = !DILocation(line: 2039, column: 194, scope: !1427)
!12525 = !DILocation(line: 2039, column: 194, scope: !12526)
!12526 = !DILexicalBlockFile(scope: !1427, file: !13, discriminator: 5)
!12527 = !DILocation(line: 2040, column: 5, scope: !1419)
!12528 = !DILocation(line: 2041, column: 1, scope: !1419)
!12529 = !DILocation(line: 2044, column: 41, scope: !1428)
!12530 = !DILocation(line: 2044, column: 60, scope: !1428)
!12531 = !DILocation(line: 2046, column: 5, scope: !1428)
!12532 = !DILocation(line: 2046, column: 15, scope: !1428)
!12533 = !DILocation(line: 2048, column: 9, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !1428, file: !13, line: 2048, column: 9)
!12535 = !DILocation(line: 2048, column: 17, scope: !12534)
!12536 = !DILocation(line: 2048, column: 27, scope: !12534)
!12537 = !DILocation(line: 2048, column: 32, scope: !12534)
!12538 = !DILocation(line: 2048, column: 35, scope: !12539)
!12539 = !DILexicalBlockFile(scope: !12534, file: !13, discriminator: 1)
!12540 = !DILocation(line: 2048, column: 43, scope: !12534)
!12541 = !DILocation(line: 2048, column: 53, scope: !12534)
!12542 = !DILocation(line: 2048, column: 9, scope: !1428)
!12543 = !DILocation(line: 2049, column: 42, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12534, file: !13, line: 2048, column: 59)
!12545 = !DILocation(line: 2049, column: 48, scope: !12544)
!12546 = !DILocation(line: 2049, column: 57, scope: !12544)
!12547 = !DILocation(line: 2049, column: 15, scope: !12544)
!12548 = !DILocation(line: 2049, column: 13, scope: !12544)
!12549 = !DILocation(line: 2050, column: 9, scope: !12544)
!12550 = !DILocation(line: 2050, column: 15, scope: !12544)
!12551 = !DILocation(line: 2050, column: 40, scope: !12544)
!12552 = !DILocation(line: 2051, column: 5, scope: !12544)
!12553 = !DILocation(line: 2053, column: 42, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12534, file: !13, line: 2052, column: 10)
!12555 = !DILocation(line: 2053, column: 48, scope: !12554)
!12556 = !DILocation(line: 2053, column: 57, scope: !12554)
!12557 = !DILocation(line: 2054, column: 42, scope: !12554)
!12558 = !DILocation(line: 2053, column: 15, scope: !12554)
!12559 = !DILocation(line: 2053, column: 13, scope: !12554)
!12560 = !DILocation(line: 2055, column: 9, scope: !12554)
!12561 = !DILocation(line: 2055, column: 15, scope: !12554)
!12562 = !DILocation(line: 2055, column: 40, scope: !12554)
!12563 = !DILocation(line: 2057, column: 9, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !1428, file: !13, line: 2057, column: 9)
!12565 = !DILocation(line: 2057, column: 13, scope: !12564)
!12566 = !DILocation(line: 2057, column: 9, scope: !1428)
!12567 = !DILocation(line: 2058, column: 9, scope: !12564)
!12568 = !DILocation(line: 2059, column: 5, scope: !1428)
!12569 = !DILocation(line: 2059, column: 10, scope: !12570)
!12570 = !DILexicalBlockFile(scope: !1434, file: !13, discriminator: 1)
!12571 = !DILocation(line: 2059, column: 20, scope: !1434)
!12572 = !DILocation(line: 2059, column: 50, scope: !1434)
!12573 = !DILocation(line: 2059, column: 64, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !1434, file: !13, line: 2059, column: 61)
!12575 = !DILocation(line: 2059, column: 81, scope: !12574)
!12576 = !DILocation(line: 2059, column: 61, scope: !12574)
!12577 = !DILocation(line: 2059, column: 91, scope: !12574)
!12578 = !DILocation(line: 2059, column: 61, scope: !1434)
!12579 = !DILocation(line: 2059, column: 61, scope: !12580)
!12580 = !DILexicalBlockFile(scope: !1434, file: !13, discriminator: 2)
!12581 = !DILocation(line: 2059, column: 122, scope: !12582)
!12582 = !DILexicalBlockFile(scope: !12574, file: !13, discriminator: 3)
!12583 = !DILocation(line: 2059, column: 140, scope: !12574)
!12584 = !DILocation(line: 2059, column: 150, scope: !12574)
!12585 = !DILocation(line: 2059, column: 175, scope: !12574)
!12586 = !DILocation(line: 2059, column: 106, scope: !12574)
!12587 = !DILocation(line: 2059, column: 194, scope: !12588)
!12588 = !DILexicalBlockFile(scope: !1428, file: !13, discriminator: 4)
!12589 = !DILocation(line: 2059, column: 194, scope: !1434)
!12590 = !DILocation(line: 2059, column: 194, scope: !12591)
!12591 = !DILexicalBlockFile(scope: !1434, file: !13, discriminator: 5)
!12592 = !DILocation(line: 2060, column: 5, scope: !1428)
!12593 = !DILocation(line: 2061, column: 1, scope: !1428)
!12594 = !DILocation(line: 2008, column: 41, scope: !1513)
!12595 = !DILocation(line: 2010, column: 5, scope: !1513)
!12596 = !DILocation(line: 2010, column: 19, scope: !1513)
!12597 = !DILocation(line: 2012, column: 12, scope: !1513)
!12598 = !DILocation(line: 2012, column: 19, scope: !1513)
!12599 = !DILocation(line: 2012, column: 25, scope: !1513)
!12600 = !DILocation(line: 2012, column: 33, scope: !1513)
!12601 = !DILocation(line: 2012, column: 5, scope: !1513)
!12602 = !DILocation(line: 2013, column: 12, scope: !1513)
!12603 = !DILocation(line: 2013, column: 19, scope: !1513)
!12604 = !DILocation(line: 2013, column: 42, scope: !1513)
!12605 = !DILocation(line: 2013, column: 50, scope: !1513)
!12606 = !DILocation(line: 2013, column: 5, scope: !1513)
!12607 = !DILocation(line: 2014, column: 12, scope: !1513)
!12608 = !DILocation(line: 2014, column: 19, scope: !1513)
!12609 = !DILocation(line: 2014, column: 56, scope: !1513)
!12610 = !DILocation(line: 2014, column: 64, scope: !1513)
!12611 = !DILocation(line: 2014, column: 5, scope: !1513)
!12612 = !DILocation(line: 2015, column: 12, scope: !1513)
!12613 = !DILocation(line: 2015, column: 19, scope: !1513)
!12614 = !DILocation(line: 2015, column: 60, scope: !1513)
!12615 = !DILocation(line: 2015, column: 68, scope: !1513)
!12616 = !DILocation(line: 2015, column: 5, scope: !1513)
!12617 = !DILocation(line: 2016, column: 12, scope: !1513)
!12618 = !DILocation(line: 2016, column: 19, scope: !1513)
!12619 = !DILocation(line: 2016, column: 60, scope: !1513)
!12620 = !DILocation(line: 2016, column: 68, scope: !1513)
!12621 = !DILocation(line: 2016, column: 5, scope: !1513)
!12622 = !DILocation(line: 2018, column: 34, scope: !1513)
!12623 = !DILocation(line: 2018, column: 12, scope: !1513)
!12624 = !DILocation(line: 2020, column: 1, scope: !1513)
!12625 = !DILocation(line: 2018, column: 5, scope: !1513)
!12626 = !DILocation(line: 2668, column: 32, scope: !1527)
!12627 = !DILocation(line: 2668, column: 44, scope: !1527)
!12628 = !DILocation(line: 2670, column: 9, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !1527, file: !13, line: 2670, column: 9)
!12630 = !DILocation(line: 2670, column: 15, scope: !12629)
!12631 = !DILocation(line: 2670, column: 18, scope: !12629)
!12632 = !DILocation(line: 2670, column: 9, scope: !1527)
!12633 = !DILocation(line: 2670, column: 30, scope: !12634)
!12634 = !DILexicalBlockFile(scope: !12635, file: !13, discriminator: 1)
!12635 = distinct !DILexicalBlock(scope: !12636, file: !13, line: 2670, column: 30)
!12636 = distinct !DILexicalBlock(scope: !12629, file: !13, line: 2670, column: 24)
!12637 = !DILocation(line: 2670, column: 36, scope: !12635)
!12638 = !DILocation(line: 2670, column: 30, scope: !12635)
!12639 = !DILocation(line: 2670, column: 30, scope: !12636)
!12640 = !DILocation(line: 2670, column: 64, scope: !12641)
!12641 = !DILexicalBlockFile(scope: !12642, file: !13, discriminator: 2)
!12642 = distinct !DILexicalBlock(scope: !12635, file: !13, line: 2670, column: 46)
!12643 = !DILocation(line: 2670, column: 48, scope: !12642)
!12644 = !DILocation(line: 2670, column: 122, scope: !12642)
!12645 = !DILocation(line: 2670, column: 147, scope: !12646)
!12646 = !DILexicalBlockFile(scope: !12647, file: !13, discriminator: 3)
!12647 = distinct !DILexicalBlock(scope: !12635, file: !13, line: 2670, column: 129)
!12648 = !DILocation(line: 2670, column: 131, scope: !12647)
!12649 = !DILocation(line: 2670, column: 209, scope: !12650)
!12650 = !DILexicalBlockFile(scope: !12636, file: !13, discriminator: 4)
!12651 = !DILocation(line: 2671, column: 32, scope: !1527)
!12652 = !DILocation(line: 2671, column: 38, scope: !1527)
!12653 = !DILocation(line: 2671, column: 12, scope: !1527)
!12654 = !DILocation(line: 2671, column: 5, scope: !1527)
!12655 = !DILocation(line: 2672, column: 1, scope: !1527)
!12656 = !DILocation(line: 2682, column: 36, scope: !1531)
!12657 = !DILocation(line: 2682, column: 48, scope: !1531)
!12658 = !DILocation(line: 2684, column: 5, scope: !1531)
!12659 = !DILocation(line: 2684, column: 15, scope: !1531)
!12660 = !DILocation(line: 2685, column: 9, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !1531, file: !13, line: 2685, column: 9)
!12662 = !DILocation(line: 2685, column: 15, scope: !12661)
!12663 = !DILocation(line: 2685, column: 18, scope: !12661)
!12664 = !DILocation(line: 2685, column: 9, scope: !1531)
!12665 = !DILocation(line: 2685, column: 30, scope: !12666)
!12666 = !DILexicalBlockFile(scope: !12667, file: !13, discriminator: 1)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !13, line: 2685, column: 30)
!12668 = distinct !DILexicalBlock(scope: !12661, file: !13, line: 2685, column: 24)
!12669 = !DILocation(line: 2685, column: 36, scope: !12667)
!12670 = !DILocation(line: 2685, column: 30, scope: !12667)
!12671 = !DILocation(line: 2685, column: 30, scope: !12668)
!12672 = !DILocation(line: 2685, column: 64, scope: !12673)
!12673 = !DILexicalBlockFile(scope: !12674, file: !13, discriminator: 2)
!12674 = distinct !DILexicalBlock(scope: !12667, file: !13, line: 2685, column: 46)
!12675 = !DILocation(line: 2685, column: 48, scope: !12674)
!12676 = !DILocation(line: 2685, column: 122, scope: !12674)
!12677 = !DILocation(line: 2685, column: 147, scope: !12678)
!12678 = !DILexicalBlockFile(scope: !12679, file: !13, discriminator: 3)
!12679 = distinct !DILexicalBlock(scope: !12667, file: !13, line: 2685, column: 129)
!12680 = !DILocation(line: 2685, column: 131, scope: !12679)
!12681 = !DILocation(line: 2685, column: 209, scope: !12682)
!12682 = !DILexicalBlockFile(scope: !12668, file: !13, discriminator: 4)
!12683 = !DILocation(line: 2685, column: 209, scope: !12668)
!12684 = !DILocation(line: 2686, column: 9, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !1531, file: !13, line: 2686, column: 9)
!12686 = !DILocation(line: 2686, column: 15, scope: !12685)
!12687 = !DILocation(line: 2686, column: 23, scope: !12685)
!12688 = !DILocation(line: 2686, column: 9, scope: !1531)
!12689 = !DILocation(line: 2687, column: 62, scope: !12685)
!12690 = !DILocation(line: 2687, column: 9, scope: !12685)
!12691 = !DILocation(line: 2688, column: 28, scope: !1531)
!12692 = !DILocation(line: 2688, column: 34, scope: !1531)
!12693 = !DILocation(line: 2688, column: 43, scope: !1531)
!12694 = !DILocation(line: 2688, column: 11, scope: !1531)
!12695 = !DILocation(line: 2688, column: 9, scope: !1531)
!12696 = !DILocation(line: 2689, column: 9, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !1531, file: !13, line: 2689, column: 9)
!12698 = !DILocation(line: 2689, column: 13, scope: !12697)
!12699 = !DILocation(line: 2689, column: 9, scope: !1531)
!12700 = !DILocation(line: 2690, column: 36, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12702, file: !13, line: 2690, column: 13)
!12702 = distinct !DILexicalBlock(scope: !12697, file: !13, line: 2689, column: 28)
!12703 = !DILocation(line: 2690, column: 13, scope: !12701)
!12704 = !DILocation(line: 2690, column: 13, scope: !12702)
!12705 = !DILocation(line: 2691, column: 13, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12701, file: !13, line: 2690, column: 59)
!12707 = !DILocation(line: 2692, column: 66, scope: !12706)
!12708 = !DILocation(line: 2692, column: 13, scope: !12706)
!12709 = !DILocation(line: 2695, column: 13, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12701, file: !13, line: 2694, column: 14)
!12711 = !DILocation(line: 2698, column: 12, scope: !1531)
!12712 = !DILocation(line: 2698, column: 5, scope: !1531)
!12713 = !DILocation(line: 2699, column: 1, scope: !1531)
!12714 = !DILocation(line: 2702, column: 34, scope: !1536)
!12715 = !DILocation(line: 2702, column: 46, scope: !1536)
!12716 = !DILocation(line: 2704, column: 9, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !1536, file: !13, line: 2704, column: 9)
!12718 = !DILocation(line: 2704, column: 15, scope: !12717)
!12719 = !DILocation(line: 2704, column: 18, scope: !12717)
!12720 = !DILocation(line: 2704, column: 9, scope: !1536)
!12721 = !DILocation(line: 2704, column: 30, scope: !12722)
!12722 = !DILexicalBlockFile(scope: !12723, file: !13, discriminator: 1)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !13, line: 2704, column: 30)
!12724 = distinct !DILexicalBlock(scope: !12717, file: !13, line: 2704, column: 24)
!12725 = !DILocation(line: 2704, column: 36, scope: !12723)
!12726 = !DILocation(line: 2704, column: 30, scope: !12723)
!12727 = !DILocation(line: 2704, column: 30, scope: !12724)
!12728 = !DILocation(line: 2704, column: 64, scope: !12729)
!12729 = !DILexicalBlockFile(scope: !12730, file: !13, discriminator: 2)
!12730 = distinct !DILexicalBlock(scope: !12723, file: !13, line: 2704, column: 46)
!12731 = !DILocation(line: 2704, column: 48, scope: !12730)
!12732 = !DILocation(line: 2704, column: 122, scope: !12730)
!12733 = !DILocation(line: 2704, column: 147, scope: !12734)
!12734 = !DILexicalBlockFile(scope: !12735, file: !13, discriminator: 3)
!12735 = distinct !DILexicalBlock(scope: !12723, file: !13, line: 2704, column: 129)
!12736 = !DILocation(line: 2704, column: 131, scope: !12735)
!12737 = !DILocation(line: 2704, column: 209, scope: !12738)
!12738 = !DILexicalBlockFile(scope: !12724, file: !13, discriminator: 4)
!12739 = !DILocation(line: 2705, column: 68, scope: !1536)
!12740 = !DILocation(line: 2705, column: 74, scope: !1536)
!12741 = !DILocation(line: 2705, column: 50, scope: !1536)
!12742 = !DILocation(line: 2705, column: 84, scope: !1536)
!12743 = !DILocation(line: 2705, column: 48, scope: !1536)
!12744 = !DILocation(line: 2705, column: 12, scope: !1536)
!12745 = !DILocation(line: 2705, column: 5, scope: !1536)
!12746 = !DILocation(line: 2706, column: 1, scope: !1536)
!12747 = !DILocation(line: 2709, column: 38, scope: !1540)
!12748 = !DILocation(line: 2709, column: 50, scope: !1540)
!12749 = !DILocation(line: 2711, column: 9, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !1540, file: !13, line: 2711, column: 9)
!12751 = !DILocation(line: 2711, column: 15, scope: !12750)
!12752 = !DILocation(line: 2711, column: 18, scope: !12750)
!12753 = !DILocation(line: 2711, column: 9, scope: !1540)
!12754 = !DILocation(line: 2711, column: 30, scope: !12755)
!12755 = !DILexicalBlockFile(scope: !12756, file: !13, discriminator: 1)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !13, line: 2711, column: 30)
!12757 = distinct !DILexicalBlock(scope: !12750, file: !13, line: 2711, column: 24)
!12758 = !DILocation(line: 2711, column: 36, scope: !12756)
!12759 = !DILocation(line: 2711, column: 30, scope: !12756)
!12760 = !DILocation(line: 2711, column: 30, scope: !12757)
!12761 = !DILocation(line: 2711, column: 64, scope: !12762)
!12762 = !DILexicalBlockFile(scope: !12763, file: !13, discriminator: 2)
!12763 = distinct !DILexicalBlock(scope: !12756, file: !13, line: 2711, column: 46)
!12764 = !DILocation(line: 2711, column: 48, scope: !12763)
!12765 = !DILocation(line: 2711, column: 122, scope: !12763)
!12766 = !DILocation(line: 2711, column: 147, scope: !12767)
!12767 = !DILexicalBlockFile(scope: !12768, file: !13, discriminator: 3)
!12768 = distinct !DILexicalBlock(scope: !12756, file: !13, line: 2711, column: 129)
!12769 = !DILocation(line: 2711, column: 131, scope: !12768)
!12770 = !DILocation(line: 2711, column: 209, scope: !12771)
!12771 = !DILexicalBlockFile(scope: !12757, file: !13, discriminator: 4)
!12772 = !DILocation(line: 2712, column: 31, scope: !1540)
!12773 = !DILocation(line: 2712, column: 37, scope: !1540)
!12774 = !DILocation(line: 2712, column: 12, scope: !1540)
!12775 = !DILocation(line: 2712, column: 5, scope: !1540)
!12776 = !DILocation(line: 2713, column: 1, scope: !1540)
!12777 = !DILocation(line: 2716, column: 38, scope: !1544)
!12778 = !DILocation(line: 2716, column: 54, scope: !1544)
!12779 = !DILocation(line: 2716, column: 65, scope: !1544)
!12780 = !DILocation(line: 2718, column: 5, scope: !1544)
!12781 = !DILocation(line: 2718, column: 16, scope: !1544)
!12782 = !DILocation(line: 2719, column: 9, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !1544, file: !13, line: 2719, column: 9)
!12784 = !DILocation(line: 2719, column: 15, scope: !12783)
!12785 = !DILocation(line: 2719, column: 18, scope: !12783)
!12786 = !DILocation(line: 2719, column: 9, scope: !1544)
!12787 = !DILocation(line: 2719, column: 30, scope: !12788)
!12788 = !DILexicalBlockFile(scope: !12789, file: !13, discriminator: 1)
!12789 = distinct !DILexicalBlock(scope: !12790, file: !13, line: 2719, column: 30)
!12790 = distinct !DILexicalBlock(scope: !12783, file: !13, line: 2719, column: 24)
!12791 = !DILocation(line: 2719, column: 36, scope: !12789)
!12792 = !DILocation(line: 2719, column: 30, scope: !12789)
!12793 = !DILocation(line: 2719, column: 30, scope: !12790)
!12794 = !DILocation(line: 2719, column: 64, scope: !12795)
!12795 = !DILexicalBlockFile(scope: !12796, file: !13, discriminator: 2)
!12796 = distinct !DILexicalBlock(scope: !12789, file: !13, line: 2719, column: 46)
!12797 = !DILocation(line: 2719, column: 48, scope: !12796)
!12798 = !DILocation(line: 2719, column: 122, scope: !12796)
!12799 = !DILocation(line: 2719, column: 147, scope: !12800)
!12800 = !DILexicalBlockFile(scope: !12801, file: !13, discriminator: 3)
!12801 = distinct !DILexicalBlock(scope: !12789, file: !13, line: 2719, column: 129)
!12802 = !DILocation(line: 2719, column: 131, scope: !12801)
!12803 = !DILocation(line: 2719, column: 209, scope: !12804)
!12804 = !DILexicalBlockFile(scope: !12790, file: !13, discriminator: 4)
!12805 = !DILocation(line: 2719, column: 209, scope: !12790)
!12806 = !DILocation(line: 2720, column: 28, scope: !1544)
!12807 = !DILocation(line: 2720, column: 33, scope: !1544)
!12808 = !DILocation(line: 2720, column: 9, scope: !1544)
!12809 = !DILocation(line: 2720, column: 7, scope: !1544)
!12810 = !DILocation(line: 2721, column: 9, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !1544, file: !13, line: 2721, column: 9)
!12812 = !DILocation(line: 2721, column: 11, scope: !12811)
!12813 = !DILocation(line: 2721, column: 17, scope: !12811)
!12814 = !DILocation(line: 2721, column: 20, scope: !12815)
!12815 = !DILexicalBlockFile(scope: !12811, file: !13, discriminator: 1)
!12816 = !DILocation(line: 2721, column: 9, scope: !1544)
!12817 = !DILocation(line: 2722, column: 9, scope: !12811)
!12818 = !DILocation(line: 2723, column: 9, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !1544, file: !13, line: 2723, column: 9)
!12820 = !DILocation(line: 2723, column: 11, scope: !12819)
!12821 = !DILocation(line: 2723, column: 9, scope: !1544)
!12822 = !DILocation(line: 2724, column: 25, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12819, file: !13, line: 2723, column: 17)
!12824 = !DILocation(line: 2724, column: 9, scope: !12823)
!12825 = !DILocation(line: 2726, column: 9, scope: !12823)
!12826 = !DILocation(line: 2728, column: 24, scope: !1544)
!12827 = !DILocation(line: 2728, column: 5, scope: !1544)
!12828 = !DILocation(line: 2728, column: 11, scope: !1544)
!12829 = !DILocation(line: 2728, column: 22, scope: !1544)
!12830 = !DILocation(line: 2729, column: 5, scope: !1544)
!12831 = !DILocation(line: 2730, column: 1, scope: !1544)
!12832 = !DILocation(line: 750, column: 22, scope: !1737)
!12833 = !DILocation(line: 750, column: 38, scope: !1737)
!12834 = !DILocation(line: 752, column: 37, scope: !1737)
!12835 = !DILocation(line: 752, column: 78, scope: !1737)
!12836 = !DILocation(line: 752, column: 84, scope: !1737)
!12837 = !DILocation(line: 752, column: 60, scope: !1737)
!12838 = !DILocation(line: 752, column: 94, scope: !1737)
!12839 = !DILocation(line: 752, column: 58, scope: !1737)
!12840 = !DILocation(line: 752, column: 12, scope: !1737)
!12841 = !DILocation(line: 752, column: 5, scope: !1737)
!12842 = !DILocation(line: 820, column: 23, scope: !1741)
!12843 = !DILocation(line: 820, column: 39, scope: !1741)
!12844 = !DILocation(line: 822, column: 38, scope: !1741)
!12845 = !DILocation(line: 822, column: 79, scope: !1741)
!12846 = !DILocation(line: 822, column: 85, scope: !1741)
!12847 = !DILocation(line: 822, column: 61, scope: !1741)
!12848 = !DILocation(line: 822, column: 95, scope: !1741)
!12849 = !DILocation(line: 822, column: 59, scope: !1741)
!12850 = !DILocation(line: 822, column: 12, scope: !1741)
!12851 = !DILocation(line: 822, column: 5, scope: !1741)
!12852 = !DILocation(line: 814, column: 21, scope: !1745)
!12853 = !DILocation(line: 814, column: 37, scope: !1745)
!12854 = !DILocation(line: 816, column: 36, scope: !1745)
!12855 = !DILocation(line: 816, column: 77, scope: !1745)
!12856 = !DILocation(line: 816, column: 83, scope: !1745)
!12857 = !DILocation(line: 816, column: 59, scope: !1745)
!12858 = !DILocation(line: 816, column: 93, scope: !1745)
!12859 = !DILocation(line: 816, column: 57, scope: !1745)
!12860 = !DILocation(line: 816, column: 12, scope: !1745)
!12861 = !DILocation(line: 816, column: 5, scope: !1745)
!12862 = !DILocation(line: 756, column: 24, scope: !1749)
!12863 = !DILocation(line: 756, column: 40, scope: !1749)
!12864 = !DILocation(line: 758, column: 35, scope: !1749)
!12865 = !DILocation(line: 759, column: 70, scope: !1749)
!12866 = !DILocation(line: 759, column: 76, scope: !1749)
!12867 = !DILocation(line: 759, column: 52, scope: !1749)
!12868 = !DILocation(line: 759, column: 86, scope: !1749)
!12869 = !DILocation(line: 759, column: 50, scope: !1749)
!12870 = !DILocation(line: 758, column: 12, scope: !1749)
!12871 = !DILocation(line: 758, column: 5, scope: !1749)
!12872 = !DILocation(line: 763, column: 24, scope: !1753)
!12873 = !DILocation(line: 763, column: 40, scope: !1753)
!12874 = !DILocation(line: 765, column: 35, scope: !1753)
!12875 = !DILocation(line: 766, column: 70, scope: !1753)
!12876 = !DILocation(line: 766, column: 76, scope: !1753)
!12877 = !DILocation(line: 766, column: 52, scope: !1753)
!12878 = !DILocation(line: 766, column: 86, scope: !1753)
!12879 = !DILocation(line: 766, column: 50, scope: !1753)
!12880 = !DILocation(line: 765, column: 12, scope: !1753)
!12881 = !DILocation(line: 765, column: 5, scope: !1753)
!12882 = !DILocation(line: 770, column: 22, scope: !1757)
!12883 = !DILocation(line: 770, column: 38, scope: !1757)
!12884 = !DILocation(line: 772, column: 10, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !1757, file: !13, line: 772, column: 9)
!12886 = !DILocation(line: 772, column: 16, scope: !12885)
!12887 = !DILocation(line: 772, column: 9, scope: !1757)
!12888 = !DILocation(line: 777, column: 31, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12885, file: !13, line: 772, column: 42)
!12890 = !DILocation(line: 777, column: 37, scope: !12889)
!12891 = !DILocation(line: 777, column: 16, scope: !12889)
!12892 = !DILocation(line: 777, column: 9, scope: !12889)
!12893 = !DILocation(line: 780, column: 35, scope: !1757)
!12894 = !DILocation(line: 781, column: 70, scope: !1757)
!12895 = !DILocation(line: 781, column: 76, scope: !1757)
!12896 = !DILocation(line: 781, column: 52, scope: !1757)
!12897 = !DILocation(line: 781, column: 86, scope: !1757)
!12898 = !DILocation(line: 781, column: 50, scope: !1757)
!12899 = !DILocation(line: 780, column: 12, scope: !1757)
!12900 = !DILocation(line: 780, column: 5, scope: !1757)
!12901 = !DILocation(line: 782, column: 1, scope: !1757)
!12902 = !DILocation(line: 785, column: 24, scope: !1761)
!12903 = !DILocation(line: 785, column: 40, scope: !1761)
!12904 = !DILocation(line: 787, column: 35, scope: !1761)
!12905 = !DILocation(line: 788, column: 70, scope: !1761)
!12906 = !DILocation(line: 788, column: 76, scope: !1761)
!12907 = !DILocation(line: 788, column: 52, scope: !1761)
!12908 = !DILocation(line: 788, column: 86, scope: !1761)
!12909 = !DILocation(line: 788, column: 50, scope: !1761)
!12910 = !DILocation(line: 787, column: 12, scope: !1761)
!12911 = !DILocation(line: 787, column: 5, scope: !1761)
!12912 = !DILocation(line: 792, column: 24, scope: !1765)
!12913 = !DILocation(line: 792, column: 40, scope: !1765)
!12914 = !DILocation(line: 794, column: 35, scope: !1765)
!12915 = !DILocation(line: 795, column: 70, scope: !1765)
!12916 = !DILocation(line: 795, column: 76, scope: !1765)
!12917 = !DILocation(line: 795, column: 52, scope: !1765)
!12918 = !DILocation(line: 795, column: 86, scope: !1765)
!12919 = !DILocation(line: 795, column: 50, scope: !1765)
!12920 = !DILocation(line: 794, column: 12, scope: !1765)
!12921 = !DILocation(line: 794, column: 5, scope: !1765)
!12922 = !DILocation(line: 799, column: 22, scope: !1769)
!12923 = !DILocation(line: 799, column: 38, scope: !1769)
!12924 = !DILocation(line: 801, column: 10, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !1769, file: !13, line: 801, column: 9)
!12926 = !DILocation(line: 801, column: 16, scope: !12925)
!12927 = !DILocation(line: 801, column: 9, scope: !1769)
!12928 = !DILocation(line: 806, column: 31, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12925, file: !13, line: 801, column: 42)
!12930 = !DILocation(line: 806, column: 37, scope: !12929)
!12931 = !DILocation(line: 806, column: 16, scope: !12929)
!12932 = !DILocation(line: 806, column: 9, scope: !12929)
!12933 = !DILocation(line: 809, column: 35, scope: !1769)
!12934 = !DILocation(line: 810, column: 70, scope: !1769)
!12935 = !DILocation(line: 810, column: 76, scope: !1769)
!12936 = !DILocation(line: 810, column: 52, scope: !1769)
!12937 = !DILocation(line: 810, column: 86, scope: !1769)
!12938 = !DILocation(line: 810, column: 50, scope: !1769)
!12939 = !DILocation(line: 809, column: 12, scope: !1769)
!12940 = !DILocation(line: 809, column: 5, scope: !1769)
!12941 = !DILocation(line: 811, column: 1, scope: !1769)
