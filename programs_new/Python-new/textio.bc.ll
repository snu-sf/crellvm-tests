; ModuleID = 'programs_new/Python-new/textio.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.encodefuncentry = type { i8*, %struct._object* (%struct._object*, %struct._object*)* }
%struct.nldecoder_object = type { %struct._object, %struct._object*, %struct._object*, i8 }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }
%struct.textio = type { %struct._object, i32, i32, i64, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct._object* (%struct._object*, %struct._object*)*, i8, %struct._object*, i64, %struct._object*, i64, %struct._object*, double, %struct._object*, %struct._object*, %struct._object* }
%union._gc_head = type { %struct.anon.0 }
%struct.anon.0 = type { %union._gc_head*, %union._gc_head*, i64 }
%struct._PyIO_State = type { i32, %struct._object*, %struct._object* }
%struct.cookie_type = type { i64, i32, i32, i32, i8 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }

@.str = private unnamed_addr constant [16 x i8] c"_io._TextIOBase\00", align 1
@textiobase_doc = internal global [209 x i8] c"Base class for text I/O.\0A\0AThis class provides a character and line based interface to stream\0AI/O. There is no readinto method because Python's character strings\0Aare immutable. There is no public constructor.\0A\00", align 16
@textiobase_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @textiobase_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @textiobase_detach_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @textiobase_read, i32 1, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @textiobase_read_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @textiobase_readline, i32 1, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @textiobase_readline_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @textiobase_write, i32 1, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @textiobase_write_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@textiobase_getset = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @textiobase_encoding_get, i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @textiobase_encoding_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @textiobase_newlines_get, i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @textiobase_newlines_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* @textiobase_errors_get, i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @textiobase_errors_doc, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyIOBase_Type = external global %struct._typeobject, align 8
@PyTextIOBase_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263169, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @textiobase_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @textiobase_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([4 x %struct.PyGetSetDef], [4 x %struct.PyGetSetDef]* @textiobase_getset, i32 0, i32 0), %struct._typeobject* @PyIOBase_Type, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ValueError = external global %struct._object*, align 8
@.str.1 = private unnamed_addr constant [46 x i8] c"IncrementalNewlineDecoder.__init__ not called\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@_PyIO_str_decode = external global %struct._object*, align 8
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.2 = private unnamed_addr constant [30 x i8] c"_io.IncrementalNewlineDecoder\00", align 1
@incrementalnewlinedecoder_doc = internal global [420 x i8] c"Codec used when reading a file in universal newlines mode.  It wraps\0Aanother incremental decoder, translating \5Cr\5Cn and \5Cr into \5Cn.  It also\0Arecords the types of newlines encountered.  When used with\0Atranslate=False, it ensures that the newline sequence is returned in\0Aone piece. When used with decoder=None, it expects unicode strings as\0Adecode input and translates newlines without first invoking an external\0Adecoder.\0A\00", align 16
@incrementalnewlinedecoder_methods = internal global [5 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_decode to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_setstate to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_reset to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@incrementalnewlinedecoder_getset = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.nldecoder_object*, i8*)* @incrementalnewlinedecoder_newlines_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyIncrementalNewlineDecoder_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i64 40, i64 0, void (%struct._object*)* bitcast (void (%struct.nldecoder_object*)* @incrementalnewlinedecoder_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([420 x i8], [420 x i8]* @incrementalnewlinedecoder_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([5 x %struct.PyMethodDef], [5 x %struct.PyMethodDef]* @incrementalnewlinedecoder_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @incrementalnewlinedecoder_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.3 = private unnamed_addr constant [18 x i8] c"_io.TextIOWrapper\00", align 1
@textiowrapper_doc = internal global [1345 x i8] c"Character and line based layer over a BufferedIOBase object, buffer.\0A\0Aencoding gives the name of the encoding that the stream will be\0Adecoded or encoded with. It defaults to locale.getpreferredencoding(False).\0A\0Aerrors determines the strictness of encoding and decoding (see\0Ahelp(codecs.Codec) or the documentation for codecs.register) and\0Adefaults to \22strict\22.\0A\0Anewline controls how line endings are handled. It can be None, '',\0A'\5Cn', '\5Cr', and '\5Cr\5Cn'.  It works as follows:\0A\0A* On input, if newline is None, universal newlines mode is\0A  enabled. Lines in the input can end in '\5Cn', '\5Cr', or '\5Cr\5Cn', and\0A  these are translated into '\5Cn' before being returned to the\0A  caller. If it is '', universal newline mode is enabled, but line\0A  endings are returned to the caller untranslated. If it has any of\0A  the other legal values, input lines are only terminated by the given\0A  string, and the line ending is returned to the caller untranslated.\0A\0A* On output, if newline is None, any '\5Cn' characters written are\0A  translated to the system default line separator, os.linesep. If\0A  newline is '' or '\5Cn', no translation takes place. If newline is any\0A  of the other legal values, any '\5Cn' characters written are translated\0A  to the given string.\0A\0AIf line_buffering is True, a call to flush is implied when a call to\0Awrite contains a newline character.\00", align 16
@textiowrapper_methods = internal global [16 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*)* @textiowrapper_detach to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_write to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_read to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readline to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_flush to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_close to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_fileno to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seekable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_writable to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_isatty to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_getstate to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seek to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_tell to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_truncate to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@textiowrapper_members = internal global [5 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i32 6, i64 40, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i32 6, i64 32, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i32 0, i32 0), i32 14, i64 88, i32 1, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i32 0, i32 0), i32 14, i64 96, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@textiowrapper_getset = internal global [6 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_name_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_closed_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_newlines_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_errors_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.textio*, i8*)* @textiowrapper_chunk_size_get to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.textio*, %struct._object*, i8*)* @textiowrapper_chunk_size_set to i32 (%struct._object*, %struct._object*, i8*)*), i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyTextIOWrapper_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i64 192, i64 0, void (%struct._object*)* bitcast (void (%struct.textio*)* @textiowrapper_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.textio*)* @textiowrapper_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279553, i8* getelementptr inbounds ([1345 x i8], [1345 x i8]* @textiowrapper_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.textio*, i32 (%struct._object*, i8*)*, i8*)* @textiowrapper_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.textio*)* @textiowrapper_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 176, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.textio*)* @textiowrapper_iternext to %struct._object* (%struct._object*)*), %struct.PyMethodDef* getelementptr inbounds ([16 x %struct.PyMethodDef], [16 x %struct.PyMethodDef]* @textiowrapper_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([5 x %struct.PyMemberDef], [5 x %struct.PyMemberDef]* @textiowrapper_members, i32 0, i32 0), %struct.PyGetSetDef* getelementptr inbounds ([6 x %struct.PyGetSetDef], [6 x %struct.PyGetSetDef]* @textiowrapper_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 184, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.textio*, %struct._object*, %struct._object*)* @textiowrapper_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"detach\00", align 1
@textiobase_detach_doc = internal global [151 x i8] c"Separate the underlying buffer from the TextIOBase and return it.\0A\0AAfter the underlying buffer has been detached, the TextIO is in an\0Aunusable state.\0A\00", align 16
@.str.5 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@textiobase_read_doc = internal global [156 x i8] c"Read at most n characters from stream.\0A\0ARead from underlying buffer until we have n characters or we hit EOF.\0AIf n is negative or omitted, read until EOF.\0A\00", align 16
@.str.6 = private unnamed_addr constant [9 x i8] c"readline\00", align 1
@textiobase_readline_doc = internal global [80 x i8] c"Read until newline or EOF.\0A\0AReturns an empty string if EOF is hit immediately.\0A\00", align 16
@.str.7 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@textiobase_write_doc = internal global [119 x i8] c"Write string to stream.\0AReturns the number of characters written (which is always equal to\0Athe length of the string).\0A\00", align 16
@.str.8 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@textiobase_encoding_doc = internal global [59 x i8] c"Encoding of the text stream.\0A\0ASubclasses should override.\0A\00", align 16
@.str.9 = private unnamed_addr constant [9 x i8] c"newlines\00", align 1
@textiobase_newlines_doc = internal global [123 x i8] c"Line endings translated so far.\0A\0AOnly line endings translated during reading are considered.\0A\0ASubclasses should override.\0A\00", align 16
@.str.10 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@textiobase_errors_doc = internal global [75 x i8] c"The error setting of the decoder or encoder.\0A\0ASubclasses should override.\0A\00", align 16
@PyExc_TypeError = external global %struct._object*, align 8
@.str.11 = private unnamed_addr constant [52 x i8] c"decoder should return a string result, not '%.200s'\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"decode\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"getstate\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"setstate\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"final\00", align 1
@incrementalnewlinedecoder_decode.kwlist = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* null], align 16
@.str.18 = private unnamed_addr constant [30 x i8] c"O|i:IncrementalNewlineDecoder\00", align 1
@_PyIO_str_getstate = external global %struct._object*, align 8
@.str.19 = private unnamed_addr constant [5 x i8] c"(OK)\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"NK\00", align 1
@PyId_setstate = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), %struct._object* null }, align 8
@.str.22 = private unnamed_addr constant [7 x i8] c"((OK))\00", align 1
@_PyIO_str_reset = external global %struct._object*, align 8
@.str.23 = private unnamed_addr constant [2 x i8] c"\0D\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"sss\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"decoder\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@incrementalnewlinedecoder_init.kwlist = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* null], align 16
@.str.30 = private unnamed_addr constant [31 x i8] c"Oi|O:IncrementalNewlineDecoder\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.32 = private unnamed_addr constant [36 x i8] c"underlying buffer has been detached\00", align 1
@.str.33 = private unnamed_addr constant [38 x i8] c"I/O operation on uninitialized object\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"<_io.TextIOWrapper\00", align 1
@PyId_name = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), %struct._object* null }, align 8
@PyExc_AttributeError = external global %struct._object*, align 8
@.str.35 = private unnamed_addr constant [9 x i8] c" name=%R\00", align 1
@PyId_mode = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), %struct._object* null }, align 8
@.str.36 = private unnamed_addr constant [9 x i8] c" mode=%R\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"%U encoding=%R>\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@_PyIO_str_readline = external global %struct._object*, align 8
@PyExc_IOError = external global %struct._object*, align 8
@.str.40 = private unnamed_addr constant [60 x i8] c"readline() should have returned an str object, not '%.200s'\00", align 1
@.str.41 = private unnamed_addr constant [30 x i8] c"I/O operation on closed file.\00", align 1
@_PyIO_empty_str = external global %struct._object*, align 8
@_PyIO_str_closed = external global %struct._object*, align 8
@_PyIO_empty_bytes = external global %struct._object*, align 8
@_PyIO_str_write = external global %struct._object*, align 8
@.str.42 = private unnamed_addr constant [13 x i8] c"not readable\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"(OO)\00", align 1
@_PyIO_str_read1 = external global %struct._object*, align 8
@_PyIO_str_read = external global %struct._object*, align 8
@.str.44 = private unnamed_addr constant [66 x i8] c"underlying %s() should have returned a bytes object, not '%.200s'\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"read1\00", align 1
@.str.46 = private unnamed_addr constant [69 x i8] c"decoder getstate() should have returned a bytes object, not '%.200s'\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"NN\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"fileno\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"seekable\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"readable\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"writable\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"isatty\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"__getstate__\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"tell\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@_PyIO_str_flush = external global %struct._object*, align 8
@.str.59 = private unnamed_addr constant [8 x i8] c"U:write\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"not writable\00", align 1
@PyId_replace = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), %struct._object* null }, align 8
@_PyIO_str_encode = external global %struct._object*, align 8
@PyId_reset = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %struct._object* null }, align 8
@.str.61 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"|O&:read\00", align 1
@PyId_read = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), %struct._object* null }, align 8
@.str.63 = private unnamed_addr constant [12 x i8] c"|n:readline\00", align 1
@PyId_flush = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), %struct._object* null }, align 8
@PyId__dealloc_warn = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i32 0, i32 0), %struct._object* null }, align 8
@.str.64 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@PyId_close = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), %struct._object* null }, align 8
@.str.65 = private unnamed_addr constant [14 x i8] c"_dealloc_warn\00", align 1
@PyId_fileno = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), %struct._object* null }, align 8
@PyId_seekable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), %struct._object* null }, align 8
@PyId_readable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), %struct._object* null }, align 8
@PyId_writable = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), %struct._object* null }, align 8
@PyId_isatty = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), %struct._object* null }, align 8
@.str.66 = private unnamed_addr constant [29 x i8] c"cannot serialize '%s' object\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"O|i:seek\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"underlying stream is not seekable\00", align 1
@_PyIO_zero = external global %struct._object*, align 8
@.str.69 = private unnamed_addr constant [36 x i8] c"can't do nonzero cur-relative seeks\00", align 1
@PyId_tell = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), %struct._object* null }, align 8
@.str.70 = private unnamed_addr constant [36 x i8] c"can't do nonzero end-relative seeks\00", align 1
@PyId_seek = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), %struct._object* null }, align 8
@.str.71 = private unnamed_addr constant [3 x i8] c"ii\00", align 1
@.str.72 = private unnamed_addr constant [41 x i8] c"invalid whence (%d, should be 0, 1 or 2)\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"negative seek position %R\00", align 1
@_PyIO_str_seek = external global %struct._object*, align 8
@.str.74 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.75 = private unnamed_addr constant [68 x i8] c"underlying read() should have returned a bytes object, not '%.200s'\00", align 1
@.str.76 = private unnamed_addr constant [3 x i8] c"iN\00", align 1
@PyId_decode = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), %struct._object* null }, align 8
@.str.77 = private unnamed_addr constant [3 x i8] c"Oi\00", align 1
@.str.78 = private unnamed_addr constant [36 x i8] c"can't restore logical file position\00", align 1
@.str.79 = private unnamed_addr constant [3 x i8] c"iy\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"((yi))\00", align 1
@_PyIO_str_setstate = external global %struct._object*, align 8
@.str.81 = private unnamed_addr constant [41 x i8] c"telling position disabled by next() call\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"(iO)\00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c"y#\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"(y#i)\00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c"yi\00", align 1
@.str.86 = private unnamed_addr constant [40 x i8] c"can't reconstruct logical file position\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"(O)\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"|O:truncate\00", align 1
@_PyIO_str_truncate = external global %struct._object*, align 8
@.str.89 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"line_buffering\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"_finalizing\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"closed\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"_CHUNK_SIZE\00", align 1
@_PyIO_str_newlines = external global %struct._object*, align 8
@.str.94 = private unnamed_addr constant [40 x i8] c"a strictly positive integer is required\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"newline\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"write_through\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"O|zzzii:fileio\00", align 1
@.str.98 = private unnamed_addr constant [26 x i8] c"illegal newline value: %s\00", align 1
@PyId_getpreferredencoding = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i32 0, i32 0), %struct._object* null }, align 8
@PyExc_ImportError = external global %struct._object*, align 8
@.str.99 = private unnamed_addr constant [6 x i8] c"ascii\00", align 1
@.str.100 = private unnamed_addr constant [37 x i8] c"could not determine default encoding\00", align 1
@.str.101 = private unnamed_addr constant [14 x i8] c"codecs.open()\00", align 1
@encodefuncs = internal global [10 x %struct.encodefuncentry] [%struct.encodefuncentry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @ascii_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @latin1_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf8_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf16be_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.106, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf16le_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf16_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf32be_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf32le_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.textio*, %struct._object*)* @utf32_encode to %struct._object* (%struct._object*, %struct._object*)*) }, %struct.encodefuncentry zeroinitializer], align 16
@PyBufferedReader_Type = external global %struct._typeobject, align 8
@PyBufferedWriter_Type = external global %struct._typeobject, align 8
@PyBufferedRandom_Type = external global %struct._typeobject, align 8
@PyId_raw = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), %struct._object* null }, align 8
@PyFileIO_Type = external global %struct._typeobject, align 8
@PyId_read1 = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), %struct._object* null }, align 8
@_PyIO_str_tell = external global %struct._object*, align 8
@.str.102 = private unnamed_addr constant [21 x i8] c"getpreferredencoding\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"iso8859-1\00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"utf-8\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"utf-16-be\00", align 1
@.str.106 = private unnamed_addr constant [10 x i8] c"utf-16-le\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"utf-16\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"utf-32-be\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"utf-32-le\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"utf-32\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"raw\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %myself, %struct._object* %input, i32 %final) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %input.addr = alloca %struct._object*, align 8
  %final.addr = alloca i32, align 4
  %output = alloca %struct._object*, align 8
  %output_len = alloca i64, align 8
  %self = alloca %struct.nldecoder_object*, align 8
  %cleanup.dest.slot = alloca i32
  %kind = alloca i32, align 4
  %modified = alloca %struct._object*, align 8
  %out = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %modified268 = alloca %struct._object*, align 8
  %_py_decref_tmp276 = alloca %struct._object*, align 8
  %in_str = alloca i8*, align 8
  %len = alloca i64, align 8
  %seennl = alloca i32, align 4
  %only_lf = alloca i32, align 4
  %kind301 = alloca i32, align 4
  %i = alloca i64, align 8
  %c = alloca i32, align 4
  %i421 = alloca i64, align 8
  %c427 = alloca i32, align 4
  %translated = alloca i8*, align 8
  %kind519 = alloca i32, align 4
  %in_str524 = alloca i8*, align 8
  %in = alloca i64, align 8
  %out547 = alloca i64, align 8
  %c557 = alloca i32, align 4
  %_py_decref_tmp684 = alloca %struct._object*, align 8
  %_py_decref_tmp727 = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !461, metadata !1880), !dbg !1881
  store %struct._object* %input, %struct._object** %input.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %input.addr, metadata !462, metadata !1880), !dbg !1882
  store i32 %final, i32* %final.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %final.addr, metadata !463, metadata !1880), !dbg !1885
  %0 = bitcast %struct._object** %output to i8*, !dbg !1886
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !1886
  call void @llvm.dbg.declare(metadata %struct._object** %output, metadata !464, metadata !1880), !dbg !1887
  %1 = bitcast i64* %output_len to i8*, !dbg !1888
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !1888
  call void @llvm.dbg.declare(metadata i64* %output_len, metadata !465, metadata !1880), !dbg !1889
  %2 = bitcast %struct.nldecoder_object** %self to i8*, !dbg !1890
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !1890
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self, metadata !466, metadata !1880), !dbg !1891
  %3 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !1892, !tbaa !1876
  %4 = bitcast %struct._object* %3 to %struct.nldecoder_object*, !dbg !1893
  store %struct.nldecoder_object* %4, %struct.nldecoder_object** %self, align 8, !dbg !1891, !tbaa !1876
  %5 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1894, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %5, i32 0, i32 1, !dbg !1896
  %6 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !1896, !tbaa !1897
  %cmp = icmp eq %struct._object* %6, null, !dbg !1901
  br i1 %cmp, label %if.then, label %if.end, !dbg !1902

if.then:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1903, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0)), !dbg !1905
  store %struct._object* null, %struct._object** %retval, !dbg !1906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !1906

if.end:                                           ; preds = %entry
  %8 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1907, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %8, i32 0, i32 1, !dbg !1909
  %9 = load %struct._object*, %struct._object** %decoder1, align 8, !dbg !1909, !tbaa !1897
  %cmp2 = icmp ne %struct._object* %9, @_Py_NoneStruct, !dbg !1910
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !1911

if.then.3:                                        ; preds = %if.end
  %10 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1912, !tbaa !1876
  %decoder4 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %10, i32 0, i32 1, !dbg !1914
  %11 = load %struct._object*, %struct._object** %decoder4, align 8, !dbg !1914, !tbaa !1897
  %12 = load %struct._object*, %struct._object** @_PyIO_str_decode, align 8, !dbg !1915, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %input.addr, align 8, !dbg !1916, !tbaa !1876
  %14 = load i32, i32* %final.addr, align 4, !dbg !1917, !tbaa !1883
  %tobool = icmp ne i32 %14, 0, !dbg !1917
  %cond = select i1 %tobool, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !1917
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %11, %struct._object* %12, %struct._object* %13, %struct._object* %cond, i8* null), !dbg !1918
  store %struct._object* %call, %struct._object** %output, align 8, !dbg !1919, !tbaa !1876
  br label %if.end.5, !dbg !1920

if.else:                                          ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %input.addr, align 8, !dbg !1921, !tbaa !1876
  store %struct._object* %15, %struct._object** %output, align 8, !dbg !1923, !tbaa !1876
  %16 = load %struct._object*, %struct._object** %output, align 8, !dbg !1924, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !1925
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !1926, !tbaa !1927
  %inc = add i64 %17, 1, !dbg !1926
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !1926, !tbaa !1927
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.3
  %18 = load %struct._object*, %struct._object** %output, align 8, !dbg !1928, !tbaa !1876
  %call6 = call i32 @check_decoded(%struct._object* %18), !dbg !1930
  %cmp7 = icmp slt i32 %call6, 0, !dbg !1931
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !1932

if.then.8:                                        ; preds = %if.end.5
  store %struct._object* null, %struct._object** %retval, !dbg !1933
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !1933

if.end.9:                                         ; preds = %if.end.5
  %19 = load %struct._object*, %struct._object** %output, align 8, !dbg !1934, !tbaa !1876
  %20 = bitcast %struct._object* %19 to %struct.PyASCIIObject*, !dbg !1935
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %20, i32 0, i32 1, !dbg !1936
  %21 = load i64, i64* %length, align 8, !dbg !1936, !tbaa !1937
  store i64 %21, i64* %output_len, align 8, !dbg !1940, !tbaa !1941
  %22 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !1942, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %22, i32 0, i32 3, !dbg !1943
  %bf.load = load i8, i8* %pendingcr, align 8, !dbg !1943
  %bf.shl = shl i8 %bf.load, 7, !dbg !1943
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !1943
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !1943
  %tobool10 = icmp ne i32 %bf.cast, 0, !dbg !1942
  br i1 %tobool10, label %land.lhs.true, label %if.end.166, !dbg !1944

land.lhs.true:                                    ; preds = %if.end.9
  %23 = load i32, i32* %final.addr, align 4, !dbg !1945, !tbaa !1883
  %tobool11 = icmp ne i32 %23, 0, !dbg !1945
  br i1 %tobool11, label %if.then.13, label %lor.lhs.false, !dbg !1947

lor.lhs.false:                                    ; preds = %land.lhs.true
  %24 = load i64, i64* %output_len, align 8, !dbg !1948, !tbaa !1941
  %cmp12 = icmp sgt i64 %24, 0, !dbg !1950
  br i1 %cmp12, label %if.then.13, label %if.end.166, !dbg !1951

if.then.13:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %25 = bitcast i32* %kind to i8*, !dbg !1952
  call void @llvm.lifetime.start(i64 4, i8* %25) #2, !dbg !1952
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !467, metadata !1880), !dbg !1953
  %26 = bitcast %struct._object** %modified to i8*, !dbg !1954
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !1954
  call void @llvm.dbg.declare(metadata %struct._object** %modified, metadata !470, metadata !1880), !dbg !1955
  %27 = bitcast i8** %out to i8*, !dbg !1956
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !1956
  call void @llvm.dbg.declare(metadata i8** %out, metadata !471, metadata !1880), !dbg !1957
  %28 = load i64, i64* %output_len, align 8, !dbg !1958, !tbaa !1941
  %add = add i64 %28, 1, !dbg !1959
  %29 = load %struct._object*, %struct._object** %output, align 8, !dbg !1960, !tbaa !1876
  %30 = bitcast %struct._object* %29 to %struct.PyASCIIObject*, !dbg !1961
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %30, i32 0, i32 3, !dbg !1962
  %31 = bitcast %struct.anon* %state to i32*, !dbg !1963
  %bf.load14 = load i32, i32* %31, align 4, !dbg !1963
  %bf.lshr = lshr i32 %bf.load14, 6, !dbg !1963
  %bf.clear = and i32 %bf.lshr, 1, !dbg !1963
  %tobool15 = icmp ne i32 %bf.clear, 0, !dbg !1964
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !1964

cond.true:                                        ; preds = %if.then.13
  br label %cond.end.30, !dbg !1965

cond.false:                                       ; preds = %if.then.13
  %32 = load %struct._object*, %struct._object** %output, align 8, !dbg !1967, !tbaa !1876
  %33 = bitcast %struct._object* %32 to %struct.PyASCIIObject*, !dbg !1969
  %state16 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %33, i32 0, i32 3, !dbg !1970
  %34 = bitcast %struct.anon* %state16 to i32*, !dbg !1971
  %bf.load17 = load i32, i32* %34, align 4, !dbg !1971
  %bf.lshr18 = lshr i32 %bf.load17, 2, !dbg !1971
  %bf.clear19 = and i32 %bf.lshr18, 7, !dbg !1971
  %cmp20 = icmp eq i32 %bf.clear19, 1, !dbg !1972
  br i1 %cmp20, label %cond.true.21, label %cond.false.22, !dbg !1973

cond.true.21:                                     ; preds = %cond.false
  br label %cond.end, !dbg !1974

cond.false.22:                                    ; preds = %cond.false
  %35 = load %struct._object*, %struct._object** %output, align 8, !dbg !1976, !tbaa !1876
  %36 = bitcast %struct._object* %35 to %struct.PyASCIIObject*, !dbg !1978
  %state23 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %36, i32 0, i32 3, !dbg !1979
  %37 = bitcast %struct.anon* %state23 to i32*, !dbg !1980
  %bf.load24 = load i32, i32* %37, align 4, !dbg !1980
  %bf.lshr25 = lshr i32 %bf.load24, 2, !dbg !1980
  %bf.clear26 = and i32 %bf.lshr25, 7, !dbg !1980
  %cmp27 = icmp eq i32 %bf.clear26, 2, !dbg !1981
  %cond28 = select i1 %cmp27, i32 65535, i32 1114111, !dbg !1982
  br label %cond.end, !dbg !1973

cond.end:                                         ; preds = %cond.false.22, %cond.true.21
  %cond29 = phi i32 [ 255, %cond.true.21 ], [ %cond28, %cond.false.22 ], !dbg !1973
  br label %cond.end.30, !dbg !1983

cond.end.30:                                      ; preds = %cond.end, %cond.true
  %cond31 = phi i32 [ 127, %cond.true ], [ %cond29, %cond.end ], !dbg !1964
  %call32 = call %struct._object* @PyUnicode_New(i64 %add, i32 %cond31), !dbg !1986
  store %struct._object* %call32, %struct._object** %modified, align 8, !dbg !1987, !tbaa !1876
  %38 = load %struct._object*, %struct._object** %modified, align 8, !dbg !1988, !tbaa !1876
  %cmp33 = icmp eq %struct._object* %38, null, !dbg !1990
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !1991

if.then.34:                                       ; preds = %cond.end.30
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1992

if.end.35:                                        ; preds = %cond.end.30
  %39 = load %struct._object*, %struct._object** %modified, align 8, !dbg !1993, !tbaa !1876
  %40 = bitcast %struct._object* %39 to %struct.PyASCIIObject*, !dbg !1994
  %state36 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %40, i32 0, i32 3, !dbg !1995
  %41 = bitcast %struct.anon* %state36 to i32*, !dbg !1996
  %bf.load37 = load i32, i32* %41, align 4, !dbg !1996
  %bf.lshr38 = lshr i32 %bf.load37, 2, !dbg !1996
  %bf.clear39 = and i32 %bf.lshr38, 7, !dbg !1996
  store i32 %bf.clear39, i32* %kind, align 4, !dbg !1997, !tbaa !1883
  %42 = load %struct._object*, %struct._object** %modified, align 8, !dbg !1998, !tbaa !1876
  %43 = bitcast %struct._object* %42 to %struct.PyASCIIObject*, !dbg !1999
  %state40 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %43, i32 0, i32 3, !dbg !2000
  %44 = bitcast %struct.anon* %state40 to i32*, !dbg !2001
  %bf.load41 = load i32, i32* %44, align 4, !dbg !2001
  %bf.lshr42 = lshr i32 %bf.load41, 5, !dbg !2001
  %bf.clear43 = and i32 %bf.lshr42, 1, !dbg !2001
  %tobool44 = icmp ne i32 %bf.clear43, 0, !dbg !2002
  br i1 %tobool44, label %cond.true.45, label %cond.false.56, !dbg !2002

cond.true.45:                                     ; preds = %if.end.35
  %45 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2003, !tbaa !1876
  %46 = bitcast %struct._object* %45 to %struct.PyASCIIObject*, !dbg !2004
  %state46 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %46, i32 0, i32 3, !dbg !2005
  %47 = bitcast %struct.anon* %state46 to i32*, !dbg !2006
  %bf.load47 = load i32, i32* %47, align 4, !dbg !2006
  %bf.lshr48 = lshr i32 %bf.load47, 6, !dbg !2006
  %bf.clear49 = and i32 %bf.lshr48, 1, !dbg !2006
  %tobool50 = icmp ne i32 %bf.clear49, 0, !dbg !2007
  br i1 %tobool50, label %cond.true.51, label %cond.false.52, !dbg !2007

cond.true.51:                                     ; preds = %cond.true.45
  %48 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2008, !tbaa !1876
  %49 = bitcast %struct._object* %48 to %struct.PyASCIIObject*, !dbg !2009
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %49, i64 1, !dbg !2010
  %50 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !2011
  br label %cond.end.54, !dbg !2007

cond.false.52:                                    ; preds = %cond.true.45
  %51 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2012, !tbaa !1876
  %52 = bitcast %struct._object* %51 to %struct.PyCompactUnicodeObject*, !dbg !2013
  %add.ptr53 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %52, i64 1, !dbg !2014
  %53 = bitcast %struct.PyCompactUnicodeObject* %add.ptr53 to i8*, !dbg !2015
  br label %cond.end.54, !dbg !2007

cond.end.54:                                      ; preds = %cond.false.52, %cond.true.51
  %cond55 = phi i8* [ %50, %cond.true.51 ], [ %53, %cond.false.52 ], !dbg !2007
  br label %cond.end.57, !dbg !2016

cond.false.56:                                    ; preds = %if.end.35
  %54 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2017, !tbaa !1876
  %55 = bitcast %struct._object* %54 to %struct.PyUnicodeObject*, !dbg !2018
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %55, i32 0, i32 1, !dbg !2019
  %any = bitcast %union.anon* %data to i8**, !dbg !2020
  %56 = load i8*, i8** %any, align 8, !dbg !2020, !tbaa !1876
  br label %cond.end.57, !dbg !2002

cond.end.57:                                      ; preds = %cond.false.56, %cond.end.54
  %cond58 = phi i8* [ %cond55, %cond.end.54 ], [ %56, %cond.false.56 ], !dbg !2002
  store i8* %cond58, i8** %out, align 8, !dbg !2021, !tbaa !1876
  br label %do.body, !dbg !2024

do.body:                                          ; preds = %cond.end.57
  %57 = load i32, i32* %kind, align 4, !dbg !2025, !tbaa !1883
  br label %NodeBlock

NodeBlock:                                        ; preds = %do.body
  %Pivot = icmp slt i32 %57, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %57, 2
  br i1 %SwitchLeaf2, label %sw.bb.81, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %57, 1
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %58 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2028, !tbaa !1876
  %59 = bitcast %struct._object* %58 to %struct.PyASCIIObject*, !dbg !2032
  %state59 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %59, i32 0, i32 3, !dbg !2033
  %60 = bitcast %struct.anon* %state59 to i32*, !dbg !2034
  %bf.load60 = load i32, i32* %60, align 4, !dbg !2034
  %bf.lshr61 = lshr i32 %bf.load60, 5, !dbg !2034
  %bf.clear62 = and i32 %bf.lshr61, 1, !dbg !2034
  %tobool63 = icmp ne i32 %bf.clear62, 0, !dbg !2035
  br i1 %tobool63, label %cond.true.64, label %cond.false.76, !dbg !2035

cond.true.64:                                     ; preds = %sw.bb
  %61 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2036, !tbaa !1876
  %62 = bitcast %struct._object* %61 to %struct.PyASCIIObject*, !dbg !2038
  %state65 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %62, i32 0, i32 3, !dbg !2039
  %63 = bitcast %struct.anon* %state65 to i32*, !dbg !2040
  %bf.load66 = load i32, i32* %63, align 4, !dbg !2040
  %bf.lshr67 = lshr i32 %bf.load66, 6, !dbg !2040
  %bf.clear68 = and i32 %bf.lshr67, 1, !dbg !2040
  %tobool69 = icmp ne i32 %bf.clear68, 0, !dbg !2041
  br i1 %tobool69, label %cond.true.70, label %cond.false.72, !dbg !2041

cond.true.70:                                     ; preds = %cond.true.64
  %64 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2042, !tbaa !1876
  %65 = bitcast %struct._object* %64 to %struct.PyASCIIObject*, !dbg !2044
  %add.ptr71 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %65, i64 1, !dbg !2045
  %66 = bitcast %struct.PyASCIIObject* %add.ptr71 to i8*, !dbg !2046
  br label %cond.end.74, !dbg !2041

cond.false.72:                                    ; preds = %cond.true.64
  %67 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2047, !tbaa !1876
  %68 = bitcast %struct._object* %67 to %struct.PyCompactUnicodeObject*, !dbg !2049
  %add.ptr73 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %68, i64 1, !dbg !2050
  %69 = bitcast %struct.PyCompactUnicodeObject* %add.ptr73 to i8*, !dbg !2051
  br label %cond.end.74, !dbg !2041

cond.end.74:                                      ; preds = %cond.false.72, %cond.true.70
  %cond75 = phi i8* [ %66, %cond.true.70 ], [ %69, %cond.false.72 ], !dbg !2041
  br label %cond.end.79, !dbg !2052

cond.false.76:                                    ; preds = %sw.bb
  %70 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2055, !tbaa !1876
  %71 = bitcast %struct._object* %70 to %struct.PyUnicodeObject*, !dbg !2057
  %data77 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %71, i32 0, i32 1, !dbg !2058
  %any78 = bitcast %union.anon* %data77 to i8**, !dbg !2059
  %72 = load i8*, i8** %any78, align 8, !dbg !2059, !tbaa !1876
  br label %cond.end.79, !dbg !2035

cond.end.79:                                      ; preds = %cond.false.76, %cond.end.74
  %cond80 = phi i8* [ %cond75, %cond.end.74 ], [ %72, %cond.false.76 ], !dbg !2035
  %arrayidx = getelementptr i8, i8* %cond80, i64 0, !dbg !2060
  store i8 13, i8* %arrayidx, align 1, !dbg !2063, !tbaa !2064
  br label %sw.epilog, !dbg !2065

sw.bb.81:                                         ; preds = %LeafBlock.1
  %73 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2066, !tbaa !1876
  %74 = bitcast %struct._object* %73 to %struct.PyASCIIObject*, !dbg !2069
  %state82 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %74, i32 0, i32 3, !dbg !2070
  %75 = bitcast %struct.anon* %state82 to i32*, !dbg !2071
  %bf.load83 = load i32, i32* %75, align 4, !dbg !2071
  %bf.lshr84 = lshr i32 %bf.load83, 5, !dbg !2071
  %bf.clear85 = and i32 %bf.lshr84, 1, !dbg !2071
  %tobool86 = icmp ne i32 %bf.clear85, 0, !dbg !2072
  br i1 %tobool86, label %cond.true.87, label %cond.false.99, !dbg !2072

cond.true.87:                                     ; preds = %sw.bb.81
  %76 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2073, !tbaa !1876
  %77 = bitcast %struct._object* %76 to %struct.PyASCIIObject*, !dbg !2075
  %state88 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %77, i32 0, i32 3, !dbg !2076
  %78 = bitcast %struct.anon* %state88 to i32*, !dbg !2077
  %bf.load89 = load i32, i32* %78, align 4, !dbg !2077
  %bf.lshr90 = lshr i32 %bf.load89, 6, !dbg !2077
  %bf.clear91 = and i32 %bf.lshr90, 1, !dbg !2077
  %tobool92 = icmp ne i32 %bf.clear91, 0, !dbg !2078
  br i1 %tobool92, label %cond.true.93, label %cond.false.95, !dbg !2078

cond.true.93:                                     ; preds = %cond.true.87
  %79 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2079, !tbaa !1876
  %80 = bitcast %struct._object* %79 to %struct.PyASCIIObject*, !dbg !2081
  %add.ptr94 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %80, i64 1, !dbg !2082
  %81 = bitcast %struct.PyASCIIObject* %add.ptr94 to i8*, !dbg !2083
  br label %cond.end.97, !dbg !2078

cond.false.95:                                    ; preds = %cond.true.87
  %82 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2084, !tbaa !1876
  %83 = bitcast %struct._object* %82 to %struct.PyCompactUnicodeObject*, !dbg !2086
  %add.ptr96 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %83, i64 1, !dbg !2087
  %84 = bitcast %struct.PyCompactUnicodeObject* %add.ptr96 to i8*, !dbg !2088
  br label %cond.end.97, !dbg !2078

cond.end.97:                                      ; preds = %cond.false.95, %cond.true.93
  %cond98 = phi i8* [ %81, %cond.true.93 ], [ %84, %cond.false.95 ], !dbg !2078
  br label %cond.end.102, !dbg !2089

cond.false.99:                                    ; preds = %sw.bb.81
  %85 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2092, !tbaa !1876
  %86 = bitcast %struct._object* %85 to %struct.PyUnicodeObject*, !dbg !2094
  %data100 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %86, i32 0, i32 1, !dbg !2095
  %any101 = bitcast %union.anon* %data100 to i8**, !dbg !2096
  %87 = load i8*, i8** %any101, align 8, !dbg !2096, !tbaa !1876
  br label %cond.end.102, !dbg !2072

cond.end.102:                                     ; preds = %cond.false.99, %cond.end.97
  %cond103 = phi i8* [ %cond98, %cond.end.97 ], [ %87, %cond.false.99 ], !dbg !2072
  %88 = bitcast i8* %cond103 to i16*, !dbg !2097
  %arrayidx104 = getelementptr i16, i16* %88, i64 0, !dbg !2100
  store i16 13, i16* %arrayidx104, align 2, !dbg !2101, !tbaa !2102
  br label %sw.epilog, !dbg !2104

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  %89 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2105, !tbaa !1876
  %90 = bitcast %struct._object* %89 to %struct.PyASCIIObject*, !dbg !2108
  %state105 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %90, i32 0, i32 3, !dbg !2109
  %91 = bitcast %struct.anon* %state105 to i32*, !dbg !2110
  %bf.load106 = load i32, i32* %91, align 4, !dbg !2110
  %bf.lshr107 = lshr i32 %bf.load106, 5, !dbg !2110
  %bf.clear108 = and i32 %bf.lshr107, 1, !dbg !2110
  %tobool109 = icmp ne i32 %bf.clear108, 0, !dbg !2111
  br i1 %tobool109, label %cond.true.110, label %cond.false.122, !dbg !2111

cond.true.110:                                    ; preds = %sw.default
  %92 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2112, !tbaa !1876
  %93 = bitcast %struct._object* %92 to %struct.PyASCIIObject*, !dbg !2114
  %state111 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %93, i32 0, i32 3, !dbg !2115
  %94 = bitcast %struct.anon* %state111 to i32*, !dbg !2116
  %bf.load112 = load i32, i32* %94, align 4, !dbg !2116
  %bf.lshr113 = lshr i32 %bf.load112, 6, !dbg !2116
  %bf.clear114 = and i32 %bf.lshr113, 1, !dbg !2116
  %tobool115 = icmp ne i32 %bf.clear114, 0, !dbg !2117
  br i1 %tobool115, label %cond.true.116, label %cond.false.118, !dbg !2117

cond.true.116:                                    ; preds = %cond.true.110
  %95 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2118, !tbaa !1876
  %96 = bitcast %struct._object* %95 to %struct.PyASCIIObject*, !dbg !2120
  %add.ptr117 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %96, i64 1, !dbg !2121
  %97 = bitcast %struct.PyASCIIObject* %add.ptr117 to i8*, !dbg !2122
  br label %cond.end.120, !dbg !2117

cond.false.118:                                   ; preds = %cond.true.110
  %98 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2123, !tbaa !1876
  %99 = bitcast %struct._object* %98 to %struct.PyCompactUnicodeObject*, !dbg !2125
  %add.ptr119 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %99, i64 1, !dbg !2126
  %100 = bitcast %struct.PyCompactUnicodeObject* %add.ptr119 to i8*, !dbg !2127
  br label %cond.end.120, !dbg !2117

cond.end.120:                                     ; preds = %cond.false.118, %cond.true.116
  %cond121 = phi i8* [ %97, %cond.true.116 ], [ %100, %cond.false.118 ], !dbg !2117
  br label %cond.end.125, !dbg !2128

cond.false.122:                                   ; preds = %sw.default
  %101 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2131, !tbaa !1876
  %102 = bitcast %struct._object* %101 to %struct.PyUnicodeObject*, !dbg !2133
  %data123 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %102, i32 0, i32 1, !dbg !2134
  %any124 = bitcast %union.anon* %data123 to i8**, !dbg !2135
  %103 = load i8*, i8** %any124, align 8, !dbg !2135, !tbaa !1876
  br label %cond.end.125, !dbg !2111

cond.end.125:                                     ; preds = %cond.false.122, %cond.end.120
  %cond126 = phi i8* [ %cond121, %cond.end.120 ], [ %103, %cond.false.122 ], !dbg !2111
  %104 = bitcast i8* %cond126 to i32*, !dbg !2136
  %arrayidx127 = getelementptr i32, i32* %104, i64 0, !dbg !2139
  store i32 13, i32* %arrayidx127, align 4, !dbg !2140, !tbaa !1883
  br label %sw.epilog, !dbg !2141

sw.epilog:                                        ; preds = %cond.end.125, %cond.end.102, %cond.end.79
  br label %do.cond, !dbg !2142

do.cond:                                          ; preds = %sw.epilog
  br label %do.end, !dbg !2146

do.end:                                           ; preds = %do.cond
  %105 = load i8*, i8** %out, align 8, !dbg !2148, !tbaa !1876
  %106 = load i32, i32* %kind, align 4, !dbg !2149, !tbaa !1883
  %idx.ext = sext i32 %106 to i64, !dbg !2150
  %add.ptr128 = getelementptr i8, i8* %105, i64 %idx.ext, !dbg !2150
  %107 = load %struct._object*, %struct._object** %output, align 8, !dbg !2151, !tbaa !1876
  %108 = bitcast %struct._object* %107 to %struct.PyASCIIObject*, !dbg !2152
  %state129 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %108, i32 0, i32 3, !dbg !2153
  %109 = bitcast %struct.anon* %state129 to i32*, !dbg !2154
  %bf.load130 = load i32, i32* %109, align 4, !dbg !2154
  %bf.lshr131 = lshr i32 %bf.load130, 5, !dbg !2154
  %bf.clear132 = and i32 %bf.lshr131, 1, !dbg !2154
  %tobool133 = icmp ne i32 %bf.clear132, 0, !dbg !2155
  br i1 %tobool133, label %cond.true.134, label %cond.false.146, !dbg !2155

cond.true.134:                                    ; preds = %do.end
  %110 = load %struct._object*, %struct._object** %output, align 8, !dbg !2156, !tbaa !1876
  %111 = bitcast %struct._object* %110 to %struct.PyASCIIObject*, !dbg !2157
  %state135 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %111, i32 0, i32 3, !dbg !2158
  %112 = bitcast %struct.anon* %state135 to i32*, !dbg !2159
  %bf.load136 = load i32, i32* %112, align 4, !dbg !2159
  %bf.lshr137 = lshr i32 %bf.load136, 6, !dbg !2159
  %bf.clear138 = and i32 %bf.lshr137, 1, !dbg !2159
  %tobool139 = icmp ne i32 %bf.clear138, 0, !dbg !2160
  br i1 %tobool139, label %cond.true.140, label %cond.false.142, !dbg !2160

cond.true.140:                                    ; preds = %cond.true.134
  %113 = load %struct._object*, %struct._object** %output, align 8, !dbg !2161, !tbaa !1876
  %114 = bitcast %struct._object* %113 to %struct.PyASCIIObject*, !dbg !2162
  %add.ptr141 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %114, i64 1, !dbg !2163
  %115 = bitcast %struct.PyASCIIObject* %add.ptr141 to i8*, !dbg !2164
  br label %cond.end.144, !dbg !2160

cond.false.142:                                   ; preds = %cond.true.134
  %116 = load %struct._object*, %struct._object** %output, align 8, !dbg !2165, !tbaa !1876
  %117 = bitcast %struct._object* %116 to %struct.PyCompactUnicodeObject*, !dbg !2166
  %add.ptr143 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %117, i64 1, !dbg !2167
  %118 = bitcast %struct.PyCompactUnicodeObject* %add.ptr143 to i8*, !dbg !2168
  br label %cond.end.144, !dbg !2160

cond.end.144:                                     ; preds = %cond.false.142, %cond.true.140
  %cond145 = phi i8* [ %115, %cond.true.140 ], [ %118, %cond.false.142 ], !dbg !2160
  br label %cond.end.149, !dbg !2169

cond.false.146:                                   ; preds = %do.end
  %119 = load %struct._object*, %struct._object** %output, align 8, !dbg !2170, !tbaa !1876
  %120 = bitcast %struct._object* %119 to %struct.PyUnicodeObject*, !dbg !2171
  %data147 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %120, i32 0, i32 1, !dbg !2172
  %any148 = bitcast %union.anon* %data147 to i8**, !dbg !2173
  %121 = load i8*, i8** %any148, align 8, !dbg !2173, !tbaa !1876
  br label %cond.end.149, !dbg !2155

cond.end.149:                                     ; preds = %cond.false.146, %cond.end.144
  %cond150 = phi i8* [ %cond145, %cond.end.144 ], [ %121, %cond.false.146 ], !dbg !2155
  %122 = load i32, i32* %kind, align 4, !dbg !2174, !tbaa !1883
  %conv = sext i32 %122 to i64, !dbg !2174
  %123 = load i64, i64* %output_len, align 8, !dbg !2175, !tbaa !1941
  %mul = mul i64 %conv, %123, !dbg !2176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr128, i8* %cond150, i64 %mul, i32 1, i1 false), !dbg !2177
  br label %do.body.151, !dbg !2178

do.body.151:                                      ; preds = %cond.end.149
  %124 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2179
  call void @llvm.lifetime.start(i64 8, i8* %124) #2, !dbg !2179
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !472, metadata !1880), !dbg !2181
  %125 = load %struct._object*, %struct._object** %output, align 8, !dbg !2182, !tbaa !1876
  store %struct._object* %125, %struct._object** %_py_decref_tmp, align 8, !dbg !2181, !tbaa !1876
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2183, !tbaa !1876
  %ob_refcnt152 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !2185
  %127 = load i64, i64* %ob_refcnt152, align 8, !dbg !2186, !tbaa !1927
  %dec = add i64 %127, -1, !dbg !2186
  store i64 %dec, i64* %ob_refcnt152, align 8, !dbg !2186, !tbaa !1927
  %cmp153 = icmp ne i64 %dec, 0, !dbg !2187
  br i1 %cmp153, label %if.then.155, label %if.else.156, !dbg !2188

if.then.155:                                      ; preds = %do.body.151
  br label %if.end.157, !dbg !2189

if.else.156:                                      ; preds = %do.body.151
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2191, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !2193
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2193, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !2195
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2195, !tbaa !2196
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2199, !tbaa !1876
  call void %130(%struct._object* %131), !dbg !2200
  br label %if.end.157

if.end.157:                                       ; preds = %if.else.156, %if.then.155
  %132 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2201
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !2201
  br label %do.cond.158, !dbg !2202

do.cond.158:                                      ; preds = %if.end.157
  br label %do.end.159, !dbg !2203

do.end.159:                                       ; preds = %do.cond.158
  %133 = load %struct._object*, %struct._object** %modified, align 8, !dbg !2205, !tbaa !1876
  store %struct._object* %133, %struct._object** %output, align 8, !dbg !2206, !tbaa !1876
  %134 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2207, !tbaa !1876
  %pendingcr160 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %134, i32 0, i32 3, !dbg !2208
  %bf.load161 = load i8, i8* %pendingcr160, align 8, !dbg !2209
  %bf.clear162 = and i8 %bf.load161, -2, !dbg !2209
  store i8 %bf.clear162, i8* %pendingcr160, align 8, !dbg !2209
  %135 = load i64, i64* %output_len, align 8, !dbg !2210, !tbaa !1941
  %inc163 = add i64 %135, 1, !dbg !2210
  store i64 %inc163, i64* %output_len, align 8, !dbg !2210, !tbaa !1941
  store i32 0, i32* %cleanup.dest.slot, !dbg !2211
  br label %cleanup, !dbg !2211

cleanup:                                          ; preds = %do.end.159, %if.then.34
  %136 = bitcast i8** %out to i8*, !dbg !2212
  call void @llvm.lifetime.end(i64 8, i8* %136) #2, !dbg !2212
  %137 = bitcast %struct._object** %modified to i8*, !dbg !2212
  call void @llvm.lifetime.end(i64 8, i8* %137) #2, !dbg !2212
  %138 = bitcast i32* %kind to i8*, !dbg !2212
  call void @llvm.lifetime.end(i64 4, i8* %138) #2, !dbg !2212
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.8

NodeBlock.8:                                      ; preds = %cleanup
  %Pivot.9 = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot.9, label %LeafBlock.4, label %LeafBlock.6

LeafBlock.6:                                      ; preds = %NodeBlock.8
  %SwitchLeaf7 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf7, label %error, label %NewDefault.3

LeafBlock.4:                                      ; preds = %NodeBlock.8
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf5, label %cleanup.cont, label %NewDefault.3

cleanup.cont:                                     ; preds = %LeafBlock.4
  br label %if.end.166, !dbg !2213

if.end.166:                                       ; preds = %cleanup.cont, %lor.lhs.false, %if.end.9
  %139 = load i32, i32* %final.addr, align 4, !dbg !2214, !tbaa !1883
  %tobool167 = icmp ne i32 %139, 0, !dbg !2214
  br i1 %tobool167, label %if.end.295, label %if.then.168, !dbg !2215

if.then.168:                                      ; preds = %if.end.166
  %140 = load i64, i64* %output_len, align 8, !dbg !2216, !tbaa !1941
  %cmp169 = icmp sgt i64 %140, 0, !dbg !2217
  br i1 %cmp169, label %land.lhs.true.171, label %if.end.294, !dbg !2218

land.lhs.true.171:                                ; preds = %if.then.168
  %141 = load %struct._object*, %struct._object** %output, align 8, !dbg !2219, !tbaa !1876
  %142 = bitcast %struct._object* %141 to %struct.PyASCIIObject*, !dbg !2221
  %state172 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %142, i32 0, i32 3, !dbg !2222
  %143 = bitcast %struct.anon* %state172 to i32*, !dbg !2223
  %bf.load173 = load i32, i32* %143, align 4, !dbg !2223
  %bf.lshr174 = lshr i32 %bf.load173, 2, !dbg !2223
  %bf.clear175 = and i32 %bf.lshr174, 7, !dbg !2223
  %cmp176 = icmp eq i32 %bf.clear175, 1, !dbg !2224
  br i1 %cmp176, label %cond.true.178, label %cond.false.203, !dbg !2225

cond.true.178:                                    ; preds = %land.lhs.true.171
  %144 = load i64, i64* %output_len, align 8, !dbg !2226, !tbaa !1941
  %sub = sub i64 %144, 1, !dbg !2228
  %145 = load %struct._object*, %struct._object** %output, align 8, !dbg !2229, !tbaa !1876
  %146 = bitcast %struct._object* %145 to %struct.PyASCIIObject*, !dbg !2230
  %state179 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %146, i32 0, i32 3, !dbg !2231
  %147 = bitcast %struct.anon* %state179 to i32*, !dbg !2232
  %bf.load180 = load i32, i32* %147, align 4, !dbg !2232
  %bf.lshr181 = lshr i32 %bf.load180, 5, !dbg !2232
  %bf.clear182 = and i32 %bf.lshr181, 1, !dbg !2232
  %tobool183 = icmp ne i32 %bf.clear182, 0, !dbg !2233
  br i1 %tobool183, label %cond.true.184, label %cond.false.196, !dbg !2233

cond.true.184:                                    ; preds = %cond.true.178
  %148 = load %struct._object*, %struct._object** %output, align 8, !dbg !2234, !tbaa !1876
  %149 = bitcast %struct._object* %148 to %struct.PyASCIIObject*, !dbg !2236
  %state185 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %149, i32 0, i32 3, !dbg !2237
  %150 = bitcast %struct.anon* %state185 to i32*, !dbg !2238
  %bf.load186 = load i32, i32* %150, align 4, !dbg !2238
  %bf.lshr187 = lshr i32 %bf.load186, 6, !dbg !2238
  %bf.clear188 = and i32 %bf.lshr187, 1, !dbg !2238
  %tobool189 = icmp ne i32 %bf.clear188, 0, !dbg !2239
  br i1 %tobool189, label %cond.true.190, label %cond.false.192, !dbg !2239

cond.true.190:                                    ; preds = %cond.true.184
  %151 = load %struct._object*, %struct._object** %output, align 8, !dbg !2240, !tbaa !1876
  %152 = bitcast %struct._object* %151 to %struct.PyASCIIObject*, !dbg !2242
  %add.ptr191 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %152, i64 1, !dbg !2243
  %153 = bitcast %struct.PyASCIIObject* %add.ptr191 to i8*, !dbg !2244
  br label %cond.end.194, !dbg !2239

cond.false.192:                                   ; preds = %cond.true.184
  %154 = load %struct._object*, %struct._object** %output, align 8, !dbg !2245, !tbaa !1876
  %155 = bitcast %struct._object* %154 to %struct.PyCompactUnicodeObject*, !dbg !2247
  %add.ptr193 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %155, i64 1, !dbg !2248
  %156 = bitcast %struct.PyCompactUnicodeObject* %add.ptr193 to i8*, !dbg !2249
  br label %cond.end.194, !dbg !2239

cond.end.194:                                     ; preds = %cond.false.192, %cond.true.190
  %cond195 = phi i8* [ %153, %cond.true.190 ], [ %156, %cond.false.192 ], !dbg !2239
  br label %cond.end.199, !dbg !2250

cond.false.196:                                   ; preds = %cond.true.178
  %157 = load %struct._object*, %struct._object** %output, align 8, !dbg !2253, !tbaa !1876
  %158 = bitcast %struct._object* %157 to %struct.PyUnicodeObject*, !dbg !2255
  %data197 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %158, i32 0, i32 1, !dbg !2256
  %any198 = bitcast %union.anon* %data197 to i8**, !dbg !2257
  %159 = load i8*, i8** %any198, align 8, !dbg !2257, !tbaa !1876
  br label %cond.end.199, !dbg !2233

cond.end.199:                                     ; preds = %cond.false.196, %cond.end.194
  %cond200 = phi i8* [ %cond195, %cond.end.194 ], [ %159, %cond.false.196 ], !dbg !2233
  %arrayidx201 = getelementptr i8, i8* %cond200, i64 %sub, !dbg !2258
  %160 = load i8, i8* %arrayidx201, align 1, !dbg !2258, !tbaa !2064
  %conv202 = zext i8 %160 to i32, !dbg !2258
  br label %cond.end.263, !dbg !2225

cond.false.203:                                   ; preds = %land.lhs.true.171
  %161 = load %struct._object*, %struct._object** %output, align 8, !dbg !2261, !tbaa !1876
  %162 = bitcast %struct._object* %161 to %struct.PyASCIIObject*, !dbg !2263
  %state204 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %162, i32 0, i32 3, !dbg !2264
  %163 = bitcast %struct.anon* %state204 to i32*, !dbg !2265
  %bf.load205 = load i32, i32* %163, align 4, !dbg !2265
  %bf.lshr206 = lshr i32 %bf.load205, 2, !dbg !2265
  %bf.clear207 = and i32 %bf.lshr206, 7, !dbg !2265
  %cmp208 = icmp eq i32 %bf.clear207, 2, !dbg !2266
  br i1 %cmp208, label %cond.true.210, label %cond.false.236, !dbg !2267

cond.true.210:                                    ; preds = %cond.false.203
  %164 = load i64, i64* %output_len, align 8, !dbg !2268, !tbaa !1941
  %sub211 = sub i64 %164, 1, !dbg !2270
  %165 = load %struct._object*, %struct._object** %output, align 8, !dbg !2271, !tbaa !1876
  %166 = bitcast %struct._object* %165 to %struct.PyASCIIObject*, !dbg !2272
  %state212 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %166, i32 0, i32 3, !dbg !2273
  %167 = bitcast %struct.anon* %state212 to i32*, !dbg !2274
  %bf.load213 = load i32, i32* %167, align 4, !dbg !2274
  %bf.lshr214 = lshr i32 %bf.load213, 5, !dbg !2274
  %bf.clear215 = and i32 %bf.lshr214, 1, !dbg !2274
  %tobool216 = icmp ne i32 %bf.clear215, 0, !dbg !2275
  br i1 %tobool216, label %cond.true.217, label %cond.false.229, !dbg !2275

cond.true.217:                                    ; preds = %cond.true.210
  %168 = load %struct._object*, %struct._object** %output, align 8, !dbg !2276, !tbaa !1876
  %169 = bitcast %struct._object* %168 to %struct.PyASCIIObject*, !dbg !2278
  %state218 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %169, i32 0, i32 3, !dbg !2279
  %170 = bitcast %struct.anon* %state218 to i32*, !dbg !2280
  %bf.load219 = load i32, i32* %170, align 4, !dbg !2280
  %bf.lshr220 = lshr i32 %bf.load219, 6, !dbg !2280
  %bf.clear221 = and i32 %bf.lshr220, 1, !dbg !2280
  %tobool222 = icmp ne i32 %bf.clear221, 0, !dbg !2281
  br i1 %tobool222, label %cond.true.223, label %cond.false.225, !dbg !2281

cond.true.223:                                    ; preds = %cond.true.217
  %171 = load %struct._object*, %struct._object** %output, align 8, !dbg !2282, !tbaa !1876
  %172 = bitcast %struct._object* %171 to %struct.PyASCIIObject*, !dbg !2284
  %add.ptr224 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %172, i64 1, !dbg !2285
  %173 = bitcast %struct.PyASCIIObject* %add.ptr224 to i8*, !dbg !2286
  br label %cond.end.227, !dbg !2281

cond.false.225:                                   ; preds = %cond.true.217
  %174 = load %struct._object*, %struct._object** %output, align 8, !dbg !2287, !tbaa !1876
  %175 = bitcast %struct._object* %174 to %struct.PyCompactUnicodeObject*, !dbg !2289
  %add.ptr226 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %175, i64 1, !dbg !2290
  %176 = bitcast %struct.PyCompactUnicodeObject* %add.ptr226 to i8*, !dbg !2291
  br label %cond.end.227, !dbg !2281

cond.end.227:                                     ; preds = %cond.false.225, %cond.true.223
  %cond228 = phi i8* [ %173, %cond.true.223 ], [ %176, %cond.false.225 ], !dbg !2281
  br label %cond.end.232, !dbg !2292

cond.false.229:                                   ; preds = %cond.true.210
  %177 = load %struct._object*, %struct._object** %output, align 8, !dbg !2295, !tbaa !1876
  %178 = bitcast %struct._object* %177 to %struct.PyUnicodeObject*, !dbg !2297
  %data230 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %178, i32 0, i32 1, !dbg !2298
  %any231 = bitcast %union.anon* %data230 to i8**, !dbg !2299
  %179 = load i8*, i8** %any231, align 8, !dbg !2299, !tbaa !1876
  br label %cond.end.232, !dbg !2275

cond.end.232:                                     ; preds = %cond.false.229, %cond.end.227
  %cond233 = phi i8* [ %cond228, %cond.end.227 ], [ %179, %cond.false.229 ], !dbg !2275
  %180 = bitcast i8* %cond233 to i16*, !dbg !2300
  %arrayidx234 = getelementptr i16, i16* %180, i64 %sub211, !dbg !2303
  %181 = load i16, i16* %arrayidx234, align 2, !dbg !2303, !tbaa !2102
  %conv235 = zext i16 %181 to i32, !dbg !2303
  br label %cond.end.261, !dbg !2267

cond.false.236:                                   ; preds = %cond.false.203
  %182 = load i64, i64* %output_len, align 8, !dbg !2304, !tbaa !1941
  %sub237 = sub i64 %182, 1, !dbg !2306
  %183 = load %struct._object*, %struct._object** %output, align 8, !dbg !2307, !tbaa !1876
  %184 = bitcast %struct._object* %183 to %struct.PyASCIIObject*, !dbg !2308
  %state238 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %184, i32 0, i32 3, !dbg !2309
  %185 = bitcast %struct.anon* %state238 to i32*, !dbg !2310
  %bf.load239 = load i32, i32* %185, align 4, !dbg !2310
  %bf.lshr240 = lshr i32 %bf.load239, 5, !dbg !2310
  %bf.clear241 = and i32 %bf.lshr240, 1, !dbg !2310
  %tobool242 = icmp ne i32 %bf.clear241, 0, !dbg !2311
  br i1 %tobool242, label %cond.true.243, label %cond.false.255, !dbg !2311

cond.true.243:                                    ; preds = %cond.false.236
  %186 = load %struct._object*, %struct._object** %output, align 8, !dbg !2312, !tbaa !1876
  %187 = bitcast %struct._object* %186 to %struct.PyASCIIObject*, !dbg !2314
  %state244 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %187, i32 0, i32 3, !dbg !2315
  %188 = bitcast %struct.anon* %state244 to i32*, !dbg !2316
  %bf.load245 = load i32, i32* %188, align 4, !dbg !2316
  %bf.lshr246 = lshr i32 %bf.load245, 6, !dbg !2316
  %bf.clear247 = and i32 %bf.lshr246, 1, !dbg !2316
  %tobool248 = icmp ne i32 %bf.clear247, 0, !dbg !2317
  br i1 %tobool248, label %cond.true.249, label %cond.false.251, !dbg !2317

cond.true.249:                                    ; preds = %cond.true.243
  %189 = load %struct._object*, %struct._object** %output, align 8, !dbg !2318, !tbaa !1876
  %190 = bitcast %struct._object* %189 to %struct.PyASCIIObject*, !dbg !2320
  %add.ptr250 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %190, i64 1, !dbg !2321
  %191 = bitcast %struct.PyASCIIObject* %add.ptr250 to i8*, !dbg !2322
  br label %cond.end.253, !dbg !2317

cond.false.251:                                   ; preds = %cond.true.243
  %192 = load %struct._object*, %struct._object** %output, align 8, !dbg !2323, !tbaa !1876
  %193 = bitcast %struct._object* %192 to %struct.PyCompactUnicodeObject*, !dbg !2325
  %add.ptr252 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %193, i64 1, !dbg !2326
  %194 = bitcast %struct.PyCompactUnicodeObject* %add.ptr252 to i8*, !dbg !2327
  br label %cond.end.253, !dbg !2317

cond.end.253:                                     ; preds = %cond.false.251, %cond.true.249
  %cond254 = phi i8* [ %191, %cond.true.249 ], [ %194, %cond.false.251 ], !dbg !2317
  br label %cond.end.258, !dbg !2328

cond.false.255:                                   ; preds = %cond.false.236
  %195 = load %struct._object*, %struct._object** %output, align 8, !dbg !2331, !tbaa !1876
  %196 = bitcast %struct._object* %195 to %struct.PyUnicodeObject*, !dbg !2333
  %data256 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %196, i32 0, i32 1, !dbg !2334
  %any257 = bitcast %union.anon* %data256 to i8**, !dbg !2335
  %197 = load i8*, i8** %any257, align 8, !dbg !2335, !tbaa !1876
  br label %cond.end.258, !dbg !2311

cond.end.258:                                     ; preds = %cond.false.255, %cond.end.253
  %cond259 = phi i8* [ %cond254, %cond.end.253 ], [ %197, %cond.false.255 ], !dbg !2311
  %198 = bitcast i8* %cond259 to i32*, !dbg !2336
  %arrayidx260 = getelementptr i32, i32* %198, i64 %sub237, !dbg !2339
  %199 = load i32, i32* %arrayidx260, align 4, !dbg !2339, !tbaa !1883
  br label %cond.end.261, !dbg !2267

cond.end.261:                                     ; preds = %cond.end.258, %cond.end.232
  %cond262 = phi i32 [ %conv235, %cond.end.232 ], [ %199, %cond.end.258 ], !dbg !2267
  br label %cond.end.263, !dbg !2340

cond.end.263:                                     ; preds = %cond.end.261, %cond.end.199
  %cond264 = phi i32 [ %conv202, %cond.end.199 ], [ %cond262, %cond.end.261 ], !dbg !2225
  %cmp265 = icmp eq i32 %cond264, 13, !dbg !2343
  br i1 %cmp265, label %if.then.267, label %if.end.294, !dbg !2346

if.then.267:                                      ; preds = %cond.end.263
  %200 = bitcast %struct._object** %modified268 to i8*, !dbg !2347
  call void @llvm.lifetime.start(i64 8, i8* %200) #2, !dbg !2347
  call void @llvm.dbg.declare(metadata %struct._object** %modified268, metadata !474, metadata !1880), !dbg !2348
  %201 = load %struct._object*, %struct._object** %output, align 8, !dbg !2349, !tbaa !1876
  %202 = load i64, i64* %output_len, align 8, !dbg !2350, !tbaa !1941
  %sub269 = sub i64 %202, 1, !dbg !2351
  %call270 = call %struct._object* @PyUnicode_Substring(%struct._object* %201, i64 0, i64 %sub269), !dbg !2352
  store %struct._object* %call270, %struct._object** %modified268, align 8, !dbg !2348, !tbaa !1876
  %203 = load %struct._object*, %struct._object** %modified268, align 8, !dbg !2353, !tbaa !1876
  %cmp271 = icmp eq %struct._object* %203, null, !dbg !2355
  br i1 %cmp271, label %if.then.273, label %if.end.274, !dbg !2356

if.then.273:                                      ; preds = %if.then.267
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.291, !dbg !2357

if.end.274:                                       ; preds = %if.then.267
  br label %do.body.275, !dbg !2358

do.body.275:                                      ; preds = %if.end.274
  %204 = bitcast %struct._object** %_py_decref_tmp276 to i8*, !dbg !2359
  call void @llvm.lifetime.start(i64 8, i8* %204) #2, !dbg !2359
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp276, metadata !479, metadata !1880), !dbg !2361
  %205 = load %struct._object*, %struct._object** %output, align 8, !dbg !2362, !tbaa !1876
  store %struct._object* %205, %struct._object** %_py_decref_tmp276, align 8, !dbg !2361, !tbaa !1876
  %206 = load %struct._object*, %struct._object** %_py_decref_tmp276, align 8, !dbg !2363, !tbaa !1876
  %ob_refcnt277 = getelementptr inbounds %struct._object, %struct._object* %206, i32 0, i32 0, !dbg !2365
  %207 = load i64, i64* %ob_refcnt277, align 8, !dbg !2366, !tbaa !1927
  %dec278 = add i64 %207, -1, !dbg !2366
  store i64 %dec278, i64* %ob_refcnt277, align 8, !dbg !2366, !tbaa !1927
  %cmp279 = icmp ne i64 %dec278, 0, !dbg !2367
  br i1 %cmp279, label %if.then.281, label %if.else.282, !dbg !2368

if.then.281:                                      ; preds = %do.body.275
  br label %if.end.285, !dbg !2369

if.else.282:                                      ; preds = %do.body.275
  %208 = load %struct._object*, %struct._object** %_py_decref_tmp276, align 8, !dbg !2371, !tbaa !1876
  %ob_type283 = getelementptr inbounds %struct._object, %struct._object* %208, i32 0, i32 1, !dbg !2373
  %209 = load %struct._typeobject*, %struct._typeobject** %ob_type283, align 8, !dbg !2373, !tbaa !2194
  %tp_dealloc284 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %209, i32 0, i32 4, !dbg !2374
  %210 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc284, align 8, !dbg !2374, !tbaa !2196
  %211 = load %struct._object*, %struct._object** %_py_decref_tmp276, align 8, !dbg !2375, !tbaa !1876
  call void %210(%struct._object* %211), !dbg !2376
  br label %if.end.285

if.end.285:                                       ; preds = %if.else.282, %if.then.281
  %212 = bitcast %struct._object** %_py_decref_tmp276 to i8*, !dbg !2377
  call void @llvm.lifetime.end(i64 8, i8* %212) #2, !dbg !2377
  br label %do.cond.286, !dbg !2379

do.cond.286:                                      ; preds = %if.end.285
  br label %do.end.287, !dbg !2380

do.end.287:                                       ; preds = %do.cond.286
  %213 = load %struct._object*, %struct._object** %modified268, align 8, !dbg !2382, !tbaa !1876
  store %struct._object* %213, %struct._object** %output, align 8, !dbg !2383, !tbaa !1876
  %214 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2384, !tbaa !1876
  %pendingcr288 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %214, i32 0, i32 3, !dbg !2385
  %bf.load289 = load i8, i8* %pendingcr288, align 8, !dbg !2386
  %bf.clear290 = and i8 %bf.load289, -2, !dbg !2386
  %bf.set = or i8 %bf.clear290, 1, !dbg !2386
  store i8 %bf.set, i8* %pendingcr288, align 8, !dbg !2386
  store i32 0, i32* %cleanup.dest.slot, !dbg !2387
  br label %cleanup.291, !dbg !2387

cleanup.291:                                      ; preds = %do.end.287, %if.then.273
  %215 = bitcast %struct._object** %modified268 to i8*, !dbg !2388
  call void @llvm.lifetime.end(i64 8, i8* %215) #2, !dbg !2388
  %cleanup.dest.292 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.15

NodeBlock.15:                                     ; preds = %cleanup.291
  %Pivot.16 = icmp slt i32 %cleanup.dest.292, 2
  br i1 %Pivot.16, label %LeafBlock.11, label %LeafBlock.13

LeafBlock.13:                                     ; preds = %NodeBlock.15
  %SwitchLeaf14 = icmp eq i32 %cleanup.dest.292, 2
  br i1 %SwitchLeaf14, label %error, label %NewDefault.10

LeafBlock.11:                                     ; preds = %NodeBlock.15
  %SwitchLeaf12 = icmp eq i32 %cleanup.dest.292, 0
  br i1 %SwitchLeaf12, label %cleanup.cont.293, label %NewDefault.10

cleanup.cont.293:                                 ; preds = %LeafBlock.11
  br label %if.end.294, !dbg !2389

if.end.294:                                       ; preds = %cleanup.cont.293, %cond.end.263, %if.then.168
  br label %if.end.295, !dbg !2390

if.end.295:                                       ; preds = %if.end.294, %if.end.166
  %216 = bitcast i8** %in_str to i8*, !dbg !2391
  call void @llvm.lifetime.start(i64 8, i8* %216) #2, !dbg !2391
  call void @llvm.dbg.declare(metadata i8** %in_str, metadata !481, metadata !1880), !dbg !2392
  %217 = bitcast i64* %len to i8*, !dbg !2393
  call void @llvm.lifetime.start(i64 8, i8* %217) #2, !dbg !2393
  call void @llvm.dbg.declare(metadata i64* %len, metadata !483, metadata !1880), !dbg !2394
  %218 = bitcast i32* %seennl to i8*, !dbg !2395
  call void @llvm.lifetime.start(i64 4, i8* %218) #2, !dbg !2395
  call void @llvm.dbg.declare(metadata i32* %seennl, metadata !484, metadata !1880), !dbg !2396
  %219 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2397, !tbaa !1876
  %seennl296 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %219, i32 0, i32 3, !dbg !2398
  %bf.load297 = load i8, i8* %seennl296, align 8, !dbg !2398
  %bf.lshr298 = lshr i8 %bf.load297, 2, !dbg !2398
  %bf.clear299 = and i8 %bf.lshr298, 7, !dbg !2398
  %bf.cast300 = zext i8 %bf.clear299 to i32, !dbg !2398
  store i32 %bf.cast300, i32* %seennl, align 4, !dbg !2396, !tbaa !1883
  %220 = bitcast i32* %only_lf to i8*, !dbg !2399
  call void @llvm.lifetime.start(i64 4, i8* %220) #2, !dbg !2399
  call void @llvm.dbg.declare(metadata i32* %only_lf, metadata !485, metadata !1880), !dbg !2400
  store i32 0, i32* %only_lf, align 4, !dbg !2400, !tbaa !1883
  %221 = bitcast i32* %kind301 to i8*, !dbg !2401
  call void @llvm.lifetime.start(i64 4, i8* %221) #2, !dbg !2401
  call void @llvm.dbg.declare(metadata i32* %kind301, metadata !486, metadata !1880), !dbg !2402
  %222 = load %struct._object*, %struct._object** %output, align 8, !dbg !2403, !tbaa !1876
  %223 = bitcast %struct._object* %222 to %struct.PyASCIIObject*, !dbg !2404
  %state302 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %223, i32 0, i32 3, !dbg !2405
  %224 = bitcast %struct.anon* %state302 to i32*, !dbg !2406
  %bf.load303 = load i32, i32* %224, align 4, !dbg !2406
  %bf.lshr304 = lshr i32 %bf.load303, 5, !dbg !2406
  %bf.clear305 = and i32 %bf.lshr304, 1, !dbg !2406
  %tobool306 = icmp ne i32 %bf.clear305, 0, !dbg !2407
  br i1 %tobool306, label %cond.true.307, label %cond.false.319, !dbg !2407

cond.true.307:                                    ; preds = %if.end.295
  %225 = load %struct._object*, %struct._object** %output, align 8, !dbg !2408, !tbaa !1876
  %226 = bitcast %struct._object* %225 to %struct.PyASCIIObject*, !dbg !2410
  %state308 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %226, i32 0, i32 3, !dbg !2411
  %227 = bitcast %struct.anon* %state308 to i32*, !dbg !2412
  %bf.load309 = load i32, i32* %227, align 4, !dbg !2412
  %bf.lshr310 = lshr i32 %bf.load309, 6, !dbg !2412
  %bf.clear311 = and i32 %bf.lshr310, 1, !dbg !2412
  %tobool312 = icmp ne i32 %bf.clear311, 0, !dbg !2413
  br i1 %tobool312, label %cond.true.313, label %cond.false.315, !dbg !2413

cond.true.313:                                    ; preds = %cond.true.307
  %228 = load %struct._object*, %struct._object** %output, align 8, !dbg !2414, !tbaa !1876
  %229 = bitcast %struct._object* %228 to %struct.PyASCIIObject*, !dbg !2416
  %add.ptr314 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %229, i64 1, !dbg !2417
  %230 = bitcast %struct.PyASCIIObject* %add.ptr314 to i8*, !dbg !2418
  br label %cond.end.317, !dbg !2413

cond.false.315:                                   ; preds = %cond.true.307
  %231 = load %struct._object*, %struct._object** %output, align 8, !dbg !2419, !tbaa !1876
  %232 = bitcast %struct._object* %231 to %struct.PyCompactUnicodeObject*, !dbg !2421
  %add.ptr316 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %232, i64 1, !dbg !2422
  %233 = bitcast %struct.PyCompactUnicodeObject* %add.ptr316 to i8*, !dbg !2423
  br label %cond.end.317, !dbg !2413

cond.end.317:                                     ; preds = %cond.false.315, %cond.true.313
  %cond318 = phi i8* [ %230, %cond.true.313 ], [ %233, %cond.false.315 ], !dbg !2413
  br label %cond.end.322, !dbg !2424

cond.false.319:                                   ; preds = %if.end.295
  %234 = load %struct._object*, %struct._object** %output, align 8, !dbg !2427, !tbaa !1876
  %235 = bitcast %struct._object* %234 to %struct.PyUnicodeObject*, !dbg !2429
  %data320 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %235, i32 0, i32 1, !dbg !2430
  %any321 = bitcast %union.anon* %data320 to i8**, !dbg !2431
  %236 = load i8*, i8** %any321, align 8, !dbg !2431, !tbaa !1876
  br label %cond.end.322, !dbg !2407

cond.end.322:                                     ; preds = %cond.false.319, %cond.end.317
  %cond323 = phi i8* [ %cond318, %cond.end.317 ], [ %236, %cond.false.319 ], !dbg !2407
  store i8* %cond323, i8** %in_str, align 8, !dbg !2432, !tbaa !1876
  %237 = load %struct._object*, %struct._object** %output, align 8, !dbg !2435, !tbaa !1876
  %238 = bitcast %struct._object* %237 to %struct.PyASCIIObject*, !dbg !2436
  %length324 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %238, i32 0, i32 1, !dbg !2437
  %239 = load i64, i64* %length324, align 8, !dbg !2437, !tbaa !1937
  store i64 %239, i64* %len, align 8, !dbg !2438, !tbaa !1941
  %240 = load %struct._object*, %struct._object** %output, align 8, !dbg !2439, !tbaa !1876
  %241 = bitcast %struct._object* %240 to %struct.PyASCIIObject*, !dbg !2440
  %state325 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %241, i32 0, i32 3, !dbg !2441
  %242 = bitcast %struct.anon* %state325 to i32*, !dbg !2442
  %bf.load326 = load i32, i32* %242, align 4, !dbg !2442
  %bf.lshr327 = lshr i32 %bf.load326, 2, !dbg !2442
  %bf.clear328 = and i32 %bf.lshr327, 7, !dbg !2442
  store i32 %bf.clear328, i32* %kind301, align 4, !dbg !2443, !tbaa !1883
  %243 = load i64, i64* %len, align 8, !dbg !2444, !tbaa !1941
  %cmp329 = icmp eq i64 %243, 0, !dbg !2446
  br i1 %cmp329, label %if.then.331, label %if.end.332, !dbg !2447

if.then.331:                                      ; preds = %cond.end.322
  %244 = load %struct._object*, %struct._object** %output, align 8, !dbg !2448, !tbaa !1876
  store %struct._object* %244, %struct._object** %retval, !dbg !2449
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.719, !dbg !2449

if.end.332:                                       ; preds = %cond.end.322
  %245 = load i32, i32* %seennl, align 4, !dbg !2450, !tbaa !1883
  %cmp333 = icmp eq i32 %245, 2, !dbg !2452
  br i1 %cmp333, label %if.then.338, label %lor.lhs.false.335, !dbg !2453

lor.lhs.false.335:                                ; preds = %if.end.332
  %246 = load i32, i32* %seennl, align 4, !dbg !2454, !tbaa !1883
  %cmp336 = icmp eq i32 %246, 0, !dbg !2456
  br i1 %cmp336, label %if.then.338, label %if.end.344, !dbg !2457

if.then.338:                                      ; preds = %lor.lhs.false.335, %if.end.332
  %247 = load i8*, i8** %in_str, align 8, !dbg !2458, !tbaa !1876
  %248 = load i32, i32* %kind301, align 4, !dbg !2460, !tbaa !1883
  %conv339 = sext i32 %248 to i64, !dbg !2460
  %249 = load i64, i64* %len, align 8, !dbg !2461, !tbaa !1941
  %mul340 = mul i64 %conv339, %249, !dbg !2462
  %call341 = call i8* @memchr(i8* %247, i32 13, i64 %mul340) #6, !dbg !2463
  %cmp342 = icmp eq i8* %call341, null, !dbg !2464
  %conv343 = zext i1 %cmp342 to i32, !dbg !2464
  store i32 %conv343, i32* %only_lf, align 4, !dbg !2465, !tbaa !1883
  br label %if.end.344, !dbg !2466

if.end.344:                                       ; preds = %if.then.338, %lor.lhs.false.335
  %250 = load i32, i32* %only_lf, align 4, !dbg !2467, !tbaa !1883
  %tobool345 = icmp ne i32 %250, 0, !dbg !2467
  br i1 %tobool345, label %if.then.346, label %if.else.414, !dbg !2468

if.then.346:                                      ; preds = %if.end.344
  %251 = load i32, i32* %seennl, align 4, !dbg !2469, !tbaa !1883
  %cmp347 = icmp eq i32 %251, 0, !dbg !2470
  br i1 %cmp347, label %land.lhs.true.349, label %if.end.413, !dbg !2471

land.lhs.true.349:                                ; preds = %if.then.346
  %252 = load i8*, i8** %in_str, align 8, !dbg !2472, !tbaa !1876
  %253 = load i32, i32* %kind301, align 4, !dbg !2473, !tbaa !1883
  %conv350 = sext i32 %253 to i64, !dbg !2473
  %254 = load i64, i64* %len, align 8, !dbg !2474, !tbaa !1941
  %mul351 = mul i64 %conv350, %254, !dbg !2475
  %call352 = call i8* @memchr(i8* %252, i32 10, i64 %mul351) #6, !dbg !2476
  %cmp353 = icmp ne i8* %call352, null, !dbg !2477
  br i1 %cmp353, label %if.then.355, label %if.end.413, !dbg !2478

if.then.355:                                      ; preds = %land.lhs.true.349
  %255 = load i32, i32* %kind301, align 4, !dbg !2479, !tbaa !1883
  %cmp356 = icmp eq i32 %255, 1, !dbg !2480
  br i1 %cmp356, label %if.then.358, label %if.else.359, !dbg !2481

if.then.358:                                      ; preds = %if.then.355
  %256 = load i32, i32* %seennl, align 4, !dbg !2482, !tbaa !1883
  %or = or i32 %256, 2, !dbg !2482
  store i32 %or, i32* %seennl, align 4, !dbg !2482, !tbaa !1883
  br label %if.end.412, !dbg !2483

if.else.359:                                      ; preds = %if.then.355
  %257 = bitcast i64* %i to i8*, !dbg !2484
  call void @llvm.lifetime.start(i64 8, i8* %257) #2, !dbg !2484
  call void @llvm.dbg.declare(metadata i64* %i, metadata !487, metadata !1880), !dbg !2485
  store i64 0, i64* %i, align 8, !dbg !2485, !tbaa !1941
  br label %for.cond, !dbg !2486

for.cond:                                         ; preds = %cleanup.cont.411, %if.else.359
  %258 = bitcast i32* %c to i8*, !dbg !2487
  call void @llvm.lifetime.start(i64 4, i8* %258) #2, !dbg !2487
  call void @llvm.dbg.declare(metadata i32* %c, metadata !494, metadata !1880), !dbg !2488
  br label %while.cond, !dbg !2489

while.cond:                                       ; preds = %while.body, %for.cond
  %259 = load i32, i32* %kind301, align 4, !dbg !2490, !tbaa !1883
  %cmp360 = icmp eq i32 %259, 1, !dbg !2493
  br i1 %cmp360, label %cond.true.362, label %cond.false.365, !dbg !2494

cond.true.362:                                    ; preds = %while.cond
  %260 = load i64, i64* %i, align 8, !dbg !2495, !tbaa !1941
  %261 = load i8*, i8** %in_str, align 8, !dbg !2497, !tbaa !1876
  %arrayidx363 = getelementptr i8, i8* %261, i64 %260, !dbg !2498
  %262 = load i8, i8* %arrayidx363, align 1, !dbg !2498, !tbaa !2064
  %conv364 = zext i8 %262 to i32, !dbg !2498
  br label %cond.end.375, !dbg !2494

cond.false.365:                                   ; preds = %while.cond
  %263 = load i32, i32* %kind301, align 4, !dbg !2499, !tbaa !1883
  %cmp366 = icmp eq i32 %263, 2, !dbg !2501
  br i1 %cmp366, label %cond.true.368, label %cond.false.371, !dbg !2502

cond.true.368:                                    ; preds = %cond.false.365
  %264 = load i64, i64* %i, align 8, !dbg !2503, !tbaa !1941
  %265 = load i8*, i8** %in_str, align 8, !dbg !2505, !tbaa !1876
  %266 = bitcast i8* %265 to i16*, !dbg !2506
  %arrayidx369 = getelementptr i16, i16* %266, i64 %264, !dbg !2507
  %267 = load i16, i16* %arrayidx369, align 2, !dbg !2507, !tbaa !2102
  %conv370 = zext i16 %267 to i32, !dbg !2507
  br label %cond.end.373, !dbg !2502

cond.false.371:                                   ; preds = %cond.false.365
  %268 = load i64, i64* %i, align 8, !dbg !2508, !tbaa !1941
  %269 = load i8*, i8** %in_str, align 8, !dbg !2510, !tbaa !1876
  %270 = bitcast i8* %269 to i32*, !dbg !2511
  %arrayidx372 = getelementptr i32, i32* %270, i64 %268, !dbg !2512
  %271 = load i32, i32* %arrayidx372, align 4, !dbg !2512, !tbaa !1883
  br label %cond.end.373, !dbg !2502

cond.end.373:                                     ; preds = %cond.false.371, %cond.true.368
  %cond374 = phi i32 [ %conv370, %cond.true.368 ], [ %271, %cond.false.371 ], !dbg !2502
  br label %cond.end.375, !dbg !2513

cond.end.375:                                     ; preds = %cond.end.373, %cond.true.362
  %cond376 = phi i32 [ %conv364, %cond.true.362 ], [ %cond374, %cond.end.373 ], !dbg !2494
  %cmp377 = icmp ugt i32 %cond376, 10, !dbg !2516
  br i1 %cmp377, label %while.body, label %while.end, !dbg !2489

while.body:                                       ; preds = %cond.end.375
  %272 = load i64, i64* %i, align 8, !dbg !2519, !tbaa !1941
  %inc379 = add i64 %272, 1, !dbg !2519
  store i64 %inc379, i64* %i, align 8, !dbg !2519, !tbaa !1941
  br label %while.cond, !dbg !2489

while.end:                                        ; preds = %cond.end.375
  %273 = load i32, i32* %kind301, align 4, !dbg !2520, !tbaa !1883
  %cmp380 = icmp eq i32 %273, 1, !dbg !2521
  br i1 %cmp380, label %cond.true.382, label %cond.false.386, !dbg !2522

cond.true.382:                                    ; preds = %while.end
  %274 = load i64, i64* %i, align 8, !dbg !2523, !tbaa !1941
  %inc383 = add i64 %274, 1, !dbg !2523
  store i64 %inc383, i64* %i, align 8, !dbg !2523, !tbaa !1941
  %275 = load i8*, i8** %in_str, align 8, !dbg !2524, !tbaa !1876
  %arrayidx384 = getelementptr i8, i8* %275, i64 %274, !dbg !2525
  %276 = load i8, i8* %arrayidx384, align 1, !dbg !2525, !tbaa !2064
  %conv385 = zext i8 %276 to i32, !dbg !2525
  br label %cond.end.398, !dbg !2522

cond.false.386:                                   ; preds = %while.end
  %277 = load i32, i32* %kind301, align 4, !dbg !2526, !tbaa !1883
  %cmp387 = icmp eq i32 %277, 2, !dbg !2527
  br i1 %cmp387, label %cond.true.389, label %cond.false.393, !dbg !2528

cond.true.389:                                    ; preds = %cond.false.386
  %278 = load i64, i64* %i, align 8, !dbg !2529, !tbaa !1941
  %inc390 = add i64 %278, 1, !dbg !2529
  store i64 %inc390, i64* %i, align 8, !dbg !2529, !tbaa !1941
  %279 = load i8*, i8** %in_str, align 8, !dbg !2530, !tbaa !1876
  %280 = bitcast i8* %279 to i16*, !dbg !2531
  %arrayidx391 = getelementptr i16, i16* %280, i64 %278, !dbg !2532
  %281 = load i16, i16* %arrayidx391, align 2, !dbg !2532, !tbaa !2102
  %conv392 = zext i16 %281 to i32, !dbg !2532
  br label %cond.end.396, !dbg !2528

cond.false.393:                                   ; preds = %cond.false.386
  %282 = load i64, i64* %i, align 8, !dbg !2533, !tbaa !1941
  %inc394 = add i64 %282, 1, !dbg !2533
  store i64 %inc394, i64* %i, align 8, !dbg !2533, !tbaa !1941
  %283 = load i8*, i8** %in_str, align 8, !dbg !2534, !tbaa !1876
  %284 = bitcast i8* %283 to i32*, !dbg !2535
  %arrayidx395 = getelementptr i32, i32* %284, i64 %282, !dbg !2536
  %285 = load i32, i32* %arrayidx395, align 4, !dbg !2536, !tbaa !1883
  br label %cond.end.396, !dbg !2528

cond.end.396:                                     ; preds = %cond.false.393, %cond.true.389
  %cond397 = phi i32 [ %conv392, %cond.true.389 ], [ %285, %cond.false.393 ], !dbg !2528
  br label %cond.end.398, !dbg !2537

cond.end.398:                                     ; preds = %cond.end.396, %cond.true.382
  %cond399 = phi i32 [ %conv385, %cond.true.382 ], [ %cond397, %cond.end.396 ], !dbg !2522
  store i32 %cond399, i32* %c, align 4, !dbg !2539, !tbaa !1883
  %286 = load i32, i32* %c, align 4, !dbg !2541, !tbaa !1883
  %cmp400 = icmp eq i32 %286, 10, !dbg !2543
  br i1 %cmp400, label %if.then.402, label %if.end.404, !dbg !2544

if.then.402:                                      ; preds = %cond.end.398
  %287 = load i32, i32* %seennl, align 4, !dbg !2545, !tbaa !1883
  %or403 = or i32 %287, 2, !dbg !2545
  store i32 %or403, i32* %seennl, align 4, !dbg !2545, !tbaa !1883
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.409, !dbg !2547

if.end.404:                                       ; preds = %cond.end.398
  %288 = load i64, i64* %i, align 8, !dbg !2548, !tbaa !1941
  %289 = load i64, i64* %len, align 8, !dbg !2550, !tbaa !1941
  %cmp405 = icmp sge i64 %288, %289, !dbg !2551
  br i1 %cmp405, label %if.then.407, label %if.end.408, !dbg !2552

if.then.407:                                      ; preds = %if.end.404
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.409, !dbg !2553

if.end.408:                                       ; preds = %if.end.404
  store i32 0, i32* %cleanup.dest.slot, !dbg !2554
  br label %cleanup.409, !dbg !2554

cleanup.409:                                      ; preds = %if.end.408, %if.then.407, %if.then.402
  %290 = bitcast i32* %c to i8*, !dbg !2555
  call void @llvm.lifetime.end(i64 4, i8* %290) #2, !dbg !2555
  %cleanup.dest.410 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.18

LeafBlock.18:                                     ; preds = %cleanup.409
  %SwitchLeaf19 = icmp eq i32 %cleanup.dest.410, 10
  br i1 %SwitchLeaf19, label %for.end, label %NewDefault.17

NewDefault.17:                                    ; preds = %LeafBlock.18
  br label %cleanup.cont.411

cleanup.cont.411:                                 ; preds = %NewDefault.17
  br label %for.cond, !dbg !2557

for.end:                                          ; preds = %LeafBlock.18
  %291 = bitcast i64* %i to i8*, !dbg !2558
  call void @llvm.lifetime.end(i64 8, i8* %291) #2, !dbg !2558
  br label %if.end.412

if.end.412:                                       ; preds = %for.end, %if.then.358
  br label %if.end.413, !dbg !2559

if.end.413:                                       ; preds = %if.end.412, %land.lhs.true.349, %if.then.346
  br label %if.end.708, !dbg !2560

if.else.414:                                      ; preds = %if.end.344
  %292 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !2561, !tbaa !1876
  %translate = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %292, i32 0, i32 3, !dbg !2562
  %bf.load415 = load i8, i8* %translate, align 8, !dbg !2562
  %bf.shl416 = shl i8 %bf.load415, 6, !dbg !2562
  %bf.ashr417 = ashr i8 %bf.shl416, 7, !dbg !2562
  %bf.cast418 = sext i8 %bf.ashr417 to i32, !dbg !2562
  %tobool419 = icmp ne i32 %bf.cast418, 0, !dbg !2561
  br i1 %tobool419, label %if.else.518, label %if.then.420, !dbg !2563

if.then.420:                                      ; preds = %if.else.414
  %293 = bitcast i64* %i421 to i8*, !dbg !2564
  call void @llvm.lifetime.start(i64 8, i8* %293) #2, !dbg !2564
  call void @llvm.dbg.declare(metadata i64* %i421, metadata !498, metadata !1880), !dbg !2565
  store i64 0, i64* %i421, align 8, !dbg !2565, !tbaa !1941
  %294 = load i32, i32* %seennl, align 4, !dbg !2566, !tbaa !1883
  %cmp422 = icmp eq i32 %294, 7, !dbg !2568
  br i1 %cmp422, label %if.then.424, label %if.end.425, !dbg !2569

if.then.424:                                      ; preds = %if.then.420
  br label %endscan, !dbg !2570

if.end.425:                                       ; preds = %if.then.420
  br label %for.cond.426, !dbg !2571

for.cond.426:                                     ; preds = %cleanup.cont.516, %if.end.425
  %295 = bitcast i32* %c427 to i8*, !dbg !2572
  call void @llvm.lifetime.start(i64 4, i8* %295) #2, !dbg !2572
  call void @llvm.dbg.declare(metadata i32* %c427, metadata !501, metadata !1880), !dbg !2573
  br label %while.cond.428, !dbg !2574

while.cond.428:                                   ; preds = %while.body.448, %for.cond.426
  %296 = load i32, i32* %kind301, align 4, !dbg !2575, !tbaa !1883
  %cmp429 = icmp eq i32 %296, 1, !dbg !2578
  br i1 %cmp429, label %cond.true.431, label %cond.false.434, !dbg !2579

cond.true.431:                                    ; preds = %while.cond.428
  %297 = load i64, i64* %i421, align 8, !dbg !2580, !tbaa !1941
  %298 = load i8*, i8** %in_str, align 8, !dbg !2582, !tbaa !1876
  %arrayidx432 = getelementptr i8, i8* %298, i64 %297, !dbg !2583
  %299 = load i8, i8* %arrayidx432, align 1, !dbg !2583, !tbaa !2064
  %conv433 = zext i8 %299 to i32, !dbg !2583
  br label %cond.end.444, !dbg !2579

cond.false.434:                                   ; preds = %while.cond.428
  %300 = load i32, i32* %kind301, align 4, !dbg !2584, !tbaa !1883
  %cmp435 = icmp eq i32 %300, 2, !dbg !2586
  br i1 %cmp435, label %cond.true.437, label %cond.false.440, !dbg !2587

cond.true.437:                                    ; preds = %cond.false.434
  %301 = load i64, i64* %i421, align 8, !dbg !2588, !tbaa !1941
  %302 = load i8*, i8** %in_str, align 8, !dbg !2590, !tbaa !1876
  %303 = bitcast i8* %302 to i16*, !dbg !2591
  %arrayidx438 = getelementptr i16, i16* %303, i64 %301, !dbg !2592
  %304 = load i16, i16* %arrayidx438, align 2, !dbg !2592, !tbaa !2102
  %conv439 = zext i16 %304 to i32, !dbg !2592
  br label %cond.end.442, !dbg !2587

cond.false.440:                                   ; preds = %cond.false.434
  %305 = load i64, i64* %i421, align 8, !dbg !2593, !tbaa !1941
  %306 = load i8*, i8** %in_str, align 8, !dbg !2595, !tbaa !1876
  %307 = bitcast i8* %306 to i32*, !dbg !2596
  %arrayidx441 = getelementptr i32, i32* %307, i64 %305, !dbg !2597
  %308 = load i32, i32* %arrayidx441, align 4, !dbg !2597, !tbaa !1883
  br label %cond.end.442, !dbg !2587

cond.end.442:                                     ; preds = %cond.false.440, %cond.true.437
  %cond443 = phi i32 [ %conv439, %cond.true.437 ], [ %308, %cond.false.440 ], !dbg !2587
  br label %cond.end.444, !dbg !2598

cond.end.444:                                     ; preds = %cond.end.442, %cond.true.431
  %cond445 = phi i32 [ %conv433, %cond.true.431 ], [ %cond443, %cond.end.442 ], !dbg !2579
  %cmp446 = icmp ugt i32 %cond445, 13, !dbg !2601
  br i1 %cmp446, label %while.body.448, label %while.end.450, !dbg !2574

while.body.448:                                   ; preds = %cond.end.444
  %309 = load i64, i64* %i421, align 8, !dbg !2604, !tbaa !1941
  %inc449 = add i64 %309, 1, !dbg !2604
  store i64 %inc449, i64* %i421, align 8, !dbg !2604, !tbaa !1941
  br label %while.cond.428, !dbg !2574

while.end.450:                                    ; preds = %cond.end.444
  %310 = load i32, i32* %kind301, align 4, !dbg !2605, !tbaa !1883
  %cmp451 = icmp eq i32 %310, 1, !dbg !2606
  br i1 %cmp451, label %cond.true.453, label %cond.false.457, !dbg !2607

cond.true.453:                                    ; preds = %while.end.450
  %311 = load i64, i64* %i421, align 8, !dbg !2608, !tbaa !1941
  %inc454 = add i64 %311, 1, !dbg !2608
  store i64 %inc454, i64* %i421, align 8, !dbg !2608, !tbaa !1941
  %312 = load i8*, i8** %in_str, align 8, !dbg !2609, !tbaa !1876
  %arrayidx455 = getelementptr i8, i8* %312, i64 %311, !dbg !2610
  %313 = load i8, i8* %arrayidx455, align 1, !dbg !2610, !tbaa !2064
  %conv456 = zext i8 %313 to i32, !dbg !2610
  br label %cond.end.469, !dbg !2607

cond.false.457:                                   ; preds = %while.end.450
  %314 = load i32, i32* %kind301, align 4, !dbg !2611, !tbaa !1883
  %cmp458 = icmp eq i32 %314, 2, !dbg !2612
  br i1 %cmp458, label %cond.true.460, label %cond.false.464, !dbg !2613

cond.true.460:                                    ; preds = %cond.false.457
  %315 = load i64, i64* %i421, align 8, !dbg !2614, !tbaa !1941
  %inc461 = add i64 %315, 1, !dbg !2614
  store i64 %inc461, i64* %i421, align 8, !dbg !2614, !tbaa !1941
  %316 = load i8*, i8** %in_str, align 8, !dbg !2615, !tbaa !1876
  %317 = bitcast i8* %316 to i16*, !dbg !2616
  %arrayidx462 = getelementptr i16, i16* %317, i64 %315, !dbg !2617
  %318 = load i16, i16* %arrayidx462, align 2, !dbg !2617, !tbaa !2102
  %conv463 = zext i16 %318 to i32, !dbg !2617
  br label %cond.end.467, !dbg !2613

cond.false.464:                                   ; preds = %cond.false.457
  %319 = load i64, i64* %i421, align 8, !dbg !2618, !tbaa !1941
  %inc465 = add i64 %319, 1, !dbg !2618
  store i64 %inc465, i64* %i421, align 8, !dbg !2618, !tbaa !1941
  %320 = load i8*, i8** %in_str, align 8, !dbg !2619, !tbaa !1876
  %321 = bitcast i8* %320 to i32*, !dbg !2620
  %arrayidx466 = getelementptr i32, i32* %321, i64 %319, !dbg !2621
  %322 = load i32, i32* %arrayidx466, align 4, !dbg !2621, !tbaa !1883
  br label %cond.end.467, !dbg !2613

cond.end.467:                                     ; preds = %cond.false.464, %cond.true.460
  %cond468 = phi i32 [ %conv463, %cond.true.460 ], [ %322, %cond.false.464 ], !dbg !2613
  br label %cond.end.469, !dbg !2622

cond.end.469:                                     ; preds = %cond.end.467, %cond.true.453
  %cond470 = phi i32 [ %conv456, %cond.true.453 ], [ %cond468, %cond.end.467 ], !dbg !2607
  store i32 %cond470, i32* %c427, align 4, !dbg !2624, !tbaa !1883
  %323 = load i32, i32* %c427, align 4, !dbg !2626, !tbaa !1883
  %cmp471 = icmp eq i32 %323, 10, !dbg !2628
  br i1 %cmp471, label %if.then.473, label %if.else.475, !dbg !2629

if.then.473:                                      ; preds = %cond.end.469
  %324 = load i32, i32* %seennl, align 4, !dbg !2630, !tbaa !1883
  %or474 = or i32 %324, 2, !dbg !2630
  store i32 %or474, i32* %seennl, align 4, !dbg !2630, !tbaa !1883
  br label %if.end.505, !dbg !2631

if.else.475:                                      ; preds = %cond.end.469
  %325 = load i32, i32* %c427, align 4, !dbg !2632, !tbaa !1883
  %cmp476 = icmp eq i32 %325, 13, !dbg !2634
  br i1 %cmp476, label %if.then.478, label %if.end.504, !dbg !2635

if.then.478:                                      ; preds = %if.else.475
  %326 = load i32, i32* %kind301, align 4, !dbg !2636, !tbaa !1883
  %cmp479 = icmp eq i32 %326, 1, !dbg !2639
  br i1 %cmp479, label %cond.true.481, label %cond.false.484, !dbg !2640

cond.true.481:                                    ; preds = %if.then.478
  %327 = load i64, i64* %i421, align 8, !dbg !2641, !tbaa !1941
  %328 = load i8*, i8** %in_str, align 8, !dbg !2643, !tbaa !1876
  %arrayidx482 = getelementptr i8, i8* %328, i64 %327, !dbg !2644
  %329 = load i8, i8* %arrayidx482, align 1, !dbg !2644, !tbaa !2064
  %conv483 = zext i8 %329 to i32, !dbg !2644
  br label %cond.end.494, !dbg !2640

cond.false.484:                                   ; preds = %if.then.478
  %330 = load i32, i32* %kind301, align 4, !dbg !2645, !tbaa !1883
  %cmp485 = icmp eq i32 %330, 2, !dbg !2647
  br i1 %cmp485, label %cond.true.487, label %cond.false.490, !dbg !2648

cond.true.487:                                    ; preds = %cond.false.484
  %331 = load i64, i64* %i421, align 8, !dbg !2649, !tbaa !1941
  %332 = load i8*, i8** %in_str, align 8, !dbg !2651, !tbaa !1876
  %333 = bitcast i8* %332 to i16*, !dbg !2652
  %arrayidx488 = getelementptr i16, i16* %333, i64 %331, !dbg !2653
  %334 = load i16, i16* %arrayidx488, align 2, !dbg !2653, !tbaa !2102
  %conv489 = zext i16 %334 to i32, !dbg !2653
  br label %cond.end.492, !dbg !2648

cond.false.490:                                   ; preds = %cond.false.484
  %335 = load i64, i64* %i421, align 8, !dbg !2654, !tbaa !1941
  %336 = load i8*, i8** %in_str, align 8, !dbg !2656, !tbaa !1876
  %337 = bitcast i8* %336 to i32*, !dbg !2657
  %arrayidx491 = getelementptr i32, i32* %337, i64 %335, !dbg !2658
  %338 = load i32, i32* %arrayidx491, align 4, !dbg !2658, !tbaa !1883
  br label %cond.end.492, !dbg !2648

cond.end.492:                                     ; preds = %cond.false.490, %cond.true.487
  %cond493 = phi i32 [ %conv489, %cond.true.487 ], [ %338, %cond.false.490 ], !dbg !2648
  br label %cond.end.494, !dbg !2659

cond.end.494:                                     ; preds = %cond.end.492, %cond.true.481
  %cond495 = phi i32 [ %conv483, %cond.true.481 ], [ %cond493, %cond.end.492 ], !dbg !2640
  %cmp496 = icmp eq i32 %cond495, 10, !dbg !2662
  br i1 %cmp496, label %if.then.498, label %if.else.501, !dbg !2665

if.then.498:                                      ; preds = %cond.end.494
  %339 = load i32, i32* %seennl, align 4, !dbg !2666, !tbaa !1883
  %or499 = or i32 %339, 4, !dbg !2666
  store i32 %or499, i32* %seennl, align 4, !dbg !2666, !tbaa !1883
  %340 = load i64, i64* %i421, align 8, !dbg !2668, !tbaa !1941
  %inc500 = add i64 %340, 1, !dbg !2668
  store i64 %inc500, i64* %i421, align 8, !dbg !2668, !tbaa !1941
  br label %if.end.503, !dbg !2669

if.else.501:                                      ; preds = %cond.end.494
  %341 = load i32, i32* %seennl, align 4, !dbg !2670, !tbaa !1883
  %or502 = or i32 %341, 1, !dbg !2670
  store i32 %or502, i32* %seennl, align 4, !dbg !2670, !tbaa !1883
  br label %if.end.503

if.end.503:                                       ; preds = %if.else.501, %if.then.498
  br label %if.end.504, !dbg !2671

if.end.504:                                       ; preds = %if.end.503, %if.else.475
  br label %if.end.505

if.end.505:                                       ; preds = %if.end.504, %if.then.473
  %342 = load i64, i64* %i421, align 8, !dbg !2672, !tbaa !1941
  %343 = load i64, i64* %len, align 8, !dbg !2674, !tbaa !1941
  %cmp506 = icmp sge i64 %342, %343, !dbg !2675
  br i1 %cmp506, label %if.then.508, label %if.end.509, !dbg !2676

if.then.508:                                      ; preds = %if.end.505
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.514, !dbg !2677

if.end.509:                                       ; preds = %if.end.505
  %344 = load i32, i32* %seennl, align 4, !dbg !2678, !tbaa !1883
  %cmp510 = icmp eq i32 %344, 7, !dbg !2680
  br i1 %cmp510, label %if.then.512, label %if.end.513, !dbg !2681

if.then.512:                                      ; preds = %if.end.509
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.514, !dbg !2682

if.end.513:                                       ; preds = %if.end.509
  store i32 0, i32* %cleanup.dest.slot, !dbg !2683
  br label %cleanup.514, !dbg !2683

cleanup.514:                                      ; preds = %if.end.513, %if.then.512, %if.then.508
  %345 = bitcast i32* %c427 to i8*, !dbg !2684
  call void @llvm.lifetime.end(i64 4, i8* %345) #2, !dbg !2684
  %cleanup.dest.515 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.21

LeafBlock.21:                                     ; preds = %cleanup.514
  %SwitchLeaf22 = icmp eq i32 %cleanup.dest.515, 15
  br i1 %SwitchLeaf22, label %for.end.517, label %NewDefault.20

NewDefault.20:                                    ; preds = %LeafBlock.21
  br label %cleanup.cont.516

cleanup.cont.516:                                 ; preds = %NewDefault.20
  br label %for.cond.426, !dbg !2686

for.end.517:                                      ; preds = %LeafBlock.21
  br label %endscan, !dbg !2687

endscan:                                          ; preds = %for.end.517, %if.then.424
  %346 = bitcast i64* %i421 to i8*, !dbg !2688
  call void @llvm.lifetime.end(i64 8, i8* %346) #2, !dbg !2688
  br label %if.end.707, !dbg !2689

if.else.518:                                      ; preds = %if.else.414
  %347 = bitcast i8** %translated to i8*, !dbg !2690
  call void @llvm.lifetime.start(i64 8, i8* %347) #2, !dbg !2690
  call void @llvm.dbg.declare(metadata i8** %translated, metadata !505, metadata !1880), !dbg !2691
  %348 = bitcast i32* %kind519 to i8*, !dbg !2692
  call void @llvm.lifetime.start(i64 4, i8* %348) #2, !dbg !2692
  call void @llvm.dbg.declare(metadata i32* %kind519, metadata !507, metadata !1880), !dbg !2693
  %349 = load %struct._object*, %struct._object** %output, align 8, !dbg !2694, !tbaa !1876
  %350 = bitcast %struct._object* %349 to %struct.PyASCIIObject*, !dbg !2695
  %state520 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %350, i32 0, i32 3, !dbg !2696
  %351 = bitcast %struct.anon* %state520 to i32*, !dbg !2697
  %bf.load521 = load i32, i32* %351, align 4, !dbg !2697
  %bf.lshr522 = lshr i32 %bf.load521, 2, !dbg !2697
  %bf.clear523 = and i32 %bf.lshr522, 7, !dbg !2697
  store i32 %bf.clear523, i32* %kind519, align 4, !dbg !2693, !tbaa !1883
  %352 = bitcast i8** %in_str524 to i8*, !dbg !2698
  call void @llvm.lifetime.start(i64 8, i8* %352) #2, !dbg !2698
  call void @llvm.dbg.declare(metadata i8** %in_str524, metadata !508, metadata !1880), !dbg !2699
  %353 = load %struct._object*, %struct._object** %output, align 8, !dbg !2700, !tbaa !1876
  %354 = bitcast %struct._object* %353 to %struct.PyASCIIObject*, !dbg !2701
  %state525 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %354, i32 0, i32 3, !dbg !2702
  %355 = bitcast %struct.anon* %state525 to i32*, !dbg !2703
  %bf.load526 = load i32, i32* %355, align 4, !dbg !2703
  %bf.lshr527 = lshr i32 %bf.load526, 5, !dbg !2703
  %bf.clear528 = and i32 %bf.lshr527, 1, !dbg !2703
  %tobool529 = icmp ne i32 %bf.clear528, 0, !dbg !2704
  br i1 %tobool529, label %cond.true.530, label %cond.false.542, !dbg !2704

cond.true.530:                                    ; preds = %if.else.518
  %356 = load %struct._object*, %struct._object** %output, align 8, !dbg !2705, !tbaa !1876
  %357 = bitcast %struct._object* %356 to %struct.PyASCIIObject*, !dbg !2707
  %state531 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %357, i32 0, i32 3, !dbg !2708
  %358 = bitcast %struct.anon* %state531 to i32*, !dbg !2709
  %bf.load532 = load i32, i32* %358, align 4, !dbg !2709
  %bf.lshr533 = lshr i32 %bf.load532, 6, !dbg !2709
  %bf.clear534 = and i32 %bf.lshr533, 1, !dbg !2709
  %tobool535 = icmp ne i32 %bf.clear534, 0, !dbg !2710
  br i1 %tobool535, label %cond.true.536, label %cond.false.538, !dbg !2710

cond.true.536:                                    ; preds = %cond.true.530
  %359 = load %struct._object*, %struct._object** %output, align 8, !dbg !2711, !tbaa !1876
  %360 = bitcast %struct._object* %359 to %struct.PyASCIIObject*, !dbg !2713
  %add.ptr537 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %360, i64 1, !dbg !2714
  %361 = bitcast %struct.PyASCIIObject* %add.ptr537 to i8*, !dbg !2715
  br label %cond.end.540, !dbg !2710

cond.false.538:                                   ; preds = %cond.true.530
  %362 = load %struct._object*, %struct._object** %output, align 8, !dbg !2716, !tbaa !1876
  %363 = bitcast %struct._object* %362 to %struct.PyCompactUnicodeObject*, !dbg !2718
  %add.ptr539 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %363, i64 1, !dbg !2719
  %364 = bitcast %struct.PyCompactUnicodeObject* %add.ptr539 to i8*, !dbg !2720
  br label %cond.end.540, !dbg !2710

cond.end.540:                                     ; preds = %cond.false.538, %cond.true.536
  %cond541 = phi i8* [ %361, %cond.true.536 ], [ %364, %cond.false.538 ], !dbg !2710
  br label %cond.end.545, !dbg !2721

cond.false.542:                                   ; preds = %if.else.518
  %365 = load %struct._object*, %struct._object** %output, align 8, !dbg !2724, !tbaa !1876
  %366 = bitcast %struct._object* %365 to %struct.PyUnicodeObject*, !dbg !2726
  %data543 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %366, i32 0, i32 1, !dbg !2727
  %any544 = bitcast %union.anon* %data543 to i8**, !dbg !2728
  %367 = load i8*, i8** %any544, align 8, !dbg !2728, !tbaa !1876
  br label %cond.end.545, !dbg !2704

cond.end.545:                                     ; preds = %cond.false.542, %cond.end.540
  %cond546 = phi i8* [ %cond541, %cond.end.540 ], [ %367, %cond.false.542 ], !dbg !2704
  store i8* %cond546, i8** %in_str524, align 8, !dbg !2729, !tbaa !1876
  %368 = bitcast i64* %in to i8*, !dbg !2732
  call void @llvm.lifetime.start(i64 8, i8* %368) #2, !dbg !2732
  call void @llvm.dbg.declare(metadata i64* %in, metadata !509, metadata !1880), !dbg !2733
  %369 = bitcast i64* %out547 to i8*, !dbg !2732
  call void @llvm.lifetime.start(i64 8, i8* %369) #2, !dbg !2732
  call void @llvm.dbg.declare(metadata i64* %out547, metadata !510, metadata !1880), !dbg !2734
  %370 = load i32, i32* %kind519, align 4, !dbg !2735, !tbaa !1883
  %conv548 = sext i32 %370 to i64, !dbg !2735
  %371 = load i64, i64* %len, align 8, !dbg !2736, !tbaa !1941
  %mul549 = mul i64 %conv548, %371, !dbg !2737
  %call550 = call i8* @PyMem_Malloc(i64 %mul549), !dbg !2738
  store i8* %call550, i8** %translated, align 8, !dbg !2739, !tbaa !1876
  %372 = load i8*, i8** %translated, align 8, !dbg !2740, !tbaa !1876
  %cmp551 = icmp eq i8* %372, null, !dbg !2742
  br i1 %cmp551, label %if.then.553, label %if.end.555, !dbg !2743

if.then.553:                                      ; preds = %cond.end.545
  %call554 = call %struct._object* @PyErr_NoMemory(), !dbg !2744
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.700, !dbg !2746

if.end.555:                                       ; preds = %cond.end.545
  store i64 0, i64* %out547, align 8, !dbg !2747, !tbaa !1941
  store i64 0, i64* %in, align 8, !dbg !2748, !tbaa !1941
  br label %for.cond.556, !dbg !2749

for.cond.556:                                     ; preds = %NodeBlock.54, %cleanup.cont.681, %if.end.555
  %373 = bitcast i32* %c557 to i8*, !dbg !2750
  call void @llvm.lifetime.start(i64 4, i8* %373) #2, !dbg !2750
  call void @llvm.dbg.declare(metadata i32* %c557, metadata !511, metadata !1880), !dbg !2751
  br label %while.cond.558, !dbg !2752

while.cond.558:                                   ; preds = %do.end.596, %for.cond.556
  %374 = load i32, i32* %kind519, align 4, !dbg !2753, !tbaa !1883
  %cmp559 = icmp eq i32 %374, 1, !dbg !2756
  br i1 %cmp559, label %cond.true.561, label %cond.false.565, !dbg !2757

cond.true.561:                                    ; preds = %while.cond.558
  %375 = load i64, i64* %in, align 8, !dbg !2758, !tbaa !1941
  %inc562 = add i64 %375, 1, !dbg !2758
  store i64 %inc562, i64* %in, align 8, !dbg !2758, !tbaa !1941
  %376 = load i8*, i8** %in_str524, align 8, !dbg !2760, !tbaa !1876
  %arrayidx563 = getelementptr i8, i8* %376, i64 %375, !dbg !2761
  %377 = load i8, i8* %arrayidx563, align 1, !dbg !2761, !tbaa !2064
  %conv564 = zext i8 %377 to i32, !dbg !2761
  br label %cond.end.577, !dbg !2757

cond.false.565:                                   ; preds = %while.cond.558
  %378 = load i32, i32* %kind519, align 4, !dbg !2762, !tbaa !1883
  %cmp566 = icmp eq i32 %378, 2, !dbg !2764
  br i1 %cmp566, label %cond.true.568, label %cond.false.572, !dbg !2765

cond.true.568:                                    ; preds = %cond.false.565
  %379 = load i64, i64* %in, align 8, !dbg !2766, !tbaa !1941
  %inc569 = add i64 %379, 1, !dbg !2766
  store i64 %inc569, i64* %in, align 8, !dbg !2766, !tbaa !1941
  %380 = load i8*, i8** %in_str524, align 8, !dbg !2768, !tbaa !1876
  %381 = bitcast i8* %380 to i16*, !dbg !2769
  %arrayidx570 = getelementptr i16, i16* %381, i64 %379, !dbg !2770
  %382 = load i16, i16* %arrayidx570, align 2, !dbg !2770, !tbaa !2102
  %conv571 = zext i16 %382 to i32, !dbg !2770
  br label %cond.end.575, !dbg !2765

cond.false.572:                                   ; preds = %cond.false.565
  %383 = load i64, i64* %in, align 8, !dbg !2771, !tbaa !1941
  %inc573 = add i64 %383, 1, !dbg !2771
  store i64 %inc573, i64* %in, align 8, !dbg !2771, !tbaa !1941
  %384 = load i8*, i8** %in_str524, align 8, !dbg !2773, !tbaa !1876
  %385 = bitcast i8* %384 to i32*, !dbg !2774
  %arrayidx574 = getelementptr i32, i32* %385, i64 %383, !dbg !2775
  %386 = load i32, i32* %arrayidx574, align 4, !dbg !2775, !tbaa !1883
  br label %cond.end.575, !dbg !2765

cond.end.575:                                     ; preds = %cond.false.572, %cond.true.568
  %cond576 = phi i32 [ %conv571, %cond.true.568 ], [ %386, %cond.false.572 ], !dbg !2765
  br label %cond.end.577, !dbg !2776

cond.end.577:                                     ; preds = %cond.end.575, %cond.true.561
  %cond578 = phi i32 [ %conv564, %cond.true.561 ], [ %cond576, %cond.end.575 ], !dbg !2757
  store i32 %cond578, i32* %c557, align 4, !dbg !2779, !tbaa !1883
  %cmp579 = icmp ugt i32 %cond578, 13, !dbg !2782
  br i1 %cmp579, label %while.body.581, label %while.end.597, !dbg !2752

while.body.581:                                   ; preds = %cond.end.577
  br label %do.body.582, !dbg !2783

do.body.582:                                      ; preds = %while.body.581
  %387 = load i32, i32* %kind519, align 4, !dbg !2784, !tbaa !1883
  br label %NodeBlock.28

NodeBlock.28:                                     ; preds = %do.body.582
  %Pivot.29 = icmp slt i32 %387, 2
  br i1 %Pivot.29, label %LeafBlock.24, label %LeafBlock.26

LeafBlock.26:                                     ; preds = %NodeBlock.28
  %SwitchLeaf27 = icmp eq i32 %387, 2
  br i1 %SwitchLeaf27, label %sw.bb.587, label %NewDefault.23

LeafBlock.24:                                     ; preds = %NodeBlock.28
  %SwitchLeaf25 = icmp eq i32 %387, 1
  br i1 %SwitchLeaf25, label %sw.bb.583, label %NewDefault.23

sw.bb.583:                                        ; preds = %LeafBlock.24
  %388 = load i32, i32* %c557, align 4, !dbg !2787, !tbaa !1883
  %conv584 = trunc i32 %388 to i8, !dbg !2791
  %389 = load i64, i64* %out547, align 8, !dbg !2792, !tbaa !1941
  %inc585 = add i64 %389, 1, !dbg !2792
  store i64 %inc585, i64* %out547, align 8, !dbg !2792, !tbaa !1941
  %390 = load i8*, i8** %translated, align 8, !dbg !2793, !tbaa !1876
  %arrayidx586 = getelementptr i8, i8* %390, i64 %389, !dbg !2794
  store i8 %conv584, i8* %arrayidx586, align 1, !dbg !2795, !tbaa !2064
  br label %sw.epilog.594, !dbg !2796

sw.bb.587:                                        ; preds = %LeafBlock.26
  %391 = load i32, i32* %c557, align 4, !dbg !2797, !tbaa !1883
  %conv588 = trunc i32 %391 to i16, !dbg !2800
  %392 = load i64, i64* %out547, align 8, !dbg !2801, !tbaa !1941
  %inc589 = add i64 %392, 1, !dbg !2801
  store i64 %inc589, i64* %out547, align 8, !dbg !2801, !tbaa !1941
  %393 = load i8*, i8** %translated, align 8, !dbg !2802, !tbaa !1876
  %394 = bitcast i8* %393 to i16*, !dbg !2803
  %arrayidx590 = getelementptr i16, i16* %394, i64 %392, !dbg !2804
  store i16 %conv588, i16* %arrayidx590, align 2, !dbg !2805, !tbaa !2102
  br label %sw.epilog.594, !dbg !2806

NewDefault.23:                                    ; preds = %LeafBlock.26, %LeafBlock.24
  br label %sw.default.591

sw.default.591:                                   ; preds = %NewDefault.23
  %395 = load i32, i32* %c557, align 4, !dbg !2807, !tbaa !1883
  %396 = load i64, i64* %out547, align 8, !dbg !2810, !tbaa !1941
  %inc592 = add i64 %396, 1, !dbg !2810
  store i64 %inc592, i64* %out547, align 8, !dbg !2810, !tbaa !1941
  %397 = load i8*, i8** %translated, align 8, !dbg !2811, !tbaa !1876
  %398 = bitcast i8* %397 to i32*, !dbg !2812
  %arrayidx593 = getelementptr i32, i32* %398, i64 %396, !dbg !2813
  store i32 %395, i32* %arrayidx593, align 4, !dbg !2814, !tbaa !1883
  br label %sw.epilog.594, !dbg !2815

sw.epilog.594:                                    ; preds = %sw.default.591, %sw.bb.587, %sw.bb.583
  br label %do.cond.595, !dbg !2816

do.cond.595:                                      ; preds = %sw.epilog.594
  br label %do.end.596, !dbg !2820

do.end.596:                                       ; preds = %do.cond.595
  br label %while.cond.558, !dbg !2752

while.end.597:                                    ; preds = %cond.end.577
  %399 = load i32, i32* %c557, align 4, !dbg !2822, !tbaa !1883
  %cmp598 = icmp eq i32 %399, 10, !dbg !2824
  br i1 %cmp598, label %if.then.600, label %if.end.617, !dbg !2825

if.then.600:                                      ; preds = %while.end.597
  br label %do.body.601, !dbg !2826

do.body.601:                                      ; preds = %if.then.600
  %400 = load i32, i32* %kind519, align 4, !dbg !2828, !tbaa !1883
  br label %NodeBlock.35

NodeBlock.35:                                     ; preds = %do.body.601
  %Pivot.36 = icmp slt i32 %400, 2
  br i1 %Pivot.36, label %LeafBlock.31, label %LeafBlock.33

LeafBlock.33:                                     ; preds = %NodeBlock.35
  %SwitchLeaf34 = icmp eq i32 %400, 2
  br i1 %SwitchLeaf34, label %sw.bb.606, label %NewDefault.30

LeafBlock.31:                                     ; preds = %NodeBlock.35
  %SwitchLeaf32 = icmp eq i32 %400, 1
  br i1 %SwitchLeaf32, label %sw.bb.602, label %NewDefault.30

sw.bb.602:                                        ; preds = %LeafBlock.31
  %401 = load i32, i32* %c557, align 4, !dbg !2831, !tbaa !1883
  %conv603 = trunc i32 %401 to i8, !dbg !2835
  %402 = load i64, i64* %out547, align 8, !dbg !2836, !tbaa !1941
  %inc604 = add i64 %402, 1, !dbg !2836
  store i64 %inc604, i64* %out547, align 8, !dbg !2836, !tbaa !1941
  %403 = load i8*, i8** %translated, align 8, !dbg !2837, !tbaa !1876
  %arrayidx605 = getelementptr i8, i8* %403, i64 %402, !dbg !2838
  store i8 %conv603, i8* %arrayidx605, align 1, !dbg !2839, !tbaa !2064
  br label %sw.epilog.613, !dbg !2840

sw.bb.606:                                        ; preds = %LeafBlock.33
  %404 = load i32, i32* %c557, align 4, !dbg !2841, !tbaa !1883
  %conv607 = trunc i32 %404 to i16, !dbg !2844
  %405 = load i64, i64* %out547, align 8, !dbg !2845, !tbaa !1941
  %inc608 = add i64 %405, 1, !dbg !2845
  store i64 %inc608, i64* %out547, align 8, !dbg !2845, !tbaa !1941
  %406 = load i8*, i8** %translated, align 8, !dbg !2846, !tbaa !1876
  %407 = bitcast i8* %406 to i16*, !dbg !2847
  %arrayidx609 = getelementptr i16, i16* %407, i64 %405, !dbg !2848
  store i16 %conv607, i16* %arrayidx609, align 2, !dbg !2849, !tbaa !2102
  br label %sw.epilog.613, !dbg !2850

NewDefault.30:                                    ; preds = %LeafBlock.33, %LeafBlock.31
  br label %sw.default.610

sw.default.610:                                   ; preds = %NewDefault.30
  %408 = load i32, i32* %c557, align 4, !dbg !2851, !tbaa !1883
  %409 = load i64, i64* %out547, align 8, !dbg !2854, !tbaa !1941
  %inc611 = add i64 %409, 1, !dbg !2854
  store i64 %inc611, i64* %out547, align 8, !dbg !2854, !tbaa !1941
  %410 = load i8*, i8** %translated, align 8, !dbg !2855, !tbaa !1876
  %411 = bitcast i8* %410 to i32*, !dbg !2856
  %arrayidx612 = getelementptr i32, i32* %411, i64 %409, !dbg !2857
  store i32 %408, i32* %arrayidx612, align 4, !dbg !2858, !tbaa !1883
  br label %sw.epilog.613, !dbg !2859

sw.epilog.613:                                    ; preds = %sw.default.610, %sw.bb.606, %sw.bb.602
  br label %do.cond.614, !dbg !2860

do.cond.614:                                      ; preds = %sw.epilog.613
  br label %do.end.615, !dbg !2864

do.end.615:                                       ; preds = %do.cond.614
  %412 = load i32, i32* %seennl, align 4, !dbg !2866, !tbaa !1883
  %or616 = or i32 %412, 2, !dbg !2866
  store i32 %or616, i32* %seennl, align 4, !dbg !2866, !tbaa !1883
  store i32 20, i32* %cleanup.dest.slot
  br label %cleanup.679, !dbg !2867

if.end.617:                                       ; preds = %while.end.597
  %413 = load i32, i32* %c557, align 4, !dbg !2868, !tbaa !1883
  %cmp618 = icmp eq i32 %413, 13, !dbg !2870
  br i1 %cmp618, label %if.then.620, label %if.end.659, !dbg !2871

if.then.620:                                      ; preds = %if.end.617
  %414 = load i32, i32* %kind519, align 4, !dbg !2872, !tbaa !1883
  %cmp621 = icmp eq i32 %414, 1, !dbg !2875
  br i1 %cmp621, label %cond.true.623, label %cond.false.626, !dbg !2876

cond.true.623:                                    ; preds = %if.then.620
  %415 = load i64, i64* %in, align 8, !dbg !2877, !tbaa !1941
  %416 = load i8*, i8** %in_str524, align 8, !dbg !2879, !tbaa !1876
  %arrayidx624 = getelementptr i8, i8* %416, i64 %415, !dbg !2880
  %417 = load i8, i8* %arrayidx624, align 1, !dbg !2880, !tbaa !2064
  %conv625 = zext i8 %417 to i32, !dbg !2880
  br label %cond.end.636, !dbg !2876

cond.false.626:                                   ; preds = %if.then.620
  %418 = load i32, i32* %kind519, align 4, !dbg !2881, !tbaa !1883
  %cmp627 = icmp eq i32 %418, 2, !dbg !2883
  br i1 %cmp627, label %cond.true.629, label %cond.false.632, !dbg !2884

cond.true.629:                                    ; preds = %cond.false.626
  %419 = load i64, i64* %in, align 8, !dbg !2885, !tbaa !1941
  %420 = load i8*, i8** %in_str524, align 8, !dbg !2887, !tbaa !1876
  %421 = bitcast i8* %420 to i16*, !dbg !2888
  %arrayidx630 = getelementptr i16, i16* %421, i64 %419, !dbg !2889
  %422 = load i16, i16* %arrayidx630, align 2, !dbg !2889, !tbaa !2102
  %conv631 = zext i16 %422 to i32, !dbg !2889
  br label %cond.end.634, !dbg !2884

cond.false.632:                                   ; preds = %cond.false.626
  %423 = load i64, i64* %in, align 8, !dbg !2890, !tbaa !1941
  %424 = load i8*, i8** %in_str524, align 8, !dbg !2892, !tbaa !1876
  %425 = bitcast i8* %424 to i32*, !dbg !2893
  %arrayidx633 = getelementptr i32, i32* %425, i64 %423, !dbg !2894
  %426 = load i32, i32* %arrayidx633, align 4, !dbg !2894, !tbaa !1883
  br label %cond.end.634, !dbg !2884

cond.end.634:                                     ; preds = %cond.false.632, %cond.true.629
  %cond635 = phi i32 [ %conv631, %cond.true.629 ], [ %426, %cond.false.632 ], !dbg !2884
  br label %cond.end.636, !dbg !2895

cond.end.636:                                     ; preds = %cond.end.634, %cond.true.623
  %cond637 = phi i32 [ %conv625, %cond.true.623 ], [ %cond635, %cond.end.634 ], !dbg !2876
  %cmp638 = icmp eq i32 %cond637, 10, !dbg !2898
  br i1 %cmp638, label %if.then.640, label %if.else.643, !dbg !2901

if.then.640:                                      ; preds = %cond.end.636
  %427 = load i64, i64* %in, align 8, !dbg !2902, !tbaa !1941
  %inc641 = add i64 %427, 1, !dbg !2902
  store i64 %inc641, i64* %in, align 8, !dbg !2902, !tbaa !1941
  %428 = load i32, i32* %seennl, align 4, !dbg !2904, !tbaa !1883
  %or642 = or i32 %428, 4, !dbg !2904
  store i32 %or642, i32* %seennl, align 4, !dbg !2904, !tbaa !1883
  br label %if.end.645, !dbg !2905

if.else.643:                                      ; preds = %cond.end.636
  %429 = load i32, i32* %seennl, align 4, !dbg !2906, !tbaa !1883
  %or644 = or i32 %429, 1, !dbg !2906
  store i32 %or644, i32* %seennl, align 4, !dbg !2906, !tbaa !1883
  br label %if.end.645

if.end.645:                                       ; preds = %if.else.643, %if.then.640
  br label %do.body.646, !dbg !2907

do.body.646:                                      ; preds = %if.end.645
  %430 = load i32, i32* %kind519, align 4, !dbg !2908, !tbaa !1883
  br label %NodeBlock.42

NodeBlock.42:                                     ; preds = %do.body.646
  %Pivot.43 = icmp slt i32 %430, 2
  br i1 %Pivot.43, label %LeafBlock.38, label %LeafBlock.40

LeafBlock.40:                                     ; preds = %NodeBlock.42
  %SwitchLeaf41 = icmp eq i32 %430, 2
  br i1 %SwitchLeaf41, label %sw.bb.650, label %NewDefault.37

LeafBlock.38:                                     ; preds = %NodeBlock.42
  %SwitchLeaf39 = icmp eq i32 %430, 1
  br i1 %SwitchLeaf39, label %sw.bb.647, label %NewDefault.37

sw.bb.647:                                        ; preds = %LeafBlock.38
  %431 = load i64, i64* %out547, align 8, !dbg !2911, !tbaa !1941
  %inc648 = add i64 %431, 1, !dbg !2911
  store i64 %inc648, i64* %out547, align 8, !dbg !2911, !tbaa !1941
  %432 = load i8*, i8** %translated, align 8, !dbg !2915, !tbaa !1876
  %arrayidx649 = getelementptr i8, i8* %432, i64 %431, !dbg !2916
  store i8 10, i8* %arrayidx649, align 1, !dbg !2917, !tbaa !2064
  br label %sw.epilog.656, !dbg !2918

sw.bb.650:                                        ; preds = %LeafBlock.40
  %433 = load i64, i64* %out547, align 8, !dbg !2919, !tbaa !1941
  %inc651 = add i64 %433, 1, !dbg !2919
  store i64 %inc651, i64* %out547, align 8, !dbg !2919, !tbaa !1941
  %434 = load i8*, i8** %translated, align 8, !dbg !2922, !tbaa !1876
  %435 = bitcast i8* %434 to i16*, !dbg !2923
  %arrayidx652 = getelementptr i16, i16* %435, i64 %433, !dbg !2924
  store i16 10, i16* %arrayidx652, align 2, !dbg !2925, !tbaa !2102
  br label %sw.epilog.656, !dbg !2926

NewDefault.37:                                    ; preds = %LeafBlock.40, %LeafBlock.38
  br label %sw.default.653

sw.default.653:                                   ; preds = %NewDefault.37
  %436 = load i64, i64* %out547, align 8, !dbg !2927, !tbaa !1941
  %inc654 = add i64 %436, 1, !dbg !2927
  store i64 %inc654, i64* %out547, align 8, !dbg !2927, !tbaa !1941
  %437 = load i8*, i8** %translated, align 8, !dbg !2930, !tbaa !1876
  %438 = bitcast i8* %437 to i32*, !dbg !2931
  %arrayidx655 = getelementptr i32, i32* %438, i64 %436, !dbg !2932
  store i32 10, i32* %arrayidx655, align 4, !dbg !2933, !tbaa !1883
  br label %sw.epilog.656, !dbg !2934

sw.epilog.656:                                    ; preds = %sw.default.653, %sw.bb.650, %sw.bb.647
  br label %do.cond.657, !dbg !2935

do.cond.657:                                      ; preds = %sw.epilog.656
  br label %do.end.658, !dbg !2939

do.end.658:                                       ; preds = %do.cond.657
  store i32 20, i32* %cleanup.dest.slot
  br label %cleanup.679, !dbg !2941

if.end.659:                                       ; preds = %if.end.617
  %439 = load i64, i64* %in, align 8, !dbg !2942, !tbaa !1941
  %440 = load i64, i64* %len, align 8, !dbg !2944, !tbaa !1941
  %cmp660 = icmp sgt i64 %439, %440, !dbg !2945
  br i1 %cmp660, label %if.then.662, label %if.end.663, !dbg !2946

if.then.662:                                      ; preds = %if.end.659
  store i32 19, i32* %cleanup.dest.slot
  br label %cleanup.679, !dbg !2947

if.end.663:                                       ; preds = %if.end.659
  br label %do.body.664, !dbg !2948

do.body.664:                                      ; preds = %if.end.663
  %441 = load i32, i32* %kind519, align 4, !dbg !2949, !tbaa !1883
  br label %NodeBlock.49

NodeBlock.49:                                     ; preds = %do.body.664
  %Pivot.50 = icmp slt i32 %441, 2
  br i1 %Pivot.50, label %LeafBlock.45, label %LeafBlock.47

LeafBlock.47:                                     ; preds = %NodeBlock.49
  %SwitchLeaf48 = icmp eq i32 %441, 2
  br i1 %SwitchLeaf48, label %sw.bb.669, label %NewDefault.44

LeafBlock.45:                                     ; preds = %NodeBlock.49
  %SwitchLeaf46 = icmp eq i32 %441, 1
  br i1 %SwitchLeaf46, label %sw.bb.665, label %NewDefault.44

sw.bb.665:                                        ; preds = %LeafBlock.45
  %442 = load i32, i32* %c557, align 4, !dbg !2952, !tbaa !1883
  %conv666 = trunc i32 %442 to i8, !dbg !2956
  %443 = load i64, i64* %out547, align 8, !dbg !2957, !tbaa !1941
  %inc667 = add i64 %443, 1, !dbg !2957
  store i64 %inc667, i64* %out547, align 8, !dbg !2957, !tbaa !1941
  %444 = load i8*, i8** %translated, align 8, !dbg !2958, !tbaa !1876
  %arrayidx668 = getelementptr i8, i8* %444, i64 %443, !dbg !2959
  store i8 %conv666, i8* %arrayidx668, align 1, !dbg !2960, !tbaa !2064
  br label %sw.epilog.676, !dbg !2961

sw.bb.669:                                        ; preds = %LeafBlock.47
  %445 = load i32, i32* %c557, align 4, !dbg !2962, !tbaa !1883
  %conv670 = trunc i32 %445 to i16, !dbg !2965
  %446 = load i64, i64* %out547, align 8, !dbg !2966, !tbaa !1941
  %inc671 = add i64 %446, 1, !dbg !2966
  store i64 %inc671, i64* %out547, align 8, !dbg !2966, !tbaa !1941
  %447 = load i8*, i8** %translated, align 8, !dbg !2967, !tbaa !1876
  %448 = bitcast i8* %447 to i16*, !dbg !2968
  %arrayidx672 = getelementptr i16, i16* %448, i64 %446, !dbg !2969
  store i16 %conv670, i16* %arrayidx672, align 2, !dbg !2970, !tbaa !2102
  br label %sw.epilog.676, !dbg !2971

NewDefault.44:                                    ; preds = %LeafBlock.47, %LeafBlock.45
  br label %sw.default.673

sw.default.673:                                   ; preds = %NewDefault.44
  %449 = load i32, i32* %c557, align 4, !dbg !2972, !tbaa !1883
  %450 = load i64, i64* %out547, align 8, !dbg !2975, !tbaa !1941
  %inc674 = add i64 %450, 1, !dbg !2975
  store i64 %inc674, i64* %out547, align 8, !dbg !2975, !tbaa !1941
  %451 = load i8*, i8** %translated, align 8, !dbg !2976, !tbaa !1876
  %452 = bitcast i8* %451 to i32*, !dbg !2977
  %arrayidx675 = getelementptr i32, i32* %452, i64 %450, !dbg !2978
  store i32 %449, i32* %arrayidx675, align 4, !dbg !2979, !tbaa !1883
  br label %sw.epilog.676, !dbg !2980

sw.epilog.676:                                    ; preds = %sw.default.673, %sw.bb.669, %sw.bb.665
  br label %do.cond.677, !dbg !2981

do.cond.677:                                      ; preds = %sw.epilog.676
  br label %do.end.678, !dbg !2985

do.end.678:                                       ; preds = %do.cond.677
  store i32 0, i32* %cleanup.dest.slot, !dbg !2987
  br label %cleanup.679, !dbg !2987

cleanup.679:                                      ; preds = %do.end.678, %if.then.662, %do.end.658, %do.end.615
  %453 = bitcast i32* %c557 to i8*, !dbg !2988
  call void @llvm.lifetime.end(i64 4, i8* %453) #2, !dbg !2988
  %cleanup.dest.680 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.54

NodeBlock.54:                                     ; preds = %cleanup.679
  %Pivot.55 = icmp slt i32 %cleanup.dest.680, 20
  br i1 %Pivot.55, label %LeafBlock.52, label %for.cond.556

LeafBlock.52:                                     ; preds = %NodeBlock.54
  %SwitchLeaf53 = icmp eq i32 %cleanup.dest.680, 19
  br i1 %SwitchLeaf53, label %for.end.682, label %NewDefault.51

NewDefault.51:                                    ; preds = %LeafBlock.52
  br label %cleanup.cont.681

cleanup.cont.681:                                 ; preds = %NewDefault.51
  br label %for.cond.556, !dbg !2990

for.end.682:                                      ; preds = %LeafBlock.52
  br label %do.body.683, !dbg !2991

do.body.683:                                      ; preds = %for.end.682
  %454 = bitcast %struct._object** %_py_decref_tmp684 to i8*, !dbg !2992
  call void @llvm.lifetime.start(i64 8, i8* %454) #2, !dbg !2992
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp684, metadata !515, metadata !1880), !dbg !2994
  %455 = load %struct._object*, %struct._object** %output, align 8, !dbg !2995, !tbaa !1876
  store %struct._object* %455, %struct._object** %_py_decref_tmp684, align 8, !dbg !2994, !tbaa !1876
  %456 = load %struct._object*, %struct._object** %_py_decref_tmp684, align 8, !dbg !2996, !tbaa !1876
  %ob_refcnt685 = getelementptr inbounds %struct._object, %struct._object* %456, i32 0, i32 0, !dbg !2998
  %457 = load i64, i64* %ob_refcnt685, align 8, !dbg !2999, !tbaa !1927
  %dec686 = add i64 %457, -1, !dbg !2999
  store i64 %dec686, i64* %ob_refcnt685, align 8, !dbg !2999, !tbaa !1927
  %cmp687 = icmp ne i64 %dec686, 0, !dbg !3000
  br i1 %cmp687, label %if.then.689, label %if.else.690, !dbg !3001

if.then.689:                                      ; preds = %do.body.683
  br label %if.end.693, !dbg !3002

if.else.690:                                      ; preds = %do.body.683
  %458 = load %struct._object*, %struct._object** %_py_decref_tmp684, align 8, !dbg !3004, !tbaa !1876
  %ob_type691 = getelementptr inbounds %struct._object, %struct._object* %458, i32 0, i32 1, !dbg !3006
  %459 = load %struct._typeobject*, %struct._typeobject** %ob_type691, align 8, !dbg !3006, !tbaa !2194
  %tp_dealloc692 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %459, i32 0, i32 4, !dbg !3007
  %460 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc692, align 8, !dbg !3007, !tbaa !2196
  %461 = load %struct._object*, %struct._object** %_py_decref_tmp684, align 8, !dbg !3008, !tbaa !1876
  call void %460(%struct._object* %461), !dbg !3009
  br label %if.end.693

if.end.693:                                       ; preds = %if.else.690, %if.then.689
  %462 = bitcast %struct._object** %_py_decref_tmp684 to i8*, !dbg !3010
  call void @llvm.lifetime.end(i64 8, i8* %462) #2, !dbg !3010
  br label %do.cond.694, !dbg !3011

do.cond.694:                                      ; preds = %if.end.693
  br label %do.end.695, !dbg !3012

do.end.695:                                       ; preds = %do.cond.694
  %463 = load i32, i32* %kind519, align 4, !dbg !3014, !tbaa !1883
  %464 = load i8*, i8** %translated, align 8, !dbg !3015, !tbaa !1876
  %465 = load i64, i64* %out547, align 8, !dbg !3016, !tbaa !1941
  %call696 = call %struct._object* @PyUnicode_FromKindAndData(i32 %463, i8* %464, i64 %465), !dbg !3017
  store %struct._object* %call696, %struct._object** %output, align 8, !dbg !3018, !tbaa !1876
  %466 = load i8*, i8** %translated, align 8, !dbg !3019, !tbaa !1876
  call void @PyMem_Free(i8* %466), !dbg !3020
  %467 = load %struct._object*, %struct._object** %output, align 8, !dbg !3021, !tbaa !1876
  %tobool697 = icmp ne %struct._object* %467, null, !dbg !3021
  br i1 %tobool697, label %if.end.699, label %if.then.698, !dbg !3023

if.then.698:                                      ; preds = %do.end.695
  store %struct._object* null, %struct._object** %retval, !dbg !3024
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.700, !dbg !3024

if.end.699:                                       ; preds = %do.end.695
  store i32 0, i32* %cleanup.dest.slot, !dbg !3025
  br label %cleanup.700, !dbg !3025

cleanup.700:                                      ; preds = %if.end.699, %if.then.698, %if.then.553
  %468 = bitcast i64* %out547 to i8*, !dbg !3026
  call void @llvm.lifetime.end(i64 8, i8* %468) #2, !dbg !3026
  %469 = bitcast i64* %in to i8*, !dbg !3026
  call void @llvm.lifetime.end(i64 8, i8* %469) #2, !dbg !3026
  %470 = bitcast i8** %in_str524 to i8*, !dbg !3026
  call void @llvm.lifetime.end(i64 8, i8* %470) #2, !dbg !3026
  %471 = bitcast i32* %kind519 to i8*, !dbg !3026
  call void @llvm.lifetime.end(i64 4, i8* %471) #2, !dbg !3026
  %472 = bitcast i8** %translated to i8*, !dbg !3026
  call void @llvm.lifetime.end(i64 8, i8* %472) #2, !dbg !3026
  %cleanup.dest.705 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.57

LeafBlock.57:                                     ; preds = %cleanup.700
  %SwitchLeaf58 = icmp eq i32 %cleanup.dest.705, 0
  br i1 %SwitchLeaf58, label %cleanup.cont.706, label %NewDefault.56

cleanup.cont.706:                                 ; preds = %LeafBlock.57
  br label %if.end.707

if.end.707:                                       ; preds = %cleanup.cont.706, %endscan
  br label %if.end.708

if.end.708:                                       ; preds = %if.end.707, %if.end.413
  %473 = load i32, i32* %seennl, align 4, !dbg !3028, !tbaa !1883
  %474 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self, align 8, !dbg !3029, !tbaa !1876
  %seennl709 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %474, i32 0, i32 3, !dbg !3030
  %bf.load710 = load i8, i8* %seennl709, align 8, !dbg !3031
  %bf.lshr711 = lshr i8 %bf.load710, 2, !dbg !3031
  %bf.clear712 = and i8 %bf.lshr711, 7, !dbg !3031
  %bf.cast713 = zext i8 %bf.clear712 to i32, !dbg !3031
  %or714 = or i32 %bf.cast713, %473, !dbg !3031
  %475 = trunc i32 %or714 to i8, !dbg !3031
  %bf.load715 = load i8, i8* %seennl709, align 8, !dbg !3031
  %bf.value = and i8 %475, 7, !dbg !3031
  %bf.shl716 = shl i8 %bf.value, 2, !dbg !3031
  %bf.clear717 = and i8 %bf.load715, -29, !dbg !3031
  %bf.set718 = or i8 %bf.clear717, %bf.shl716, !dbg !3031
  store i8 %bf.set718, i8* %seennl709, align 8, !dbg !3031
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !3031
  store i32 0, i32* %cleanup.dest.slot, !dbg !3032
  br label %cleanup.719, !dbg !3032

NewDefault.56:                                    ; preds = %LeafBlock.57
  br label %cleanup.719

cleanup.719:                                      ; preds = %NewDefault.56, %if.end.708, %if.then.331
  %476 = bitcast i32* %kind301 to i8*, !dbg !3033
  call void @llvm.lifetime.end(i64 4, i8* %476) #2, !dbg !3033
  %477 = bitcast i32* %only_lf to i8*, !dbg !3033
  call void @llvm.lifetime.end(i64 4, i8* %477) #2, !dbg !3033
  %478 = bitcast i32* %seennl to i8*, !dbg !3033
  call void @llvm.lifetime.end(i64 4, i8* %478) #2, !dbg !3033
  %479 = bitcast i64* %len to i8*, !dbg !3033
  call void @llvm.lifetime.end(i64 8, i8* %479) #2, !dbg !3033
  %480 = bitcast i8** %in_str to i8*, !dbg !3033
  call void @llvm.lifetime.end(i64 8, i8* %480) #2, !dbg !3033
  %cleanup.dest.724 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.64

NodeBlock.64:                                     ; preds = %cleanup.719
  %Pivot.65 = icmp slt i32 %cleanup.dest.724, 2
  br i1 %Pivot.65, label %LeafBlock.60, label %LeafBlock.62

LeafBlock.62:                                     ; preds = %NodeBlock.64
  %SwitchLeaf63 = icmp eq i32 %cleanup.dest.724, 2
  br i1 %SwitchLeaf63, label %error, label %NewDefault.59

LeafBlock.60:                                     ; preds = %NodeBlock.64
  %SwitchLeaf61 = icmp eq i32 %cleanup.dest.724, 0
  br i1 %SwitchLeaf61, label %cleanup.cont.725, label %NewDefault.59

cleanup.cont.725:                                 ; preds = %LeafBlock.60
  %481 = load %struct._object*, %struct._object** %output, align 8, !dbg !3035, !tbaa !1876
  store %struct._object* %481, %struct._object** %retval, !dbg !3036
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !3036

error:                                            ; preds = %LeafBlock.62, %LeafBlock.13, %LeafBlock.6
  br label %do.body.726, !dbg !3037

do.body.726:                                      ; preds = %error
  %482 = bitcast %struct._object** %_py_decref_tmp727 to i8*, !dbg !3038
  call void @llvm.lifetime.start(i64 8, i8* %482) #2, !dbg !3038
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp727, metadata !517, metadata !1880), !dbg !3040
  %483 = load %struct._object*, %struct._object** %output, align 8, !dbg !3041, !tbaa !1876
  store %struct._object* %483, %struct._object** %_py_decref_tmp727, align 8, !dbg !3040, !tbaa !1876
  %484 = load %struct._object*, %struct._object** %_py_decref_tmp727, align 8, !dbg !3042, !tbaa !1876
  %ob_refcnt728 = getelementptr inbounds %struct._object, %struct._object* %484, i32 0, i32 0, !dbg !3044
  %485 = load i64, i64* %ob_refcnt728, align 8, !dbg !3045, !tbaa !1927
  %dec729 = add i64 %485, -1, !dbg !3045
  store i64 %dec729, i64* %ob_refcnt728, align 8, !dbg !3045, !tbaa !1927
  %cmp730 = icmp ne i64 %dec729, 0, !dbg !3046
  br i1 %cmp730, label %if.then.732, label %if.else.733, !dbg !3047

if.then.732:                                      ; preds = %do.body.726
  br label %if.end.736, !dbg !3048

if.else.733:                                      ; preds = %do.body.726
  %486 = load %struct._object*, %struct._object** %_py_decref_tmp727, align 8, !dbg !3050, !tbaa !1876
  %ob_type734 = getelementptr inbounds %struct._object, %struct._object* %486, i32 0, i32 1, !dbg !3052
  %487 = load %struct._typeobject*, %struct._typeobject** %ob_type734, align 8, !dbg !3052, !tbaa !2194
  %tp_dealloc735 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %487, i32 0, i32 4, !dbg !3053
  %488 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc735, align 8, !dbg !3053, !tbaa !2196
  %489 = load %struct._object*, %struct._object** %_py_decref_tmp727, align 8, !dbg !3054, !tbaa !1876
  call void %488(%struct._object* %489), !dbg !3055
  br label %if.end.736

if.end.736:                                       ; preds = %if.else.733, %if.then.732
  %490 = bitcast %struct._object** %_py_decref_tmp727 to i8*, !dbg !3056
  call void @llvm.lifetime.end(i64 8, i8* %490) #2, !dbg !3056
  br label %do.cond.737, !dbg !3058

do.cond.737:                                      ; preds = %if.end.736
  br label %do.end.738, !dbg !3059

do.end.738:                                       ; preds = %do.cond.737
  store %struct._object* null, %struct._object** %retval, !dbg !3061
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.739, !dbg !3061

NewDefault.3:                                     ; preds = %LeafBlock.6, %LeafBlock.4
  br label %cleanup.739

NewDefault.10:                                    ; preds = %LeafBlock.13, %LeafBlock.11
  br label %cleanup.739

NewDefault.59:                                    ; preds = %LeafBlock.62, %LeafBlock.60
  br label %cleanup.739

cleanup.739:                                      ; preds = %NewDefault.59, %NewDefault.10, %NewDefault.3, %do.end.738, %cleanup.cont.725, %if.then.8, %if.then
  %491 = bitcast %struct.nldecoder_object** %self to i8*, !dbg !3062
  call void @llvm.lifetime.end(i64 8, i8* %491) #2, !dbg !3062
  %492 = bitcast i64* %output_len to i8*, !dbg !3062
  call void @llvm.lifetime.end(i64 8, i8* %492) #2, !dbg !3062
  %493 = bitcast %struct._object** %output to i8*, !dbg !3062
  call void @llvm.lifetime.end(i64 8, i8* %493) #2, !dbg !3062
  %494 = load %struct._object*, %struct._object** %retval, !dbg !3062
  ret %struct._object* %494, !dbg !3062
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare %struct._object* @PyObject_CallMethodObjArgs(%struct._object*, %struct._object*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @check_decoded(%struct._object* %decoded) #0 {
entry:
  %retval = alloca i32, align 4
  %decoded.addr = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  store %struct._object* %decoded, %struct._object** %decoded.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %decoded.addr, metadata !597, metadata !1880), !dbg !3063
  %0 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3064, !tbaa !1876
  %cmp = icmp eq %struct._object* %0, null, !dbg !3066
  br i1 %cmp, label %if.then, label %if.end, !dbg !3067

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3068
  br label %return, !dbg !3068

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3069, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !3070
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3070, !tbaa !2194
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19, !dbg !3071
  %3 = load i64, i64* %tp_flags, align 8, !dbg !3071, !tbaa !3072
  %and = and i64 %3, 268435456, !dbg !3073
  %cmp1 = icmp ne i64 %and, 0, !dbg !3074
  br i1 %cmp1, label %if.end.8, label %if.then.2, !dbg !3075

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3076, !tbaa !1876
  %5 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3077, !tbaa !1876
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !3078
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !3078, !tbaa !2194
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 1, !dbg !3079
  %7 = load i8*, i8** %tp_name, align 8, !dbg !3079, !tbaa !3080
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11, i32 0, i32 0), i8* %7), !dbg !3081
  br label %do.body, !dbg !3082

do.body:                                          ; preds = %if.then.2
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3083
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !3083
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !598, metadata !1880), !dbg !3085
  %9 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3086, !tbaa !1876
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !3085, !tbaa !1876
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3087, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !3089
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !3090, !tbaa !1927
  %dec = add i64 %11, -1, !dbg !3090
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3090, !tbaa !1927
  %cmp4 = icmp ne i64 %dec, 0, !dbg !3091
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !3092

if.then.5:                                        ; preds = %do.body
  br label %if.end.7, !dbg !3093

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3095, !tbaa !1876
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !3097
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !3097, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !3098
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3098, !tbaa !2196
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3099, !tbaa !1876
  call void %14(%struct._object* %15), !dbg !3100
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.5
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3101
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !3101
  br label %do.end, !dbg !3103

do.end:                                           ; preds = %if.end.7
  store i32 -1, i32* %retval, !dbg !3104
  br label %return, !dbg !3104

if.end.8:                                         ; preds = %if.end
  %17 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3105, !tbaa !1876
  %18 = bitcast %struct._object* %17 to %struct.PyASCIIObject*, !dbg !3106
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %18, i32 0, i32 3, !dbg !3107
  %19 = bitcast %struct.anon* %state to i32*, !dbg !3108
  %bf.load = load i32, i32* %19, align 4, !dbg !3108
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !3108
  %bf.clear = and i32 %bf.lshr, 1, !dbg !3108
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !3109
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3109

cond.true:                                        ; preds = %if.end.8
  br label %cond.end, !dbg !3110

cond.false:                                       ; preds = %if.end.8
  %20 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3112, !tbaa !1876
  %call9 = call i32 @_PyUnicode_Ready(%struct._object* %20), !dbg !3114
  br label %cond.end, !dbg !3109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call9, %cond.false ], !dbg !3109
  %cmp10 = icmp slt i32 %cond, 0, !dbg !3115
  br i1 %cmp10, label %if.then.11, label %if.end.23, !dbg !3118

if.then.11:                                       ; preds = %cond.end
  br label %do.body.12, !dbg !3119

do.body.12:                                       ; preds = %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !3120
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !3120
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp13, metadata !602, metadata !1880), !dbg !3122
  %22 = load %struct._object*, %struct._object** %decoded.addr, align 8, !dbg !3123, !tbaa !1876
  store %struct._object* %22, %struct._object** %_py_decref_tmp13, align 8, !dbg !3122, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !3124, !tbaa !1876
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !3126
  %24 = load i64, i64* %ob_refcnt14, align 8, !dbg !3127, !tbaa !1927
  %dec15 = add i64 %24, -1, !dbg !3127
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !3127, !tbaa !1927
  %cmp16 = icmp ne i64 %dec15, 0, !dbg !3128
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !3129

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21, !dbg !3130

if.else.18:                                       ; preds = %do.body.12
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !3132, !tbaa !1876
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !3134
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !3134, !tbaa !2194
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !3135
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !3135, !tbaa !2196
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !3136, !tbaa !1876
  call void %27(%struct._object* %28), !dbg !3137
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %29 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !3138
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3138
  br label %do.end.22, !dbg !3140

do.end.22:                                        ; preds = %if.end.21
  store i32 -1, i32* %retval, !dbg !3141
  br label %return, !dbg !3141

if.end.23:                                        ; preds = %cond.end
  store i32 0, i32* %retval, !dbg !3142
  br label %return, !dbg !3142

return:                                           ; preds = %if.end.23, %do.end.22, %do.end, %if.then
  %30 = load i32, i32* %retval, !dbg !3143
  ret i32 %30, !dbg !3143
}

declare %struct._object* @PyUnicode_New(i64, i32) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

declare %struct._object* @PyUnicode_Substring(%struct._object*, i64, i64) #3

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #4

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

declare %struct._object* @PyUnicode_FromKindAndData(i32, i8*, i64) #3

declare void @PyMem_Free(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @incrementalnewlinedecoder_dealloc(%struct.nldecoder_object* %self) #0 {
entry:
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !610, metadata !1880), !dbg !3144
  br label %do.body, !dbg !3145

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3146
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3146
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !611, metadata !1880), !dbg !3148
  %1 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3149, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %1, i32 0, i32 1, !dbg !3150
  %2 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !3150, !tbaa !1897
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !3148, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3151, !tbaa !1876
  %cmp = icmp ne %struct._object* %3, null, !dbg !3152
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !3153

if.then:                                          ; preds = %do.body
  %4 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3154, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %4, i32 0, i32 1, !dbg !3156
  store %struct._object* null, %struct._object** %decoder1, align 8, !dbg !3157, !tbaa !1897
  br label %do.body.2, !dbg !3158

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3159
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !3159
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !613, metadata !1880), !dbg !3161
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3162, !tbaa !1876
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !3161, !tbaa !1876
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3163, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !3165
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !3166, !tbaa !1927
  %dec = add i64 %8, -1, !dbg !3166
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3166, !tbaa !1927
  %cmp3 = icmp ne i64 %dec, 0, !dbg !3167
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !3168

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !3169

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3171, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !3173
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3173, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !3174
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3174, !tbaa !2196
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3175, !tbaa !1876
  call void %11(%struct._object* %12), !dbg !3176
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3177
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !3177
  br label %do.cond, !dbg !3179

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3180

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !3182

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3184
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !3184
  br label %do.end.7, !dbg !3187

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !3188

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !3189
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !3189
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !617, metadata !1880), !dbg !3191
  %16 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3192, !tbaa !1876
  %errors = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %16, i32 0, i32 2, !dbg !3193
  %17 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3193, !tbaa !3194
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !3191, !tbaa !1876
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !3195, !tbaa !1876
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !3196
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !3197

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3198, !tbaa !1876
  %errors12 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %19, i32 0, i32 2, !dbg !3200
  store %struct._object* null, %struct._object** %errors12, align 8, !dbg !3201, !tbaa !3194
  br label %do.body.13, !dbg !3202

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !3203
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !3203
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !619, metadata !1880), !dbg !3205
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !3206, !tbaa !1876
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !3205, !tbaa !1876
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3207, !tbaa !1876
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !3209
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !3210, !tbaa !1927
  %dec16 = add i64 %23, -1, !dbg !3210
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !3210, !tbaa !1927
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !3211
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !3212

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !3213

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3215, !tbaa !1876
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !3217
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !3217, !tbaa !2194
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !3218
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !3218, !tbaa !2196
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !3219, !tbaa !1876
  call void %26(%struct._object* %27), !dbg !3220
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !3221
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !3221
  br label %do.cond.23, !dbg !3223

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !3224

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !3226

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !3228
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3228
  br label %do.end.27, !dbg !3229

do.end.27:                                        ; preds = %if.end.25
  %30 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3230, !tbaa !1876
  %31 = bitcast %struct.nldecoder_object* %30 to %struct._object*, !dbg !3231
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !3232
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !3232, !tbaa !2194
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 38, !dbg !3233
  %33 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3233, !tbaa !3234
  %34 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3235, !tbaa !1876
  %35 = bitcast %struct.nldecoder_object* %34 to %struct._object*, !dbg !3236
  %36 = bitcast %struct._object* %35 to i8*, !dbg !3236
  call void %33(i8* %36), !dbg !3237
  ret void, !dbg !3238
}

; Function Attrs: nounwind uwtable
define internal i32 @incrementalnewlinedecoder_init(%struct.nldecoder_object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %decoder = alloca %struct._object*, align 8
  %translate = alloca i32, align 4
  %errors = alloca %struct._object*, align 8
  %kwlist = alloca [4 x i8*], align 16
  %cleanup.dest.slot = alloca i32
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !674, metadata !1880), !dbg !3239
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !675, metadata !1880), !dbg !3240
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !676, metadata !1880), !dbg !3241
  %0 = bitcast %struct._object** %decoder to i8*, !dbg !3242
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3242
  call void @llvm.dbg.declare(metadata %struct._object** %decoder, metadata !677, metadata !1880), !dbg !3243
  %1 = bitcast i32* %translate to i8*, !dbg !3244
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !3244
  call void @llvm.dbg.declare(metadata i32* %translate, metadata !678, metadata !1880), !dbg !3245
  %2 = bitcast %struct._object** %errors to i8*, !dbg !3246
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3246
  call void @llvm.dbg.declare(metadata %struct._object** %errors, metadata !679, metadata !1880), !dbg !3247
  store %struct._object* null, %struct._object** %errors, align 8, !dbg !3247, !tbaa !1876
  %3 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !3248
  call void @llvm.lifetime.start(i64 32, i8* %3) #2, !dbg !3248
  call void @llvm.dbg.declare(metadata [4 x i8*]* %kwlist, metadata !680, metadata !1880), !dbg !3249
  %4 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !3249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast ([4 x i8*]* @incrementalnewlinedecoder_init.kwlist to i8*), i64 32, i32 16, i1 false), !dbg !3249
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3250, !tbaa !1876
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3252, !tbaa !1876
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %kwlist, i32 0, i32 0, !dbg !3253
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %5, %struct._object* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i8** %arraydecay, %struct._object** %decoder, i32* %translate, %struct._object** %errors), !dbg !3254
  %tobool = icmp ne i32 %call, 0, !dbg !3254
  br i1 %tobool, label %if.end, label %if.then, !dbg !3255

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3256
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3256

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !3257, !tbaa !1876
  %8 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3258, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %8, i32 0, i32 1, !dbg !3259
  store %struct._object* %7, %struct._object** %decoder1, align 8, !dbg !3260, !tbaa !1897
  %9 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !3261, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !3262
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !3263, !tbaa !1927
  %inc = add i64 %10, 1, !dbg !3263
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3263, !tbaa !1927
  %11 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3264, !tbaa !1876
  %cmp = icmp eq %struct._object* %11, null, !dbg !3266
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !3267

if.then.2:                                        ; preds = %if.end
  %call3 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0)), !dbg !3268
  %12 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3270, !tbaa !1876
  %errors4 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %12, i32 0, i32 2, !dbg !3271
  store %struct._object* %call3, %struct._object** %errors4, align 8, !dbg !3272, !tbaa !3194
  %13 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3273, !tbaa !1876
  %errors5 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %13, i32 0, i32 2, !dbg !3275
  %14 = load %struct._object*, %struct._object** %errors5, align 8, !dbg !3275, !tbaa !3194
  %cmp6 = icmp eq %struct._object* %14, null, !dbg !3276
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !3277

if.then.7:                                        ; preds = %if.then.2
  store i32 -1, i32* %retval, !dbg !3278
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3278

if.end.8:                                         ; preds = %if.then.2
  br label %if.end.12, !dbg !3279

if.else:                                          ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3280, !tbaa !1876
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !3282
  %16 = load i64, i64* %ob_refcnt9, align 8, !dbg !3283, !tbaa !1927
  %inc10 = add i64 %16, 1, !dbg !3283
  store i64 %inc10, i64* %ob_refcnt9, align 8, !dbg !3283, !tbaa !1927
  %17 = load %struct._object*, %struct._object** %errors, align 8, !dbg !3284, !tbaa !1876
  %18 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3285, !tbaa !1876
  %errors11 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %18, i32 0, i32 2, !dbg !3286
  store %struct._object* %17, %struct._object** %errors11, align 8, !dbg !3287, !tbaa !3194
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.end.8
  %19 = load i32, i32* %translate, align 4, !dbg !3288, !tbaa !1883
  %20 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3289, !tbaa !1876
  %translate13 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %20, i32 0, i32 3, !dbg !3290
  %21 = trunc i32 %19 to i8, !dbg !3291
  %bf.load = load i8, i8* %translate13, align 8, !dbg !3291
  %bf.value = and i8 %21, 1, !dbg !3291
  %bf.shl = shl i8 %bf.value, 1, !dbg !3291
  %bf.clear = and i8 %bf.load, -3, !dbg !3291
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !3291
  store i8 %bf.set, i8* %translate13, align 8, !dbg !3291
  %bf.result.shl = shl i8 %bf.value, 7, !dbg !3291
  %bf.result.ashr = ashr i8 %bf.result.shl, 7, !dbg !3291
  %bf.result.cast = sext i8 %bf.result.ashr to i32, !dbg !3291
  %22 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3292, !tbaa !1876
  %seennl = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %22, i32 0, i32 3, !dbg !3293
  %bf.load14 = load i8, i8* %seennl, align 8, !dbg !3294
  %bf.clear15 = and i8 %bf.load14, -29, !dbg !3294
  store i8 %bf.clear15, i8* %seennl, align 8, !dbg !3294
  %23 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !3295, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %23, i32 0, i32 3, !dbg !3296
  %bf.load16 = load i8, i8* %pendingcr, align 8, !dbg !3297
  %bf.clear17 = and i8 %bf.load16, -2, !dbg !3297
  store i8 %bf.clear17, i8* %pendingcr, align 8, !dbg !3297
  store i32 0, i32* %retval, !dbg !3298
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3298

cleanup:                                          ; preds = %if.end.12, %if.then.7, %if.then
  %24 = bitcast [4 x i8*]* %kwlist to i8*, !dbg !3299
  call void @llvm.lifetime.end(i64 32, i8* %24) #2, !dbg !3299
  %25 = bitcast %struct._object** %errors to i8*, !dbg !3299
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !3299
  %26 = bitcast i32* %translate to i8*, !dbg !3299
  call void @llvm.lifetime.end(i64 4, i8* %26) #2, !dbg !3299
  %27 = bitcast %struct._object** %decoder to i8*, !dbg !3299
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !3299
  %28 = load i32, i32* %retval, !dbg !3299
  ret i32 %28, !dbg !3299
}

declare %struct._object* @PyType_GenericNew(%struct._typeobject*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define i64 @_PyIO_find_line_ending(i32 %translated, i32 %universal, %struct._object* %readnl, i32 %kind, i8* %start, i8* %end, i64* %consumed) #0 {
entry:
  %retval = alloca i64, align 8
  %translated.addr = alloca i32, align 4
  %universal.addr = alloca i32, align 4
  %readnl.addr = alloca %struct._object*, align 8
  %kind.addr = alloca i32, align 4
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %consumed.addr = alloca i64*, align 8
  %len = alloca i64, align 8
  %pos = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %s = alloca i8*, align 8
  %ch = alloca i32, align 4
  %readnl_len = alloca i64, align 8
  %nl = alloca i8*, align 8
  %pos114 = alloca i8*, align 8
  %s130 = alloca i8*, align 8
  %e = alloca i8*, align 8
  %pos133 = alloca i8*, align 8
  %i = alloca i64, align 8
  %pos142 = alloca i8*, align 8
  store i32 %translated, i32* %translated.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %translated.addr, metadata !523, metadata !1880), !dbg !3300
  store i32 %universal, i32* %universal.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %universal.addr, metadata !524, metadata !1880), !dbg !3301
  store %struct._object* %readnl, %struct._object** %readnl.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %readnl.addr, metadata !525, metadata !1880), !dbg !3302
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !526, metadata !1880), !dbg !3303
  store i8* %start, i8** %start.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !527, metadata !1880), !dbg !3304
  store i8* %end, i8** %end.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !528, metadata !1880), !dbg !3305
  store i64* %consumed, i64** %consumed.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i64** %consumed.addr, metadata !529, metadata !1880), !dbg !3306
  %0 = bitcast i64* %len to i8*, !dbg !3307
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3307
  call void @llvm.dbg.declare(metadata i64* %len, metadata !530, metadata !1880), !dbg !3308
  %1 = load i8*, i8** %end.addr, align 8, !dbg !3309, !tbaa !1876
  %2 = load i8*, i8** %start.addr, align 8, !dbg !3310, !tbaa !1876
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !3311
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !3311
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3311
  %3 = load i32, i32* %kind.addr, align 4, !dbg !3312, !tbaa !1883
  %conv = sext i32 %3 to i64, !dbg !3312
  %div = sdiv i64 %sub.ptr.sub, %conv, !dbg !3313
  store i64 %div, i64* %len, align 8, !dbg !3308, !tbaa !1941
  %4 = load i32, i32* %translated.addr, align 4, !dbg !3314, !tbaa !1883
  %tobool = icmp ne i32 %4, 0, !dbg !3314
  br i1 %tobool, label %if.then, label %if.else.8, !dbg !3315

if.then:                                          ; preds = %entry
  %5 = bitcast i8** %pos to i8*, !dbg !3316
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !3316
  call void @llvm.dbg.declare(metadata i8** %pos, metadata !531, metadata !1880), !dbg !3317
  %6 = load i32, i32* %kind.addr, align 4, !dbg !3318, !tbaa !1883
  %7 = load i8*, i8** %start.addr, align 8, !dbg !3319, !tbaa !1876
  %8 = load i8*, i8** %end.addr, align 8, !dbg !3320, !tbaa !1876
  %call = call i8* @find_control_char(i32 %6, i8* %7, i8* %8, i32 10), !dbg !3321
  store i8* %call, i8** %pos, align 8, !dbg !3317, !tbaa !1876
  %9 = load i8*, i8** %pos, align 8, !dbg !3322, !tbaa !1876
  %cmp = icmp ne i8* %9, null, !dbg !3324
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !3325

if.then.2:                                        ; preds = %if.then
  %10 = load i8*, i8** %pos, align 8, !dbg !3326, !tbaa !1876
  %11 = load i8*, i8** %start.addr, align 8, !dbg !3327, !tbaa !1876
  %sub.ptr.lhs.cast3 = ptrtoint i8* %10 to i64, !dbg !3328
  %sub.ptr.rhs.cast4 = ptrtoint i8* %11 to i64, !dbg !3328
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !3328
  %12 = load i32, i32* %kind.addr, align 4, !dbg !3329, !tbaa !1883
  %conv6 = sext i32 %12 to i64, !dbg !3329
  %div7 = sdiv i64 %sub.ptr.sub5, %conv6, !dbg !3330
  %add = add i64 %div7, 1, !dbg !3331
  store i64 %add, i64* %retval, !dbg !3332
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3332

if.else:                                          ; preds = %if.then
  %13 = load i64, i64* %len, align 8, !dbg !3333, !tbaa !1941
  %14 = load i64*, i64** %consumed.addr, align 8, !dbg !3335, !tbaa !1876
  store i64 %13, i64* %14, align 8, !dbg !3336, !tbaa !1941
  store i64 -1, i64* %retval, !dbg !3337
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3337

cleanup:                                          ; preds = %if.else, %if.then.2
  %15 = bitcast i8** %pos to i8*, !dbg !3338
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !3338
  br label %cleanup.213

if.else.8:                                        ; preds = %entry
  %16 = load i32, i32* %universal.addr, align 4, !dbg !3339, !tbaa !1883
  %tobool9 = icmp ne i32 %16, 0, !dbg !3339
  br i1 %tobool9, label %if.then.10, label %if.else.94, !dbg !3340

if.then.10:                                       ; preds = %if.else.8
  %17 = bitcast i8** %s to i8*, !dbg !3341
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !3341
  call void @llvm.dbg.declare(metadata i8** %s, metadata !534, metadata !1880), !dbg !3342
  %18 = load i8*, i8** %start.addr, align 8, !dbg !3343, !tbaa !1876
  store i8* %18, i8** %s, align 8, !dbg !3342, !tbaa !1876
  br label %for.cond, !dbg !3344

for.cond:                                         ; preds = %cleanup.cont, %if.then.10
  %19 = bitcast i32* %ch to i8*, !dbg !3345
  call void @llvm.lifetime.start(i64 4, i8* %19) #2, !dbg !3345
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !537, metadata !1880), !dbg !3346
  br label %while.cond, !dbg !3347

while.cond:                                       ; preds = %while.body, %for.cond
  %20 = load i32, i32* %kind.addr, align 4, !dbg !3348, !tbaa !1883
  %cmp11 = icmp eq i32 %20, 1, !dbg !3351
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !3352

cond.true:                                        ; preds = %while.cond
  %21 = load i8*, i8** %s, align 8, !dbg !3353, !tbaa !1876
  %arrayidx = getelementptr i8, i8* %21, i64 0, !dbg !3355
  %22 = load i8, i8* %arrayidx, align 1, !dbg !3355, !tbaa !2064
  %conv13 = zext i8 %22 to i32, !dbg !3355
  br label %cond.end.21, !dbg !3352

cond.false:                                       ; preds = %while.cond
  %23 = load i32, i32* %kind.addr, align 4, !dbg !3356, !tbaa !1883
  %cmp14 = icmp eq i32 %23, 2, !dbg !3358
  br i1 %cmp14, label %cond.true.16, label %cond.false.19, !dbg !3359

cond.true.16:                                     ; preds = %cond.false
  %24 = load i8*, i8** %s, align 8, !dbg !3360, !tbaa !1876
  %25 = bitcast i8* %24 to i16*, !dbg !3362
  %arrayidx17 = getelementptr i16, i16* %25, i64 0, !dbg !3363
  %26 = load i16, i16* %arrayidx17, align 2, !dbg !3363, !tbaa !2102
  %conv18 = zext i16 %26 to i32, !dbg !3363
  br label %cond.end, !dbg !3359

cond.false.19:                                    ; preds = %cond.false
  %27 = load i8*, i8** %s, align 8, !dbg !3364, !tbaa !1876
  %28 = bitcast i8* %27 to i32*, !dbg !3366
  %arrayidx20 = getelementptr i32, i32* %28, i64 0, !dbg !3367
  %29 = load i32, i32* %arrayidx20, align 4, !dbg !3367, !tbaa !1883
  br label %cond.end, !dbg !3359

cond.end:                                         ; preds = %cond.false.19, %cond.true.16
  %cond = phi i32 [ %conv18, %cond.true.16 ], [ %29, %cond.false.19 ], !dbg !3359
  br label %cond.end.21, !dbg !3368

cond.end.21:                                      ; preds = %cond.end, %cond.true
  %cond22 = phi i32 [ %conv13, %cond.true ], [ %cond, %cond.end ], !dbg !3352
  %cmp23 = icmp ugt i32 %cond22, 13, !dbg !3371
  br i1 %cmp23, label %while.body, label %while.end, !dbg !3347

while.body:                                       ; preds = %cond.end.21
  %30 = load i32, i32* %kind.addr, align 4, !dbg !3374, !tbaa !1883
  %31 = load i8*, i8** %s, align 8, !dbg !3375, !tbaa !1876
  %idx.ext = sext i32 %30 to i64, !dbg !3375
  %add.ptr = getelementptr i8, i8* %31, i64 %idx.ext, !dbg !3375
  store i8* %add.ptr, i8** %s, align 8, !dbg !3375, !tbaa !1876
  br label %while.cond, !dbg !3347

while.end:                                        ; preds = %cond.end.21
  %32 = load i8*, i8** %s, align 8, !dbg !3376, !tbaa !1876
  %33 = load i8*, i8** %end.addr, align 8, !dbg !3378, !tbaa !1876
  %cmp25 = icmp uge i8* %32, %33, !dbg !3379
  br i1 %cmp25, label %if.then.27, label %if.end, !dbg !3380

if.then.27:                                       ; preds = %while.end
  %34 = load i64, i64* %len, align 8, !dbg !3381, !tbaa !1941
  %35 = load i64*, i64** %consumed.addr, align 8, !dbg !3383, !tbaa !1876
  store i64 %34, i64* %35, align 8, !dbg !3384, !tbaa !1941
  store i64 -1, i64* %retval, !dbg !3385
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3385

if.end:                                           ; preds = %while.end
  %36 = load i32, i32* %kind.addr, align 4, !dbg !3386, !tbaa !1883
  %cmp28 = icmp eq i32 %36, 1, !dbg !3387
  br i1 %cmp28, label %cond.true.30, label %cond.false.33, !dbg !3388

cond.true.30:                                     ; preds = %if.end
  %37 = load i8*, i8** %s, align 8, !dbg !3389, !tbaa !1876
  %arrayidx31 = getelementptr i8, i8* %37, i64 0, !dbg !3390
  %38 = load i8, i8* %arrayidx31, align 1, !dbg !3390, !tbaa !2064
  %conv32 = zext i8 %38 to i32, !dbg !3390
  br label %cond.end.43, !dbg !3388

cond.false.33:                                    ; preds = %if.end
  %39 = load i32, i32* %kind.addr, align 4, !dbg !3391, !tbaa !1883
  %cmp34 = icmp eq i32 %39, 2, !dbg !3392
  br i1 %cmp34, label %cond.true.36, label %cond.false.39, !dbg !3393

cond.true.36:                                     ; preds = %cond.false.33
  %40 = load i8*, i8** %s, align 8, !dbg !3394, !tbaa !1876
  %41 = bitcast i8* %40 to i16*, !dbg !3395
  %arrayidx37 = getelementptr i16, i16* %41, i64 0, !dbg !3396
  %42 = load i16, i16* %arrayidx37, align 2, !dbg !3396, !tbaa !2102
  %conv38 = zext i16 %42 to i32, !dbg !3396
  br label %cond.end.41, !dbg !3393

cond.false.39:                                    ; preds = %cond.false.33
  %43 = load i8*, i8** %s, align 8, !dbg !3397, !tbaa !1876
  %44 = bitcast i8* %43 to i32*, !dbg !3398
  %arrayidx40 = getelementptr i32, i32* %44, i64 0, !dbg !3399
  %45 = load i32, i32* %arrayidx40, align 4, !dbg !3399, !tbaa !1883
  br label %cond.end.41, !dbg !3393

cond.end.41:                                      ; preds = %cond.false.39, %cond.true.36
  %cond42 = phi i32 [ %conv38, %cond.true.36 ], [ %45, %cond.false.39 ], !dbg !3393
  br label %cond.end.43, !dbg !3400

cond.end.43:                                      ; preds = %cond.end.41, %cond.true.30
  %cond44 = phi i32 [ %conv32, %cond.true.30 ], [ %cond42, %cond.end.41 ], !dbg !3388
  store i32 %cond44, i32* %ch, align 4, !dbg !3402, !tbaa !1883
  %46 = load i32, i32* %kind.addr, align 4, !dbg !3404, !tbaa !1883
  %47 = load i8*, i8** %s, align 8, !dbg !3405, !tbaa !1876
  %idx.ext45 = sext i32 %46 to i64, !dbg !3405
  %add.ptr46 = getelementptr i8, i8* %47, i64 %idx.ext45, !dbg !3405
  store i8* %add.ptr46, i8** %s, align 8, !dbg !3405, !tbaa !1876
  %48 = load i32, i32* %ch, align 4, !dbg !3406, !tbaa !1883
  %cmp47 = icmp eq i32 %48, 10, !dbg !3408
  br i1 %cmp47, label %if.then.49, label %if.end.55, !dbg !3409

if.then.49:                                       ; preds = %cond.end.43
  %49 = load i8*, i8** %s, align 8, !dbg !3410, !tbaa !1876
  %50 = load i8*, i8** %start.addr, align 8, !dbg !3411, !tbaa !1876
  %sub.ptr.lhs.cast50 = ptrtoint i8* %49 to i64, !dbg !3412
  %sub.ptr.rhs.cast51 = ptrtoint i8* %50 to i64, !dbg !3412
  %sub.ptr.sub52 = sub i64 %sub.ptr.lhs.cast50, %sub.ptr.rhs.cast51, !dbg !3412
  %51 = load i32, i32* %kind.addr, align 4, !dbg !3413, !tbaa !1883
  %conv53 = sext i32 %51 to i64, !dbg !3413
  %div54 = sdiv i64 %sub.ptr.sub52, %conv53, !dbg !3414
  store i64 %div54, i64* %retval, !dbg !3415
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3415

if.end.55:                                        ; preds = %cond.end.43
  %52 = load i32, i32* %ch, align 4, !dbg !3416, !tbaa !1883
  %cmp56 = icmp eq i32 %52, 13, !dbg !3418
  br i1 %cmp56, label %if.then.58, label %if.end.91, !dbg !3419

if.then.58:                                       ; preds = %if.end.55
  %53 = load i32, i32* %kind.addr, align 4, !dbg !3420, !tbaa !1883
  %cmp59 = icmp eq i32 %53, 1, !dbg !3423
  br i1 %cmp59, label %cond.true.61, label %cond.false.64, !dbg !3424

cond.true.61:                                     ; preds = %if.then.58
  %54 = load i8*, i8** %s, align 8, !dbg !3425, !tbaa !1876
  %arrayidx62 = getelementptr i8, i8* %54, i64 0, !dbg !3427
  %55 = load i8, i8* %arrayidx62, align 1, !dbg !3427, !tbaa !2064
  %conv63 = zext i8 %55 to i32, !dbg !3427
  br label %cond.end.74, !dbg !3424

cond.false.64:                                    ; preds = %if.then.58
  %56 = load i32, i32* %kind.addr, align 4, !dbg !3428, !tbaa !1883
  %cmp65 = icmp eq i32 %56, 2, !dbg !3430
  br i1 %cmp65, label %cond.true.67, label %cond.false.70, !dbg !3431

cond.true.67:                                     ; preds = %cond.false.64
  %57 = load i8*, i8** %s, align 8, !dbg !3432, !tbaa !1876
  %58 = bitcast i8* %57 to i16*, !dbg !3434
  %arrayidx68 = getelementptr i16, i16* %58, i64 0, !dbg !3435
  %59 = load i16, i16* %arrayidx68, align 2, !dbg !3435, !tbaa !2102
  %conv69 = zext i16 %59 to i32, !dbg !3435
  br label %cond.end.72, !dbg !3431

cond.false.70:                                    ; preds = %cond.false.64
  %60 = load i8*, i8** %s, align 8, !dbg !3436, !tbaa !1876
  %61 = bitcast i8* %60 to i32*, !dbg !3438
  %arrayidx71 = getelementptr i32, i32* %61, i64 0, !dbg !3439
  %62 = load i32, i32* %arrayidx71, align 4, !dbg !3439, !tbaa !1883
  br label %cond.end.72, !dbg !3431

cond.end.72:                                      ; preds = %cond.false.70, %cond.true.67
  %cond73 = phi i32 [ %conv69, %cond.true.67 ], [ %62, %cond.false.70 ], !dbg !3431
  br label %cond.end.74, !dbg !3440

cond.end.74:                                      ; preds = %cond.end.72, %cond.true.61
  %cond75 = phi i32 [ %conv63, %cond.true.61 ], [ %cond73, %cond.end.72 ], !dbg !3424
  %cmp76 = icmp eq i32 %cond75, 10, !dbg !3443
  br i1 %cmp76, label %if.then.78, label %if.else.85, !dbg !3446

if.then.78:                                       ; preds = %cond.end.74
  %63 = load i8*, i8** %s, align 8, !dbg !3447, !tbaa !1876
  %64 = load i8*, i8** %start.addr, align 8, !dbg !3448, !tbaa !1876
  %sub.ptr.lhs.cast79 = ptrtoint i8* %63 to i64, !dbg !3449
  %sub.ptr.rhs.cast80 = ptrtoint i8* %64 to i64, !dbg !3449
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80, !dbg !3449
  %65 = load i32, i32* %kind.addr, align 4, !dbg !3450, !tbaa !1883
  %conv82 = sext i32 %65 to i64, !dbg !3450
  %div83 = sdiv i64 %sub.ptr.sub81, %conv82, !dbg !3451
  %add84 = add i64 %div83, 1, !dbg !3452
  store i64 %add84, i64* %retval, !dbg !3453
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3453

if.else.85:                                       ; preds = %cond.end.74
  %66 = load i8*, i8** %s, align 8, !dbg !3454, !tbaa !1876
  %67 = load i8*, i8** %start.addr, align 8, !dbg !3455, !tbaa !1876
  %sub.ptr.lhs.cast86 = ptrtoint i8* %66 to i64, !dbg !3456
  %sub.ptr.rhs.cast87 = ptrtoint i8* %67 to i64, !dbg !3456
  %sub.ptr.sub88 = sub i64 %sub.ptr.lhs.cast86, %sub.ptr.rhs.cast87, !dbg !3456
  %68 = load i32, i32* %kind.addr, align 4, !dbg !3457, !tbaa !1883
  %conv89 = sext i32 %68 to i64, !dbg !3457
  %div90 = sdiv i64 %sub.ptr.sub88, %conv89, !dbg !3458
  store i64 %div90, i64* %retval, !dbg !3459
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !3459

if.end.91:                                        ; preds = %if.end.55
  store i32 0, i32* %cleanup.dest.slot, !dbg !3460
  br label %cleanup.92, !dbg !3460

cleanup.92:                                       ; preds = %if.end.91, %if.else.85, %if.then.78, %if.then.49, %if.then.27
  %69 = bitcast i32* %ch to i8*, !dbg !3461
  call void @llvm.lifetime.end(i64 4, i8* %69) #2, !dbg !3461
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup.92
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.cond, !dbg !3463

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.93

cleanup.93:                                       ; preds = %NewDefault
  %70 = bitcast i8** %s to i8*, !dbg !3464
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !3464
  br label %cleanup.213

if.else.94:                                       ; preds = %if.else.8
  %71 = bitcast i64* %readnl_len to i8*, !dbg !3465
  call void @llvm.lifetime.start(i64 8, i8* %71) #2, !dbg !3465
  call void @llvm.dbg.declare(metadata i64* %readnl_len, metadata !541, metadata !1880), !dbg !3466
  %72 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3467, !tbaa !1876
  %73 = bitcast %struct._object* %72 to %struct.PyASCIIObject*, !dbg !3468
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %73, i32 0, i32 1, !dbg !3469
  %74 = load i64, i64* %length, align 8, !dbg !3469, !tbaa !1937
  store i64 %74, i64* %readnl_len, align 8, !dbg !3466, !tbaa !1941
  %75 = bitcast i8** %nl to i8*, !dbg !3470
  call void @llvm.lifetime.start(i64 8, i8* %75) #2, !dbg !3470
  call void @llvm.dbg.declare(metadata i8** %nl, metadata !543, metadata !1880), !dbg !3471
  %76 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3472, !tbaa !1876
  %77 = bitcast %struct._object* %76 to %struct.PyASCIIObject*, !dbg !3473
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %77, i32 0, i32 3, !dbg !3474
  %78 = bitcast %struct.anon* %state to i32*, !dbg !3475
  %bf.load = load i32, i32* %78, align 4, !dbg !3475
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !3475
  %bf.clear = and i32 %bf.lshr, 1, !dbg !3475
  %tobool95 = icmp ne i32 %bf.clear, 0, !dbg !3476
  br i1 %tobool95, label %cond.true.96, label %cond.false.108, !dbg !3476

cond.true.96:                                     ; preds = %if.else.94
  %79 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3477, !tbaa !1876
  %80 = bitcast %struct._object* %79 to %struct.PyASCIIObject*, !dbg !3479
  %state97 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %80, i32 0, i32 3, !dbg !3480
  %81 = bitcast %struct.anon* %state97 to i32*, !dbg !3481
  %bf.load98 = load i32, i32* %81, align 4, !dbg !3481
  %bf.lshr99 = lshr i32 %bf.load98, 6, !dbg !3481
  %bf.clear100 = and i32 %bf.lshr99, 1, !dbg !3481
  %tobool101 = icmp ne i32 %bf.clear100, 0, !dbg !3482
  br i1 %tobool101, label %cond.true.102, label %cond.false.104, !dbg !3482

cond.true.102:                                    ; preds = %cond.true.96
  %82 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3483, !tbaa !1876
  %83 = bitcast %struct._object* %82 to %struct.PyASCIIObject*, !dbg !3485
  %add.ptr103 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %83, i64 1, !dbg !3486
  %84 = bitcast %struct.PyASCIIObject* %add.ptr103 to i8*, !dbg !3487
  br label %cond.end.106, !dbg !3482

cond.false.104:                                   ; preds = %cond.true.96
  %85 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3488, !tbaa !1876
  %86 = bitcast %struct._object* %85 to %struct.PyCompactUnicodeObject*, !dbg !3490
  %add.ptr105 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %86, i64 1, !dbg !3491
  %87 = bitcast %struct.PyCompactUnicodeObject* %add.ptr105 to i8*, !dbg !3492
  br label %cond.end.106, !dbg !3482

cond.end.106:                                     ; preds = %cond.false.104, %cond.true.102
  %cond107 = phi i8* [ %84, %cond.true.102 ], [ %87, %cond.false.104 ], !dbg !3482
  br label %cond.end.109, !dbg !3493

cond.false.108:                                   ; preds = %if.else.94
  %88 = load %struct._object*, %struct._object** %readnl.addr, align 8, !dbg !3496, !tbaa !1876
  %89 = bitcast %struct._object* %88 to %struct.PyUnicodeObject*, !dbg !3498
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %89, i32 0, i32 1, !dbg !3499
  %any = bitcast %union.anon* %data to i8**, !dbg !3500
  %90 = load i8*, i8** %any, align 8, !dbg !3500, !tbaa !1876
  br label %cond.end.109, !dbg !3476

cond.end.109:                                     ; preds = %cond.false.108, %cond.end.106
  %cond110 = phi i8* [ %cond107, %cond.end.106 ], [ %90, %cond.false.108 ], !dbg !3476
  store i8* %cond110, i8** %nl, align 8, !dbg !3501, !tbaa !1876
  %91 = load i64, i64* %readnl_len, align 8, !dbg !3504, !tbaa !1941
  %cmp111 = icmp eq i64 %91, 1, !dbg !3505
  br i1 %cmp111, label %if.then.113, label %if.else.129, !dbg !3506

if.then.113:                                      ; preds = %cond.end.109
  %92 = bitcast i8** %pos114 to i8*, !dbg !3507
  call void @llvm.lifetime.start(i64 8, i8* %92) #2, !dbg !3507
  call void @llvm.dbg.declare(metadata i8** %pos114, metadata !544, metadata !1880), !dbg !3508
  %93 = load i32, i32* %kind.addr, align 4, !dbg !3509, !tbaa !1883
  %94 = load i8*, i8** %start.addr, align 8, !dbg !3510, !tbaa !1876
  %95 = load i8*, i8** %end.addr, align 8, !dbg !3511, !tbaa !1876
  %96 = load i8*, i8** %nl, align 8, !dbg !3512, !tbaa !1876
  %arrayidx115 = getelementptr i8, i8* %96, i64 0, !dbg !3512
  %97 = load i8, i8* %arrayidx115, align 1, !dbg !3512, !tbaa !2064
  %conv116 = sext i8 %97 to i32, !dbg !3512
  %call117 = call i8* @find_control_char(i32 %93, i8* %94, i8* %95, i32 %conv116), !dbg !3513
  store i8* %call117, i8** %pos114, align 8, !dbg !3508, !tbaa !1876
  %98 = load i8*, i8** %pos114, align 8, !dbg !3514, !tbaa !1876
  %cmp118 = icmp ne i8* %98, null, !dbg !3516
  br i1 %cmp118, label %if.then.120, label %if.end.127, !dbg !3517

if.then.120:                                      ; preds = %if.then.113
  %99 = load i8*, i8** %pos114, align 8, !dbg !3518, !tbaa !1876
  %100 = load i8*, i8** %start.addr, align 8, !dbg !3519, !tbaa !1876
  %sub.ptr.lhs.cast121 = ptrtoint i8* %99 to i64, !dbg !3520
  %sub.ptr.rhs.cast122 = ptrtoint i8* %100 to i64, !dbg !3520
  %sub.ptr.sub123 = sub i64 %sub.ptr.lhs.cast121, %sub.ptr.rhs.cast122, !dbg !3520
  %101 = load i32, i32* %kind.addr, align 4, !dbg !3521, !tbaa !1883
  %conv124 = sext i32 %101 to i64, !dbg !3521
  %div125 = sdiv i64 %sub.ptr.sub123, %conv124, !dbg !3522
  %add126 = add i64 %div125, 1, !dbg !3523
  store i64 %add126, i64* %retval, !dbg !3524
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.128, !dbg !3524

if.end.127:                                       ; preds = %if.then.113
  %102 = load i64, i64* %len, align 8, !dbg !3525, !tbaa !1941
  %103 = load i64*, i64** %consumed.addr, align 8, !dbg !3526, !tbaa !1876
  store i64 %102, i64* %103, align 8, !dbg !3527, !tbaa !1941
  store i64 -1, i64* %retval, !dbg !3528
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.128, !dbg !3528

cleanup.128:                                      ; preds = %if.end.127, %if.then.120
  %104 = bitcast i8** %pos114 to i8*, !dbg !3529
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !3529
  br label %cleanup.211

if.else.129:                                      ; preds = %cond.end.109
  %105 = bitcast i8** %s130 to i8*, !dbg !3530
  call void @llvm.lifetime.start(i64 8, i8* %105) #2, !dbg !3530
  call void @llvm.dbg.declare(metadata i8** %s130, metadata !547, metadata !1880), !dbg !3531
  %106 = load i8*, i8** %start.addr, align 8, !dbg !3532, !tbaa !1876
  store i8* %106, i8** %s130, align 8, !dbg !3531, !tbaa !1876
  %107 = bitcast i8** %e to i8*, !dbg !3533
  call void @llvm.lifetime.start(i64 8, i8* %107) #2, !dbg !3533
  call void @llvm.dbg.declare(metadata i8** %e, metadata !549, metadata !1880), !dbg !3534
  %108 = load i8*, i8** %end.addr, align 8, !dbg !3535, !tbaa !1876
  %109 = load i64, i64* %readnl_len, align 8, !dbg !3536, !tbaa !1941
  %sub = sub i64 %109, 1, !dbg !3537
  %110 = load i32, i32* %kind.addr, align 4, !dbg !3538, !tbaa !1883
  %conv131 = sext i32 %110 to i64, !dbg !3538
  %mul = mul i64 %sub, %conv131, !dbg !3539
  %idx.neg = sub i64 0, %mul, !dbg !3540
  %add.ptr132 = getelementptr i8, i8* %108, i64 %idx.neg, !dbg !3540
  store i8* %add.ptr132, i8** %e, align 8, !dbg !3534, !tbaa !1876
  %111 = bitcast i8** %pos133 to i8*, !dbg !3541
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !3541
  call void @llvm.dbg.declare(metadata i8** %pos133, metadata !550, metadata !1880), !dbg !3542
  %112 = load i8*, i8** %e, align 8, !dbg !3543, !tbaa !1876
  %113 = load i8*, i8** %s130, align 8, !dbg !3545, !tbaa !1876
  %cmp134 = icmp ult i8* %112, %113, !dbg !3546
  br i1 %cmp134, label %if.then.136, label %if.end.137, !dbg !3547

if.then.136:                                      ; preds = %if.else.129
  %114 = load i8*, i8** %s130, align 8, !dbg !3548, !tbaa !1876
  store i8* %114, i8** %e, align 8, !dbg !3549, !tbaa !1876
  br label %if.end.137, !dbg !3550

if.end.137:                                       ; preds = %if.then.136, %if.else.129
  br label %while.cond.138, !dbg !3551

while.cond.138:                                   ; preds = %cleanup.cont.193, %if.end.137
  %115 = load i8*, i8** %s130, align 8, !dbg !3552, !tbaa !1876
  %116 = load i8*, i8** %e, align 8, !dbg !3555, !tbaa !1876
  %cmp139 = icmp ult i8* %115, %116, !dbg !3556
  br i1 %cmp139, label %while.body.141, label %while.end.194, !dbg !3551

while.body.141:                                   ; preds = %while.cond.138
  %117 = bitcast i64* %i to i8*, !dbg !3557
  call void @llvm.lifetime.start(i64 8, i8* %117) #2, !dbg !3557
  call void @llvm.dbg.declare(metadata i64* %i, metadata !551, metadata !1880), !dbg !3558
  %118 = bitcast i8** %pos142 to i8*, !dbg !3559
  call void @llvm.lifetime.start(i64 8, i8* %118) #2, !dbg !3559
  call void @llvm.dbg.declare(metadata i8** %pos142, metadata !553, metadata !1880), !dbg !3560
  %119 = load i32, i32* %kind.addr, align 4, !dbg !3561, !tbaa !1883
  %120 = load i8*, i8** %s130, align 8, !dbg !3562, !tbaa !1876
  %121 = load i8*, i8** %end.addr, align 8, !dbg !3563, !tbaa !1876
  %122 = load i8*, i8** %nl, align 8, !dbg !3564, !tbaa !1876
  %arrayidx143 = getelementptr i8, i8* %122, i64 0, !dbg !3564
  %123 = load i8, i8* %arrayidx143, align 1, !dbg !3564, !tbaa !2064
  %conv144 = sext i8 %123 to i32, !dbg !3564
  %call145 = call i8* @find_control_char(i32 %119, i8* %120, i8* %121, i32 %conv144), !dbg !3565
  store i8* %call145, i8** %pos142, align 8, !dbg !3560, !tbaa !1876
  %124 = load i8*, i8** %pos142, align 8, !dbg !3566, !tbaa !1876
  %cmp146 = icmp eq i8* %124, null, !dbg !3568
  br i1 %cmp146, label %if.then.150, label %lor.lhs.false, !dbg !3569

lor.lhs.false:                                    ; preds = %while.body.141
  %125 = load i8*, i8** %pos142, align 8, !dbg !3570, !tbaa !1876
  %126 = load i8*, i8** %e, align 8, !dbg !3572, !tbaa !1876
  %cmp148 = icmp uge i8* %125, %126, !dbg !3573
  br i1 %cmp148, label %if.then.150, label %if.end.151, !dbg !3574

if.then.150:                                      ; preds = %lor.lhs.false, %while.body.141
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.190, !dbg !3575

if.end.151:                                       ; preds = %lor.lhs.false
  store i64 1, i64* %i, align 8, !dbg !3576, !tbaa !1941
  br label %for.cond.152, !dbg !3578

for.cond.152:                                     ; preds = %for.inc, %if.end.151
  %127 = load i64, i64* %i, align 8, !dbg !3579, !tbaa !1941
  %128 = load i64, i64* %readnl_len, align 8, !dbg !3583, !tbaa !1941
  %cmp153 = icmp slt i64 %127, %128, !dbg !3584
  br i1 %cmp153, label %for.body, label %for.end, !dbg !3585

for.body:                                         ; preds = %for.cond.152
  %129 = load i32, i32* %kind.addr, align 4, !dbg !3586, !tbaa !1883
  %cmp155 = icmp eq i32 %129, 1, !dbg !3589
  br i1 %cmp155, label %cond.true.157, label %cond.false.160, !dbg !3590

cond.true.157:                                    ; preds = %for.body
  %130 = load i64, i64* %i, align 8, !dbg !3591, !tbaa !1941
  %131 = load i8*, i8** %pos142, align 8, !dbg !3593, !tbaa !1876
  %arrayidx158 = getelementptr i8, i8* %131, i64 %130, !dbg !3594
  %132 = load i8, i8* %arrayidx158, align 1, !dbg !3594, !tbaa !2064
  %conv159 = zext i8 %132 to i32, !dbg !3594
  br label %cond.end.170, !dbg !3590

cond.false.160:                                   ; preds = %for.body
  %133 = load i32, i32* %kind.addr, align 4, !dbg !3595, !tbaa !1883
  %cmp161 = icmp eq i32 %133, 2, !dbg !3597
  br i1 %cmp161, label %cond.true.163, label %cond.false.166, !dbg !3598

cond.true.163:                                    ; preds = %cond.false.160
  %134 = load i64, i64* %i, align 8, !dbg !3599, !tbaa !1941
  %135 = load i8*, i8** %pos142, align 8, !dbg !3601, !tbaa !1876
  %136 = bitcast i8* %135 to i16*, !dbg !3602
  %arrayidx164 = getelementptr i16, i16* %136, i64 %134, !dbg !3603
  %137 = load i16, i16* %arrayidx164, align 2, !dbg !3603, !tbaa !2102
  %conv165 = zext i16 %137 to i32, !dbg !3603
  br label %cond.end.168, !dbg !3598

cond.false.166:                                   ; preds = %cond.false.160
  %138 = load i64, i64* %i, align 8, !dbg !3604, !tbaa !1941
  %139 = load i8*, i8** %pos142, align 8, !dbg !3606, !tbaa !1876
  %140 = bitcast i8* %139 to i32*, !dbg !3607
  %arrayidx167 = getelementptr i32, i32* %140, i64 %138, !dbg !3608
  %141 = load i32, i32* %arrayidx167, align 4, !dbg !3608, !tbaa !1883
  br label %cond.end.168, !dbg !3598

cond.end.168:                                     ; preds = %cond.false.166, %cond.true.163
  %cond169 = phi i32 [ %conv165, %cond.true.163 ], [ %141, %cond.false.166 ], !dbg !3598
  br label %cond.end.170, !dbg !3609

cond.end.170:                                     ; preds = %cond.end.168, %cond.true.157
  %cond171 = phi i32 [ %conv159, %cond.true.157 ], [ %cond169, %cond.end.168 ], !dbg !3590
  %142 = load i64, i64* %i, align 8, !dbg !3612, !tbaa !1941
  %143 = load i8*, i8** %nl, align 8, !dbg !3615, !tbaa !1876
  %arrayidx172 = getelementptr i8, i8* %143, i64 %142, !dbg !3615
  %144 = load i8, i8* %arrayidx172, align 1, !dbg !3615, !tbaa !2064
  %conv173 = sext i8 %144 to i32, !dbg !3615
  %cmp174 = icmp ne i32 %cond171, %conv173, !dbg !3616
  br i1 %cmp174, label %if.then.176, label %if.end.177, !dbg !3617

if.then.176:                                      ; preds = %cond.end.170
  br label %for.end, !dbg !3618

if.end.177:                                       ; preds = %cond.end.170
  br label %for.inc, !dbg !3619

for.inc:                                          ; preds = %if.end.177
  %145 = load i64, i64* %i, align 8, !dbg !3620, !tbaa !1941
  %inc = add i64 %145, 1, !dbg !3620
  store i64 %inc, i64* %i, align 8, !dbg !3620, !tbaa !1941
  br label %for.cond.152, !dbg !3621

for.end:                                          ; preds = %if.then.176, %for.cond.152
  %146 = load i64, i64* %i, align 8, !dbg !3622, !tbaa !1941
  %147 = load i64, i64* %readnl_len, align 8, !dbg !3624, !tbaa !1941
  %cmp178 = icmp eq i64 %146, %147, !dbg !3625
  br i1 %cmp178, label %if.then.180, label %if.end.187, !dbg !3626

if.then.180:                                      ; preds = %for.end
  %148 = load i8*, i8** %pos142, align 8, !dbg !3627, !tbaa !1876
  %149 = load i8*, i8** %start.addr, align 8, !dbg !3628, !tbaa !1876
  %sub.ptr.lhs.cast181 = ptrtoint i8* %148 to i64, !dbg !3629
  %sub.ptr.rhs.cast182 = ptrtoint i8* %149 to i64, !dbg !3629
  %sub.ptr.sub183 = sub i64 %sub.ptr.lhs.cast181, %sub.ptr.rhs.cast182, !dbg !3629
  %150 = load i32, i32* %kind.addr, align 4, !dbg !3630, !tbaa !1883
  %conv184 = sext i32 %150 to i64, !dbg !3630
  %div185 = sdiv i64 %sub.ptr.sub183, %conv184, !dbg !3631
  %151 = load i64, i64* %readnl_len, align 8, !dbg !3632, !tbaa !1941
  %add186 = add i64 %div185, %151, !dbg !3633
  store i64 %add186, i64* %retval, !dbg !3634
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.190, !dbg !3634

if.end.187:                                       ; preds = %for.end
  %152 = load i8*, i8** %pos142, align 8, !dbg !3635, !tbaa !1876
  %153 = load i32, i32* %kind.addr, align 4, !dbg !3636, !tbaa !1883
  %idx.ext188 = sext i32 %153 to i64, !dbg !3637
  %add.ptr189 = getelementptr i8, i8* %152, i64 %idx.ext188, !dbg !3637
  store i8* %add.ptr189, i8** %s130, align 8, !dbg !3638, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !3639
  br label %cleanup.190, !dbg !3639

cleanup.190:                                      ; preds = %if.end.187, %if.then.180, %if.then.150
  %154 = bitcast i8** %pos142 to i8*, !dbg !3640
  call void @llvm.lifetime.end(i64 8, i8* %154) #2, !dbg !3640
  %155 = bitcast i64* %i to i8*, !dbg !3640
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !3640
  %cleanup.dest.192 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.190
  %Pivot = icmp slt i32 %cleanup.dest.192, 7
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.192, 7
  br i1 %SwitchLeaf5, label %while.end.194, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.192, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.193, label %NewDefault.1

cleanup.cont.193:                                 ; preds = %LeafBlock.2
  br label %while.cond.138, !dbg !3551

while.end.194:                                    ; preds = %LeafBlock.4, %while.cond.138
  %156 = load i32, i32* %kind.addr, align 4, !dbg !3641, !tbaa !1883
  %157 = load i8*, i8** %e, align 8, !dbg !3642, !tbaa !1876
  %158 = load i8*, i8** %end.addr, align 8, !dbg !3643, !tbaa !1876
  %159 = load i8*, i8** %nl, align 8, !dbg !3644, !tbaa !1876
  %arrayidx195 = getelementptr i8, i8* %159, i64 0, !dbg !3644
  %160 = load i8, i8* %arrayidx195, align 1, !dbg !3644, !tbaa !2064
  %conv196 = sext i8 %160 to i32, !dbg !3644
  %call197 = call i8* @find_control_char(i32 %156, i8* %157, i8* %158, i32 %conv196), !dbg !3645
  store i8* %call197, i8** %pos133, align 8, !dbg !3646, !tbaa !1876
  %161 = load i8*, i8** %pos133, align 8, !dbg !3647, !tbaa !1876
  %cmp198 = icmp eq i8* %161, null, !dbg !3649
  br i1 %cmp198, label %if.then.200, label %if.else.201, !dbg !3650

if.then.200:                                      ; preds = %while.end.194
  %162 = load i64, i64* %len, align 8, !dbg !3651, !tbaa !1941
  %163 = load i64*, i64** %consumed.addr, align 8, !dbg !3652, !tbaa !1876
  store i64 %162, i64* %163, align 8, !dbg !3653, !tbaa !1941
  br label %if.end.207, !dbg !3654

if.else.201:                                      ; preds = %while.end.194
  %164 = load i8*, i8** %pos133, align 8, !dbg !3655, !tbaa !1876
  %165 = load i8*, i8** %start.addr, align 8, !dbg !3656, !tbaa !1876
  %sub.ptr.lhs.cast202 = ptrtoint i8* %164 to i64, !dbg !3657
  %sub.ptr.rhs.cast203 = ptrtoint i8* %165 to i64, !dbg !3657
  %sub.ptr.sub204 = sub i64 %sub.ptr.lhs.cast202, %sub.ptr.rhs.cast203, !dbg !3657
  %166 = load i32, i32* %kind.addr, align 4, !dbg !3658, !tbaa !1883
  %conv205 = sext i32 %166 to i64, !dbg !3658
  %div206 = sdiv i64 %sub.ptr.sub204, %conv205, !dbg !3659
  %167 = load i64*, i64** %consumed.addr, align 8, !dbg !3660, !tbaa !1876
  store i64 %div206, i64* %167, align 8, !dbg !3661, !tbaa !1941
  br label %if.end.207

if.end.207:                                       ; preds = %if.else.201, %if.then.200
  store i64 -1, i64* %retval, !dbg !3662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.208, !dbg !3662

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.208

cleanup.208:                                      ; preds = %NewDefault.1, %if.end.207
  %168 = bitcast i8** %pos133 to i8*, !dbg !3663
  call void @llvm.lifetime.end(i64 8, i8* %168) #2, !dbg !3663
  %169 = bitcast i8** %e to i8*, !dbg !3663
  call void @llvm.lifetime.end(i64 8, i8* %169) #2, !dbg !3663
  %170 = bitcast i8** %s130 to i8*, !dbg !3663
  call void @llvm.lifetime.end(i64 8, i8* %170) #2, !dbg !3663
  br label %cleanup.211

cleanup.211:                                      ; preds = %cleanup.208, %cleanup.128
  %171 = bitcast i8** %nl to i8*, !dbg !3664
  call void @llvm.lifetime.end(i64 8, i8* %171) #2, !dbg !3664
  %172 = bitcast i64* %readnl_len to i8*, !dbg !3664
  call void @llvm.lifetime.end(i64 8, i8* %172) #2, !dbg !3664
  br label %cleanup.213

cleanup.213:                                      ; preds = %cleanup.211, %cleanup.93, %cleanup
  %173 = bitcast i64* %len to i8*, !dbg !3665
  call void @llvm.lifetime.end(i64 8, i8* %173) #2, !dbg !3665
  %174 = load i64, i64* %retval, !dbg !3665
  ret i64 %174, !dbg !3665
}

; Function Attrs: nounwind uwtable
define internal i8* @find_control_char(i32 %kind, i8* %s, i8* %end, i32 %ch) #0 {
entry:
  %retval = alloca i8*, align 8
  %kind.addr = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %ch.addr = alloca i32, align 4
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !688, metadata !1880), !dbg !3666
  store i8* %s, i8** %s.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !689, metadata !1880), !dbg !3667
  store i8* %end, i8** %end.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !690, metadata !1880), !dbg !3668
  store i32 %ch, i32* %ch.addr, align 4, !tbaa !1883
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !691, metadata !1880), !dbg !3669
  %0 = load i32, i32* %kind.addr, align 4, !dbg !3670, !tbaa !1883
  %cmp = icmp eq i32 %0, 1, !dbg !3672
  br i1 %cmp, label %if.then, label %if.end, !dbg !3673

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !3674, !tbaa !1876
  %2 = load i32, i32* %ch.addr, align 4, !dbg !3676, !tbaa !1883
  %conv = trunc i32 %2 to i8, !dbg !3677
  %conv1 = sext i8 %conv to i32, !dbg !3677
  %3 = load i8*, i8** %end.addr, align 8, !dbg !3678, !tbaa !1876
  %4 = load i8*, i8** %s.addr, align 8, !dbg !3679, !tbaa !1876
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !3680
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3680
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3680
  %call = call i8* @memchr(i8* %1, i32 %conv1, i64 %sub.ptr.sub) #6, !dbg !3681
  store i8* %call, i8** %retval, !dbg !3682
  br label %return, !dbg !3682

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !3683

for.cond:                                         ; preds = %if.end.40, %if.end
  br label %while.cond, !dbg !3684

while.cond:                                       ; preds = %while.body, %for.cond
  %5 = load i32, i32* %kind.addr, align 4, !dbg !3688, !tbaa !1883
  %cmp2 = icmp eq i32 %5, 1, !dbg !3691
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !3692

cond.true:                                        ; preds = %while.cond
  %6 = load i8*, i8** %s.addr, align 8, !dbg !3693, !tbaa !1876
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !3695
  %7 = load i8, i8* %arrayidx, align 1, !dbg !3695, !tbaa !2064
  %conv4 = zext i8 %7 to i32, !dbg !3695
  br label %cond.end.12, !dbg !3692

cond.false:                                       ; preds = %while.cond
  %8 = load i32, i32* %kind.addr, align 4, !dbg !3696, !tbaa !1883
  %cmp5 = icmp eq i32 %8, 2, !dbg !3698
  br i1 %cmp5, label %cond.true.7, label %cond.false.10, !dbg !3699

cond.true.7:                                      ; preds = %cond.false
  %9 = load i8*, i8** %s.addr, align 8, !dbg !3700, !tbaa !1876
  %10 = bitcast i8* %9 to i16*, !dbg !3702
  %arrayidx8 = getelementptr i16, i16* %10, i64 0, !dbg !3703
  %11 = load i16, i16* %arrayidx8, align 2, !dbg !3703, !tbaa !2102
  %conv9 = zext i16 %11 to i32, !dbg !3703
  br label %cond.end, !dbg !3699

cond.false.10:                                    ; preds = %cond.false
  %12 = load i8*, i8** %s.addr, align 8, !dbg !3704, !tbaa !1876
  %13 = bitcast i8* %12 to i32*, !dbg !3706
  %arrayidx11 = getelementptr i32, i32* %13, i64 0, !dbg !3707
  %14 = load i32, i32* %arrayidx11, align 4, !dbg !3707, !tbaa !1883
  br label %cond.end, !dbg !3699

cond.end:                                         ; preds = %cond.false.10, %cond.true.7
  %cond = phi i32 [ %conv9, %cond.true.7 ], [ %14, %cond.false.10 ], !dbg !3699
  br label %cond.end.12, !dbg !3708

cond.end.12:                                      ; preds = %cond.end, %cond.true
  %cond13 = phi i32 [ %conv4, %cond.true ], [ %cond, %cond.end ], !dbg !3692
  %15 = load i32, i32* %ch.addr, align 4, !dbg !3711, !tbaa !1883
  %cmp14 = icmp ugt i32 %cond13, %15, !dbg !3714
  br i1 %cmp14, label %while.body, label %while.end, !dbg !3684

while.body:                                       ; preds = %cond.end.12
  %16 = load i32, i32* %kind.addr, align 4, !dbg !3715, !tbaa !1883
  %17 = load i8*, i8** %s.addr, align 8, !dbg !3716, !tbaa !1876
  %idx.ext = sext i32 %16 to i64, !dbg !3716
  %add.ptr = getelementptr i8, i8* %17, i64 %idx.ext, !dbg !3716
  store i8* %add.ptr, i8** %s.addr, align 8, !dbg !3716, !tbaa !1876
  br label %while.cond, !dbg !3684

while.end:                                        ; preds = %cond.end.12
  %18 = load i32, i32* %kind.addr, align 4, !dbg !3717, !tbaa !1883
  %cmp16 = icmp eq i32 %18, 1, !dbg !3719
  br i1 %cmp16, label %cond.true.18, label %cond.false.21, !dbg !3720

cond.true.18:                                     ; preds = %while.end
  %19 = load i8*, i8** %s.addr, align 8, !dbg !3721, !tbaa !1876
  %arrayidx19 = getelementptr i8, i8* %19, i64 0, !dbg !3723
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !3723, !tbaa !2064
  %conv20 = zext i8 %20 to i32, !dbg !3723
  br label %cond.end.31, !dbg !3720

cond.false.21:                                    ; preds = %while.end
  %21 = load i32, i32* %kind.addr, align 4, !dbg !3724, !tbaa !1883
  %cmp22 = icmp eq i32 %21, 2, !dbg !3726
  br i1 %cmp22, label %cond.true.24, label %cond.false.27, !dbg !3727

cond.true.24:                                     ; preds = %cond.false.21
  %22 = load i8*, i8** %s.addr, align 8, !dbg !3728, !tbaa !1876
  %23 = bitcast i8* %22 to i16*, !dbg !3730
  %arrayidx25 = getelementptr i16, i16* %23, i64 0, !dbg !3731
  %24 = load i16, i16* %arrayidx25, align 2, !dbg !3731, !tbaa !2102
  %conv26 = zext i16 %24 to i32, !dbg !3731
  br label %cond.end.29, !dbg !3727

cond.false.27:                                    ; preds = %cond.false.21
  %25 = load i8*, i8** %s.addr, align 8, !dbg !3732, !tbaa !1876
  %26 = bitcast i8* %25 to i32*, !dbg !3734
  %arrayidx28 = getelementptr i32, i32* %26, i64 0, !dbg !3735
  %27 = load i32, i32* %arrayidx28, align 4, !dbg !3735, !tbaa !1883
  br label %cond.end.29, !dbg !3727

cond.end.29:                                      ; preds = %cond.false.27, %cond.true.24
  %cond30 = phi i32 [ %conv26, %cond.true.24 ], [ %27, %cond.false.27 ], !dbg !3727
  br label %cond.end.31, !dbg !3736

cond.end.31:                                      ; preds = %cond.end.29, %cond.true.18
  %cond32 = phi i32 [ %conv20, %cond.true.18 ], [ %cond30, %cond.end.29 ], !dbg !3720
  %28 = load i32, i32* %ch.addr, align 4, !dbg !3739, !tbaa !1883
  %cmp33 = icmp eq i32 %cond32, %28, !dbg !3742
  br i1 %cmp33, label %if.then.35, label %if.end.36, !dbg !3743

if.then.35:                                       ; preds = %cond.end.31
  %29 = load i8*, i8** %s.addr, align 8, !dbg !3744, !tbaa !1876
  store i8* %29, i8** %retval, !dbg !3745
  br label %return, !dbg !3745

if.end.36:                                        ; preds = %cond.end.31
  %30 = load i8*, i8** %s.addr, align 8, !dbg !3746, !tbaa !1876
  %31 = load i8*, i8** %end.addr, align 8, !dbg !3748, !tbaa !1876
  %cmp37 = icmp eq i8* %30, %31, !dbg !3749
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !3750

if.then.39:                                       ; preds = %if.end.36
  store i8* null, i8** %retval, !dbg !3751
  br label %return, !dbg !3751

if.end.40:                                        ; preds = %if.end.36
  %32 = load i32, i32* %kind.addr, align 4, !dbg !3752, !tbaa !1883
  %33 = load i8*, i8** %s.addr, align 8, !dbg !3753, !tbaa !1876
  %idx.ext41 = sext i32 %32 to i64, !dbg !3753
  %add.ptr42 = getelementptr i8, i8* %33, i64 %idx.ext41, !dbg !3753
  store i8* %add.ptr42, i8** %s.addr, align 8, !dbg !3753, !tbaa !1876
  br label %for.cond, !dbg !3754

return:                                           ; preds = %if.then.39, %if.then.35, %if.then
  %34 = load i8*, i8** %retval, !dbg !3755
  ret i8* %34, !dbg !3755
}

; Function Attrs: nounwind uwtable
define internal void @textiowrapper_dealloc(%struct.textio* %self) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %g = alloca %union._gc_head*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !732, metadata !1880), !dbg !3756
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3757, !tbaa !1876
  %finalizing = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 19, !dbg !3758
  store i8 1, i8* %finalizing, align 1, !dbg !3759, !tbaa !3760
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3763, !tbaa !1876
  %2 = bitcast %struct.textio* %1 to %struct._object*, !dbg !3765
  %call = call i32 @_PyIOBase_finalize(%struct._object* %2), !dbg !3766
  %cmp = icmp slt i32 %call, 0, !dbg !3767
  br i1 %cmp, label %if.then, label %if.end, !dbg !3768

if.then:                                          ; preds = %entry
  br label %return, !dbg !3769

if.end:                                           ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3770, !tbaa !1876
  %call1 = call i32 @_textiowrapper_clear(%struct.textio* %3), !dbg !3771
  br label %do.body, !dbg !3772

do.body:                                          ; preds = %if.end
  %4 = bitcast %union._gc_head** %g to i8*, !dbg !3773
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !3773
  call void @llvm.dbg.declare(metadata %union._gc_head** %g, metadata !733, metadata !1880), !dbg !3775
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3776, !tbaa !1876
  %6 = bitcast %struct.textio* %5 to %union._gc_head*, !dbg !3777
  %add.ptr = getelementptr %union._gc_head, %union._gc_head* %6, i64 -1, !dbg !3778
  store %union._gc_head* %add.ptr, %union._gc_head** %g, align 8, !dbg !3775, !tbaa !1876
  br label %do.body.2, !dbg !3779

do.body.2:                                        ; preds = %do.body
  %7 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3780, !tbaa !1876
  %gc = bitcast %union._gc_head* %7 to %struct.anon.0*, !dbg !3783
  %gc_refs = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc, i32 0, i32 2, !dbg !3784
  %8 = load i64, i64* %gc_refs, align 8, !dbg !3784, !tbaa !3785
  %and = and i64 %8, 1, !dbg !3787
  %or = or i64 %and, -4, !dbg !3788
  %9 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3789, !tbaa !1876
  %gc3 = bitcast %union._gc_head* %9 to %struct.anon.0*, !dbg !3790
  %gc_refs4 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc3, i32 0, i32 2, !dbg !3791
  store i64 %or, i64* %gc_refs4, align 8, !dbg !3792, !tbaa !3785
  br label %do.cond, !dbg !3793

do.cond:                                          ; preds = %do.body.2
  br label %do.end, !dbg !3794

do.end:                                           ; preds = %do.cond
  %10 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3796, !tbaa !1876
  %gc5 = bitcast %union._gc_head* %10 to %struct.anon.0*, !dbg !3798
  %gc_next = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc5, i32 0, i32 0, !dbg !3799
  %11 = load %union._gc_head*, %union._gc_head** %gc_next, align 8, !dbg !3799, !tbaa !3800
  %12 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3801, !tbaa !1876
  %gc6 = bitcast %union._gc_head* %12 to %struct.anon.0*, !dbg !3802
  %gc_prev = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc6, i32 0, i32 1, !dbg !3803
  %13 = load %union._gc_head*, %union._gc_head** %gc_prev, align 8, !dbg !3803, !tbaa !3804
  %gc7 = bitcast %union._gc_head* %13 to %struct.anon.0*, !dbg !3805
  %gc_next8 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc7, i32 0, i32 0, !dbg !3806
  store %union._gc_head* %11, %union._gc_head** %gc_next8, align 8, !dbg !3807, !tbaa !3800
  %14 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3808, !tbaa !1876
  %gc9 = bitcast %union._gc_head* %14 to %struct.anon.0*, !dbg !3809
  %gc_prev10 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc9, i32 0, i32 1, !dbg !3810
  %15 = load %union._gc_head*, %union._gc_head** %gc_prev10, align 8, !dbg !3810, !tbaa !3804
  %16 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3811, !tbaa !1876
  %gc11 = bitcast %union._gc_head* %16 to %struct.anon.0*, !dbg !3812
  %gc_next12 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc11, i32 0, i32 0, !dbg !3813
  %17 = load %union._gc_head*, %union._gc_head** %gc_next12, align 8, !dbg !3813, !tbaa !3800
  %gc13 = bitcast %union._gc_head* %17 to %struct.anon.0*, !dbg !3814
  %gc_prev14 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc13, i32 0, i32 1, !dbg !3815
  store %union._gc_head* %15, %union._gc_head** %gc_prev14, align 8, !dbg !3816, !tbaa !3804
  %18 = load %union._gc_head*, %union._gc_head** %g, align 8, !dbg !3817, !tbaa !1876
  %gc15 = bitcast %union._gc_head* %18 to %struct.anon.0*, !dbg !3818
  %gc_next16 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %gc15, i32 0, i32 0, !dbg !3819
  store %union._gc_head* null, %union._gc_head** %gc_next16, align 8, !dbg !3820, !tbaa !3800
  %19 = bitcast %union._gc_head** %g to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !3821
  br label %do.end.18, !dbg !3822

do.end.18:                                        ; preds = %do.end
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3823, !tbaa !1876
  %weakreflist = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 29, !dbg !3825
  %21 = load %struct._object*, %struct._object** %weakreflist, align 8, !dbg !3825, !tbaa !3826
  %cmp19 = icmp ne %struct._object* %21, null, !dbg !3827
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !3828

if.then.20:                                       ; preds = %do.end.18
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3829, !tbaa !1876
  %23 = bitcast %struct.textio* %22 to %struct._object*, !dbg !3830
  call void @PyObject_ClearWeakRefs(%struct._object* %23), !dbg !3831
  br label %if.end.21, !dbg !3831

if.end.21:                                        ; preds = %if.then.20, %do.end.18
  br label %do.body.22, !dbg !3832

do.body.22:                                       ; preds = %if.end.21
  %24 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3833
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !3833
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !735, metadata !1880), !dbg !3835
  %25 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3836, !tbaa !1876
  %dict = getelementptr inbounds %struct.textio, %struct.textio* %25, i32 0, i32 30, !dbg !3837
  %26 = load %struct._object*, %struct._object** %dict, align 8, !dbg !3837, !tbaa !3838
  store %struct._object* %26, %struct._object** %_py_tmp, align 8, !dbg !3835, !tbaa !1876
  %27 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3839, !tbaa !1876
  %cmp23 = icmp ne %struct._object* %27, null, !dbg !3840
  br i1 %cmp23, label %if.then.24, label %if.end.32, !dbg !3841

if.then.24:                                       ; preds = %do.body.22
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3842, !tbaa !1876
  %dict25 = getelementptr inbounds %struct.textio, %struct.textio* %28, i32 0, i32 30, !dbg !3844
  store %struct._object* null, %struct._object** %dict25, align 8, !dbg !3845, !tbaa !3838
  br label %do.body.26, !dbg !3846

do.body.26:                                       ; preds = %if.then.24
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3847
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !3847
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !737, metadata !1880), !dbg !3849
  %30 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3850, !tbaa !1876
  store %struct._object* %30, %struct._object** %_py_decref_tmp, align 8, !dbg !3849, !tbaa !1876
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3851, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !3853
  %32 = load i64, i64* %ob_refcnt, align 8, !dbg !3854, !tbaa !1927
  %dec = add i64 %32, -1, !dbg !3854
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3854, !tbaa !1927
  %cmp27 = icmp ne i64 %dec, 0, !dbg !3855
  br i1 %cmp27, label %if.then.28, label %if.else, !dbg !3856

if.then.28:                                       ; preds = %do.body.26
  br label %if.end.29, !dbg !3857

if.else:                                          ; preds = %do.body.26
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3859, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !3861
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3861, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !3862
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3862, !tbaa !2196
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3863, !tbaa !1876
  call void %35(%struct._object* %36), !dbg !3864
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.28
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3865
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !3865
  br label %do.cond.30, !dbg !3867

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !3868

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.32, !dbg !3870

if.end.32:                                        ; preds = %do.end.31, %do.body.22
  %38 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3872
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !3872
  br label %do.end.34, !dbg !3875

do.end.34:                                        ; preds = %if.end.32
  %39 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3876, !tbaa !1876
  %40 = bitcast %struct.textio* %39 to %struct._object*, !dbg !3877
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !3878
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !3878, !tbaa !2194
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 38, !dbg !3879
  %42 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !3879, !tbaa !3234
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3880, !tbaa !1876
  %44 = bitcast %struct.textio* %43 to %struct._object*, !dbg !3881
  %45 = bitcast %struct._object* %44 to i8*, !dbg !3881
  call void %42(i8* %45), !dbg !3882
  br label %return, !dbg !3883

return:                                           ; preds = %do.end.34, %if.then
  ret void, !dbg !3884
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_repr(%struct.textio* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %nameobj = alloca %struct._object*, align 8
  %modeobj = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %s = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp38 = alloca %struct._object*, align 8
  %_py_decref_tmp58 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !810, metadata !1880), !dbg !3886
  %0 = bitcast %struct._object** %nameobj to i8*, !dbg !3887
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3887
  call void @llvm.dbg.declare(metadata %struct._object** %nameobj, metadata !811, metadata !1880), !dbg !3888
  %1 = bitcast %struct._object** %modeobj to i8*, !dbg !3887
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3887
  call void @llvm.dbg.declare(metadata %struct._object** %modeobj, metadata !812, metadata !1880), !dbg !3889
  %2 = bitcast %struct._object** %res to i8*, !dbg !3887
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3887
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !813, metadata !1880), !dbg !3890
  %3 = bitcast %struct._object** %s to i8*, !dbg !3887
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3887
  call void @llvm.dbg.declare(metadata %struct._object** %s, metadata !814, metadata !1880), !dbg !3891
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3892, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 1, !dbg !3894
  %5 = load i32, i32* %ok, align 4, !dbg !3894, !tbaa !3895
  %cmp = icmp sle i32 %5, 0, !dbg !3896
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !3897

if.then:                                          ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3898, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 2, !dbg !3902
  %7 = load i32, i32* %detached, align 4, !dbg !3902, !tbaa !3903
  %tobool = icmp ne i32 %7, 0, !dbg !3904
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !3905

if.then.1:                                        ; preds = %if.then
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3906, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !3909
  br label %if.end, !dbg !3910

if.else:                                          ; preds = %if.then
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3911, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !3914
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !3915
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3917

if.end.2:                                         ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0)), !dbg !3918
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !3919, !tbaa !1876
  %10 = load %struct._object*, %struct._object** %res, align 8, !dbg !3920, !tbaa !1876
  %cmp3 = icmp eq %struct._object* %10, null, !dbg !3922
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !3923

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !3924
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3924

if.end.5:                                         ; preds = %if.end.2
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3925, !tbaa !1876
  %12 = bitcast %struct.textio* %11 to %struct._object*, !dbg !3926
  %call6 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %12, %struct._Py_Identifier* @PyId_name), !dbg !3927
  store %struct._object* %call6, %struct._object** %nameobj, align 8, !dbg !3928, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !3929, !tbaa !1876
  %cmp7 = icmp eq %struct._object* %13, null, !dbg !3930
  br i1 %cmp7, label %if.then.8, label %if.else.14, !dbg !3931

if.then.8:                                        ; preds = %if.end.5
  %14 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3932, !tbaa !1876
  %call9 = call i32 @PyErr_ExceptionMatches(%struct._object* %14), !dbg !3935
  %tobool10 = icmp ne i32 %call9, 0, !dbg !3935
  br i1 %tobool10, label %if.then.11, label %if.else.12, !dbg !3936

if.then.11:                                       ; preds = %if.then.8
  call void @PyErr_Clear(), !dbg !3937
  br label %if.end.13, !dbg !3937

if.else.12:                                       ; preds = %if.then.8
  br label %error, !dbg !3938

if.end.13:                                        ; preds = %if.then.11
  br label %if.end.26, !dbg !3939

if.else.14:                                       ; preds = %if.end.5
  %15 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !3940, !tbaa !1876
  %call15 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), %struct._object* %15), !dbg !3941
  store %struct._object* %call15, %struct._object** %s, align 8, !dbg !3942, !tbaa !1876
  br label %do.body, !dbg !3943

do.body:                                          ; preds = %if.else.14
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3944
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !3944
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !815, metadata !1880), !dbg !3946
  %17 = load %struct._object*, %struct._object** %nameobj, align 8, !dbg !3947, !tbaa !1876
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !3946, !tbaa !1876
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3948, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !3950
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !3951, !tbaa !1927
  %dec = add i64 %19, -1, !dbg !3951
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3951, !tbaa !1927
  %cmp16 = icmp ne i64 %dec, 0, !dbg !3952
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !3953

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !3954

if.else.18:                                       ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3956, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !3958
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3958, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !3959
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3959, !tbaa !2196
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3960, !tbaa !1876
  call void %22(%struct._object* %23), !dbg !3961
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.18, %if.then.17
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3962
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !3962
  br label %do.cond, !dbg !3964

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !3965

do.end:                                           ; preds = %do.cond
  %25 = load %struct._object*, %struct._object** %s, align 8, !dbg !3967, !tbaa !1876
  %cmp20 = icmp eq %struct._object* %25, null, !dbg !3969
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !3970

if.then.21:                                       ; preds = %do.end
  br label %error, !dbg !3971

if.end.22:                                        ; preds = %do.end
  %26 = load %struct._object*, %struct._object** %s, align 8, !dbg !3972, !tbaa !1876
  call void @PyUnicode_AppendAndDel(%struct._object** %res, %struct._object* %26), !dbg !3973
  %27 = load %struct._object*, %struct._object** %res, align 8, !dbg !3974, !tbaa !1876
  %cmp23 = icmp eq %struct._object* %27, null, !dbg !3976
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !3977

if.then.24:                                       ; preds = %if.end.22
  store %struct._object* null, %struct._object** %retval, !dbg !3978
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3978

if.end.25:                                        ; preds = %if.end.22
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.end.13
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !3979, !tbaa !1876
  %29 = bitcast %struct.textio* %28 to %struct._object*, !dbg !3980
  %call27 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %29, %struct._Py_Identifier* @PyId_mode), !dbg !3981
  store %struct._object* %call27, %struct._object** %modeobj, align 8, !dbg !3982, !tbaa !1876
  %30 = load %struct._object*, %struct._object** %modeobj, align 8, !dbg !3983, !tbaa !1876
  %cmp28 = icmp eq %struct._object* %30, null, !dbg !3984
  br i1 %cmp28, label %if.then.29, label %if.else.35, !dbg !3985

if.then.29:                                       ; preds = %if.end.26
  %31 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3986, !tbaa !1876
  %call30 = call i32 @PyErr_ExceptionMatches(%struct._object* %31), !dbg !3989
  %tobool31 = icmp ne i32 %call30, 0, !dbg !3989
  br i1 %tobool31, label %if.then.32, label %if.else.33, !dbg !3990

if.then.32:                                       ; preds = %if.then.29
  call void @PyErr_Clear(), !dbg !3991
  br label %if.end.34, !dbg !3991

if.else.33:                                       ; preds = %if.then.29
  br label %error, !dbg !3992

if.end.34:                                        ; preds = %if.then.32
  br label %if.end.55, !dbg !3993

if.else.35:                                       ; preds = %if.end.26
  %32 = load %struct._object*, %struct._object** %modeobj, align 8, !dbg !3994, !tbaa !1876
  %call36 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i32 0, i32 0), %struct._object* %32), !dbg !3995
  store %struct._object* %call36, %struct._object** %s, align 8, !dbg !3996, !tbaa !1876
  br label %do.body.37, !dbg !3997

do.body.37:                                       ; preds = %if.else.35
  %33 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !3998
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !3998
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp38, metadata !819, metadata !1880), !dbg !4000
  %34 = load %struct._object*, %struct._object** %modeobj, align 8, !dbg !4001, !tbaa !1876
  store %struct._object* %34, %struct._object** %_py_decref_tmp38, align 8, !dbg !4000, !tbaa !1876
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !4002, !tbaa !1876
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !4004
  %36 = load i64, i64* %ob_refcnt39, align 8, !dbg !4005, !tbaa !1927
  %dec40 = add i64 %36, -1, !dbg !4005
  store i64 %dec40, i64* %ob_refcnt39, align 8, !dbg !4005, !tbaa !1927
  %cmp41 = icmp ne i64 %dec40, 0, !dbg !4006
  br i1 %cmp41, label %if.then.42, label %if.else.43, !dbg !4007

if.then.42:                                       ; preds = %do.body.37
  br label %if.end.46, !dbg !4008

if.else.43:                                       ; preds = %do.body.37
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !4010, !tbaa !1876
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !4012
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8, !dbg !4012, !tbaa !2194
  %tp_dealloc45 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !4013
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc45, align 8, !dbg !4013, !tbaa !2196
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp38, align 8, !dbg !4014, !tbaa !1876
  call void %39(%struct._object* %40), !dbg !4015
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.43, %if.then.42
  %41 = bitcast %struct._object** %_py_decref_tmp38 to i8*, !dbg !4016
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !4016
  br label %do.cond.47, !dbg !4018

do.cond.47:                                       ; preds = %if.end.46
  br label %do.end.48, !dbg !4019

do.end.48:                                        ; preds = %do.cond.47
  %42 = load %struct._object*, %struct._object** %s, align 8, !dbg !4021, !tbaa !1876
  %cmp49 = icmp eq %struct._object* %42, null, !dbg !4023
  br i1 %cmp49, label %if.then.50, label %if.end.51, !dbg !4024

if.then.50:                                       ; preds = %do.end.48
  br label %error, !dbg !4025

if.end.51:                                        ; preds = %do.end.48
  %43 = load %struct._object*, %struct._object** %s, align 8, !dbg !4026, !tbaa !1876
  call void @PyUnicode_AppendAndDel(%struct._object** %res, %struct._object* %43), !dbg !4027
  %44 = load %struct._object*, %struct._object** %res, align 8, !dbg !4028, !tbaa !1876
  %cmp52 = icmp eq %struct._object* %44, null, !dbg !4030
  br i1 %cmp52, label %if.then.53, label %if.end.54, !dbg !4031

if.then.53:                                       ; preds = %if.end.51
  store %struct._object* null, %struct._object** %retval, !dbg !4032
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4032

if.end.54:                                        ; preds = %if.end.51
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.end.34
  %45 = load %struct._object*, %struct._object** %res, align 8, !dbg !4033, !tbaa !1876
  %46 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4034, !tbaa !1876
  %encoding = getelementptr inbounds %struct.textio, %struct.textio* %46, i32 0, i32 5, !dbg !4035
  %47 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !4035, !tbaa !4036
  %call56 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i32 0, i32 0), %struct._object* %45, %struct._object* %47), !dbg !4037
  store %struct._object* %call56, %struct._object** %s, align 8, !dbg !4038, !tbaa !1876
  br label %do.body.57, !dbg !4039

do.body.57:                                       ; preds = %if.end.55
  %48 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !4040
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !4040
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp58, metadata !823, metadata !1880), !dbg !4042
  %49 = load %struct._object*, %struct._object** %res, align 8, !dbg !4043, !tbaa !1876
  store %struct._object* %49, %struct._object** %_py_decref_tmp58, align 8, !dbg !4042, !tbaa !1876
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !4044, !tbaa !1876
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !4046
  %51 = load i64, i64* %ob_refcnt59, align 8, !dbg !4047, !tbaa !1927
  %dec60 = add i64 %51, -1, !dbg !4047
  store i64 %dec60, i64* %ob_refcnt59, align 8, !dbg !4047, !tbaa !1927
  %cmp61 = icmp ne i64 %dec60, 0, !dbg !4048
  br i1 %cmp61, label %if.then.62, label %if.else.63, !dbg !4049

if.then.62:                                       ; preds = %do.body.57
  br label %if.end.66, !dbg !4050

if.else.63:                                       ; preds = %do.body.57
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !4052, !tbaa !1876
  %ob_type64 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !4054
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type64, align 8, !dbg !4054, !tbaa !2194
  %tp_dealloc65 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !4055
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc65, align 8, !dbg !4055, !tbaa !2196
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !4056, !tbaa !1876
  call void %54(%struct._object* %55), !dbg !4057
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.63, %if.then.62
  %56 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !4058
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !4058
  br label %do.cond.67, !dbg !4060

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !4061

do.end.68:                                        ; preds = %do.cond.67
  %57 = load %struct._object*, %struct._object** %s, align 8, !dbg !4063, !tbaa !1876
  store %struct._object* %57, %struct._object** %retval, !dbg !4064
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4064

error:                                            ; preds = %if.then.50, %if.else.33, %if.then.21, %if.else.12
  br label %do.body.69, !dbg !4065

do.body.69:                                       ; preds = %error
  %58 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4066
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !4066
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !825, metadata !1880), !dbg !4068
  %59 = load %struct._object*, %struct._object** %res, align 8, !dbg !4069, !tbaa !1876
  store %struct._object* %59, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4068, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4070, !tbaa !1876
  %cmp70 = icmp ne %struct._object* %60, null, !dbg !4071
  br i1 %cmp70, label %if.then.71, label %if.end.84, !dbg !4072

if.then.71:                                       ; preds = %do.body.69
  br label %do.body.72, !dbg !4073

do.body.72:                                       ; preds = %if.then.71
  %61 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !4075
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !4075
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp73, metadata !827, metadata !1880), !dbg !4077
  %62 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4078, !tbaa !1876
  store %struct._object* %62, %struct._object** %_py_decref_tmp73, align 8, !dbg !4077, !tbaa !1876
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !4079, !tbaa !1876
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !4081
  %64 = load i64, i64* %ob_refcnt74, align 8, !dbg !4082, !tbaa !1927
  %dec75 = add i64 %64, -1, !dbg !4082
  store i64 %dec75, i64* %ob_refcnt74, align 8, !dbg !4082, !tbaa !1927
  %cmp76 = icmp ne i64 %dec75, 0, !dbg !4083
  br i1 %cmp76, label %if.then.77, label %if.else.78, !dbg !4084

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81, !dbg !4085

if.else.78:                                       ; preds = %do.body.72
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !4087, !tbaa !1876
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !4089
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8, !dbg !4089, !tbaa !2194
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !4090
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8, !dbg !4090, !tbaa !2196
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !4091, !tbaa !1876
  call void %67(%struct._object* %68), !dbg !4092
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  %69 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !4093
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !4093
  br label %do.cond.82, !dbg !4095

do.cond.82:                                       ; preds = %if.end.81
  br label %do.end.83, !dbg !4096

do.end.83:                                        ; preds = %do.cond.82
  br label %if.end.84, !dbg !4098

if.end.84:                                        ; preds = %do.end.83, %do.body.69
  %70 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4100
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !4100
  br label %do.cond.85, !dbg !4103

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !4104

do.end.86:                                        ; preds = %do.cond.85
  store %struct._object* null, %struct._object** %retval, !dbg !4106
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4106

cleanup:                                          ; preds = %do.end.86, %do.end.68, %if.then.53, %if.then.24, %if.then.4, %if.end
  %71 = bitcast %struct._object** %s to i8*, !dbg !4107
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !4107
  %72 = bitcast %struct._object** %res to i8*, !dbg !4107
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !4107
  %73 = bitcast %struct._object** %modeobj to i8*, !dbg !4107
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !4107
  %74 = bitcast %struct._object** %nameobj to i8*, !dbg !4107
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !4107
  %75 = load %struct._object*, %struct._object** %retval, !dbg !4107
  ret %struct._object* %75, !dbg !4107
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_traverse(%struct.textio* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  %vret64 = alloca i32, align 4
  %vret78 = alloca i32, align 4
  %vret92 = alloca i32, align 4
  %vret106 = alloca i32, align 4
  %vret120 = alloca i32, align 4
  %vret134 = alloca i32, align 4
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !834, metadata !1880), !dbg !4108
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !835, metadata !1880), !dbg !4109
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !836, metadata !1880), !dbg !4110
  br label %do.body, !dbg !4111

do.body:                                          ; preds = %entry
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4112, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 4, !dbg !4114
  %1 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !4114, !tbaa !4115
  %tobool = icmp ne %struct._object* %1, null, !dbg !4116
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !4117

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !4118
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !4118
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !837, metadata !1880), !dbg !4120
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4121, !tbaa !1876
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4122, !tbaa !1876
  %buffer1 = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 4, !dbg !4123
  %5 = load %struct._object*, %struct._object** %buffer1, align 8, !dbg !4123, !tbaa !4115
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !4124, !tbaa !1876
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !4121
  store i32 %call, i32* %vret, align 4, !dbg !4120, !tbaa !1883
  %7 = load i32, i32* %vret, align 4, !dbg !4125, !tbaa !1883
  %tobool2 = icmp ne i32 %7, 0, !dbg !4125
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !4127

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !4128, !tbaa !1883
  store i32 %8, i32* %retval, !dbg !4130
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4130

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !4131
  br label %cleanup, !dbg !4131

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !4133
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !4133
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !4136

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4137

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !4140

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4141, !tbaa !1876
  %encoding = getelementptr inbounds %struct.textio, %struct.textio* %10, i32 0, i32 5, !dbg !4143
  %11 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !4143, !tbaa !4036
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !4144
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !4145

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !4146
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !4146
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !841, metadata !1880), !dbg !4148
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4149, !tbaa !1876
  %14 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4150, !tbaa !1876
  %encoding9 = getelementptr inbounds %struct.textio, %struct.textio* %14, i32 0, i32 5, !dbg !4151
  %15 = load %struct._object*, %struct._object** %encoding9, align 8, !dbg !4151, !tbaa !4036
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !4152, !tbaa !1876
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !4149
  store i32 %call10, i32* %vret8, align 4, !dbg !4148, !tbaa !1883
  %17 = load i32, i32* %vret8, align 4, !dbg !4153, !tbaa !1883
  %tobool11 = icmp ne i32 %17, 0, !dbg !4153
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !4155

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !4156, !tbaa !1883
  store i32 %18, i32* %retval, !dbg !4158
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !4158

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !4159
  br label %cleanup.14, !dbg !4159

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !4161
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !4161
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !4164

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !4165

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !4168

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4169, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 6, !dbg !4171
  %21 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !4171, !tbaa !4172
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !4173
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !4174

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !4175
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !4175
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !845, metadata !1880), !dbg !4177
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4178, !tbaa !1876
  %24 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4179, !tbaa !1876
  %encoder23 = getelementptr inbounds %struct.textio, %struct.textio* %24, i32 0, i32 6, !dbg !4180
  %25 = load %struct._object*, %struct._object** %encoder23, align 8, !dbg !4180, !tbaa !4172
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !4181, !tbaa !1876
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !4178
  store i32 %call24, i32* %vret22, align 4, !dbg !4177, !tbaa !1883
  %27 = load i32, i32* %vret22, align 4, !dbg !4182, !tbaa !1883
  %tobool25 = icmp ne i32 %27, 0, !dbg !4182
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !4184

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !4185, !tbaa !1883
  store i32 %28, i32* %retval, !dbg !4187
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !4187

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !4188
  br label %cleanup.28, !dbg !4188

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !4190
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !4190
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !4193

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !4194

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !4197

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4198, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %30, i32 0, i32 7, !dbg !4200
  %31 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !4200, !tbaa !4201
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !4202
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !4203

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !4204
  call void @llvm.lifetime.start(i64 4, i8* %32) #2, !dbg !4204
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !849, metadata !1880), !dbg !4206
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4207, !tbaa !1876
  %34 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4208, !tbaa !1876
  %decoder37 = getelementptr inbounds %struct.textio, %struct.textio* %34, i32 0, i32 7, !dbg !4209
  %35 = load %struct._object*, %struct._object** %decoder37, align 8, !dbg !4209, !tbaa !4201
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !4210, !tbaa !1876
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !4207
  store i32 %call38, i32* %vret36, align 4, !dbg !4206, !tbaa !1883
  %37 = load i32, i32* %vret36, align 4, !dbg !4211, !tbaa !1883
  %tobool39 = icmp ne i32 %37, 0, !dbg !4211
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !4213

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !4214, !tbaa !1883
  store i32 %38, i32* %retval, !dbg !4216
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !4216

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !4217
  br label %cleanup.42, !dbg !4217

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !4219
  call void @llvm.lifetime.end(i64 4, i8* %39) #2, !dbg !4219
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.8

LeafBlock.8:                                      ; preds = %cleanup.42
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest.43, 1
  br i1 %SwitchLeaf9, label %return, label %NewDefault.7

NewDefault.7:                                     ; preds = %LeafBlock.8
  br label %cleanup.cont.44

cleanup.cont.44:                                  ; preds = %NewDefault.7
  br label %if.end.45, !dbg !4222

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !4223

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !4226

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4227, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %40, i32 0, i32 8, !dbg !4229
  %41 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !4229, !tbaa !4230
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !4231
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !4232

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !4233
  call void @llvm.lifetime.start(i64 4, i8* %42) #2, !dbg !4233
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !853, metadata !1880), !dbg !4235
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4236, !tbaa !1876
  %44 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4237, !tbaa !1876
  %readnl51 = getelementptr inbounds %struct.textio, %struct.textio* %44, i32 0, i32 8, !dbg !4238
  %45 = load %struct._object*, %struct._object** %readnl51, align 8, !dbg !4238, !tbaa !4230
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !4239, !tbaa !1876
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !4236
  store i32 %call52, i32* %vret50, align 4, !dbg !4235, !tbaa !1883
  %47 = load i32, i32* %vret50, align 4, !dbg !4240, !tbaa !1883
  %tobool53 = icmp ne i32 %47, 0, !dbg !4240
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !4242

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !4243, !tbaa !1883
  store i32 %48, i32* %retval, !dbg !4245
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !4245

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !4246
  br label %cleanup.56, !dbg !4246

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !4248
  call void @llvm.lifetime.end(i64 4, i8* %49) #2, !dbg !4248
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.11

LeafBlock.11:                                     ; preds = %cleanup.56
  %SwitchLeaf12 = icmp eq i32 %cleanup.dest.57, 1
  br i1 %SwitchLeaf12, label %return, label %NewDefault.10

NewDefault.10:                                    ; preds = %LeafBlock.11
  br label %cleanup.cont.58

cleanup.cont.58:                                  ; preds = %NewDefault.10
  br label %if.end.59, !dbg !4251

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !4252

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61, !dbg !4255

do.body.61:                                       ; preds = %do.end.60
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4256, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 22, !dbg !4258
  %51 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !4258, !tbaa !4259
  %tobool62 = icmp ne %struct._object* %51, null, !dbg !4260
  br i1 %tobool62, label %if.then.63, label %if.end.73, !dbg !4261

if.then.63:                                       ; preds = %do.body.61
  %52 = bitcast i32* %vret64 to i8*, !dbg !4262
  call void @llvm.lifetime.start(i64 4, i8* %52) #2, !dbg !4262
  call void @llvm.dbg.declare(metadata i32* %vret64, metadata !857, metadata !1880), !dbg !4264
  %53 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4265, !tbaa !1876
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4266, !tbaa !1876
  %decoded_chars65 = getelementptr inbounds %struct.textio, %struct.textio* %54, i32 0, i32 22, !dbg !4267
  %55 = load %struct._object*, %struct._object** %decoded_chars65, align 8, !dbg !4267, !tbaa !4259
  %56 = load i8*, i8** %arg.addr, align 8, !dbg !4268, !tbaa !1876
  %call66 = call i32 %53(%struct._object* %55, i8* %56), !dbg !4265
  store i32 %call66, i32* %vret64, align 4, !dbg !4264, !tbaa !1883
  %57 = load i32, i32* %vret64, align 4, !dbg !4269, !tbaa !1883
  %tobool67 = icmp ne i32 %57, 0, !dbg !4269
  br i1 %tobool67, label %if.then.68, label %if.end.69, !dbg !4271

if.then.68:                                       ; preds = %if.then.63
  %58 = load i32, i32* %vret64, align 4, !dbg !4272, !tbaa !1883
  store i32 %58, i32* %retval, !dbg !4274
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !4274

if.end.69:                                        ; preds = %if.then.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !4275
  br label %cleanup.70, !dbg !4275

cleanup.70:                                       ; preds = %if.end.69, %if.then.68
  %59 = bitcast i32* %vret64 to i8*, !dbg !4277
  call void @llvm.lifetime.end(i64 4, i8* %59) #2, !dbg !4277
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.14

LeafBlock.14:                                     ; preds = %cleanup.70
  %SwitchLeaf15 = icmp eq i32 %cleanup.dest.71, 1
  br i1 %SwitchLeaf15, label %return, label %NewDefault.13

NewDefault.13:                                    ; preds = %LeafBlock.14
  br label %cleanup.cont.72

cleanup.cont.72:                                  ; preds = %NewDefault.13
  br label %if.end.73, !dbg !4280

if.end.73:                                        ; preds = %cleanup.cont.72, %do.body.61
  br label %do.end.74, !dbg !4281

do.end.74:                                        ; preds = %if.end.73
  br label %do.body.75, !dbg !4284

do.body.75:                                       ; preds = %do.end.74
  %60 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4285, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %60, i32 0, i32 24, !dbg !4287
  %61 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !4287, !tbaa !4288
  %tobool76 = icmp ne %struct._object* %61, null, !dbg !4289
  br i1 %tobool76, label %if.then.77, label %if.end.87, !dbg !4290

if.then.77:                                       ; preds = %do.body.75
  %62 = bitcast i32* %vret78 to i8*, !dbg !4291
  call void @llvm.lifetime.start(i64 4, i8* %62) #2, !dbg !4291
  call void @llvm.dbg.declare(metadata i32* %vret78, metadata !861, metadata !1880), !dbg !4293
  %63 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4294, !tbaa !1876
  %64 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4295, !tbaa !1876
  %pending_bytes79 = getelementptr inbounds %struct.textio, %struct.textio* %64, i32 0, i32 24, !dbg !4296
  %65 = load %struct._object*, %struct._object** %pending_bytes79, align 8, !dbg !4296, !tbaa !4288
  %66 = load i8*, i8** %arg.addr, align 8, !dbg !4297, !tbaa !1876
  %call80 = call i32 %63(%struct._object* %65, i8* %66), !dbg !4294
  store i32 %call80, i32* %vret78, align 4, !dbg !4293, !tbaa !1883
  %67 = load i32, i32* %vret78, align 4, !dbg !4298, !tbaa !1883
  %tobool81 = icmp ne i32 %67, 0, !dbg !4298
  br i1 %tobool81, label %if.then.82, label %if.end.83, !dbg !4300

if.then.82:                                       ; preds = %if.then.77
  %68 = load i32, i32* %vret78, align 4, !dbg !4301, !tbaa !1883
  store i32 %68, i32* %retval, !dbg !4303
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84, !dbg !4303

if.end.83:                                        ; preds = %if.then.77
  store i32 0, i32* %cleanup.dest.slot, !dbg !4304
  br label %cleanup.84, !dbg !4304

cleanup.84:                                       ; preds = %if.end.83, %if.then.82
  %69 = bitcast i32* %vret78 to i8*, !dbg !4306
  call void @llvm.lifetime.end(i64 4, i8* %69) #2, !dbg !4306
  %cleanup.dest.85 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.17

LeafBlock.17:                                     ; preds = %cleanup.84
  %SwitchLeaf18 = icmp eq i32 %cleanup.dest.85, 1
  br i1 %SwitchLeaf18, label %return, label %NewDefault.16

NewDefault.16:                                    ; preds = %LeafBlock.17
  br label %cleanup.cont.86

cleanup.cont.86:                                  ; preds = %NewDefault.16
  br label %if.end.87, !dbg !4309

if.end.87:                                        ; preds = %cleanup.cont.86, %do.body.75
  br label %do.end.88, !dbg !4310

do.end.88:                                        ; preds = %if.end.87
  br label %do.body.89, !dbg !4313

do.body.89:                                       ; preds = %do.end.88
  %70 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4314, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %70, i32 0, i32 26, !dbg !4316
  %71 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !4316, !tbaa !4317
  %tobool90 = icmp ne %struct._object* %71, null, !dbg !4318
  br i1 %tobool90, label %if.then.91, label %if.end.101, !dbg !4319

if.then.91:                                       ; preds = %do.body.89
  %72 = bitcast i32* %vret92 to i8*, !dbg !4320
  call void @llvm.lifetime.start(i64 4, i8* %72) #2, !dbg !4320
  call void @llvm.dbg.declare(metadata i32* %vret92, metadata !865, metadata !1880), !dbg !4322
  %73 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4323, !tbaa !1876
  %74 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4324, !tbaa !1876
  %snapshot93 = getelementptr inbounds %struct.textio, %struct.textio* %74, i32 0, i32 26, !dbg !4325
  %75 = load %struct._object*, %struct._object** %snapshot93, align 8, !dbg !4325, !tbaa !4317
  %76 = load i8*, i8** %arg.addr, align 8, !dbg !4326, !tbaa !1876
  %call94 = call i32 %73(%struct._object* %75, i8* %76), !dbg !4323
  store i32 %call94, i32* %vret92, align 4, !dbg !4322, !tbaa !1883
  %77 = load i32, i32* %vret92, align 4, !dbg !4327, !tbaa !1883
  %tobool95 = icmp ne i32 %77, 0, !dbg !4327
  br i1 %tobool95, label %if.then.96, label %if.end.97, !dbg !4329

if.then.96:                                       ; preds = %if.then.91
  %78 = load i32, i32* %vret92, align 4, !dbg !4330, !tbaa !1883
  store i32 %78, i32* %retval, !dbg !4332
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !4332

if.end.97:                                        ; preds = %if.then.91
  store i32 0, i32* %cleanup.dest.slot, !dbg !4333
  br label %cleanup.98, !dbg !4333

cleanup.98:                                       ; preds = %if.end.97, %if.then.96
  %79 = bitcast i32* %vret92 to i8*, !dbg !4335
  call void @llvm.lifetime.end(i64 4, i8* %79) #2, !dbg !4335
  %cleanup.dest.99 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.20

LeafBlock.20:                                     ; preds = %cleanup.98
  %SwitchLeaf21 = icmp eq i32 %cleanup.dest.99, 1
  br i1 %SwitchLeaf21, label %return, label %NewDefault.19

NewDefault.19:                                    ; preds = %LeafBlock.20
  br label %cleanup.cont.100

cleanup.cont.100:                                 ; preds = %NewDefault.19
  br label %if.end.101, !dbg !4338

if.end.101:                                       ; preds = %cleanup.cont.100, %do.body.89
  br label %do.end.102, !dbg !4339

do.end.102:                                       ; preds = %if.end.101
  br label %do.body.103, !dbg !4342

do.body.103:                                      ; preds = %do.end.102
  %80 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4343, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %80, i32 0, i32 9, !dbg !4345
  %81 = load %struct._object*, %struct._object** %errors, align 8, !dbg !4345, !tbaa !4346
  %tobool104 = icmp ne %struct._object* %81, null, !dbg !4347
  br i1 %tobool104, label %if.then.105, label %if.end.115, !dbg !4348

if.then.105:                                      ; preds = %do.body.103
  %82 = bitcast i32* %vret106 to i8*, !dbg !4349
  call void @llvm.lifetime.start(i64 4, i8* %82) #2, !dbg !4349
  call void @llvm.dbg.declare(metadata i32* %vret106, metadata !869, metadata !1880), !dbg !4351
  %83 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4352, !tbaa !1876
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4353, !tbaa !1876
  %errors107 = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 9, !dbg !4354
  %85 = load %struct._object*, %struct._object** %errors107, align 8, !dbg !4354, !tbaa !4346
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !4355, !tbaa !1876
  %call108 = call i32 %83(%struct._object* %85, i8* %86), !dbg !4352
  store i32 %call108, i32* %vret106, align 4, !dbg !4351, !tbaa !1883
  %87 = load i32, i32* %vret106, align 4, !dbg !4356, !tbaa !1883
  %tobool109 = icmp ne i32 %87, 0, !dbg !4356
  br i1 %tobool109, label %if.then.110, label %if.end.111, !dbg !4358

if.then.110:                                      ; preds = %if.then.105
  %88 = load i32, i32* %vret106, align 4, !dbg !4359, !tbaa !1883
  store i32 %88, i32* %retval, !dbg !4361
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !4361

if.end.111:                                       ; preds = %if.then.105
  store i32 0, i32* %cleanup.dest.slot, !dbg !4362
  br label %cleanup.112, !dbg !4362

cleanup.112:                                      ; preds = %if.end.111, %if.then.110
  %89 = bitcast i32* %vret106 to i8*, !dbg !4364
  call void @llvm.lifetime.end(i64 4, i8* %89) #2, !dbg !4364
  %cleanup.dest.113 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.23

LeafBlock.23:                                     ; preds = %cleanup.112
  %SwitchLeaf24 = icmp eq i32 %cleanup.dest.113, 1
  br i1 %SwitchLeaf24, label %return, label %NewDefault.22

NewDefault.22:                                    ; preds = %LeafBlock.23
  br label %cleanup.cont.114

cleanup.cont.114:                                 ; preds = %NewDefault.22
  br label %if.end.115, !dbg !4367

if.end.115:                                       ; preds = %cleanup.cont.114, %do.body.103
  br label %do.end.116, !dbg !4368

do.end.116:                                       ; preds = %if.end.115
  br label %do.body.117, !dbg !4371

do.body.117:                                      ; preds = %do.end.116
  %90 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4372, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %90, i32 0, i32 28, !dbg !4374
  %91 = load %struct._object*, %struct._object** %raw, align 8, !dbg !4374, !tbaa !4375
  %tobool118 = icmp ne %struct._object* %91, null, !dbg !4376
  br i1 %tobool118, label %if.then.119, label %if.end.129, !dbg !4377

if.then.119:                                      ; preds = %do.body.117
  %92 = bitcast i32* %vret120 to i8*, !dbg !4378
  call void @llvm.lifetime.start(i64 4, i8* %92) #2, !dbg !4378
  call void @llvm.dbg.declare(metadata i32* %vret120, metadata !873, metadata !1880), !dbg !4380
  %93 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4381, !tbaa !1876
  %94 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4382, !tbaa !1876
  %raw121 = getelementptr inbounds %struct.textio, %struct.textio* %94, i32 0, i32 28, !dbg !4383
  %95 = load %struct._object*, %struct._object** %raw121, align 8, !dbg !4383, !tbaa !4375
  %96 = load i8*, i8** %arg.addr, align 8, !dbg !4384, !tbaa !1876
  %call122 = call i32 %93(%struct._object* %95, i8* %96), !dbg !4381
  store i32 %call122, i32* %vret120, align 4, !dbg !4380, !tbaa !1883
  %97 = load i32, i32* %vret120, align 4, !dbg !4385, !tbaa !1883
  %tobool123 = icmp ne i32 %97, 0, !dbg !4385
  br i1 %tobool123, label %if.then.124, label %if.end.125, !dbg !4387

if.then.124:                                      ; preds = %if.then.119
  %98 = load i32, i32* %vret120, align 4, !dbg !4388, !tbaa !1883
  store i32 %98, i32* %retval, !dbg !4390
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126, !dbg !4390

if.end.125:                                       ; preds = %if.then.119
  store i32 0, i32* %cleanup.dest.slot, !dbg !4391
  br label %cleanup.126, !dbg !4391

cleanup.126:                                      ; preds = %if.end.125, %if.then.124
  %99 = bitcast i32* %vret120 to i8*, !dbg !4393
  call void @llvm.lifetime.end(i64 4, i8* %99) #2, !dbg !4393
  %cleanup.dest.127 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.26

LeafBlock.26:                                     ; preds = %cleanup.126
  %SwitchLeaf27 = icmp eq i32 %cleanup.dest.127, 1
  br i1 %SwitchLeaf27, label %return, label %NewDefault.25

NewDefault.25:                                    ; preds = %LeafBlock.26
  br label %cleanup.cont.128

cleanup.cont.128:                                 ; preds = %NewDefault.25
  br label %if.end.129, !dbg !4396

if.end.129:                                       ; preds = %cleanup.cont.128, %do.body.117
  br label %do.end.130, !dbg !4397

do.end.130:                                       ; preds = %if.end.129
  br label %do.body.131, !dbg !4400

do.body.131:                                      ; preds = %do.end.130
  %100 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4401, !tbaa !1876
  %dict = getelementptr inbounds %struct.textio, %struct.textio* %100, i32 0, i32 30, !dbg !4403
  %101 = load %struct._object*, %struct._object** %dict, align 8, !dbg !4403, !tbaa !3838
  %tobool132 = icmp ne %struct._object* %101, null, !dbg !4404
  br i1 %tobool132, label %if.then.133, label %if.end.143, !dbg !4405

if.then.133:                                      ; preds = %do.body.131
  %102 = bitcast i32* %vret134 to i8*, !dbg !4406
  call void @llvm.lifetime.start(i64 4, i8* %102) #2, !dbg !4406
  call void @llvm.dbg.declare(metadata i32* %vret134, metadata !877, metadata !1880), !dbg !4408
  %103 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4409, !tbaa !1876
  %104 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4410, !tbaa !1876
  %dict135 = getelementptr inbounds %struct.textio, %struct.textio* %104, i32 0, i32 30, !dbg !4411
  %105 = load %struct._object*, %struct._object** %dict135, align 8, !dbg !4411, !tbaa !3838
  %106 = load i8*, i8** %arg.addr, align 8, !dbg !4412, !tbaa !1876
  %call136 = call i32 %103(%struct._object* %105, i8* %106), !dbg !4409
  store i32 %call136, i32* %vret134, align 4, !dbg !4408, !tbaa !1883
  %107 = load i32, i32* %vret134, align 4, !dbg !4413, !tbaa !1883
  %tobool137 = icmp ne i32 %107, 0, !dbg !4413
  br i1 %tobool137, label %if.then.138, label %if.end.139, !dbg !4415

if.then.138:                                      ; preds = %if.then.133
  %108 = load i32, i32* %vret134, align 4, !dbg !4416, !tbaa !1883
  store i32 %108, i32* %retval, !dbg !4418
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.140, !dbg !4418

if.end.139:                                       ; preds = %if.then.133
  store i32 0, i32* %cleanup.dest.slot, !dbg !4419
  br label %cleanup.140, !dbg !4419

cleanup.140:                                      ; preds = %if.end.139, %if.then.138
  %109 = bitcast i32* %vret134 to i8*, !dbg !4421
  call void @llvm.lifetime.end(i64 4, i8* %109) #2, !dbg !4421
  %cleanup.dest.141 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.29

LeafBlock.29:                                     ; preds = %cleanup.140
  %SwitchLeaf30 = icmp eq i32 %cleanup.dest.141, 1
  br i1 %SwitchLeaf30, label %return, label %NewDefault.28

NewDefault.28:                                    ; preds = %LeafBlock.29
  br label %cleanup.cont.142

cleanup.cont.142:                                 ; preds = %NewDefault.28
  br label %if.end.143, !dbg !4424

if.end.143:                                       ; preds = %cleanup.cont.142, %do.body.131
  br label %do.end.144, !dbg !4425

do.end.144:                                       ; preds = %if.end.143
  store i32 0, i32* %retval, !dbg !4428
  br label %return, !dbg !4428

return:                                           ; preds = %LeafBlock.29, %LeafBlock.26, %LeafBlock.23, %LeafBlock.20, %LeafBlock.17, %LeafBlock.14, %LeafBlock.11, %LeafBlock.8, %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.144
  %110 = load i32, i32* %retval, !dbg !4429
  ret i32 %110, !dbg !4429
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_clear(%struct.textio* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !883, metadata !1880), !dbg !4430
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4431, !tbaa !1876
  %call = call i32 @_textiowrapper_clear(%struct.textio* %0), !dbg !4433
  %cmp = icmp slt i32 %call, 0, !dbg !4434
  br i1 %cmp, label %if.then, label %if.end, !dbg !4435

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !4436
  br label %return, !dbg !4436

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4437

do.body:                                          ; preds = %if.end
  %1 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4438
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4438
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !884, metadata !1880), !dbg !4440
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4441, !tbaa !1876
  %dict = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 30, !dbg !4442
  %3 = load %struct._object*, %struct._object** %dict, align 8, !dbg !4442, !tbaa !3838
  store %struct._object* %3, %struct._object** %_py_tmp, align 8, !dbg !4440, !tbaa !1876
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4443, !tbaa !1876
  %cmp1 = icmp ne %struct._object* %4, null, !dbg !4444
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !4445

if.then.2:                                        ; preds = %do.body
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4446, !tbaa !1876
  %dict3 = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 30, !dbg !4448
  store %struct._object* null, %struct._object** %dict3, align 8, !dbg !4449, !tbaa !3838
  br label %do.body.4, !dbg !4450

do.body.4:                                        ; preds = %if.then.2
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4451
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !4451
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !886, metadata !1880), !dbg !4453
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4454, !tbaa !1876
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !4453, !tbaa !1876
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4455, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !4457
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !4458, !tbaa !1927
  %dec = add i64 %9, -1, !dbg !4458
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4458, !tbaa !1927
  %cmp5 = icmp ne i64 %dec, 0, !dbg !4459
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !4460

if.then.6:                                        ; preds = %do.body.4
  br label %if.end.7, !dbg !4461

if.else:                                          ; preds = %do.body.4
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4463, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !4465
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4465, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !4466
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4466, !tbaa !2196
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4467, !tbaa !1876
  call void %12(%struct._object* %13), !dbg !4468
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4469
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !4469
  br label %do.cond, !dbg !4471

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !4472

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !4474

if.end.8:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4476
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !4476
  br label %do.end.10, !dbg !4479

do.end.10:                                        ; preds = %if.end.8
  store i32 0, i32* %retval, !dbg !4480
  br label %return, !dbg !4480

return:                                           ; preds = %do.end.10, %if.then
  %16 = load i32, i32* %retval, !dbg !4481
  ret i32 %16, !dbg !4481
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_iternext(%struct.textio* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %line = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp29 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !892, metadata !1880), !dbg !4482
  %0 = bitcast %struct._object** %line to i8*, !dbg !4483
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4483
  call void @llvm.dbg.declare(metadata %struct._object** %line, metadata !893, metadata !1880), !dbg !4484
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4485, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !4487
  %2 = load i32, i32* %ok, align 4, !dbg !4487, !tbaa !3895
  %cmp = icmp sle i32 %2, 0, !dbg !4488
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !4489

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4490, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !4494
  %4 = load i32, i32* %detached, align 4, !dbg !4494, !tbaa !3903
  %tobool = icmp ne i32 %4, 0, !dbg !4495
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !4496

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4497, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !4500
  br label %if.end, !dbg !4501

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4502, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !4505
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !4506
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4508

if.end.2:                                         ; preds = %entry
  %7 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4509, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %7, i32 0, i32 18, !dbg !4510
  store i8 0, i8* %telling, align 1, !dbg !4511, !tbaa !4512
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4513, !tbaa !1876
  %9 = bitcast %struct.textio* %8 to %struct._object*, !dbg !4514
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !4515
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4515, !tbaa !2194
  %cmp3 = icmp eq %struct._typeobject* %10, @PyTextIOWrapper_Type, !dbg !4516
  br i1 %cmp3, label %if.then.4, label %if.else.5, !dbg !4517

if.then.4:                                        ; preds = %if.end.2
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4518, !tbaa !1876
  %call = call %struct._object* @_textiowrapper_readline(%struct.textio* %11, i64 -1), !dbg !4520
  store %struct._object* %call, %struct._object** %line, align 8, !dbg !4521, !tbaa !1876
  br label %if.end.19, !dbg !4522

if.else.5:                                        ; preds = %if.end.2
  %12 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4523, !tbaa !1876
  %13 = bitcast %struct.textio* %12 to %struct._object*, !dbg !4524
  %14 = load %struct._object*, %struct._object** @_PyIO_str_readline, align 8, !dbg !4525, !tbaa !1876
  %call6 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %13, %struct._object* %14, i8* null), !dbg !4526
  store %struct._object* %call6, %struct._object** %line, align 8, !dbg !4527, !tbaa !1876
  %15 = load %struct._object*, %struct._object** %line, align 8, !dbg !4528, !tbaa !1876
  %tobool7 = icmp ne %struct._object* %15, null, !dbg !4528
  br i1 %tobool7, label %land.lhs.true, label %if.end.18, !dbg !4529

land.lhs.true:                                    ; preds = %if.else.5
  %16 = load %struct._object*, %struct._object** %line, align 8, !dbg !4530, !tbaa !1876
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !4532
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !4532, !tbaa !2194
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 19, !dbg !4533
  %18 = load i64, i64* %tp_flags, align 8, !dbg !4533, !tbaa !3072
  %and = and i64 %18, 268435456, !dbg !4534
  %cmp9 = icmp ne i64 %and, 0, !dbg !4535
  br i1 %cmp9, label %if.end.18, label %if.then.10, !dbg !4536

if.then.10:                                       ; preds = %land.lhs.true
  %19 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !4537, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %line, align 8, !dbg !4538, !tbaa !1876
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !4539
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !4539, !tbaa !2194
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 1, !dbg !4540
  %22 = load i8*, i8** %tp_name, align 8, !dbg !4540, !tbaa !3080
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %19, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.40, i32 0, i32 0), i8* %22), !dbg !4541
  br label %do.body, !dbg !4542

do.body:                                          ; preds = %if.then.10
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4543
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !4543
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !894, metadata !1880), !dbg !4545
  %24 = load %struct._object*, %struct._object** %line, align 8, !dbg !4546, !tbaa !1876
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !4545, !tbaa !1876
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4547, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !4549
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !4550, !tbaa !1927
  %dec = add i64 %26, -1, !dbg !4550
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4550, !tbaa !1927
  %cmp13 = icmp ne i64 %dec, 0, !dbg !4551
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !4552

if.then.14:                                       ; preds = %do.body
  br label %if.end.17, !dbg !4553

if.else.15:                                       ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4555, !tbaa !1876
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !4557
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !4557, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !4558
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4558, !tbaa !2196
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4559, !tbaa !1876
  call void %29(%struct._object* %30), !dbg !4560
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.15, %if.then.14
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4561
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !4561
  br label %do.cond, !dbg !4563

do.cond:                                          ; preds = %if.end.17
  br label %do.end, !dbg !4564

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !4566
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4566

if.end.18:                                        ; preds = %land.lhs.true, %if.else.5
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.then.4
  %32 = load %struct._object*, %struct._object** %line, align 8, !dbg !4567, !tbaa !1876
  %cmp20 = icmp eq %struct._object* %32, null, !dbg !4569
  br i1 %cmp20, label %if.then.24, label %lor.lhs.false, !dbg !4570

lor.lhs.false:                                    ; preds = %if.end.19
  %33 = load %struct._object*, %struct._object** %line, align 8, !dbg !4571, !tbaa !1876
  %34 = bitcast %struct._object* %33 to %struct.PyASCIIObject*, !dbg !4573
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %34, i32 0, i32 3, !dbg !4574
  %35 = bitcast %struct.anon* %state to i32*, !dbg !4575
  %bf.load = load i32, i32* %35, align 4, !dbg !4575
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !4575
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4575
  %tobool21 = icmp ne i32 %bf.clear, 0, !dbg !4576
  br i1 %tobool21, label %cond.true, label %cond.false, !dbg !4576

cond.true:                                        ; preds = %lor.lhs.false
  br label %cond.end, !dbg !4577

cond.false:                                       ; preds = %lor.lhs.false
  %36 = load %struct._object*, %struct._object** %line, align 8, !dbg !4579, !tbaa !1876
  %call22 = call i32 @_PyUnicode_Ready(%struct._object* %36), !dbg !4581
  br label %cond.end, !dbg !4576

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call22, %cond.false ], !dbg !4576
  %cmp23 = icmp eq i32 %cond, -1, !dbg !4582
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !4585

if.then.24:                                       ; preds = %cond.end, %if.end.19
  store %struct._object* null, %struct._object** %retval, !dbg !4586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4586

if.end.25:                                        ; preds = %cond.end
  %37 = load %struct._object*, %struct._object** %line, align 8, !dbg !4587, !tbaa !1876
  %38 = bitcast %struct._object* %37 to %struct.PyASCIIObject*, !dbg !4588
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %38, i32 0, i32 1, !dbg !4589
  %39 = load i64, i64* %length, align 8, !dbg !4589, !tbaa !1937
  %cmp26 = icmp eq i64 %39, 0, !dbg !4590
  br i1 %cmp26, label %if.then.27, label %if.end.60, !dbg !4591

if.then.27:                                       ; preds = %if.end.25
  br label %do.body.28, !dbg !4592

do.body.28:                                       ; preds = %if.then.27
  %40 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !4593
  call void @llvm.lifetime.start(i64 8, i8* %40) #2, !dbg !4593
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp29, metadata !900, metadata !1880), !dbg !4595
  %41 = load %struct._object*, %struct._object** %line, align 8, !dbg !4596, !tbaa !1876
  store %struct._object* %41, %struct._object** %_py_decref_tmp29, align 8, !dbg !4595, !tbaa !1876
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !4597, !tbaa !1876
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !4599
  %43 = load i64, i64* %ob_refcnt30, align 8, !dbg !4600, !tbaa !1927
  %dec31 = add i64 %43, -1, !dbg !4600
  store i64 %dec31, i64* %ob_refcnt30, align 8, !dbg !4600, !tbaa !1927
  %cmp32 = icmp ne i64 %dec31, 0, !dbg !4601
  br i1 %cmp32, label %if.then.33, label %if.else.34, !dbg !4602

if.then.33:                                       ; preds = %do.body.28
  br label %if.end.37, !dbg !4603

if.else.34:                                       ; preds = %do.body.28
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !4605, !tbaa !1876
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !4607
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !4607, !tbaa !2194
  %tp_dealloc36 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !4608
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc36, align 8, !dbg !4608, !tbaa !2196
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !4609, !tbaa !1876
  call void %46(%struct._object* %47), !dbg !4610
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.33
  %48 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !4611
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !4611
  br label %do.cond.38, !dbg !4613

do.cond.38:                                       ; preds = %if.end.37
  br label %do.end.39, !dbg !4614

do.end.39:                                        ; preds = %do.cond.38
  br label %do.body.40, !dbg !4616

do.body.40:                                       ; preds = %do.end.39
  %49 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4617
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !4617
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !904, metadata !1880), !dbg !4619
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4620, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 26, !dbg !4621
  %51 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !4621, !tbaa !4317
  store %struct._object* %51, %struct._object** %_py_tmp, align 8, !dbg !4619, !tbaa !1876
  %52 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4622, !tbaa !1876
  %cmp41 = icmp ne %struct._object* %52, null, !dbg !4623
  br i1 %cmp41, label %if.then.42, label %if.end.56, !dbg !4624

if.then.42:                                       ; preds = %do.body.40
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4625, !tbaa !1876
  %snapshot43 = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 26, !dbg !4627
  store %struct._object* null, %struct._object** %snapshot43, align 8, !dbg !4628, !tbaa !4317
  br label %do.body.44, !dbg !4629

do.body.44:                                       ; preds = %if.then.42
  %54 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !4630
  call void @llvm.lifetime.start(i64 8, i8* %54) #2, !dbg !4630
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp45, metadata !906, metadata !1880), !dbg !4632
  %55 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4633, !tbaa !1876
  store %struct._object* %55, %struct._object** %_py_decref_tmp45, align 8, !dbg !4632, !tbaa !1876
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !4634, !tbaa !1876
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0, !dbg !4636
  %57 = load i64, i64* %ob_refcnt46, align 8, !dbg !4637, !tbaa !1927
  %dec47 = add i64 %57, -1, !dbg !4637
  store i64 %dec47, i64* %ob_refcnt46, align 8, !dbg !4637, !tbaa !1927
  %cmp48 = icmp ne i64 %dec47, 0, !dbg !4638
  br i1 %cmp48, label %if.then.49, label %if.else.50, !dbg !4639

if.then.49:                                       ; preds = %do.body.44
  br label %if.end.53, !dbg !4640

if.else.50:                                       ; preds = %do.body.44
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !4642, !tbaa !1876
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1, !dbg !4644
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !4644, !tbaa !2194
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4, !dbg !4645
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8, !dbg !4645, !tbaa !2196
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8, !dbg !4646, !tbaa !1876
  call void %60(%struct._object* %61), !dbg !4647
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  %62 = bitcast %struct._object** %_py_decref_tmp45 to i8*, !dbg !4648
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !4648
  br label %do.cond.54, !dbg !4650

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !4651

do.end.55:                                        ; preds = %do.cond.54
  br label %if.end.56, !dbg !4653

if.end.56:                                        ; preds = %do.end.55, %do.body.40
  %63 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4655
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !4655
  br label %do.cond.57, !dbg !4658

do.cond.57:                                       ; preds = %if.end.56
  br label %do.end.58, !dbg !4659

do.end.58:                                        ; preds = %do.cond.57
  %64 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4661, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %64, i32 0, i32 16, !dbg !4662
  %65 = load i8, i8* %seekable, align 1, !dbg !4662, !tbaa !4663
  %66 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4664, !tbaa !1876
  %telling59 = getelementptr inbounds %struct.textio, %struct.textio* %66, i32 0, i32 18, !dbg !4665
  store i8 %65, i8* %telling59, align 1, !dbg !4666, !tbaa !4512
  store %struct._object* null, %struct._object** %retval, !dbg !4667
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4667

if.end.60:                                        ; preds = %if.end.25
  %67 = load %struct._object*, %struct._object** %line, align 8, !dbg !4668, !tbaa !1876
  store %struct._object* %67, %struct._object** %retval, !dbg !4669
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4669

cleanup:                                          ; preds = %if.end.60, %do.end.58, %if.then.24, %do.end, %if.end
  %68 = bitcast %struct._object** %line to i8*, !dbg !4670
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !4670
  %69 = load %struct._object*, %struct._object** %retval, !dbg !4670
  ret %struct._object* %69, !dbg !4670
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_init(%struct.textio* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [7 x i8*], align 16
  %buffer = alloca %struct._object*, align 8
  %raw = alloca %struct._object*, align 8
  %codec_info = alloca %struct._object*, align 8
  %encoding = alloca i8*, align 8
  %errors = alloca i8*, align 8
  %newline = alloca i8*, align 8
  %line_buffering = alloca i32, align 4
  %write_through = alloca i32, align 4
  %state = alloca %struct._PyIO_State*, align 8
  %res = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp55 = alloca %struct._object*, align 8
  %_py_decref_tmp62 = alloca %struct._object*, align 8
  %_py_tmp78 = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %_py_tmp100 = alloca %struct._object*, align 8
  %_py_decref_tmp106 = alloca %struct._object*, align 8
  %_py_tmp122 = alloca %struct._object*, align 8
  %_py_decref_tmp128 = alloca %struct._object*, align 8
  %_py_tmp144 = alloca %struct._object*, align 8
  %_py_decref_tmp150 = alloca %struct._object*, align 8
  %_py_tmp166 = alloca %struct._object*, align 8
  %_py_decref_tmp172 = alloca %struct._object*, align 8
  %_py_tmp188 = alloca %struct._object*, align 8
  %_py_decref_tmp194 = alloca %struct._object*, align 8
  %_py_tmp210 = alloca %struct._object*, align 8
  %_py_decref_tmp217 = alloca %struct._object*, align 8
  %_py_tmp233 = alloca %struct._object*, align 8
  %_py_decref_tmp240 = alloca %struct._object*, align 8
  %fileno = alloca %struct._object*, align 8
  %fd = alloca i32, align 4
  %_py_decref_tmp277 = alloca %struct._object*, align 8
  %_py_tmp309 = alloca %struct._object*, align 8
  %_py_decref_tmp316 = alloca %struct._object*, align 8
  %locale_module = alloca %struct._object*, align 8
  %_py_decref_tmp353 = alloca %struct._object*, align 8
  %_py_tmp385 = alloca %struct._object*, align 8
  %_py_decref_tmp392 = alloca %struct._object*, align 8
  %_py_tmp442 = alloca %struct._object*, align 8
  %_py_decref_tmp449 = alloca %struct._object*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp565 = alloca i32, align 4
  %_py_decref_tmp581 = alloca %struct._object*, align 8
  %incrementalDecoder = alloca %struct._object*, align 8
  %_py_tmp621 = alloca %struct._object*, align 8
  %_py_decref_tmp629 = alloca %struct._object*, align 8
  %_py_decref_tmp658 = alloca %struct._object*, align 8
  %e = alloca %struct.encodefuncentry*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp719 = alloca %struct._object*, align 8
  %_py_decref_tmp737 = alloca %struct._object*, align 8
  %_py_decref_tmp781 = alloca %struct._object*, align 8
  %_py_decref_tmp804 = alloca %struct._object*, align 8
  %cookieObj = alloca %struct._object*, align 8
  %cmp832 = alloca i32, align 4
  %_py_decref_tmp842 = alloca %struct._object*, align 8
  %_py_decref_tmp870 = alloca %struct._object*, align 8
  %_py_xdecref_tmp891 = alloca %struct._object*, align 8
  %_py_decref_tmp897 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1556, metadata !1880), !dbg !4671
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1557, metadata !1880), !dbg !4672
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1558, metadata !1880), !dbg !4673
  %0 = bitcast [7 x i8*]* %kwlist to i8*, !dbg !4674
  call void @llvm.lifetime.start(i64 56, i8* %0) #2, !dbg !4674
  call void @llvm.dbg.declare(metadata [7 x i8*]* %kwlist, metadata !1559, metadata !1880), !dbg !4675
  %1 = bitcast [7 x i8*]* %kwlist to i8*, !dbg !4675
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 56, i32 16, i1 false), !dbg !4675
  %2 = bitcast i8* %1 to [7 x i8*]*, !dbg !4675
  %3 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 0, !dbg !4675
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i8** %3, !dbg !4675
  %4 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 1, !dbg !4675
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8** %4, !dbg !4675
  %5 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 2, !dbg !4675
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8** %5, !dbg !4675
  %6 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 3, !dbg !4675
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i8** %6, !dbg !4675
  %7 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 4, !dbg !4675
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i32 0, i32 0), i8** %7, !dbg !4675
  %8 = getelementptr [7 x i8*], [7 x i8*]* %2, i32 0, i32 5, !dbg !4675
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i32 0, i32 0), i8** %8, !dbg !4675
  %9 = bitcast %struct._object** %buffer to i8*, !dbg !4676
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !4676
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !1563, metadata !1880), !dbg !4677
  %10 = bitcast %struct._object** %raw to i8*, !dbg !4676
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !4676
  call void @llvm.dbg.declare(metadata %struct._object** %raw, metadata !1564, metadata !1880), !dbg !4678
  %11 = bitcast %struct._object** %codec_info to i8*, !dbg !4676
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !4676
  call void @llvm.dbg.declare(metadata %struct._object** %codec_info, metadata !1565, metadata !1880), !dbg !4679
  store %struct._object* null, %struct._object** %codec_info, align 8, !dbg !4679, !tbaa !1876
  %12 = bitcast i8** %encoding to i8*, !dbg !4680
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !4680
  call void @llvm.dbg.declare(metadata i8** %encoding, metadata !1566, metadata !1880), !dbg !4681
  store i8* null, i8** %encoding, align 8, !dbg !4681, !tbaa !1876
  %13 = bitcast i8** %errors to i8*, !dbg !4682
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !4682
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1567, metadata !1880), !dbg !4683
  store i8* null, i8** %errors, align 8, !dbg !4683, !tbaa !1876
  %14 = bitcast i8** %newline to i8*, !dbg !4684
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !4684
  call void @llvm.dbg.declare(metadata i8** %newline, metadata !1568, metadata !1880), !dbg !4685
  store i8* null, i8** %newline, align 8, !dbg !4685, !tbaa !1876
  %15 = bitcast i32* %line_buffering to i8*, !dbg !4686
  call void @llvm.lifetime.start(i64 4, i8* %15) #2, !dbg !4686
  call void @llvm.dbg.declare(metadata i32* %line_buffering, metadata !1569, metadata !1880), !dbg !4687
  store i32 0, i32* %line_buffering, align 4, !dbg !4687, !tbaa !1883
  %16 = bitcast i32* %write_through to i8*, !dbg !4686
  call void @llvm.lifetime.start(i64 4, i8* %16) #2, !dbg !4686
  call void @llvm.dbg.declare(metadata i32* %write_through, metadata !1570, metadata !1880), !dbg !4688
  store i32 0, i32* %write_through, align 4, !dbg !4688, !tbaa !1883
  %17 = bitcast %struct._PyIO_State** %state to i8*, !dbg !4689
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !4689
  call void @llvm.dbg.declare(metadata %struct._PyIO_State** %state, metadata !1571, metadata !1880), !dbg !4690
  store %struct._PyIO_State* null, %struct._PyIO_State** %state, align 8, !dbg !4690, !tbaa !1876
  %18 = bitcast %struct._object** %res to i8*, !dbg !4691
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !4691
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1572, metadata !1880), !dbg !4692
  %19 = bitcast i32* %r to i8*, !dbg !4693
  call void @llvm.lifetime.start(i64 4, i8* %19) #2, !dbg !4693
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1573, metadata !1880), !dbg !4694
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4695, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 1, !dbg !4696
  store i32 0, i32* %ok, align 4, !dbg !4697, !tbaa !3895
  %21 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4698, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %21, i32 0, i32 2, !dbg !4699
  store i32 0, i32* %detached, align 4, !dbg !4700, !tbaa !3903
  %22 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4701, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4703, !tbaa !1876
  %arraydecay = getelementptr inbounds [7 x i8*], [7 x i8*]* %kwlist, i32 0, i32 0, !dbg !4704
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %22, %struct._object* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i32 0, i32 0), i8** %arraydecay, %struct._object** %buffer, i8** %encoding, i8** %errors, i8** %newline, i32* %line_buffering, i32* %write_through), !dbg !4705
  %tobool = icmp ne i32 %call, 0, !dbg !4705
  br i1 %tobool, label %if.end, label %if.then, !dbg !4706

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !4707
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !4707

if.end:                                           ; preds = %entry
  %24 = load i8*, i8** %newline, align 8, !dbg !4708, !tbaa !1876
  %tobool1 = icmp ne i8* %24, null, !dbg !4708
  br i1 %tobool1, label %land.lhs.true, label %if.end.40, !dbg !4710

land.lhs.true:                                    ; preds = %if.end
  %25 = load i8*, i8** %newline, align 8, !dbg !4711, !tbaa !1876
  %arrayidx = getelementptr i8, i8* %25, i64 0, !dbg !4711
  %26 = load i8, i8* %arrayidx, align 1, !dbg !4711, !tbaa !2064
  %conv = sext i8 %26 to i32, !dbg !4711
  %cmp = icmp ne i32 %conv, 0, !dbg !4713
  br i1 %cmp, label %land.lhs.true.3, label %if.end.40, !dbg !4714

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %27 = load i8*, i8** %newline, align 8, !dbg !4715, !tbaa !1876
  %arrayidx4 = getelementptr i8, i8* %27, i64 0, !dbg !4715
  %28 = load i8, i8* %arrayidx4, align 1, !dbg !4715, !tbaa !2064
  %conv5 = sext i8 %28 to i32, !dbg !4715
  %cmp6 = icmp eq i32 %conv5, 10, !dbg !4716
  br i1 %cmp6, label %land.lhs.true.8, label %land.lhs.true.13, !dbg !4717

land.lhs.true.8:                                  ; preds = %land.lhs.true.3
  %29 = load i8*, i8** %newline, align 8, !dbg !4718, !tbaa !1876
  %arrayidx9 = getelementptr i8, i8* %29, i64 1, !dbg !4718
  %30 = load i8, i8* %arrayidx9, align 1, !dbg !4718, !tbaa !2064
  %conv10 = sext i8 %30 to i32, !dbg !4718
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !4720
  br i1 %cmp11, label %if.end.40, label %land.lhs.true.13, !dbg !4721

land.lhs.true.13:                                 ; preds = %land.lhs.true.8, %land.lhs.true.3
  %31 = load i8*, i8** %newline, align 8, !dbg !4722, !tbaa !1876
  %arrayidx14 = getelementptr i8, i8* %31, i64 0, !dbg !4722
  %32 = load i8, i8* %arrayidx14, align 1, !dbg !4722, !tbaa !2064
  %conv15 = sext i8 %32 to i32, !dbg !4722
  %cmp16 = icmp eq i32 %conv15, 13, !dbg !4723
  br i1 %cmp16, label %land.lhs.true.18, label %land.lhs.true.23, !dbg !4724

land.lhs.true.18:                                 ; preds = %land.lhs.true.13
  %33 = load i8*, i8** %newline, align 8, !dbg !4725, !tbaa !1876
  %arrayidx19 = getelementptr i8, i8* %33, i64 1, !dbg !4725
  %34 = load i8, i8* %arrayidx19, align 1, !dbg !4725, !tbaa !2064
  %conv20 = sext i8 %34 to i32, !dbg !4725
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !4726
  br i1 %cmp21, label %if.end.40, label %land.lhs.true.23, !dbg !4727

land.lhs.true.23:                                 ; preds = %land.lhs.true.18, %land.lhs.true.13
  %35 = load i8*, i8** %newline, align 8, !dbg !4728, !tbaa !1876
  %arrayidx24 = getelementptr i8, i8* %35, i64 0, !dbg !4728
  %36 = load i8, i8* %arrayidx24, align 1, !dbg !4728, !tbaa !2064
  %conv25 = sext i8 %36 to i32, !dbg !4728
  %cmp26 = icmp eq i32 %conv25, 13, !dbg !4729
  br i1 %cmp26, label %land.lhs.true.28, label %if.then.38, !dbg !4730

land.lhs.true.28:                                 ; preds = %land.lhs.true.23
  %37 = load i8*, i8** %newline, align 8, !dbg !4731, !tbaa !1876
  %arrayidx29 = getelementptr i8, i8* %37, i64 1, !dbg !4731
  %38 = load i8, i8* %arrayidx29, align 1, !dbg !4731, !tbaa !2064
  %conv30 = sext i8 %38 to i32, !dbg !4731
  %cmp31 = icmp eq i32 %conv30, 10, !dbg !4732
  br i1 %cmp31, label %land.lhs.true.33, label %if.then.38, !dbg !4733

land.lhs.true.33:                                 ; preds = %land.lhs.true.28
  %39 = load i8*, i8** %newline, align 8, !dbg !4734, !tbaa !1876
  %arrayidx34 = getelementptr i8, i8* %39, i64 2, !dbg !4734
  %40 = load i8, i8* %arrayidx34, align 1, !dbg !4734, !tbaa !2064
  %conv35 = sext i8 %40 to i32, !dbg !4734
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !4736
  br i1 %cmp36, label %if.end.40, label %if.then.38, !dbg !4737

if.then.38:                                       ; preds = %land.lhs.true.33, %land.lhs.true.28, %land.lhs.true.23
  %41 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4738, !tbaa !1876
  %42 = load i8*, i8** %newline, align 8, !dbg !4740, !tbaa !1876
  %call39 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.98, i32 0, i32 0), i8* %42), !dbg !4741
  store i32 -1, i32* %retval, !dbg !4742
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !4742

if.end.40:                                        ; preds = %land.lhs.true.33, %land.lhs.true.18, %land.lhs.true.8, %land.lhs.true, %if.end
  br label %do.body, !dbg !4743

do.body:                                          ; preds = %if.end.40
  %43 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4744
  call void @llvm.lifetime.start(i64 8, i8* %43) #2, !dbg !4744
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1574, metadata !1880), !dbg !4746
  %44 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4747, !tbaa !1876
  %buffer41 = getelementptr inbounds %struct.textio, %struct.textio* %44, i32 0, i32 4, !dbg !4748
  %45 = load %struct._object*, %struct._object** %buffer41, align 8, !dbg !4748, !tbaa !4115
  store %struct._object* %45, %struct._object** %_py_tmp, align 8, !dbg !4746, !tbaa !1876
  %46 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4749, !tbaa !1876
  %cmp42 = icmp ne %struct._object* %46, null, !dbg !4750
  br i1 %cmp42, label %if.then.44, label %if.end.51, !dbg !4751

if.then.44:                                       ; preds = %do.body
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4752, !tbaa !1876
  %buffer45 = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 4, !dbg !4754
  store %struct._object* null, %struct._object** %buffer45, align 8, !dbg !4755, !tbaa !4115
  br label %do.body.46, !dbg !4756

do.body.46:                                       ; preds = %if.then.44
  %48 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4757
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !4757
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1576, metadata !1880), !dbg !4759
  %49 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4760, !tbaa !1876
  store %struct._object* %49, %struct._object** %_py_decref_tmp, align 8, !dbg !4759, !tbaa !1876
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4761, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !4763
  %51 = load i64, i64* %ob_refcnt, align 8, !dbg !4764, !tbaa !1927
  %dec = add i64 %51, -1, !dbg !4764
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4764, !tbaa !1927
  %cmp47 = icmp ne i64 %dec, 0, !dbg !4765
  br i1 %cmp47, label %if.then.49, label %if.else, !dbg !4766

if.then.49:                                       ; preds = %do.body.46
  br label %if.end.50, !dbg !4767

if.else:                                          ; preds = %do.body.46
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4769, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !4771
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4771, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !4772
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4772, !tbaa !2196
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4773, !tbaa !1876
  call void %54(%struct._object* %55), !dbg !4774
  br label %if.end.50

if.end.50:                                        ; preds = %if.else, %if.then.49
  %56 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4775
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !4775
  br label %do.cond, !dbg !4777

do.cond:                                          ; preds = %if.end.50
  br label %do.end, !dbg !4778

do.end:                                           ; preds = %do.cond
  br label %if.end.51, !dbg !4780

if.end.51:                                        ; preds = %do.end, %do.body
  %57 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4782
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !4782
  br label %do.cond.52, !dbg !4785

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !4786

do.end.53:                                        ; preds = %do.cond.52
  br label %do.body.54, !dbg !4788

do.body.54:                                       ; preds = %do.end.53
  %58 = bitcast %struct._object** %_py_tmp55 to i8*, !dbg !4789
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !4789
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp55, metadata !1580, metadata !1880), !dbg !4791
  %59 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4792, !tbaa !1876
  %encoding56 = getelementptr inbounds %struct.textio, %struct.textio* %59, i32 0, i32 5, !dbg !4793
  %60 = load %struct._object*, %struct._object** %encoding56, align 8, !dbg !4793, !tbaa !4036
  store %struct._object* %60, %struct._object** %_py_tmp55, align 8, !dbg !4791, !tbaa !1876
  %61 = load %struct._object*, %struct._object** %_py_tmp55, align 8, !dbg !4794, !tbaa !1876
  %cmp57 = icmp ne %struct._object* %61, null, !dbg !4795
  br i1 %cmp57, label %if.then.59, label %if.end.74, !dbg !4796

if.then.59:                                       ; preds = %do.body.54
  %62 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4797, !tbaa !1876
  %encoding60 = getelementptr inbounds %struct.textio, %struct.textio* %62, i32 0, i32 5, !dbg !4799
  store %struct._object* null, %struct._object** %encoding60, align 8, !dbg !4800, !tbaa !4036
  br label %do.body.61, !dbg !4801

do.body.61:                                       ; preds = %if.then.59
  %63 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !4802
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !4802
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp62, metadata !1582, metadata !1880), !dbg !4804
  %64 = load %struct._object*, %struct._object** %_py_tmp55, align 8, !dbg !4805, !tbaa !1876
  store %struct._object* %64, %struct._object** %_py_decref_tmp62, align 8, !dbg !4804, !tbaa !1876
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !4806, !tbaa !1876
  %ob_refcnt63 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !4808
  %66 = load i64, i64* %ob_refcnt63, align 8, !dbg !4809, !tbaa !1927
  %dec64 = add i64 %66, -1, !dbg !4809
  store i64 %dec64, i64* %ob_refcnt63, align 8, !dbg !4809, !tbaa !1927
  %cmp65 = icmp ne i64 %dec64, 0, !dbg !4810
  br i1 %cmp65, label %if.then.67, label %if.else.68, !dbg !4811

if.then.67:                                       ; preds = %do.body.61
  br label %if.end.71, !dbg !4812

if.else.68:                                       ; preds = %do.body.61
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !4814, !tbaa !1876
  %ob_type69 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !4816
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type69, align 8, !dbg !4816, !tbaa !2194
  %tp_dealloc70 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4, !dbg !4817
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc70, align 8, !dbg !4817, !tbaa !2196
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !4818, !tbaa !1876
  call void %69(%struct._object* %70), !dbg !4819
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.68, %if.then.67
  %71 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !4820
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !4820
  br label %do.cond.72, !dbg !4822

do.cond.72:                                       ; preds = %if.end.71
  br label %do.end.73, !dbg !4823

do.end.73:                                        ; preds = %do.cond.72
  br label %if.end.74, !dbg !4825

if.end.74:                                        ; preds = %do.end.73, %do.body.54
  %72 = bitcast %struct._object** %_py_tmp55 to i8*, !dbg !4827
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !4827
  br label %do.cond.75, !dbg !4828

do.cond.75:                                       ; preds = %if.end.74
  br label %do.end.76, !dbg !4829

do.end.76:                                        ; preds = %do.cond.75
  br label %do.body.77, !dbg !4831

do.body.77:                                       ; preds = %do.end.76
  %73 = bitcast %struct._object** %_py_tmp78 to i8*, !dbg !4832
  call void @llvm.lifetime.start(i64 8, i8* %73) #2, !dbg !4832
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp78, metadata !1586, metadata !1880), !dbg !4834
  %74 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4835, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %74, i32 0, i32 6, !dbg !4836
  %75 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !4836, !tbaa !4172
  store %struct._object* %75, %struct._object** %_py_tmp78, align 8, !dbg !4834, !tbaa !1876
  %76 = load %struct._object*, %struct._object** %_py_tmp78, align 8, !dbg !4837, !tbaa !1876
  %cmp79 = icmp ne %struct._object* %76, null, !dbg !4838
  br i1 %cmp79, label %if.then.81, label %if.end.96, !dbg !4839

if.then.81:                                       ; preds = %do.body.77
  %77 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4840, !tbaa !1876
  %encoder82 = getelementptr inbounds %struct.textio, %struct.textio* %77, i32 0, i32 6, !dbg !4842
  store %struct._object* null, %struct._object** %encoder82, align 8, !dbg !4843, !tbaa !4172
  br label %do.body.83, !dbg !4844

do.body.83:                                       ; preds = %if.then.81
  %78 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !4845
  call void @llvm.lifetime.start(i64 8, i8* %78) #2, !dbg !4845
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !1588, metadata !1880), !dbg !4847
  %79 = load %struct._object*, %struct._object** %_py_tmp78, align 8, !dbg !4848, !tbaa !1876
  store %struct._object* %79, %struct._object** %_py_decref_tmp84, align 8, !dbg !4847, !tbaa !1876
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !4849, !tbaa !1876
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !4851
  %81 = load i64, i64* %ob_refcnt85, align 8, !dbg !4852, !tbaa !1927
  %dec86 = add i64 %81, -1, !dbg !4852
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !4852, !tbaa !1927
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !4853
  br i1 %cmp87, label %if.then.89, label %if.else.90, !dbg !4854

if.then.89:                                       ; preds = %do.body.83
  br label %if.end.93, !dbg !4855

if.else.90:                                       ; preds = %do.body.83
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !4857, !tbaa !1876
  %ob_type91 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 1, !dbg !4859
  %83 = load %struct._typeobject*, %struct._typeobject** %ob_type91, align 8, !dbg !4859, !tbaa !2194
  %tp_dealloc92 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %83, i32 0, i32 4, !dbg !4860
  %84 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92, align 8, !dbg !4860, !tbaa !2196
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !4861, !tbaa !1876
  call void %84(%struct._object* %85), !dbg !4862
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.90, %if.then.89
  %86 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !4863
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !4863
  br label %do.cond.94, !dbg !4865

do.cond.94:                                       ; preds = %if.end.93
  br label %do.end.95, !dbg !4866

do.end.95:                                        ; preds = %do.cond.94
  br label %if.end.96, !dbg !4868

if.end.96:                                        ; preds = %do.end.95, %do.body.77
  %87 = bitcast %struct._object** %_py_tmp78 to i8*, !dbg !4870
  call void @llvm.lifetime.end(i64 8, i8* %87) #2, !dbg !4870
  br label %do.cond.97, !dbg !4871

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !4872

do.end.98:                                        ; preds = %do.cond.97
  br label %do.body.99, !dbg !4874

do.body.99:                                       ; preds = %do.end.98
  %88 = bitcast %struct._object** %_py_tmp100 to i8*, !dbg !4875
  call void @llvm.lifetime.start(i64 8, i8* %88) #2, !dbg !4875
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp100, metadata !1592, metadata !1880), !dbg !4877
  %89 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4878, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %89, i32 0, i32 7, !dbg !4879
  %90 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !4879, !tbaa !4201
  store %struct._object* %90, %struct._object** %_py_tmp100, align 8, !dbg !4877, !tbaa !1876
  %91 = load %struct._object*, %struct._object** %_py_tmp100, align 8, !dbg !4880, !tbaa !1876
  %cmp101 = icmp ne %struct._object* %91, null, !dbg !4881
  br i1 %cmp101, label %if.then.103, label %if.end.118, !dbg !4882

if.then.103:                                      ; preds = %do.body.99
  %92 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4883, !tbaa !1876
  %decoder104 = getelementptr inbounds %struct.textio, %struct.textio* %92, i32 0, i32 7, !dbg !4885
  store %struct._object* null, %struct._object** %decoder104, align 8, !dbg !4886, !tbaa !4201
  br label %do.body.105, !dbg !4887

do.body.105:                                      ; preds = %if.then.103
  %93 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !4888
  call void @llvm.lifetime.start(i64 8, i8* %93) #2, !dbg !4888
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp106, metadata !1594, metadata !1880), !dbg !4890
  %94 = load %struct._object*, %struct._object** %_py_tmp100, align 8, !dbg !4891, !tbaa !1876
  store %struct._object* %94, %struct._object** %_py_decref_tmp106, align 8, !dbg !4890, !tbaa !1876
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !4892, !tbaa !1876
  %ob_refcnt107 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !4894
  %96 = load i64, i64* %ob_refcnt107, align 8, !dbg !4895, !tbaa !1927
  %dec108 = add i64 %96, -1, !dbg !4895
  store i64 %dec108, i64* %ob_refcnt107, align 8, !dbg !4895, !tbaa !1927
  %cmp109 = icmp ne i64 %dec108, 0, !dbg !4896
  br i1 %cmp109, label %if.then.111, label %if.else.112, !dbg !4897

if.then.111:                                      ; preds = %do.body.105
  br label %if.end.115, !dbg !4898

if.else.112:                                      ; preds = %do.body.105
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !4900, !tbaa !1876
  %ob_type113 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !4902
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type113, align 8, !dbg !4902, !tbaa !2194
  %tp_dealloc114 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !4903
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc114, align 8, !dbg !4903, !tbaa !2196
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !4904, !tbaa !1876
  call void %99(%struct._object* %100), !dbg !4905
  br label %if.end.115

if.end.115:                                       ; preds = %if.else.112, %if.then.111
  %101 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !4906
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !4906
  br label %do.cond.116, !dbg !4908

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !4909

do.end.117:                                       ; preds = %do.cond.116
  br label %if.end.118, !dbg !4911

if.end.118:                                       ; preds = %do.end.117, %do.body.99
  %102 = bitcast %struct._object** %_py_tmp100 to i8*, !dbg !4913
  call void @llvm.lifetime.end(i64 8, i8* %102) #2, !dbg !4913
  br label %do.cond.119, !dbg !4914

do.cond.119:                                      ; preds = %if.end.118
  br label %do.end.120, !dbg !4915

do.end.120:                                       ; preds = %do.cond.119
  br label %do.body.121, !dbg !4917

do.body.121:                                      ; preds = %do.end.120
  %103 = bitcast %struct._object** %_py_tmp122 to i8*, !dbg !4918
  call void @llvm.lifetime.start(i64 8, i8* %103) #2, !dbg !4918
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp122, metadata !1598, metadata !1880), !dbg !4920
  %104 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4921, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %104, i32 0, i32 8, !dbg !4922
  %105 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !4922, !tbaa !4230
  store %struct._object* %105, %struct._object** %_py_tmp122, align 8, !dbg !4920, !tbaa !1876
  %106 = load %struct._object*, %struct._object** %_py_tmp122, align 8, !dbg !4923, !tbaa !1876
  %cmp123 = icmp ne %struct._object* %106, null, !dbg !4924
  br i1 %cmp123, label %if.then.125, label %if.end.140, !dbg !4925

if.then.125:                                      ; preds = %do.body.121
  %107 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4926, !tbaa !1876
  %readnl126 = getelementptr inbounds %struct.textio, %struct.textio* %107, i32 0, i32 8, !dbg !4928
  store %struct._object* null, %struct._object** %readnl126, align 8, !dbg !4929, !tbaa !4230
  br label %do.body.127, !dbg !4930

do.body.127:                                      ; preds = %if.then.125
  %108 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !4931
  call void @llvm.lifetime.start(i64 8, i8* %108) #2, !dbg !4931
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp128, metadata !1600, metadata !1880), !dbg !4933
  %109 = load %struct._object*, %struct._object** %_py_tmp122, align 8, !dbg !4934, !tbaa !1876
  store %struct._object* %109, %struct._object** %_py_decref_tmp128, align 8, !dbg !4933, !tbaa !1876
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !4935, !tbaa !1876
  %ob_refcnt129 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 0, !dbg !4937
  %111 = load i64, i64* %ob_refcnt129, align 8, !dbg !4938, !tbaa !1927
  %dec130 = add i64 %111, -1, !dbg !4938
  store i64 %dec130, i64* %ob_refcnt129, align 8, !dbg !4938, !tbaa !1927
  %cmp131 = icmp ne i64 %dec130, 0, !dbg !4939
  br i1 %cmp131, label %if.then.133, label %if.else.134, !dbg !4940

if.then.133:                                      ; preds = %do.body.127
  br label %if.end.137, !dbg !4941

if.else.134:                                      ; preds = %do.body.127
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !4943, !tbaa !1876
  %ob_type135 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 1, !dbg !4945
  %113 = load %struct._typeobject*, %struct._typeobject** %ob_type135, align 8, !dbg !4945, !tbaa !2194
  %tp_dealloc136 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %113, i32 0, i32 4, !dbg !4946
  %114 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc136, align 8, !dbg !4946, !tbaa !2196
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8, !dbg !4947, !tbaa !1876
  call void %114(%struct._object* %115), !dbg !4948
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.134, %if.then.133
  %116 = bitcast %struct._object** %_py_decref_tmp128 to i8*, !dbg !4949
  call void @llvm.lifetime.end(i64 8, i8* %116) #2, !dbg !4949
  br label %do.cond.138, !dbg !4951

do.cond.138:                                      ; preds = %if.end.137
  br label %do.end.139, !dbg !4952

do.end.139:                                       ; preds = %do.cond.138
  br label %if.end.140, !dbg !4954

if.end.140:                                       ; preds = %do.end.139, %do.body.121
  %117 = bitcast %struct._object** %_py_tmp122 to i8*, !dbg !4956
  call void @llvm.lifetime.end(i64 8, i8* %117) #2, !dbg !4956
  br label %do.cond.141, !dbg !4957

do.cond.141:                                      ; preds = %if.end.140
  br label %do.end.142, !dbg !4958

do.end.142:                                       ; preds = %do.cond.141
  br label %do.body.143, !dbg !4960

do.body.143:                                      ; preds = %do.end.142
  %118 = bitcast %struct._object** %_py_tmp144 to i8*, !dbg !4961
  call void @llvm.lifetime.start(i64 8, i8* %118) #2, !dbg !4961
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp144, metadata !1604, metadata !1880), !dbg !4963
  %119 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4964, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %119, i32 0, i32 22, !dbg !4965
  %120 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !4965, !tbaa !4259
  store %struct._object* %120, %struct._object** %_py_tmp144, align 8, !dbg !4963, !tbaa !1876
  %121 = load %struct._object*, %struct._object** %_py_tmp144, align 8, !dbg !4966, !tbaa !1876
  %cmp145 = icmp ne %struct._object* %121, null, !dbg !4967
  br i1 %cmp145, label %if.then.147, label %if.end.162, !dbg !4968

if.then.147:                                      ; preds = %do.body.143
  %122 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !4969, !tbaa !1876
  %decoded_chars148 = getelementptr inbounds %struct.textio, %struct.textio* %122, i32 0, i32 22, !dbg !4971
  store %struct._object* null, %struct._object** %decoded_chars148, align 8, !dbg !4972, !tbaa !4259
  br label %do.body.149, !dbg !4973

do.body.149:                                      ; preds = %if.then.147
  %123 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !4974
  call void @llvm.lifetime.start(i64 8, i8* %123) #2, !dbg !4974
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp150, metadata !1606, metadata !1880), !dbg !4976
  %124 = load %struct._object*, %struct._object** %_py_tmp144, align 8, !dbg !4977, !tbaa !1876
  store %struct._object* %124, %struct._object** %_py_decref_tmp150, align 8, !dbg !4976, !tbaa !1876
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !4978, !tbaa !1876
  %ob_refcnt151 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0, !dbg !4980
  %126 = load i64, i64* %ob_refcnt151, align 8, !dbg !4981, !tbaa !1927
  %dec152 = add i64 %126, -1, !dbg !4981
  store i64 %dec152, i64* %ob_refcnt151, align 8, !dbg !4981, !tbaa !1927
  %cmp153 = icmp ne i64 %dec152, 0, !dbg !4982
  br i1 %cmp153, label %if.then.155, label %if.else.156, !dbg !4983

if.then.155:                                      ; preds = %do.body.149
  br label %if.end.159, !dbg !4984

if.else.156:                                      ; preds = %do.body.149
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !4986, !tbaa !1876
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 1, !dbg !4988
  %128 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8, !dbg !4988, !tbaa !2194
  %tp_dealloc158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %128, i32 0, i32 4, !dbg !4989
  %129 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc158, align 8, !dbg !4989, !tbaa !2196
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !4990, !tbaa !1876
  call void %129(%struct._object* %130), !dbg !4991
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.156, %if.then.155
  %131 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !4992
  call void @llvm.lifetime.end(i64 8, i8* %131) #2, !dbg !4992
  br label %do.cond.160, !dbg !4994

do.cond.160:                                      ; preds = %if.end.159
  br label %do.end.161, !dbg !4995

do.end.161:                                       ; preds = %do.cond.160
  br label %if.end.162, !dbg !4997

if.end.162:                                       ; preds = %do.end.161, %do.body.143
  %132 = bitcast %struct._object** %_py_tmp144 to i8*, !dbg !4999
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !4999
  br label %do.cond.163, !dbg !5000

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !5001

do.end.164:                                       ; preds = %do.cond.163
  br label %do.body.165, !dbg !5003

do.body.165:                                      ; preds = %do.end.164
  %133 = bitcast %struct._object** %_py_tmp166 to i8*, !dbg !5004
  call void @llvm.lifetime.start(i64 8, i8* %133) #2, !dbg !5004
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp166, metadata !1610, metadata !1880), !dbg !5006
  %134 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5007, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %134, i32 0, i32 24, !dbg !5008
  %135 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !5008, !tbaa !4288
  store %struct._object* %135, %struct._object** %_py_tmp166, align 8, !dbg !5006, !tbaa !1876
  %136 = load %struct._object*, %struct._object** %_py_tmp166, align 8, !dbg !5009, !tbaa !1876
  %cmp167 = icmp ne %struct._object* %136, null, !dbg !5010
  br i1 %cmp167, label %if.then.169, label %if.end.184, !dbg !5011

if.then.169:                                      ; preds = %do.body.165
  %137 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5012, !tbaa !1876
  %pending_bytes170 = getelementptr inbounds %struct.textio, %struct.textio* %137, i32 0, i32 24, !dbg !5014
  store %struct._object* null, %struct._object** %pending_bytes170, align 8, !dbg !5015, !tbaa !4288
  br label %do.body.171, !dbg !5016

do.body.171:                                      ; preds = %if.then.169
  %138 = bitcast %struct._object** %_py_decref_tmp172 to i8*, !dbg !5017
  call void @llvm.lifetime.start(i64 8, i8* %138) #2, !dbg !5017
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp172, metadata !1612, metadata !1880), !dbg !5019
  %139 = load %struct._object*, %struct._object** %_py_tmp166, align 8, !dbg !5020, !tbaa !1876
  store %struct._object* %139, %struct._object** %_py_decref_tmp172, align 8, !dbg !5019, !tbaa !1876
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8, !dbg !5021, !tbaa !1876
  %ob_refcnt173 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0, !dbg !5023
  %141 = load i64, i64* %ob_refcnt173, align 8, !dbg !5024, !tbaa !1927
  %dec174 = add i64 %141, -1, !dbg !5024
  store i64 %dec174, i64* %ob_refcnt173, align 8, !dbg !5024, !tbaa !1927
  %cmp175 = icmp ne i64 %dec174, 0, !dbg !5025
  br i1 %cmp175, label %if.then.177, label %if.else.178, !dbg !5026

if.then.177:                                      ; preds = %do.body.171
  br label %if.end.181, !dbg !5027

if.else.178:                                      ; preds = %do.body.171
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8, !dbg !5029, !tbaa !1876
  %ob_type179 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 1, !dbg !5031
  %143 = load %struct._typeobject*, %struct._typeobject** %ob_type179, align 8, !dbg !5031, !tbaa !2194
  %tp_dealloc180 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %143, i32 0, i32 4, !dbg !5032
  %144 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc180, align 8, !dbg !5032, !tbaa !2196
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8, !dbg !5033, !tbaa !1876
  call void %144(%struct._object* %145), !dbg !5034
  br label %if.end.181

if.end.181:                                       ; preds = %if.else.178, %if.then.177
  %146 = bitcast %struct._object** %_py_decref_tmp172 to i8*, !dbg !5035
  call void @llvm.lifetime.end(i64 8, i8* %146) #2, !dbg !5035
  br label %do.cond.182, !dbg !5037

do.cond.182:                                      ; preds = %if.end.181
  br label %do.end.183, !dbg !5038

do.end.183:                                       ; preds = %do.cond.182
  br label %if.end.184, !dbg !5040

if.end.184:                                       ; preds = %do.end.183, %do.body.165
  %147 = bitcast %struct._object** %_py_tmp166 to i8*, !dbg !5042
  call void @llvm.lifetime.end(i64 8, i8* %147) #2, !dbg !5042
  br label %do.cond.185, !dbg !5043

do.cond.185:                                      ; preds = %if.end.184
  br label %do.end.186, !dbg !5044

do.end.186:                                       ; preds = %do.cond.185
  br label %do.body.187, !dbg !5046

do.body.187:                                      ; preds = %do.end.186
  %148 = bitcast %struct._object** %_py_tmp188 to i8*, !dbg !5047
  call void @llvm.lifetime.start(i64 8, i8* %148) #2, !dbg !5047
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp188, metadata !1616, metadata !1880), !dbg !5049
  %149 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5050, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %149, i32 0, i32 26, !dbg !5051
  %150 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !5051, !tbaa !4317
  store %struct._object* %150, %struct._object** %_py_tmp188, align 8, !dbg !5049, !tbaa !1876
  %151 = load %struct._object*, %struct._object** %_py_tmp188, align 8, !dbg !5052, !tbaa !1876
  %cmp189 = icmp ne %struct._object* %151, null, !dbg !5053
  br i1 %cmp189, label %if.then.191, label %if.end.206, !dbg !5054

if.then.191:                                      ; preds = %do.body.187
  %152 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5055, !tbaa !1876
  %snapshot192 = getelementptr inbounds %struct.textio, %struct.textio* %152, i32 0, i32 26, !dbg !5057
  store %struct._object* null, %struct._object** %snapshot192, align 8, !dbg !5058, !tbaa !4317
  br label %do.body.193, !dbg !5059

do.body.193:                                      ; preds = %if.then.191
  %153 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !5060
  call void @llvm.lifetime.start(i64 8, i8* %153) #2, !dbg !5060
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp194, metadata !1618, metadata !1880), !dbg !5062
  %154 = load %struct._object*, %struct._object** %_py_tmp188, align 8, !dbg !5063, !tbaa !1876
  store %struct._object* %154, %struct._object** %_py_decref_tmp194, align 8, !dbg !5062, !tbaa !1876
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !5064, !tbaa !1876
  %ob_refcnt195 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0, !dbg !5066
  %156 = load i64, i64* %ob_refcnt195, align 8, !dbg !5067, !tbaa !1927
  %dec196 = add i64 %156, -1, !dbg !5067
  store i64 %dec196, i64* %ob_refcnt195, align 8, !dbg !5067, !tbaa !1927
  %cmp197 = icmp ne i64 %dec196, 0, !dbg !5068
  br i1 %cmp197, label %if.then.199, label %if.else.200, !dbg !5069

if.then.199:                                      ; preds = %do.body.193
  br label %if.end.203, !dbg !5070

if.else.200:                                      ; preds = %do.body.193
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !5072, !tbaa !1876
  %ob_type201 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1, !dbg !5074
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type201, align 8, !dbg !5074, !tbaa !2194
  %tp_dealloc202 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %158, i32 0, i32 4, !dbg !5075
  %159 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc202, align 8, !dbg !5075, !tbaa !2196
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp194, align 8, !dbg !5076, !tbaa !1876
  call void %159(%struct._object* %160), !dbg !5077
  br label %if.end.203

if.end.203:                                       ; preds = %if.else.200, %if.then.199
  %161 = bitcast %struct._object** %_py_decref_tmp194 to i8*, !dbg !5078
  call void @llvm.lifetime.end(i64 8, i8* %161) #2, !dbg !5078
  br label %do.cond.204, !dbg !5080

do.cond.204:                                      ; preds = %if.end.203
  br label %do.end.205, !dbg !5081

do.end.205:                                       ; preds = %do.cond.204
  br label %if.end.206, !dbg !5083

if.end.206:                                       ; preds = %do.end.205, %do.body.187
  %162 = bitcast %struct._object** %_py_tmp188 to i8*, !dbg !5085
  call void @llvm.lifetime.end(i64 8, i8* %162) #2, !dbg !5085
  br label %do.cond.207, !dbg !5086

do.cond.207:                                      ; preds = %if.end.206
  br label %do.end.208, !dbg !5087

do.end.208:                                       ; preds = %do.cond.207
  br label %do.body.209, !dbg !5089

do.body.209:                                      ; preds = %do.end.208
  %163 = bitcast %struct._object** %_py_tmp210 to i8*, !dbg !5090
  call void @llvm.lifetime.start(i64 8, i8* %163) #2, !dbg !5090
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp210, metadata !1622, metadata !1880), !dbg !5092
  %164 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5093, !tbaa !1876
  %errors211 = getelementptr inbounds %struct.textio, %struct.textio* %164, i32 0, i32 9, !dbg !5094
  %165 = load %struct._object*, %struct._object** %errors211, align 8, !dbg !5094, !tbaa !4346
  store %struct._object* %165, %struct._object** %_py_tmp210, align 8, !dbg !5092, !tbaa !1876
  %166 = load %struct._object*, %struct._object** %_py_tmp210, align 8, !dbg !5095, !tbaa !1876
  %cmp212 = icmp ne %struct._object* %166, null, !dbg !5096
  br i1 %cmp212, label %if.then.214, label %if.end.229, !dbg !5097

if.then.214:                                      ; preds = %do.body.209
  %167 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5098, !tbaa !1876
  %errors215 = getelementptr inbounds %struct.textio, %struct.textio* %167, i32 0, i32 9, !dbg !5100
  store %struct._object* null, %struct._object** %errors215, align 8, !dbg !5101, !tbaa !4346
  br label %do.body.216, !dbg !5102

do.body.216:                                      ; preds = %if.then.214
  %168 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !5103
  call void @llvm.lifetime.start(i64 8, i8* %168) #2, !dbg !5103
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp217, metadata !1624, metadata !1880), !dbg !5105
  %169 = load %struct._object*, %struct._object** %_py_tmp210, align 8, !dbg !5106, !tbaa !1876
  store %struct._object* %169, %struct._object** %_py_decref_tmp217, align 8, !dbg !5105, !tbaa !1876
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !5107, !tbaa !1876
  %ob_refcnt218 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 0, !dbg !5109
  %171 = load i64, i64* %ob_refcnt218, align 8, !dbg !5110, !tbaa !1927
  %dec219 = add i64 %171, -1, !dbg !5110
  store i64 %dec219, i64* %ob_refcnt218, align 8, !dbg !5110, !tbaa !1927
  %cmp220 = icmp ne i64 %dec219, 0, !dbg !5111
  br i1 %cmp220, label %if.then.222, label %if.else.223, !dbg !5112

if.then.222:                                      ; preds = %do.body.216
  br label %if.end.226, !dbg !5113

if.else.223:                                      ; preds = %do.body.216
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !5115, !tbaa !1876
  %ob_type224 = getelementptr inbounds %struct._object, %struct._object* %172, i32 0, i32 1, !dbg !5117
  %173 = load %struct._typeobject*, %struct._typeobject** %ob_type224, align 8, !dbg !5117, !tbaa !2194
  %tp_dealloc225 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %173, i32 0, i32 4, !dbg !5118
  %174 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc225, align 8, !dbg !5118, !tbaa !2196
  %175 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !5119, !tbaa !1876
  call void %174(%struct._object* %175), !dbg !5120
  br label %if.end.226

if.end.226:                                       ; preds = %if.else.223, %if.then.222
  %176 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !5121
  call void @llvm.lifetime.end(i64 8, i8* %176) #2, !dbg !5121
  br label %do.cond.227, !dbg !5123

do.cond.227:                                      ; preds = %if.end.226
  br label %do.end.228, !dbg !5124

do.end.228:                                       ; preds = %do.cond.227
  br label %if.end.229, !dbg !5126

if.end.229:                                       ; preds = %do.end.228, %do.body.209
  %177 = bitcast %struct._object** %_py_tmp210 to i8*, !dbg !5128
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !5128
  br label %do.cond.230, !dbg !5129

do.cond.230:                                      ; preds = %if.end.229
  br label %do.end.231, !dbg !5130

do.end.231:                                       ; preds = %do.cond.230
  br label %do.body.232, !dbg !5132

do.body.232:                                      ; preds = %do.end.231
  %178 = bitcast %struct._object** %_py_tmp233 to i8*, !dbg !5133
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !5133
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp233, metadata !1628, metadata !1880), !dbg !5135
  %179 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5136, !tbaa !1876
  %raw234 = getelementptr inbounds %struct.textio, %struct.textio* %179, i32 0, i32 28, !dbg !5137
  %180 = load %struct._object*, %struct._object** %raw234, align 8, !dbg !5137, !tbaa !4375
  store %struct._object* %180, %struct._object** %_py_tmp233, align 8, !dbg !5135, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_tmp233, align 8, !dbg !5138, !tbaa !1876
  %cmp235 = icmp ne %struct._object* %181, null, !dbg !5139
  br i1 %cmp235, label %if.then.237, label %if.end.252, !dbg !5140

if.then.237:                                      ; preds = %do.body.232
  %182 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5141, !tbaa !1876
  %raw238 = getelementptr inbounds %struct.textio, %struct.textio* %182, i32 0, i32 28, !dbg !5143
  store %struct._object* null, %struct._object** %raw238, align 8, !dbg !5144, !tbaa !4375
  br label %do.body.239, !dbg !5145

do.body.239:                                      ; preds = %if.then.237
  %183 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !5146
  call void @llvm.lifetime.start(i64 8, i8* %183) #2, !dbg !5146
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp240, metadata !1630, metadata !1880), !dbg !5148
  %184 = load %struct._object*, %struct._object** %_py_tmp233, align 8, !dbg !5149, !tbaa !1876
  store %struct._object* %184, %struct._object** %_py_decref_tmp240, align 8, !dbg !5148, !tbaa !1876
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !5150, !tbaa !1876
  %ob_refcnt241 = getelementptr inbounds %struct._object, %struct._object* %185, i32 0, i32 0, !dbg !5152
  %186 = load i64, i64* %ob_refcnt241, align 8, !dbg !5153, !tbaa !1927
  %dec242 = add i64 %186, -1, !dbg !5153
  store i64 %dec242, i64* %ob_refcnt241, align 8, !dbg !5153, !tbaa !1927
  %cmp243 = icmp ne i64 %dec242, 0, !dbg !5154
  br i1 %cmp243, label %if.then.245, label %if.else.246, !dbg !5155

if.then.245:                                      ; preds = %do.body.239
  br label %if.end.249, !dbg !5156

if.else.246:                                      ; preds = %do.body.239
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !5158, !tbaa !1876
  %ob_type247 = getelementptr inbounds %struct._object, %struct._object* %187, i32 0, i32 1, !dbg !5160
  %188 = load %struct._typeobject*, %struct._typeobject** %ob_type247, align 8, !dbg !5160, !tbaa !2194
  %tp_dealloc248 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %188, i32 0, i32 4, !dbg !5161
  %189 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc248, align 8, !dbg !5161, !tbaa !2196
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !5162, !tbaa !1876
  call void %189(%struct._object* %190), !dbg !5163
  br label %if.end.249

if.end.249:                                       ; preds = %if.else.246, %if.then.245
  %191 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !5164
  call void @llvm.lifetime.end(i64 8, i8* %191) #2, !dbg !5164
  br label %do.cond.250, !dbg !5166

do.cond.250:                                      ; preds = %if.end.249
  br label %do.end.251, !dbg !5167

do.end.251:                                       ; preds = %do.cond.250
  br label %if.end.252, !dbg !5169

if.end.252:                                       ; preds = %do.end.251, %do.body.232
  %192 = bitcast %struct._object** %_py_tmp233 to i8*, !dbg !5171
  call void @llvm.lifetime.end(i64 8, i8* %192) #2, !dbg !5171
  br label %do.cond.253, !dbg !5172

do.cond.253:                                      ; preds = %if.end.252
  br label %do.end.254, !dbg !5173

do.end.254:                                       ; preds = %do.cond.253
  %193 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5175, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %193, i32 0, i32 23, !dbg !5176
  store i64 0, i64* %decoded_chars_used, align 8, !dbg !5177, !tbaa !5178
  %194 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5179, !tbaa !1876
  %pending_bytes_count = getelementptr inbounds %struct.textio, %struct.textio* %194, i32 0, i32 25, !dbg !5180
  store i64 0, i64* %pending_bytes_count, align 8, !dbg !5181, !tbaa !5182
  %195 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5183, !tbaa !1876
  %encodefunc = getelementptr inbounds %struct.textio, %struct.textio* %195, i32 0, i32 20, !dbg !5184
  store %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)** %encodefunc, align 8, !dbg !5185, !tbaa !5186
  %196 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5187, !tbaa !1876
  %b2cratio = getelementptr inbounds %struct.textio, %struct.textio* %196, i32 0, i32 27, !dbg !5188
  store double 0.000000e+00, double* %b2cratio, align 8, !dbg !5189, !tbaa !5190
  %197 = load i8*, i8** %encoding, align 8, !dbg !5191, !tbaa !1876
  %cmp255 = icmp eq i8* %197, null, !dbg !5192
  br i1 %cmp255, label %if.then.257, label %if.end.337, !dbg !5193

if.then.257:                                      ; preds = %do.end.254
  %198 = bitcast %struct._object** %fileno to i8*, !dbg !5194
  call void @llvm.lifetime.start(i64 8, i8* %198) #2, !dbg !5194
  call void @llvm.dbg.declare(metadata %struct._object** %fileno, metadata !1634, metadata !1880), !dbg !5195
  %call258 = call %struct._PyIO_State* @_PyIO_get_module_state(), !dbg !5196
  store %struct._PyIO_State* %call258, %struct._PyIO_State** %state, align 8, !dbg !5197, !tbaa !1876
  %199 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !5198, !tbaa !1876
  %cmp259 = icmp eq %struct._PyIO_State* %199, null, !dbg !5200
  br i1 %cmp259, label %if.then.261, label %if.end.262, !dbg !5201

if.then.261:                                      ; preds = %if.then.257
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.334, !dbg !5202

if.end.262:                                       ; preds = %if.then.257
  %200 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !5203, !tbaa !1876
  %call263 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %200, %struct._Py_Identifier* @PyId_fileno, i8* null), !dbg !5204
  store %struct._object* %call263, %struct._object** %fileno, align 8, !dbg !5205, !tbaa !1876
  %201 = load %struct._object*, %struct._object** %fileno, align 8, !dbg !5206, !tbaa !1876
  %cmp264 = icmp eq %struct._object* %201, null, !dbg !5207
  br i1 %cmp264, label %if.then.266, label %if.else.274, !dbg !5208

if.then.266:                                      ; preds = %if.end.262
  %202 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !5209, !tbaa !1876
  %call267 = call i32 @PyErr_ExceptionMatches(%struct._object* %202), !dbg !5212
  %tobool268 = icmp ne i32 %call267, 0, !dbg !5212
  br i1 %tobool268, label %if.then.271, label %lor.lhs.false, !dbg !5213

lor.lhs.false:                                    ; preds = %if.then.266
  %203 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !5214, !tbaa !1876
  %unsupported_operation = getelementptr inbounds %struct._PyIO_State, %struct._PyIO_State* %203, i32 0, i32 2, !dbg !5215
  %204 = load %struct._object*, %struct._object** %unsupported_operation, align 8, !dbg !5215, !tbaa !5216
  %call269 = call i32 @PyErr_ExceptionMatches(%struct._object* %204), !dbg !5218
  %tobool270 = icmp ne i32 %call269, 0, !dbg !5218
  br i1 %tobool270, label %if.then.271, label %if.else.272, !dbg !5219

if.then.271:                                      ; preds = %lor.lhs.false, %if.then.266
  call void @PyErr_Clear(), !dbg !5220
  br label %if.end.273, !dbg !5222

if.else.272:                                      ; preds = %lor.lhs.false
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.334, !dbg !5223

if.end.273:                                       ; preds = %if.then.271
  br label %if.end.333, !dbg !5225

if.else.274:                                      ; preds = %if.end.262
  %205 = bitcast i32* %fd to i8*, !dbg !5226
  call void @llvm.lifetime.start(i64 4, i8* %205) #2, !dbg !5226
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !1637, metadata !1880), !dbg !5227
  %206 = load %struct._object*, %struct._object** %fileno, align 8, !dbg !5228, !tbaa !1876
  %call275 = call i32 @_PyLong_AsInt(%struct._object* %206), !dbg !5229
  store i32 %call275, i32* %fd, align 4, !dbg !5227, !tbaa !1883
  br label %do.body.276, !dbg !5230

do.body.276:                                      ; preds = %if.else.274
  %207 = bitcast %struct._object** %_py_decref_tmp277 to i8*, !dbg !5231
  call void @llvm.lifetime.start(i64 8, i8* %207) #2, !dbg !5231
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp277, metadata !1640, metadata !1880), !dbg !5233
  %208 = load %struct._object*, %struct._object** %fileno, align 8, !dbg !5234, !tbaa !1876
  store %struct._object* %208, %struct._object** %_py_decref_tmp277, align 8, !dbg !5233, !tbaa !1876
  %209 = load %struct._object*, %struct._object** %_py_decref_tmp277, align 8, !dbg !5235, !tbaa !1876
  %ob_refcnt278 = getelementptr inbounds %struct._object, %struct._object* %209, i32 0, i32 0, !dbg !5237
  %210 = load i64, i64* %ob_refcnt278, align 8, !dbg !5238, !tbaa !1927
  %dec279 = add i64 %210, -1, !dbg !5238
  store i64 %dec279, i64* %ob_refcnt278, align 8, !dbg !5238, !tbaa !1927
  %cmp280 = icmp ne i64 %dec279, 0, !dbg !5239
  br i1 %cmp280, label %if.then.282, label %if.else.283, !dbg !5240

if.then.282:                                      ; preds = %do.body.276
  br label %if.end.286, !dbg !5241

if.else.283:                                      ; preds = %do.body.276
  %211 = load %struct._object*, %struct._object** %_py_decref_tmp277, align 8, !dbg !5243, !tbaa !1876
  %ob_type284 = getelementptr inbounds %struct._object, %struct._object* %211, i32 0, i32 1, !dbg !5245
  %212 = load %struct._typeobject*, %struct._typeobject** %ob_type284, align 8, !dbg !5245, !tbaa !2194
  %tp_dealloc285 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %212, i32 0, i32 4, !dbg !5246
  %213 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc285, align 8, !dbg !5246, !tbaa !2196
  %214 = load %struct._object*, %struct._object** %_py_decref_tmp277, align 8, !dbg !5247, !tbaa !1876
  call void %213(%struct._object* %214), !dbg !5248
  br label %if.end.286

if.end.286:                                       ; preds = %if.else.283, %if.then.282
  %215 = bitcast %struct._object** %_py_decref_tmp277 to i8*, !dbg !5249
  call void @llvm.lifetime.end(i64 8, i8* %215) #2, !dbg !5249
  br label %do.cond.287, !dbg !5251

do.cond.287:                                      ; preds = %if.end.286
  br label %do.end.288, !dbg !5252

do.end.288:                                       ; preds = %do.cond.287
  %216 = load i32, i32* %fd, align 4, !dbg !5254, !tbaa !1883
  %cmp289 = icmp eq i32 %216, -1, !dbg !5256
  br i1 %cmp289, label %land.lhs.true.291, label %if.end.295, !dbg !5257

land.lhs.true.291:                                ; preds = %do.end.288
  %call292 = call %struct._object* @PyErr_Occurred(), !dbg !5258
  %tobool293 = icmp ne %struct._object* %call292, null, !dbg !5258
  br i1 %tobool293, label %if.then.294, label %if.end.295, !dbg !5260

if.then.294:                                      ; preds = %land.lhs.true.291
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5261

if.end.295:                                       ; preds = %land.lhs.true.291, %do.end.288
  %217 = load i32, i32* %fd, align 4, !dbg !5263, !tbaa !1883
  %call296 = call %struct._object* @_Py_device_encoding(i32 %217), !dbg !5264
  %218 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5265, !tbaa !1876
  %encoding297 = getelementptr inbounds %struct.textio, %struct.textio* %218, i32 0, i32 5, !dbg !5266
  store %struct._object* %call296, %struct._object** %encoding297, align 8, !dbg !5267, !tbaa !4036
  %219 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5268, !tbaa !1876
  %encoding298 = getelementptr inbounds %struct.textio, %struct.textio* %219, i32 0, i32 5, !dbg !5269
  %220 = load %struct._object*, %struct._object** %encoding298, align 8, !dbg !5269, !tbaa !4036
  %cmp299 = icmp eq %struct._object* %220, null, !dbg !5270
  br i1 %cmp299, label %if.then.301, label %if.else.302, !dbg !5271

if.then.301:                                      ; preds = %if.end.295
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5272

if.else.302:                                      ; preds = %if.end.295
  %221 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5273, !tbaa !1876
  %encoding303 = getelementptr inbounds %struct.textio, %struct.textio* %221, i32 0, i32 5, !dbg !5274
  %222 = load %struct._object*, %struct._object** %encoding303, align 8, !dbg !5274, !tbaa !4036
  %ob_type304 = getelementptr inbounds %struct._object, %struct._object* %222, i32 0, i32 1, !dbg !5275
  %223 = load %struct._typeobject*, %struct._typeobject** %ob_type304, align 8, !dbg !5275, !tbaa !2194
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %223, i32 0, i32 19, !dbg !5276
  %224 = load i64, i64* %tp_flags, align 8, !dbg !5276, !tbaa !3072
  %and = and i64 %224, 268435456, !dbg !5277
  %cmp305 = icmp ne i64 %and, 0, !dbg !5278
  br i1 %cmp305, label %if.end.331, label %if.then.307, !dbg !5279

if.then.307:                                      ; preds = %if.else.302
  br label %do.body.308, !dbg !5280

do.body.308:                                      ; preds = %if.then.307
  %225 = bitcast %struct._object** %_py_tmp309 to i8*, !dbg !5281
  call void @llvm.lifetime.start(i64 8, i8* %225) #2, !dbg !5281
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp309, metadata !1642, metadata !1880), !dbg !5283
  %226 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5284, !tbaa !1876
  %encoding310 = getelementptr inbounds %struct.textio, %struct.textio* %226, i32 0, i32 5, !dbg !5285
  %227 = load %struct._object*, %struct._object** %encoding310, align 8, !dbg !5285, !tbaa !4036
  store %struct._object* %227, %struct._object** %_py_tmp309, align 8, !dbg !5283, !tbaa !1876
  %228 = load %struct._object*, %struct._object** %_py_tmp309, align 8, !dbg !5286, !tbaa !1876
  %cmp311 = icmp ne %struct._object* %228, null, !dbg !5287
  br i1 %cmp311, label %if.then.313, label %if.end.328, !dbg !5288

if.then.313:                                      ; preds = %do.body.308
  %229 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5289, !tbaa !1876
  %encoding314 = getelementptr inbounds %struct.textio, %struct.textio* %229, i32 0, i32 5, !dbg !5291
  store %struct._object* null, %struct._object** %encoding314, align 8, !dbg !5292, !tbaa !4036
  br label %do.body.315, !dbg !5293

do.body.315:                                      ; preds = %if.then.313
  %230 = bitcast %struct._object** %_py_decref_tmp316 to i8*, !dbg !5294
  call void @llvm.lifetime.start(i64 8, i8* %230) #2, !dbg !5294
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp316, metadata !1646, metadata !1880), !dbg !5296
  %231 = load %struct._object*, %struct._object** %_py_tmp309, align 8, !dbg !5297, !tbaa !1876
  store %struct._object* %231, %struct._object** %_py_decref_tmp316, align 8, !dbg !5296, !tbaa !1876
  %232 = load %struct._object*, %struct._object** %_py_decref_tmp316, align 8, !dbg !5298, !tbaa !1876
  %ob_refcnt317 = getelementptr inbounds %struct._object, %struct._object* %232, i32 0, i32 0, !dbg !5300
  %233 = load i64, i64* %ob_refcnt317, align 8, !dbg !5301, !tbaa !1927
  %dec318 = add i64 %233, -1, !dbg !5301
  store i64 %dec318, i64* %ob_refcnt317, align 8, !dbg !5301, !tbaa !1927
  %cmp319 = icmp ne i64 %dec318, 0, !dbg !5302
  br i1 %cmp319, label %if.then.321, label %if.else.322, !dbg !5303

if.then.321:                                      ; preds = %do.body.315
  br label %if.end.325, !dbg !5304

if.else.322:                                      ; preds = %do.body.315
  %234 = load %struct._object*, %struct._object** %_py_decref_tmp316, align 8, !dbg !5306, !tbaa !1876
  %ob_type323 = getelementptr inbounds %struct._object, %struct._object* %234, i32 0, i32 1, !dbg !5308
  %235 = load %struct._typeobject*, %struct._typeobject** %ob_type323, align 8, !dbg !5308, !tbaa !2194
  %tp_dealloc324 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %235, i32 0, i32 4, !dbg !5309
  %236 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc324, align 8, !dbg !5309, !tbaa !2196
  %237 = load %struct._object*, %struct._object** %_py_decref_tmp316, align 8, !dbg !5310, !tbaa !1876
  call void %236(%struct._object* %237), !dbg !5311
  br label %if.end.325

if.end.325:                                       ; preds = %if.else.322, %if.then.321
  %238 = bitcast %struct._object** %_py_decref_tmp316 to i8*, !dbg !5312
  call void @llvm.lifetime.end(i64 8, i8* %238) #2, !dbg !5312
  br label %do.cond.326, !dbg !5314

do.cond.326:                                      ; preds = %if.end.325
  br label %do.end.327, !dbg !5315

do.end.327:                                       ; preds = %do.cond.326
  br label %if.end.328, !dbg !5317

if.end.328:                                       ; preds = %do.end.327, %do.body.308
  %239 = bitcast %struct._object** %_py_tmp309 to i8*, !dbg !5319
  call void @llvm.lifetime.end(i64 8, i8* %239) #2, !dbg !5319
  br label %do.cond.329, !dbg !5322

do.cond.329:                                      ; preds = %if.end.328
  br label %do.end.330, !dbg !5323

do.end.330:                                       ; preds = %do.cond.329
  br label %if.end.331, !dbg !5325

if.end.331:                                       ; preds = %do.end.330, %if.else.302
  br label %if.end.332

if.end.332:                                       ; preds = %if.end.331
  store i32 0, i32* %cleanup.dest.slot, !dbg !5327
  br label %cleanup, !dbg !5327

cleanup:                                          ; preds = %if.end.332, %if.then.301, %if.then.294
  %240 = bitcast i32* %fd to i8*, !dbg !5328
  call void @llvm.lifetime.end(i64 4, i8* %240) #2, !dbg !5328
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.333

if.end.333:                                       ; preds = %cleanup.cont, %if.end.273
  store i32 0, i32* %cleanup.dest.slot, !dbg !5330
  br label %cleanup.334, !dbg !5330

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.334

cleanup.334:                                      ; preds = %NewDefault, %if.end.333, %if.else.272, %if.then.261
  %241 = bitcast %struct._object** %fileno to i8*, !dbg !5331
  call void @llvm.lifetime.end(i64 8, i8* %241) #2, !dbg !5331
  %cleanup.dest.335 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.334
  %Pivot = icmp slt i32 %cleanup.dest.335, 42
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.335, 42
  br i1 %SwitchLeaf5, label %error, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.335, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.336, label %NewDefault.1

cleanup.cont.336:                                 ; preds = %LeafBlock.2
  br label %if.end.337, !dbg !5333

if.end.337:                                       ; preds = %cleanup.cont.336, %do.end.254
  %242 = load i8*, i8** %encoding, align 8, !dbg !5334, !tbaa !1876
  %cmp338 = icmp eq i8* %242, null, !dbg !5335
  br i1 %cmp338, label %land.lhs.true.340, label %if.end.412, !dbg !5336

land.lhs.true.340:                                ; preds = %if.end.337
  %243 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5337, !tbaa !1876
  %encoding341 = getelementptr inbounds %struct.textio, %struct.textio* %243, i32 0, i32 5, !dbg !5339
  %244 = load %struct._object*, %struct._object** %encoding341, align 8, !dbg !5339, !tbaa !4036
  %cmp342 = icmp eq %struct._object* %244, null, !dbg !5340
  br i1 %cmp342, label %if.then.344, label %if.end.412, !dbg !5341

if.then.344:                                      ; preds = %land.lhs.true.340
  %245 = bitcast %struct._object** %locale_module to i8*, !dbg !5342
  call void @llvm.lifetime.start(i64 8, i8* %245) #2, !dbg !5342
  call void @llvm.dbg.declare(metadata %struct._object** %locale_module, metadata !1650, metadata !1880), !dbg !5343
  %246 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !5344, !tbaa !1876
  %call345 = call %struct._object* @_PyIO_get_locale_module(%struct._PyIO_State* %246), !dbg !5345
  store %struct._object* %call345, %struct._object** %locale_module, align 8, !dbg !5343, !tbaa !1876
  %247 = load %struct._object*, %struct._object** %locale_module, align 8, !dbg !5346, !tbaa !1876
  %cmp346 = icmp eq %struct._object* %247, null, !dbg !5348
  br i1 %cmp346, label %if.then.348, label %if.end.349, !dbg !5349

if.then.348:                                      ; preds = %if.then.344
  br label %catch_ImportError, !dbg !5350

if.end.349:                                       ; preds = %if.then.344
  %248 = load %struct._object*, %struct._object** %locale_module, align 8, !dbg !5351, !tbaa !1876
  %call350 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %248, %struct._Py_Identifier* @PyId_getpreferredencoding, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)), !dbg !5352
  %249 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5353, !tbaa !1876
  %encoding351 = getelementptr inbounds %struct.textio, %struct.textio* %249, i32 0, i32 5, !dbg !5354
  store %struct._object* %call350, %struct._object** %encoding351, align 8, !dbg !5355, !tbaa !4036
  br label %do.body.352, !dbg !5356

do.body.352:                                      ; preds = %if.end.349
  %250 = bitcast %struct._object** %_py_decref_tmp353 to i8*, !dbg !5357
  call void @llvm.lifetime.start(i64 8, i8* %250) #2, !dbg !5357
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp353, metadata !1653, metadata !1880), !dbg !5359
  %251 = load %struct._object*, %struct._object** %locale_module, align 8, !dbg !5360, !tbaa !1876
  store %struct._object* %251, %struct._object** %_py_decref_tmp353, align 8, !dbg !5359, !tbaa !1876
  %252 = load %struct._object*, %struct._object** %_py_decref_tmp353, align 8, !dbg !5361, !tbaa !1876
  %ob_refcnt354 = getelementptr inbounds %struct._object, %struct._object* %252, i32 0, i32 0, !dbg !5363
  %253 = load i64, i64* %ob_refcnt354, align 8, !dbg !5364, !tbaa !1927
  %dec355 = add i64 %253, -1, !dbg !5364
  store i64 %dec355, i64* %ob_refcnt354, align 8, !dbg !5364, !tbaa !1927
  %cmp356 = icmp ne i64 %dec355, 0, !dbg !5365
  br i1 %cmp356, label %if.then.358, label %if.else.359, !dbg !5366

if.then.358:                                      ; preds = %do.body.352
  br label %if.end.362, !dbg !5367

if.else.359:                                      ; preds = %do.body.352
  %254 = load %struct._object*, %struct._object** %_py_decref_tmp353, align 8, !dbg !5369, !tbaa !1876
  %ob_type360 = getelementptr inbounds %struct._object, %struct._object* %254, i32 0, i32 1, !dbg !5371
  %255 = load %struct._typeobject*, %struct._typeobject** %ob_type360, align 8, !dbg !5371, !tbaa !2194
  %tp_dealloc361 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %255, i32 0, i32 4, !dbg !5372
  %256 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc361, align 8, !dbg !5372, !tbaa !2196
  %257 = load %struct._object*, %struct._object** %_py_decref_tmp353, align 8, !dbg !5373, !tbaa !1876
  call void %256(%struct._object* %257), !dbg !5374
  br label %if.end.362

if.end.362:                                       ; preds = %if.else.359, %if.then.358
  %258 = bitcast %struct._object** %_py_decref_tmp353 to i8*, !dbg !5375
  call void @llvm.lifetime.end(i64 8, i8* %258) #2, !dbg !5375
  br label %do.cond.363, !dbg !5377

do.cond.363:                                      ; preds = %if.end.362
  br label %do.end.364, !dbg !5378

do.end.364:                                       ; preds = %do.cond.363
  %259 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5380, !tbaa !1876
  %encoding365 = getelementptr inbounds %struct.textio, %struct.textio* %259, i32 0, i32 5, !dbg !5381
  %260 = load %struct._object*, %struct._object** %encoding365, align 8, !dbg !5381, !tbaa !4036
  %cmp366 = icmp eq %struct._object* %260, null, !dbg !5382
  br i1 %cmp366, label %if.then.368, label %if.else.376, !dbg !5383

if.then.368:                                      ; preds = %do.end.364
  br label %catch_ImportError, !dbg !5384

catch_ImportError:                                ; preds = %if.then.368, %if.then.348
  %261 = load %struct._object*, %struct._object** @PyExc_ImportError, align 8, !dbg !5386, !tbaa !1876
  %call369 = call i32 @PyErr_ExceptionMatches(%struct._object* %261), !dbg !5389
  %tobool370 = icmp ne i32 %call369, 0, !dbg !5389
  br i1 %tobool370, label %if.then.371, label %if.else.374, !dbg !5390

if.then.371:                                      ; preds = %catch_ImportError
  call void @PyErr_Clear(), !dbg !5391
  %call372 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i32 0, i32 0)), !dbg !5393
  %262 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5394, !tbaa !1876
  %encoding373 = getelementptr inbounds %struct.textio, %struct.textio* %262, i32 0, i32 5, !dbg !5395
  store %struct._object* %call372, %struct._object** %encoding373, align 8, !dbg !5396, !tbaa !4036
  br label %if.end.375, !dbg !5397

if.else.374:                                      ; preds = %catch_ImportError
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.409, !dbg !5398

if.end.375:                                       ; preds = %if.then.371
  br label %if.end.408, !dbg !5399

if.else.376:                                      ; preds = %do.end.364
  %263 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5400, !tbaa !1876
  %encoding377 = getelementptr inbounds %struct.textio, %struct.textio* %263, i32 0, i32 5, !dbg !5401
  %264 = load %struct._object*, %struct._object** %encoding377, align 8, !dbg !5401, !tbaa !4036
  %ob_type378 = getelementptr inbounds %struct._object, %struct._object* %264, i32 0, i32 1, !dbg !5402
  %265 = load %struct._typeobject*, %struct._typeobject** %ob_type378, align 8, !dbg !5402, !tbaa !2194
  %tp_flags379 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %265, i32 0, i32 19, !dbg !5403
  %266 = load i64, i64* %tp_flags379, align 8, !dbg !5403, !tbaa !3072
  %and380 = and i64 %266, 268435456, !dbg !5404
  %cmp381 = icmp ne i64 %and380, 0, !dbg !5405
  br i1 %cmp381, label %if.end.407, label %if.then.383, !dbg !5406

if.then.383:                                      ; preds = %if.else.376
  br label %do.body.384, !dbg !5407

do.body.384:                                      ; preds = %if.then.383
  %267 = bitcast %struct._object** %_py_tmp385 to i8*, !dbg !5408
  call void @llvm.lifetime.start(i64 8, i8* %267) #2, !dbg !5408
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp385, metadata !1655, metadata !1880), !dbg !5410
  %268 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5411, !tbaa !1876
  %encoding386 = getelementptr inbounds %struct.textio, %struct.textio* %268, i32 0, i32 5, !dbg !5412
  %269 = load %struct._object*, %struct._object** %encoding386, align 8, !dbg !5412, !tbaa !4036
  store %struct._object* %269, %struct._object** %_py_tmp385, align 8, !dbg !5410, !tbaa !1876
  %270 = load %struct._object*, %struct._object** %_py_tmp385, align 8, !dbg !5413, !tbaa !1876
  %cmp387 = icmp ne %struct._object* %270, null, !dbg !5414
  br i1 %cmp387, label %if.then.389, label %if.end.404, !dbg !5415

if.then.389:                                      ; preds = %do.body.384
  %271 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5416, !tbaa !1876
  %encoding390 = getelementptr inbounds %struct.textio, %struct.textio* %271, i32 0, i32 5, !dbg !5418
  store %struct._object* null, %struct._object** %encoding390, align 8, !dbg !5419, !tbaa !4036
  br label %do.body.391, !dbg !5420

do.body.391:                                      ; preds = %if.then.389
  %272 = bitcast %struct._object** %_py_decref_tmp392 to i8*, !dbg !5421
  call void @llvm.lifetime.start(i64 8, i8* %272) #2, !dbg !5421
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp392, metadata !1659, metadata !1880), !dbg !5423
  %273 = load %struct._object*, %struct._object** %_py_tmp385, align 8, !dbg !5424, !tbaa !1876
  store %struct._object* %273, %struct._object** %_py_decref_tmp392, align 8, !dbg !5423, !tbaa !1876
  %274 = load %struct._object*, %struct._object** %_py_decref_tmp392, align 8, !dbg !5425, !tbaa !1876
  %ob_refcnt393 = getelementptr inbounds %struct._object, %struct._object* %274, i32 0, i32 0, !dbg !5427
  %275 = load i64, i64* %ob_refcnt393, align 8, !dbg !5428, !tbaa !1927
  %dec394 = add i64 %275, -1, !dbg !5428
  store i64 %dec394, i64* %ob_refcnt393, align 8, !dbg !5428, !tbaa !1927
  %cmp395 = icmp ne i64 %dec394, 0, !dbg !5429
  br i1 %cmp395, label %if.then.397, label %if.else.398, !dbg !5430

if.then.397:                                      ; preds = %do.body.391
  br label %if.end.401, !dbg !5431

if.else.398:                                      ; preds = %do.body.391
  %276 = load %struct._object*, %struct._object** %_py_decref_tmp392, align 8, !dbg !5433, !tbaa !1876
  %ob_type399 = getelementptr inbounds %struct._object, %struct._object* %276, i32 0, i32 1, !dbg !5435
  %277 = load %struct._typeobject*, %struct._typeobject** %ob_type399, align 8, !dbg !5435, !tbaa !2194
  %tp_dealloc400 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %277, i32 0, i32 4, !dbg !5436
  %278 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc400, align 8, !dbg !5436, !tbaa !2196
  %279 = load %struct._object*, %struct._object** %_py_decref_tmp392, align 8, !dbg !5437, !tbaa !1876
  call void %278(%struct._object* %279), !dbg !5438
  br label %if.end.401

if.end.401:                                       ; preds = %if.else.398, %if.then.397
  %280 = bitcast %struct._object** %_py_decref_tmp392 to i8*, !dbg !5439
  call void @llvm.lifetime.end(i64 8, i8* %280) #2, !dbg !5439
  br label %do.cond.402, !dbg !5441

do.cond.402:                                      ; preds = %if.end.401
  br label %do.end.403, !dbg !5442

do.end.403:                                       ; preds = %do.cond.402
  br label %if.end.404, !dbg !5444

if.end.404:                                       ; preds = %do.end.403, %do.body.384
  %281 = bitcast %struct._object** %_py_tmp385 to i8*, !dbg !5446
  call void @llvm.lifetime.end(i64 8, i8* %281) #2, !dbg !5446
  br label %do.cond.405, !dbg !5449

do.cond.405:                                      ; preds = %if.end.404
  br label %do.end.406, !dbg !5450

do.end.406:                                       ; preds = %do.cond.405
  br label %if.end.407, !dbg !5452

if.end.407:                                       ; preds = %do.end.406, %if.else.376
  br label %if.end.408

if.end.408:                                       ; preds = %if.end.407, %if.end.375
  store i32 0, i32* %cleanup.dest.slot, !dbg !5454
  br label %cleanup.409, !dbg !5454

cleanup.409:                                      ; preds = %if.end.408, %if.else.374
  %282 = bitcast %struct._object** %locale_module to i8*, !dbg !5455
  call void @llvm.lifetime.end(i64 8, i8* %282) #2, !dbg !5455
  %cleanup.dest.410 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.11

NodeBlock.11:                                     ; preds = %cleanup.409
  %Pivot.12 = icmp slt i32 %cleanup.dest.410, 42
  br i1 %Pivot.12, label %LeafBlock.7, label %LeafBlock.9

LeafBlock.9:                                      ; preds = %NodeBlock.11
  %SwitchLeaf10 = icmp eq i32 %cleanup.dest.410, 42
  br i1 %SwitchLeaf10, label %error, label %NewDefault.6

LeafBlock.7:                                      ; preds = %NodeBlock.11
  %SwitchLeaf8 = icmp eq i32 %cleanup.dest.410, 0
  br i1 %SwitchLeaf8, label %cleanup.cont.411, label %NewDefault.6

cleanup.cont.411:                                 ; preds = %LeafBlock.7
  br label %if.end.412, !dbg !5456

if.end.412:                                       ; preds = %cleanup.cont.411, %land.lhs.true.340, %if.end.337
  %283 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5457, !tbaa !1876
  %encoding413 = getelementptr inbounds %struct.textio, %struct.textio* %283, i32 0, i32 5, !dbg !5459
  %284 = load %struct._object*, %struct._object** %encoding413, align 8, !dbg !5459, !tbaa !4036
  %cmp414 = icmp ne %struct._object* %284, null, !dbg !5460
  br i1 %cmp414, label %if.then.416, label %if.else.423, !dbg !5461

if.then.416:                                      ; preds = %if.end.412
  %285 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5462, !tbaa !1876
  %encoding417 = getelementptr inbounds %struct.textio, %struct.textio* %285, i32 0, i32 5, !dbg !5464
  %286 = load %struct._object*, %struct._object** %encoding417, align 8, !dbg !5464, !tbaa !4036
  %call418 = call i8* @PyUnicode_AsUTF8(%struct._object* %286), !dbg !5465
  store i8* %call418, i8** %encoding, align 8, !dbg !5466, !tbaa !1876
  %287 = load i8*, i8** %encoding, align 8, !dbg !5467, !tbaa !1876
  %cmp419 = icmp eq i8* %287, null, !dbg !5469
  br i1 %cmp419, label %if.then.421, label %if.end.422, !dbg !5470

if.then.421:                                      ; preds = %if.then.416
  br label %error, !dbg !5471

if.end.422:                                       ; preds = %if.then.416
  br label %if.end.436, !dbg !5472

if.else.423:                                      ; preds = %if.end.412
  %288 = load i8*, i8** %encoding, align 8, !dbg !5473, !tbaa !1876
  %cmp424 = icmp ne i8* %288, null, !dbg !5475
  br i1 %cmp424, label %if.then.426, label %if.else.434, !dbg !5476

if.then.426:                                      ; preds = %if.else.423
  %289 = load i8*, i8** %encoding, align 8, !dbg !5477, !tbaa !1876
  %call427 = call %struct._object* @PyUnicode_FromString(i8* %289), !dbg !5479
  %290 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5480, !tbaa !1876
  %encoding428 = getelementptr inbounds %struct.textio, %struct.textio* %290, i32 0, i32 5, !dbg !5481
  store %struct._object* %call427, %struct._object** %encoding428, align 8, !dbg !5482, !tbaa !4036
  %291 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5483, !tbaa !1876
  %encoding429 = getelementptr inbounds %struct.textio, %struct.textio* %291, i32 0, i32 5, !dbg !5485
  %292 = load %struct._object*, %struct._object** %encoding429, align 8, !dbg !5485, !tbaa !4036
  %cmp430 = icmp eq %struct._object* %292, null, !dbg !5486
  br i1 %cmp430, label %if.then.432, label %if.end.433, !dbg !5487

if.then.432:                                      ; preds = %if.then.426
  br label %error, !dbg !5488

if.end.433:                                       ; preds = %if.then.426
  br label %if.end.435, !dbg !5489

if.else.434:                                      ; preds = %if.else.423
  %293 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !5490, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %293, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.100, i32 0, i32 0)), !dbg !5492
  br label %if.end.435

if.end.435:                                       ; preds = %if.else.434, %if.end.433
  br label %if.end.436

if.end.436:                                       ; preds = %if.end.435, %if.end.422
  %294 = load i8*, i8** %encoding, align 8, !dbg !5493, !tbaa !1876
  %call437 = call %struct._object* @_PyCodec_LookupTextEncoding(i8* %294, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.101, i32 0, i32 0)), !dbg !5494
  store %struct._object* %call437, %struct._object** %codec_info, align 8, !dbg !5495, !tbaa !1876
  %295 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5496, !tbaa !1876
  %cmp438 = icmp eq %struct._object* %295, null, !dbg !5497
  br i1 %cmp438, label %if.then.440, label %if.end.464, !dbg !5498

if.then.440:                                      ; preds = %if.end.436
  br label %do.body.441, !dbg !5499

do.body.441:                                      ; preds = %if.then.440
  %296 = bitcast %struct._object** %_py_tmp442 to i8*, !dbg !5500
  call void @llvm.lifetime.start(i64 8, i8* %296) #2, !dbg !5500
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp442, metadata !1663, metadata !1880), !dbg !5502
  %297 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5503, !tbaa !1876
  %encoding443 = getelementptr inbounds %struct.textio, %struct.textio* %297, i32 0, i32 5, !dbg !5504
  %298 = load %struct._object*, %struct._object** %encoding443, align 8, !dbg !5504, !tbaa !4036
  store %struct._object* %298, %struct._object** %_py_tmp442, align 8, !dbg !5502, !tbaa !1876
  %299 = load %struct._object*, %struct._object** %_py_tmp442, align 8, !dbg !5505, !tbaa !1876
  %cmp444 = icmp ne %struct._object* %299, null, !dbg !5506
  br i1 %cmp444, label %if.then.446, label %if.end.461, !dbg !5507

if.then.446:                                      ; preds = %do.body.441
  %300 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5508, !tbaa !1876
  %encoding447 = getelementptr inbounds %struct.textio, %struct.textio* %300, i32 0, i32 5, !dbg !5510
  store %struct._object* null, %struct._object** %encoding447, align 8, !dbg !5511, !tbaa !4036
  br label %do.body.448, !dbg !5512

do.body.448:                                      ; preds = %if.then.446
  %301 = bitcast %struct._object** %_py_decref_tmp449 to i8*, !dbg !5513
  call void @llvm.lifetime.start(i64 8, i8* %301) #2, !dbg !5513
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp449, metadata !1667, metadata !1880), !dbg !5515
  %302 = load %struct._object*, %struct._object** %_py_tmp442, align 8, !dbg !5516, !tbaa !1876
  store %struct._object* %302, %struct._object** %_py_decref_tmp449, align 8, !dbg !5515, !tbaa !1876
  %303 = load %struct._object*, %struct._object** %_py_decref_tmp449, align 8, !dbg !5517, !tbaa !1876
  %ob_refcnt450 = getelementptr inbounds %struct._object, %struct._object* %303, i32 0, i32 0, !dbg !5519
  %304 = load i64, i64* %ob_refcnt450, align 8, !dbg !5520, !tbaa !1927
  %dec451 = add i64 %304, -1, !dbg !5520
  store i64 %dec451, i64* %ob_refcnt450, align 8, !dbg !5520, !tbaa !1927
  %cmp452 = icmp ne i64 %dec451, 0, !dbg !5521
  br i1 %cmp452, label %if.then.454, label %if.else.455, !dbg !5522

if.then.454:                                      ; preds = %do.body.448
  br label %if.end.458, !dbg !5523

if.else.455:                                      ; preds = %do.body.448
  %305 = load %struct._object*, %struct._object** %_py_decref_tmp449, align 8, !dbg !5525, !tbaa !1876
  %ob_type456 = getelementptr inbounds %struct._object, %struct._object* %305, i32 0, i32 1, !dbg !5527
  %306 = load %struct._typeobject*, %struct._typeobject** %ob_type456, align 8, !dbg !5527, !tbaa !2194
  %tp_dealloc457 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %306, i32 0, i32 4, !dbg !5528
  %307 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc457, align 8, !dbg !5528, !tbaa !2196
  %308 = load %struct._object*, %struct._object** %_py_decref_tmp449, align 8, !dbg !5529, !tbaa !1876
  call void %307(%struct._object* %308), !dbg !5530
  br label %if.end.458

if.end.458:                                       ; preds = %if.else.455, %if.then.454
  %309 = bitcast %struct._object** %_py_decref_tmp449 to i8*, !dbg !5531
  call void @llvm.lifetime.end(i64 8, i8* %309) #2, !dbg !5531
  br label %do.cond.459, !dbg !5533

do.cond.459:                                      ; preds = %if.end.458
  br label %do.end.460, !dbg !5534

do.end.460:                                       ; preds = %do.cond.459
  br label %if.end.461, !dbg !5536

if.end.461:                                       ; preds = %do.end.460, %do.body.441
  %310 = bitcast %struct._object** %_py_tmp442 to i8*, !dbg !5538
  call void @llvm.lifetime.end(i64 8, i8* %310) #2, !dbg !5538
  br label %do.cond.462, !dbg !5541

do.cond.462:                                      ; preds = %if.end.461
  br label %do.end.463, !dbg !5542

do.end.463:                                       ; preds = %do.cond.462
  br label %error, !dbg !5544

if.end.464:                                       ; preds = %if.end.436
  %311 = load i8*, i8** %errors, align 8, !dbg !5545, !tbaa !1876
  %cmp465 = icmp eq i8* %311, null, !dbg !5547
  br i1 %cmp465, label %if.then.467, label %if.end.468, !dbg !5548

if.then.467:                                      ; preds = %if.end.464
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i8** %errors, align 8, !dbg !5549, !tbaa !1876
  br label %if.end.468, !dbg !5550

if.end.468:                                       ; preds = %if.then.467, %if.end.464
  %312 = load i8*, i8** %errors, align 8, !dbg !5551, !tbaa !1876
  %call469 = call %struct._object* @PyBytes_FromString(i8* %312), !dbg !5552
  %313 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5553, !tbaa !1876
  %errors470 = getelementptr inbounds %struct.textio, %struct.textio* %313, i32 0, i32 9, !dbg !5554
  store %struct._object* %call469, %struct._object** %errors470, align 8, !dbg !5555, !tbaa !4346
  %314 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5556, !tbaa !1876
  %errors471 = getelementptr inbounds %struct.textio, %struct.textio* %314, i32 0, i32 9, !dbg !5558
  %315 = load %struct._object*, %struct._object** %errors471, align 8, !dbg !5558, !tbaa !4346
  %cmp472 = icmp eq %struct._object* %315, null, !dbg !5559
  br i1 %cmp472, label %if.then.474, label %if.end.475, !dbg !5560

if.then.474:                                      ; preds = %if.end.468
  br label %error, !dbg !5561

if.end.475:                                       ; preds = %if.end.468
  %316 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5562, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %316, i32 0, i32 3, !dbg !5563
  store i64 8192, i64* %chunk_size, align 8, !dbg !5564, !tbaa !5565
  %317 = load i8*, i8** %newline, align 8, !dbg !5566, !tbaa !1876
  %cmp476 = icmp eq i8* %317, null, !dbg !5567
  br i1 %cmp476, label %lor.end, label %lor.rhs, !dbg !5568

lor.rhs:                                          ; preds = %if.end.475
  %318 = load i8*, i8** %newline, align 8, !dbg !5569, !tbaa !1876
  %arrayidx478 = getelementptr i8, i8* %318, i64 0, !dbg !5569
  %319 = load i8, i8* %arrayidx478, align 1, !dbg !5569, !tbaa !2064
  %conv479 = sext i8 %319 to i32, !dbg !5569
  %cmp480 = icmp eq i32 %conv479, 0, !dbg !5571
  br label %lor.end, !dbg !5568

lor.end:                                          ; preds = %lor.rhs, %if.end.475
  %320 = phi i1 [ true, %if.end.475 ], [ %cmp480, %lor.rhs ]
  %lor.ext = zext i1 %320 to i32, !dbg !5572
  %conv482 = trunc i32 %lor.ext to i8, !dbg !5575
  %321 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5576, !tbaa !1876
  %readuniversal = getelementptr inbounds %struct.textio, %struct.textio* %321, i32 0, i32 13, !dbg !5577
  store i8 %conv482, i8* %readuniversal, align 1, !dbg !5578, !tbaa !5579
  %322 = load i32, i32* %line_buffering, align 4, !dbg !5580, !tbaa !1883
  %conv483 = trunc i32 %322 to i8, !dbg !5580
  %323 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5581, !tbaa !1876
  %line_buffering484 = getelementptr inbounds %struct.textio, %struct.textio* %323, i32 0, i32 11, !dbg !5582
  store i8 %conv483, i8* %line_buffering484, align 1, !dbg !5583, !tbaa !5584
  %324 = load i32, i32* %write_through, align 4, !dbg !5585, !tbaa !1883
  %conv485 = trunc i32 %324 to i8, !dbg !5585
  %325 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5586, !tbaa !1876
  %write_through486 = getelementptr inbounds %struct.textio, %struct.textio* %325, i32 0, i32 12, !dbg !5587
  store i8 %conv485, i8* %write_through486, align 1, !dbg !5588, !tbaa !5589
  %326 = load i8*, i8** %newline, align 8, !dbg !5590, !tbaa !1876
  %cmp487 = icmp eq i8* %326, null, !dbg !5591
  %conv488 = zext i1 %cmp487 to i32, !dbg !5591
  %conv489 = trunc i32 %conv488 to i8, !dbg !5592
  %327 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5593, !tbaa !1876
  %readtranslate = getelementptr inbounds %struct.textio, %struct.textio* %327, i32 0, i32 14, !dbg !5594
  store i8 %conv489, i8* %readtranslate, align 1, !dbg !5595, !tbaa !5596
  %328 = load i8*, i8** %newline, align 8, !dbg !5597, !tbaa !1876
  %tobool490 = icmp ne i8* %328, null, !dbg !5597
  br i1 %tobool490, label %if.then.491, label %if.end.499, !dbg !5599

if.then.491:                                      ; preds = %lor.end
  %329 = load i8*, i8** %newline, align 8, !dbg !5600, !tbaa !1876
  %call492 = call %struct._object* @PyUnicode_FromString(i8* %329), !dbg !5602
  %330 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5603, !tbaa !1876
  %readnl493 = getelementptr inbounds %struct.textio, %struct.textio* %330, i32 0, i32 8, !dbg !5604
  store %struct._object* %call492, %struct._object** %readnl493, align 8, !dbg !5605, !tbaa !4230
  %331 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5606, !tbaa !1876
  %readnl494 = getelementptr inbounds %struct.textio, %struct.textio* %331, i32 0, i32 8, !dbg !5608
  %332 = load %struct._object*, %struct._object** %readnl494, align 8, !dbg !5608, !tbaa !4230
  %cmp495 = icmp eq %struct._object* %332, null, !dbg !5609
  br i1 %cmp495, label %if.then.497, label %if.end.498, !dbg !5610

if.then.497:                                      ; preds = %if.then.491
  br label %error, !dbg !5611

if.end.498:                                       ; preds = %if.then.491
  br label %if.end.499, !dbg !5612

if.end.499:                                       ; preds = %if.end.498, %lor.end
  %333 = load i8*, i8** %newline, align 8, !dbg !5613, !tbaa !1876
  %cmp500 = icmp eq i8* %333, null, !dbg !5614
  br i1 %cmp500, label %lor.end.507, label %lor.rhs.502, !dbg !5615

lor.rhs.502:                                      ; preds = %if.end.499
  %334 = load i8*, i8** %newline, align 8, !dbg !5616, !tbaa !1876
  %arrayidx503 = getelementptr i8, i8* %334, i64 0, !dbg !5616
  %335 = load i8, i8* %arrayidx503, align 1, !dbg !5616, !tbaa !2064
  %conv504 = sext i8 %335 to i32, !dbg !5616
  %cmp505 = icmp ne i32 %conv504, 0, !dbg !5617
  br label %lor.end.507, !dbg !5615

lor.end.507:                                      ; preds = %lor.rhs.502, %if.end.499
  %336 = phi i1 [ true, %if.end.499 ], [ %cmp505, %lor.rhs.502 ]
  %lor.ext508 = zext i1 %336 to i32, !dbg !5618
  %conv509 = trunc i32 %lor.ext508 to i8, !dbg !5619
  %337 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5620, !tbaa !1876
  %writetranslate = getelementptr inbounds %struct.textio, %struct.textio* %337, i32 0, i32 15, !dbg !5621
  store i8 %conv509, i8* %writetranslate, align 1, !dbg !5622, !tbaa !5623
  %338 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5624, !tbaa !1876
  %readuniversal510 = getelementptr inbounds %struct.textio, %struct.textio* %338, i32 0, i32 13, !dbg !5625
  %339 = load i8, i8* %readuniversal510, align 1, !dbg !5625, !tbaa !5579
  %tobool511 = icmp ne i8 %339, 0, !dbg !5624
  br i1 %tobool511, label %if.end.572, label %land.lhs.true.512, !dbg !5626

land.lhs.true.512:                                ; preds = %lor.end.507
  %340 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5627, !tbaa !1876
  %readnl513 = getelementptr inbounds %struct.textio, %struct.textio* %340, i32 0, i32 8, !dbg !5629
  %341 = load %struct._object*, %struct._object** %readnl513, align 8, !dbg !5629, !tbaa !4230
  %tobool514 = icmp ne %struct._object* %341, null, !dbg !5630
  br i1 %tobool514, label %if.then.515, label %if.end.572, !dbg !5631

if.then.515:                                      ; preds = %land.lhs.true.512
  %342 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5632, !tbaa !1876
  %readnl516 = getelementptr inbounds %struct.textio, %struct.textio* %342, i32 0, i32 8, !dbg !5633
  %343 = load %struct._object*, %struct._object** %readnl516, align 8, !dbg !5633, !tbaa !4230
  %call517 = call i8* @PyUnicode_AsUTF8(%struct._object* %343), !dbg !5634
  %344 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5635, !tbaa !1876
  %writenl = getelementptr inbounds %struct.textio, %struct.textio* %344, i32 0, i32 10, !dbg !5636
  store i8* %call517, i8** %writenl, align 8, !dbg !5637, !tbaa !5638
  %345 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5639, !tbaa !1876
  %writenl518 = getelementptr inbounds %struct.textio, %struct.textio* %345, i32 0, i32 10, !dbg !5641
  %346 = load i8*, i8** %writenl518, align 8, !dbg !5641, !tbaa !5638
  %cmp519 = icmp eq i8* %346, null, !dbg !5642
  br i1 %cmp519, label %if.then.521, label %if.end.522, !dbg !5643

if.then.521:                                      ; preds = %if.then.515
  br label %error, !dbg !5644

if.end.522:                                       ; preds = %if.then.515
  %347 = bitcast i64* %__s1_len to i8*, !dbg !5645
  call void @llvm.lifetime.start(i64 8, i8* %347) #2, !dbg !5645
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !1671, metadata !1880), !dbg !5646
  %348 = bitcast i64* %__s2_len to i8*, !dbg !5645
  call void @llvm.lifetime.start(i64 8, i8* %348) #2, !dbg !5645
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !1676, metadata !1880), !dbg !5647
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i64 1) to i64), i64 ptrtoint ([2 x i8]* @.str.24 to i64)), i64 1), label %land.lhs.true.523, label %cond.false, !dbg !5648

land.lhs.true.523:                                ; preds = %if.end.522
  store i64 1, i64* %__s2_len, align 8, !dbg !5649, !tbaa !1941
  %349 = load i64, i64* %__s2_len, align 8, !dbg !5651, !tbaa !1941
  %cmp524 = icmp ult i64 %349, 4, !dbg !5652
  br i1 %cmp524, label %cond.true, label %cond.false, !dbg !5653

cond.true:                                        ; preds = %land.lhs.true.523
  %350 = bitcast i8** %__s1 to i8*, !dbg !5654
  call void @llvm.lifetime.start(i64 8, i8* %350) #2, !dbg !5654
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !1677, metadata !1880), !dbg !5656
  %351 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5657, !tbaa !1876
  %writenl527 = getelementptr inbounds %struct.textio, %struct.textio* %351, i32 0, i32 10, !dbg !5658
  %352 = load i8*, i8** %writenl527, align 8, !dbg !5658, !tbaa !5638
  store i8* %352, i8** %__s1, align 8, !dbg !5656, !tbaa !1876
  %353 = bitcast i32* %__result to i8*, !dbg !5659
  call void @llvm.lifetime.start(i64 4, i8* %353) #2, !dbg !5659
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !1679, metadata !1880), !dbg !5660
  %354 = load i8*, i8** %__s1, align 8, !dbg !5661, !tbaa !1876
  %arrayidx529 = getelementptr i8, i8* %354, i64 0, !dbg !5661
  %355 = load i8, i8* %arrayidx529, align 1, !dbg !5661, !tbaa !2064
  %conv530 = zext i8 %355 to i32, !dbg !5661
  %356 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), align 1, !dbg !5662, !tbaa !2064
  %conv531 = zext i8 %356 to i32, !dbg !5662
  %sub = sub i32 %conv530, %conv531, !dbg !5663
  store i32 %sub, i32* %__result, align 4, !dbg !5660, !tbaa !1883
  %357 = load i64, i64* %__s2_len, align 8, !dbg !5664, !tbaa !1941
  %cmp532 = icmp ugt i64 %357, 0, !dbg !5666
  br i1 %cmp532, label %land.lhs.true.534, label %if.end.564, !dbg !5667

land.lhs.true.534:                                ; preds = %cond.true
  %358 = load i32, i32* %__result, align 4, !dbg !5668, !tbaa !1883
  %cmp535 = icmp eq i32 %358, 0, !dbg !5670
  br i1 %cmp535, label %if.then.537, label %if.end.564, !dbg !5671

if.then.537:                                      ; preds = %land.lhs.true.534
  %359 = load i8*, i8** %__s1, align 8, !dbg !5672, !tbaa !1876
  %arrayidx538 = getelementptr i8, i8* %359, i64 1, !dbg !5672
  %360 = load i8, i8* %arrayidx538, align 1, !dbg !5672, !tbaa !2064
  %conv539 = zext i8 %360 to i32, !dbg !5672
  %361 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i64 1), align 1, !dbg !5675, !tbaa !2064
  %conv540 = zext i8 %361 to i32, !dbg !5675
  %sub541 = sub i32 %conv539, %conv540, !dbg !5676
  store i32 %sub541, i32* %__result, align 4, !dbg !5677, !tbaa !1883
  %362 = load i64, i64* %__s2_len, align 8, !dbg !5678, !tbaa !1941
  %cmp542 = icmp ugt i64 %362, 1, !dbg !5680
  br i1 %cmp542, label %land.lhs.true.544, label %if.end.563, !dbg !5681

land.lhs.true.544:                                ; preds = %if.then.537
  %363 = load i32, i32* %__result, align 4, !dbg !5682, !tbaa !1883
  %cmp545 = icmp eq i32 %363, 0, !dbg !5684
  br i1 %cmp545, label %if.then.547, label %if.end.563, !dbg !5685

if.then.547:                                      ; preds = %land.lhs.true.544
  %364 = load i8*, i8** %__s1, align 8, !dbg !5686, !tbaa !1876
  %arrayidx548 = getelementptr i8, i8* %364, i64 2, !dbg !5686
  %365 = load i8, i8* %arrayidx548, align 1, !dbg !5686, !tbaa !2064
  %conv549 = zext i8 %365 to i32, !dbg !5686
  %366 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i64 2), align 1, !dbg !5689, !tbaa !2064
  %conv550 = zext i8 %366 to i32, !dbg !5689
  %sub551 = sub i32 %conv549, %conv550, !dbg !5690
  store i32 %sub551, i32* %__result, align 4, !dbg !5691, !tbaa !1883
  %367 = load i64, i64* %__s2_len, align 8, !dbg !5692, !tbaa !1941
  %cmp552 = icmp ugt i64 %367, 2, !dbg !5694
  br i1 %cmp552, label %land.lhs.true.554, label %if.end.562, !dbg !5695

land.lhs.true.554:                                ; preds = %if.then.547
  %368 = load i32, i32* %__result, align 4, !dbg !5696, !tbaa !1883
  %cmp555 = icmp eq i32 %368, 0, !dbg !5698
  br i1 %cmp555, label %if.then.557, label %if.end.562, !dbg !5699

if.then.557:                                      ; preds = %land.lhs.true.554
  %369 = load i8*, i8** %__s1, align 8, !dbg !5700, !tbaa !1876
  %arrayidx558 = getelementptr i8, i8* %369, i64 3, !dbg !5700
  %370 = load i8, i8* %arrayidx558, align 1, !dbg !5700, !tbaa !2064
  %conv559 = zext i8 %370 to i32, !dbg !5700
  %371 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i64 3), align 1, !dbg !5702, !tbaa !2064
  %conv560 = zext i8 %371 to i32, !dbg !5702
  %sub561 = sub i32 %conv559, %conv560, !dbg !5703
  store i32 %sub561, i32* %__result, align 4, !dbg !5704, !tbaa !1883
  br label %if.end.562, !dbg !5705

if.end.562:                                       ; preds = %if.then.557, %land.lhs.true.554, %if.then.547
  br label %if.end.563, !dbg !5706

if.end.563:                                       ; preds = %if.end.562, %land.lhs.true.544, %if.then.537
  br label %if.end.564, !dbg !5710

if.end.564:                                       ; preds = %if.end.563, %land.lhs.true.534, %cond.true
  %372 = load i32, i32* %__result, align 4, !dbg !5714, !tbaa !1883
  store i32 %372, i32* %tmp565, !dbg !5718, !tbaa !1883
  %373 = bitcast i32* %__result to i8*, !dbg !5719
  call void @llvm.lifetime.end(i64 4, i8* %373) #2, !dbg !5719
  %374 = bitcast i8** %__s1 to i8*, !dbg !5719
  call void @llvm.lifetime.end(i64 8, i8* %374) #2, !dbg !5719
  %375 = load i32, i32* %tmp565, !dbg !5720, !tbaa !1883
  br label %cond.end, !dbg !5653

cond.false:                                       ; preds = %land.lhs.true.523, %if.end.522
  %376 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5721, !tbaa !1876
  %writenl566 = getelementptr inbounds %struct.textio, %struct.textio* %376, i32 0, i32 10, !dbg !5724
  %377 = load i8*, i8** %writenl566, align 8, !dbg !5724, !tbaa !5638
  %call567 = call i32 @strcmp(i8* %377, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)) #2, !dbg !5725
  br label %cond.end, !dbg !5653

cond.end:                                         ; preds = %cond.false, %if.end.564
  %cond = phi i32 [ %375, %if.end.564 ], [ %call567, %cond.false ], !dbg !5653
  store i32 %cond, i32* %tmp, !dbg !5726, !tbaa !1883
  %378 = bitcast i64* %__s2_len to i8*, !dbg !5729
  call void @llvm.lifetime.end(i64 8, i8* %378) #2, !dbg !5729
  %379 = bitcast i64* %__s1_len to i8*, !dbg !5729
  call void @llvm.lifetime.end(i64 8, i8* %379) #2, !dbg !5729
  %380 = load i32, i32* %tmp, !dbg !5730, !tbaa !1883
  %tobool568 = icmp ne i32 %380, 0, !dbg !5731
  br i1 %tobool568, label %if.end.571, label %if.then.569, !dbg !5732

if.then.569:                                      ; preds = %cond.end
  %381 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5733, !tbaa !1876
  %writenl570 = getelementptr inbounds %struct.textio, %struct.textio* %381, i32 0, i32 10, !dbg !5734
  store i8* null, i8** %writenl570, align 8, !dbg !5735, !tbaa !5638
  br label %if.end.571, !dbg !5733

if.end.571:                                       ; preds = %if.then.569, %cond.end
  br label %if.end.572, !dbg !5736

if.end.572:                                       ; preds = %if.end.571, %land.lhs.true.512, %lor.end.507
  %382 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !5737, !tbaa !1876
  %call573 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %382, %struct._Py_Identifier* @PyId_readable, i8* null), !dbg !5738
  store %struct._object* %call573, %struct._object** %res, align 8, !dbg !5739, !tbaa !1876
  %383 = load %struct._object*, %struct._object** %res, align 8, !dbg !5740, !tbaa !1876
  %cmp574 = icmp eq %struct._object* %383, null, !dbg !5742
  br i1 %cmp574, label %if.then.576, label %if.end.577, !dbg !5743

if.then.576:                                      ; preds = %if.end.572
  br label %error, !dbg !5744

if.end.577:                                       ; preds = %if.end.572
  %384 = load %struct._object*, %struct._object** %res, align 8, !dbg !5745, !tbaa !1876
  %call578 = call i32 @PyObject_IsTrue(%struct._object* %384), !dbg !5746
  store i32 %call578, i32* %r, align 4, !dbg !5747, !tbaa !1883
  br label %do.body.579, !dbg !5748

do.body.579:                                      ; preds = %if.end.577
  %385 = bitcast %struct._object** %_py_decref_tmp581 to i8*, !dbg !5749
  call void @llvm.lifetime.start(i64 8, i8* %385) #2, !dbg !5749
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp581, metadata !1680, metadata !1880), !dbg !5751
  %386 = load %struct._object*, %struct._object** %res, align 8, !dbg !5752, !tbaa !1876
  store %struct._object* %386, %struct._object** %_py_decref_tmp581, align 8, !dbg !5751, !tbaa !1876
  %387 = load %struct._object*, %struct._object** %_py_decref_tmp581, align 8, !dbg !5753, !tbaa !1876
  %ob_refcnt582 = getelementptr inbounds %struct._object, %struct._object* %387, i32 0, i32 0, !dbg !5755
  %388 = load i64, i64* %ob_refcnt582, align 8, !dbg !5756, !tbaa !1927
  %dec583 = add i64 %388, -1, !dbg !5756
  store i64 %dec583, i64* %ob_refcnt582, align 8, !dbg !5756, !tbaa !1927
  %cmp584 = icmp ne i64 %dec583, 0, !dbg !5757
  br i1 %cmp584, label %if.then.586, label %if.else.587, !dbg !5758

if.then.586:                                      ; preds = %do.body.579
  br label %if.end.590, !dbg !5759

if.else.587:                                      ; preds = %do.body.579
  %389 = load %struct._object*, %struct._object** %_py_decref_tmp581, align 8, !dbg !5761, !tbaa !1876
  %ob_type588 = getelementptr inbounds %struct._object, %struct._object* %389, i32 0, i32 1, !dbg !5763
  %390 = load %struct._typeobject*, %struct._typeobject** %ob_type588, align 8, !dbg !5763, !tbaa !2194
  %tp_dealloc589 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %390, i32 0, i32 4, !dbg !5764
  %391 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc589, align 8, !dbg !5764, !tbaa !2196
  %392 = load %struct._object*, %struct._object** %_py_decref_tmp581, align 8, !dbg !5765, !tbaa !1876
  call void %391(%struct._object* %392), !dbg !5766
  br label %if.end.590

if.end.590:                                       ; preds = %if.else.587, %if.then.586
  %393 = bitcast %struct._object** %_py_decref_tmp581 to i8*, !dbg !5767
  call void @llvm.lifetime.end(i64 8, i8* %393) #2, !dbg !5767
  br label %do.cond.591, !dbg !5769

do.cond.591:                                      ; preds = %if.end.590
  br label %do.end.592, !dbg !5770

do.end.592:                                       ; preds = %do.cond.591
  %394 = load i32, i32* %r, align 4, !dbg !5772, !tbaa !1883
  %cmp593 = icmp eq i32 %394, -1, !dbg !5774
  br i1 %cmp593, label %if.then.595, label %if.end.596, !dbg !5775

if.then.595:                                      ; preds = %do.end.592
  br label %error, !dbg !5776

if.end.596:                                       ; preds = %do.end.592
  %395 = load i32, i32* %r, align 4, !dbg !5777, !tbaa !1883
  %cmp597 = icmp eq i32 %395, 1, !dbg !5778
  br i1 %cmp597, label %if.then.599, label %if.end.649, !dbg !5779

if.then.599:                                      ; preds = %if.end.596
  %396 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5780, !tbaa !1876
  %397 = load i8*, i8** %errors, align 8, !dbg !5781, !tbaa !1876
  %call600 = call %struct._object* @_PyCodecInfo_GetIncrementalDecoder(%struct._object* %396, i8* %397), !dbg !5782
  %398 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5783, !tbaa !1876
  %decoder601 = getelementptr inbounds %struct.textio, %struct.textio* %398, i32 0, i32 7, !dbg !5784
  store %struct._object* %call600, %struct._object** %decoder601, align 8, !dbg !5785, !tbaa !4201
  %399 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5786, !tbaa !1876
  %decoder602 = getelementptr inbounds %struct.textio, %struct.textio* %399, i32 0, i32 7, !dbg !5788
  %400 = load %struct._object*, %struct._object** %decoder602, align 8, !dbg !5788, !tbaa !4201
  %cmp603 = icmp eq %struct._object* %400, null, !dbg !5789
  br i1 %cmp603, label %if.then.605, label %if.end.606, !dbg !5790

if.then.605:                                      ; preds = %if.then.599
  br label %error, !dbg !5791

if.end.606:                                       ; preds = %if.then.599
  %401 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5792, !tbaa !1876
  %readuniversal607 = getelementptr inbounds %struct.textio, %struct.textio* %401, i32 0, i32 13, !dbg !5793
  %402 = load i8, i8* %readuniversal607, align 1, !dbg !5793, !tbaa !5579
  %tobool608 = icmp ne i8 %402, 0, !dbg !5792
  br i1 %tobool608, label %if.then.609, label %if.end.648, !dbg !5794

if.then.609:                                      ; preds = %if.end.606
  %403 = bitcast %struct._object** %incrementalDecoder to i8*, !dbg !5795
  call void @llvm.lifetime.start(i64 8, i8* %403) #2, !dbg !5795
  call void @llvm.dbg.declare(metadata %struct._object** %incrementalDecoder, metadata !1682, metadata !1880), !dbg !5796
  %404 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5797, !tbaa !1876
  %decoder611 = getelementptr inbounds %struct.textio, %struct.textio* %404, i32 0, i32 7, !dbg !5798
  %405 = load %struct._object*, %struct._object** %decoder611, align 8, !dbg !5798, !tbaa !4201
  %406 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5799, !tbaa !1876
  %readtranslate612 = getelementptr inbounds %struct.textio, %struct.textio* %406, i32 0, i32 14, !dbg !5800
  %407 = load i8, i8* %readtranslate612, align 1, !dbg !5800, !tbaa !5596
  %conv613 = sext i8 %407 to i32, !dbg !5801
  %call614 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyIncrementalNewlineDecoder_Type, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), %struct._object* %405, i32 %conv613), !dbg !5802
  store %struct._object* %call614, %struct._object** %incrementalDecoder, align 8, !dbg !5796, !tbaa !1876
  %408 = load %struct._object*, %struct._object** %incrementalDecoder, align 8, !dbg !5803, !tbaa !1876
  %cmp615 = icmp eq %struct._object* %408, null, !dbg !5805
  br i1 %cmp615, label %if.then.617, label %if.end.618, !dbg !5806

if.then.617:                                      ; preds = %if.then.609
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.645, !dbg !5807

if.end.618:                                       ; preds = %if.then.609
  br label %do.body.619, !dbg !5808

do.body.619:                                      ; preds = %if.end.618
  %409 = bitcast %struct._object** %_py_tmp621 to i8*, !dbg !5809
  call void @llvm.lifetime.start(i64 8, i8* %409) #2, !dbg !5809
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp621, metadata !1687, metadata !1880), !dbg !5811
  %410 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5812, !tbaa !1876
  %decoder622 = getelementptr inbounds %struct.textio, %struct.textio* %410, i32 0, i32 7, !dbg !5813
  %411 = load %struct._object*, %struct._object** %decoder622, align 8, !dbg !5813, !tbaa !4201
  store %struct._object* %411, %struct._object** %_py_tmp621, align 8, !dbg !5811, !tbaa !1876
  %412 = load %struct._object*, %struct._object** %_py_tmp621, align 8, !dbg !5814, !tbaa !1876
  %cmp623 = icmp ne %struct._object* %412, null, !dbg !5815
  br i1 %cmp623, label %if.then.625, label %if.end.641, !dbg !5816

if.then.625:                                      ; preds = %do.body.619
  %413 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5817, !tbaa !1876
  %decoder626 = getelementptr inbounds %struct.textio, %struct.textio* %413, i32 0, i32 7, !dbg !5819
  store %struct._object* null, %struct._object** %decoder626, align 8, !dbg !5820, !tbaa !4201
  br label %do.body.627, !dbg !5821

do.body.627:                                      ; preds = %if.then.625
  %414 = bitcast %struct._object** %_py_decref_tmp629 to i8*, !dbg !5822
  call void @llvm.lifetime.start(i64 8, i8* %414) #2, !dbg !5822
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp629, metadata !1689, metadata !1880), !dbg !5824
  %415 = load %struct._object*, %struct._object** %_py_tmp621, align 8, !dbg !5825, !tbaa !1876
  store %struct._object* %415, %struct._object** %_py_decref_tmp629, align 8, !dbg !5824, !tbaa !1876
  %416 = load %struct._object*, %struct._object** %_py_decref_tmp629, align 8, !dbg !5826, !tbaa !1876
  %ob_refcnt630 = getelementptr inbounds %struct._object, %struct._object* %416, i32 0, i32 0, !dbg !5828
  %417 = load i64, i64* %ob_refcnt630, align 8, !dbg !5829, !tbaa !1927
  %dec631 = add i64 %417, -1, !dbg !5829
  store i64 %dec631, i64* %ob_refcnt630, align 8, !dbg !5829, !tbaa !1927
  %cmp632 = icmp ne i64 %dec631, 0, !dbg !5830
  br i1 %cmp632, label %if.then.634, label %if.else.635, !dbg !5831

if.then.634:                                      ; preds = %do.body.627
  br label %if.end.638, !dbg !5832

if.else.635:                                      ; preds = %do.body.627
  %418 = load %struct._object*, %struct._object** %_py_decref_tmp629, align 8, !dbg !5834, !tbaa !1876
  %ob_type636 = getelementptr inbounds %struct._object, %struct._object* %418, i32 0, i32 1, !dbg !5836
  %419 = load %struct._typeobject*, %struct._typeobject** %ob_type636, align 8, !dbg !5836, !tbaa !2194
  %tp_dealloc637 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %419, i32 0, i32 4, !dbg !5837
  %420 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc637, align 8, !dbg !5837, !tbaa !2196
  %421 = load %struct._object*, %struct._object** %_py_decref_tmp629, align 8, !dbg !5838, !tbaa !1876
  call void %420(%struct._object* %421), !dbg !5839
  br label %if.end.638

if.end.638:                                       ; preds = %if.else.635, %if.then.634
  %422 = bitcast %struct._object** %_py_decref_tmp629 to i8*, !dbg !5840
  call void @llvm.lifetime.end(i64 8, i8* %422) #2, !dbg !5840
  br label %do.cond.639, !dbg !5842

do.cond.639:                                      ; preds = %if.end.638
  br label %do.end.640, !dbg !5843

do.end.640:                                       ; preds = %do.cond.639
  br label %if.end.641, !dbg !5845

if.end.641:                                       ; preds = %do.end.640, %do.body.619
  %423 = bitcast %struct._object** %_py_tmp621 to i8*, !dbg !5847
  call void @llvm.lifetime.end(i64 8, i8* %423) #2, !dbg !5847
  br label %do.cond.642, !dbg !5850

do.cond.642:                                      ; preds = %if.end.641
  br label %do.end.643, !dbg !5851

do.end.643:                                       ; preds = %do.cond.642
  %424 = load %struct._object*, %struct._object** %incrementalDecoder, align 8, !dbg !5853, !tbaa !1876
  %425 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5854, !tbaa !1876
  %decoder644 = getelementptr inbounds %struct.textio, %struct.textio* %425, i32 0, i32 7, !dbg !5855
  store %struct._object* %424, %struct._object** %decoder644, align 8, !dbg !5856, !tbaa !4201
  store i32 0, i32* %cleanup.dest.slot, !dbg !5857
  br label %cleanup.645, !dbg !5857

cleanup.645:                                      ; preds = %do.end.643, %if.then.617
  %426 = bitcast %struct._object** %incrementalDecoder to i8*, !dbg !5858
  call void @llvm.lifetime.end(i64 8, i8* %426) #2, !dbg !5858
  %cleanup.dest.646 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.18

NodeBlock.18:                                     ; preds = %cleanup.645
  %Pivot.19 = icmp slt i32 %cleanup.dest.646, 42
  br i1 %Pivot.19, label %LeafBlock.14, label %LeafBlock.16

LeafBlock.16:                                     ; preds = %NodeBlock.18
  %SwitchLeaf17 = icmp eq i32 %cleanup.dest.646, 42
  br i1 %SwitchLeaf17, label %error, label %NewDefault.13

LeafBlock.14:                                     ; preds = %NodeBlock.18
  %SwitchLeaf15 = icmp eq i32 %cleanup.dest.646, 0
  br i1 %SwitchLeaf15, label %cleanup.cont.647, label %NewDefault.13

cleanup.cont.647:                                 ; preds = %LeafBlock.14
  br label %if.end.648, !dbg !5860

if.end.648:                                       ; preds = %cleanup.cont.647, %if.end.606
  br label %if.end.649, !dbg !5861

if.end.649:                                       ; preds = %if.end.648, %if.end.596
  %427 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !5862, !tbaa !1876
  %call650 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %427, %struct._Py_Identifier* @PyId_writable, i8* null), !dbg !5863
  store %struct._object* %call650, %struct._object** %res, align 8, !dbg !5864, !tbaa !1876
  %428 = load %struct._object*, %struct._object** %res, align 8, !dbg !5865, !tbaa !1876
  %cmp651 = icmp eq %struct._object* %428, null, !dbg !5867
  br i1 %cmp651, label %if.then.653, label %if.end.654, !dbg !5868

if.then.653:                                      ; preds = %if.end.649
  br label %error, !dbg !5869

if.end.654:                                       ; preds = %if.end.649
  %429 = load %struct._object*, %struct._object** %res, align 8, !dbg !5870, !tbaa !1876
  %call655 = call i32 @PyObject_IsTrue(%struct._object* %429), !dbg !5871
  store i32 %call655, i32* %r, align 4, !dbg !5872, !tbaa !1883
  br label %do.body.656, !dbg !5873

do.body.656:                                      ; preds = %if.end.654
  %430 = bitcast %struct._object** %_py_decref_tmp658 to i8*, !dbg !5874
  call void @llvm.lifetime.start(i64 8, i8* %430) #2, !dbg !5874
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp658, metadata !1693, metadata !1880), !dbg !5876
  %431 = load %struct._object*, %struct._object** %res, align 8, !dbg !5877, !tbaa !1876
  store %struct._object* %431, %struct._object** %_py_decref_tmp658, align 8, !dbg !5876, !tbaa !1876
  %432 = load %struct._object*, %struct._object** %_py_decref_tmp658, align 8, !dbg !5878, !tbaa !1876
  %ob_refcnt659 = getelementptr inbounds %struct._object, %struct._object* %432, i32 0, i32 0, !dbg !5880
  %433 = load i64, i64* %ob_refcnt659, align 8, !dbg !5881, !tbaa !1927
  %dec660 = add i64 %433, -1, !dbg !5881
  store i64 %dec660, i64* %ob_refcnt659, align 8, !dbg !5881, !tbaa !1927
  %cmp661 = icmp ne i64 %dec660, 0, !dbg !5882
  br i1 %cmp661, label %if.then.663, label %if.else.664, !dbg !5883

if.then.663:                                      ; preds = %do.body.656
  br label %if.end.667, !dbg !5884

if.else.664:                                      ; preds = %do.body.656
  %434 = load %struct._object*, %struct._object** %_py_decref_tmp658, align 8, !dbg !5886, !tbaa !1876
  %ob_type665 = getelementptr inbounds %struct._object, %struct._object* %434, i32 0, i32 1, !dbg !5888
  %435 = load %struct._typeobject*, %struct._typeobject** %ob_type665, align 8, !dbg !5888, !tbaa !2194
  %tp_dealloc666 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %435, i32 0, i32 4, !dbg !5889
  %436 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc666, align 8, !dbg !5889, !tbaa !2196
  %437 = load %struct._object*, %struct._object** %_py_decref_tmp658, align 8, !dbg !5890, !tbaa !1876
  call void %436(%struct._object* %437), !dbg !5891
  br label %if.end.667

if.end.667:                                       ; preds = %if.else.664, %if.then.663
  %438 = bitcast %struct._object** %_py_decref_tmp658 to i8*, !dbg !5892
  call void @llvm.lifetime.end(i64 8, i8* %438) #2, !dbg !5892
  br label %do.cond.668, !dbg !5893

do.cond.668:                                      ; preds = %if.end.667
  br label %do.end.669, !dbg !5894

do.end.669:                                       ; preds = %do.cond.668
  %439 = load i32, i32* %r, align 4, !dbg !5896, !tbaa !1883
  %cmp670 = icmp eq i32 %439, -1, !dbg !5898
  br i1 %cmp670, label %if.then.672, label %if.end.673, !dbg !5899

if.then.672:                                      ; preds = %do.end.669
  br label %error, !dbg !5900

if.end.673:                                       ; preds = %do.end.669
  %440 = load i32, i32* %r, align 4, !dbg !5901, !tbaa !1883
  %cmp674 = icmp eq i32 %440, 1, !dbg !5902
  br i1 %cmp674, label %if.then.676, label %if.end.734, !dbg !5903

if.then.676:                                      ; preds = %if.end.673
  %441 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5904, !tbaa !1876
  %442 = load i8*, i8** %errors, align 8, !dbg !5905, !tbaa !1876
  %call677 = call %struct._object* @_PyCodecInfo_GetIncrementalEncoder(%struct._object* %441, i8* %442), !dbg !5906
  %443 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5907, !tbaa !1876
  %encoder678 = getelementptr inbounds %struct.textio, %struct.textio* %443, i32 0, i32 6, !dbg !5908
  store %struct._object* %call677, %struct._object** %encoder678, align 8, !dbg !5909, !tbaa !4172
  %444 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5910, !tbaa !1876
  %encoder679 = getelementptr inbounds %struct.textio, %struct.textio* %444, i32 0, i32 6, !dbg !5912
  %445 = load %struct._object*, %struct._object** %encoder679, align 8, !dbg !5912, !tbaa !4172
  %cmp680 = icmp eq %struct._object* %445, null, !dbg !5913
  br i1 %cmp680, label %if.then.682, label %if.end.683, !dbg !5914

if.then.682:                                      ; preds = %if.then.676
  br label %error, !dbg !5915

if.end.683:                                       ; preds = %if.then.676
  %446 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !5916, !tbaa !1876
  %call684 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %446, %struct._Py_Identifier* @PyId_name), !dbg !5917
  store %struct._object* %call684, %struct._object** %res, align 8, !dbg !5918, !tbaa !1876
  %447 = load %struct._object*, %struct._object** %res, align 8, !dbg !5919, !tbaa !1876
  %cmp685 = icmp eq %struct._object* %447, null, !dbg !5920
  br i1 %cmp685, label %if.then.687, label %if.else.693, !dbg !5921

if.then.687:                                      ; preds = %if.end.683
  %448 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !5922, !tbaa !1876
  %call688 = call i32 @PyErr_ExceptionMatches(%struct._object* %448), !dbg !5925
  %tobool689 = icmp ne i32 %call688, 0, !dbg !5925
  br i1 %tobool689, label %if.then.690, label %if.else.691, !dbg !5926

if.then.690:                                      ; preds = %if.then.687
  call void @PyErr_Clear(), !dbg !5927
  br label %if.end.692, !dbg !5927

if.else.691:                                      ; preds = %if.then.687
  br label %error, !dbg !5928

if.end.692:                                       ; preds = %if.then.690
  br label %if.end.711, !dbg !5929

if.else.693:                                      ; preds = %if.end.683
  %449 = load %struct._object*, %struct._object** %res, align 8, !dbg !5930, !tbaa !1876
  %ob_type694 = getelementptr inbounds %struct._object, %struct._object* %449, i32 0, i32 1, !dbg !5931
  %450 = load %struct._typeobject*, %struct._typeobject** %ob_type694, align 8, !dbg !5931, !tbaa !2194
  %tp_flags695 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %450, i32 0, i32 19, !dbg !5932
  %451 = load i64, i64* %tp_flags695, align 8, !dbg !5932, !tbaa !3072
  %and696 = and i64 %451, 268435456, !dbg !5933
  %cmp697 = icmp ne i64 %and696, 0, !dbg !5934
  br i1 %cmp697, label %if.then.699, label %if.end.710, !dbg !5935

if.then.699:                                      ; preds = %if.else.693
  %452 = bitcast %struct.encodefuncentry** %e to i8*, !dbg !5936
  call void @llvm.lifetime.start(i64 8, i8* %452) #2, !dbg !5936
  call void @llvm.dbg.declare(metadata %struct.encodefuncentry** %e, metadata !1695, metadata !1880), !dbg !5937
  store %struct.encodefuncentry* getelementptr inbounds ([10 x %struct.encodefuncentry], [10 x %struct.encodefuncentry]* @encodefuncs, i32 0, i32 0), %struct.encodefuncentry** %e, align 8, !dbg !5937, !tbaa !1876
  br label %while.cond, !dbg !5938

while.cond:                                       ; preds = %if.end.709, %if.then.699
  %453 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5939, !tbaa !1876
  %name = getelementptr inbounds %struct.encodefuncentry, %struct.encodefuncentry* %453, i32 0, i32 0, !dbg !5942
  %454 = load i8*, i8** %name, align 8, !dbg !5942, !tbaa !5943
  %cmp701 = icmp ne i8* %454, null, !dbg !5945
  br i1 %cmp701, label %while.body, label %while.end, !dbg !5938

while.body:                                       ; preds = %while.cond
  %455 = load %struct._object*, %struct._object** %res, align 8, !dbg !5946, !tbaa !1876
  %456 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5949, !tbaa !1876
  %name703 = getelementptr inbounds %struct.encodefuncentry, %struct.encodefuncentry* %456, i32 0, i32 0, !dbg !5950
  %457 = load i8*, i8** %name703, align 8, !dbg !5950, !tbaa !5943
  %call704 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %455, i8* %457), !dbg !5951
  %tobool705 = icmp ne i32 %call704, 0, !dbg !5951
  br i1 %tobool705, label %if.end.709, label %if.then.706, !dbg !5952

if.then.706:                                      ; preds = %while.body
  %458 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5953, !tbaa !1876
  %encodefunc707 = getelementptr inbounds %struct.encodefuncentry, %struct.encodefuncentry* %458, i32 0, i32 1, !dbg !5955
  %459 = load %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)** %encodefunc707, align 8, !dbg !5955, !tbaa !5956
  %460 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !5957, !tbaa !1876
  %encodefunc708 = getelementptr inbounds %struct.textio, %struct.textio* %460, i32 0, i32 20, !dbg !5958
  store %struct._object* (%struct._object*, %struct._object*)* %459, %struct._object* (%struct._object*, %struct._object*)** %encodefunc708, align 8, !dbg !5959, !tbaa !5186
  br label %while.end, !dbg !5960

if.end.709:                                       ; preds = %while.body
  %461 = load %struct.encodefuncentry*, %struct.encodefuncentry** %e, align 8, !dbg !5961, !tbaa !1876
  %incdec.ptr = getelementptr %struct.encodefuncentry, %struct.encodefuncentry* %461, i32 1, !dbg !5961
  store %struct.encodefuncentry* %incdec.ptr, %struct.encodefuncentry** %e, align 8, !dbg !5961, !tbaa !1876
  br label %while.cond, !dbg !5938

while.end:                                        ; preds = %if.then.706, %while.cond
  %462 = bitcast %struct.encodefuncentry** %e to i8*, !dbg !5962
  call void @llvm.lifetime.end(i64 8, i8* %462) #2, !dbg !5962
  br label %if.end.710, !dbg !5963

if.end.710:                                       ; preds = %while.end, %if.else.693
  br label %if.end.711

if.end.711:                                       ; preds = %if.end.710, %if.end.692
  br label %do.body.712, !dbg !5964

do.body.712:                                      ; preds = %if.end.711
  %463 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5965
  call void @llvm.lifetime.start(i64 8, i8* %463) #2, !dbg !5965
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1707, metadata !1880), !dbg !5967
  %464 = load %struct._object*, %struct._object** %res, align 8, !dbg !5968, !tbaa !1876
  store %struct._object* %464, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5967, !tbaa !1876
  %465 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5969, !tbaa !1876
  %cmp714 = icmp ne %struct._object* %465, null, !dbg !5970
  br i1 %cmp714, label %if.then.716, label %if.end.731, !dbg !5971

if.then.716:                                      ; preds = %do.body.712
  br label %do.body.717, !dbg !5972

do.body.717:                                      ; preds = %if.then.716
  %466 = bitcast %struct._object** %_py_decref_tmp719 to i8*, !dbg !5974
  call void @llvm.lifetime.start(i64 8, i8* %466) #2, !dbg !5974
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp719, metadata !1709, metadata !1880), !dbg !5976
  %467 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5977, !tbaa !1876
  store %struct._object* %467, %struct._object** %_py_decref_tmp719, align 8, !dbg !5976, !tbaa !1876
  %468 = load %struct._object*, %struct._object** %_py_decref_tmp719, align 8, !dbg !5978, !tbaa !1876
  %ob_refcnt720 = getelementptr inbounds %struct._object, %struct._object* %468, i32 0, i32 0, !dbg !5980
  %469 = load i64, i64* %ob_refcnt720, align 8, !dbg !5981, !tbaa !1927
  %dec721 = add i64 %469, -1, !dbg !5981
  store i64 %dec721, i64* %ob_refcnt720, align 8, !dbg !5981, !tbaa !1927
  %cmp722 = icmp ne i64 %dec721, 0, !dbg !5982
  br i1 %cmp722, label %if.then.724, label %if.else.725, !dbg !5983

if.then.724:                                      ; preds = %do.body.717
  br label %if.end.728, !dbg !5984

if.else.725:                                      ; preds = %do.body.717
  %470 = load %struct._object*, %struct._object** %_py_decref_tmp719, align 8, !dbg !5986, !tbaa !1876
  %ob_type726 = getelementptr inbounds %struct._object, %struct._object* %470, i32 0, i32 1, !dbg !5988
  %471 = load %struct._typeobject*, %struct._typeobject** %ob_type726, align 8, !dbg !5988, !tbaa !2194
  %tp_dealloc727 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %471, i32 0, i32 4, !dbg !5989
  %472 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc727, align 8, !dbg !5989, !tbaa !2196
  %473 = load %struct._object*, %struct._object** %_py_decref_tmp719, align 8, !dbg !5990, !tbaa !1876
  call void %472(%struct._object* %473), !dbg !5991
  br label %if.end.728

if.end.728:                                       ; preds = %if.else.725, %if.then.724
  %474 = bitcast %struct._object** %_py_decref_tmp719 to i8*, !dbg !5992
  call void @llvm.lifetime.end(i64 8, i8* %474) #2, !dbg !5992
  br label %do.cond.729, !dbg !5994

do.cond.729:                                      ; preds = %if.end.728
  br label %do.end.730, !dbg !5995

do.end.730:                                       ; preds = %do.cond.729
  br label %if.end.731, !dbg !5997

if.end.731:                                       ; preds = %do.end.730, %do.body.712
  %475 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5999
  call void @llvm.lifetime.end(i64 8, i8* %475) #2, !dbg !5999
  br label %do.cond.732, !dbg !6002

do.cond.732:                                      ; preds = %if.end.731
  br label %do.end.733, !dbg !6003

do.end.733:                                       ; preds = %do.cond.732
  br label %if.end.734, !dbg !6005

if.end.734:                                       ; preds = %do.end.733, %if.end.673
  br label %do.body.735, !dbg !6006

do.body.735:                                      ; preds = %if.end.734
  %476 = bitcast %struct._object** %_py_decref_tmp737 to i8*, !dbg !6007
  call void @llvm.lifetime.start(i64 8, i8* %476) #2, !dbg !6007
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp737, metadata !1712, metadata !1880), !dbg !6009
  %477 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !6010, !tbaa !1876
  store %struct._object* %477, %struct._object** %_py_decref_tmp737, align 8, !dbg !6009, !tbaa !1876
  %478 = load %struct._object*, %struct._object** %_py_decref_tmp737, align 8, !dbg !6011, !tbaa !1876
  %ob_refcnt738 = getelementptr inbounds %struct._object, %struct._object* %478, i32 0, i32 0, !dbg !6013
  %479 = load i64, i64* %ob_refcnt738, align 8, !dbg !6014, !tbaa !1927
  %dec739 = add i64 %479, -1, !dbg !6014
  store i64 %dec739, i64* %ob_refcnt738, align 8, !dbg !6014, !tbaa !1927
  %cmp740 = icmp ne i64 %dec739, 0, !dbg !6015
  br i1 %cmp740, label %if.then.742, label %if.else.743, !dbg !6016

if.then.742:                                      ; preds = %do.body.735
  br label %if.end.746, !dbg !6017

if.else.743:                                      ; preds = %do.body.735
  %480 = load %struct._object*, %struct._object** %_py_decref_tmp737, align 8, !dbg !6019, !tbaa !1876
  %ob_type744 = getelementptr inbounds %struct._object, %struct._object* %480, i32 0, i32 1, !dbg !6021
  %481 = load %struct._typeobject*, %struct._typeobject** %ob_type744, align 8, !dbg !6021, !tbaa !2194
  %tp_dealloc745 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %481, i32 0, i32 4, !dbg !6022
  %482 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc745, align 8, !dbg !6022, !tbaa !2196
  %483 = load %struct._object*, %struct._object** %_py_decref_tmp737, align 8, !dbg !6023, !tbaa !1876
  call void %482(%struct._object* %483), !dbg !6024
  br label %if.end.746

if.end.746:                                       ; preds = %if.else.743, %if.then.742
  %484 = bitcast %struct._object** %_py_decref_tmp737 to i8*, !dbg !6025
  call void @llvm.lifetime.end(i64 8, i8* %484) #2, !dbg !6025
  br label %do.cond.747, !dbg !6026

do.cond.747:                                      ; preds = %if.end.746
  br label %do.end.748, !dbg !6027

do.end.748:                                       ; preds = %do.cond.747
  %485 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6029, !tbaa !1876
  %486 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6030, !tbaa !1876
  %buffer749 = getelementptr inbounds %struct.textio, %struct.textio* %486, i32 0, i32 4, !dbg !6031
  store %struct._object* %485, %struct._object** %buffer749, align 8, !dbg !6032, !tbaa !4115
  %487 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6033, !tbaa !1876
  %ob_refcnt750 = getelementptr inbounds %struct._object, %struct._object* %487, i32 0, i32 0, !dbg !6034
  %488 = load i64, i64* %ob_refcnt750, align 8, !dbg !6035, !tbaa !1927
  %inc = add i64 %488, 1, !dbg !6035
  store i64 %inc, i64* %ob_refcnt750, align 8, !dbg !6035, !tbaa !1927
  %489 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6036, !tbaa !1876
  %ob_type751 = getelementptr inbounds %struct._object, %struct._object* %489, i32 0, i32 1, !dbg !6037
  %490 = load %struct._typeobject*, %struct._typeobject** %ob_type751, align 8, !dbg !6037, !tbaa !2194
  %cmp752 = icmp eq %struct._typeobject* %490, @PyBufferedReader_Type, !dbg !6038
  br i1 %cmp752, label %if.then.762, label %lor.lhs.false.754, !dbg !6039

lor.lhs.false.754:                                ; preds = %do.end.748
  %491 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6040, !tbaa !1876
  %ob_type755 = getelementptr inbounds %struct._object, %struct._object* %491, i32 0, i32 1, !dbg !6041
  %492 = load %struct._typeobject*, %struct._typeobject** %ob_type755, align 8, !dbg !6041, !tbaa !2194
  %cmp756 = icmp eq %struct._typeobject* %492, @PyBufferedWriter_Type, !dbg !6042
  br i1 %cmp756, label %if.then.762, label %lor.lhs.false.758, !dbg !6043

lor.lhs.false.758:                                ; preds = %lor.lhs.false.754
  %493 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6044, !tbaa !1876
  %ob_type759 = getelementptr inbounds %struct._object, %struct._object* %493, i32 0, i32 1, !dbg !6045
  %494 = load %struct._typeobject*, %struct._typeobject** %ob_type759, align 8, !dbg !6045, !tbaa !2194
  %cmp760 = icmp eq %struct._typeobject* %494, @PyBufferedRandom_Type, !dbg !6046
  br i1 %cmp760, label %if.then.762, label %if.end.795, !dbg !6047

if.then.762:                                      ; preds = %lor.lhs.false.758, %lor.lhs.false.754, %do.end.748
  %495 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6048, !tbaa !1876
  %call763 = call %struct._object* @_PyObject_GetAttrId(%struct._object* %495, %struct._Py_Identifier* @PyId_raw), !dbg !6049
  store %struct._object* %call763, %struct._object** %raw, align 8, !dbg !6050, !tbaa !1876
  %496 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6051, !tbaa !1876
  %cmp764 = icmp eq %struct._object* %496, null, !dbg !6052
  br i1 %cmp764, label %if.then.766, label %if.else.772, !dbg !6053

if.then.766:                                      ; preds = %if.then.762
  %497 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !6054, !tbaa !1876
  %call767 = call i32 @PyErr_ExceptionMatches(%struct._object* %497), !dbg !6057
  %tobool768 = icmp ne i32 %call767, 0, !dbg !6057
  br i1 %tobool768, label %if.then.769, label %if.else.770, !dbg !6058

if.then.769:                                      ; preds = %if.then.766
  call void @PyErr_Clear(), !dbg !6059
  br label %if.end.771, !dbg !6059

if.else.770:                                      ; preds = %if.then.766
  br label %error, !dbg !6060

if.end.771:                                       ; preds = %if.then.769
  br label %if.end.794, !dbg !6061

if.else.772:                                      ; preds = %if.then.762
  %498 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6062, !tbaa !1876
  %ob_type773 = getelementptr inbounds %struct._object, %struct._object* %498, i32 0, i32 1, !dbg !6063
  %499 = load %struct._typeobject*, %struct._typeobject** %ob_type773, align 8, !dbg !6063, !tbaa !2194
  %cmp774 = icmp eq %struct._typeobject* %499, @PyFileIO_Type, !dbg !6064
  br i1 %cmp774, label %if.then.776, label %if.else.778, !dbg !6065

if.then.776:                                      ; preds = %if.else.772
  %500 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6066, !tbaa !1876
  %501 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6067, !tbaa !1876
  %raw777 = getelementptr inbounds %struct.textio, %struct.textio* %501, i32 0, i32 28, !dbg !6068
  store %struct._object* %500, %struct._object** %raw777, align 8, !dbg !6069, !tbaa !4375
  br label %if.end.793, !dbg !6067

if.else.778:                                      ; preds = %if.else.772
  br label %do.body.779, !dbg !6070

do.body.779:                                      ; preds = %if.else.778
  %502 = bitcast %struct._object** %_py_decref_tmp781 to i8*, !dbg !6071
  call void @llvm.lifetime.start(i64 8, i8* %502) #2, !dbg !6071
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp781, metadata !1714, metadata !1880), !dbg !6073
  %503 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6074, !tbaa !1876
  store %struct._object* %503, %struct._object** %_py_decref_tmp781, align 8, !dbg !6073, !tbaa !1876
  %504 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8, !dbg !6075, !tbaa !1876
  %ob_refcnt782 = getelementptr inbounds %struct._object, %struct._object* %504, i32 0, i32 0, !dbg !6077
  %505 = load i64, i64* %ob_refcnt782, align 8, !dbg !6078, !tbaa !1927
  %dec783 = add i64 %505, -1, !dbg !6078
  store i64 %dec783, i64* %ob_refcnt782, align 8, !dbg !6078, !tbaa !1927
  %cmp784 = icmp ne i64 %dec783, 0, !dbg !6079
  br i1 %cmp784, label %if.then.786, label %if.else.787, !dbg !6080

if.then.786:                                      ; preds = %do.body.779
  br label %if.end.790, !dbg !6081

if.else.787:                                      ; preds = %do.body.779
  %506 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8, !dbg !6083, !tbaa !1876
  %ob_type788 = getelementptr inbounds %struct._object, %struct._object* %506, i32 0, i32 1, !dbg !6085
  %507 = load %struct._typeobject*, %struct._typeobject** %ob_type788, align 8, !dbg !6085, !tbaa !2194
  %tp_dealloc789 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %507, i32 0, i32 4, !dbg !6086
  %508 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc789, align 8, !dbg !6086, !tbaa !2196
  %509 = load %struct._object*, %struct._object** %_py_decref_tmp781, align 8, !dbg !6087, !tbaa !1876
  call void %508(%struct._object* %509), !dbg !6088
  br label %if.end.790

if.end.790:                                       ; preds = %if.else.787, %if.then.786
  %510 = bitcast %struct._object** %_py_decref_tmp781 to i8*, !dbg !6089
  call void @llvm.lifetime.end(i64 8, i8* %510) #2, !dbg !6089
  br label %do.cond.791, !dbg !6091

do.cond.791:                                      ; preds = %if.end.790
  br label %do.end.792, !dbg !6092

do.end.792:                                       ; preds = %do.cond.791
  br label %if.end.793

if.end.793:                                       ; preds = %do.end.792, %if.then.776
  br label %if.end.794

if.end.794:                                       ; preds = %if.end.793, %if.end.771
  br label %if.end.795, !dbg !6094

if.end.795:                                       ; preds = %if.end.794, %lor.lhs.false.758
  %511 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6095, !tbaa !1876
  %call796 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %511, %struct._Py_Identifier* @PyId_seekable, i8* null), !dbg !6096
  store %struct._object* %call796, %struct._object** %res, align 8, !dbg !6097, !tbaa !1876
  %512 = load %struct._object*, %struct._object** %res, align 8, !dbg !6098, !tbaa !1876
  %cmp797 = icmp eq %struct._object* %512, null, !dbg !6100
  br i1 %cmp797, label %if.then.799, label %if.end.800, !dbg !6101

if.then.799:                                      ; preds = %if.end.795
  br label %error, !dbg !6102

if.end.800:                                       ; preds = %if.end.795
  %513 = load %struct._object*, %struct._object** %res, align 8, !dbg !6103, !tbaa !1876
  %call801 = call i32 @PyObject_IsTrue(%struct._object* %513), !dbg !6104
  store i32 %call801, i32* %r, align 4, !dbg !6105, !tbaa !1883
  br label %do.body.802, !dbg !6106

do.body.802:                                      ; preds = %if.end.800
  %514 = bitcast %struct._object** %_py_decref_tmp804 to i8*, !dbg !6107
  call void @llvm.lifetime.start(i64 8, i8* %514) #2, !dbg !6107
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp804, metadata !1720, metadata !1880), !dbg !6109
  %515 = load %struct._object*, %struct._object** %res, align 8, !dbg !6110, !tbaa !1876
  store %struct._object* %515, %struct._object** %_py_decref_tmp804, align 8, !dbg !6109, !tbaa !1876
  %516 = load %struct._object*, %struct._object** %_py_decref_tmp804, align 8, !dbg !6111, !tbaa !1876
  %ob_refcnt805 = getelementptr inbounds %struct._object, %struct._object* %516, i32 0, i32 0, !dbg !6113
  %517 = load i64, i64* %ob_refcnt805, align 8, !dbg !6114, !tbaa !1927
  %dec806 = add i64 %517, -1, !dbg !6114
  store i64 %dec806, i64* %ob_refcnt805, align 8, !dbg !6114, !tbaa !1927
  %cmp807 = icmp ne i64 %dec806, 0, !dbg !6115
  br i1 %cmp807, label %if.then.809, label %if.else.810, !dbg !6116

if.then.809:                                      ; preds = %do.body.802
  br label %if.end.813, !dbg !6117

if.else.810:                                      ; preds = %do.body.802
  %518 = load %struct._object*, %struct._object** %_py_decref_tmp804, align 8, !dbg !6119, !tbaa !1876
  %ob_type811 = getelementptr inbounds %struct._object, %struct._object* %518, i32 0, i32 1, !dbg !6121
  %519 = load %struct._typeobject*, %struct._typeobject** %ob_type811, align 8, !dbg !6121, !tbaa !2194
  %tp_dealloc812 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %519, i32 0, i32 4, !dbg !6122
  %520 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc812, align 8, !dbg !6122, !tbaa !2196
  %521 = load %struct._object*, %struct._object** %_py_decref_tmp804, align 8, !dbg !6123, !tbaa !1876
  call void %520(%struct._object* %521), !dbg !6124
  br label %if.end.813

if.end.813:                                       ; preds = %if.else.810, %if.then.809
  %522 = bitcast %struct._object** %_py_decref_tmp804 to i8*, !dbg !6125
  call void @llvm.lifetime.end(i64 8, i8* %522) #2, !dbg !6125
  br label %do.cond.814, !dbg !6126

do.cond.814:                                      ; preds = %if.end.813
  br label %do.end.815, !dbg !6127

do.end.815:                                       ; preds = %do.cond.814
  %523 = load i32, i32* %r, align 4, !dbg !6129, !tbaa !1883
  %cmp816 = icmp slt i32 %523, 0, !dbg !6131
  br i1 %cmp816, label %if.then.818, label %if.end.819, !dbg !6132

if.then.818:                                      ; preds = %do.end.815
  br label %error, !dbg !6133

if.end.819:                                       ; preds = %do.end.815
  %524 = load i32, i32* %r, align 4, !dbg !6134, !tbaa !1883
  %conv820 = trunc i32 %524 to i8, !dbg !6134
  %525 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6135, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %525, i32 0, i32 18, !dbg !6136
  store i8 %conv820, i8* %telling, align 1, !dbg !6137, !tbaa !4512
  %526 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6138, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %526, i32 0, i32 16, !dbg !6139
  store i8 %conv820, i8* %seekable, align 1, !dbg !6140, !tbaa !4663
  %527 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6141, !tbaa !1876
  %call821 = call i32 @_PyObject_HasAttrId(%struct._object* %527, %struct._Py_Identifier* @PyId_read1), !dbg !6142
  %conv822 = trunc i32 %call821 to i8, !dbg !6142
  %528 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6143, !tbaa !1876
  %has_read1 = getelementptr inbounds %struct.textio, %struct.textio* %528, i32 0, i32 17, !dbg !6144
  store i8 %conv822, i8* %has_read1, align 1, !dbg !6145, !tbaa !6146
  %529 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6147, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %529, i32 0, i32 21, !dbg !6148
  store i8 0, i8* %encoding_start_of_stream, align 1, !dbg !6149, !tbaa !6150
  %530 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6151, !tbaa !1876
  %seekable823 = getelementptr inbounds %struct.textio, %struct.textio* %530, i32 0, i32 16, !dbg !6152
  %531 = load i8, i8* %seekable823, align 1, !dbg !6152, !tbaa !4663
  %conv824 = sext i8 %531 to i32, !dbg !6151
  %tobool825 = icmp ne i32 %conv824, 0, !dbg !6151
  br i1 %tobool825, label %land.lhs.true.826, label %if.end.887, !dbg !6153

land.lhs.true.826:                                ; preds = %if.end.819
  %532 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6154, !tbaa !1876
  %encoder827 = getelementptr inbounds %struct.textio, %struct.textio* %532, i32 0, i32 6, !dbg !6156
  %533 = load %struct._object*, %struct._object** %encoder827, align 8, !dbg !6156, !tbaa !4172
  %tobool828 = icmp ne %struct._object* %533, null, !dbg !6157
  br i1 %tobool828, label %if.then.829, label %if.end.887, !dbg !6158

if.then.829:                                      ; preds = %land.lhs.true.826
  %534 = bitcast %struct._object** %cookieObj to i8*, !dbg !6159
  call void @llvm.lifetime.start(i64 8, i8* %534) #2, !dbg !6159
  call void @llvm.dbg.declare(metadata %struct._object** %cookieObj, metadata !1722, metadata !1880), !dbg !6160
  %535 = bitcast i32* %cmp832 to i8*, !dbg !6161
  call void @llvm.lifetime.start(i64 4, i8* %535) #2, !dbg !6161
  call void @llvm.dbg.declare(metadata i32* %cmp832, metadata !1725, metadata !1880), !dbg !6162
  %536 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6163, !tbaa !1876
  %encoding_start_of_stream833 = getelementptr inbounds %struct.textio, %struct.textio* %536, i32 0, i32 21, !dbg !6164
  store i8 1, i8* %encoding_start_of_stream833, align 1, !dbg !6165, !tbaa !6150
  %537 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6166, !tbaa !1876
  %538 = load %struct._object*, %struct._object** @_PyIO_str_tell, align 8, !dbg !6167, !tbaa !1876
  %call834 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %537, %struct._object* %538, i8* null), !dbg !6168
  store %struct._object* %call834, %struct._object** %cookieObj, align 8, !dbg !6169, !tbaa !1876
  %539 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !6170, !tbaa !1876
  %cmp835 = icmp eq %struct._object* %539, null, !dbg !6172
  br i1 %cmp835, label %if.then.837, label %if.end.838, !dbg !6173

if.then.837:                                      ; preds = %if.then.829
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.883, !dbg !6174

if.end.838:                                       ; preds = %if.then.829
  %540 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !6175, !tbaa !1876
  %541 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !6176, !tbaa !1876
  %call839 = call i32 @PyObject_RichCompareBool(%struct._object* %540, %struct._object* %541, i32 2), !dbg !6177
  store i32 %call839, i32* %cmp832, align 4, !dbg !6178, !tbaa !1883
  br label %do.body.840, !dbg !6179

do.body.840:                                      ; preds = %if.end.838
  %542 = bitcast %struct._object** %_py_decref_tmp842 to i8*, !dbg !6180
  call void @llvm.lifetime.start(i64 8, i8* %542) #2, !dbg !6180
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp842, metadata !1726, metadata !1880), !dbg !6182
  %543 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !6183, !tbaa !1876
  store %struct._object* %543, %struct._object** %_py_decref_tmp842, align 8, !dbg !6182, !tbaa !1876
  %544 = load %struct._object*, %struct._object** %_py_decref_tmp842, align 8, !dbg !6184, !tbaa !1876
  %ob_refcnt843 = getelementptr inbounds %struct._object, %struct._object* %544, i32 0, i32 0, !dbg !6186
  %545 = load i64, i64* %ob_refcnt843, align 8, !dbg !6187, !tbaa !1927
  %dec844 = add i64 %545, -1, !dbg !6187
  store i64 %dec844, i64* %ob_refcnt843, align 8, !dbg !6187, !tbaa !1927
  %cmp845 = icmp ne i64 %dec844, 0, !dbg !6188
  br i1 %cmp845, label %if.then.847, label %if.else.848, !dbg !6189

if.then.847:                                      ; preds = %do.body.840
  br label %if.end.851, !dbg !6190

if.else.848:                                      ; preds = %do.body.840
  %546 = load %struct._object*, %struct._object** %_py_decref_tmp842, align 8, !dbg !6192, !tbaa !1876
  %ob_type849 = getelementptr inbounds %struct._object, %struct._object* %546, i32 0, i32 1, !dbg !6194
  %547 = load %struct._typeobject*, %struct._typeobject** %ob_type849, align 8, !dbg !6194, !tbaa !2194
  %tp_dealloc850 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %547, i32 0, i32 4, !dbg !6195
  %548 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc850, align 8, !dbg !6195, !tbaa !2196
  %549 = load %struct._object*, %struct._object** %_py_decref_tmp842, align 8, !dbg !6196, !tbaa !1876
  call void %548(%struct._object* %549), !dbg !6197
  br label %if.end.851

if.end.851:                                       ; preds = %if.else.848, %if.then.847
  %550 = bitcast %struct._object** %_py_decref_tmp842 to i8*, !dbg !6198
  call void @llvm.lifetime.end(i64 8, i8* %550) #2, !dbg !6198
  br label %do.cond.852, !dbg !6200

do.cond.852:                                      ; preds = %if.end.851
  br label %do.end.853, !dbg !6201

do.end.853:                                       ; preds = %do.cond.852
  %551 = load i32, i32* %cmp832, align 4, !dbg !6203, !tbaa !1883
  %cmp854 = icmp slt i32 %551, 0, !dbg !6205
  br i1 %cmp854, label %if.then.856, label %if.end.857, !dbg !6206

if.then.856:                                      ; preds = %do.end.853
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.883, !dbg !6207

if.end.857:                                       ; preds = %do.end.853
  %552 = load i32, i32* %cmp832, align 4, !dbg !6209, !tbaa !1883
  %cmp858 = icmp eq i32 %552, 0, !dbg !6210
  br i1 %cmp858, label %if.then.860, label %if.end.882, !dbg !6211

if.then.860:                                      ; preds = %if.end.857
  %553 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6212, !tbaa !1876
  %encoding_start_of_stream861 = getelementptr inbounds %struct.textio, %struct.textio* %553, i32 0, i32 21, !dbg !6213
  store i8 0, i8* %encoding_start_of_stream861, align 1, !dbg !6214, !tbaa !6150
  %554 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6215, !tbaa !1876
  %encoder862 = getelementptr inbounds %struct.textio, %struct.textio* %554, i32 0, i32 6, !dbg !6216
  %555 = load %struct._object*, %struct._object** %encoder862, align 8, !dbg !6216, !tbaa !4172
  %556 = load %struct._object*, %struct._object** @_PyIO_str_setstate, align 8, !dbg !6217, !tbaa !1876
  %557 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !6218, !tbaa !1876
  %call863 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %555, %struct._object* %556, %struct._object* %557, i8* null), !dbg !6219
  store %struct._object* %call863, %struct._object** %res, align 8, !dbg !6220, !tbaa !1876
  %558 = load %struct._object*, %struct._object** %res, align 8, !dbg !6221, !tbaa !1876
  %cmp864 = icmp eq %struct._object* %558, null, !dbg !6223
  br i1 %cmp864, label %if.then.866, label %if.end.867, !dbg !6224

if.then.866:                                      ; preds = %if.then.860
  store i32 42, i32* %cleanup.dest.slot
  br label %cleanup.883, !dbg !6225

if.end.867:                                       ; preds = %if.then.860
  br label %do.body.868, !dbg !6226

do.body.868:                                      ; preds = %if.end.867
  %559 = bitcast %struct._object** %_py_decref_tmp870 to i8*, !dbg !6227
  call void @llvm.lifetime.start(i64 8, i8* %559) #2, !dbg !6227
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp870, metadata !1728, metadata !1880), !dbg !6229
  %560 = load %struct._object*, %struct._object** %res, align 8, !dbg !6230, !tbaa !1876
  store %struct._object* %560, %struct._object** %_py_decref_tmp870, align 8, !dbg !6229, !tbaa !1876
  %561 = load %struct._object*, %struct._object** %_py_decref_tmp870, align 8, !dbg !6231, !tbaa !1876
  %ob_refcnt871 = getelementptr inbounds %struct._object, %struct._object* %561, i32 0, i32 0, !dbg !6233
  %562 = load i64, i64* %ob_refcnt871, align 8, !dbg !6234, !tbaa !1927
  %dec872 = add i64 %562, -1, !dbg !6234
  store i64 %dec872, i64* %ob_refcnt871, align 8, !dbg !6234, !tbaa !1927
  %cmp873 = icmp ne i64 %dec872, 0, !dbg !6235
  br i1 %cmp873, label %if.then.875, label %if.else.876, !dbg !6236

if.then.875:                                      ; preds = %do.body.868
  br label %if.end.879, !dbg !6237

if.else.876:                                      ; preds = %do.body.868
  %563 = load %struct._object*, %struct._object** %_py_decref_tmp870, align 8, !dbg !6239, !tbaa !1876
  %ob_type877 = getelementptr inbounds %struct._object, %struct._object* %563, i32 0, i32 1, !dbg !6241
  %564 = load %struct._typeobject*, %struct._typeobject** %ob_type877, align 8, !dbg !6241, !tbaa !2194
  %tp_dealloc878 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %564, i32 0, i32 4, !dbg !6242
  %565 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc878, align 8, !dbg !6242, !tbaa !2196
  %566 = load %struct._object*, %struct._object** %_py_decref_tmp870, align 8, !dbg !6243, !tbaa !1876
  call void %565(%struct._object* %566), !dbg !6244
  br label %if.end.879

if.end.879:                                       ; preds = %if.else.876, %if.then.875
  %567 = bitcast %struct._object** %_py_decref_tmp870 to i8*, !dbg !6245
  call void @llvm.lifetime.end(i64 8, i8* %567) #2, !dbg !6245
  br label %do.cond.880, !dbg !6247

do.cond.880:                                      ; preds = %if.end.879
  br label %do.end.881, !dbg !6248

do.end.881:                                       ; preds = %do.cond.880
  br label %if.end.882, !dbg !6250

if.end.882:                                       ; preds = %do.end.881, %if.end.857
  store i32 0, i32* %cleanup.dest.slot, !dbg !6251
  br label %cleanup.883, !dbg !6251

cleanup.883:                                      ; preds = %if.end.882, %if.then.866, %if.then.856, %if.then.837
  %568 = bitcast i32* %cmp832 to i8*, !dbg !6252
  call void @llvm.lifetime.end(i64 4, i8* %568) #2, !dbg !6252
  %569 = bitcast %struct._object** %cookieObj to i8*, !dbg !6252
  call void @llvm.lifetime.end(i64 8, i8* %569) #2, !dbg !6252
  %cleanup.dest.885 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.25

NodeBlock.25:                                     ; preds = %cleanup.883
  %Pivot.26 = icmp slt i32 %cleanup.dest.885, 42
  br i1 %Pivot.26, label %LeafBlock.21, label %LeafBlock.23

LeafBlock.23:                                     ; preds = %NodeBlock.25
  %SwitchLeaf24 = icmp eq i32 %cleanup.dest.885, 42
  br i1 %SwitchLeaf24, label %error, label %NewDefault.20

LeafBlock.21:                                     ; preds = %NodeBlock.25
  %SwitchLeaf22 = icmp eq i32 %cleanup.dest.885, 0
  br i1 %SwitchLeaf22, label %cleanup.cont.886, label %NewDefault.20

cleanup.cont.886:                                 ; preds = %LeafBlock.21
  br label %if.end.887, !dbg !6253

if.end.887:                                       ; preds = %cleanup.cont.886, %land.lhs.true.826, %if.end.819
  %570 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6254, !tbaa !1876
  %ok888 = getelementptr inbounds %struct.textio, %struct.textio* %570, i32 0, i32 1, !dbg !6255
  store i32 1, i32* %ok888, align 4, !dbg !6256, !tbaa !3895
  store i32 0, i32* %retval, !dbg !6257
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !6257

error:                                            ; preds = %LeafBlock.23, %LeafBlock.16, %LeafBlock.9, %LeafBlock.4, %if.then.818, %if.then.799, %if.else.770, %if.else.691, %if.then.682, %if.then.672, %if.then.653, %if.then.605, %if.then.595, %if.then.576, %if.then.521, %if.then.497, %if.then.474, %do.end.463, %if.then.432, %if.then.421
  br label %do.body.889, !dbg !6258

do.body.889:                                      ; preds = %error
  %571 = bitcast %struct._object** %_py_xdecref_tmp891 to i8*, !dbg !6259
  call void @llvm.lifetime.start(i64 8, i8* %571) #2, !dbg !6259
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp891, metadata !1732, metadata !1880), !dbg !6261
  %572 = load %struct._object*, %struct._object** %codec_info, align 8, !dbg !6262, !tbaa !1876
  store %struct._object* %572, %struct._object** %_py_xdecref_tmp891, align 8, !dbg !6261, !tbaa !1876
  %573 = load %struct._object*, %struct._object** %_py_xdecref_tmp891, align 8, !dbg !6263, !tbaa !1876
  %cmp892 = icmp ne %struct._object* %573, null, !dbg !6264
  br i1 %cmp892, label %if.then.894, label %if.end.909, !dbg !6265

if.then.894:                                      ; preds = %do.body.889
  br label %do.body.895, !dbg !6266

do.body.895:                                      ; preds = %if.then.894
  %574 = bitcast %struct._object** %_py_decref_tmp897 to i8*, !dbg !6268
  call void @llvm.lifetime.start(i64 8, i8* %574) #2, !dbg !6268
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp897, metadata !1734, metadata !1880), !dbg !6270
  %575 = load %struct._object*, %struct._object** %_py_xdecref_tmp891, align 8, !dbg !6271, !tbaa !1876
  store %struct._object* %575, %struct._object** %_py_decref_tmp897, align 8, !dbg !6270, !tbaa !1876
  %576 = load %struct._object*, %struct._object** %_py_decref_tmp897, align 8, !dbg !6272, !tbaa !1876
  %ob_refcnt898 = getelementptr inbounds %struct._object, %struct._object* %576, i32 0, i32 0, !dbg !6274
  %577 = load i64, i64* %ob_refcnt898, align 8, !dbg !6275, !tbaa !1927
  %dec899 = add i64 %577, -1, !dbg !6275
  store i64 %dec899, i64* %ob_refcnt898, align 8, !dbg !6275, !tbaa !1927
  %cmp900 = icmp ne i64 %dec899, 0, !dbg !6276
  br i1 %cmp900, label %if.then.902, label %if.else.903, !dbg !6277

if.then.902:                                      ; preds = %do.body.895
  br label %if.end.906, !dbg !6278

if.else.903:                                      ; preds = %do.body.895
  %578 = load %struct._object*, %struct._object** %_py_decref_tmp897, align 8, !dbg !6280, !tbaa !1876
  %ob_type904 = getelementptr inbounds %struct._object, %struct._object* %578, i32 0, i32 1, !dbg !6282
  %579 = load %struct._typeobject*, %struct._typeobject** %ob_type904, align 8, !dbg !6282, !tbaa !2194
  %tp_dealloc905 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %579, i32 0, i32 4, !dbg !6283
  %580 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc905, align 8, !dbg !6283, !tbaa !2196
  %581 = load %struct._object*, %struct._object** %_py_decref_tmp897, align 8, !dbg !6284, !tbaa !1876
  call void %580(%struct._object* %581), !dbg !6285
  br label %if.end.906

if.end.906:                                       ; preds = %if.else.903, %if.then.902
  %582 = bitcast %struct._object** %_py_decref_tmp897 to i8*, !dbg !6286
  call void @llvm.lifetime.end(i64 8, i8* %582) #2, !dbg !6286
  br label %do.cond.907, !dbg !6288

do.cond.907:                                      ; preds = %if.end.906
  br label %do.end.908, !dbg !6289

do.end.908:                                       ; preds = %do.cond.907
  br label %if.end.909, !dbg !6291

if.end.909:                                       ; preds = %do.end.908, %do.body.889
  %583 = bitcast %struct._object** %_py_xdecref_tmp891 to i8*, !dbg !6293
  call void @llvm.lifetime.end(i64 8, i8* %583) #2, !dbg !6293
  br label %do.cond.910, !dbg !6294

do.cond.910:                                      ; preds = %if.end.909
  br label %do.end.911, !dbg !6295

do.end.911:                                       ; preds = %do.cond.910
  store i32 -1, i32* %retval, !dbg !6297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.912, !dbg !6297

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.912

NewDefault.6:                                     ; preds = %LeafBlock.9, %LeafBlock.7
  br label %cleanup.912

NewDefault.13:                                    ; preds = %LeafBlock.16, %LeafBlock.14
  br label %cleanup.912

NewDefault.20:                                    ; preds = %LeafBlock.23, %LeafBlock.21
  br label %cleanup.912

cleanup.912:                                      ; preds = %NewDefault.20, %NewDefault.13, %NewDefault.6, %NewDefault.1, %do.end.911, %if.end.887, %if.then.38, %if.then
  %584 = bitcast i32* %r to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 4, i8* %584) #2, !dbg !6298
  %585 = bitcast %struct._object** %res to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %585) #2, !dbg !6298
  %586 = bitcast %struct._PyIO_State** %state to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %586) #2, !dbg !6298
  %587 = bitcast i32* %write_through to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 4, i8* %587) #2, !dbg !6298
  %588 = bitcast i32* %line_buffering to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 4, i8* %588) #2, !dbg !6298
  %589 = bitcast i8** %newline to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %589) #2, !dbg !6298
  %590 = bitcast i8** %errors to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %590) #2, !dbg !6298
  %591 = bitcast i8** %encoding to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %591) #2, !dbg !6298
  %592 = bitcast %struct._object** %codec_info to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %592) #2, !dbg !6298
  %593 = bitcast %struct._object** %raw to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %593) #2, !dbg !6298
  %594 = bitcast %struct._object** %buffer to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 8, i8* %594) #2, !dbg !6298
  %595 = bitcast [7 x i8*]* %kwlist to i8*, !dbg !6298
  call void @llvm.lifetime.end(i64 56, i8* %595) #2, !dbg !6298
  %596 = load i32, i32* %retval, !dbg !6298
  ret i32 %596, !dbg !6298
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_detach(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !556, metadata !1880), !dbg !6299
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0)), !dbg !6300
  ret %struct._object* %call, !dbg !6301
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_read(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !573, metadata !1880), !dbg !6302
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !574, metadata !1880), !dbg !6303
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0)), !dbg !6304
  ret %struct._object* %call, !dbg !6305
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_readline(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !577, metadata !1880), !dbg !6306
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !578, metadata !1880), !dbg !6307
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0)), !dbg !6308
  ret %struct._object* %call, !dbg !6309
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_write(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !581, metadata !1880), !dbg !6310
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !582, metadata !1880), !dbg !6311
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0)), !dbg !6312
  ret %struct._object* %call, !dbg !6313
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @_unsupported(i8* %message) #0 {
entry:
  %message.addr = alloca i8*, align 8
  %state = alloca %struct._PyIO_State*, align 8
  store i8* %message, i8** %message.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !561, metadata !1880), !dbg !6314
  %0 = bitcast %struct._PyIO_State** %state to i8*, !dbg !6315
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6315
  call void @llvm.dbg.declare(metadata %struct._PyIO_State** %state, metadata !562, metadata !1880), !dbg !6316
  %call = call %struct._PyIO_State* @_PyIO_get_module_state(), !dbg !6317
  store %struct._PyIO_State* %call, %struct._PyIO_State** %state, align 8, !dbg !6316, !tbaa !1876
  %1 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !6318, !tbaa !1876
  %cmp = icmp ne %struct._PyIO_State* %1, null, !dbg !6320
  br i1 %cmp, label %if.then, label %if.end, !dbg !6321

if.then:                                          ; preds = %entry
  %2 = load %struct._PyIO_State*, %struct._PyIO_State** %state, align 8, !dbg !6322, !tbaa !1876
  %unsupported_operation = getelementptr inbounds %struct._PyIO_State, %struct._PyIO_State* %2, i32 0, i32 2, !dbg !6323
  %3 = load %struct._object*, %struct._object** %unsupported_operation, align 8, !dbg !6323, !tbaa !5216
  %4 = load i8*, i8** %message.addr, align 8, !dbg !6324, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %3, i8* %4), !dbg !6325
  br label %if.end, !dbg !6325

if.end:                                           ; preds = %if.then, %entry
  %5 = bitcast %struct._PyIO_State** %state to i8*, !dbg !6326
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6326
  ret %struct._object* null, !dbg !6327
}

declare %struct._PyIO_State* @_PyIO_get_module_state() #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_encoding_get(%struct._object* %self, i8* %context) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !585, metadata !1880), !dbg !6328
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !586, metadata !1880), !dbg !6329
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6330, !tbaa !1927
  %inc = add i64 %0, 1, !dbg !6330
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6330, !tbaa !1927
  ret %struct._object* @_Py_NoneStruct, !dbg !6331
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_newlines_get(%struct._object* %self, i8* %context) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !589, metadata !1880), !dbg !6332
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !590, metadata !1880), !dbg !6333
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6334, !tbaa !1927
  %inc = add i64 %0, 1, !dbg !6334
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6334, !tbaa !1927
  ret %struct._object* @_Py_NoneStruct, !dbg !6335
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiobase_errors_get(%struct._object* %self, i8* %context) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !593, metadata !1880), !dbg !6336
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !594, metadata !1880), !dbg !6337
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6338, !tbaa !1927
  %inc = add i64 %0, 1, !dbg !6338
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6338, !tbaa !1927
  ret %struct._object* @_Py_NoneStruct, !dbg !6339
}

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare i32 @_PyUnicode_Ready(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_decode(%struct.nldecoder_object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %kwlist = alloca [3 x i8*], align 16
  %input = alloca %struct._object*, align 8
  %final = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !627, metadata !1880), !dbg !6340
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !628, metadata !1880), !dbg !6341
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !629, metadata !1880), !dbg !6342
  %0 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !6343
  call void @llvm.lifetime.start(i64 24, i8* %0) #2, !dbg !6343
  call void @llvm.dbg.declare(metadata [3 x i8*]* %kwlist, metadata !630, metadata !1880), !dbg !6344
  %1 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !6344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @incrementalnewlinedecoder_decode.kwlist to i8*), i64 24, i32 16, i1 false), !dbg !6344
  %2 = bitcast %struct._object** %input to i8*, !dbg !6345
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6345
  call void @llvm.dbg.declare(metadata %struct._object** %input, metadata !634, metadata !1880), !dbg !6346
  %3 = bitcast i32* %final to i8*, !dbg !6347
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %final, metadata !635, metadata !1880), !dbg !6348
  store i32 0, i32* %final, align 4, !dbg !6348, !tbaa !1883
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6349, !tbaa !1876
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6351, !tbaa !1876
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %kwlist, i32 0, i32 0, !dbg !6352
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i32 0, i32 0), i8** %arraydecay, %struct._object** %input, i32* %final), !dbg !6353
  %tobool = icmp ne i32 %call, 0, !dbg !6353
  br i1 %tobool, label %if.end, label %if.then, !dbg !6354

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6355
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6355

if.end:                                           ; preds = %entry
  %6 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6356, !tbaa !1876
  %7 = bitcast %struct.nldecoder_object* %6 to %struct._object*, !dbg !6357
  %8 = load %struct._object*, %struct._object** %input, align 8, !dbg !6358, !tbaa !1876
  %9 = load i32, i32* %final, align 4, !dbg !6359, !tbaa !1883
  %call1 = call %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %7, %struct._object* %8, i32 %9), !dbg !6360
  store %struct._object* %call1, %struct._object** %retval, !dbg !6361
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6361

cleanup:                                          ; preds = %if.end, %if.then
  %10 = bitcast i32* %final to i8*, !dbg !6362
  call void @llvm.lifetime.end(i64 4, i8* %10) #2, !dbg !6362
  %11 = bitcast %struct._object** %input to i8*, !dbg !6362
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !6362
  %12 = bitcast [3 x i8*]* %kwlist to i8*, !dbg !6362
  call void @llvm.lifetime.end(i64 24, i8* %12) #2, !dbg !6362
  %13 = load %struct._object*, %struct._object** %retval, !dbg !6362
  ret %struct._object* %13, !dbg !6362
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_getstate(%struct.nldecoder_object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct._object*, align 8
  %flag = alloca i64, align 8
  %state = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !640, metadata !1880), !dbg !6363
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !641, metadata !1880), !dbg !6364
  %0 = bitcast %struct._object** %buffer to i8*, !dbg !6365
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6365
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !642, metadata !1880), !dbg !6366
  %1 = bitcast i64* %flag to i8*, !dbg !6367
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6367
  call void @llvm.dbg.declare(metadata i64* %flag, metadata !643, metadata !1880), !dbg !6368
  %2 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6369, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %2, i32 0, i32 1, !dbg !6370
  %3 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6370, !tbaa !1897
  %cmp = icmp ne %struct._object* %3, @_Py_NoneStruct, !dbg !6371
  br i1 %cmp, label %if.then, label %if.else.23, !dbg !6372

if.then:                                          ; preds = %entry
  %4 = bitcast %struct._object** %state to i8*, !dbg !6373
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !6373
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !645, metadata !1880), !dbg !6374
  %5 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6375, !tbaa !1876
  %decoder1 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %5, i32 0, i32 1, !dbg !6376
  %6 = load %struct._object*, %struct._object** %decoder1, align 8, !dbg !6376, !tbaa !1897
  %7 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !6377, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %6, %struct._object* %7, i8* null), !dbg !6378
  store %struct._object* %call, %struct._object** %state, align 8, !dbg !6374, !tbaa !1876
  %8 = load %struct._object*, %struct._object** %state, align 8, !dbg !6379, !tbaa !1876
  %cmp2 = icmp eq %struct._object* %8, null, !dbg !6381
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !6382

if.then.3:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !6383
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6383

if.end:                                           ; preds = %if.then
  %9 = load %struct._object*, %struct._object** %state, align 8, !dbg !6384, !tbaa !1876
  %call4 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), %struct._object** %buffer, i64* %flag), !dbg !6385
  %tobool = icmp ne i32 %call4, 0, !dbg !6385
  br i1 %tobool, label %if.end.9, label %if.then.5, !dbg !6386

if.then.5:                                        ; preds = %if.end
  br label %do.body, !dbg !6387

do.body:                                          ; preds = %if.then.5
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6388
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !6388
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !648, metadata !1880), !dbg !6390
  %11 = load %struct._object*, %struct._object** %state, align 8, !dbg !6391, !tbaa !1876
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !6390, !tbaa !1876
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6392, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !6394
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6395, !tbaa !1927
  %dec = add i64 %13, -1, !dbg !6395
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6395, !tbaa !1927
  %cmp6 = icmp ne i64 %dec, 0, !dbg !6396
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !6397

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !6398

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6400, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6402
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6402, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !6403
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6403, !tbaa !2196
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6404, !tbaa !1876
  call void %16(%struct._object* %17), !dbg !6405
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6406
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !6406
  br label %do.cond, !dbg !6408

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !6409

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6411
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6411

if.end.9:                                         ; preds = %if.end
  %19 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6412, !tbaa !1876
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !6413
  %20 = load i64, i64* %ob_refcnt10, align 8, !dbg !6414, !tbaa !1927
  %inc = add i64 %20, 1, !dbg !6414
  store i64 %inc, i64* %ob_refcnt10, align 8, !dbg !6414, !tbaa !1927
  br label %do.body.11, !dbg !6415

do.body.11:                                       ; preds = %if.end.9
  %21 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !6416
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !6416
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !652, metadata !1880), !dbg !6418
  %22 = load %struct._object*, %struct._object** %state, align 8, !dbg !6419, !tbaa !1876
  store %struct._object* %22, %struct._object** %_py_decref_tmp12, align 8, !dbg !6418, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6420, !tbaa !1876
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !6422
  %24 = load i64, i64* %ob_refcnt13, align 8, !dbg !6423, !tbaa !1927
  %dec14 = add i64 %24, -1, !dbg !6423
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !6423, !tbaa !1927
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !6424
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !6425

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !6426

if.else.17:                                       ; preds = %do.body.11
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6428, !tbaa !1876
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !6430
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !6430, !tbaa !2194
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !6431
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !6431, !tbaa !2196
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !6432, !tbaa !1876
  call void %27(%struct._object* %28), !dbg !6433
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %29 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !6434
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !6434
  br label %do.cond.21, !dbg !6436

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !6437

do.end.22:                                        ; preds = %do.cond.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !6439
  br label %cleanup, !dbg !6439

cleanup:                                          ; preds = %do.end.22, %do.end, %if.then.3
  %30 = bitcast %struct._object** %state to i8*, !dbg !6440
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !6440
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.25, !dbg !6442

if.else.23:                                       ; preds = %entry
  %call24 = call %struct._object* @PyBytes_FromString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)), !dbg !6443
  store %struct._object* %call24, %struct._object** %buffer, align 8, !dbg !6445, !tbaa !1876
  store i64 0, i64* %flag, align 8, !dbg !6446, !tbaa !6447
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.23, %cleanup.cont
  %31 = load i64, i64* %flag, align 8, !dbg !6449, !tbaa !6447
  %shl = shl i64 %31, 1, !dbg !6449
  store i64 %shl, i64* %flag, align 8, !dbg !6449, !tbaa !6447
  %32 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6450, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %32, i32 0, i32 3, !dbg !6452
  %bf.load = load i8, i8* %pendingcr, align 8, !dbg !6452
  %bf.shl = shl i8 %bf.load, 7, !dbg !6452
  %bf.ashr = ashr i8 %bf.shl, 7, !dbg !6452
  %bf.cast = sext i8 %bf.ashr to i32, !dbg !6452
  %tobool26 = icmp ne i32 %bf.cast, 0, !dbg !6450
  br i1 %tobool26, label %if.then.27, label %if.end.28, !dbg !6453

if.then.27:                                       ; preds = %if.end.25
  %33 = load i64, i64* %flag, align 8, !dbg !6454, !tbaa !6447
  %or = or i64 %33, 1, !dbg !6454
  store i64 %or, i64* %flag, align 8, !dbg !6454, !tbaa !6447
  br label %if.end.28, !dbg !6455

if.end.28:                                        ; preds = %if.then.27, %if.end.25
  %34 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6456, !tbaa !1876
  %35 = load i64, i64* %flag, align 8, !dbg !6457, !tbaa !6447
  %call29 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), %struct._object* %34, i64 %35), !dbg !6458
  store %struct._object* %call29, %struct._object** %retval, !dbg !6459
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.30, !dbg !6459

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.30

cleanup.30:                                       ; preds = %NewDefault, %if.end.28
  %36 = bitcast i64* %flag to i8*, !dbg !6460
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !6460
  %37 = bitcast %struct._object** %buffer to i8*, !dbg !6460
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !6460
  %38 = load %struct._object*, %struct._object** %retval, !dbg !6460
  ret %struct._object* %38, !dbg !6460
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_setstate(%struct.nldecoder_object* %self, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %state.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct._object*, align 8
  %flag = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !656, metadata !1880), !dbg !6461
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !657, metadata !1880), !dbg !6462
  %0 = bitcast %struct._object** %buffer to i8*, !dbg !6463
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6463
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !658, metadata !1880), !dbg !6464
  %1 = bitcast i64* %flag to i8*, !dbg !6465
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6465
  call void @llvm.dbg.declare(metadata i64* %flag, metadata !659, metadata !1880), !dbg !6466
  %2 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !6467, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), %struct._object** %buffer, i64* %flag), !dbg !6469
  %tobool = icmp ne i32 %call, 0, !dbg !6469
  br i1 %tobool, label %if.end, label %if.then, !dbg !6470

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6471
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6471

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %flag, align 8, !dbg !6472, !tbaa !6447
  %conv = trunc i64 %3 to i32, !dbg !6473
  %and = and i32 %conv, 1, !dbg !6474
  %4 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6475, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %4, i32 0, i32 3, !dbg !6476
  %5 = trunc i32 %and to i8, !dbg !6477
  %bf.load = load i8, i8* %pendingcr, align 8, !dbg !6477
  %bf.value = and i8 %5, 1, !dbg !6477
  %bf.clear = and i8 %bf.load, -2, !dbg !6477
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !6477
  store i8 %bf.set, i8* %pendingcr, align 8, !dbg !6477
  %bf.result.shl = shl i8 %bf.value, 7, !dbg !6477
  %bf.result.ashr = ashr i8 %bf.result.shl, 7, !dbg !6477
  %bf.result.cast = sext i8 %bf.result.ashr to i32, !dbg !6477
  %6 = load i64, i64* %flag, align 8, !dbg !6478, !tbaa !6447
  %shr = lshr i64 %6, 1, !dbg !6478
  store i64 %shr, i64* %flag, align 8, !dbg !6478, !tbaa !6447
  %7 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6479, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %7, i32 0, i32 1, !dbg !6481
  %8 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6481, !tbaa !1897
  %cmp = icmp ne %struct._object* %8, @_Py_NoneStruct, !dbg !6482
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !6483

if.then.2:                                        ; preds = %if.end
  %9 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6484, !tbaa !1876
  %decoder3 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %9, i32 0, i32 1, !dbg !6485
  %10 = load %struct._object*, %struct._object** %decoder3, align 8, !dbg !6485, !tbaa !1897
  %11 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6486, !tbaa !1876
  %12 = load i64, i64* %flag, align 8, !dbg !6487, !tbaa !6447
  %call4 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %10, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), %struct._object* %11, i64 %12), !dbg !6488
  store %struct._object* %call4, %struct._object** %retval, !dbg !6489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6489

if.else:                                          ; preds = %if.end
  %13 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6490, !tbaa !1927
  %inc = add i64 %13, 1, !dbg !6490
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6490, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6491
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6491

cleanup:                                          ; preds = %if.else, %if.then.2, %if.then
  %14 = bitcast i64* %flag to i8*, !dbg !6492
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6492
  %15 = bitcast %struct._object** %buffer to i8*, !dbg !6492
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6492
  %16 = load %struct._object*, %struct._object** %retval, !dbg !6492
  ret %struct._object* %16, !dbg !6492
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_reset(%struct.nldecoder_object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !662, metadata !1880), !dbg !6493
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !663, metadata !1880), !dbg !6494
  %0 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6495, !tbaa !1876
  %seennl = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %0, i32 0, i32 3, !dbg !6496
  %bf.load = load i8, i8* %seennl, align 8, !dbg !6497
  %bf.clear = and i8 %bf.load, -29, !dbg !6497
  store i8 %bf.clear, i8* %seennl, align 8, !dbg !6497
  %1 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6498, !tbaa !1876
  %pendingcr = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %1, i32 0, i32 3, !dbg !6499
  %bf.load1 = load i8, i8* %pendingcr, align 8, !dbg !6500
  %bf.clear2 = and i8 %bf.load1, -2, !dbg !6500
  store i8 %bf.clear2, i8* %pendingcr, align 8, !dbg !6500
  %2 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6501, !tbaa !1876
  %decoder = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %2, i32 0, i32 1, !dbg !6503
  %3 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6503, !tbaa !1897
  %cmp = icmp ne %struct._object* %3, @_Py_NoneStruct, !dbg !6504
  br i1 %cmp, label %if.then, label %if.else, !dbg !6505

if.then:                                          ; preds = %entry
  %4 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6506, !tbaa !1876
  %decoder3 = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %4, i32 0, i32 1, !dbg !6507
  %5 = load %struct._object*, %struct._object** %decoder3, align 8, !dbg !6507, !tbaa !1897
  %6 = load %struct._object*, %struct._object** @_PyIO_str_reset, align 8, !dbg !6508, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %5, %struct._object* %6, i8* null), !dbg !6509
  store %struct._object* %call, %struct._object** %retval, !dbg !6510
  br label %return, !dbg !6510

if.else:                                          ; preds = %entry
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6511, !tbaa !1927
  %inc = add i64 %7, 1, !dbg !6511
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6511, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6512
  br label %return, !dbg !6512

return:                                           ; preds = %if.else, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !6513
  ret %struct._object* %8, !dbg !6513
}

declare i32 @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object*, %struct._object*, i8*, i8**, ...) #3

declare i32 @_PyArg_Parse_SizeT(%struct._object*, i8*, ...) #3

declare %struct._object* @PyBytes_FromString(i8*) #3

declare %struct._object* @_Py_BuildValue_SizeT(i8*, ...) #3

declare %struct._object* @_PyObject_CallMethodId_SizeT(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @incrementalnewlinedecoder_newlines_get(%struct.nldecoder_object* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.nldecoder_object*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.nldecoder_object* %self, %struct.nldecoder_object** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.nldecoder_object** %self.addr, metadata !668, metadata !1880), !dbg !6514
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !669, metadata !1880), !dbg !6515
  %0 = load %struct.nldecoder_object*, %struct.nldecoder_object** %self.addr, align 8, !dbg !6516, !tbaa !1876
  %seennl = getelementptr inbounds %struct.nldecoder_object, %struct.nldecoder_object* %0, i32 0, i32 3, !dbg !6517
  %bf.load = load i8, i8* %seennl, align 8, !dbg !6517
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !6517
  %bf.clear = and i8 %bf.lshr, 7, !dbg !6517
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6517
  br label %NodeBlock.11

NodeBlock.11:                                     ; preds = %entry
  %Pivot.12 = icmp slt i32 %bf.cast, 4
  br i1 %Pivot.12, label %NodeBlock.1, label %NodeBlock.9

NodeBlock.9:                                      ; preds = %NodeBlock.11
  %Pivot.10 = icmp slt i32 %bf.cast, 6
  br i1 %Pivot.10, label %NodeBlock.3, label %NodeBlock.7

NodeBlock.7:                                      ; preds = %NodeBlock.9
  %Pivot.8 = icmp slt i32 %bf.cast, 7
  br i1 %Pivot.8, label %sw.bb.9, label %LeafBlock.5

LeafBlock.5:                                      ; preds = %NodeBlock.7
  %SwitchLeaf6 = icmp eq i32 %bf.cast, 7
  br i1 %SwitchLeaf6, label %sw.bb.11, label %NewDefault

NodeBlock.3:                                      ; preds = %NodeBlock.9
  %Pivot.4 = icmp slt i32 %bf.cast, 5
  br i1 %Pivot.4, label %sw.bb.3, label %sw.bb.7

NodeBlock.1:                                      ; preds = %NodeBlock.11
  %Pivot.2 = icmp slt i32 %bf.cast, 2
  br i1 %Pivot.2, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.1
  %Pivot = icmp slt i32 %bf.cast, 3
  br i1 %Pivot, label %sw.bb.1, label %sw.bb.5

LeafBlock:                                        ; preds = %NodeBlock.1
  %SwitchLeaf = icmp eq i32 %bf.cast, 1
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %call = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0)), !dbg !6518
  store %struct._object* %call, %struct._object** %retval, !dbg !6520
  br label %return, !dbg !6520

sw.bb.1:                                          ; preds = %NodeBlock
  %call2 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)), !dbg !6521
  store %struct._object* %call2, %struct._object** %retval, !dbg !6522
  br label %return, !dbg !6522

sw.bb.3:                                          ; preds = %NodeBlock.3
  %call4 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6523
  store %struct._object* %call4, %struct._object** %retval, !dbg !6524
  br label %return, !dbg !6524

sw.bb.5:                                          ; preds = %NodeBlock
  %call6 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0)), !dbg !6525
  store %struct._object* %call6, %struct._object** %retval, !dbg !6526
  br label %return, !dbg !6526

sw.bb.7:                                          ; preds = %NodeBlock.3
  %call8 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6527
  store %struct._object* %call8, %struct._object** %retval, !dbg !6528
  br label %return, !dbg !6528

sw.bb.9:                                          ; preds = %NodeBlock.7
  %call10 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6529
  store %struct._object* %call10, %struct._object** %retval, !dbg !6530
  br label %return, !dbg !6530

sw.bb.11:                                         ; preds = %LeafBlock.5
  %call12 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0)), !dbg !6531
  store %struct._object* %call12, %struct._object** %retval, !dbg !6532
  br label %return, !dbg !6532

NewDefault:                                       ; preds = %LeafBlock.5, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6533, !tbaa !1927
  %inc = add i64 %1, 1, !dbg !6533
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6533, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6534
  br label %return, !dbg !6534

return:                                           ; preds = %sw.default, %sw.bb.11, %sw.bb.9, %sw.bb.7, %sw.bb.5, %sw.bb.3, %sw.bb.1, %sw.bb
  %2 = load %struct._object*, %struct._object** %retval, !dbg !6535
  ret %struct._object* %2, !dbg !6535
}

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare i32 @_PyIOBase_finalize(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_clear(%struct.textio* %self) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_tmp129 = alloca %struct._object*, align 8
  %_py_decref_tmp134 = alloca %struct._object*, align 8
  %_py_tmp149 = alloca %struct._object*, align 8
  %_py_decref_tmp154 = alloca %struct._object*, align 8
  %_py_tmp169 = alloca %struct._object*, align 8
  %_py_decref_tmp174 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !745, metadata !1880), !dbg !6536
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6537, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !6538
  store i32 0, i32* %ok, align 4, !dbg !6539, !tbaa !3895
  br label %do.body, !dbg !6540

do.body:                                          ; preds = %entry
  %1 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6541
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6541
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !746, metadata !1880), !dbg !6543
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6544, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 4, !dbg !6545
  %3 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !6545, !tbaa !4115
  store %struct._object* %3, %struct._object** %_py_tmp, align 8, !dbg !6543, !tbaa !1876
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6546, !tbaa !1876
  %cmp = icmp ne %struct._object* %4, null, !dbg !6547
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !6548

if.then:                                          ; preds = %do.body
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6549, !tbaa !1876
  %buffer1 = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 4, !dbg !6551
  store %struct._object* null, %struct._object** %buffer1, align 8, !dbg !6552, !tbaa !4115
  br label %do.body.2, !dbg !6553

do.body.2:                                        ; preds = %if.then
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6554
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !6554
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !748, metadata !1880), !dbg !6556
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6557, !tbaa !1876
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !6556, !tbaa !1876
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6558, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !6560
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !6561, !tbaa !1927
  %dec = add i64 %9, -1, !dbg !6561
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6561, !tbaa !1927
  %cmp3 = icmp ne i64 %dec, 0, !dbg !6562
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6563

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !6564

if.else:                                          ; preds = %do.body.2
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6566, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !6568
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6568, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !6569
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6569, !tbaa !2196
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6570, !tbaa !1876
  call void %12(%struct._object* %13), !dbg !6571
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6572
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6572
  br label %do.cond, !dbg !6574

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6575

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !6577

if.end.5:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6579
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !6579
  br label %do.end.7, !dbg !6582

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !6583

do.body.8:                                        ; preds = %do.end.7
  %16 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6584
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !6584
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !752, metadata !1880), !dbg !6586
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6587, !tbaa !1876
  %encoding = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 5, !dbg !6588
  %18 = load %struct._object*, %struct._object** %encoding, align 8, !dbg !6588, !tbaa !4036
  store %struct._object* %18, %struct._object** %_py_tmp9, align 8, !dbg !6586, !tbaa !1876
  %19 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6589, !tbaa !1876
  %cmp10 = icmp ne %struct._object* %19, null, !dbg !6590
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !6591

if.then.11:                                       ; preds = %do.body.8
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6592, !tbaa !1876
  %encoding12 = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 5, !dbg !6594
  store %struct._object* null, %struct._object** %encoding12, align 8, !dbg !6595, !tbaa !4036
  br label %do.body.13, !dbg !6596

do.body.13:                                       ; preds = %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6597
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !6597
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !754, metadata !1880), !dbg !6599
  %22 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6600, !tbaa !1876
  store %struct._object* %22, %struct._object** %_py_decref_tmp14, align 8, !dbg !6599, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6601, !tbaa !1876
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !6603
  %24 = load i64, i64* %ob_refcnt15, align 8, !dbg !6604, !tbaa !1927
  %dec16 = add i64 %24, -1, !dbg !6604
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !6604, !tbaa !1927
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !6605
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !6606

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !6607

if.else.19:                                       ; preds = %do.body.13
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6609, !tbaa !1876
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !6611
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !6611, !tbaa !2194
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !6612
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !6612, !tbaa !2196
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6613, !tbaa !1876
  call void %27(%struct._object* %28), !dbg !6614
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %29 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6615
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !6615
  br label %do.cond.23, !dbg !6617

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !6618

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !6620

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %30 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6622
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !6622
  br label %do.end.27, !dbg !6623

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !6624

do.body.28:                                       ; preds = %do.end.27
  %31 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6625
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !6625
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !758, metadata !1880), !dbg !6627
  %32 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6628, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %32, i32 0, i32 6, !dbg !6629
  %33 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !6629, !tbaa !4172
  store %struct._object* %33, %struct._object** %_py_tmp29, align 8, !dbg !6627, !tbaa !1876
  %34 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6630, !tbaa !1876
  %cmp30 = icmp ne %struct._object* %34, null, !dbg !6631
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !6632

if.then.31:                                       ; preds = %do.body.28
  %35 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6633, !tbaa !1876
  %encoder32 = getelementptr inbounds %struct.textio, %struct.textio* %35, i32 0, i32 6, !dbg !6635
  store %struct._object* null, %struct._object** %encoder32, align 8, !dbg !6636, !tbaa !4172
  br label %do.body.33, !dbg !6637

do.body.33:                                       ; preds = %if.then.31
  %36 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6638
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !6638
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !760, metadata !1880), !dbg !6640
  %37 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6641, !tbaa !1876
  store %struct._object* %37, %struct._object** %_py_decref_tmp34, align 8, !dbg !6640, !tbaa !1876
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6642, !tbaa !1876
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !6644
  %39 = load i64, i64* %ob_refcnt35, align 8, !dbg !6645, !tbaa !1927
  %dec36 = add i64 %39, -1, !dbg !6645
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !6645, !tbaa !1927
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !6646
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !6647

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !6648

if.else.39:                                       ; preds = %do.body.33
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6650, !tbaa !1876
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !6652
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !6652, !tbaa !2194
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !6653
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !6653, !tbaa !2196
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6654, !tbaa !1876
  call void %42(%struct._object* %43), !dbg !6655
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %44 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6656
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !6656
  br label %do.cond.43, !dbg !6658

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !6659

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !6661

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %45 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6663
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !6663
  br label %do.end.47, !dbg !6664

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !6665

do.body.48:                                       ; preds = %do.end.47
  %46 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6666
  call void @llvm.lifetime.start(i64 8, i8* %46) #2, !dbg !6666
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !764, metadata !1880), !dbg !6668
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6669, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 7, !dbg !6670
  %48 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !6670, !tbaa !4201
  store %struct._object* %48, %struct._object** %_py_tmp49, align 8, !dbg !6668, !tbaa !1876
  %49 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6671, !tbaa !1876
  %cmp50 = icmp ne %struct._object* %49, null, !dbg !6672
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !6673

if.then.51:                                       ; preds = %do.body.48
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6674, !tbaa !1876
  %decoder52 = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 7, !dbg !6676
  store %struct._object* null, %struct._object** %decoder52, align 8, !dbg !6677, !tbaa !4201
  br label %do.body.53, !dbg !6678

do.body.53:                                       ; preds = %if.then.51
  %51 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6679
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !6679
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !766, metadata !1880), !dbg !6681
  %52 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6682, !tbaa !1876
  store %struct._object* %52, %struct._object** %_py_decref_tmp54, align 8, !dbg !6681, !tbaa !1876
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6683, !tbaa !1876
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !6685
  %54 = load i64, i64* %ob_refcnt55, align 8, !dbg !6686, !tbaa !1927
  %dec56 = add i64 %54, -1, !dbg !6686
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !6686, !tbaa !1927
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !6687
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !6688

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !6689

if.else.59:                                       ; preds = %do.body.53
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6691, !tbaa !1876
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !6693
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !6693, !tbaa !2194
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !6694
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !6694, !tbaa !2196
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6695, !tbaa !1876
  call void %57(%struct._object* %58), !dbg !6696
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %59 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6697
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !6697
  br label %do.cond.63, !dbg !6699

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !6700

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !6702

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %60 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6704
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !6704
  br label %do.end.67, !dbg !6705

do.end.67:                                        ; preds = %if.end.65
  br label %do.body.68, !dbg !6706

do.body.68:                                       ; preds = %do.end.67
  %61 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6707
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !6707
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp69, metadata !770, metadata !1880), !dbg !6709
  %62 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6710, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %62, i32 0, i32 8, !dbg !6711
  %63 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !6711, !tbaa !4230
  store %struct._object* %63, %struct._object** %_py_tmp69, align 8, !dbg !6709, !tbaa !1876
  %64 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6712, !tbaa !1876
  %cmp70 = icmp ne %struct._object* %64, null, !dbg !6713
  br i1 %cmp70, label %if.then.71, label %if.end.85, !dbg !6714

if.then.71:                                       ; preds = %do.body.68
  %65 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6715, !tbaa !1876
  %readnl72 = getelementptr inbounds %struct.textio, %struct.textio* %65, i32 0, i32 8, !dbg !6717
  store %struct._object* null, %struct._object** %readnl72, align 8, !dbg !6718, !tbaa !4230
  br label %do.body.73, !dbg !6719

do.body.73:                                       ; preds = %if.then.71
  %66 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6720
  call void @llvm.lifetime.start(i64 8, i8* %66) #2, !dbg !6720
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !772, metadata !1880), !dbg !6722
  %67 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6723, !tbaa !1876
  store %struct._object* %67, %struct._object** %_py_decref_tmp74, align 8, !dbg !6722, !tbaa !1876
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6724, !tbaa !1876
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !6726
  %69 = load i64, i64* %ob_refcnt75, align 8, !dbg !6727, !tbaa !1927
  %dec76 = add i64 %69, -1, !dbg !6727
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !6727, !tbaa !1927
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !6728
  br i1 %cmp77, label %if.then.78, label %if.else.79, !dbg !6729

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82, !dbg !6730

if.else.79:                                       ; preds = %do.body.73
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6732, !tbaa !1876
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !6734
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !6734, !tbaa !2194
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !6735
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !6735, !tbaa !2196
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6736, !tbaa !1876
  call void %72(%struct._object* %73), !dbg !6737
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  %74 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6738
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !6738
  br label %do.cond.83, !dbg !6740

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !6741

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !6743

if.end.85:                                        ; preds = %do.end.84, %do.body.68
  %75 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6745
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !6745
  br label %do.end.87, !dbg !6746

do.end.87:                                        ; preds = %if.end.85
  br label %do.body.88, !dbg !6747

do.body.88:                                       ; preds = %do.end.87
  %76 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !6748
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !6748
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp89, metadata !776, metadata !1880), !dbg !6750
  %77 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6751, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %77, i32 0, i32 22, !dbg !6752
  %78 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !6752, !tbaa !4259
  store %struct._object* %78, %struct._object** %_py_tmp89, align 8, !dbg !6750, !tbaa !1876
  %79 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !6753, !tbaa !1876
  %cmp90 = icmp ne %struct._object* %79, null, !dbg !6754
  br i1 %cmp90, label %if.then.91, label %if.end.105, !dbg !6755

if.then.91:                                       ; preds = %do.body.88
  %80 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6756, !tbaa !1876
  %decoded_chars92 = getelementptr inbounds %struct.textio, %struct.textio* %80, i32 0, i32 22, !dbg !6758
  store %struct._object* null, %struct._object** %decoded_chars92, align 8, !dbg !6759, !tbaa !4259
  br label %do.body.93, !dbg !6760

do.body.93:                                       ; preds = %if.then.91
  %81 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !6761
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !6761
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !778, metadata !1880), !dbg !6763
  %82 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !6764, !tbaa !1876
  store %struct._object* %82, %struct._object** %_py_decref_tmp94, align 8, !dbg !6763, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6765, !tbaa !1876
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !6767
  %84 = load i64, i64* %ob_refcnt95, align 8, !dbg !6768, !tbaa !1927
  %dec96 = add i64 %84, -1, !dbg !6768
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !6768, !tbaa !1927
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !6769
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !6770

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !6771

if.else.99:                                       ; preds = %do.body.93
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6773, !tbaa !1876
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !6775
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !6775, !tbaa !2194
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !6776
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !6776, !tbaa !2196
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6777, !tbaa !1876
  call void %87(%struct._object* %88), !dbg !6778
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %89 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !6779
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !6779
  br label %do.cond.103, !dbg !6781

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !6782

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105, !dbg !6784

if.end.105:                                       ; preds = %do.end.104, %do.body.88
  %90 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !6786
  call void @llvm.lifetime.end(i64 8, i8* %90) #2, !dbg !6786
  br label %do.end.107, !dbg !6787

do.end.107:                                       ; preds = %if.end.105
  br label %do.body.108, !dbg !6788

do.body.108:                                      ; preds = %do.end.107
  %91 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !6789
  call void @llvm.lifetime.start(i64 8, i8* %91) #2, !dbg !6789
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp109, metadata !782, metadata !1880), !dbg !6791
  %92 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6792, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %92, i32 0, i32 24, !dbg !6793
  %93 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !6793, !tbaa !4288
  store %struct._object* %93, %struct._object** %_py_tmp109, align 8, !dbg !6791, !tbaa !1876
  %94 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !6794, !tbaa !1876
  %cmp110 = icmp ne %struct._object* %94, null, !dbg !6795
  br i1 %cmp110, label %if.then.111, label %if.end.125, !dbg !6796

if.then.111:                                      ; preds = %do.body.108
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6797, !tbaa !1876
  %pending_bytes112 = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 24, !dbg !6799
  store %struct._object* null, %struct._object** %pending_bytes112, align 8, !dbg !6800, !tbaa !4288
  br label %do.body.113, !dbg !6801

do.body.113:                                      ; preds = %if.then.111
  %96 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !6802
  call void @llvm.lifetime.start(i64 8, i8* %96) #2, !dbg !6802
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !784, metadata !1880), !dbg !6804
  %97 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !6805, !tbaa !1876
  store %struct._object* %97, %struct._object** %_py_decref_tmp114, align 8, !dbg !6804, !tbaa !1876
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6806, !tbaa !1876
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 0, !dbg !6808
  %99 = load i64, i64* %ob_refcnt115, align 8, !dbg !6809, !tbaa !1927
  %dec116 = add i64 %99, -1, !dbg !6809
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !6809, !tbaa !1927
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !6810
  br i1 %cmp117, label %if.then.118, label %if.else.119, !dbg !6811

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122, !dbg !6812

if.else.119:                                      ; preds = %do.body.113
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6814, !tbaa !1876
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 1, !dbg !6816
  %101 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !6816, !tbaa !2194
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %101, i32 0, i32 4, !dbg !6817
  %102 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !6817, !tbaa !2196
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6818, !tbaa !1876
  call void %102(%struct._object* %103), !dbg !6819
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %104 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !6820
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !6820
  br label %do.cond.123, !dbg !6822

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !6823

do.end.124:                                       ; preds = %do.cond.123
  br label %if.end.125, !dbg !6825

if.end.125:                                       ; preds = %do.end.124, %do.body.108
  %105 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !6827
  call void @llvm.lifetime.end(i64 8, i8* %105) #2, !dbg !6827
  br label %do.end.127, !dbg !6828

do.end.127:                                       ; preds = %if.end.125
  br label %do.body.128, !dbg !6829

do.body.128:                                      ; preds = %do.end.127
  %106 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !6830
  call void @llvm.lifetime.start(i64 8, i8* %106) #2, !dbg !6830
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp129, metadata !788, metadata !1880), !dbg !6832
  %107 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6833, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %107, i32 0, i32 26, !dbg !6834
  %108 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !6834, !tbaa !4317
  store %struct._object* %108, %struct._object** %_py_tmp129, align 8, !dbg !6832, !tbaa !1876
  %109 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !6835, !tbaa !1876
  %cmp130 = icmp ne %struct._object* %109, null, !dbg !6836
  br i1 %cmp130, label %if.then.131, label %if.end.145, !dbg !6837

if.then.131:                                      ; preds = %do.body.128
  %110 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6838, !tbaa !1876
  %snapshot132 = getelementptr inbounds %struct.textio, %struct.textio* %110, i32 0, i32 26, !dbg !6840
  store %struct._object* null, %struct._object** %snapshot132, align 8, !dbg !6841, !tbaa !4317
  br label %do.body.133, !dbg !6842

do.body.133:                                      ; preds = %if.then.131
  %111 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !6843
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !6843
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp134, metadata !790, metadata !1880), !dbg !6845
  %112 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !6846, !tbaa !1876
  store %struct._object* %112, %struct._object** %_py_decref_tmp134, align 8, !dbg !6845, !tbaa !1876
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6847, !tbaa !1876
  %ob_refcnt135 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !6849
  %114 = load i64, i64* %ob_refcnt135, align 8, !dbg !6850, !tbaa !1927
  %dec136 = add i64 %114, -1, !dbg !6850
  store i64 %dec136, i64* %ob_refcnt135, align 8, !dbg !6850, !tbaa !1927
  %cmp137 = icmp ne i64 %dec136, 0, !dbg !6851
  br i1 %cmp137, label %if.then.138, label %if.else.139, !dbg !6852

if.then.138:                                      ; preds = %do.body.133
  br label %if.end.142, !dbg !6853

if.else.139:                                      ; preds = %do.body.133
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6855, !tbaa !1876
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1, !dbg !6857
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !6857, !tbaa !2194
  %tp_dealloc141 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 4, !dbg !6858
  %117 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc141, align 8, !dbg !6858, !tbaa !2196
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6859, !tbaa !1876
  call void %117(%struct._object* %118), !dbg !6860
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.139, %if.then.138
  %119 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !6861
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !6861
  br label %do.cond.143, !dbg !6863

do.cond.143:                                      ; preds = %if.end.142
  br label %do.end.144, !dbg !6864

do.end.144:                                       ; preds = %do.cond.143
  br label %if.end.145, !dbg !6866

if.end.145:                                       ; preds = %do.end.144, %do.body.128
  %120 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !6868
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !6868
  br label %do.end.147, !dbg !6869

do.end.147:                                       ; preds = %if.end.145
  br label %do.body.148, !dbg !6870

do.body.148:                                      ; preds = %do.end.147
  %121 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !6871
  call void @llvm.lifetime.start(i64 8, i8* %121) #2, !dbg !6871
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp149, metadata !794, metadata !1880), !dbg !6873
  %122 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6874, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %122, i32 0, i32 9, !dbg !6875
  %123 = load %struct._object*, %struct._object** %errors, align 8, !dbg !6875, !tbaa !4346
  store %struct._object* %123, %struct._object** %_py_tmp149, align 8, !dbg !6873, !tbaa !1876
  %124 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !6876, !tbaa !1876
  %cmp150 = icmp ne %struct._object* %124, null, !dbg !6877
  br i1 %cmp150, label %if.then.151, label %if.end.165, !dbg !6878

if.then.151:                                      ; preds = %do.body.148
  %125 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6879, !tbaa !1876
  %errors152 = getelementptr inbounds %struct.textio, %struct.textio* %125, i32 0, i32 9, !dbg !6881
  store %struct._object* null, %struct._object** %errors152, align 8, !dbg !6882, !tbaa !4346
  br label %do.body.153, !dbg !6883

do.body.153:                                      ; preds = %if.then.151
  %126 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !6884
  call void @llvm.lifetime.start(i64 8, i8* %126) #2, !dbg !6884
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp154, metadata !796, metadata !1880), !dbg !6886
  %127 = load %struct._object*, %struct._object** %_py_tmp149, align 8, !dbg !6887, !tbaa !1876
  store %struct._object* %127, %struct._object** %_py_decref_tmp154, align 8, !dbg !6886, !tbaa !1876
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !6888, !tbaa !1876
  %ob_refcnt155 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 0, !dbg !6890
  %129 = load i64, i64* %ob_refcnt155, align 8, !dbg !6891, !tbaa !1927
  %dec156 = add i64 %129, -1, !dbg !6891
  store i64 %dec156, i64* %ob_refcnt155, align 8, !dbg !6891, !tbaa !1927
  %cmp157 = icmp ne i64 %dec156, 0, !dbg !6892
  br i1 %cmp157, label %if.then.158, label %if.else.159, !dbg !6893

if.then.158:                                      ; preds = %do.body.153
  br label %if.end.162, !dbg !6894

if.else.159:                                      ; preds = %do.body.153
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !6896, !tbaa !1876
  %ob_type160 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 1, !dbg !6898
  %131 = load %struct._typeobject*, %struct._typeobject** %ob_type160, align 8, !dbg !6898, !tbaa !2194
  %tp_dealloc161 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %131, i32 0, i32 4, !dbg !6899
  %132 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc161, align 8, !dbg !6899, !tbaa !2196
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp154, align 8, !dbg !6900, !tbaa !1876
  call void %132(%struct._object* %133), !dbg !6901
  br label %if.end.162

if.end.162:                                       ; preds = %if.else.159, %if.then.158
  %134 = bitcast %struct._object** %_py_decref_tmp154 to i8*, !dbg !6902
  call void @llvm.lifetime.end(i64 8, i8* %134) #2, !dbg !6902
  br label %do.cond.163, !dbg !6904

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !6905

do.end.164:                                       ; preds = %do.cond.163
  br label %if.end.165, !dbg !6907

if.end.165:                                       ; preds = %do.end.164, %do.body.148
  %135 = bitcast %struct._object** %_py_tmp149 to i8*, !dbg !6909
  call void @llvm.lifetime.end(i64 8, i8* %135) #2, !dbg !6909
  br label %do.end.167, !dbg !6910

do.end.167:                                       ; preds = %if.end.165
  br label %do.body.168, !dbg !6911

do.body.168:                                      ; preds = %do.end.167
  %136 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !6912
  call void @llvm.lifetime.start(i64 8, i8* %136) #2, !dbg !6912
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp169, metadata !800, metadata !1880), !dbg !6914
  %137 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6915, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %137, i32 0, i32 28, !dbg !6916
  %138 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6916, !tbaa !4375
  store %struct._object* %138, %struct._object** %_py_tmp169, align 8, !dbg !6914, !tbaa !1876
  %139 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !6917, !tbaa !1876
  %cmp170 = icmp ne %struct._object* %139, null, !dbg !6918
  br i1 %cmp170, label %if.then.171, label %if.end.185, !dbg !6919

if.then.171:                                      ; preds = %do.body.168
  %140 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6920, !tbaa !1876
  %raw172 = getelementptr inbounds %struct.textio, %struct.textio* %140, i32 0, i32 28, !dbg !6922
  store %struct._object* null, %struct._object** %raw172, align 8, !dbg !6923, !tbaa !4375
  br label %do.body.173, !dbg !6924

do.body.173:                                      ; preds = %if.then.171
  %141 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !6925
  call void @llvm.lifetime.start(i64 8, i8* %141) #2, !dbg !6925
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp174, metadata !802, metadata !1880), !dbg !6927
  %142 = load %struct._object*, %struct._object** %_py_tmp169, align 8, !dbg !6928, !tbaa !1876
  store %struct._object* %142, %struct._object** %_py_decref_tmp174, align 8, !dbg !6927, !tbaa !1876
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6929, !tbaa !1876
  %ob_refcnt175 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0, !dbg !6931
  %144 = load i64, i64* %ob_refcnt175, align 8, !dbg !6932, !tbaa !1927
  %dec176 = add i64 %144, -1, !dbg !6932
  store i64 %dec176, i64* %ob_refcnt175, align 8, !dbg !6932, !tbaa !1927
  %cmp177 = icmp ne i64 %dec176, 0, !dbg !6933
  br i1 %cmp177, label %if.then.178, label %if.else.179, !dbg !6934

if.then.178:                                      ; preds = %do.body.173
  br label %if.end.182, !dbg !6935

if.else.179:                                      ; preds = %do.body.173
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6937, !tbaa !1876
  %ob_type180 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 1, !dbg !6939
  %146 = load %struct._typeobject*, %struct._typeobject** %ob_type180, align 8, !dbg !6939, !tbaa !2194
  %tp_dealloc181 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %146, i32 0, i32 4, !dbg !6940
  %147 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc181, align 8, !dbg !6940, !tbaa !2196
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp174, align 8, !dbg !6941, !tbaa !1876
  call void %147(%struct._object* %148), !dbg !6942
  br label %if.end.182

if.end.182:                                       ; preds = %if.else.179, %if.then.178
  %149 = bitcast %struct._object** %_py_decref_tmp174 to i8*, !dbg !6943
  call void @llvm.lifetime.end(i64 8, i8* %149) #2, !dbg !6943
  br label %do.cond.183, !dbg !6945

do.cond.183:                                      ; preds = %if.end.182
  br label %do.end.184, !dbg !6946

do.end.184:                                       ; preds = %do.cond.183
  br label %if.end.185, !dbg !6948

if.end.185:                                       ; preds = %do.end.184, %do.body.168
  %150 = bitcast %struct._object** %_py_tmp169 to i8*, !dbg !6950
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !6950
  br label %do.end.187, !dbg !6951

do.end.187:                                       ; preds = %if.end.185
  ret i32 0, !dbg !6952
}

declare void @PyObject_ClearWeakRefs(%struct._object*) #3

declare %struct._object* @_PyObject_GetAttrId(%struct._object*, %struct._Py_Identifier*) #3

declare i32 @PyErr_ExceptionMatches(%struct._object*) #3

declare void @PyErr_Clear() #3

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare void @PyUnicode_AppendAndDel(%struct._object**, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_textiowrapper_readline(%struct.textio* %self, i64 %limit) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %limit.addr = alloca i64, align 8
  %line = alloca %struct._object*, align 8
  %chunks = alloca %struct._object*, align 8
  %remaining = alloca %struct._object*, align 8
  %start = alloca i64, align 8
  %endpos = alloca i64, align 8
  %chunked = alloca i64, align 8
  %offset_to_buffer = alloca i64, align 8
  %res = alloca i32, align 4
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %ptr = alloca i8*, align 8
  %line_len = alloca i64, align 8
  %kind = alloca i32, align 4
  %consumed = alloca i64, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %s = alloca %struct._object*, align 8
  %_py_decref_tmp185 = alloca %struct._object*, align 8
  %_py_decref_tmp201 = alloca %struct._object*, align 8
  %_py_tmp227 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %s265 = alloca %struct._object*, align 8
  %_py_tmp268 = alloca %struct._object*, align 8
  %_py_decref_tmp273 = alloca %struct._object*, align 8
  %_py_tmp315 = alloca %struct._object*, align 8
  %_py_decref_tmp320 = alloca %struct._object*, align 8
  %_py_decref_tmp348 = alloca %struct._object*, align 8
  %_py_tmp367 = alloca %struct._object*, align 8
  %_py_decref_tmp372 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp399 = alloca %struct._object*, align 8
  %_py_xdecref_tmp415 = alloca %struct._object*, align 8
  %_py_decref_tmp420 = alloca %struct._object*, align 8
  %_py_xdecref_tmp436 = alloca %struct._object*, align 8
  %_py_decref_tmp441 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !914, metadata !1880), !dbg !6953
  store i64 %limit, i64* %limit.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i64* %limit.addr, metadata !915, metadata !1880), !dbg !6954
  %0 = bitcast %struct._object** %line to i8*, !dbg !6955
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6955
  call void @llvm.dbg.declare(metadata %struct._object** %line, metadata !916, metadata !1880), !dbg !6956
  store %struct._object* null, %struct._object** %line, align 8, !dbg !6956, !tbaa !1876
  %1 = bitcast %struct._object** %chunks to i8*, !dbg !6955
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6955
  call void @llvm.dbg.declare(metadata %struct._object** %chunks, metadata !917, metadata !1880), !dbg !6957
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !6957, !tbaa !1876
  %2 = bitcast %struct._object** %remaining to i8*, !dbg !6955
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6955
  call void @llvm.dbg.declare(metadata %struct._object** %remaining, metadata !918, metadata !1880), !dbg !6958
  store %struct._object* null, %struct._object** %remaining, align 8, !dbg !6958, !tbaa !1876
  %3 = bitcast i64* %start to i8*, !dbg !6959
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !6959
  call void @llvm.dbg.declare(metadata i64* %start, metadata !919, metadata !1880), !dbg !6960
  %4 = bitcast i64* %endpos to i8*, !dbg !6959
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !6959
  call void @llvm.dbg.declare(metadata i64* %endpos, metadata !920, metadata !1880), !dbg !6961
  %5 = bitcast i64* %chunked to i8*, !dbg !6959
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !6959
  call void @llvm.dbg.declare(metadata i64* %chunked, metadata !921, metadata !1880), !dbg !6962
  %6 = bitcast i64* %offset_to_buffer to i8*, !dbg !6959
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !6959
  call void @llvm.dbg.declare(metadata i64* %offset_to_buffer, metadata !922, metadata !1880), !dbg !6963
  %7 = bitcast i32* %res to i8*, !dbg !6964
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !6964
  call void @llvm.dbg.declare(metadata i32* %res, metadata !923, metadata !1880), !dbg !6965
  br label %do.body, !dbg !6966

do.body:                                          ; preds = %entry
  %8 = bitcast i32* %r to i8*, !dbg !6967
  call void @llvm.lifetime.start(i64 4, i8* %8) #2, !dbg !6967
  call void @llvm.dbg.declare(metadata i32* %r, metadata !924, metadata !1880), !dbg !6969
  %9 = bitcast %struct._object** %_res to i8*, !dbg !6970
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !6970
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !926, metadata !1880), !dbg !6971
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6972, !tbaa !1876
  %11 = bitcast %struct.textio* %10 to %struct._object*, !dbg !6973
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6974
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6974, !tbaa !2194
  %cmp = icmp eq %struct._typeobject* %12, @PyTextIOWrapper_Type, !dbg !6975
  br i1 %cmp, label %if.then, label %if.else.21, !dbg !6976

if.then:                                          ; preds = %do.body
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6977, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 28, !dbg !6979
  %14 = load %struct._object*, %struct._object** %raw, align 8, !dbg !6979, !tbaa !4375
  %cmp1 = icmp ne %struct._object* %14, null, !dbg !6980
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !6981

if.then.2:                                        ; preds = %if.then
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6982, !tbaa !1876
  %raw3 = getelementptr inbounds %struct.textio, %struct.textio* %15, i32 0, i32 28, !dbg !6984
  %16 = load %struct._object*, %struct._object** %raw3, align 8, !dbg !6984, !tbaa !4375
  %call = call i32 @_PyFileIO_closed(%struct._object* %16), !dbg !6985
  store i32 %call, i32* %r, align 4, !dbg !6986, !tbaa !1883
  br label %if.end.17, !dbg !6987

if.else:                                          ; preds = %if.then
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !6988, !tbaa !1876
  %call4 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %17, i8* null), !dbg !6990
  store %struct._object* %call4, %struct._object** %_res, align 8, !dbg !6991, !tbaa !1876
  %18 = load %struct._object*, %struct._object** %_res, align 8, !dbg !6992, !tbaa !1876
  %cmp5 = icmp eq %struct._object* %18, null, !dbg !6994
  br i1 %cmp5, label %if.then.6, label %if.end, !dbg !6995

if.then.6:                                        ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !6996
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6998

if.end:                                           ; preds = %if.else
  %19 = load %struct._object*, %struct._object** %_res, align 8, !dbg !6999, !tbaa !1876
  %call7 = call i32 @PyObject_IsTrue(%struct._object* %19), !dbg !7001
  store i32 %call7, i32* %r, align 4, !dbg !7002, !tbaa !1883
  br label %do.body.8, !dbg !7003

do.body.8:                                        ; preds = %if.end
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7004
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !7004
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !927, metadata !1880), !dbg !7006
  %21 = load %struct._object*, %struct._object** %_res, align 8, !dbg !7007, !tbaa !1876
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !7006, !tbaa !1876
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7008, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7010
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !7011, !tbaa !1927
  %dec = add i64 %23, -1, !dbg !7011
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7011, !tbaa !1927
  %cmp9 = icmp ne i64 %dec, 0, !dbg !7012
  br i1 %cmp9, label %if.then.10, label %if.else.11, !dbg !7013

if.then.10:                                       ; preds = %do.body.8
  br label %if.end.13, !dbg !7014

if.else.11:                                       ; preds = %do.body.8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7016, !tbaa !1876
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7018
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !7018, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7019
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7019, !tbaa !2196
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7020, !tbaa !1876
  call void %26(%struct._object* %27), !dbg !7021
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.11, %if.then.10
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7022
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !7022
  br label %do.cond, !dbg !7024

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !7025

do.end:                                           ; preds = %do.cond
  %29 = load i32, i32* %r, align 4, !dbg !7027, !tbaa !1883
  %cmp14 = icmp slt i32 %29, 0, !dbg !7030
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !7031

if.then.15:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !7032
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7034

if.end.16:                                        ; preds = %do.end
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %if.then.2
  %30 = load i32, i32* %r, align 4, !dbg !7035, !tbaa !1883
  %cmp18 = icmp sgt i32 %30, 0, !dbg !7038
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !7039

if.then.19:                                       ; preds = %if.end.17
  %31 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7040, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !7043
  store %struct._object* null, %struct._object** %retval, !dbg !7044
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7044

if.end.20:                                        ; preds = %if.end.17
  br label %if.end.26, !dbg !7045

if.else.21:                                       ; preds = %do.body
  %32 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7047, !tbaa !1876
  %33 = bitcast %struct.textio* %32 to %struct._object*, !dbg !7050
  %call22 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %33, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !7051
  %cmp23 = icmp eq %struct._object* %call22, null, !dbg !7052
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !7053

if.then.24:                                       ; preds = %if.else.21
  store %struct._object* null, %struct._object** %retval, !dbg !7054
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7056

if.end.25:                                        ; preds = %if.else.21
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.end.20
  store i32 0, i32* %cleanup.dest.slot, !dbg !7057
  br label %cleanup, !dbg !7057

cleanup:                                          ; preds = %if.end.26, %if.then.24, %if.then.19, %if.then.15, %if.then.6
  %34 = bitcast %struct._object** %_res to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !7059
  %35 = bitcast i32* %r to i8*, !dbg !7059
  call void @llvm.lifetime.end(i64 4, i8* %35) #2, !dbg !7059
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %do.cond.28, !dbg !7065

do.cond.28:                                       ; preds = %cleanup.cont
  br label %do.end.29, !dbg !7066

do.end.29:                                        ; preds = %do.cond.28
  %36 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7068, !tbaa !1876
  %call30 = call i32 @_textiowrapper_writeflush(%struct.textio* %36), !dbg !7070
  %cmp31 = icmp slt i32 %call30, 0, !dbg !7071
  br i1 %cmp31, label %if.then.32, label %if.end.33, !dbg !7072

if.then.32:                                       ; preds = %do.end.29
  store %struct._object* null, %struct._object** %retval, !dbg !7073
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.456, !dbg !7073

if.end.33:                                        ; preds = %do.end.29
  store i64 0, i64* %chunked, align 8, !dbg !7074, !tbaa !1941
  br label %while.cond, !dbg !7075

while.cond:                                       ; preds = %cleanup.cont.252, %if.end.33
  br label %while.body, !dbg !7076

while.body:                                       ; preds = %while.cond
  %37 = bitcast i8** %ptr to i8*, !dbg !7079
  call void @llvm.lifetime.start(i64 8, i8* %37) #2, !dbg !7079
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !933, metadata !1880), !dbg !7080
  %38 = bitcast i64* %line_len to i8*, !dbg !7081
  call void @llvm.lifetime.start(i64 8, i8* %38) #2, !dbg !7081
  call void @llvm.dbg.declare(metadata i64* %line_len, metadata !935, metadata !1880), !dbg !7082
  %39 = bitcast i32* %kind to i8*, !dbg !7083
  call void @llvm.lifetime.start(i64 4, i8* %39) #2, !dbg !7083
  call void @llvm.dbg.declare(metadata i32* %kind, metadata !936, metadata !1880), !dbg !7084
  %40 = bitcast i64* %consumed to i8*, !dbg !7085
  call void @llvm.lifetime.start(i64 8, i8* %40) #2, !dbg !7085
  call void @llvm.dbg.declare(metadata i64* %consumed, metadata !937, metadata !1880), !dbg !7086
  store i64 0, i64* %consumed, align 8, !dbg !7086, !tbaa !1941
  store i32 1, i32* %res, align 4, !dbg !7087, !tbaa !1883
  br label %while.cond.34, !dbg !7088

while.cond.34:                                    ; preds = %if.end.48, %if.then.43, %while.body
  %41 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7089, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %41, i32 0, i32 22, !dbg !7092
  %42 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !7092, !tbaa !4259
  %tobool = icmp ne %struct._object* %42, null, !dbg !7093
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7094

lor.rhs:                                          ; preds = %while.cond.34
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7095, !tbaa !1876
  %decoded_chars35 = getelementptr inbounds %struct.textio, %struct.textio* %43, i32 0, i32 22, !dbg !7096
  %44 = load %struct._object*, %struct._object** %decoded_chars35, align 8, !dbg !7096, !tbaa !4259
  %45 = bitcast %struct._object* %44 to %struct.PyASCIIObject*, !dbg !7097
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %45, i32 0, i32 1, !dbg !7098
  %46 = load i64, i64* %length, align 8, !dbg !7098, !tbaa !1937
  %tobool36 = icmp ne i64 %46, 0, !dbg !7099
  %lnot = xor i1 %tobool36, true, !dbg !7099
  br label %lor.end, !dbg !7094

lor.end:                                          ; preds = %lor.rhs, %while.cond.34
  %47 = phi i1 [ true, %while.cond.34 ], [ %lnot, %lor.rhs ]
  br i1 %47, label %while.body.37, label %while.end, !dbg !7100

while.body.37:                                    ; preds = %lor.end
  %48 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7103, !tbaa !1876
  %call38 = call i32 @textiowrapper_read_chunk(%struct.textio* %48, i64 0), !dbg !7105
  store i32 %call38, i32* %res, align 4, !dbg !7106, !tbaa !1883
  %49 = load i32, i32* %res, align 4, !dbg !7107, !tbaa !1883
  %cmp39 = icmp slt i32 %49, 0, !dbg !7109
  br i1 %cmp39, label %if.then.40, label %if.end.45, !dbg !7110

if.then.40:                                       ; preds = %while.body.37
  %call41 = call i32 @_PyIO_trap_eintr(), !dbg !7111
  %tobool42 = icmp ne i32 %call41, 0, !dbg !7111
  br i1 %tobool42, label %if.then.43, label %if.end.44, !dbg !7114

if.then.43:                                       ; preds = %if.then.40
  br label %while.cond.34, !dbg !7115

if.end.44:                                        ; preds = %if.then.40
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7117

if.end.45:                                        ; preds = %while.body.37
  %50 = load i32, i32* %res, align 4, !dbg !7118, !tbaa !1883
  %cmp46 = icmp eq i32 %50, 0, !dbg !7120
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !7121

if.then.47:                                       ; preds = %if.end.45
  br label %while.end, !dbg !7122

if.end.48:                                        ; preds = %if.end.45
  br label %while.cond.34, !dbg !7088

while.end:                                        ; preds = %if.then.47, %lor.end
  %51 = load i32, i32* %res, align 4, !dbg !7123, !tbaa !1883
  %cmp49 = icmp eq i32 %51, 0, !dbg !7124
  br i1 %cmp49, label %if.then.50, label %if.end.70, !dbg !7125

if.then.50:                                       ; preds = %while.end
  %52 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7126, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %52, %struct._object* null), !dbg !7127
  br label %do.body.51, !dbg !7128

do.body.51:                                       ; preds = %if.then.50
  %53 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7129
  call void @llvm.lifetime.start(i64 8, i8* %53) #2, !dbg !7129
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !938, metadata !1880), !dbg !7131
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7132, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %54, i32 0, i32 26, !dbg !7133
  %55 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !7133, !tbaa !4317
  store %struct._object* %55, %struct._object** %_py_tmp, align 8, !dbg !7131, !tbaa !1876
  %56 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7134, !tbaa !1876
  %cmp52 = icmp ne %struct._object* %56, null, !dbg !7135
  br i1 %cmp52, label %if.then.53, label %if.end.67, !dbg !7136

if.then.53:                                       ; preds = %do.body.51
  %57 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7137, !tbaa !1876
  %snapshot54 = getelementptr inbounds %struct.textio, %struct.textio* %57, i32 0, i32 26, !dbg !7139
  store %struct._object* null, %struct._object** %snapshot54, align 8, !dbg !7140, !tbaa !4317
  br label %do.body.55, !dbg !7141

do.body.55:                                       ; preds = %if.then.53
  %58 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7142
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !7142
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !942, metadata !1880), !dbg !7144
  %59 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7145, !tbaa !1876
  store %struct._object* %59, %struct._object** %_py_decref_tmp56, align 8, !dbg !7144, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7146, !tbaa !1876
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !7148
  %61 = load i64, i64* %ob_refcnt57, align 8, !dbg !7149, !tbaa !1927
  %dec58 = add i64 %61, -1, !dbg !7149
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !7149, !tbaa !1927
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !7150
  br i1 %cmp59, label %if.then.60, label %if.else.61, !dbg !7151

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64, !dbg !7152

if.else.61:                                       ; preds = %do.body.55
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7154, !tbaa !1876
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !7156
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !7156, !tbaa !2194
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !7157
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !7157, !tbaa !2196
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !7158, !tbaa !1876
  call void %64(%struct._object* %65), !dbg !7159
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %66 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !7160
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !7160
  br label %do.cond.65, !dbg !7162

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !7163

do.end.66:                                        ; preds = %do.cond.65
  br label %if.end.67, !dbg !7165

if.end.67:                                        ; preds = %do.end.66, %do.body.51
  %67 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7167
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !7167
  br label %do.cond.68, !dbg !7170

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !7171

do.end.69:                                        ; preds = %do.cond.68
  store i64 0, i64* %offset_to_buffer, align 8, !dbg !7173, !tbaa !1941
  store i64 0, i64* %endpos, align 8, !dbg !7174, !tbaa !1941
  store i64 0, i64* %start, align 8, !dbg !7175, !tbaa !1941
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7176

if.end.70:                                        ; preds = %while.end
  %68 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7177, !tbaa !1876
  %cmp71 = icmp eq %struct._object* %68, null, !dbg !7178
  br i1 %cmp71, label %if.then.72, label %if.else.75, !dbg !7179

if.then.72:                                       ; preds = %if.end.70
  %69 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7180, !tbaa !1876
  %decoded_chars73 = getelementptr inbounds %struct.textio, %struct.textio* %69, i32 0, i32 22, !dbg !7182
  %70 = load %struct._object*, %struct._object** %decoded_chars73, align 8, !dbg !7182, !tbaa !4259
  store %struct._object* %70, %struct._object** %line, align 8, !dbg !7183, !tbaa !1876
  %71 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7184, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %71, i32 0, i32 23, !dbg !7185
  %72 = load i64, i64* %decoded_chars_used, align 8, !dbg !7185, !tbaa !5178
  store i64 %72, i64* %start, align 8, !dbg !7186, !tbaa !1941
  store i64 0, i64* %offset_to_buffer, align 8, !dbg !7187, !tbaa !1941
  %73 = load %struct._object*, %struct._object** %line, align 8, !dbg !7188, !tbaa !1876
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !7189
  %74 = load i64, i64* %ob_refcnt74, align 8, !dbg !7190, !tbaa !1927
  %inc = add i64 %74, 1, !dbg !7190
  store i64 %inc, i64* %ob_refcnt74, align 8, !dbg !7190, !tbaa !1927
  br label %if.end.106, !dbg !7191

if.else.75:                                       ; preds = %if.end.70
  %75 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7192, !tbaa !1876
  %76 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7193, !tbaa !1876
  %decoded_chars76 = getelementptr inbounds %struct.textio, %struct.textio* %76, i32 0, i32 22, !dbg !7194
  %77 = load %struct._object*, %struct._object** %decoded_chars76, align 8, !dbg !7194, !tbaa !4259
  %call77 = call %struct._object* @PyUnicode_Concat(%struct._object* %75, %struct._object* %77), !dbg !7195
  store %struct._object* %call77, %struct._object** %line, align 8, !dbg !7196, !tbaa !1876
  store i64 0, i64* %start, align 8, !dbg !7197, !tbaa !1941
  %78 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7198, !tbaa !1876
  %79 = bitcast %struct._object* %78 to %struct.PyASCIIObject*, !dbg !7199
  %length78 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %79, i32 0, i32 1, !dbg !7200
  %80 = load i64, i64* %length78, align 8, !dbg !7200, !tbaa !1937
  store i64 %80, i64* %offset_to_buffer, align 8, !dbg !7201, !tbaa !1941
  br label %do.body.79, !dbg !7202

do.body.79:                                       ; preds = %if.else.75
  %81 = bitcast %struct._object** %_py_tmp80 to i8*, !dbg !7203
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !7203
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp80, metadata !946, metadata !1880), !dbg !7205
  %82 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7206, !tbaa !1876
  store %struct._object* %82, %struct._object** %_py_tmp80, align 8, !dbg !7205, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_tmp80, align 8, !dbg !7207, !tbaa !1876
  %cmp81 = icmp ne %struct._object* %83, null, !dbg !7208
  br i1 %cmp81, label %if.then.82, label %if.end.95, !dbg !7209

if.then.82:                                       ; preds = %do.body.79
  store %struct._object* null, %struct._object** %remaining, align 8, !dbg !7210, !tbaa !1876
  br label %do.body.83, !dbg !7212

do.body.83:                                       ; preds = %if.then.82
  %84 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !7213
  call void @llvm.lifetime.start(i64 8, i8* %84) #2, !dbg !7213
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !950, metadata !1880), !dbg !7215
  %85 = load %struct._object*, %struct._object** %_py_tmp80, align 8, !dbg !7216, !tbaa !1876
  store %struct._object* %85, %struct._object** %_py_decref_tmp84, align 8, !dbg !7215, !tbaa !1876
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !7217, !tbaa !1876
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 0, !dbg !7219
  %87 = load i64, i64* %ob_refcnt85, align 8, !dbg !7220, !tbaa !1927
  %dec86 = add i64 %87, -1, !dbg !7220
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !7220, !tbaa !1927
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !7221
  br i1 %cmp87, label %if.then.88, label %if.else.89, !dbg !7222

if.then.88:                                       ; preds = %do.body.83
  br label %if.end.92, !dbg !7223

if.else.89:                                       ; preds = %do.body.83
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !7225, !tbaa !1876
  %ob_type90 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !7227
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type90, align 8, !dbg !7227, !tbaa !2194
  %tp_dealloc91 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %89, i32 0, i32 4, !dbg !7228
  %90 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc91, align 8, !dbg !7228, !tbaa !2196
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !7229, !tbaa !1876
  call void %90(%struct._object* %91), !dbg !7230
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.89, %if.then.88
  %92 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !7231
  call void @llvm.lifetime.end(i64 8, i8* %92) #2, !dbg !7231
  br label %do.cond.93, !dbg !7233

do.cond.93:                                       ; preds = %if.end.92
  br label %do.end.94, !dbg !7234

do.end.94:                                        ; preds = %do.cond.93
  br label %if.end.95, !dbg !7236

if.end.95:                                        ; preds = %do.end.94, %do.body.79
  %93 = bitcast %struct._object** %_py_tmp80 to i8*, !dbg !7238
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !7238
  br label %do.cond.96, !dbg !7241

do.cond.96:                                       ; preds = %if.end.95
  br label %do.end.97, !dbg !7242

do.end.97:                                        ; preds = %do.cond.96
  %94 = load %struct._object*, %struct._object** %line, align 8, !dbg !7244, !tbaa !1876
  %cmp98 = icmp eq %struct._object* %94, null, !dbg !7246
  br i1 %cmp98, label %if.then.99, label %if.end.100, !dbg !7247

if.then.99:                                       ; preds = %do.end.97
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7248

if.end.100:                                       ; preds = %do.end.97
  %95 = load %struct._object*, %struct._object** %line, align 8, !dbg !7249, !tbaa !1876
  %96 = bitcast %struct._object* %95 to %struct.PyASCIIObject*, !dbg !7251
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %96, i32 0, i32 3, !dbg !7252
  %97 = bitcast %struct.anon* %state to i32*, !dbg !7253
  %bf.load = load i32, i32* %97, align 4, !dbg !7253
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !7253
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7253
  %tobool101 = icmp ne i32 %bf.clear, 0, !dbg !7254
  br i1 %tobool101, label %cond.true, label %cond.false, !dbg !7254

cond.true:                                        ; preds = %if.end.100
  br label %cond.end, !dbg !7255

cond.false:                                       ; preds = %if.end.100
  %98 = load %struct._object*, %struct._object** %line, align 8, !dbg !7257, !tbaa !1876
  %call102 = call i32 @_PyUnicode_Ready(%struct._object* %98), !dbg !7259
  br label %cond.end, !dbg !7254

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call102, %cond.false ], !dbg !7254
  %cmp103 = icmp eq i32 %cond, -1, !dbg !7260
  br i1 %cmp103, label %if.then.104, label %if.end.105, !dbg !7263

if.then.104:                                      ; preds = %cond.end
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7264

if.end.105:                                       ; preds = %cond.end
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.then.72
  %99 = load %struct._object*, %struct._object** %line, align 8, !dbg !7265, !tbaa !1876
  %100 = bitcast %struct._object* %99 to %struct.PyASCIIObject*, !dbg !7266
  %state107 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %100, i32 0, i32 3, !dbg !7267
  %101 = bitcast %struct.anon* %state107 to i32*, !dbg !7268
  %bf.load108 = load i32, i32* %101, align 4, !dbg !7268
  %bf.lshr109 = lshr i32 %bf.load108, 5, !dbg !7268
  %bf.clear110 = and i32 %bf.lshr109, 1, !dbg !7268
  %tobool111 = icmp ne i32 %bf.clear110, 0, !dbg !7269
  br i1 %tobool111, label %cond.true.112, label %cond.false.123, !dbg !7269

cond.true.112:                                    ; preds = %if.end.106
  %102 = load %struct._object*, %struct._object** %line, align 8, !dbg !7270, !tbaa !1876
  %103 = bitcast %struct._object* %102 to %struct.PyASCIIObject*, !dbg !7271
  %state113 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %103, i32 0, i32 3, !dbg !7272
  %104 = bitcast %struct.anon* %state113 to i32*, !dbg !7273
  %bf.load114 = load i32, i32* %104, align 4, !dbg !7273
  %bf.lshr115 = lshr i32 %bf.load114, 6, !dbg !7273
  %bf.clear116 = and i32 %bf.lshr115, 1, !dbg !7273
  %tobool117 = icmp ne i32 %bf.clear116, 0, !dbg !7274
  br i1 %tobool117, label %cond.true.118, label %cond.false.119, !dbg !7274

cond.true.118:                                    ; preds = %cond.true.112
  %105 = load %struct._object*, %struct._object** %line, align 8, !dbg !7275, !tbaa !1876
  %106 = bitcast %struct._object* %105 to %struct.PyASCIIObject*, !dbg !7277
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %106, i64 1, !dbg !7278
  %107 = bitcast %struct.PyASCIIObject* %add.ptr to i8*, !dbg !7279
  br label %cond.end.121, !dbg !7274

cond.false.119:                                   ; preds = %cond.true.112
  %108 = load %struct._object*, %struct._object** %line, align 8, !dbg !7280, !tbaa !1876
  %109 = bitcast %struct._object* %108 to %struct.PyCompactUnicodeObject*, !dbg !7282
  %add.ptr120 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %109, i64 1, !dbg !7283
  %110 = bitcast %struct.PyCompactUnicodeObject* %add.ptr120 to i8*, !dbg !7284
  br label %cond.end.121, !dbg !7274

cond.end.121:                                     ; preds = %cond.false.119, %cond.true.118
  %cond122 = phi i8* [ %107, %cond.true.118 ], [ %110, %cond.false.119 ], !dbg !7274
  br label %cond.end.124, !dbg !7285

cond.false.123:                                   ; preds = %if.end.106
  %111 = load %struct._object*, %struct._object** %line, align 8, !dbg !7288, !tbaa !1876
  %112 = bitcast %struct._object* %111 to %struct.PyUnicodeObject*, !dbg !7289
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %112, i32 0, i32 1, !dbg !7290
  %any = bitcast %union.anon* %data to i8**, !dbg !7291
  %113 = load i8*, i8** %any, align 8, !dbg !7291, !tbaa !1876
  br label %cond.end.124, !dbg !7269

cond.end.124:                                     ; preds = %cond.false.123, %cond.end.121
  %cond125 = phi i8* [ %cond122, %cond.end.121 ], [ %113, %cond.false.123 ], !dbg !7269
  store i8* %cond125, i8** %ptr, align 8, !dbg !7292, !tbaa !1876
  %114 = load %struct._object*, %struct._object** %line, align 8, !dbg !7295, !tbaa !1876
  %115 = bitcast %struct._object* %114 to %struct.PyASCIIObject*, !dbg !7296
  %length126 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %115, i32 0, i32 1, !dbg !7297
  %116 = load i64, i64* %length126, align 8, !dbg !7297, !tbaa !1937
  store i64 %116, i64* %line_len, align 8, !dbg !7298, !tbaa !1941
  %117 = load %struct._object*, %struct._object** %line, align 8, !dbg !7299, !tbaa !1876
  %118 = bitcast %struct._object* %117 to %struct.PyASCIIObject*, !dbg !7300
  %state127 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %118, i32 0, i32 3, !dbg !7301
  %119 = bitcast %struct.anon* %state127 to i32*, !dbg !7302
  %bf.load128 = load i32, i32* %119, align 4, !dbg !7302
  %bf.lshr129 = lshr i32 %bf.load128, 2, !dbg !7302
  %bf.clear130 = and i32 %bf.lshr129, 7, !dbg !7302
  store i32 %bf.clear130, i32* %kind, align 4, !dbg !7303, !tbaa !1883
  %120 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7304, !tbaa !1876
  %readtranslate = getelementptr inbounds %struct.textio, %struct.textio* %120, i32 0, i32 14, !dbg !7305
  %121 = load i8, i8* %readtranslate, align 1, !dbg !7305, !tbaa !5596
  %conv = sext i8 %121 to i32, !dbg !7304
  %122 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7306, !tbaa !1876
  %readuniversal = getelementptr inbounds %struct.textio, %struct.textio* %122, i32 0, i32 13, !dbg !7307
  %123 = load i8, i8* %readuniversal, align 1, !dbg !7307, !tbaa !5579
  %conv131 = sext i8 %123 to i32, !dbg !7306
  %124 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7308, !tbaa !1876
  %readnl = getelementptr inbounds %struct.textio, %struct.textio* %124, i32 0, i32 8, !dbg !7309
  %125 = load %struct._object*, %struct._object** %readnl, align 8, !dbg !7309, !tbaa !4230
  %126 = load i32, i32* %kind, align 4, !dbg !7310, !tbaa !1883
  %127 = load i8*, i8** %ptr, align 8, !dbg !7311, !tbaa !1876
  %128 = load i32, i32* %kind, align 4, !dbg !7312, !tbaa !1883
  %conv132 = sext i32 %128 to i64, !dbg !7312
  %129 = load i64, i64* %start, align 8, !dbg !7313, !tbaa !1941
  %mul = mul i64 %conv132, %129, !dbg !7314
  %add.ptr133 = getelementptr i8, i8* %127, i64 %mul, !dbg !7315
  %130 = load i8*, i8** %ptr, align 8, !dbg !7316, !tbaa !1876
  %131 = load i32, i32* %kind, align 4, !dbg !7317, !tbaa !1883
  %conv134 = sext i32 %131 to i64, !dbg !7317
  %132 = load i64, i64* %line_len, align 8, !dbg !7318, !tbaa !1941
  %mul135 = mul i64 %conv134, %132, !dbg !7319
  %add.ptr136 = getelementptr i8, i8* %130, i64 %mul135, !dbg !7320
  %call137 = call i64 @_PyIO_find_line_ending(i32 %conv, i32 %conv131, %struct._object* %125, i32 %126, i8* %add.ptr133, i8* %add.ptr136, i64* %consumed), !dbg !7321
  store i64 %call137, i64* %endpos, align 8, !dbg !7322, !tbaa !1941
  %133 = load i64, i64* %endpos, align 8, !dbg !7323, !tbaa !1941
  %cmp138 = icmp sge i64 %133, 0, !dbg !7325
  br i1 %cmp138, label %if.then.140, label %if.end.150, !dbg !7326

if.then.140:                                      ; preds = %cond.end.124
  %134 = load i64, i64* %start, align 8, !dbg !7327, !tbaa !1941
  %135 = load i64, i64* %endpos, align 8, !dbg !7329, !tbaa !1941
  %add = add i64 %135, %134, !dbg !7329
  store i64 %add, i64* %endpos, align 8, !dbg !7329, !tbaa !1941
  %136 = load i64, i64* %limit.addr, align 8, !dbg !7330, !tbaa !1941
  %cmp141 = icmp sge i64 %136, 0, !dbg !7332
  br i1 %cmp141, label %land.lhs.true, label %if.end.149, !dbg !7333

land.lhs.true:                                    ; preds = %if.then.140
  %137 = load i64, i64* %endpos, align 8, !dbg !7334, !tbaa !1941
  %138 = load i64, i64* %start, align 8, !dbg !7336, !tbaa !1941
  %sub = sub i64 %137, %138, !dbg !7337
  %139 = load i64, i64* %chunked, align 8, !dbg !7338, !tbaa !1941
  %add143 = add i64 %sub, %139, !dbg !7339
  %140 = load i64, i64* %limit.addr, align 8, !dbg !7340, !tbaa !1941
  %cmp144 = icmp sge i64 %add143, %140, !dbg !7341
  br i1 %cmp144, label %if.then.146, label %if.end.149, !dbg !7342

if.then.146:                                      ; preds = %land.lhs.true
  %141 = load i64, i64* %start, align 8, !dbg !7343, !tbaa !1941
  %142 = load i64, i64* %limit.addr, align 8, !dbg !7344, !tbaa !1941
  %add147 = add i64 %141, %142, !dbg !7345
  %143 = load i64, i64* %chunked, align 8, !dbg !7346, !tbaa !1941
  %sub148 = sub i64 %add147, %143, !dbg !7347
  store i64 %sub148, i64* %endpos, align 8, !dbg !7348, !tbaa !1941
  br label %if.end.149, !dbg !7349

if.end.149:                                       ; preds = %if.then.146, %land.lhs.true, %if.then.140
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7350

if.end.150:                                       ; preds = %cond.end.124
  %144 = load i64, i64* %consumed, align 8, !dbg !7351, !tbaa !1941
  %145 = load i64, i64* %start, align 8, !dbg !7352, !tbaa !1941
  %add151 = add i64 %144, %145, !dbg !7353
  store i64 %add151, i64* %endpos, align 8, !dbg !7354, !tbaa !1941
  %146 = load i64, i64* %limit.addr, align 8, !dbg !7355, !tbaa !1941
  %cmp152 = icmp sge i64 %146, 0, !dbg !7357
  br i1 %cmp152, label %land.lhs.true.154, label %if.end.162, !dbg !7358

land.lhs.true.154:                                ; preds = %if.end.150
  %147 = load i64, i64* %endpos, align 8, !dbg !7359, !tbaa !1941
  %148 = load i64, i64* %start, align 8, !dbg !7361, !tbaa !1941
  %sub155 = sub i64 %147, %148, !dbg !7362
  %149 = load i64, i64* %chunked, align 8, !dbg !7363, !tbaa !1941
  %add156 = add i64 %sub155, %149, !dbg !7364
  %150 = load i64, i64* %limit.addr, align 8, !dbg !7365, !tbaa !1941
  %cmp157 = icmp sge i64 %add156, %150, !dbg !7366
  br i1 %cmp157, label %if.then.159, label %if.end.162, !dbg !7367

if.then.159:                                      ; preds = %land.lhs.true.154
  %151 = load i64, i64* %start, align 8, !dbg !7368, !tbaa !1941
  %152 = load i64, i64* %limit.addr, align 8, !dbg !7370, !tbaa !1941
  %add160 = add i64 %151, %152, !dbg !7371
  %153 = load i64, i64* %chunked, align 8, !dbg !7372, !tbaa !1941
  %sub161 = sub i64 %add160, %153, !dbg !7373
  store i64 %sub161, i64* %endpos, align 8, !dbg !7374, !tbaa !1941
  store i32 7, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7375

if.end.162:                                       ; preds = %land.lhs.true.154, %if.end.150
  %154 = load i64, i64* %endpos, align 8, !dbg !7376, !tbaa !1941
  %155 = load i64, i64* %start, align 8, !dbg !7377, !tbaa !1941
  %cmp163 = icmp sgt i64 %154, %155, !dbg !7378
  br i1 %cmp163, label %if.then.165, label %if.end.216, !dbg !7379

if.then.165:                                      ; preds = %if.end.162
  %156 = bitcast %struct._object** %s to i8*, !dbg !7380
  call void @llvm.lifetime.start(i64 8, i8* %156) #2, !dbg !7380
  call void @llvm.dbg.declare(metadata %struct._object** %s, metadata !954, metadata !1880), !dbg !7381
  %157 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7382, !tbaa !1876
  %cmp166 = icmp eq %struct._object* %157, null, !dbg !7384
  br i1 %cmp166, label %if.then.168, label %if.end.174, !dbg !7385

if.then.168:                                      ; preds = %if.then.165
  %call169 = call %struct._object* @PyList_New(i64 0), !dbg !7386
  store %struct._object* %call169, %struct._object** %chunks, align 8, !dbg !7388, !tbaa !1876
  %158 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7389, !tbaa !1876
  %cmp170 = icmp eq %struct._object* %158, null, !dbg !7391
  br i1 %cmp170, label %if.then.172, label %if.end.173, !dbg !7392

if.then.172:                                      ; preds = %if.then.168
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.213, !dbg !7393

if.end.173:                                       ; preds = %if.then.168
  br label %if.end.174, !dbg !7394

if.end.174:                                       ; preds = %if.end.173, %if.then.165
  %159 = load %struct._object*, %struct._object** %line, align 8, !dbg !7395, !tbaa !1876
  %160 = load i64, i64* %start, align 8, !dbg !7396, !tbaa !1941
  %161 = load i64, i64* %endpos, align 8, !dbg !7397, !tbaa !1941
  %call175 = call %struct._object* @PyUnicode_Substring(%struct._object* %159, i64 %160, i64 %161), !dbg !7398
  store %struct._object* %call175, %struct._object** %s, align 8, !dbg !7399, !tbaa !1876
  %162 = load %struct._object*, %struct._object** %s, align 8, !dbg !7400, !tbaa !1876
  %cmp176 = icmp eq %struct._object* %162, null, !dbg !7402
  br i1 %cmp176, label %if.then.178, label %if.end.179, !dbg !7403

if.then.178:                                      ; preds = %if.end.174
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.213, !dbg !7404

if.end.179:                                       ; preds = %if.end.174
  %163 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7405, !tbaa !1876
  %164 = load %struct._object*, %struct._object** %s, align 8, !dbg !7406, !tbaa !1876
  %call180 = call i32 @PyList_Append(%struct._object* %163, %struct._object* %164), !dbg !7407
  %cmp181 = icmp slt i32 %call180, 0, !dbg !7408
  br i1 %cmp181, label %if.then.183, label %if.end.197, !dbg !7409

if.then.183:                                      ; preds = %if.end.179
  br label %do.body.184, !dbg !7410

do.body.184:                                      ; preds = %if.then.183
  %165 = bitcast %struct._object** %_py_decref_tmp185 to i8*, !dbg !7411
  call void @llvm.lifetime.start(i64 8, i8* %165) #2, !dbg !7411
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp185, metadata !957, metadata !1880), !dbg !7413
  %166 = load %struct._object*, %struct._object** %s, align 8, !dbg !7414, !tbaa !1876
  store %struct._object* %166, %struct._object** %_py_decref_tmp185, align 8, !dbg !7413, !tbaa !1876
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !7415, !tbaa !1876
  %ob_refcnt186 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 0, !dbg !7417
  %168 = load i64, i64* %ob_refcnt186, align 8, !dbg !7418, !tbaa !1927
  %dec187 = add i64 %168, -1, !dbg !7418
  store i64 %dec187, i64* %ob_refcnt186, align 8, !dbg !7418, !tbaa !1927
  %cmp188 = icmp ne i64 %dec187, 0, !dbg !7419
  br i1 %cmp188, label %if.then.190, label %if.else.191, !dbg !7420

if.then.190:                                      ; preds = %do.body.184
  br label %if.end.194, !dbg !7421

if.else.191:                                      ; preds = %do.body.184
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !7423, !tbaa !1876
  %ob_type192 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 1, !dbg !7425
  %170 = load %struct._typeobject*, %struct._typeobject** %ob_type192, align 8, !dbg !7425, !tbaa !2194
  %tp_dealloc193 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %170, i32 0, i32 4, !dbg !7426
  %171 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc193, align 8, !dbg !7426, !tbaa !2196
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !7427, !tbaa !1876
  call void %171(%struct._object* %172), !dbg !7428
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.then.190
  %173 = bitcast %struct._object** %_py_decref_tmp185 to i8*, !dbg !7429
  call void @llvm.lifetime.end(i64 8, i8* %173) #2, !dbg !7429
  br label %do.cond.195, !dbg !7431

do.cond.195:                                      ; preds = %if.end.194
  br label %do.end.196, !dbg !7432

do.end.196:                                       ; preds = %do.cond.195
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.213, !dbg !7434

if.end.197:                                       ; preds = %if.end.179
  %174 = load %struct._object*, %struct._object** %s, align 8, !dbg !7435, !tbaa !1876
  %175 = bitcast %struct._object* %174 to %struct.PyASCIIObject*, !dbg !7436
  %length198 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %175, i32 0, i32 1, !dbg !7437
  %176 = load i64, i64* %length198, align 8, !dbg !7437, !tbaa !1937
  %177 = load i64, i64* %chunked, align 8, !dbg !7438, !tbaa !1941
  %add199 = add i64 %177, %176, !dbg !7438
  store i64 %add199, i64* %chunked, align 8, !dbg !7438, !tbaa !1941
  br label %do.body.200, !dbg !7439

do.body.200:                                      ; preds = %if.end.197
  %178 = bitcast %struct._object** %_py_decref_tmp201 to i8*, !dbg !7440
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !7440
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp201, metadata !961, metadata !1880), !dbg !7442
  %179 = load %struct._object*, %struct._object** %s, align 8, !dbg !7443, !tbaa !1876
  store %struct._object* %179, %struct._object** %_py_decref_tmp201, align 8, !dbg !7442, !tbaa !1876
  %180 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !7444, !tbaa !1876
  %ob_refcnt202 = getelementptr inbounds %struct._object, %struct._object* %180, i32 0, i32 0, !dbg !7446
  %181 = load i64, i64* %ob_refcnt202, align 8, !dbg !7447, !tbaa !1927
  %dec203 = add i64 %181, -1, !dbg !7447
  store i64 %dec203, i64* %ob_refcnt202, align 8, !dbg !7447, !tbaa !1927
  %cmp204 = icmp ne i64 %dec203, 0, !dbg !7448
  br i1 %cmp204, label %if.then.206, label %if.else.207, !dbg !7449

if.then.206:                                      ; preds = %do.body.200
  br label %if.end.210, !dbg !7450

if.else.207:                                      ; preds = %do.body.200
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !7452, !tbaa !1876
  %ob_type208 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 1, !dbg !7454
  %183 = load %struct._typeobject*, %struct._typeobject** %ob_type208, align 8, !dbg !7454, !tbaa !2194
  %tp_dealloc209 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %183, i32 0, i32 4, !dbg !7455
  %184 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc209, align 8, !dbg !7455, !tbaa !2196
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !7456, !tbaa !1876
  call void %184(%struct._object* %185), !dbg !7457
  br label %if.end.210

if.end.210:                                       ; preds = %if.else.207, %if.then.206
  %186 = bitcast %struct._object** %_py_decref_tmp201 to i8*, !dbg !7458
  call void @llvm.lifetime.end(i64 8, i8* %186) #2, !dbg !7458
  br label %do.cond.211, !dbg !7460

do.cond.211:                                      ; preds = %if.end.210
  br label %do.end.212, !dbg !7461

do.end.212:                                       ; preds = %do.cond.211
  store i32 0, i32* %cleanup.dest.slot, !dbg !7463
  br label %cleanup.213, !dbg !7463

cleanup.213:                                      ; preds = %do.end.212, %do.end.196, %if.then.178, %if.then.172
  %187 = bitcast %struct._object** %s to i8*, !dbg !7464
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !7464
  %cleanup.dest.214 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.213
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.214, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.215, label %NewDefault.1

cleanup.cont.215:                                 ; preds = %LeafBlock.2
  br label %if.end.216, !dbg !7466

if.end.216:                                       ; preds = %cleanup.cont.215, %if.end.162
  %188 = load i64, i64* %endpos, align 8, !dbg !7467, !tbaa !1941
  %189 = load i64, i64* %line_len, align 8, !dbg !7469, !tbaa !1941
  %cmp217 = icmp slt i64 %188, %189, !dbg !7470
  br i1 %cmp217, label %if.then.219, label %if.end.225, !dbg !7471

if.then.219:                                      ; preds = %if.end.216
  %190 = load %struct._object*, %struct._object** %line, align 8, !dbg !7472, !tbaa !1876
  %191 = load i64, i64* %endpos, align 8, !dbg !7474, !tbaa !1941
  %192 = load i64, i64* %line_len, align 8, !dbg !7475, !tbaa !1941
  %call220 = call %struct._object* @PyUnicode_Substring(%struct._object* %190, i64 %191, i64 %192), !dbg !7476
  store %struct._object* %call220, %struct._object** %remaining, align 8, !dbg !7477, !tbaa !1876
  %193 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7478, !tbaa !1876
  %cmp221 = icmp eq %struct._object* %193, null, !dbg !7480
  br i1 %cmp221, label %if.then.223, label %if.end.224, !dbg !7481

if.then.223:                                      ; preds = %if.then.219
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.247, !dbg !7482

if.end.224:                                       ; preds = %if.then.219
  br label %if.end.225, !dbg !7483

if.end.225:                                       ; preds = %if.end.224, %if.end.216
  br label %do.body.226, !dbg !7484

do.body.226:                                      ; preds = %if.end.225
  %194 = bitcast %struct._object** %_py_tmp227 to i8*, !dbg !7485
  call void @llvm.lifetime.start(i64 8, i8* %194) #2, !dbg !7485
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp227, metadata !963, metadata !1880), !dbg !7487
  %195 = load %struct._object*, %struct._object** %line, align 8, !dbg !7488, !tbaa !1876
  store %struct._object* %195, %struct._object** %_py_tmp227, align 8, !dbg !7487, !tbaa !1876
  %196 = load %struct._object*, %struct._object** %_py_tmp227, align 8, !dbg !7489, !tbaa !1876
  %cmp228 = icmp ne %struct._object* %196, null, !dbg !7490
  br i1 %cmp228, label %if.then.230, label %if.end.244, !dbg !7491

if.then.230:                                      ; preds = %do.body.226
  store %struct._object* null, %struct._object** %line, align 8, !dbg !7492, !tbaa !1876
  br label %do.body.231, !dbg !7494

do.body.231:                                      ; preds = %if.then.230
  %197 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !7495
  call void @llvm.lifetime.start(i64 8, i8* %197) #2, !dbg !7495
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !965, metadata !1880), !dbg !7497
  %198 = load %struct._object*, %struct._object** %_py_tmp227, align 8, !dbg !7498, !tbaa !1876
  store %struct._object* %198, %struct._object** %_py_decref_tmp232, align 8, !dbg !7497, !tbaa !1876
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !7499, !tbaa !1876
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 0, !dbg !7501
  %200 = load i64, i64* %ob_refcnt233, align 8, !dbg !7502, !tbaa !1927
  %dec234 = add i64 %200, -1, !dbg !7502
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !7502, !tbaa !1927
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !7503
  br i1 %cmp235, label %if.then.237, label %if.else.238, !dbg !7504

if.then.237:                                      ; preds = %do.body.231
  br label %if.end.241, !dbg !7505

if.else.238:                                      ; preds = %do.body.231
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !7507, !tbaa !1876
  %ob_type239 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 1, !dbg !7509
  %202 = load %struct._typeobject*, %struct._typeobject** %ob_type239, align 8, !dbg !7509, !tbaa !2194
  %tp_dealloc240 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %202, i32 0, i32 4, !dbg !7510
  %203 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc240, align 8, !dbg !7510, !tbaa !2196
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !7511, !tbaa !1876
  call void %203(%struct._object* %204), !dbg !7512
  br label %if.end.241

if.end.241:                                       ; preds = %if.else.238, %if.then.237
  %205 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !7513
  call void @llvm.lifetime.end(i64 8, i8* %205) #2, !dbg !7513
  br label %do.cond.242, !dbg !7515

do.cond.242:                                      ; preds = %if.end.241
  br label %do.end.243, !dbg !7516

do.end.243:                                       ; preds = %do.cond.242
  br label %if.end.244, !dbg !7518

if.end.244:                                       ; preds = %do.end.243, %do.body.226
  %206 = bitcast %struct._object** %_py_tmp227 to i8*, !dbg !7520
  call void @llvm.lifetime.end(i64 8, i8* %206) #2, !dbg !7520
  br label %do.cond.245, !dbg !7522

do.cond.245:                                      ; preds = %if.end.244
  br label %do.end.246, !dbg !7523

do.end.246:                                       ; preds = %do.cond.245
  %207 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7525, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %207, %struct._object* null), !dbg !7526
  store i32 0, i32* %cleanup.dest.slot, !dbg !7527
  br label %cleanup.247, !dbg !7527

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.247

cleanup.247:                                      ; preds = %NewDefault.1, %do.end.246, %if.then.223, %if.then.159, %if.end.149, %if.then.104, %if.then.99, %do.end.69, %if.end.44
  %208 = bitcast i64* %consumed to i8*, !dbg !7528
  call void @llvm.lifetime.end(i64 8, i8* %208) #2, !dbg !7528
  %209 = bitcast i32* %kind to i8*, !dbg !7528
  call void @llvm.lifetime.end(i64 4, i8* %209) #2, !dbg !7528
  %210 = bitcast i64* %line_len to i8*, !dbg !7528
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !7528
  %211 = bitcast i8** %ptr to i8*, !dbg !7528
  call void @llvm.lifetime.end(i64 8, i8* %211) #2, !dbg !7528
  %cleanup.dest.251 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.11

NodeBlock.11:                                     ; preds = %cleanup.247
  %Pivot.12 = icmp slt i32 %cleanup.dest.251, 7
  br i1 %Pivot.12, label %LeafBlock.5, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.11
  %Pivot = icmp slt i32 %cleanup.dest.251, 10
  br i1 %Pivot, label %LeafBlock.7, label %LeafBlock.9

LeafBlock.9:                                      ; preds = %NodeBlock
  %SwitchLeaf10 = icmp eq i32 %cleanup.dest.251, 10
  br i1 %SwitchLeaf10, label %error, label %NewDefault.4

LeafBlock.7:                                      ; preds = %NodeBlock
  %SwitchLeaf8 = icmp eq i32 %cleanup.dest.251, 7
  br i1 %SwitchLeaf8, label %while.end.253, label %NewDefault.4

LeafBlock.5:                                      ; preds = %NodeBlock.11
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.251, 0
  br i1 %SwitchLeaf6, label %cleanup.cont.252, label %NewDefault.4

cleanup.cont.252:                                 ; preds = %LeafBlock.5
  br label %while.cond, !dbg !7075

while.end.253:                                    ; preds = %LeafBlock.7
  %212 = load %struct._object*, %struct._object** %line, align 8, !dbg !7529, !tbaa !1876
  %cmp254 = icmp ne %struct._object* %212, null, !dbg !7530
  br i1 %cmp254, label %if.then.256, label %if.end.296, !dbg !7531

if.then.256:                                      ; preds = %while.end.253
  %213 = load i64, i64* %endpos, align 8, !dbg !7532, !tbaa !1941
  %214 = load i64, i64* %offset_to_buffer, align 8, !dbg !7533, !tbaa !1941
  %sub257 = sub i64 %213, %214, !dbg !7534
  %215 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7535, !tbaa !1876
  %decoded_chars_used258 = getelementptr inbounds %struct.textio, %struct.textio* %215, i32 0, i32 23, !dbg !7536
  store i64 %sub257, i64* %decoded_chars_used258, align 8, !dbg !7537, !tbaa !5178
  %216 = load i64, i64* %start, align 8, !dbg !7538, !tbaa !1941
  %cmp259 = icmp sgt i64 %216, 0, !dbg !7539
  br i1 %cmp259, label %if.then.264, label %lor.lhs.false, !dbg !7540

lor.lhs.false:                                    ; preds = %if.then.256
  %217 = load i64, i64* %endpos, align 8, !dbg !7541, !tbaa !1941
  %218 = load %struct._object*, %struct._object** %line, align 8, !dbg !7543, !tbaa !1876
  %219 = bitcast %struct._object* %218 to %struct.PyASCIIObject*, !dbg !7544
  %length261 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %219, i32 0, i32 1, !dbg !7545
  %220 = load i64, i64* %length261, align 8, !dbg !7545, !tbaa !1937
  %cmp262 = icmp slt i64 %217, %220, !dbg !7546
  br i1 %cmp262, label %if.then.264, label %if.end.295, !dbg !7547

if.then.264:                                      ; preds = %lor.lhs.false, %if.then.256
  %221 = bitcast %struct._object** %s265 to i8*, !dbg !7548
  call void @llvm.lifetime.start(i64 8, i8* %221) #2, !dbg !7548
  call void @llvm.dbg.declare(metadata %struct._object** %s265, metadata !969, metadata !1880), !dbg !7549
  %222 = load %struct._object*, %struct._object** %line, align 8, !dbg !7550, !tbaa !1876
  %223 = load i64, i64* %start, align 8, !dbg !7551, !tbaa !1941
  %224 = load i64, i64* %endpos, align 8, !dbg !7552, !tbaa !1941
  %call266 = call %struct._object* @PyUnicode_Substring(%struct._object* %222, i64 %223, i64 %224), !dbg !7553
  store %struct._object* %call266, %struct._object** %s265, align 8, !dbg !7549, !tbaa !1876
  br label %do.body.267, !dbg !7554

do.body.267:                                      ; preds = %if.then.264
  %225 = bitcast %struct._object** %_py_tmp268 to i8*, !dbg !7555
  call void @llvm.lifetime.start(i64 8, i8* %225) #2, !dbg !7555
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp268, metadata !974, metadata !1880), !dbg !7557
  %226 = load %struct._object*, %struct._object** %line, align 8, !dbg !7558, !tbaa !1876
  store %struct._object* %226, %struct._object** %_py_tmp268, align 8, !dbg !7557, !tbaa !1876
  %227 = load %struct._object*, %struct._object** %_py_tmp268, align 8, !dbg !7559, !tbaa !1876
  %cmp269 = icmp ne %struct._object* %227, null, !dbg !7560
  br i1 %cmp269, label %if.then.271, label %if.end.285, !dbg !7561

if.then.271:                                      ; preds = %do.body.267
  store %struct._object* null, %struct._object** %line, align 8, !dbg !7562, !tbaa !1876
  br label %do.body.272, !dbg !7564

do.body.272:                                      ; preds = %if.then.271
  %228 = bitcast %struct._object** %_py_decref_tmp273 to i8*, !dbg !7565
  call void @llvm.lifetime.start(i64 8, i8* %228) #2, !dbg !7565
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp273, metadata !976, metadata !1880), !dbg !7567
  %229 = load %struct._object*, %struct._object** %_py_tmp268, align 8, !dbg !7568, !tbaa !1876
  store %struct._object* %229, %struct._object** %_py_decref_tmp273, align 8, !dbg !7567, !tbaa !1876
  %230 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8, !dbg !7569, !tbaa !1876
  %ob_refcnt274 = getelementptr inbounds %struct._object, %struct._object* %230, i32 0, i32 0, !dbg !7571
  %231 = load i64, i64* %ob_refcnt274, align 8, !dbg !7572, !tbaa !1927
  %dec275 = add i64 %231, -1, !dbg !7572
  store i64 %dec275, i64* %ob_refcnt274, align 8, !dbg !7572, !tbaa !1927
  %cmp276 = icmp ne i64 %dec275, 0, !dbg !7573
  br i1 %cmp276, label %if.then.278, label %if.else.279, !dbg !7574

if.then.278:                                      ; preds = %do.body.272
  br label %if.end.282, !dbg !7575

if.else.279:                                      ; preds = %do.body.272
  %232 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8, !dbg !7577, !tbaa !1876
  %ob_type280 = getelementptr inbounds %struct._object, %struct._object* %232, i32 0, i32 1, !dbg !7579
  %233 = load %struct._typeobject*, %struct._typeobject** %ob_type280, align 8, !dbg !7579, !tbaa !2194
  %tp_dealloc281 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %233, i32 0, i32 4, !dbg !7580
  %234 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc281, align 8, !dbg !7580, !tbaa !2196
  %235 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8, !dbg !7581, !tbaa !1876
  call void %234(%struct._object* %235), !dbg !7582
  br label %if.end.282

if.end.282:                                       ; preds = %if.else.279, %if.then.278
  %236 = bitcast %struct._object** %_py_decref_tmp273 to i8*, !dbg !7583
  call void @llvm.lifetime.end(i64 8, i8* %236) #2, !dbg !7583
  br label %do.cond.283, !dbg !7585

do.cond.283:                                      ; preds = %if.end.282
  br label %do.end.284, !dbg !7586

do.end.284:                                       ; preds = %do.cond.283
  br label %if.end.285, !dbg !7588

if.end.285:                                       ; preds = %do.end.284, %do.body.267
  %237 = bitcast %struct._object** %_py_tmp268 to i8*, !dbg !7590
  call void @llvm.lifetime.end(i64 8, i8* %237) #2, !dbg !7590
  br label %do.cond.286, !dbg !7593

do.cond.286:                                      ; preds = %if.end.285
  br label %do.end.287, !dbg !7594

do.end.287:                                       ; preds = %do.cond.286
  %238 = load %struct._object*, %struct._object** %s265, align 8, !dbg !7596, !tbaa !1876
  %cmp288 = icmp eq %struct._object* %238, null, !dbg !7598
  br i1 %cmp288, label %if.then.290, label %if.end.291, !dbg !7599

if.then.290:                                      ; preds = %do.end.287
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.292, !dbg !7600

if.end.291:                                       ; preds = %do.end.287
  %239 = load %struct._object*, %struct._object** %s265, align 8, !dbg !7601, !tbaa !1876
  store %struct._object* %239, %struct._object** %line, align 8, !dbg !7602, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !7603
  br label %cleanup.292, !dbg !7603

cleanup.292:                                      ; preds = %if.end.291, %if.then.290
  %240 = bitcast %struct._object** %s265 to i8*, !dbg !7604
  call void @llvm.lifetime.end(i64 8, i8* %240) #2, !dbg !7604
  %cleanup.dest.293 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.18

NodeBlock.18:                                     ; preds = %cleanup.292
  %Pivot.19 = icmp slt i32 %cleanup.dest.293, 10
  br i1 %Pivot.19, label %LeafBlock.14, label %LeafBlock.16

LeafBlock.16:                                     ; preds = %NodeBlock.18
  %SwitchLeaf17 = icmp eq i32 %cleanup.dest.293, 10
  br i1 %SwitchLeaf17, label %error, label %NewDefault.13

LeafBlock.14:                                     ; preds = %NodeBlock.18
  %SwitchLeaf15 = icmp eq i32 %cleanup.dest.293, 0
  br i1 %SwitchLeaf15, label %cleanup.cont.294, label %NewDefault.13

cleanup.cont.294:                                 ; preds = %LeafBlock.14
  br label %if.end.295, !dbg !7605

if.end.295:                                       ; preds = %cleanup.cont.294, %lor.lhs.false
  br label %if.end.296, !dbg !7606

if.end.296:                                       ; preds = %if.end.295, %while.end.253
  %241 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7607, !tbaa !1876
  %cmp297 = icmp ne %struct._object* %241, null, !dbg !7608
  br i1 %cmp297, label %if.then.299, label %if.end.335, !dbg !7609

if.then.299:                                      ; preds = %if.end.296
  %242 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7610, !tbaa !1876
  %cmp300 = icmp eq %struct._object* %242, null, !dbg !7612
  br i1 %cmp300, label %if.then.302, label %if.end.308, !dbg !7613

if.then.302:                                      ; preds = %if.then.299
  %call303 = call %struct._object* @PyList_New(i64 0), !dbg !7614
  store %struct._object* %call303, %struct._object** %chunks, align 8, !dbg !7616, !tbaa !1876
  %243 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7617, !tbaa !1876
  %cmp304 = icmp eq %struct._object* %243, null, !dbg !7619
  br i1 %cmp304, label %if.then.306, label %if.end.307, !dbg !7620

if.then.306:                                      ; preds = %if.then.302
  br label %error, !dbg !7621

if.end.307:                                       ; preds = %if.then.302
  br label %if.end.308, !dbg !7622

if.end.308:                                       ; preds = %if.end.307, %if.then.299
  %244 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7623, !tbaa !1876
  %245 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7625, !tbaa !1876
  %call309 = call i32 @PyList_Append(%struct._object* %244, %struct._object* %245), !dbg !7626
  %cmp310 = icmp slt i32 %call309, 0, !dbg !7627
  br i1 %cmp310, label %if.then.312, label %if.end.313, !dbg !7628

if.then.312:                                      ; preds = %if.end.308
  br label %error, !dbg !7629

if.end.313:                                       ; preds = %if.end.308
  br label %do.body.314, !dbg !7630

do.body.314:                                      ; preds = %if.end.313
  %246 = bitcast %struct._object** %_py_tmp315 to i8*, !dbg !7631
  call void @llvm.lifetime.start(i64 8, i8* %246) #2, !dbg !7631
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp315, metadata !980, metadata !1880), !dbg !7633
  %247 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7634, !tbaa !1876
  store %struct._object* %247, %struct._object** %_py_tmp315, align 8, !dbg !7633, !tbaa !1876
  %248 = load %struct._object*, %struct._object** %_py_tmp315, align 8, !dbg !7635, !tbaa !1876
  %cmp316 = icmp ne %struct._object* %248, null, !dbg !7636
  br i1 %cmp316, label %if.then.318, label %if.end.332, !dbg !7637

if.then.318:                                      ; preds = %do.body.314
  store %struct._object* null, %struct._object** %remaining, align 8, !dbg !7638, !tbaa !1876
  br label %do.body.319, !dbg !7640

do.body.319:                                      ; preds = %if.then.318
  %249 = bitcast %struct._object** %_py_decref_tmp320 to i8*, !dbg !7641
  call void @llvm.lifetime.start(i64 8, i8* %249) #2, !dbg !7641
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp320, metadata !984, metadata !1880), !dbg !7643
  %250 = load %struct._object*, %struct._object** %_py_tmp315, align 8, !dbg !7644, !tbaa !1876
  store %struct._object* %250, %struct._object** %_py_decref_tmp320, align 8, !dbg !7643, !tbaa !1876
  %251 = load %struct._object*, %struct._object** %_py_decref_tmp320, align 8, !dbg !7645, !tbaa !1876
  %ob_refcnt321 = getelementptr inbounds %struct._object, %struct._object* %251, i32 0, i32 0, !dbg !7647
  %252 = load i64, i64* %ob_refcnt321, align 8, !dbg !7648, !tbaa !1927
  %dec322 = add i64 %252, -1, !dbg !7648
  store i64 %dec322, i64* %ob_refcnt321, align 8, !dbg !7648, !tbaa !1927
  %cmp323 = icmp ne i64 %dec322, 0, !dbg !7649
  br i1 %cmp323, label %if.then.325, label %if.else.326, !dbg !7650

if.then.325:                                      ; preds = %do.body.319
  br label %if.end.329, !dbg !7651

if.else.326:                                      ; preds = %do.body.319
  %253 = load %struct._object*, %struct._object** %_py_decref_tmp320, align 8, !dbg !7653, !tbaa !1876
  %ob_type327 = getelementptr inbounds %struct._object, %struct._object* %253, i32 0, i32 1, !dbg !7655
  %254 = load %struct._typeobject*, %struct._typeobject** %ob_type327, align 8, !dbg !7655, !tbaa !2194
  %tp_dealloc328 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %254, i32 0, i32 4, !dbg !7656
  %255 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc328, align 8, !dbg !7656, !tbaa !2196
  %256 = load %struct._object*, %struct._object** %_py_decref_tmp320, align 8, !dbg !7657, !tbaa !1876
  call void %255(%struct._object* %256), !dbg !7658
  br label %if.end.329

if.end.329:                                       ; preds = %if.else.326, %if.then.325
  %257 = bitcast %struct._object** %_py_decref_tmp320 to i8*, !dbg !7659
  call void @llvm.lifetime.end(i64 8, i8* %257) #2, !dbg !7659
  br label %do.cond.330, !dbg !7661

do.cond.330:                                      ; preds = %if.end.329
  br label %do.end.331, !dbg !7662

do.end.331:                                       ; preds = %do.cond.330
  br label %if.end.332, !dbg !7664

if.end.332:                                       ; preds = %do.end.331, %do.body.314
  %258 = bitcast %struct._object** %_py_tmp315 to i8*, !dbg !7666
  call void @llvm.lifetime.end(i64 8, i8* %258) #2, !dbg !7666
  br label %do.cond.333, !dbg !7669

do.cond.333:                                      ; preds = %if.end.332
  br label %do.end.334, !dbg !7670

do.end.334:                                       ; preds = %do.cond.333
  br label %if.end.335, !dbg !7672

if.end.335:                                       ; preds = %do.end.334, %if.end.296
  %259 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7673, !tbaa !1876
  %cmp336 = icmp ne %struct._object* %259, null, !dbg !7674
  br i1 %cmp336, label %if.then.338, label %if.end.387, !dbg !7675

if.then.338:                                      ; preds = %if.end.335
  %260 = load %struct._object*, %struct._object** %line, align 8, !dbg !7676, !tbaa !1876
  %cmp339 = icmp ne %struct._object* %260, null, !dbg !7677
  br i1 %cmp339, label %if.then.341, label %if.end.360, !dbg !7678

if.then.341:                                      ; preds = %if.then.338
  %261 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7679, !tbaa !1876
  %262 = load %struct._object*, %struct._object** %line, align 8, !dbg !7681, !tbaa !1876
  %call342 = call i32 @PyList_Append(%struct._object* %261, %struct._object* %262), !dbg !7682
  %cmp343 = icmp slt i32 %call342, 0, !dbg !7683
  br i1 %cmp343, label %if.then.345, label %if.end.346, !dbg !7684

if.then.345:                                      ; preds = %if.then.341
  br label %error, !dbg !7685

if.end.346:                                       ; preds = %if.then.341
  br label %do.body.347, !dbg !7686

do.body.347:                                      ; preds = %if.end.346
  %263 = bitcast %struct._object** %_py_decref_tmp348 to i8*, !dbg !7687
  call void @llvm.lifetime.start(i64 8, i8* %263) #2, !dbg !7687
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp348, metadata !988, metadata !1880), !dbg !7689
  %264 = load %struct._object*, %struct._object** %line, align 8, !dbg !7690, !tbaa !1876
  store %struct._object* %264, %struct._object** %_py_decref_tmp348, align 8, !dbg !7689, !tbaa !1876
  %265 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !7691, !tbaa !1876
  %ob_refcnt349 = getelementptr inbounds %struct._object, %struct._object* %265, i32 0, i32 0, !dbg !7693
  %266 = load i64, i64* %ob_refcnt349, align 8, !dbg !7694, !tbaa !1927
  %dec350 = add i64 %266, -1, !dbg !7694
  store i64 %dec350, i64* %ob_refcnt349, align 8, !dbg !7694, !tbaa !1927
  %cmp351 = icmp ne i64 %dec350, 0, !dbg !7695
  br i1 %cmp351, label %if.then.353, label %if.else.354, !dbg !7696

if.then.353:                                      ; preds = %do.body.347
  br label %if.end.357, !dbg !7697

if.else.354:                                      ; preds = %do.body.347
  %267 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !7699, !tbaa !1876
  %ob_type355 = getelementptr inbounds %struct._object, %struct._object* %267, i32 0, i32 1, !dbg !7701
  %268 = load %struct._typeobject*, %struct._typeobject** %ob_type355, align 8, !dbg !7701, !tbaa !2194
  %tp_dealloc356 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %268, i32 0, i32 4, !dbg !7702
  %269 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc356, align 8, !dbg !7702, !tbaa !2196
  %270 = load %struct._object*, %struct._object** %_py_decref_tmp348, align 8, !dbg !7703, !tbaa !1876
  call void %269(%struct._object* %270), !dbg !7704
  br label %if.end.357

if.end.357:                                       ; preds = %if.else.354, %if.then.353
  %271 = bitcast %struct._object** %_py_decref_tmp348 to i8*, !dbg !7705
  call void @llvm.lifetime.end(i64 8, i8* %271) #2, !dbg !7705
  br label %do.cond.358, !dbg !7707

do.cond.358:                                      ; preds = %if.end.357
  br label %do.end.359, !dbg !7708

do.end.359:                                       ; preds = %do.cond.358
  br label %if.end.360, !dbg !7710

if.end.360:                                       ; preds = %do.end.359, %if.then.338
  %272 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !7711, !tbaa !1876
  %273 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7712, !tbaa !1876
  %call361 = call %struct._object* @PyUnicode_Join(%struct._object* %272, %struct._object* %273), !dbg !7713
  store %struct._object* %call361, %struct._object** %line, align 8, !dbg !7714, !tbaa !1876
  %274 = load %struct._object*, %struct._object** %line, align 8, !dbg !7715, !tbaa !1876
  %cmp362 = icmp eq %struct._object* %274, null, !dbg !7717
  br i1 %cmp362, label %if.then.364, label %if.end.365, !dbg !7718

if.then.364:                                      ; preds = %if.end.360
  br label %error, !dbg !7719

if.end.365:                                       ; preds = %if.end.360
  br label %do.body.366, !dbg !7720

do.body.366:                                      ; preds = %if.end.365
  %275 = bitcast %struct._object** %_py_tmp367 to i8*, !dbg !7721
  call void @llvm.lifetime.start(i64 8, i8* %275) #2, !dbg !7721
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp367, metadata !994, metadata !1880), !dbg !7723
  %276 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7724, !tbaa !1876
  store %struct._object* %276, %struct._object** %_py_tmp367, align 8, !dbg !7723, !tbaa !1876
  %277 = load %struct._object*, %struct._object** %_py_tmp367, align 8, !dbg !7725, !tbaa !1876
  %cmp368 = icmp ne %struct._object* %277, null, !dbg !7726
  br i1 %cmp368, label %if.then.370, label %if.end.384, !dbg !7727

if.then.370:                                      ; preds = %do.body.366
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !7728, !tbaa !1876
  br label %do.body.371, !dbg !7730

do.body.371:                                      ; preds = %if.then.370
  %278 = bitcast %struct._object** %_py_decref_tmp372 to i8*, !dbg !7731
  call void @llvm.lifetime.start(i64 8, i8* %278) #2, !dbg !7731
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp372, metadata !996, metadata !1880), !dbg !7733
  %279 = load %struct._object*, %struct._object** %_py_tmp367, align 8, !dbg !7734, !tbaa !1876
  store %struct._object* %279, %struct._object** %_py_decref_tmp372, align 8, !dbg !7733, !tbaa !1876
  %280 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8, !dbg !7735, !tbaa !1876
  %ob_refcnt373 = getelementptr inbounds %struct._object, %struct._object* %280, i32 0, i32 0, !dbg !7737
  %281 = load i64, i64* %ob_refcnt373, align 8, !dbg !7738, !tbaa !1927
  %dec374 = add i64 %281, -1, !dbg !7738
  store i64 %dec374, i64* %ob_refcnt373, align 8, !dbg !7738, !tbaa !1927
  %cmp375 = icmp ne i64 %dec374, 0, !dbg !7739
  br i1 %cmp375, label %if.then.377, label %if.else.378, !dbg !7740

if.then.377:                                      ; preds = %do.body.371
  br label %if.end.381, !dbg !7741

if.else.378:                                      ; preds = %do.body.371
  %282 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8, !dbg !7743, !tbaa !1876
  %ob_type379 = getelementptr inbounds %struct._object, %struct._object* %282, i32 0, i32 1, !dbg !7745
  %283 = load %struct._typeobject*, %struct._typeobject** %ob_type379, align 8, !dbg !7745, !tbaa !2194
  %tp_dealloc380 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %283, i32 0, i32 4, !dbg !7746
  %284 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc380, align 8, !dbg !7746, !tbaa !2196
  %285 = load %struct._object*, %struct._object** %_py_decref_tmp372, align 8, !dbg !7747, !tbaa !1876
  call void %284(%struct._object* %285), !dbg !7748
  br label %if.end.381

if.end.381:                                       ; preds = %if.else.378, %if.then.377
  %286 = bitcast %struct._object** %_py_decref_tmp372 to i8*, !dbg !7749
  call void @llvm.lifetime.end(i64 8, i8* %286) #2, !dbg !7749
  br label %do.cond.382, !dbg !7751

do.cond.382:                                      ; preds = %if.end.381
  br label %do.end.383, !dbg !7752

do.end.383:                                       ; preds = %do.cond.382
  br label %if.end.384, !dbg !7754

if.end.384:                                       ; preds = %do.end.383, %do.body.366
  %287 = bitcast %struct._object** %_py_tmp367 to i8*, !dbg !7756
  call void @llvm.lifetime.end(i64 8, i8* %287) #2, !dbg !7756
  br label %do.cond.385, !dbg !7759

do.cond.385:                                      ; preds = %if.end.384
  br label %do.end.386, !dbg !7760

do.end.386:                                       ; preds = %do.cond.385
  br label %if.end.387, !dbg !7762

if.end.387:                                       ; preds = %do.end.386, %if.end.335
  %288 = load %struct._object*, %struct._object** %line, align 8, !dbg !7763, !tbaa !1876
  %cmp388 = icmp eq %struct._object* %288, null, !dbg !7765
  br i1 %cmp388, label %if.then.390, label %if.end.393, !dbg !7766

if.then.390:                                      ; preds = %if.end.387
  %289 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !7767, !tbaa !1876
  %ob_refcnt391 = getelementptr inbounds %struct._object, %struct._object* %289, i32 0, i32 0, !dbg !7769
  %290 = load i64, i64* %ob_refcnt391, align 8, !dbg !7770, !tbaa !1927
  %inc392 = add i64 %290, 1, !dbg !7770
  store i64 %inc392, i64* %ob_refcnt391, align 8, !dbg !7770, !tbaa !1927
  %291 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !7771, !tbaa !1876
  store %struct._object* %291, %struct._object** %line, align 8, !dbg !7772, !tbaa !1876
  br label %if.end.393, !dbg !7773

if.end.393:                                       ; preds = %if.then.390, %if.end.387
  %292 = load %struct._object*, %struct._object** %line, align 8, !dbg !7774, !tbaa !1876
  store %struct._object* %292, %struct._object** %retval, !dbg !7775
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.456, !dbg !7775

error:                                            ; preds = %LeafBlock.16, %LeafBlock.9, %if.then.364, %if.then.345, %if.then.312, %if.then.306
  br label %do.body.394, !dbg !7776

do.body.394:                                      ; preds = %error
  %293 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7777
  call void @llvm.lifetime.start(i64 8, i8* %293) #2, !dbg !7777
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1000, metadata !1880), !dbg !7779
  %294 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !7780, !tbaa !1876
  store %struct._object* %294, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7779, !tbaa !1876
  %295 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7781, !tbaa !1876
  %cmp395 = icmp ne %struct._object* %295, null, !dbg !7782
  br i1 %cmp395, label %if.then.397, label %if.end.411, !dbg !7783

if.then.397:                                      ; preds = %do.body.394
  br label %do.body.398, !dbg !7784

do.body.398:                                      ; preds = %if.then.397
  %296 = bitcast %struct._object** %_py_decref_tmp399 to i8*, !dbg !7786
  call void @llvm.lifetime.start(i64 8, i8* %296) #2, !dbg !7786
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp399, metadata !1002, metadata !1880), !dbg !7788
  %297 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7789, !tbaa !1876
  store %struct._object* %297, %struct._object** %_py_decref_tmp399, align 8, !dbg !7788, !tbaa !1876
  %298 = load %struct._object*, %struct._object** %_py_decref_tmp399, align 8, !dbg !7790, !tbaa !1876
  %ob_refcnt400 = getelementptr inbounds %struct._object, %struct._object* %298, i32 0, i32 0, !dbg !7792
  %299 = load i64, i64* %ob_refcnt400, align 8, !dbg !7793, !tbaa !1927
  %dec401 = add i64 %299, -1, !dbg !7793
  store i64 %dec401, i64* %ob_refcnt400, align 8, !dbg !7793, !tbaa !1927
  %cmp402 = icmp ne i64 %dec401, 0, !dbg !7794
  br i1 %cmp402, label %if.then.404, label %if.else.405, !dbg !7795

if.then.404:                                      ; preds = %do.body.398
  br label %if.end.408, !dbg !7796

if.else.405:                                      ; preds = %do.body.398
  %300 = load %struct._object*, %struct._object** %_py_decref_tmp399, align 8, !dbg !7798, !tbaa !1876
  %ob_type406 = getelementptr inbounds %struct._object, %struct._object* %300, i32 0, i32 1, !dbg !7800
  %301 = load %struct._typeobject*, %struct._typeobject** %ob_type406, align 8, !dbg !7800, !tbaa !2194
  %tp_dealloc407 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %301, i32 0, i32 4, !dbg !7801
  %302 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc407, align 8, !dbg !7801, !tbaa !2196
  %303 = load %struct._object*, %struct._object** %_py_decref_tmp399, align 8, !dbg !7802, !tbaa !1876
  call void %302(%struct._object* %303), !dbg !7803
  br label %if.end.408

if.end.408:                                       ; preds = %if.else.405, %if.then.404
  %304 = bitcast %struct._object** %_py_decref_tmp399 to i8*, !dbg !7804
  call void @llvm.lifetime.end(i64 8, i8* %304) #2, !dbg !7804
  br label %do.cond.409, !dbg !7806

do.cond.409:                                      ; preds = %if.end.408
  br label %do.end.410, !dbg !7807

do.end.410:                                       ; preds = %do.cond.409
  br label %if.end.411, !dbg !7809

if.end.411:                                       ; preds = %do.end.410, %do.body.394
  %305 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7811
  call void @llvm.lifetime.end(i64 8, i8* %305) #2, !dbg !7811
  br label %do.cond.412, !dbg !7814

do.cond.412:                                      ; preds = %if.end.411
  br label %do.end.413, !dbg !7815

do.end.413:                                       ; preds = %do.cond.412
  br label %do.body.414, !dbg !7817

do.body.414:                                      ; preds = %do.end.413
  %306 = bitcast %struct._object** %_py_xdecref_tmp415 to i8*, !dbg !7818
  call void @llvm.lifetime.start(i64 8, i8* %306) #2, !dbg !7818
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp415, metadata !1005, metadata !1880), !dbg !7820
  %307 = load %struct._object*, %struct._object** %remaining, align 8, !dbg !7821, !tbaa !1876
  store %struct._object* %307, %struct._object** %_py_xdecref_tmp415, align 8, !dbg !7820, !tbaa !1876
  %308 = load %struct._object*, %struct._object** %_py_xdecref_tmp415, align 8, !dbg !7822, !tbaa !1876
  %cmp416 = icmp ne %struct._object* %308, null, !dbg !7823
  br i1 %cmp416, label %if.then.418, label %if.end.432, !dbg !7824

if.then.418:                                      ; preds = %do.body.414
  br label %do.body.419, !dbg !7825

do.body.419:                                      ; preds = %if.then.418
  %309 = bitcast %struct._object** %_py_decref_tmp420 to i8*, !dbg !7827
  call void @llvm.lifetime.start(i64 8, i8* %309) #2, !dbg !7827
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp420, metadata !1007, metadata !1880), !dbg !7829
  %310 = load %struct._object*, %struct._object** %_py_xdecref_tmp415, align 8, !dbg !7830, !tbaa !1876
  store %struct._object* %310, %struct._object** %_py_decref_tmp420, align 8, !dbg !7829, !tbaa !1876
  %311 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8, !dbg !7831, !tbaa !1876
  %ob_refcnt421 = getelementptr inbounds %struct._object, %struct._object* %311, i32 0, i32 0, !dbg !7833
  %312 = load i64, i64* %ob_refcnt421, align 8, !dbg !7834, !tbaa !1927
  %dec422 = add i64 %312, -1, !dbg !7834
  store i64 %dec422, i64* %ob_refcnt421, align 8, !dbg !7834, !tbaa !1927
  %cmp423 = icmp ne i64 %dec422, 0, !dbg !7835
  br i1 %cmp423, label %if.then.425, label %if.else.426, !dbg !7836

if.then.425:                                      ; preds = %do.body.419
  br label %if.end.429, !dbg !7837

if.else.426:                                      ; preds = %do.body.419
  %313 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8, !dbg !7839, !tbaa !1876
  %ob_type427 = getelementptr inbounds %struct._object, %struct._object* %313, i32 0, i32 1, !dbg !7841
  %314 = load %struct._typeobject*, %struct._typeobject** %ob_type427, align 8, !dbg !7841, !tbaa !2194
  %tp_dealloc428 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %314, i32 0, i32 4, !dbg !7842
  %315 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc428, align 8, !dbg !7842, !tbaa !2196
  %316 = load %struct._object*, %struct._object** %_py_decref_tmp420, align 8, !dbg !7843, !tbaa !1876
  call void %315(%struct._object* %316), !dbg !7844
  br label %if.end.429

if.end.429:                                       ; preds = %if.else.426, %if.then.425
  %317 = bitcast %struct._object** %_py_decref_tmp420 to i8*, !dbg !7845
  call void @llvm.lifetime.end(i64 8, i8* %317) #2, !dbg !7845
  br label %do.cond.430, !dbg !7847

do.cond.430:                                      ; preds = %if.end.429
  br label %do.end.431, !dbg !7848

do.end.431:                                       ; preds = %do.cond.430
  br label %if.end.432, !dbg !7850

if.end.432:                                       ; preds = %do.end.431, %do.body.414
  %318 = bitcast %struct._object** %_py_xdecref_tmp415 to i8*, !dbg !7852
  call void @llvm.lifetime.end(i64 8, i8* %318) #2, !dbg !7852
  br label %do.cond.433, !dbg !7853

do.cond.433:                                      ; preds = %if.end.432
  br label %do.end.434, !dbg !7854

do.end.434:                                       ; preds = %do.cond.433
  br label %do.body.435, !dbg !7856

do.body.435:                                      ; preds = %do.end.434
  %319 = bitcast %struct._object** %_py_xdecref_tmp436 to i8*, !dbg !7857
  call void @llvm.lifetime.start(i64 8, i8* %319) #2, !dbg !7857
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp436, metadata !1010, metadata !1880), !dbg !7859
  %320 = load %struct._object*, %struct._object** %line, align 8, !dbg !7860, !tbaa !1876
  store %struct._object* %320, %struct._object** %_py_xdecref_tmp436, align 8, !dbg !7859, !tbaa !1876
  %321 = load %struct._object*, %struct._object** %_py_xdecref_tmp436, align 8, !dbg !7861, !tbaa !1876
  %cmp437 = icmp ne %struct._object* %321, null, !dbg !7862
  br i1 %cmp437, label %if.then.439, label %if.end.453, !dbg !7863

if.then.439:                                      ; preds = %do.body.435
  br label %do.body.440, !dbg !7864

do.body.440:                                      ; preds = %if.then.439
  %322 = bitcast %struct._object** %_py_decref_tmp441 to i8*, !dbg !7866
  call void @llvm.lifetime.start(i64 8, i8* %322) #2, !dbg !7866
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp441, metadata !1012, metadata !1880), !dbg !7868
  %323 = load %struct._object*, %struct._object** %_py_xdecref_tmp436, align 8, !dbg !7869, !tbaa !1876
  store %struct._object* %323, %struct._object** %_py_decref_tmp441, align 8, !dbg !7868, !tbaa !1876
  %324 = load %struct._object*, %struct._object** %_py_decref_tmp441, align 8, !dbg !7870, !tbaa !1876
  %ob_refcnt442 = getelementptr inbounds %struct._object, %struct._object* %324, i32 0, i32 0, !dbg !7872
  %325 = load i64, i64* %ob_refcnt442, align 8, !dbg !7873, !tbaa !1927
  %dec443 = add i64 %325, -1, !dbg !7873
  store i64 %dec443, i64* %ob_refcnt442, align 8, !dbg !7873, !tbaa !1927
  %cmp444 = icmp ne i64 %dec443, 0, !dbg !7874
  br i1 %cmp444, label %if.then.446, label %if.else.447, !dbg !7875

if.then.446:                                      ; preds = %do.body.440
  br label %if.end.450, !dbg !7876

if.else.447:                                      ; preds = %do.body.440
  %326 = load %struct._object*, %struct._object** %_py_decref_tmp441, align 8, !dbg !7878, !tbaa !1876
  %ob_type448 = getelementptr inbounds %struct._object, %struct._object* %326, i32 0, i32 1, !dbg !7880
  %327 = load %struct._typeobject*, %struct._typeobject** %ob_type448, align 8, !dbg !7880, !tbaa !2194
  %tp_dealloc449 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %327, i32 0, i32 4, !dbg !7881
  %328 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc449, align 8, !dbg !7881, !tbaa !2196
  %329 = load %struct._object*, %struct._object** %_py_decref_tmp441, align 8, !dbg !7882, !tbaa !1876
  call void %328(%struct._object* %329), !dbg !7883
  br label %if.end.450

if.end.450:                                       ; preds = %if.else.447, %if.then.446
  %330 = bitcast %struct._object** %_py_decref_tmp441 to i8*, !dbg !7884
  call void @llvm.lifetime.end(i64 8, i8* %330) #2, !dbg !7884
  br label %do.cond.451, !dbg !7886

do.cond.451:                                      ; preds = %if.end.450
  br label %do.end.452, !dbg !7887

do.end.452:                                       ; preds = %do.cond.451
  br label %if.end.453, !dbg !7889

if.end.453:                                       ; preds = %do.end.452, %do.body.435
  %331 = bitcast %struct._object** %_py_xdecref_tmp436 to i8*, !dbg !7891
  call void @llvm.lifetime.end(i64 8, i8* %331) #2, !dbg !7891
  br label %do.cond.454, !dbg !7892

do.cond.454:                                      ; preds = %if.end.453
  br label %do.end.455, !dbg !7893

do.end.455:                                       ; preds = %do.cond.454
  store %struct._object* null, %struct._object** %retval, !dbg !7895
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.456, !dbg !7895

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.456

NewDefault.4:                                     ; preds = %LeafBlock.9, %LeafBlock.7, %LeafBlock.5
  br label %cleanup.456

NewDefault.13:                                    ; preds = %LeafBlock.16, %LeafBlock.14
  br label %cleanup.456

cleanup.456:                                      ; preds = %NewDefault.13, %NewDefault.4, %NewDefault, %do.end.455, %if.end.393, %if.then.32
  %332 = bitcast i32* %res to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 4, i8* %332) #2, !dbg !7896
  %333 = bitcast i64* %offset_to_buffer to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 8, i8* %333) #2, !dbg !7896
  %334 = bitcast i64* %chunked to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 8, i8* %334) #2, !dbg !7896
  %335 = bitcast i64* %endpos to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 8, i8* %335) #2, !dbg !7896
  %336 = bitcast i64* %start to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 8, i8* %336) #2, !dbg !7896
  %337 = bitcast %struct._object** %remaining to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 8, i8* %337) #2, !dbg !7896
  %338 = bitcast %struct._object** %chunks to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 8, i8* %338) #2, !dbg !7896
  %339 = bitcast %struct._object** %line to i8*, !dbg !7896
  call void @llvm.lifetime.end(i64 8, i8* %339) #2, !dbg !7896
  %340 = load %struct._object*, %struct._object** %retval, !dbg !7896
  ret %struct._object* %340, !dbg !7896
}

declare i32 @_PyFileIO_closed(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_closed_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1019, metadata !1880), !dbg !7897
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1020, metadata !1880), !dbg !7898
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7899, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !7901
  %1 = load i32, i32* %ok, align 4, !dbg !7901, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !7902
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !7903

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7904, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !7908
  %3 = load i32, i32* %detached, align 4, !dbg !7908, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !7909
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !7910

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7911, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !7914
  br label %if.end, !dbg !7915

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7916, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !7919
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !7920
  br label %return, !dbg !7920

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7922, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !7923
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !7923, !tbaa !4115
  %8 = load %struct._object*, %struct._object** @_PyIO_str_closed, align 8, !dbg !7924, !tbaa !1876
  %call = call %struct._object* @PyObject_GetAttr(%struct._object* %7, %struct._object* %8), !dbg !7925
  store %struct._object* %call, %struct._object** %retval, !dbg !7926
  br label %return, !dbg !7926

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !7927
  ret %struct._object* %9, !dbg !7927
}

declare i32 @PyObject_IsTrue(%struct._object*) #3

declare %struct._object* @_PyIOBase_check_closed(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_writeflush(%struct.textio* %self) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %pending = alloca %struct._object*, align 8
  %b = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1023, metadata !1880), !dbg !7928
  %0 = bitcast %struct._object** %pending to i8*, !dbg !7929
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7929
  call void @llvm.dbg.declare(metadata %struct._object** %pending, metadata !1024, metadata !1880), !dbg !7930
  %1 = bitcast %struct._object** %b to i8*, !dbg !7929
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7929
  call void @llvm.dbg.declare(metadata %struct._object** %b, metadata !1025, metadata !1880), !dbg !7931
  %2 = bitcast %struct._object** %ret to i8*, !dbg !7929
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7929
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !1026, metadata !1880), !dbg !7932
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7933, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 24, !dbg !7935
  %4 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !7935, !tbaa !4288
  %cmp = icmp eq %struct._object* %4, null, !dbg !7936
  br i1 %cmp, label %if.then, label %if.end, !dbg !7937

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !7938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7938

if.end:                                           ; preds = %entry
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7939, !tbaa !1876
  %pending_bytes1 = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 24, !dbg !7940
  %6 = load %struct._object*, %struct._object** %pending_bytes1, align 8, !dbg !7940, !tbaa !4288
  store %struct._object* %6, %struct._object** %pending, align 8, !dbg !7941, !tbaa !1876
  %7 = load %struct._object*, %struct._object** %pending, align 8, !dbg !7942, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !7943
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !7944, !tbaa !1927
  %inc = add i64 %8, 1, !dbg !7944
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7944, !tbaa !1927
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7945, !tbaa !1876
  %pending_bytes_count = getelementptr inbounds %struct.textio, %struct.textio* %9, i32 0, i32 25, !dbg !7946
  store i64 0, i64* %pending_bytes_count, align 8, !dbg !7947, !tbaa !5182
  br label %do.body, !dbg !7948

do.body:                                          ; preds = %if.end
  %10 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7949
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !7949
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1027, metadata !1880), !dbg !7951
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7952, !tbaa !1876
  %pending_bytes2 = getelementptr inbounds %struct.textio, %struct.textio* %11, i32 0, i32 24, !dbg !7953
  %12 = load %struct._object*, %struct._object** %pending_bytes2, align 8, !dbg !7953, !tbaa !4288
  store %struct._object* %12, %struct._object** %_py_tmp, align 8, !dbg !7951, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7954, !tbaa !1876
  %cmp3 = icmp ne %struct._object* %13, null, !dbg !7955
  br i1 %cmp3, label %if.then.4, label %if.end.11, !dbg !7956

if.then.4:                                        ; preds = %do.body
  %14 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !7957, !tbaa !1876
  %pending_bytes5 = getelementptr inbounds %struct.textio, %struct.textio* %14, i32 0, i32 24, !dbg !7959
  store %struct._object* null, %struct._object** %pending_bytes5, align 8, !dbg !7960, !tbaa !4288
  br label %do.body.6, !dbg !7961

do.body.6:                                        ; preds = %if.then.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7962
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !7962
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1029, metadata !1880), !dbg !7964
  %16 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7965, !tbaa !1876
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !7964, !tbaa !1876
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7966, !tbaa !1876
  %ob_refcnt7 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !7968
  %18 = load i64, i64* %ob_refcnt7, align 8, !dbg !7969, !tbaa !1927
  %dec = add i64 %18, -1, !dbg !7969
  store i64 %dec, i64* %ob_refcnt7, align 8, !dbg !7969, !tbaa !1927
  %cmp8 = icmp ne i64 %dec, 0, !dbg !7970
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !7971

if.then.9:                                        ; preds = %do.body.6
  br label %if.end.10, !dbg !7972

if.else:                                          ; preds = %do.body.6
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7974, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !7976
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7976, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !7977
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7977, !tbaa !2196
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7978, !tbaa !1876
  call void %21(%struct._object* %22), !dbg !7979
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.9
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7980
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !7980
  br label %do.cond, !dbg !7982

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !7983

do.end:                                           ; preds = %do.cond
  br label %if.end.11, !dbg !7985

if.end.11:                                        ; preds = %do.end, %do.body
  %24 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7987
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !7987
  br label %do.cond.12, !dbg !7990

do.cond.12:                                       ; preds = %if.end.11
  br label %do.end.13, !dbg !7991

do.end.13:                                        ; preds = %do.cond.12
  %25 = load %struct._object*, %struct._object** @_PyIO_empty_bytes, align 8, !dbg !7993, !tbaa !1876
  %26 = load %struct._object*, %struct._object** %pending, align 8, !dbg !7994, !tbaa !1876
  %call = call %struct._object* @_PyBytes_Join(%struct._object* %25, %struct._object* %26), !dbg !7995
  store %struct._object* %call, %struct._object** %b, align 8, !dbg !7996, !tbaa !1876
  br label %do.body.14, !dbg !7997

do.body.14:                                       ; preds = %do.end.13
  %27 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !7998
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !7998
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !1033, metadata !1880), !dbg !8000
  %28 = load %struct._object*, %struct._object** %pending, align 8, !dbg !8001, !tbaa !1876
  store %struct._object* %28, %struct._object** %_py_decref_tmp15, align 8, !dbg !8000, !tbaa !1876
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8002, !tbaa !1876
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !8004
  %30 = load i64, i64* %ob_refcnt16, align 8, !dbg !8005, !tbaa !1927
  %dec17 = add i64 %30, -1, !dbg !8005
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !8005, !tbaa !1927
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !8006
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !8007

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !8008

if.else.20:                                       ; preds = %do.body.14
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8010, !tbaa !1876
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !8012
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !8012, !tbaa !2194
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !8013
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !8013, !tbaa !2196
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !8014, !tbaa !1876
  call void %33(%struct._object* %34), !dbg !8015
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %35 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !8016
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !8016
  br label %do.cond.24, !dbg !8018

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !8019

do.end.25:                                        ; preds = %do.cond.24
  %36 = load %struct._object*, %struct._object** %b, align 8, !dbg !8021, !tbaa !1876
  %cmp26 = icmp eq %struct._object* %36, null, !dbg !8023
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !8024

if.then.27:                                       ; preds = %do.end.25
  store i32 -1, i32* %retval, !dbg !8025
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8025

if.end.28:                                        ; preds = %do.end.25
  store %struct._object* null, %struct._object** %ret, align 8, !dbg !8026, !tbaa !1876
  br label %do.body.29, !dbg !8027

do.body.29:                                       ; preds = %land.end, %if.end.28
  %37 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8028, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %37, i32 0, i32 4, !dbg !8030
  %38 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8030, !tbaa !4115
  %39 = load %struct._object*, %struct._object** @_PyIO_str_write, align 8, !dbg !8031, !tbaa !1876
  %40 = load %struct._object*, %struct._object** %b, align 8, !dbg !8032, !tbaa !1876
  %call30 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %38, %struct._object* %39, %struct._object* %40, i8* null), !dbg !8033
  store %struct._object* %call30, %struct._object** %ret, align 8, !dbg !8034, !tbaa !1876
  br label %do.cond.31, !dbg !8035

do.cond.31:                                       ; preds = %do.body.29
  %41 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8036, !tbaa !1876
  %cmp32 = icmp eq %struct._object* %41, null, !dbg !8038
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !8039

land.rhs:                                         ; preds = %do.cond.31
  %call33 = call i32 @_PyIO_trap_eintr(), !dbg !8040
  %tobool = icmp ne i32 %call33, 0, !dbg !8039
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond.31
  %42 = phi i1 [ false, %do.cond.31 ], [ %tobool, %land.rhs ]
  br i1 %42, label %do.body.29, label %do.end.34, !dbg !8042

do.end.34:                                        ; preds = %land.end
  br label %do.body.35, !dbg !8044

do.body.35:                                       ; preds = %do.end.34
  %43 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !8045
  call void @llvm.lifetime.start(i64 8, i8* %43) #2, !dbg !8045
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !1035, metadata !1880), !dbg !8047
  %44 = load %struct._object*, %struct._object** %b, align 8, !dbg !8048, !tbaa !1876
  store %struct._object* %44, %struct._object** %_py_decref_tmp36, align 8, !dbg !8047, !tbaa !1876
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !8049, !tbaa !1876
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0, !dbg !8051
  %46 = load i64, i64* %ob_refcnt37, align 8, !dbg !8052, !tbaa !1927
  %dec38 = add i64 %46, -1, !dbg !8052
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !8052, !tbaa !1927
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !8053
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !8054

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !8055

if.else.41:                                       ; preds = %do.body.35
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !8057, !tbaa !1876
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !8059
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !8059, !tbaa !2194
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4, !dbg !8060
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !8060, !tbaa !2196
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !8061, !tbaa !1876
  call void %49(%struct._object* %50), !dbg !8062
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %51 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !8063
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !8063
  br label %do.cond.45, !dbg !8064

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !8065

do.end.46:                                        ; preds = %do.cond.45
  %52 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8067, !tbaa !1876
  %cmp47 = icmp eq %struct._object* %52, null, !dbg !8069
  br i1 %cmp47, label %if.then.48, label %if.end.49, !dbg !8070

if.then.48:                                       ; preds = %do.end.46
  store i32 -1, i32* %retval, !dbg !8071
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8071

if.end.49:                                        ; preds = %do.end.46
  br label %do.body.50, !dbg !8072

do.body.50:                                       ; preds = %if.end.49
  %53 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !8073
  call void @llvm.lifetime.start(i64 8, i8* %53) #2, !dbg !8073
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !1037, metadata !1880), !dbg !8075
  %54 = load %struct._object*, %struct._object** %ret, align 8, !dbg !8076, !tbaa !1876
  store %struct._object* %54, %struct._object** %_py_decref_tmp51, align 8, !dbg !8075, !tbaa !1876
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !8077, !tbaa !1876
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !8079
  %56 = load i64, i64* %ob_refcnt52, align 8, !dbg !8080, !tbaa !1927
  %dec53 = add i64 %56, -1, !dbg !8080
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !8080, !tbaa !1927
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !8081
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !8082

if.then.55:                                       ; preds = %do.body.50
  br label %if.end.59, !dbg !8083

if.else.56:                                       ; preds = %do.body.50
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !8085, !tbaa !1876
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !8087
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !8087, !tbaa !2194
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !8088
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !8088, !tbaa !2196
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !8089, !tbaa !1876
  call void %59(%struct._object* %60), !dbg !8090
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %61 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !8091
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !8091
  br label %do.cond.60, !dbg !8092

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !8093

do.end.61:                                        ; preds = %do.cond.60
  store i32 0, i32* %retval, !dbg !8095
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8095

cleanup:                                          ; preds = %do.end.61, %if.then.48, %if.then.27, %if.then
  %62 = bitcast %struct._object** %ret to i8*, !dbg !8096
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !8096
  %63 = bitcast %struct._object** %b to i8*, !dbg !8096
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !8096
  %64 = bitcast %struct._object** %pending to i8*, !dbg !8096
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !8096
  %65 = load i32, i32* %retval, !dbg !8096
  ret i32 %65, !dbg !8096
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_read_chunk(%struct.textio* %self, i64 %size_hint) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %size_hint.addr = alloca i64, align 8
  %dec_buffer = alloca %struct._object*, align 8
  %dec_flags = alloca %struct._object*, align 8
  %input_chunk = alloca %struct._object*, align 8
  %decoded_chars = alloca %struct._object*, align 8
  %chunk_size = alloca %struct._object*, align 8
  %nbytes = alloca i64, align 8
  %nchars = alloca i64, align 8
  %eof = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %state = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  %next_input = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  %_py_decref_tmp150 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp168 = alloca %struct._object*, align 8
  %_py_decref_tmp190 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp209 = alloca %struct._object*, align 8
  %_py_xdecref_tmp225 = alloca %struct._object*, align 8
  %_py_decref_tmp230 = alloca %struct._object*, align 8
  %_py_xdecref_tmp246 = alloca %struct._object*, align 8
  %_py_decref_tmp251 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1043, metadata !1880), !dbg !8097
  store i64 %size_hint, i64* %size_hint.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i64* %size_hint.addr, metadata !1044, metadata !1880), !dbg !8098
  %0 = bitcast %struct._object** %dec_buffer to i8*, !dbg !8099
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8099
  call void @llvm.dbg.declare(metadata %struct._object** %dec_buffer, metadata !1045, metadata !1880), !dbg !8100
  store %struct._object* null, %struct._object** %dec_buffer, align 8, !dbg !8100, !tbaa !1876
  %1 = bitcast %struct._object** %dec_flags to i8*, !dbg !8101
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8101
  call void @llvm.dbg.declare(metadata %struct._object** %dec_flags, metadata !1046, metadata !1880), !dbg !8102
  store %struct._object* null, %struct._object** %dec_flags, align 8, !dbg !8102, !tbaa !1876
  %2 = bitcast %struct._object** %input_chunk to i8*, !dbg !8103
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8103
  call void @llvm.dbg.declare(metadata %struct._object** %input_chunk, metadata !1047, metadata !1880), !dbg !8104
  store %struct._object* null, %struct._object** %input_chunk, align 8, !dbg !8104, !tbaa !1876
  %3 = bitcast %struct._object** %decoded_chars to i8*, !dbg !8105
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8105
  call void @llvm.dbg.declare(metadata %struct._object** %decoded_chars, metadata !1048, metadata !1880), !dbg !8106
  %4 = bitcast %struct._object** %chunk_size to i8*, !dbg !8105
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8105
  call void @llvm.dbg.declare(metadata %struct._object** %chunk_size, metadata !1049, metadata !1880), !dbg !8107
  %5 = bitcast i64* %nbytes to i8*, !dbg !8108
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8108
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !1050, metadata !1880), !dbg !8109
  %6 = bitcast i64* %nchars to i8*, !dbg !8108
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !8108
  call void @llvm.dbg.declare(metadata i64* %nchars, metadata !1051, metadata !1880), !dbg !8110
  %7 = bitcast i32* %eof to i8*, !dbg !8111
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !8111
  call void @llvm.dbg.declare(metadata i32* %eof, metadata !1052, metadata !1880), !dbg !8112
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8113, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 7, !dbg !8115
  %9 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !8115, !tbaa !4201
  %cmp = icmp eq %struct._object* %9, null, !dbg !8116
  br i1 %cmp, label %if.then, label %if.end, !dbg !8117

if.then:                                          ; preds = %entry
  %call = call %struct._object* @_unsupported(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0)), !dbg !8118
  store i32 -1, i32* %retval, !dbg !8120
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.266, !dbg !8120

if.end:                                           ; preds = %entry
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8121, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %10, i32 0, i32 18, !dbg !8122
  %11 = load i8, i8* %telling, align 1, !dbg !8122, !tbaa !4512
  %tobool = icmp ne i8 %11, 0, !dbg !8121
  br i1 %tobool, label %if.then.1, label %if.end.29, !dbg !8123

if.then.1:                                        ; preds = %if.end
  %12 = bitcast %struct._object** %state to i8*, !dbg !8124
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !8124
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !1053, metadata !1880), !dbg !8125
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8126, !tbaa !1876
  %decoder2 = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 7, !dbg !8127
  %14 = load %struct._object*, %struct._object** %decoder2, align 8, !dbg !8127, !tbaa !4201
  %15 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !8128, !tbaa !1876
  %call3 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %14, %struct._object* %15, i8* null), !dbg !8129
  store %struct._object* %call3, %struct._object** %state, align 8, !dbg !8125, !tbaa !1876
  %16 = load %struct._object*, %struct._object** %state, align 8, !dbg !8130, !tbaa !1876
  %cmp4 = icmp eq %struct._object* %16, null, !dbg !8132
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !8133

if.then.5:                                        ; preds = %if.then.1
  store i32 -1, i32* %retval, !dbg !8134
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8134

if.end.6:                                         ; preds = %if.then.1
  %17 = load %struct._object*, %struct._object** %state, align 8, !dbg !8135, !tbaa !1876
  %call7 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), %struct._object** %dec_buffer, %struct._object** %dec_flags), !dbg !8136
  %cmp8 = icmp slt i32 %call7, 0, !dbg !8137
  br i1 %cmp8, label %if.then.9, label %if.end.13, !dbg !8138

if.then.9:                                        ; preds = %if.end.6
  br label %do.body, !dbg !8139

do.body:                                          ; preds = %if.then.9
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8140
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !8140
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1056, metadata !1880), !dbg !8142
  %19 = load %struct._object*, %struct._object** %state, align 8, !dbg !8143, !tbaa !1876
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !8142, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8144, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !8146
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !8147, !tbaa !1927
  %dec = add i64 %21, -1, !dbg !8147
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8147, !tbaa !1927
  %cmp10 = icmp ne i64 %dec, 0, !dbg !8148
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !8149

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !8150

if.else:                                          ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8152, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !8154
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8154, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !8155
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8155, !tbaa !2196
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8156, !tbaa !1876
  call void %24(%struct._object* %25), !dbg !8157
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8158
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !8158
  br label %do.cond, !dbg !8160

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !8161

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !8163
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8163

if.end.13:                                        ; preds = %if.end.6
  %27 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8164, !tbaa !1876
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !8165
  %28 = load i64, i64* %ob_refcnt14, align 8, !dbg !8166, !tbaa !1927
  %inc = add i64 %28, 1, !dbg !8166
  store i64 %inc, i64* %ob_refcnt14, align 8, !dbg !8166, !tbaa !1927
  %29 = load %struct._object*, %struct._object** %dec_flags, align 8, !dbg !8167, !tbaa !1876
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !8168
  %30 = load i64, i64* %ob_refcnt15, align 8, !dbg !8169, !tbaa !1927
  %inc16 = add i64 %30, 1, !dbg !8169
  store i64 %inc16, i64* %ob_refcnt15, align 8, !dbg !8169, !tbaa !1927
  br label %do.body.17, !dbg !8170

do.body.17:                                       ; preds = %if.end.13
  %31 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !8171
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !8171
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !1060, metadata !1880), !dbg !8173
  %32 = load %struct._object*, %struct._object** %state, align 8, !dbg !8174, !tbaa !1876
  store %struct._object* %32, %struct._object** %_py_decref_tmp18, align 8, !dbg !8173, !tbaa !1876
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !8175, !tbaa !1876
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !8177
  %34 = load i64, i64* %ob_refcnt19, align 8, !dbg !8178, !tbaa !1927
  %dec20 = add i64 %34, -1, !dbg !8178
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !8178, !tbaa !1927
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !8179
  br i1 %cmp21, label %if.then.22, label %if.else.23, !dbg !8180

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26, !dbg !8181

if.else.23:                                       ; preds = %do.body.17
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !8183, !tbaa !1876
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !8185
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !8185, !tbaa !2194
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4, !dbg !8186
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !8186, !tbaa !2196
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !8187, !tbaa !1876
  call void %37(%struct._object* %38), !dbg !8188
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %39 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !8189
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !8189
  br label %do.cond.27, !dbg !8191

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !8192

do.end.28:                                        ; preds = %do.cond.27
  store i32 0, i32* %cleanup.dest.slot, !dbg !8194
  br label %cleanup, !dbg !8194

cleanup:                                          ; preds = %do.end.28, %do.end, %if.then.5
  %40 = bitcast %struct._object** %state to i8*, !dbg !8195
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !8195
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.29, !dbg !8197

if.end.29:                                        ; preds = %cleanup.cont, %if.end
  %41 = load i64, i64* %size_hint.addr, align 8, !dbg !8198, !tbaa !1941
  %cmp30 = icmp sgt i64 %41, 0, !dbg !8200
  br i1 %cmp30, label %if.then.31, label %if.end.35, !dbg !8201

if.then.31:                                       ; preds = %if.end.29
  %42 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8202, !tbaa !1876
  %b2cratio = getelementptr inbounds %struct.textio, %struct.textio* %42, i32 0, i32 27, !dbg !8204
  %43 = load double, double* %b2cratio, align 8, !dbg !8204, !tbaa !5190
  %cmp32 = fcmp ogt double %43, 1.000000e+00, !dbg !8205
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !8206

cond.true:                                        ; preds = %if.then.31
  %44 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8207, !tbaa !1876
  %b2cratio33 = getelementptr inbounds %struct.textio, %struct.textio* %44, i32 0, i32 27, !dbg !8209
  %45 = load double, double* %b2cratio33, align 8, !dbg !8209, !tbaa !5190
  br label %cond.end, !dbg !8206

cond.false:                                       ; preds = %if.then.31
  br label %cond.end, !dbg !8210

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %45, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !8206
  %46 = load i64, i64* %size_hint.addr, align 8, !dbg !8212, !tbaa !1941
  %conv = sitofp i64 %46 to double, !dbg !8212
  %mul = fmul double %cond, %conv, !dbg !8215
  %conv34 = fptosi double %mul to i64, !dbg !8216
  store i64 %conv34, i64* %size_hint.addr, align 8, !dbg !8217, !tbaa !1941
  br label %if.end.35, !dbg !8218

if.end.35:                                        ; preds = %cond.end, %if.end.29
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8219, !tbaa !1876
  %chunk_size36 = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 3, !dbg !8220
  %48 = load i64, i64* %chunk_size36, align 8, !dbg !8220, !tbaa !5565
  %49 = load i64, i64* %size_hint.addr, align 8, !dbg !8221, !tbaa !1941
  %cmp37 = icmp sgt i64 %48, %49, !dbg !8222
  br i1 %cmp37, label %cond.true.39, label %cond.false.41, !dbg !8223

cond.true.39:                                     ; preds = %if.end.35
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8224, !tbaa !1876
  %chunk_size40 = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 3, !dbg !8226
  %51 = load i64, i64* %chunk_size40, align 8, !dbg !8226, !tbaa !5565
  br label %cond.end.42, !dbg !8223

cond.false.41:                                    ; preds = %if.end.35
  %52 = load i64, i64* %size_hint.addr, align 8, !dbg !8227, !tbaa !1941
  br label %cond.end.42, !dbg !8223

cond.end.42:                                      ; preds = %cond.false.41, %cond.true.39
  %cond43 = phi i64 [ %51, %cond.true.39 ], [ %52, %cond.false.41 ], !dbg !8223
  %call44 = call %struct._object* @PyLong_FromSsize_t(i64 %cond43), !dbg !8229
  store %struct._object* %call44, %struct._object** %chunk_size, align 8, !dbg !8232, !tbaa !1876
  %53 = load %struct._object*, %struct._object** %chunk_size, align 8, !dbg !8233, !tbaa !1876
  %cmp45 = icmp eq %struct._object* %53, null, !dbg !8235
  br i1 %cmp45, label %if.then.47, label %if.end.48, !dbg !8236

if.then.47:                                       ; preds = %cond.end.42
  br label %fail, !dbg !8237

if.end.48:                                        ; preds = %cond.end.42
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8238, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %54, i32 0, i32 4, !dbg !8239
  %55 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8239, !tbaa !4115
  %56 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8240, !tbaa !1876
  %has_read1 = getelementptr inbounds %struct.textio, %struct.textio* %56, i32 0, i32 17, !dbg !8241
  %57 = load i8, i8* %has_read1, align 1, !dbg !8241, !tbaa !6146
  %conv49 = sext i8 %57 to i32, !dbg !8240
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !8240
  br i1 %tobool50, label %cond.true.51, label %cond.false.52, !dbg !8240

cond.true.51:                                     ; preds = %if.end.48
  %58 = load %struct._object*, %struct._object** @_PyIO_str_read1, align 8, !dbg !8242, !tbaa !1876
  br label %cond.end.53, !dbg !8240

cond.false.52:                                    ; preds = %if.end.48
  %59 = load %struct._object*, %struct._object** @_PyIO_str_read, align 8, !dbg !8243, !tbaa !1876
  br label %cond.end.53, !dbg !8240

cond.end.53:                                      ; preds = %cond.false.52, %cond.true.51
  %cond54 = phi %struct._object* [ %58, %cond.true.51 ], [ %59, %cond.false.52 ], !dbg !8240
  %60 = load %struct._object*, %struct._object** %chunk_size, align 8, !dbg !8244, !tbaa !1876
  %call55 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %55, %struct._object* %cond54, %struct._object* %60, i8* null), !dbg !8245
  store %struct._object* %call55, %struct._object** %input_chunk, align 8, !dbg !8246, !tbaa !1876
  br label %do.body.56, !dbg !8247

do.body.56:                                       ; preds = %cond.end.53
  %61 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !8248
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !8248
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp57, metadata !1062, metadata !1880), !dbg !8250
  %62 = load %struct._object*, %struct._object** %chunk_size, align 8, !dbg !8251, !tbaa !1876
  store %struct._object* %62, %struct._object** %_py_decref_tmp57, align 8, !dbg !8250, !tbaa !1876
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !8252, !tbaa !1876
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !8254
  %64 = load i64, i64* %ob_refcnt58, align 8, !dbg !8255, !tbaa !1927
  %dec59 = add i64 %64, -1, !dbg !8255
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !8255, !tbaa !1927
  %cmp60 = icmp ne i64 %dec59, 0, !dbg !8256
  br i1 %cmp60, label %if.then.62, label %if.else.63, !dbg !8257

if.then.62:                                       ; preds = %do.body.56
  br label %if.end.66, !dbg !8258

if.else.63:                                       ; preds = %do.body.56
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !8260, !tbaa !1876
  %ob_type64 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !8262
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type64, align 8, !dbg !8262, !tbaa !2194
  %tp_dealloc65 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !8263
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc65, align 8, !dbg !8263, !tbaa !2196
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !8264, !tbaa !1876
  call void %67(%struct._object* %68), !dbg !8265
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.63, %if.then.62
  %69 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !8266
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !8266
  br label %do.cond.67, !dbg !8268

do.cond.67:                                       ; preds = %if.end.66
  br label %do.end.68, !dbg !8269

do.end.68:                                        ; preds = %do.cond.67
  %70 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8271, !tbaa !1876
  %cmp69 = icmp eq %struct._object* %70, null, !dbg !8273
  br i1 %cmp69, label %if.then.71, label %if.end.72, !dbg !8274

if.then.71:                                       ; preds = %do.end.68
  br label %fail, !dbg !8275

if.end.72:                                        ; preds = %do.end.68
  %71 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8276, !tbaa !1876
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !8278
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8, !dbg !8278, !tbaa !2194
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 19, !dbg !8279
  %73 = load i64, i64* %tp_flags, align 8, !dbg !8279, !tbaa !3072
  %and = and i64 %73, 134217728, !dbg !8280
  %cmp74 = icmp ne i64 %and, 0, !dbg !8281
  br i1 %cmp74, label %if.end.83, label %if.then.76, !dbg !8282

if.then.76:                                       ; preds = %if.end.72
  %74 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8283, !tbaa !1876
  %75 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8285, !tbaa !1876
  %has_read177 = getelementptr inbounds %struct.textio, %struct.textio* %75, i32 0, i32 17, !dbg !8286
  %76 = load i8, i8* %has_read177, align 1, !dbg !8286, !tbaa !6146
  %conv78 = sext i8 %76 to i32, !dbg !8285
  %tobool79 = icmp ne i32 %conv78, 0, !dbg !8285
  %cond80 = select i1 %tobool79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), !dbg !8285
  %77 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8287, !tbaa !1876
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1, !dbg !8288
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !8288, !tbaa !2194
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %78, i32 0, i32 1, !dbg !8289
  %79 = load i8*, i8** %tp_name, align 8, !dbg !8289, !tbaa !3080
  %call82 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %74, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.44, i32 0, i32 0), i8* %cond80, i8* %79), !dbg !8290
  br label %fail, !dbg !8291

if.end.83:                                        ; preds = %if.end.72
  %80 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8292, !tbaa !1876
  %call84 = call i64 @PyBytes_Size(%struct._object* %80), !dbg !8293
  store i64 %call84, i64* %nbytes, align 8, !dbg !8294, !tbaa !1941
  %81 = load i64, i64* %nbytes, align 8, !dbg !8295, !tbaa !1941
  %cmp85 = icmp eq i64 %81, 0, !dbg !8296
  %conv86 = zext i1 %cmp85 to i32, !dbg !8296
  store i32 %conv86, i32* %eof, align 4, !dbg !8297, !tbaa !1883
  %82 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8298, !tbaa !1876
  %decoder87 = getelementptr inbounds %struct.textio, %struct.textio* %82, i32 0, i32 7, !dbg !8300
  %83 = load %struct._object*, %struct._object** %decoder87, align 8, !dbg !8300, !tbaa !4201
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 1, !dbg !8301
  %84 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !8301, !tbaa !2194
  %cmp89 = icmp eq %struct._typeobject* %84, @PyIncrementalNewlineDecoder_Type, !dbg !8302
  br i1 %cmp89, label %if.then.91, label %if.else.94, !dbg !8303

if.then.91:                                       ; preds = %if.end.83
  %85 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8304, !tbaa !1876
  %decoder92 = getelementptr inbounds %struct.textio, %struct.textio* %85, i32 0, i32 7, !dbg !8306
  %86 = load %struct._object*, %struct._object** %decoder92, align 8, !dbg !8306, !tbaa !4201
  %87 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8307, !tbaa !1876
  %88 = load i32, i32* %eof, align 4, !dbg !8308, !tbaa !1883
  %call93 = call %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %86, %struct._object* %87, i32 %88), !dbg !8309
  store %struct._object* %call93, %struct._object** %decoded_chars, align 8, !dbg !8310, !tbaa !1876
  br label %if.end.99, !dbg !8311

if.else.94:                                       ; preds = %if.end.83
  %89 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8312, !tbaa !1876
  %decoder95 = getelementptr inbounds %struct.textio, %struct.textio* %89, i32 0, i32 7, !dbg !8314
  %90 = load %struct._object*, %struct._object** %decoder95, align 8, !dbg !8314, !tbaa !4201
  %91 = load %struct._object*, %struct._object** @_PyIO_str_decode, align 8, !dbg !8315, !tbaa !1876
  %92 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8316, !tbaa !1876
  %93 = load i32, i32* %eof, align 4, !dbg !8317, !tbaa !1883
  %tobool96 = icmp ne i32 %93, 0, !dbg !8317
  %cond97 = select i1 %tobool96, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !8317
  %call98 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %90, %struct._object* %91, %struct._object* %92, %struct._object* %cond97, i8* null), !dbg !8318
  store %struct._object* %call98, %struct._object** %decoded_chars, align 8, !dbg !8319, !tbaa !1876
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.94, %if.then.91
  %94 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8320, !tbaa !1876
  %call100 = call i32 @check_decoded(%struct._object* %94), !dbg !8322
  %cmp101 = icmp slt i32 %call100, 0, !dbg !8323
  br i1 %cmp101, label %if.then.103, label %if.end.104, !dbg !8324

if.then.103:                                      ; preds = %if.end.99
  br label %fail, !dbg !8325

if.end.104:                                       ; preds = %if.end.99
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8326, !tbaa !1876
  %96 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8327, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %95, %struct._object* %96), !dbg !8328
  %97 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8329, !tbaa !1876
  %98 = bitcast %struct._object* %97 to %struct.PyASCIIObject*, !dbg !8330
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %98, i32 0, i32 1, !dbg !8331
  %99 = load i64, i64* %length, align 8, !dbg !8331, !tbaa !1937
  store i64 %99, i64* %nchars, align 8, !dbg !8332, !tbaa !1941
  %100 = load i64, i64* %nchars, align 8, !dbg !8333, !tbaa !1941
  %cmp105 = icmp sgt i64 %100, 0, !dbg !8335
  br i1 %cmp105, label %if.then.107, label %if.else.111, !dbg !8336

if.then.107:                                      ; preds = %if.end.104
  %101 = load i64, i64* %nbytes, align 8, !dbg !8337, !tbaa !1941
  %conv108 = sitofp i64 %101 to double, !dbg !8338
  %102 = load i64, i64* %nchars, align 8, !dbg !8339, !tbaa !1941
  %conv109 = sitofp i64 %102 to double, !dbg !8339
  %div = fdiv double %conv108, %conv109, !dbg !8340
  %103 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8341, !tbaa !1876
  %b2cratio110 = getelementptr inbounds %struct.textio, %struct.textio* %103, i32 0, i32 27, !dbg !8342
  store double %div, double* %b2cratio110, align 8, !dbg !8343, !tbaa !5190
  br label %if.end.113, !dbg !8341

if.else.111:                                      ; preds = %if.end.104
  %104 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8344, !tbaa !1876
  %b2cratio112 = getelementptr inbounds %struct.textio, %struct.textio* %104, i32 0, i32 27, !dbg !8345
  store double 0.000000e+00, double* %b2cratio112, align 8, !dbg !8346, !tbaa !5190
  br label %if.end.113

if.end.113:                                       ; preds = %if.else.111, %if.then.107
  %105 = load i64, i64* %nchars, align 8, !dbg !8347, !tbaa !1941
  %cmp114 = icmp sgt i64 %105, 0, !dbg !8349
  br i1 %cmp114, label %if.then.116, label %if.end.117, !dbg !8350

if.then.116:                                      ; preds = %if.end.113
  store i32 0, i32* %eof, align 4, !dbg !8351, !tbaa !1883
  br label %if.end.117, !dbg !8352

if.end.117:                                       ; preds = %if.then.116, %if.end.113
  %106 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8353, !tbaa !1876
  %telling118 = getelementptr inbounds %struct.textio, %struct.textio* %106, i32 0, i32 18, !dbg !8354
  %107 = load i8, i8* %telling118, align 1, !dbg !8354, !tbaa !4512
  %tobool119 = icmp ne i8 %107, 0, !dbg !8353
  br i1 %tobool119, label %if.then.120, label %if.end.188, !dbg !8355

if.then.120:                                      ; preds = %if.end.117
  %108 = bitcast %struct._object** %next_input to i8*, !dbg !8356
  call void @llvm.lifetime.start(i64 8, i8* %108) #2, !dbg !8356
  call void @llvm.dbg.declare(metadata %struct._object** %next_input, metadata !1064, metadata !1880), !dbg !8357
  %109 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8358, !tbaa !1876
  %110 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8359, !tbaa !1876
  %call121 = call %struct._object* @PyNumber_Add(%struct._object* %109, %struct._object* %110), !dbg !8360
  store %struct._object* %call121, %struct._object** %next_input, align 8, !dbg !8357, !tbaa !1876
  %111 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8361, !tbaa !1876
  %cmp122 = icmp eq %struct._object* %111, null, !dbg !8363
  br i1 %cmp122, label %if.then.124, label %if.end.125, !dbg !8364

if.then.124:                                      ; preds = %if.then.120
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !8365

if.end.125:                                       ; preds = %if.then.120
  %112 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8366, !tbaa !1876
  %ob_type126 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 1, !dbg !8367
  %113 = load %struct._typeobject*, %struct._typeobject** %ob_type126, align 8, !dbg !8367, !tbaa !2194
  %tp_flags127 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %113, i32 0, i32 19, !dbg !8368
  %114 = load i64, i64* %tp_flags127, align 8, !dbg !8368, !tbaa !3072
  %and128 = and i64 %114, 134217728, !dbg !8369
  %cmp129 = icmp ne i64 %and128, 0, !dbg !8370
  br i1 %cmp129, label %if.end.148, label %if.then.131, !dbg !8371

if.then.131:                                      ; preds = %if.end.125
  %115 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8372, !tbaa !1876
  %116 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8373, !tbaa !1876
  %ob_type132 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 1, !dbg !8374
  %117 = load %struct._typeobject*, %struct._typeobject** %ob_type132, align 8, !dbg !8374, !tbaa !2194
  %tp_name133 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %117, i32 0, i32 1, !dbg !8375
  %118 = load i8*, i8** %tp_name133, align 8, !dbg !8375, !tbaa !3080
  %call134 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %115, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.46, i32 0, i32 0), i8* %118), !dbg !8376
  br label %do.body.135, !dbg !8377

do.body.135:                                      ; preds = %if.then.131
  %119 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !8378
  call void @llvm.lifetime.start(i64 8, i8* %119) #2, !dbg !8378
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp136, metadata !1067, metadata !1880), !dbg !8380
  %120 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8381, !tbaa !1876
  store %struct._object* %120, %struct._object** %_py_decref_tmp136, align 8, !dbg !8380, !tbaa !1876
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !8382, !tbaa !1876
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 0, !dbg !8384
  %122 = load i64, i64* %ob_refcnt137, align 8, !dbg !8385, !tbaa !1927
  %dec138 = add i64 %122, -1, !dbg !8385
  store i64 %dec138, i64* %ob_refcnt137, align 8, !dbg !8385, !tbaa !1927
  %cmp139 = icmp ne i64 %dec138, 0, !dbg !8386
  br i1 %cmp139, label %if.then.141, label %if.else.142, !dbg !8387

if.then.141:                                      ; preds = %do.body.135
  br label %if.end.145, !dbg !8388

if.else.142:                                      ; preds = %do.body.135
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !8390, !tbaa !1876
  %ob_type143 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 1, !dbg !8392
  %124 = load %struct._typeobject*, %struct._typeobject** %ob_type143, align 8, !dbg !8392, !tbaa !2194
  %tp_dealloc144 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %124, i32 0, i32 4, !dbg !8393
  %125 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc144, align 8, !dbg !8393, !tbaa !2196
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !8394, !tbaa !1876
  call void %125(%struct._object* %126), !dbg !8395
  br label %if.end.145

if.end.145:                                       ; preds = %if.else.142, %if.then.141
  %127 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !8396
  call void @llvm.lifetime.end(i64 8, i8* %127) #2, !dbg !8396
  br label %do.cond.146, !dbg !8398

do.cond.146:                                      ; preds = %if.end.145
  br label %do.end.147, !dbg !8399

do.end.147:                                       ; preds = %do.cond.146
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.185, !dbg !8401

if.end.148:                                       ; preds = %if.end.125
  br label %do.body.149, !dbg !8402

do.body.149:                                      ; preds = %if.end.148
  %128 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !8403
  call void @llvm.lifetime.start(i64 8, i8* %128) #2, !dbg !8403
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp150, metadata !1071, metadata !1880), !dbg !8405
  %129 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8406, !tbaa !1876
  store %struct._object* %129, %struct._object** %_py_decref_tmp150, align 8, !dbg !8405, !tbaa !1876
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !8407, !tbaa !1876
  %ob_refcnt151 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 0, !dbg !8409
  %131 = load i64, i64* %ob_refcnt151, align 8, !dbg !8410, !tbaa !1927
  %dec152 = add i64 %131, -1, !dbg !8410
  store i64 %dec152, i64* %ob_refcnt151, align 8, !dbg !8410, !tbaa !1927
  %cmp153 = icmp ne i64 %dec152, 0, !dbg !8411
  br i1 %cmp153, label %if.then.155, label %if.else.156, !dbg !8412

if.then.155:                                      ; preds = %do.body.149
  br label %if.end.159, !dbg !8413

if.else.156:                                      ; preds = %do.body.149
  %132 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !8415, !tbaa !1876
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %132, i32 0, i32 1, !dbg !8417
  %133 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8, !dbg !8417, !tbaa !2194
  %tp_dealloc158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %133, i32 0, i32 4, !dbg !8418
  %134 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc158, align 8, !dbg !8418, !tbaa !2196
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp150, align 8, !dbg !8419, !tbaa !1876
  call void %134(%struct._object* %135), !dbg !8420
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.156, %if.then.155
  %136 = bitcast %struct._object** %_py_decref_tmp150 to i8*, !dbg !8421
  call void @llvm.lifetime.end(i64 8, i8* %136) #2, !dbg !8421
  br label %do.cond.160, !dbg !8423

do.cond.160:                                      ; preds = %if.end.159
  br label %do.end.161, !dbg !8424

do.end.161:                                       ; preds = %do.cond.160
  br label %do.body.162, !dbg !8426

do.body.162:                                      ; preds = %do.end.161
  %137 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8427
  call void @llvm.lifetime.start(i64 8, i8* %137) #2, !dbg !8427
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1073, metadata !1880), !dbg !8429
  %138 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8430, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %138, i32 0, i32 26, !dbg !8431
  %139 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !8431, !tbaa !4317
  store %struct._object* %139, %struct._object** %_py_tmp, align 8, !dbg !8429, !tbaa !1876
  %140 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8432, !tbaa !1876
  %cmp163 = icmp ne %struct._object* %140, null, !dbg !8433
  br i1 %cmp163, label %if.then.165, label %if.end.180, !dbg !8434

if.then.165:                                      ; preds = %do.body.162
  %141 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8435, !tbaa !1876
  %snapshot166 = getelementptr inbounds %struct.textio, %struct.textio* %141, i32 0, i32 26, !dbg !8437
  store %struct._object* null, %struct._object** %snapshot166, align 8, !dbg !8438, !tbaa !4317
  br label %do.body.167, !dbg !8439

do.body.167:                                      ; preds = %if.then.165
  %142 = bitcast %struct._object** %_py_decref_tmp168 to i8*, !dbg !8440
  call void @llvm.lifetime.start(i64 8, i8* %142) #2, !dbg !8440
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp168, metadata !1075, metadata !1880), !dbg !8442
  %143 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8443, !tbaa !1876
  store %struct._object* %143, %struct._object** %_py_decref_tmp168, align 8, !dbg !8442, !tbaa !1876
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp168, align 8, !dbg !8444, !tbaa !1876
  %ob_refcnt169 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0, !dbg !8446
  %145 = load i64, i64* %ob_refcnt169, align 8, !dbg !8447, !tbaa !1927
  %dec170 = add i64 %145, -1, !dbg !8447
  store i64 %dec170, i64* %ob_refcnt169, align 8, !dbg !8447, !tbaa !1927
  %cmp171 = icmp ne i64 %dec170, 0, !dbg !8448
  br i1 %cmp171, label %if.then.173, label %if.else.174, !dbg !8449

if.then.173:                                      ; preds = %do.body.167
  br label %if.end.177, !dbg !8450

if.else.174:                                      ; preds = %do.body.167
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp168, align 8, !dbg !8452, !tbaa !1876
  %ob_type175 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1, !dbg !8454
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type175, align 8, !dbg !8454, !tbaa !2194
  %tp_dealloc176 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4, !dbg !8455
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc176, align 8, !dbg !8455, !tbaa !2196
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp168, align 8, !dbg !8456, !tbaa !1876
  call void %148(%struct._object* %149), !dbg !8457
  br label %if.end.177

if.end.177:                                       ; preds = %if.else.174, %if.then.173
  %150 = bitcast %struct._object** %_py_decref_tmp168 to i8*, !dbg !8458
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !8458
  br label %do.cond.178, !dbg !8460

do.cond.178:                                      ; preds = %if.end.177
  br label %do.end.179, !dbg !8461

do.end.179:                                       ; preds = %do.cond.178
  br label %if.end.180, !dbg !8463

if.end.180:                                       ; preds = %do.end.179, %do.body.162
  %151 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8465
  call void @llvm.lifetime.end(i64 8, i8* %151) #2, !dbg !8465
  br label %do.cond.181, !dbg !8468

do.cond.181:                                      ; preds = %if.end.180
  br label %do.end.182, !dbg !8469

do.end.182:                                       ; preds = %do.cond.181
  %152 = load %struct._object*, %struct._object** %dec_flags, align 8, !dbg !8471, !tbaa !1876
  %153 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !8472, !tbaa !1876
  %call183 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), %struct._object* %152, %struct._object* %153), !dbg !8473
  %154 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8474, !tbaa !1876
  %snapshot184 = getelementptr inbounds %struct.textio, %struct.textio* %154, i32 0, i32 26, !dbg !8475
  store %struct._object* %call183, %struct._object** %snapshot184, align 8, !dbg !8476, !tbaa !4317
  store i32 0, i32* %cleanup.dest.slot, !dbg !8477
  br label %cleanup.185, !dbg !8477

cleanup.185:                                      ; preds = %do.end.182, %do.end.147, %if.then.124
  %155 = bitcast %struct._object** %next_input to i8*, !dbg !8478
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !8478
  %cleanup.dest.186 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.185
  %Pivot = icmp slt i32 %cleanup.dest.186, 6
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.186, 6
  br i1 %SwitchLeaf5, label %fail, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.186, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.187, label %NewDefault.1

cleanup.cont.187:                                 ; preds = %LeafBlock.2
  br label %if.end.188, !dbg !8480

if.end.188:                                       ; preds = %cleanup.cont.187, %if.end.117
  br label %do.body.189, !dbg !8481

do.body.189:                                      ; preds = %if.end.188
  %156 = bitcast %struct._object** %_py_decref_tmp190 to i8*, !dbg !8482
  call void @llvm.lifetime.start(i64 8, i8* %156) #2, !dbg !8482
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp190, metadata !1079, metadata !1880), !dbg !8484
  %157 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8485, !tbaa !1876
  store %struct._object* %157, %struct._object** %_py_decref_tmp190, align 8, !dbg !8484, !tbaa !1876
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !8486, !tbaa !1876
  %ob_refcnt191 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 0, !dbg !8488
  %159 = load i64, i64* %ob_refcnt191, align 8, !dbg !8489, !tbaa !1927
  %dec192 = add i64 %159, -1, !dbg !8489
  store i64 %dec192, i64* %ob_refcnt191, align 8, !dbg !8489, !tbaa !1927
  %cmp193 = icmp ne i64 %dec192, 0, !dbg !8490
  br i1 %cmp193, label %if.then.195, label %if.else.196, !dbg !8491

if.then.195:                                      ; preds = %do.body.189
  br label %if.end.199, !dbg !8492

if.else.196:                                      ; preds = %do.body.189
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !8494, !tbaa !1876
  %ob_type197 = getelementptr inbounds %struct._object, %struct._object* %160, i32 0, i32 1, !dbg !8496
  %161 = load %struct._typeobject*, %struct._typeobject** %ob_type197, align 8, !dbg !8496, !tbaa !2194
  %tp_dealloc198 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %161, i32 0, i32 4, !dbg !8497
  %162 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc198, align 8, !dbg !8497, !tbaa !2196
  %163 = load %struct._object*, %struct._object** %_py_decref_tmp190, align 8, !dbg !8498, !tbaa !1876
  call void %162(%struct._object* %163), !dbg !8499
  br label %if.end.199

if.end.199:                                       ; preds = %if.else.196, %if.then.195
  %164 = bitcast %struct._object** %_py_decref_tmp190 to i8*, !dbg !8500
  call void @llvm.lifetime.end(i64 8, i8* %164) #2, !dbg !8500
  br label %do.cond.200, !dbg !8501

do.cond.200:                                      ; preds = %if.end.199
  br label %do.end.201, !dbg !8502

do.end.201:                                       ; preds = %do.cond.200
  %165 = load i32, i32* %eof, align 4, !dbg !8504, !tbaa !1883
  %cmp202 = icmp eq i32 %165, 0, !dbg !8505
  %conv203 = zext i1 %cmp202 to i32, !dbg !8505
  store i32 %conv203, i32* %retval, !dbg !8506
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.266, !dbg !8506

fail:                                             ; preds = %LeafBlock.4, %if.then.103, %if.then.76, %if.then.71, %if.then.47
  br label %do.body.204, !dbg !8507

do.body.204:                                      ; preds = %fail
  %166 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8508
  call void @llvm.lifetime.start(i64 8, i8* %166) #2, !dbg !8508
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1081, metadata !1880), !dbg !8510
  %167 = load %struct._object*, %struct._object** %dec_buffer, align 8, !dbg !8511, !tbaa !1876
  store %struct._object* %167, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8510, !tbaa !1876
  %168 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8512, !tbaa !1876
  %cmp205 = icmp ne %struct._object* %168, null, !dbg !8513
  br i1 %cmp205, label %if.then.207, label %if.end.221, !dbg !8514

if.then.207:                                      ; preds = %do.body.204
  br label %do.body.208, !dbg !8515

do.body.208:                                      ; preds = %if.then.207
  %169 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !8517
  call void @llvm.lifetime.start(i64 8, i8* %169) #2, !dbg !8517
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp209, metadata !1083, metadata !1880), !dbg !8519
  %170 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8520, !tbaa !1876
  store %struct._object* %170, %struct._object** %_py_decref_tmp209, align 8, !dbg !8519, !tbaa !1876
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !8521, !tbaa !1876
  %ob_refcnt210 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 0, !dbg !8523
  %172 = load i64, i64* %ob_refcnt210, align 8, !dbg !8524, !tbaa !1927
  %dec211 = add i64 %172, -1, !dbg !8524
  store i64 %dec211, i64* %ob_refcnt210, align 8, !dbg !8524, !tbaa !1927
  %cmp212 = icmp ne i64 %dec211, 0, !dbg !8525
  br i1 %cmp212, label %if.then.214, label %if.else.215, !dbg !8526

if.then.214:                                      ; preds = %do.body.208
  br label %if.end.218, !dbg !8527

if.else.215:                                      ; preds = %do.body.208
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !8529, !tbaa !1876
  %ob_type216 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 1, !dbg !8531
  %174 = load %struct._typeobject*, %struct._typeobject** %ob_type216, align 8, !dbg !8531, !tbaa !2194
  %tp_dealloc217 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %174, i32 0, i32 4, !dbg !8532
  %175 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc217, align 8, !dbg !8532, !tbaa !2196
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !8533, !tbaa !1876
  call void %175(%struct._object* %176), !dbg !8534
  br label %if.end.218

if.end.218:                                       ; preds = %if.else.215, %if.then.214
  %177 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !8535
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !8535
  br label %do.cond.219, !dbg !8537

do.cond.219:                                      ; preds = %if.end.218
  br label %do.end.220, !dbg !8538

do.end.220:                                       ; preds = %do.cond.219
  br label %if.end.221, !dbg !8540

if.end.221:                                       ; preds = %do.end.220, %do.body.204
  %178 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8542
  call void @llvm.lifetime.end(i64 8, i8* %178) #2, !dbg !8542
  br label %do.cond.222, !dbg !8544

do.cond.222:                                      ; preds = %if.end.221
  br label %do.end.223, !dbg !8545

do.end.223:                                       ; preds = %do.cond.222
  br label %do.body.224, !dbg !8547

do.body.224:                                      ; preds = %do.end.223
  %179 = bitcast %struct._object** %_py_xdecref_tmp225 to i8*, !dbg !8548
  call void @llvm.lifetime.start(i64 8, i8* %179) #2, !dbg !8548
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp225, metadata !1086, metadata !1880), !dbg !8550
  %180 = load %struct._object*, %struct._object** %dec_flags, align 8, !dbg !8551, !tbaa !1876
  store %struct._object* %180, %struct._object** %_py_xdecref_tmp225, align 8, !dbg !8550, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_xdecref_tmp225, align 8, !dbg !8552, !tbaa !1876
  %cmp226 = icmp ne %struct._object* %181, null, !dbg !8553
  br i1 %cmp226, label %if.then.228, label %if.end.242, !dbg !8554

if.then.228:                                      ; preds = %do.body.224
  br label %do.body.229, !dbg !8555

do.body.229:                                      ; preds = %if.then.228
  %182 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !8557
  call void @llvm.lifetime.start(i64 8, i8* %182) #2, !dbg !8557
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp230, metadata !1088, metadata !1880), !dbg !8559
  %183 = load %struct._object*, %struct._object** %_py_xdecref_tmp225, align 8, !dbg !8560, !tbaa !1876
  store %struct._object* %183, %struct._object** %_py_decref_tmp230, align 8, !dbg !8559, !tbaa !1876
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !8561, !tbaa !1876
  %ob_refcnt231 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 0, !dbg !8563
  %185 = load i64, i64* %ob_refcnt231, align 8, !dbg !8564, !tbaa !1927
  %dec232 = add i64 %185, -1, !dbg !8564
  store i64 %dec232, i64* %ob_refcnt231, align 8, !dbg !8564, !tbaa !1927
  %cmp233 = icmp ne i64 %dec232, 0, !dbg !8565
  br i1 %cmp233, label %if.then.235, label %if.else.236, !dbg !8566

if.then.235:                                      ; preds = %do.body.229
  br label %if.end.239, !dbg !8567

if.else.236:                                      ; preds = %do.body.229
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !8569, !tbaa !1876
  %ob_type237 = getelementptr inbounds %struct._object, %struct._object* %186, i32 0, i32 1, !dbg !8571
  %187 = load %struct._typeobject*, %struct._typeobject** %ob_type237, align 8, !dbg !8571, !tbaa !2194
  %tp_dealloc238 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %187, i32 0, i32 4, !dbg !8572
  %188 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc238, align 8, !dbg !8572, !tbaa !2196
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !8573, !tbaa !1876
  call void %188(%struct._object* %189), !dbg !8574
  br label %if.end.239

if.end.239:                                       ; preds = %if.else.236, %if.then.235
  %190 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !8575
  call void @llvm.lifetime.end(i64 8, i8* %190) #2, !dbg !8575
  br label %do.cond.240, !dbg !8577

do.cond.240:                                      ; preds = %if.end.239
  br label %do.end.241, !dbg !8578

do.end.241:                                       ; preds = %do.cond.240
  br label %if.end.242, !dbg !8580

if.end.242:                                       ; preds = %do.end.241, %do.body.224
  %191 = bitcast %struct._object** %_py_xdecref_tmp225 to i8*, !dbg !8582
  call void @llvm.lifetime.end(i64 8, i8* %191) #2, !dbg !8582
  br label %do.cond.243, !dbg !8583

do.cond.243:                                      ; preds = %if.end.242
  br label %do.end.244, !dbg !8584

do.end.244:                                       ; preds = %do.cond.243
  br label %do.body.245, !dbg !8586

do.body.245:                                      ; preds = %do.end.244
  %192 = bitcast %struct._object** %_py_xdecref_tmp246 to i8*, !dbg !8587
  call void @llvm.lifetime.start(i64 8, i8* %192) #2, !dbg !8587
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp246, metadata !1091, metadata !1880), !dbg !8589
  %193 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !8590, !tbaa !1876
  store %struct._object* %193, %struct._object** %_py_xdecref_tmp246, align 8, !dbg !8589, !tbaa !1876
  %194 = load %struct._object*, %struct._object** %_py_xdecref_tmp246, align 8, !dbg !8591, !tbaa !1876
  %cmp247 = icmp ne %struct._object* %194, null, !dbg !8592
  br i1 %cmp247, label %if.then.249, label %if.end.263, !dbg !8593

if.then.249:                                      ; preds = %do.body.245
  br label %do.body.250, !dbg !8594

do.body.250:                                      ; preds = %if.then.249
  %195 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !8596
  call void @llvm.lifetime.start(i64 8, i8* %195) #2, !dbg !8596
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp251, metadata !1093, metadata !1880), !dbg !8598
  %196 = load %struct._object*, %struct._object** %_py_xdecref_tmp246, align 8, !dbg !8599, !tbaa !1876
  store %struct._object* %196, %struct._object** %_py_decref_tmp251, align 8, !dbg !8598, !tbaa !1876
  %197 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !8600, !tbaa !1876
  %ob_refcnt252 = getelementptr inbounds %struct._object, %struct._object* %197, i32 0, i32 0, !dbg !8602
  %198 = load i64, i64* %ob_refcnt252, align 8, !dbg !8603, !tbaa !1927
  %dec253 = add i64 %198, -1, !dbg !8603
  store i64 %dec253, i64* %ob_refcnt252, align 8, !dbg !8603, !tbaa !1927
  %cmp254 = icmp ne i64 %dec253, 0, !dbg !8604
  br i1 %cmp254, label %if.then.256, label %if.else.257, !dbg !8605

if.then.256:                                      ; preds = %do.body.250
  br label %if.end.260, !dbg !8606

if.else.257:                                      ; preds = %do.body.250
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !8608, !tbaa !1876
  %ob_type258 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 1, !dbg !8610
  %200 = load %struct._typeobject*, %struct._typeobject** %ob_type258, align 8, !dbg !8610, !tbaa !2194
  %tp_dealloc259 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %200, i32 0, i32 4, !dbg !8611
  %201 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc259, align 8, !dbg !8611, !tbaa !2196
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !8612, !tbaa !1876
  call void %201(%struct._object* %202), !dbg !8613
  br label %if.end.260

if.end.260:                                       ; preds = %if.else.257, %if.then.256
  %203 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !8614
  call void @llvm.lifetime.end(i64 8, i8* %203) #2, !dbg !8614
  br label %do.cond.261, !dbg !8616

do.cond.261:                                      ; preds = %if.end.260
  br label %do.end.262, !dbg !8617

do.end.262:                                       ; preds = %do.cond.261
  br label %if.end.263, !dbg !8619

if.end.263:                                       ; preds = %do.end.262, %do.body.245
  %204 = bitcast %struct._object** %_py_xdecref_tmp246 to i8*, !dbg !8621
  call void @llvm.lifetime.end(i64 8, i8* %204) #2, !dbg !8621
  br label %do.cond.264, !dbg !8622

do.cond.264:                                      ; preds = %if.end.263
  br label %do.end.265, !dbg !8623

do.end.265:                                       ; preds = %do.cond.264
  store i32 -1, i32* %retval, !dbg !8625
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.266, !dbg !8625

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.266

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.266

cleanup.266:                                      ; preds = %NewDefault.1, %NewDefault, %do.end.265, %do.end.201, %if.then
  %205 = bitcast i32* %eof to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 4, i8* %205) #2, !dbg !8626
  %206 = bitcast i64* %nchars to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 8, i8* %206) #2, !dbg !8626
  %207 = bitcast i64* %nbytes to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 8, i8* %207) #2, !dbg !8626
  %208 = bitcast %struct._object** %chunk_size to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 8, i8* %208) #2, !dbg !8626
  %209 = bitcast %struct._object** %decoded_chars to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 8, i8* %209) #2, !dbg !8626
  %210 = bitcast %struct._object** %input_chunk to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !8626
  %211 = bitcast %struct._object** %dec_flags to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 8, i8* %211) #2, !dbg !8626
  %212 = bitcast %struct._object** %dec_buffer to i8*, !dbg !8626
  call void @llvm.lifetime.end(i64 8, i8* %212) #2, !dbg !8626
  %213 = load i32, i32* %retval, !dbg !8626
  ret i32 %213, !dbg !8626
}

declare i32 @_PyIO_trap_eintr() #3

; Function Attrs: nounwind uwtable
define internal void @textiowrapper_set_decoded_chars(%struct.textio* %self, %struct._object* %chars) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %chars.addr = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1100, metadata !1880), !dbg !8627
  store %struct._object* %chars, %struct._object** %chars.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %chars.addr, metadata !1101, metadata !1880), !dbg !8628
  br label %do.body, !dbg !8629

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8630
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8630
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1102, metadata !1880), !dbg !8632
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8633, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 22, !dbg !8634
  %2 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !8634, !tbaa !4259
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !8632, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8635, !tbaa !1876
  %cmp = icmp ne %struct._object* %3, null, !dbg !8636
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !8637

if.then:                                          ; preds = %do.body
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8638, !tbaa !1876
  %decoded_chars1 = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 22, !dbg !8640
  store %struct._object* null, %struct._object** %decoded_chars1, align 8, !dbg !8641, !tbaa !4259
  br label %do.body.2, !dbg !8642

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8643
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8643
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1104, metadata !1880), !dbg !8645
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !8646, !tbaa !1876
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !8645, !tbaa !1876
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8647, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !8649
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !8650, !tbaa !1927
  %dec = add i64 %8, -1, !dbg !8650
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8650, !tbaa !1927
  %cmp3 = icmp ne i64 %dec, 0, !dbg !8651
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !8652

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !8653

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8655, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !8657
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8657, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !8658
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8658, !tbaa !2196
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8659, !tbaa !1876
  call void %11(%struct._object* %12), !dbg !8660
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8661
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !8661
  br label %do.cond, !dbg !8663

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !8664

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !8666

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !8668
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !8668
  br label %do.end.7, !dbg !8671

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct._object*, %struct._object** %chars.addr, align 8, !dbg !8672, !tbaa !1876
  %16 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8673, !tbaa !1876
  %decoded_chars8 = getelementptr inbounds %struct.textio, %struct.textio* %16, i32 0, i32 22, !dbg !8674
  store %struct._object* %15, %struct._object** %decoded_chars8, align 8, !dbg !8675, !tbaa !4259
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8676, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 23, !dbg !8677
  store i64 0, i64* %decoded_chars_used, align 8, !dbg !8678, !tbaa !5178
  ret void, !dbg !8679
}

declare %struct._object* @PyUnicode_Concat(%struct._object*, %struct._object*) #3

declare %struct._object* @PyList_New(i64) #3

declare i32 @PyList_Append(%struct._object*, %struct._object*) #3

declare %struct._object* @PyUnicode_Join(%struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_GetAttr(%struct._object*, %struct._object*) #3

declare %struct._object* @_PyBytes_Join(%struct._object*, %struct._object*) #3

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare i64 @PyBytes_Size(%struct._object*) #3

declare %struct._object* @PyNumber_Add(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_detach(%struct.textio* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %buffer = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1110, metadata !1880), !dbg !8680
  %0 = bitcast %struct._object** %buffer to i8*, !dbg !8681
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8681
  call void @llvm.dbg.declare(metadata %struct._object** %buffer, metadata !1111, metadata !1880), !dbg !8682
  %1 = bitcast %struct._object** %res to i8*, !dbg !8681
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8681
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1112, metadata !1880), !dbg !8683
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8684, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 1, !dbg !8686
  %3 = load i32, i32* %ok, align 4, !dbg !8686, !tbaa !3895
  %cmp = icmp sle i32 %3, 0, !dbg !8687
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !8688

if.then:                                          ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8689, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 2, !dbg !8693
  %5 = load i32, i32* %detached, align 4, !dbg !8693, !tbaa !3903
  %tobool = icmp ne i32 %5, 0, !dbg !8694
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !8695

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8696, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !8699
  br label %if.end, !dbg !8700

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8701, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !8704
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !8705
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8707

if.end.2:                                         ; preds = %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8708, !tbaa !1876
  %9 = bitcast %struct.textio* %8 to %struct._object*, !dbg !8709
  %10 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !8710, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %9, %struct._object* %10, i8* null), !dbg !8711
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !8712, !tbaa !1876
  %11 = load %struct._object*, %struct._object** %res, align 8, !dbg !8713, !tbaa !1876
  %cmp3 = icmp eq %struct._object* %11, null, !dbg !8715
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !8716

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !8717
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8717

if.end.5:                                         ; preds = %if.end.2
  br label %do.body, !dbg !8718

do.body:                                          ; preds = %if.end.5
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8719
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !8719
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1113, metadata !1880), !dbg !8721
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !8722, !tbaa !1876
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !8721, !tbaa !1876
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8723, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !8725
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !8726, !tbaa !1927
  %dec = add i64 %15, -1, !dbg !8726
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8726, !tbaa !1927
  %cmp6 = icmp ne i64 %dec, 0, !dbg !8727
  br i1 %cmp6, label %if.then.7, label %if.else.8, !dbg !8728

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !8729

if.else.8:                                        ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8731, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8733
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8733, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !8734
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8734, !tbaa !2196
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8735, !tbaa !1876
  call void %18(%struct._object* %19), !dbg !8736
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.8, %if.then.7
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8737
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !8737
  br label %do.cond, !dbg !8739

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !8740

do.end:                                           ; preds = %do.cond
  %21 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8742, !tbaa !1876
  %buffer10 = getelementptr inbounds %struct.textio, %struct.textio* %21, i32 0, i32 4, !dbg !8743
  %22 = load %struct._object*, %struct._object** %buffer10, align 8, !dbg !8743, !tbaa !4115
  store %struct._object* %22, %struct._object** %buffer, align 8, !dbg !8744, !tbaa !1876
  %23 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8745, !tbaa !1876
  %buffer11 = getelementptr inbounds %struct.textio, %struct.textio* %23, i32 0, i32 4, !dbg !8746
  store %struct._object* null, %struct._object** %buffer11, align 8, !dbg !8747, !tbaa !4115
  %24 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8748, !tbaa !1876
  %detached12 = getelementptr inbounds %struct.textio, %struct.textio* %24, i32 0, i32 2, !dbg !8749
  store i32 1, i32* %detached12, align 4, !dbg !8750, !tbaa !3903
  %25 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8751, !tbaa !1876
  %ok13 = getelementptr inbounds %struct.textio, %struct.textio* %25, i32 0, i32 1, !dbg !8752
  store i32 0, i32* %ok13, align 4, !dbg !8753, !tbaa !3895
  %26 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !8754, !tbaa !1876
  store %struct._object* %26, %struct._object** %retval, !dbg !8755
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8755

cleanup:                                          ; preds = %do.end, %if.then.4, %if.end
  %27 = bitcast %struct._object** %res to i8*, !dbg !8756
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !8756
  %28 = bitcast %struct._object** %buffer to i8*, !dbg !8756
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !8756
  %29 = load %struct._object*, %struct._object** %retval, !dbg !8756
  ret %struct._object* %29, !dbg !8756
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_write(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %text = alloca %struct._object*, align 8
  %b = alloca %struct._object*, align 8
  %textlen = alloca i64, align 8
  %haslf = alloca i32, align 4
  %needflush = alloca i32, align 4
  %text_needflush = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %newtext = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  %_py_decref_tmp121 = alloca %struct._object*, align 8
  %_py_decref_tmp147 = alloca %struct._object*, align 8
  %_py_decref_tmp167 = alloca %struct._object*, align 8
  %_py_decref_tmp182 = alloca %struct._object*, align 8
  %_py_decref_tmp216 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp235 = alloca %struct._object*, align 8
  %_py_decref_tmp259 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1119, metadata !1880), !dbg !8757
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1120, metadata !1880), !dbg !8758
  %0 = bitcast %struct._object** %ret to i8*, !dbg !8759
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8759
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !1121, metadata !1880), !dbg !8760
  %1 = bitcast %struct._object** %text to i8*, !dbg !8761
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8761
  call void @llvm.dbg.declare(metadata %struct._object** %text, metadata !1122, metadata !1880), !dbg !8762
  %2 = bitcast %struct._object** %b to i8*, !dbg !8763
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8763
  call void @llvm.dbg.declare(metadata %struct._object** %b, metadata !1123, metadata !1880), !dbg !8764
  %3 = bitcast i64* %textlen to i8*, !dbg !8765
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8765
  call void @llvm.dbg.declare(metadata i64* %textlen, metadata !1124, metadata !1880), !dbg !8766
  %4 = bitcast i32* %haslf to i8*, !dbg !8767
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !8767
  call void @llvm.dbg.declare(metadata i32* %haslf, metadata !1125, metadata !1880), !dbg !8768
  store i32 0, i32* %haslf, align 4, !dbg !8768, !tbaa !1883
  %5 = bitcast i32* %needflush to i8*, !dbg !8769
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !8769
  call void @llvm.dbg.declare(metadata i32* %needflush, metadata !1126, metadata !1880), !dbg !8770
  store i32 0, i32* %needflush, align 4, !dbg !8770, !tbaa !1883
  %6 = bitcast i32* %text_needflush to i8*, !dbg !8769
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !8769
  call void @llvm.dbg.declare(metadata i32* %text_needflush, metadata !1127, metadata !1880), !dbg !8771
  store i32 0, i32* %text_needflush, align 4, !dbg !8771, !tbaa !1883
  %7 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8772, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %7, i32 0, i32 1, !dbg !8774
  %8 = load i32, i32* %ok, align 4, !dbg !8774, !tbaa !3895
  %cmp = icmp sle i32 %8, 0, !dbg !8775
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !8776

if.then:                                          ; preds = %entry
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8777, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %9, i32 0, i32 2, !dbg !8781
  %10 = load i32, i32* %detached, align 4, !dbg !8781, !tbaa !3903
  %tobool = icmp ne i32 %10, 0, !dbg !8782
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !8783

if.then.1:                                        ; preds = %if.then
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8784, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !8787
  br label %if.end, !dbg !8788

if.else:                                          ; preds = %if.then
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8789, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !8792
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !8793
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8795

if.end.2:                                         ; preds = %entry
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8796, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), %struct._object** %text), !dbg !8798
  %tobool3 = icmp ne i32 %call, 0, !dbg !8798
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !8799

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !8800
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8800

if.end.5:                                         ; preds = %if.end.2
  %14 = load %struct._object*, %struct._object** %text, align 8, !dbg !8802, !tbaa !1876
  %15 = bitcast %struct._object* %14 to %struct.PyASCIIObject*, !dbg !8804
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %15, i32 0, i32 3, !dbg !8805
  %16 = bitcast %struct.anon* %state to i32*, !dbg !8806
  %bf.load = load i32, i32* %16, align 4, !dbg !8806
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !8806
  %bf.clear = and i32 %bf.lshr, 1, !dbg !8806
  %tobool6 = icmp ne i32 %bf.clear, 0, !dbg !8807
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !8807

cond.true:                                        ; preds = %if.end.5
  br label %cond.end, !dbg !8808

cond.false:                                       ; preds = %if.end.5
  %17 = load %struct._object*, %struct._object** %text, align 8, !dbg !8810, !tbaa !1876
  %call7 = call i32 @_PyUnicode_Ready(%struct._object* %17), !dbg !8812
  br label %cond.end, !dbg !8807

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call7, %cond.false ], !dbg !8807
  %cmp8 = icmp eq i32 %cond, -1, !dbg !8813
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !8816

if.then.9:                                        ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !8817
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8817

if.end.10:                                        ; preds = %cond.end
  br label %do.body, !dbg !8818

do.body:                                          ; preds = %if.end.10
  %18 = bitcast i32* %r to i8*, !dbg !8819
  call void @llvm.lifetime.start(i64 4, i8* %18) #2, !dbg !8819
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1128, metadata !1880), !dbg !8821
  %19 = bitcast %struct._object** %_res to i8*, !dbg !8822
  call void @llvm.lifetime.start(i64 8, i8* %19) #2, !dbg !8822
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1130, metadata !1880), !dbg !8823
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8824, !tbaa !1876
  %21 = bitcast %struct.textio* %20 to %struct._object*, !dbg !8825
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !8826
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8826, !tbaa !2194
  %cmp11 = icmp eq %struct._typeobject* %22, @PyTextIOWrapper_Type, !dbg !8827
  br i1 %cmp11, label %if.then.12, label %if.else.36, !dbg !8828

if.then.12:                                       ; preds = %do.body
  %23 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8829, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %23, i32 0, i32 28, !dbg !8831
  %24 = load %struct._object*, %struct._object** %raw, align 8, !dbg !8831, !tbaa !4375
  %cmp13 = icmp ne %struct._object* %24, null, !dbg !8832
  br i1 %cmp13, label %if.then.14, label %if.else.17, !dbg !8833

if.then.14:                                       ; preds = %if.then.12
  %25 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8834, !tbaa !1876
  %raw15 = getelementptr inbounds %struct.textio, %struct.textio* %25, i32 0, i32 28, !dbg !8836
  %26 = load %struct._object*, %struct._object** %raw15, align 8, !dbg !8836, !tbaa !4375
  %call16 = call i32 @_PyFileIO_closed(%struct._object* %26), !dbg !8837
  store i32 %call16, i32* %r, align 4, !dbg !8838, !tbaa !1883
  br label %if.end.32, !dbg !8839

if.else.17:                                       ; preds = %if.then.12
  %27 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8840, !tbaa !1876
  %call18 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %27, i8* null), !dbg !8842
  store %struct._object* %call18, %struct._object** %_res, align 8, !dbg !8843, !tbaa !1876
  %28 = load %struct._object*, %struct._object** %_res, align 8, !dbg !8844, !tbaa !1876
  %cmp19 = icmp eq %struct._object* %28, null, !dbg !8846
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !8847

if.then.20:                                       ; preds = %if.else.17
  store %struct._object* null, %struct._object** %retval, !dbg !8848
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8850

if.end.21:                                        ; preds = %if.else.17
  %29 = load %struct._object*, %struct._object** %_res, align 8, !dbg !8851, !tbaa !1876
  %call22 = call i32 @PyObject_IsTrue(%struct._object* %29), !dbg !8853
  store i32 %call22, i32* %r, align 4, !dbg !8854, !tbaa !1883
  br label %do.body.23, !dbg !8855

do.body.23:                                       ; preds = %if.end.21
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8856
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !8856
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1131, metadata !1880), !dbg !8858
  %31 = load %struct._object*, %struct._object** %_res, align 8, !dbg !8859, !tbaa !1876
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8, !dbg !8858, !tbaa !1876
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8860, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !8862
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !8863, !tbaa !1927
  %dec = add i64 %33, -1, !dbg !8863
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8863, !tbaa !1927
  %cmp24 = icmp ne i64 %dec, 0, !dbg !8864
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !8865

if.then.25:                                       ; preds = %do.body.23
  br label %if.end.28, !dbg !8866

if.else.26:                                       ; preds = %do.body.23
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8868, !tbaa !1876
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !8870
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !8870, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !8871
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8871, !tbaa !2196
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8872, !tbaa !1876
  call void %36(%struct._object* %37), !dbg !8873
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.26, %if.then.25
  %38 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8874
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !8874
  br label %do.cond, !dbg !8876

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !8877

do.end:                                           ; preds = %do.cond
  %39 = load i32, i32* %r, align 4, !dbg !8879, !tbaa !1883
  %cmp29 = icmp slt i32 %39, 0, !dbg !8882
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !8883

if.then.30:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !8884
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8886

if.end.31:                                        ; preds = %do.end
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.then.14
  %40 = load i32, i32* %r, align 4, !dbg !8887, !tbaa !1883
  %cmp33 = icmp sgt i32 %40, 0, !dbg !8890
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !8891

if.then.34:                                       ; preds = %if.end.32
  %41 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8892, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %41, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !8895
  store %struct._object* null, %struct._object** %retval, !dbg !8896
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8896

if.end.35:                                        ; preds = %if.end.32
  br label %if.end.41, !dbg !8897

if.else.36:                                       ; preds = %do.body
  %42 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8899, !tbaa !1876
  %43 = bitcast %struct.textio* %42 to %struct._object*, !dbg !8902
  %call37 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %43, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !8903
  %cmp38 = icmp eq %struct._object* %call37, null, !dbg !8904
  br i1 %cmp38, label %if.then.39, label %if.end.40, !dbg !8905

if.then.39:                                       ; preds = %if.else.36
  store %struct._object* null, %struct._object** %retval, !dbg !8906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8908

if.end.40:                                        ; preds = %if.else.36
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !8909
  br label %cleanup, !dbg !8909

cleanup:                                          ; preds = %if.end.41, %if.then.39, %if.then.34, %if.then.30, %if.then.20
  %44 = bitcast %struct._object** %_res to i8*, !dbg !8911
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !8911
  %45 = bitcast i32* %r to i8*, !dbg !8911
  call void @llvm.lifetime.end(i64 4, i8* %45) #2, !dbg !8911
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %do.cond.43, !dbg !8917

do.cond.43:                                       ; preds = %cleanup.cont
  br label %do.end.44, !dbg !8918

do.end.44:                                        ; preds = %do.cond.43
  %46 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8920, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %46, i32 0, i32 6, !dbg !8922
  %47 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !8922, !tbaa !4172
  %cmp45 = icmp eq %struct._object* %47, null, !dbg !8923
  br i1 %cmp45, label %if.then.46, label %if.end.48, !dbg !8924

if.then.46:                                       ; preds = %do.end.44
  %call47 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i32 0, i32 0)), !dbg !8925
  store %struct._object* %call47, %struct._object** %retval, !dbg !8926
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !8926

if.end.48:                                        ; preds = %do.end.44
  %48 = load %struct._object*, %struct._object** %text, align 8, !dbg !8927, !tbaa !1876
  %ob_refcnt49 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !8928
  %49 = load i64, i64* %ob_refcnt49, align 8, !dbg !8929, !tbaa !1927
  %inc = add i64 %49, 1, !dbg !8929
  store i64 %inc, i64* %ob_refcnt49, align 8, !dbg !8929, !tbaa !1927
  %50 = load %struct._object*, %struct._object** %text, align 8, !dbg !8930, !tbaa !1876
  %51 = bitcast %struct._object* %50 to %struct.PyASCIIObject*, !dbg !8931
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %51, i32 0, i32 1, !dbg !8932
  %52 = load i64, i64* %length, align 8, !dbg !8932, !tbaa !1937
  store i64 %52, i64* %textlen, align 8, !dbg !8933, !tbaa !1941
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8934, !tbaa !1876
  %writetranslate = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 15, !dbg !8936
  %54 = load i8, i8* %writetranslate, align 1, !dbg !8936, !tbaa !5623
  %conv = sext i8 %54 to i32, !dbg !8934
  %tobool50 = icmp ne i32 %conv, 0, !dbg !8934
  br i1 %tobool50, label %land.lhs.true, label %lor.lhs.false, !dbg !8937

land.lhs.true:                                    ; preds = %if.end.48
  %55 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8938, !tbaa !1876
  %writenl = getelementptr inbounds %struct.textio, %struct.textio* %55, i32 0, i32 10, !dbg !8940
  %56 = load i8*, i8** %writenl, align 8, !dbg !8940, !tbaa !5638
  %cmp51 = icmp ne i8* %56, null, !dbg !8941
  br i1 %cmp51, label %if.then.55, label %lor.lhs.false, !dbg !8942

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end.48
  %57 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8943, !tbaa !1876
  %line_buffering = getelementptr inbounds %struct.textio, %struct.textio* %57, i32 0, i32 11, !dbg !8946
  %58 = load i8, i8* %line_buffering, align 1, !dbg !8946, !tbaa !5584
  %conv53 = sext i8 %58 to i32, !dbg !8947
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !8947
  br i1 %tobool54, label %if.then.55, label %if.end.62, !dbg !8948

if.then.55:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %59 = load %struct._object*, %struct._object** %text, align 8, !dbg !8949, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %text, align 8, !dbg !8951, !tbaa !1876
  %61 = bitcast %struct._object* %60 to %struct.PyASCIIObject*, !dbg !8952
  %length56 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %61, i32 0, i32 1, !dbg !8953
  %62 = load i64, i64* %length56, align 8, !dbg !8953, !tbaa !1937
  %call57 = call i64 @PyUnicode_FindChar(%struct._object* %59, i32 10, i64 0, i64 %62, i32 1), !dbg !8954
  %cmp58 = icmp ne i64 %call57, -1, !dbg !8955
  br i1 %cmp58, label %if.then.60, label %if.end.61, !dbg !8956

if.then.60:                                       ; preds = %if.then.55
  store i32 1, i32* %haslf, align 4, !dbg !8957, !tbaa !1883
  br label %if.end.61, !dbg !8958

if.end.61:                                        ; preds = %if.then.60, %if.then.55
  br label %if.end.62, !dbg !8959

if.end.62:                                        ; preds = %if.end.61, %lor.lhs.false
  %63 = load i32, i32* %haslf, align 4, !dbg !8961, !tbaa !1883
  %tobool63 = icmp ne i32 %63, 0, !dbg !8961
  br i1 %tobool63, label %land.lhs.true.64, label %if.end.95, !dbg !8962

land.lhs.true.64:                                 ; preds = %if.end.62
  %64 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8963, !tbaa !1876
  %writetranslate65 = getelementptr inbounds %struct.textio, %struct.textio* %64, i32 0, i32 15, !dbg !8965
  %65 = load i8, i8* %writetranslate65, align 1, !dbg !8965, !tbaa !5623
  %conv66 = sext i8 %65 to i32, !dbg !8966
  %tobool67 = icmp ne i32 %conv66, 0, !dbg !8966
  br i1 %tobool67, label %land.lhs.true.68, label %if.end.95, !dbg !8967

land.lhs.true.68:                                 ; preds = %land.lhs.true.64
  %66 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8968, !tbaa !1876
  %writenl69 = getelementptr inbounds %struct.textio, %struct.textio* %66, i32 0, i32 10, !dbg !8970
  %67 = load i8*, i8** %writenl69, align 8, !dbg !8970, !tbaa !5638
  %cmp70 = icmp ne i8* %67, null, !dbg !8971
  br i1 %cmp70, label %if.then.72, label %if.end.95, !dbg !8972

if.then.72:                                       ; preds = %land.lhs.true.68
  %68 = bitcast %struct._object** %newtext to i8*, !dbg !8973
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !8973
  call void @llvm.dbg.declare(metadata %struct._object** %newtext, metadata !1137, metadata !1880), !dbg !8974
  %69 = load %struct._object*, %struct._object** %text, align 8, !dbg !8975, !tbaa !1876
  %70 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !8976, !tbaa !1876
  %writenl73 = getelementptr inbounds %struct.textio, %struct.textio* %70, i32 0, i32 10, !dbg !8977
  %71 = load i8*, i8** %writenl73, align 8, !dbg !8977, !tbaa !5638
  %call74 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %69, %struct._Py_Identifier* @PyId_replace, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8* %71), !dbg !8978
  store %struct._object* %call74, %struct._object** %newtext, align 8, !dbg !8974, !tbaa !1876
  br label %do.body.75, !dbg !8979

do.body.75:                                       ; preds = %if.then.72
  %72 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !8980
  call void @llvm.lifetime.start(i64 8, i8* %72) #2, !dbg !8980
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !1140, metadata !1880), !dbg !8982
  %73 = load %struct._object*, %struct._object** %text, align 8, !dbg !8983, !tbaa !1876
  store %struct._object* %73, %struct._object** %_py_decref_tmp76, align 8, !dbg !8982, !tbaa !1876
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8984, !tbaa !1876
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !8986
  %75 = load i64, i64* %ob_refcnt77, align 8, !dbg !8987, !tbaa !1927
  %dec78 = add i64 %75, -1, !dbg !8987
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !8987, !tbaa !1927
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !8988
  br i1 %cmp79, label %if.then.81, label %if.else.82, !dbg !8989

if.then.81:                                       ; preds = %do.body.75
  br label %if.end.85, !dbg !8990

if.else.82:                                       ; preds = %do.body.75
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8992, !tbaa !1876
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !8994
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !8994, !tbaa !2194
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !8995
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8, !dbg !8995, !tbaa !2196
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !8996, !tbaa !1876
  call void %78(%struct._object* %79), !dbg !8997
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.82, %if.then.81
  %80 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !8998
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !8998
  br label %do.cond.86, !dbg !9000

do.cond.86:                                       ; preds = %if.end.85
  br label %do.end.87, !dbg !9001

do.end.87:                                        ; preds = %do.cond.86
  %81 = load %struct._object*, %struct._object** %newtext, align 8, !dbg !9003, !tbaa !1876
  %cmp88 = icmp eq %struct._object* %81, null, !dbg !9005
  br i1 %cmp88, label %if.then.90, label %if.end.91, !dbg !9006

if.then.90:                                       ; preds = %do.end.87
  store %struct._object* null, %struct._object** %retval, !dbg !9007
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92, !dbg !9007

if.end.91:                                        ; preds = %do.end.87
  %82 = load %struct._object*, %struct._object** %newtext, align 8, !dbg !9008, !tbaa !1876
  store %struct._object* %82, %struct._object** %text, align 8, !dbg !9009, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !9010
  br label %cleanup.92, !dbg !9010

cleanup.92:                                       ; preds = %if.end.91, %if.then.90
  %83 = bitcast %struct._object** %newtext to i8*, !dbg !9011
  call void @llvm.lifetime.end(i64 8, i8* %83) #2, !dbg !9011
  %cleanup.dest.93 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.92
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.93, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.94, label %NewDefault.1

cleanup.cont.94:                                  ; preds = %LeafBlock.2
  br label %if.end.95, !dbg !9012

if.end.95:                                        ; preds = %cleanup.cont.94, %land.lhs.true.68, %land.lhs.true.64, %if.end.62
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9013, !tbaa !1876
  %write_through = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 12, !dbg !9015
  %85 = load i8, i8* %write_through, align 1, !dbg !9015, !tbaa !5589
  %tobool96 = icmp ne i8 %85, 0, !dbg !9013
  br i1 %tobool96, label %if.then.97, label %if.end.98, !dbg !9016

if.then.97:                                       ; preds = %if.end.95
  store i32 1, i32* %text_needflush, align 4, !dbg !9017, !tbaa !1883
  br label %if.end.98, !dbg !9018

if.end.98:                                        ; preds = %if.then.97, %if.end.95
  %86 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9019, !tbaa !1876
  %line_buffering99 = getelementptr inbounds %struct.textio, %struct.textio* %86, i32 0, i32 11, !dbg !9021
  %87 = load i8, i8* %line_buffering99, align 1, !dbg !9021, !tbaa !5584
  %conv100 = sext i8 %87 to i32, !dbg !9019
  %tobool101 = icmp ne i32 %conv100, 0, !dbg !9019
  br i1 %tobool101, label %land.lhs.true.102, label %if.end.110, !dbg !9022

land.lhs.true.102:                                ; preds = %if.end.98
  %88 = load i32, i32* %haslf, align 4, !dbg !9023, !tbaa !1883
  %tobool103 = icmp ne i32 %88, 0, !dbg !9023
  br i1 %tobool103, label %if.then.109, label %lor.lhs.false.104, !dbg !9024

lor.lhs.false.104:                                ; preds = %land.lhs.true.102
  %89 = load %struct._object*, %struct._object** %text, align 8, !dbg !9025, !tbaa !1876
  %90 = load %struct._object*, %struct._object** %text, align 8, !dbg !9026, !tbaa !1876
  %91 = bitcast %struct._object* %90 to %struct.PyASCIIObject*, !dbg !9027
  %length105 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %91, i32 0, i32 1, !dbg !9028
  %92 = load i64, i64* %length105, align 8, !dbg !9028, !tbaa !1937
  %call106 = call i64 @PyUnicode_FindChar(%struct._object* %89, i32 13, i64 0, i64 %92, i32 1), !dbg !9029
  %cmp107 = icmp ne i64 %call106, -1, !dbg !9030
  br i1 %cmp107, label %if.then.109, label %if.end.110, !dbg !9031

if.then.109:                                      ; preds = %lor.lhs.false.104, %land.lhs.true.102
  store i32 1, i32* %needflush, align 4, !dbg !9032, !tbaa !1883
  br label %if.end.110, !dbg !9033

if.end.110:                                       ; preds = %if.then.109, %lor.lhs.false.104, %if.end.98
  %93 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9034, !tbaa !1876
  %encodefunc = getelementptr inbounds %struct.textio, %struct.textio* %93, i32 0, i32 20, !dbg !9036
  %94 = load %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)** %encodefunc, align 8, !dbg !9036, !tbaa !5186
  %cmp111 = icmp ne %struct._object* (%struct._object*, %struct._object*)* %94, null, !dbg !9037
  br i1 %cmp111, label %if.then.113, label %if.else.116, !dbg !9038

if.then.113:                                      ; preds = %if.end.110
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9039, !tbaa !1876
  %encodefunc114 = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 20, !dbg !9041
  %96 = load %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)** %encodefunc114, align 8, !dbg !9041, !tbaa !5186
  %97 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9042, !tbaa !1876
  %98 = bitcast %struct.textio* %97 to %struct._object*, !dbg !9043
  %99 = load %struct._object*, %struct._object** %text, align 8, !dbg !9044, !tbaa !1876
  %call115 = call %struct._object* %96(%struct._object* %98, %struct._object* %99), !dbg !9045
  store %struct._object* %call115, %struct._object** %b, align 8, !dbg !9046, !tbaa !1876
  %100 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9047, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %100, i32 0, i32 21, !dbg !9048
  store i8 0, i8* %encoding_start_of_stream, align 1, !dbg !9049, !tbaa !6150
  br label %if.end.119, !dbg !9050

if.else.116:                                      ; preds = %if.end.110
  %101 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9051, !tbaa !1876
  %encoder117 = getelementptr inbounds %struct.textio, %struct.textio* %101, i32 0, i32 6, !dbg !9052
  %102 = load %struct._object*, %struct._object** %encoder117, align 8, !dbg !9052, !tbaa !4172
  %103 = load %struct._object*, %struct._object** @_PyIO_str_encode, align 8, !dbg !9053, !tbaa !1876
  %104 = load %struct._object*, %struct._object** %text, align 8, !dbg !9054, !tbaa !1876
  %call118 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %102, %struct._object* %103, %struct._object* %104, i8* null), !dbg !9055
  store %struct._object* %call118, %struct._object** %b, align 8, !dbg !9056, !tbaa !1876
  br label %if.end.119

if.end.119:                                       ; preds = %if.else.116, %if.then.113
  br label %do.body.120, !dbg !9057

do.body.120:                                      ; preds = %if.end.119
  %105 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !9058
  call void @llvm.lifetime.start(i64 8, i8* %105) #2, !dbg !9058
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp121, metadata !1142, metadata !1880), !dbg !9060
  %106 = load %struct._object*, %struct._object** %text, align 8, !dbg !9061, !tbaa !1876
  store %struct._object* %106, %struct._object** %_py_decref_tmp121, align 8, !dbg !9060, !tbaa !1876
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !9062, !tbaa !1876
  %ob_refcnt122 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0, !dbg !9064
  %108 = load i64, i64* %ob_refcnt122, align 8, !dbg !9065, !tbaa !1927
  %dec123 = add i64 %108, -1, !dbg !9065
  store i64 %dec123, i64* %ob_refcnt122, align 8, !dbg !9065, !tbaa !1927
  %cmp124 = icmp ne i64 %dec123, 0, !dbg !9066
  br i1 %cmp124, label %if.then.126, label %if.else.127, !dbg !9067

if.then.126:                                      ; preds = %do.body.120
  br label %if.end.130, !dbg !9068

if.else.127:                                      ; preds = %do.body.120
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !9070, !tbaa !1876
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 1, !dbg !9072
  %110 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8, !dbg !9072, !tbaa !2194
  %tp_dealloc129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %110, i32 0, i32 4, !dbg !9073
  %111 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc129, align 8, !dbg !9073, !tbaa !2196
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp121, align 8, !dbg !9074, !tbaa !1876
  call void %111(%struct._object* %112), !dbg !9075
  br label %if.end.130

if.end.130:                                       ; preds = %if.else.127, %if.then.126
  %113 = bitcast %struct._object** %_py_decref_tmp121 to i8*, !dbg !9076
  call void @llvm.lifetime.end(i64 8, i8* %113) #2, !dbg !9076
  br label %do.cond.131, !dbg !9078

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !9079

do.end.132:                                       ; preds = %do.cond.131
  %114 = load %struct._object*, %struct._object** %b, align 8, !dbg !9081, !tbaa !1876
  %cmp133 = icmp eq %struct._object* %114, null, !dbg !9083
  br i1 %cmp133, label %if.then.135, label %if.end.136, !dbg !9084

if.then.135:                                      ; preds = %do.end.132
  store %struct._object* null, %struct._object** %retval, !dbg !9085
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9085

if.end.136:                                       ; preds = %do.end.132
  %115 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9086, !tbaa !1876
  %pending_bytes = getelementptr inbounds %struct.textio, %struct.textio* %115, i32 0, i32 24, !dbg !9087
  %116 = load %struct._object*, %struct._object** %pending_bytes, align 8, !dbg !9087, !tbaa !4288
  %cmp137 = icmp eq %struct._object* %116, null, !dbg !9088
  br i1 %cmp137, label %if.then.139, label %if.end.160, !dbg !9089

if.then.139:                                      ; preds = %if.end.136
  %call140 = call %struct._object* @PyList_New(i64 0), !dbg !9090
  %117 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9091, !tbaa !1876
  %pending_bytes141 = getelementptr inbounds %struct.textio, %struct.textio* %117, i32 0, i32 24, !dbg !9092
  store %struct._object* %call140, %struct._object** %pending_bytes141, align 8, !dbg !9093, !tbaa !4288
  %118 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9094, !tbaa !1876
  %pending_bytes142 = getelementptr inbounds %struct.textio, %struct.textio* %118, i32 0, i32 24, !dbg !9095
  %119 = load %struct._object*, %struct._object** %pending_bytes142, align 8, !dbg !9095, !tbaa !4288
  %cmp143 = icmp eq %struct._object* %119, null, !dbg !9096
  br i1 %cmp143, label %if.then.145, label %if.end.159, !dbg !9097

if.then.145:                                      ; preds = %if.then.139
  br label %do.body.146, !dbg !9098

do.body.146:                                      ; preds = %if.then.145
  %120 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !9099
  call void @llvm.lifetime.start(i64 8, i8* %120) #2, !dbg !9099
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp147, metadata !1144, metadata !1880), !dbg !9101
  %121 = load %struct._object*, %struct._object** %b, align 8, !dbg !9102, !tbaa !1876
  store %struct._object* %121, %struct._object** %_py_decref_tmp147, align 8, !dbg !9101, !tbaa !1876
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !9103, !tbaa !1876
  %ob_refcnt148 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 0, !dbg !9105
  %123 = load i64, i64* %ob_refcnt148, align 8, !dbg !9106, !tbaa !1927
  %dec149 = add i64 %123, -1, !dbg !9106
  store i64 %dec149, i64* %ob_refcnt148, align 8, !dbg !9106, !tbaa !1927
  %cmp150 = icmp ne i64 %dec149, 0, !dbg !9107
  br i1 %cmp150, label %if.then.152, label %if.else.153, !dbg !9108

if.then.152:                                      ; preds = %do.body.146
  br label %if.end.156, !dbg !9109

if.else.153:                                      ; preds = %do.body.146
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !9111, !tbaa !1876
  %ob_type154 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 1, !dbg !9113
  %125 = load %struct._typeobject*, %struct._typeobject** %ob_type154, align 8, !dbg !9113, !tbaa !2194
  %tp_dealloc155 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %125, i32 0, i32 4, !dbg !9114
  %126 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc155, align 8, !dbg !9114, !tbaa !2196
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp147, align 8, !dbg !9115, !tbaa !1876
  call void %126(%struct._object* %127), !dbg !9116
  br label %if.end.156

if.end.156:                                       ; preds = %if.else.153, %if.then.152
  %128 = bitcast %struct._object** %_py_decref_tmp147 to i8*, !dbg !9117
  call void @llvm.lifetime.end(i64 8, i8* %128) #2, !dbg !9117
  br label %do.cond.157, !dbg !9119

do.cond.157:                                      ; preds = %if.end.156
  br label %do.end.158, !dbg !9120

do.end.158:                                       ; preds = %do.cond.157
  store %struct._object* null, %struct._object** %retval, !dbg !9122
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9122

if.end.159:                                       ; preds = %if.then.139
  %129 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9123, !tbaa !1876
  %pending_bytes_count = getelementptr inbounds %struct.textio, %struct.textio* %129, i32 0, i32 25, !dbg !9124
  store i64 0, i64* %pending_bytes_count, align 8, !dbg !9125, !tbaa !5182
  br label %if.end.160, !dbg !9126

if.end.160:                                       ; preds = %if.end.159, %if.end.136
  %130 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9127, !tbaa !1876
  %pending_bytes161 = getelementptr inbounds %struct.textio, %struct.textio* %130, i32 0, i32 24, !dbg !9128
  %131 = load %struct._object*, %struct._object** %pending_bytes161, align 8, !dbg !9128, !tbaa !4288
  %132 = load %struct._object*, %struct._object** %b, align 8, !dbg !9129, !tbaa !1876
  %call162 = call i32 @PyList_Append(%struct._object* %131, %struct._object* %132), !dbg !9130
  %cmp163 = icmp slt i32 %call162, 0, !dbg !9131
  br i1 %cmp163, label %if.then.165, label %if.end.179, !dbg !9132

if.then.165:                                      ; preds = %if.end.160
  br label %do.body.166, !dbg !9133

do.body.166:                                      ; preds = %if.then.165
  %133 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !9134
  call void @llvm.lifetime.start(i64 8, i8* %133) #2, !dbg !9134
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp167, metadata !1150, metadata !1880), !dbg !9136
  %134 = load %struct._object*, %struct._object** %b, align 8, !dbg !9137, !tbaa !1876
  store %struct._object* %134, %struct._object** %_py_decref_tmp167, align 8, !dbg !9136, !tbaa !1876
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !9138, !tbaa !1876
  %ob_refcnt168 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 0, !dbg !9140
  %136 = load i64, i64* %ob_refcnt168, align 8, !dbg !9141, !tbaa !1927
  %dec169 = add i64 %136, -1, !dbg !9141
  store i64 %dec169, i64* %ob_refcnt168, align 8, !dbg !9141, !tbaa !1927
  %cmp170 = icmp ne i64 %dec169, 0, !dbg !9142
  br i1 %cmp170, label %if.then.172, label %if.else.173, !dbg !9143

if.then.172:                                      ; preds = %do.body.166
  br label %if.end.176, !dbg !9144

if.else.173:                                      ; preds = %do.body.166
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !9146, !tbaa !1876
  %ob_type174 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 1, !dbg !9148
  %138 = load %struct._typeobject*, %struct._typeobject** %ob_type174, align 8, !dbg !9148, !tbaa !2194
  %tp_dealloc175 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %138, i32 0, i32 4, !dbg !9149
  %139 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc175, align 8, !dbg !9149, !tbaa !2196
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !9150, !tbaa !1876
  call void %139(%struct._object* %140), !dbg !9151
  br label %if.end.176

if.end.176:                                       ; preds = %if.else.173, %if.then.172
  %141 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !9152
  call void @llvm.lifetime.end(i64 8, i8* %141) #2, !dbg !9152
  br label %do.cond.177, !dbg !9154

do.cond.177:                                      ; preds = %if.end.176
  br label %do.end.178, !dbg !9155

do.end.178:                                       ; preds = %do.cond.177
  store %struct._object* null, %struct._object** %retval, !dbg !9157
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9157

if.end.179:                                       ; preds = %if.end.160
  %142 = load %struct._object*, %struct._object** %b, align 8, !dbg !9158, !tbaa !1876
  %143 = bitcast %struct._object* %142 to %struct.PyVarObject*, !dbg !9159
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %143, i32 0, i32 1, !dbg !9160
  %144 = load i64, i64* %ob_size, align 8, !dbg !9160, !tbaa !9161
  %145 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9162, !tbaa !1876
  %pending_bytes_count180 = getelementptr inbounds %struct.textio, %struct.textio* %145, i32 0, i32 25, !dbg !9163
  %146 = load i64, i64* %pending_bytes_count180, align 8, !dbg !9164, !tbaa !5182
  %add = add i64 %146, %144, !dbg !9164
  store i64 %add, i64* %pending_bytes_count180, align 8, !dbg !9164, !tbaa !5182
  br label %do.body.181, !dbg !9165

do.body.181:                                      ; preds = %if.end.179
  %147 = bitcast %struct._object** %_py_decref_tmp182 to i8*, !dbg !9166
  call void @llvm.lifetime.start(i64 8, i8* %147) #2, !dbg !9166
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp182, metadata !1154, metadata !1880), !dbg !9168
  %148 = load %struct._object*, %struct._object** %b, align 8, !dbg !9169, !tbaa !1876
  store %struct._object* %148, %struct._object** %_py_decref_tmp182, align 8, !dbg !9168, !tbaa !1876
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !9170, !tbaa !1876
  %ob_refcnt183 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0, !dbg !9172
  %150 = load i64, i64* %ob_refcnt183, align 8, !dbg !9173, !tbaa !1927
  %dec184 = add i64 %150, -1, !dbg !9173
  store i64 %dec184, i64* %ob_refcnt183, align 8, !dbg !9173, !tbaa !1927
  %cmp185 = icmp ne i64 %dec184, 0, !dbg !9174
  br i1 %cmp185, label %if.then.187, label %if.else.188, !dbg !9175

if.then.187:                                      ; preds = %do.body.181
  br label %if.end.191, !dbg !9176

if.else.188:                                      ; preds = %do.body.181
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !9178, !tbaa !1876
  %ob_type189 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 1, !dbg !9180
  %152 = load %struct._typeobject*, %struct._typeobject** %ob_type189, align 8, !dbg !9180, !tbaa !2194
  %tp_dealloc190 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %152, i32 0, i32 4, !dbg !9181
  %153 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc190, align 8, !dbg !9181, !tbaa !2196
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp182, align 8, !dbg !9182, !tbaa !1876
  call void %153(%struct._object* %154), !dbg !9183
  br label %if.end.191

if.end.191:                                       ; preds = %if.else.188, %if.then.187
  %155 = bitcast %struct._object** %_py_decref_tmp182 to i8*, !dbg !9184
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !9184
  br label %do.cond.192, !dbg !9185

do.cond.192:                                      ; preds = %if.end.191
  br label %do.end.193, !dbg !9186

do.end.193:                                       ; preds = %do.cond.192
  %156 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9188, !tbaa !1876
  %pending_bytes_count194 = getelementptr inbounds %struct.textio, %struct.textio* %156, i32 0, i32 25, !dbg !9190
  %157 = load i64, i64* %pending_bytes_count194, align 8, !dbg !9190, !tbaa !5182
  %158 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9191, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %158, i32 0, i32 3, !dbg !9192
  %159 = load i64, i64* %chunk_size, align 8, !dbg !9192, !tbaa !5565
  %cmp195 = icmp sgt i64 %157, %159, !dbg !9193
  br i1 %cmp195, label %if.then.201, label %lor.lhs.false.197, !dbg !9194

lor.lhs.false.197:                                ; preds = %do.end.193
  %160 = load i32, i32* %needflush, align 4, !dbg !9195, !tbaa !1883
  %tobool198 = icmp ne i32 %160, 0, !dbg !9195
  br i1 %tobool198, label %if.then.201, label %lor.lhs.false.199, !dbg !9197

lor.lhs.false.199:                                ; preds = %lor.lhs.false.197
  %161 = load i32, i32* %text_needflush, align 4, !dbg !9198, !tbaa !1883
  %tobool200 = icmp ne i32 %161, 0, !dbg !9198
  br i1 %tobool200, label %if.then.201, label %if.end.207, !dbg !9199

if.then.201:                                      ; preds = %lor.lhs.false.199, %lor.lhs.false.197, %do.end.193
  %162 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9200, !tbaa !1876
  %call202 = call i32 @_textiowrapper_writeflush(%struct.textio* %162), !dbg !9203
  %cmp203 = icmp slt i32 %call202, 0, !dbg !9204
  br i1 %cmp203, label %if.then.205, label %if.end.206, !dbg !9205

if.then.205:                                      ; preds = %if.then.201
  store %struct._object* null, %struct._object** %retval, !dbg !9206
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9206

if.end.206:                                       ; preds = %if.then.201
  br label %if.end.207, !dbg !9207

if.end.207:                                       ; preds = %if.end.206, %lor.lhs.false.199
  %163 = load i32, i32* %needflush, align 4, !dbg !9208, !tbaa !1883
  %tobool208 = icmp ne i32 %163, 0, !dbg !9208
  br i1 %tobool208, label %if.then.209, label %if.end.228, !dbg !9209

if.then.209:                                      ; preds = %if.end.207
  %164 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9210, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %164, i32 0, i32 4, !dbg !9211
  %165 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !9211, !tbaa !4115
  %166 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !9212, !tbaa !1876
  %call210 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %165, %struct._object* %166, i8* null), !dbg !9213
  store %struct._object* %call210, %struct._object** %ret, align 8, !dbg !9214, !tbaa !1876
  %167 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9215, !tbaa !1876
  %cmp211 = icmp eq %struct._object* %167, null, !dbg !9217
  br i1 %cmp211, label %if.then.213, label %if.end.214, !dbg !9218

if.then.213:                                      ; preds = %if.then.209
  store %struct._object* null, %struct._object** %retval, !dbg !9219
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9219

if.end.214:                                       ; preds = %if.then.209
  br label %do.body.215, !dbg !9220

do.body.215:                                      ; preds = %if.end.214
  %168 = bitcast %struct._object** %_py_decref_tmp216 to i8*, !dbg !9221
  call void @llvm.lifetime.start(i64 8, i8* %168) #2, !dbg !9221
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp216, metadata !1156, metadata !1880), !dbg !9223
  %169 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9224, !tbaa !1876
  store %struct._object* %169, %struct._object** %_py_decref_tmp216, align 8, !dbg !9223, !tbaa !1876
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !9225, !tbaa !1876
  %ob_refcnt217 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 0, !dbg !9227
  %171 = load i64, i64* %ob_refcnt217, align 8, !dbg !9228, !tbaa !1927
  %dec218 = add i64 %171, -1, !dbg !9228
  store i64 %dec218, i64* %ob_refcnt217, align 8, !dbg !9228, !tbaa !1927
  %cmp219 = icmp ne i64 %dec218, 0, !dbg !9229
  br i1 %cmp219, label %if.then.221, label %if.else.222, !dbg !9230

if.then.221:                                      ; preds = %do.body.215
  br label %if.end.225, !dbg !9231

if.else.222:                                      ; preds = %do.body.215
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !9233, !tbaa !1876
  %ob_type223 = getelementptr inbounds %struct._object, %struct._object* %172, i32 0, i32 1, !dbg !9235
  %173 = load %struct._typeobject*, %struct._typeobject** %ob_type223, align 8, !dbg !9235, !tbaa !2194
  %tp_dealloc224 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %173, i32 0, i32 4, !dbg !9236
  %174 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc224, align 8, !dbg !9236, !tbaa !2196
  %175 = load %struct._object*, %struct._object** %_py_decref_tmp216, align 8, !dbg !9237, !tbaa !1876
  call void %174(%struct._object* %175), !dbg !9238
  br label %if.end.225

if.end.225:                                       ; preds = %if.else.222, %if.then.221
  %176 = bitcast %struct._object** %_py_decref_tmp216 to i8*, !dbg !9239
  call void @llvm.lifetime.end(i64 8, i8* %176) #2, !dbg !9239
  br label %do.cond.226, !dbg !9241

do.cond.226:                                      ; preds = %if.end.225
  br label %do.end.227, !dbg !9242

do.end.227:                                       ; preds = %do.cond.226
  br label %if.end.228, !dbg !9244

if.end.228:                                       ; preds = %do.end.227, %if.end.207
  br label %do.body.229, !dbg !9245

do.body.229:                                      ; preds = %if.end.228
  %177 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9246
  call void @llvm.lifetime.start(i64 8, i8* %177) #2, !dbg !9246
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1160, metadata !1880), !dbg !9248
  %178 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9249, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %178, i32 0, i32 26, !dbg !9250
  %179 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !9250, !tbaa !4317
  store %struct._object* %179, %struct._object** %_py_tmp, align 8, !dbg !9248, !tbaa !1876
  %180 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9251, !tbaa !1876
  %cmp230 = icmp ne %struct._object* %180, null, !dbg !9252
  br i1 %cmp230, label %if.then.232, label %if.end.247, !dbg !9253

if.then.232:                                      ; preds = %do.body.229
  %181 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9254, !tbaa !1876
  %snapshot233 = getelementptr inbounds %struct.textio, %struct.textio* %181, i32 0, i32 26, !dbg !9256
  store %struct._object* null, %struct._object** %snapshot233, align 8, !dbg !9257, !tbaa !4317
  br label %do.body.234, !dbg !9258

do.body.234:                                      ; preds = %if.then.232
  %182 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !9259
  call void @llvm.lifetime.start(i64 8, i8* %182) #2, !dbg !9259
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp235, metadata !1162, metadata !1880), !dbg !9261
  %183 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9262, !tbaa !1876
  store %struct._object* %183, %struct._object** %_py_decref_tmp235, align 8, !dbg !9261, !tbaa !1876
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !9263, !tbaa !1876
  %ob_refcnt236 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 0, !dbg !9265
  %185 = load i64, i64* %ob_refcnt236, align 8, !dbg !9266, !tbaa !1927
  %dec237 = add i64 %185, -1, !dbg !9266
  store i64 %dec237, i64* %ob_refcnt236, align 8, !dbg !9266, !tbaa !1927
  %cmp238 = icmp ne i64 %dec237, 0, !dbg !9267
  br i1 %cmp238, label %if.then.240, label %if.else.241, !dbg !9268

if.then.240:                                      ; preds = %do.body.234
  br label %if.end.244, !dbg !9269

if.else.241:                                      ; preds = %do.body.234
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !9271, !tbaa !1876
  %ob_type242 = getelementptr inbounds %struct._object, %struct._object* %186, i32 0, i32 1, !dbg !9273
  %187 = load %struct._typeobject*, %struct._typeobject** %ob_type242, align 8, !dbg !9273, !tbaa !2194
  %tp_dealloc243 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %187, i32 0, i32 4, !dbg !9274
  %188 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc243, align 8, !dbg !9274, !tbaa !2196
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !9275, !tbaa !1876
  call void %188(%struct._object* %189), !dbg !9276
  br label %if.end.244

if.end.244:                                       ; preds = %if.else.241, %if.then.240
  %190 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !9277
  call void @llvm.lifetime.end(i64 8, i8* %190) #2, !dbg !9277
  br label %do.cond.245, !dbg !9279

do.cond.245:                                      ; preds = %if.end.244
  br label %do.end.246, !dbg !9280

do.end.246:                                       ; preds = %do.cond.245
  br label %if.end.247, !dbg !9282

if.end.247:                                       ; preds = %do.end.246, %do.body.229
  %191 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9284
  call void @llvm.lifetime.end(i64 8, i8* %191) #2, !dbg !9284
  br label %do.cond.248, !dbg !9287

do.cond.248:                                      ; preds = %if.end.247
  br label %do.end.249, !dbg !9288

do.end.249:                                       ; preds = %do.cond.248
  %192 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9290, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %192, i32 0, i32 7, !dbg !9291
  %193 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !9291, !tbaa !4201
  %tobool250 = icmp ne %struct._object* %193, null, !dbg !9290
  br i1 %tobool250, label %if.then.251, label %if.end.271, !dbg !9292

if.then.251:                                      ; preds = %do.end.249
  %194 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9293, !tbaa !1876
  %decoder252 = getelementptr inbounds %struct.textio, %struct.textio* %194, i32 0, i32 7, !dbg !9294
  %195 = load %struct._object*, %struct._object** %decoder252, align 8, !dbg !9294, !tbaa !4201
  %call253 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %195, %struct._Py_Identifier* @PyId_reset, i8* null), !dbg !9295
  store %struct._object* %call253, %struct._object** %ret, align 8, !dbg !9296, !tbaa !1876
  %196 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9297, !tbaa !1876
  %cmp254 = icmp eq %struct._object* %196, null, !dbg !9299
  br i1 %cmp254, label %if.then.256, label %if.end.257, !dbg !9300

if.then.256:                                      ; preds = %if.then.251
  store %struct._object* null, %struct._object** %retval, !dbg !9301
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9301

if.end.257:                                       ; preds = %if.then.251
  br label %do.body.258, !dbg !9302

do.body.258:                                      ; preds = %if.end.257
  %197 = bitcast %struct._object** %_py_decref_tmp259 to i8*, !dbg !9303
  call void @llvm.lifetime.start(i64 8, i8* %197) #2, !dbg !9303
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp259, metadata !1166, metadata !1880), !dbg !9305
  %198 = load %struct._object*, %struct._object** %ret, align 8, !dbg !9306, !tbaa !1876
  store %struct._object* %198, %struct._object** %_py_decref_tmp259, align 8, !dbg !9305, !tbaa !1876
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp259, align 8, !dbg !9307, !tbaa !1876
  %ob_refcnt260 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 0, !dbg !9309
  %200 = load i64, i64* %ob_refcnt260, align 8, !dbg !9310, !tbaa !1927
  %dec261 = add i64 %200, -1, !dbg !9310
  store i64 %dec261, i64* %ob_refcnt260, align 8, !dbg !9310, !tbaa !1927
  %cmp262 = icmp ne i64 %dec261, 0, !dbg !9311
  br i1 %cmp262, label %if.then.264, label %if.else.265, !dbg !9312

if.then.264:                                      ; preds = %do.body.258
  br label %if.end.268, !dbg !9313

if.else.265:                                      ; preds = %do.body.258
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp259, align 8, !dbg !9315, !tbaa !1876
  %ob_type266 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 1, !dbg !9317
  %202 = load %struct._typeobject*, %struct._typeobject** %ob_type266, align 8, !dbg !9317, !tbaa !2194
  %tp_dealloc267 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %202, i32 0, i32 4, !dbg !9318
  %203 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc267, align 8, !dbg !9318, !tbaa !2196
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp259, align 8, !dbg !9319, !tbaa !1876
  call void %203(%struct._object* %204), !dbg !9320
  br label %if.end.268

if.end.268:                                       ; preds = %if.else.265, %if.then.264
  %205 = bitcast %struct._object** %_py_decref_tmp259 to i8*, !dbg !9321
  call void @llvm.lifetime.end(i64 8, i8* %205) #2, !dbg !9321
  br label %do.cond.269, !dbg !9323

do.cond.269:                                      ; preds = %if.end.268
  br label %do.end.270, !dbg !9324

do.end.270:                                       ; preds = %do.cond.269
  br label %if.end.271, !dbg !9326

if.end.271:                                       ; preds = %do.end.270, %do.end.249
  %206 = load i64, i64* %textlen, align 8, !dbg !9327, !tbaa !1941
  %call272 = call %struct._object* @PyLong_FromSsize_t(i64 %206), !dbg !9328
  store %struct._object* %call272, %struct._object** %retval, !dbg !9329
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.273, !dbg !9329

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.273

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.273

cleanup.273:                                      ; preds = %NewDefault.1, %NewDefault, %if.end.271, %if.then.256, %if.then.213, %if.then.205, %do.end.178, %do.end.158, %if.then.135, %if.then.46, %if.then.9, %if.then.4, %if.end
  %207 = bitcast i32* %text_needflush to i8*, !dbg !9330
  call void @llvm.lifetime.end(i64 4, i8* %207) #2, !dbg !9330
  %208 = bitcast i32* %needflush to i8*, !dbg !9330
  call void @llvm.lifetime.end(i64 4, i8* %208) #2, !dbg !9330
  %209 = bitcast i32* %haslf to i8*, !dbg !9330
  call void @llvm.lifetime.end(i64 4, i8* %209) #2, !dbg !9330
  %210 = bitcast i64* %textlen to i8*, !dbg !9330
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !9330
  %211 = bitcast %struct._object** %b to i8*, !dbg !9330
  call void @llvm.lifetime.end(i64 8, i8* %211) #2, !dbg !9330
  %212 = bitcast %struct._object** %text to i8*, !dbg !9330
  call void @llvm.lifetime.end(i64 8, i8* %212) #2, !dbg !9330
  %213 = bitcast %struct._object** %ret to i8*, !dbg !9330
  call void @llvm.lifetime.end(i64 8, i8* %213) #2, !dbg !9330
  %214 = load %struct._object*, %struct._object** %retval, !dbg !9330
  ret %struct._object* %214, !dbg !9330
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_read(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %result = alloca %struct._object*, align 8
  %chunks = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %bytes = alloca %struct._object*, align 8
  %decoded = alloca %struct._object*, align 8
  %_py_decref_tmp65 = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp104 = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %remaining = alloca i64, align 8
  %_py_decref_tmp156 = alloca %struct._object*, align 8
  %_py_tmp182 = alloca %struct._object*, align 8
  %_py_decref_tmp186 = alloca %struct._object*, align 8
  %_py_tmp205 = alloca %struct._object*, align 8
  %_py_decref_tmp209 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %_py_xdecref_tmp247 = alloca %struct._object*, align 8
  %_py_decref_tmp251 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1172, metadata !1880), !dbg !9331
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1173, metadata !1880), !dbg !9332
  %0 = bitcast i64* %n to i8*, !dbg !9333
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9333
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1174, metadata !1880), !dbg !9334
  store i64 -1, i64* %n, align 8, !dbg !9334, !tbaa !1941
  %1 = bitcast %struct._object** %result to i8*, !dbg !9335
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9335
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1175, metadata !1880), !dbg !9336
  store %struct._object* null, %struct._object** %result, align 8, !dbg !9336, !tbaa !1876
  %2 = bitcast %struct._object** %chunks to i8*, !dbg !9335
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9335
  call void @llvm.dbg.declare(metadata %struct._object** %chunks, metadata !1176, metadata !1880), !dbg !9337
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !9337, !tbaa !1876
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9338, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 1, !dbg !9340
  %4 = load i32, i32* %ok, align 4, !dbg !9340, !tbaa !3895
  %cmp = icmp sle i32 %4, 0, !dbg !9341
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !9342

if.then:                                          ; preds = %entry
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9343, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 2, !dbg !9347
  %6 = load i32, i32* %detached, align 4, !dbg !9347, !tbaa !3903
  %tobool = icmp ne i32 %6, 0, !dbg !9348
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !9349

if.then.1:                                        ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9350, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !9353
  br label %if.end, !dbg !9354

if.else:                                          ; preds = %if.then
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9355, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !9358
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !9359
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9361

if.end.2:                                         ; preds = %entry
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9362, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i32 (%struct._object*, i8*)* @_PyIO_ConvertSsize_t, i64* %n), !dbg !9364
  %tobool3 = icmp ne i32 %call, 0, !dbg !9364
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !9365

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !9366
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9366

if.end.5:                                         ; preds = %if.end.2
  br label %do.body, !dbg !9367

do.body:                                          ; preds = %if.end.5
  %10 = bitcast i32* %r to i8*, !dbg !9368
  call void @llvm.lifetime.start(i64 4, i8* %10) #2, !dbg !9368
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1177, metadata !1880), !dbg !9370
  %11 = bitcast %struct._object** %_res to i8*, !dbg !9371
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !9371
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1179, metadata !1880), !dbg !9372
  %12 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9373, !tbaa !1876
  %13 = bitcast %struct.textio* %12 to %struct._object*, !dbg !9374
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !9375
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9375, !tbaa !2194
  %cmp6 = icmp eq %struct._typeobject* %14, @PyTextIOWrapper_Type, !dbg !9376
  br i1 %cmp6, label %if.then.7, label %if.else.31, !dbg !9377

if.then.7:                                        ; preds = %do.body
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9378, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %15, i32 0, i32 28, !dbg !9380
  %16 = load %struct._object*, %struct._object** %raw, align 8, !dbg !9380, !tbaa !4375
  %cmp8 = icmp ne %struct._object* %16, null, !dbg !9381
  br i1 %cmp8, label %if.then.9, label %if.else.12, !dbg !9382

if.then.9:                                        ; preds = %if.then.7
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9383, !tbaa !1876
  %raw10 = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 28, !dbg !9385
  %18 = load %struct._object*, %struct._object** %raw10, align 8, !dbg !9385, !tbaa !4375
  %call11 = call i32 @_PyFileIO_closed(%struct._object* %18), !dbg !9386
  store i32 %call11, i32* %r, align 4, !dbg !9387, !tbaa !1883
  br label %if.end.27, !dbg !9388

if.else.12:                                       ; preds = %if.then.7
  %19 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9389, !tbaa !1876
  %call13 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %19, i8* null), !dbg !9391
  store %struct._object* %call13, %struct._object** %_res, align 8, !dbg !9392, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %_res, align 8, !dbg !9393, !tbaa !1876
  %cmp14 = icmp eq %struct._object* %20, null, !dbg !9395
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !9396

if.then.15:                                       ; preds = %if.else.12
  store %struct._object* null, %struct._object** %retval, !dbg !9397
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9399

if.end.16:                                        ; preds = %if.else.12
  %21 = load %struct._object*, %struct._object** %_res, align 8, !dbg !9400, !tbaa !1876
  %call17 = call i32 @PyObject_IsTrue(%struct._object* %21), !dbg !9402
  store i32 %call17, i32* %r, align 4, !dbg !9403, !tbaa !1883
  br label %do.body.18, !dbg !9404

do.body.18:                                       ; preds = %if.end.16
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9405
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !9405
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1180, metadata !1880), !dbg !9407
  %23 = load %struct._object*, %struct._object** %_res, align 8, !dbg !9408, !tbaa !1876
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !9407, !tbaa !1876
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9409, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !9411
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !9412, !tbaa !1927
  %dec = add i64 %25, -1, !dbg !9412
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9412, !tbaa !1927
  %cmp19 = icmp ne i64 %dec, 0, !dbg !9413
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !9414

if.then.20:                                       ; preds = %do.body.18
  br label %if.end.23, !dbg !9415

if.else.21:                                       ; preds = %do.body.18
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9417, !tbaa !1876
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !9419
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !9419, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !9420
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9420, !tbaa !2196
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9421, !tbaa !1876
  call void %28(%struct._object* %29), !dbg !9422
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.21, %if.then.20
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9423
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !9423
  br label %do.cond, !dbg !9425

do.cond:                                          ; preds = %if.end.23
  br label %do.end, !dbg !9426

do.end:                                           ; preds = %do.cond
  %31 = load i32, i32* %r, align 4, !dbg !9428, !tbaa !1883
  %cmp24 = icmp slt i32 %31, 0, !dbg !9431
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !9432

if.then.25:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !9433
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9435

if.end.26:                                        ; preds = %do.end
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then.9
  %32 = load i32, i32* %r, align 4, !dbg !9436, !tbaa !1883
  %cmp28 = icmp sgt i32 %32, 0, !dbg !9439
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !9440

if.then.29:                                       ; preds = %if.end.27
  %33 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9441, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !9444
  store %struct._object* null, %struct._object** %retval, !dbg !9445
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9445

if.end.30:                                        ; preds = %if.end.27
  br label %if.end.36, !dbg !9446

if.else.31:                                       ; preds = %do.body
  %34 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9448, !tbaa !1876
  %35 = bitcast %struct.textio* %34 to %struct._object*, !dbg !9451
  %call32 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %35, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !9452
  %cmp33 = icmp eq %struct._object* %call32, null, !dbg !9453
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !9454

if.then.34:                                       ; preds = %if.else.31
  store %struct._object* null, %struct._object** %retval, !dbg !9455
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9457

if.end.35:                                        ; preds = %if.else.31
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.end.30
  store i32 0, i32* %cleanup.dest.slot, !dbg !9458
  br label %cleanup, !dbg !9458

cleanup:                                          ; preds = %if.end.36, %if.then.34, %if.then.29, %if.then.25, %if.then.15
  %36 = bitcast %struct._object** %_res to i8*, !dbg !9460
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !9460
  %37 = bitcast i32* %r to i8*, !dbg !9460
  call void @llvm.lifetime.end(i64 4, i8* %37) #2, !dbg !9460
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %do.cond.38, !dbg !9466

do.cond.38:                                       ; preds = %cleanup.cont
  br label %do.end.39, !dbg !9467

do.end.39:                                        ; preds = %do.cond.38
  %38 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9469, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %38, i32 0, i32 7, !dbg !9471
  %39 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !9471, !tbaa !4201
  %cmp40 = icmp eq %struct._object* %39, null, !dbg !9472
  br i1 %cmp40, label %if.then.41, label %if.end.43, !dbg !9473

if.then.41:                                       ; preds = %do.end.39
  %call42 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0)), !dbg !9474
  store %struct._object* %call42, %struct._object** %retval, !dbg !9475
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9475

if.end.43:                                        ; preds = %do.end.39
  %40 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9476, !tbaa !1876
  %call44 = call i32 @_textiowrapper_writeflush(%struct.textio* %40), !dbg !9478
  %cmp45 = icmp slt i32 %call44, 0, !dbg !9479
  br i1 %cmp45, label %if.then.46, label %if.end.47, !dbg !9480

if.then.46:                                       ; preds = %if.end.43
  store %struct._object* null, %struct._object** %retval, !dbg !9481
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9481

if.end.47:                                        ; preds = %if.end.43
  %41 = load i64, i64* %n, align 8, !dbg !9482, !tbaa !1941
  %cmp48 = icmp slt i64 %41, 0, !dbg !9483
  br i1 %cmp48, label %if.then.49, label %if.else.120, !dbg !9484

if.then.49:                                       ; preds = %if.end.47
  %42 = bitcast %struct._object** %bytes to i8*, !dbg !9485
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !9485
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !1186, metadata !1880), !dbg !9486
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9487, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %43, i32 0, i32 4, !dbg !9488
  %44 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !9488, !tbaa !4115
  %call50 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %44, %struct._Py_Identifier* @PyId_read, i8* null), !dbg !9489
  store %struct._object* %call50, %struct._object** %bytes, align 8, !dbg !9486, !tbaa !1876
  %45 = bitcast %struct._object** %decoded to i8*, !dbg !9490
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !9490
  call void @llvm.dbg.declare(metadata %struct._object** %decoded, metadata !1189, metadata !1880), !dbg !9491
  %46 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9492, !tbaa !1876
  %cmp51 = icmp eq %struct._object* %46, null, !dbg !9494
  br i1 %cmp51, label %if.then.52, label %if.end.53, !dbg !9495

if.then.52:                                       ; preds = %if.then.49
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9496

if.end.53:                                        ; preds = %if.then.49
  %47 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9497, !tbaa !1876
  %decoder54 = getelementptr inbounds %struct.textio, %struct.textio* %47, i32 0, i32 7, !dbg !9499
  %48 = load %struct._object*, %struct._object** %decoder54, align 8, !dbg !9499, !tbaa !4201
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !9500
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !9500, !tbaa !2194
  %cmp56 = icmp eq %struct._typeobject* %49, @PyIncrementalNewlineDecoder_Type, !dbg !9501
  br i1 %cmp56, label %if.then.57, label %if.else.60, !dbg !9502

if.then.57:                                       ; preds = %if.end.53
  %50 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9503, !tbaa !1876
  %decoder58 = getelementptr inbounds %struct.textio, %struct.textio* %50, i32 0, i32 7, !dbg !9504
  %51 = load %struct._object*, %struct._object** %decoder58, align 8, !dbg !9504, !tbaa !4201
  %52 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9505, !tbaa !1876
  %call59 = call %struct._object* @_PyIncrementalNewlineDecoder_decode(%struct._object* %51, %struct._object* %52, i32 1), !dbg !9506
  store %struct._object* %call59, %struct._object** %decoded, align 8, !dbg !9507, !tbaa !1876
  br label %if.end.63, !dbg !9508

if.else.60:                                       ; preds = %if.end.53
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9509, !tbaa !1876
  %decoder61 = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 7, !dbg !9510
  %54 = load %struct._object*, %struct._object** %decoder61, align 8, !dbg !9510, !tbaa !4201
  %55 = load %struct._object*, %struct._object** @_PyIO_str_decode, align 8, !dbg !9511, !tbaa !1876
  %56 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9512, !tbaa !1876
  %call62 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %54, %struct._object* %55, %struct._object* %56, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), i8* null), !dbg !9513
  store %struct._object* %call62, %struct._object** %decoded, align 8, !dbg !9514, !tbaa !1876
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.57
  br label %do.body.64, !dbg !9515

do.body.64:                                       ; preds = %if.end.63
  %57 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !9516
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !9516
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp65, metadata !1190, metadata !1880), !dbg !9518
  %58 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !9519, !tbaa !1876
  store %struct._object* %58, %struct._object** %_py_decref_tmp65, align 8, !dbg !9518, !tbaa !1876
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9520, !tbaa !1876
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0, !dbg !9522
  %60 = load i64, i64* %ob_refcnt66, align 8, !dbg !9523, !tbaa !1927
  %dec67 = add i64 %60, -1, !dbg !9523
  store i64 %dec67, i64* %ob_refcnt66, align 8, !dbg !9523, !tbaa !1927
  %cmp68 = icmp ne i64 %dec67, 0, !dbg !9524
  br i1 %cmp68, label %if.then.69, label %if.else.70, !dbg !9525

if.then.69:                                       ; preds = %do.body.64
  br label %if.end.73, !dbg !9526

if.else.70:                                       ; preds = %do.body.64
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9528, !tbaa !1876
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1, !dbg !9530
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !9530, !tbaa !2194
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 4, !dbg !9531
  %63 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !9531, !tbaa !2196
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !9532, !tbaa !1876
  call void %63(%struct._object* %64), !dbg !9533
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.70, %if.then.69
  %65 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !9534
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !9534
  br label %do.cond.74, !dbg !9536

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !9537

do.end.75:                                        ; preds = %do.cond.74
  %66 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !9539, !tbaa !1876
  %call76 = call i32 @check_decoded(%struct._object* %66), !dbg !9541
  %cmp77 = icmp slt i32 %call76, 0, !dbg !9542
  br i1 %cmp77, label %if.then.78, label %if.end.79, !dbg !9543

if.then.78:                                       ; preds = %do.end.75
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9544

if.end.79:                                        ; preds = %do.end.75
  %67 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9545, !tbaa !1876
  %call80 = call %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %67, i64 -1), !dbg !9546
  store %struct._object* %call80, %struct._object** %result, align 8, !dbg !9547, !tbaa !1876
  %68 = load %struct._object*, %struct._object** %result, align 8, !dbg !9548, !tbaa !1876
  %cmp81 = icmp eq %struct._object* %68, null, !dbg !9549
  br i1 %cmp81, label %if.then.82, label %if.end.95, !dbg !9550

if.then.82:                                       ; preds = %if.end.79
  br label %do.body.83, !dbg !9551

do.body.83:                                       ; preds = %if.then.82
  %69 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !9552
  call void @llvm.lifetime.start(i64 8, i8* %69) #2, !dbg !9552
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !1192, metadata !1880), !dbg !9554
  %70 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !9555, !tbaa !1876
  store %struct._object* %70, %struct._object** %_py_decref_tmp84, align 8, !dbg !9554, !tbaa !1876
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !9556, !tbaa !1876
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !9558
  %72 = load i64, i64* %ob_refcnt85, align 8, !dbg !9559, !tbaa !1927
  %dec86 = add i64 %72, -1, !dbg !9559
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !9559, !tbaa !1927
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !9560
  br i1 %cmp87, label %if.then.88, label %if.else.89, !dbg !9561

if.then.88:                                       ; preds = %do.body.83
  br label %if.end.92, !dbg !9562

if.else.89:                                       ; preds = %do.body.83
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !9564, !tbaa !1876
  %ob_type90 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !9566
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type90, align 8, !dbg !9566, !tbaa !2194
  %tp_dealloc91 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !9567
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc91, align 8, !dbg !9567, !tbaa !2196
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !9568, !tbaa !1876
  call void %75(%struct._object* %76), !dbg !9569
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.89, %if.then.88
  %77 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !9570
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !9570
  br label %do.cond.93, !dbg !9572

do.cond.93:                                       ; preds = %if.end.92
  br label %do.end.94, !dbg !9573

do.end.94:                                        ; preds = %do.cond.93
  store %struct._object* null, %struct._object** %retval, !dbg !9575
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9575

if.end.95:                                        ; preds = %if.end.79
  %78 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !9576, !tbaa !1876
  call void @PyUnicode_AppendAndDel(%struct._object** %result, %struct._object* %78), !dbg !9577
  %79 = load %struct._object*, %struct._object** %result, align 8, !dbg !9578, !tbaa !1876
  %cmp96 = icmp eq %struct._object* %79, null, !dbg !9580
  br i1 %cmp96, label %if.then.97, label %if.end.98, !dbg !9581

if.then.97:                                       ; preds = %if.end.95
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9582

if.end.98:                                        ; preds = %if.end.95
  br label %do.body.99, !dbg !9583

do.body.99:                                       ; preds = %if.end.98
  %80 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9584
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !9584
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1196, metadata !1880), !dbg !9586
  %81 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9587, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %81, i32 0, i32 26, !dbg !9588
  %82 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !9588, !tbaa !4317
  store %struct._object* %82, %struct._object** %_py_tmp, align 8, !dbg !9586, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9589, !tbaa !1876
  %cmp100 = icmp ne %struct._object* %83, null, !dbg !9590
  br i1 %cmp100, label %if.then.101, label %if.end.115, !dbg !9591

if.then.101:                                      ; preds = %do.body.99
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9592, !tbaa !1876
  %snapshot102 = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 26, !dbg !9594
  store %struct._object* null, %struct._object** %snapshot102, align 8, !dbg !9595, !tbaa !4317
  br label %do.body.103, !dbg !9596

do.body.103:                                      ; preds = %if.then.101
  %85 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !9597
  call void @llvm.lifetime.start(i64 8, i8* %85) #2, !dbg !9597
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp104, metadata !1198, metadata !1880), !dbg !9599
  %86 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9600, !tbaa !1876
  store %struct._object* %86, %struct._object** %_py_decref_tmp104, align 8, !dbg !9599, !tbaa !1876
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !9601, !tbaa !1876
  %ob_refcnt105 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !9603
  %88 = load i64, i64* %ob_refcnt105, align 8, !dbg !9604, !tbaa !1927
  %dec106 = add i64 %88, -1, !dbg !9604
  store i64 %dec106, i64* %ob_refcnt105, align 8, !dbg !9604, !tbaa !1927
  %cmp107 = icmp ne i64 %dec106, 0, !dbg !9605
  br i1 %cmp107, label %if.then.108, label %if.else.109, !dbg !9606

if.then.108:                                      ; preds = %do.body.103
  br label %if.end.112, !dbg !9607

if.else.109:                                      ; preds = %do.body.103
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !9609, !tbaa !1876
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !9611
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !9611, !tbaa !2194
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !9612
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !9612, !tbaa !2196
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !9613, !tbaa !1876
  call void %91(%struct._object* %92), !dbg !9614
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  %93 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !9615
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !9615
  br label %do.cond.113, !dbg !9617

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !9618

do.end.114:                                       ; preds = %do.cond.113
  br label %if.end.115, !dbg !9620

if.end.115:                                       ; preds = %do.end.114, %do.body.99
  %94 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9622
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !9622
  br label %do.cond.116, !dbg !9625

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !9626

do.end.117:                                       ; preds = %do.cond.116
  %95 = load %struct._object*, %struct._object** %result, align 8, !dbg !9628, !tbaa !1876
  store %struct._object* %95, %struct._object** %retval, !dbg !9629
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.118, !dbg !9629

cleanup.118:                                      ; preds = %do.end.117, %if.then.97, %do.end.94, %if.then.78, %if.then.52
  %96 = bitcast %struct._object** %decoded to i8*, !dbg !9630
  call void @llvm.lifetime.end(i64 8, i8* %96) #2, !dbg !9630
  %97 = bitcast %struct._object** %bytes to i8*, !dbg !9630
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !9630
  %cleanup.dest226 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.118
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest226, 6
  br i1 %SwitchLeaf3, label %fail, label %NewDefault.1

if.else.120:                                      ; preds = %if.end.47
  %98 = bitcast i32* %res to i8*, !dbg !9631
  call void @llvm.lifetime.start(i64 4, i8* %98) #2, !dbg !9631
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1202, metadata !1880), !dbg !9632
  store i32 1, i32* %res, align 4, !dbg !9632, !tbaa !1883
  %99 = bitcast i64* %remaining to i8*, !dbg !9633
  call void @llvm.lifetime.start(i64 8, i8* %99) #2, !dbg !9633
  call void @llvm.dbg.declare(metadata i64* %remaining, metadata !1204, metadata !1880), !dbg !9634
  %100 = load i64, i64* %n, align 8, !dbg !9635, !tbaa !1941
  store i64 %100, i64* %remaining, align 8, !dbg !9634, !tbaa !1941
  %101 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9636, !tbaa !1876
  %102 = load i64, i64* %n, align 8, !dbg !9637, !tbaa !1941
  %call121 = call %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %101, i64 %102), !dbg !9638
  store %struct._object* %call121, %struct._object** %result, align 8, !dbg !9639, !tbaa !1876
  %103 = load %struct._object*, %struct._object** %result, align 8, !dbg !9640, !tbaa !1876
  %cmp122 = icmp eq %struct._object* %103, null, !dbg !9642
  br i1 %cmp122, label %if.then.123, label %if.end.124, !dbg !9643

if.then.123:                                      ; preds = %if.else.120
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9644

if.end.124:                                       ; preds = %if.else.120
  %104 = load %struct._object*, %struct._object** %result, align 8, !dbg !9645, !tbaa !1876
  %105 = bitcast %struct._object* %104 to %struct.PyASCIIObject*, !dbg !9647
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %105, i32 0, i32 3, !dbg !9648
  %106 = bitcast %struct.anon* %state to i32*, !dbg !9649
  %bf.load = load i32, i32* %106, align 4, !dbg !9649
  %bf.lshr = lshr i32 %bf.load, 7, !dbg !9649
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9649
  %tobool125 = icmp ne i32 %bf.clear, 0, !dbg !9650
  br i1 %tobool125, label %cond.true, label %cond.false, !dbg !9650

cond.true:                                        ; preds = %if.end.124
  br label %cond.end, !dbg !9651

cond.false:                                       ; preds = %if.end.124
  %107 = load %struct._object*, %struct._object** %result, align 8, !dbg !9653, !tbaa !1876
  %call126 = call i32 @_PyUnicode_Ready(%struct._object* %107), !dbg !9655
  br label %cond.end, !dbg !9650

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call126, %cond.false ], !dbg !9650
  %cmp127 = icmp eq i32 %cond, -1, !dbg !9656
  br i1 %cmp127, label %if.then.128, label %if.end.129, !dbg !9659

if.then.128:                                      ; preds = %cond.end
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9660

if.end.129:                                       ; preds = %cond.end
  %108 = load %struct._object*, %struct._object** %result, align 8, !dbg !9661, !tbaa !1876
  %109 = bitcast %struct._object* %108 to %struct.PyASCIIObject*, !dbg !9662
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %109, i32 0, i32 1, !dbg !9663
  %110 = load i64, i64* %length, align 8, !dbg !9663, !tbaa !1937
  %111 = load i64, i64* %remaining, align 8, !dbg !9664, !tbaa !1941
  %sub = sub i64 %111, %110, !dbg !9664
  store i64 %sub, i64* %remaining, align 8, !dbg !9664, !tbaa !1941
  br label %while.cond, !dbg !9665

while.cond:                                       ; preds = %if.end.170, %if.then.136, %if.end.129
  %112 = load i64, i64* %remaining, align 8, !dbg !9666, !tbaa !1941
  %cmp130 = icmp sgt i64 %112, 0, !dbg !9669
  br i1 %cmp130, label %while.body, label %while.end, !dbg !9665

while.body:                                       ; preds = %while.cond
  %113 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9670, !tbaa !1876
  %114 = load i64, i64* %remaining, align 8, !dbg !9671, !tbaa !1941
  %call131 = call i32 @textiowrapper_read_chunk(%struct.textio* %113, i64 %114), !dbg !9672
  store i32 %call131, i32* %res, align 4, !dbg !9673, !tbaa !1883
  %115 = load i32, i32* %res, align 4, !dbg !9674, !tbaa !1883
  %cmp132 = icmp slt i32 %115, 0, !dbg !9676
  br i1 %cmp132, label %if.then.133, label %if.end.138, !dbg !9677

if.then.133:                                      ; preds = %while.body
  %call134 = call i32 @_PyIO_trap_eintr(), !dbg !9678
  %tobool135 = icmp ne i32 %call134, 0, !dbg !9678
  br i1 %tobool135, label %if.then.136, label %if.end.137, !dbg !9681

if.then.136:                                      ; preds = %if.then.133
  br label %while.cond, !dbg !9682

if.end.137:                                       ; preds = %if.then.133
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9684

if.end.138:                                       ; preds = %while.body
  %116 = load i32, i32* %res, align 4, !dbg !9685, !tbaa !1883
  %cmp139 = icmp eq i32 %116, 0, !dbg !9687
  br i1 %cmp139, label %if.then.140, label %if.end.141, !dbg !9688

if.then.140:                                      ; preds = %if.end.138
  br label %while.end, !dbg !9689

if.end.141:                                       ; preds = %if.end.138
  %117 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9690, !tbaa !1876
  %cmp142 = icmp eq %struct._object* %117, null, !dbg !9692
  br i1 %cmp142, label %if.then.143, label %if.end.148, !dbg !9693

if.then.143:                                      ; preds = %if.end.141
  %call144 = call %struct._object* @PyList_New(i64 0), !dbg !9694
  store %struct._object* %call144, %struct._object** %chunks, align 8, !dbg !9696, !tbaa !1876
  %118 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9697, !tbaa !1876
  %cmp145 = icmp eq %struct._object* %118, null, !dbg !9699
  br i1 %cmp145, label %if.then.146, label %if.end.147, !dbg !9700

if.then.146:                                      ; preds = %if.then.143
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9701

if.end.147:                                       ; preds = %if.then.143
  br label %if.end.148, !dbg !9702

if.end.148:                                       ; preds = %if.end.147, %if.end.141
  %119 = load %struct._object*, %struct._object** %result, align 8, !dbg !9703, !tbaa !1876
  %120 = bitcast %struct._object* %119 to %struct.PyASCIIObject*, !dbg !9705
  %length149 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %120, i32 0, i32 1, !dbg !9706
  %121 = load i64, i64* %length149, align 8, !dbg !9706, !tbaa !1937
  %cmp150 = icmp sgt i64 %121, 0, !dbg !9707
  br i1 %cmp150, label %land.lhs.true, label %if.end.154, !dbg !9708

land.lhs.true:                                    ; preds = %if.end.148
  %122 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9709, !tbaa !1876
  %123 = load %struct._object*, %struct._object** %result, align 8, !dbg !9710, !tbaa !1876
  %call151 = call i32 @PyList_Append(%struct._object* %122, %struct._object* %123), !dbg !9711
  %cmp152 = icmp slt i32 %call151, 0, !dbg !9712
  br i1 %cmp152, label %if.then.153, label %if.end.154, !dbg !9713

if.then.153:                                      ; preds = %land.lhs.true
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9714

if.end.154:                                       ; preds = %land.lhs.true, %if.end.148
  br label %do.body.155, !dbg !9715

do.body.155:                                      ; preds = %if.end.154
  %124 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !9716
  call void @llvm.lifetime.start(i64 8, i8* %124) #2, !dbg !9716
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp156, metadata !1205, metadata !1880), !dbg !9718
  %125 = load %struct._object*, %struct._object** %result, align 8, !dbg !9719, !tbaa !1876
  store %struct._object* %125, %struct._object** %_py_decref_tmp156, align 8, !dbg !9718, !tbaa !1876
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9720, !tbaa !1876
  %ob_refcnt157 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !9722
  %127 = load i64, i64* %ob_refcnt157, align 8, !dbg !9723, !tbaa !1927
  %dec158 = add i64 %127, -1, !dbg !9723
  store i64 %dec158, i64* %ob_refcnt157, align 8, !dbg !9723, !tbaa !1927
  %cmp159 = icmp ne i64 %dec158, 0, !dbg !9724
  br i1 %cmp159, label %if.then.160, label %if.else.161, !dbg !9725

if.then.160:                                      ; preds = %do.body.155
  br label %if.end.164, !dbg !9726

if.else.161:                                      ; preds = %do.body.155
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9728, !tbaa !1876
  %ob_type162 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !9730
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type162, align 8, !dbg !9730, !tbaa !2194
  %tp_dealloc163 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !9731
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc163, align 8, !dbg !9731, !tbaa !2196
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp156, align 8, !dbg !9732, !tbaa !1876
  call void %130(%struct._object* %131), !dbg !9733
  br label %if.end.164

if.end.164:                                       ; preds = %if.else.161, %if.then.160
  %132 = bitcast %struct._object** %_py_decref_tmp156 to i8*, !dbg !9734
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !9734
  br label %do.cond.165, !dbg !9736

do.cond.165:                                      ; preds = %if.end.164
  br label %do.end.166, !dbg !9737

do.end.166:                                       ; preds = %do.cond.165
  %133 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9739, !tbaa !1876
  %134 = load i64, i64* %remaining, align 8, !dbg !9740, !tbaa !1941
  %call167 = call %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %133, i64 %134), !dbg !9741
  store %struct._object* %call167, %struct._object** %result, align 8, !dbg !9742, !tbaa !1876
  %135 = load %struct._object*, %struct._object** %result, align 8, !dbg !9743, !tbaa !1876
  %cmp168 = icmp eq %struct._object* %135, null, !dbg !9745
  br i1 %cmp168, label %if.then.169, label %if.end.170, !dbg !9746

if.then.169:                                      ; preds = %do.end.166
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9747

if.end.170:                                       ; preds = %do.end.166
  %136 = load %struct._object*, %struct._object** %result, align 8, !dbg !9748, !tbaa !1876
  %137 = bitcast %struct._object* %136 to %struct.PyASCIIObject*, !dbg !9749
  %length171 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %137, i32 0, i32 1, !dbg !9750
  %138 = load i64, i64* %length171, align 8, !dbg !9750, !tbaa !1937
  %139 = load i64, i64* %remaining, align 8, !dbg !9751, !tbaa !1941
  %sub172 = sub i64 %139, %138, !dbg !9751
  store i64 %sub172, i64* %remaining, align 8, !dbg !9751, !tbaa !1941
  br label %while.cond, !dbg !9665

while.end:                                        ; preds = %if.then.140, %while.cond
  %140 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9752, !tbaa !1876
  %cmp173 = icmp ne %struct._object* %140, null, !dbg !9753
  br i1 %cmp173, label %if.then.174, label %if.end.223, !dbg !9754

if.then.174:                                      ; preds = %while.end
  %141 = load %struct._object*, %struct._object** %result, align 8, !dbg !9755, !tbaa !1876
  %cmp175 = icmp ne %struct._object* %141, null, !dbg !9757
  br i1 %cmp175, label %land.lhs.true.176, label %if.end.180, !dbg !9758

land.lhs.true.176:                                ; preds = %if.then.174
  %142 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9759, !tbaa !1876
  %143 = load %struct._object*, %struct._object** %result, align 8, !dbg !9761, !tbaa !1876
  %call177 = call i32 @PyList_Append(%struct._object* %142, %struct._object* %143), !dbg !9762
  %cmp178 = icmp slt i32 %call177, 0, !dbg !9763
  br i1 %cmp178, label %if.then.179, label %if.end.180, !dbg !9764

if.then.179:                                      ; preds = %land.lhs.true.176
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9765

if.end.180:                                       ; preds = %land.lhs.true.176, %if.then.174
  br label %do.body.181, !dbg !9766

do.body.181:                                      ; preds = %if.end.180
  %144 = bitcast %struct._object** %_py_tmp182 to i8*, !dbg !9767
  call void @llvm.lifetime.start(i64 8, i8* %144) #2, !dbg !9767
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp182, metadata !1208, metadata !1880), !dbg !9769
  %145 = load %struct._object*, %struct._object** %result, align 8, !dbg !9770, !tbaa !1876
  store %struct._object* %145, %struct._object** %_py_tmp182, align 8, !dbg !9769, !tbaa !1876
  %146 = load %struct._object*, %struct._object** %_py_tmp182, align 8, !dbg !9771, !tbaa !1876
  %cmp183 = icmp ne %struct._object* %146, null, !dbg !9772
  br i1 %cmp183, label %if.then.184, label %if.end.197, !dbg !9773

if.then.184:                                      ; preds = %do.body.181
  store %struct._object* null, %struct._object** %result, align 8, !dbg !9774, !tbaa !1876
  br label %do.body.185, !dbg !9776

do.body.185:                                      ; preds = %if.then.184
  %147 = bitcast %struct._object** %_py_decref_tmp186 to i8*, !dbg !9777
  call void @llvm.lifetime.start(i64 8, i8* %147) #2, !dbg !9777
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp186, metadata !1212, metadata !1880), !dbg !9779
  %148 = load %struct._object*, %struct._object** %_py_tmp182, align 8, !dbg !9780, !tbaa !1876
  store %struct._object* %148, %struct._object** %_py_decref_tmp186, align 8, !dbg !9779, !tbaa !1876
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !9781, !tbaa !1876
  %ob_refcnt187 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 0, !dbg !9783
  %150 = load i64, i64* %ob_refcnt187, align 8, !dbg !9784, !tbaa !1927
  %dec188 = add i64 %150, -1, !dbg !9784
  store i64 %dec188, i64* %ob_refcnt187, align 8, !dbg !9784, !tbaa !1927
  %cmp189 = icmp ne i64 %dec188, 0, !dbg !9785
  br i1 %cmp189, label %if.then.190, label %if.else.191, !dbg !9786

if.then.190:                                      ; preds = %do.body.185
  br label %if.end.194, !dbg !9787

if.else.191:                                      ; preds = %do.body.185
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !9789, !tbaa !1876
  %ob_type192 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 1, !dbg !9791
  %152 = load %struct._typeobject*, %struct._typeobject** %ob_type192, align 8, !dbg !9791, !tbaa !2194
  %tp_dealloc193 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %152, i32 0, i32 4, !dbg !9792
  %153 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc193, align 8, !dbg !9792, !tbaa !2196
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp186, align 8, !dbg !9793, !tbaa !1876
  call void %153(%struct._object* %154), !dbg !9794
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.then.190
  %155 = bitcast %struct._object** %_py_decref_tmp186 to i8*, !dbg !9795
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !9795
  br label %do.cond.195, !dbg !9797

do.cond.195:                                      ; preds = %if.end.194
  br label %do.end.196, !dbg !9798

do.end.196:                                       ; preds = %do.cond.195
  br label %if.end.197, !dbg !9800

if.end.197:                                       ; preds = %do.end.196, %do.body.181
  %156 = bitcast %struct._object** %_py_tmp182 to i8*, !dbg !9802
  call void @llvm.lifetime.end(i64 8, i8* %156) #2, !dbg !9802
  br label %do.cond.198, !dbg !9805

do.cond.198:                                      ; preds = %if.end.197
  br label %do.end.199, !dbg !9806

do.end.199:                                       ; preds = %do.cond.198
  %157 = load %struct._object*, %struct._object** @_PyIO_empty_str, align 8, !dbg !9808, !tbaa !1876
  %158 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9809, !tbaa !1876
  %call200 = call %struct._object* @PyUnicode_Join(%struct._object* %157, %struct._object* %158), !dbg !9810
  store %struct._object* %call200, %struct._object** %result, align 8, !dbg !9811, !tbaa !1876
  %159 = load %struct._object*, %struct._object** %result, align 8, !dbg !9812, !tbaa !1876
  %cmp201 = icmp eq %struct._object* %159, null, !dbg !9814
  br i1 %cmp201, label %if.then.202, label %if.end.203, !dbg !9815

if.then.202:                                      ; preds = %do.end.199
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9816

if.end.203:                                       ; preds = %do.end.199
  br label %do.body.204, !dbg !9817

do.body.204:                                      ; preds = %if.end.203
  %160 = bitcast %struct._object** %_py_tmp205 to i8*, !dbg !9818
  call void @llvm.lifetime.start(i64 8, i8* %160) #2, !dbg !9818
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp205, metadata !1216, metadata !1880), !dbg !9820
  %161 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9821, !tbaa !1876
  store %struct._object* %161, %struct._object** %_py_tmp205, align 8, !dbg !9820, !tbaa !1876
  %162 = load %struct._object*, %struct._object** %_py_tmp205, align 8, !dbg !9822, !tbaa !1876
  %cmp206 = icmp ne %struct._object* %162, null, !dbg !9823
  br i1 %cmp206, label %if.then.207, label %if.end.220, !dbg !9824

if.then.207:                                      ; preds = %do.body.204
  store %struct._object* null, %struct._object** %chunks, align 8, !dbg !9825, !tbaa !1876
  br label %do.body.208, !dbg !9827

do.body.208:                                      ; preds = %if.then.207
  %163 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !9828
  call void @llvm.lifetime.start(i64 8, i8* %163) #2, !dbg !9828
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp209, metadata !1218, metadata !1880), !dbg !9830
  %164 = load %struct._object*, %struct._object** %_py_tmp205, align 8, !dbg !9831, !tbaa !1876
  store %struct._object* %164, %struct._object** %_py_decref_tmp209, align 8, !dbg !9830, !tbaa !1876
  %165 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !9832, !tbaa !1876
  %ob_refcnt210 = getelementptr inbounds %struct._object, %struct._object* %165, i32 0, i32 0, !dbg !9834
  %166 = load i64, i64* %ob_refcnt210, align 8, !dbg !9835, !tbaa !1927
  %dec211 = add i64 %166, -1, !dbg !9835
  store i64 %dec211, i64* %ob_refcnt210, align 8, !dbg !9835, !tbaa !1927
  %cmp212 = icmp ne i64 %dec211, 0, !dbg !9836
  br i1 %cmp212, label %if.then.213, label %if.else.214, !dbg !9837

if.then.213:                                      ; preds = %do.body.208
  br label %if.end.217, !dbg !9838

if.else.214:                                      ; preds = %do.body.208
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !9840, !tbaa !1876
  %ob_type215 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 1, !dbg !9842
  %168 = load %struct._typeobject*, %struct._typeobject** %ob_type215, align 8, !dbg !9842, !tbaa !2194
  %tp_dealloc216 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %168, i32 0, i32 4, !dbg !9843
  %169 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc216, align 8, !dbg !9843, !tbaa !2196
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp209, align 8, !dbg !9844, !tbaa !1876
  call void %169(%struct._object* %170), !dbg !9845
  br label %if.end.217

if.end.217:                                       ; preds = %if.else.214, %if.then.213
  %171 = bitcast %struct._object** %_py_decref_tmp209 to i8*, !dbg !9846
  call void @llvm.lifetime.end(i64 8, i8* %171) #2, !dbg !9846
  br label %do.cond.218, !dbg !9848

do.cond.218:                                      ; preds = %if.end.217
  br label %do.end.219, !dbg !9849

do.end.219:                                       ; preds = %do.cond.218
  br label %if.end.220, !dbg !9851

if.end.220:                                       ; preds = %do.end.219, %do.body.204
  %172 = bitcast %struct._object** %_py_tmp205 to i8*, !dbg !9853
  call void @llvm.lifetime.end(i64 8, i8* %172) #2, !dbg !9853
  br label %do.cond.221, !dbg !9854

do.cond.221:                                      ; preds = %if.end.220
  br label %do.end.222, !dbg !9855

do.end.222:                                       ; preds = %do.cond.221
  br label %if.end.223, !dbg !9857

if.end.223:                                       ; preds = %do.end.222, %while.end
  %173 = load %struct._object*, %struct._object** %result, align 8, !dbg !9858, !tbaa !1876
  store %struct._object* %173, %struct._object** %retval, !dbg !9859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.224, !dbg !9859

cleanup.224:                                      ; preds = %if.end.223, %if.then.202, %if.then.179, %if.then.169, %if.then.153, %if.then.146, %if.end.137, %if.then.128, %if.then.123
  %174 = bitcast i64* %remaining to i8*, !dbg !9860
  call void @llvm.lifetime.end(i64 8, i8* %174) #2, !dbg !9860
  %175 = bitcast i32* %res to i8*, !dbg !9860
  call void @llvm.lifetime.end(i64 4, i8* %175) #2, !dbg !9860
  %cleanup.dest227 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.224
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest227, 6
  br i1 %SwitchLeaf6, label %fail, label %NewDefault.4

fail:                                             ; preds = %LeafBlock.5, %LeafBlock.2
  br label %do.body.228, !dbg !9861

do.body.228:                                      ; preds = %fail
  %176 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9862
  call void @llvm.lifetime.start(i64 8, i8* %176) #2, !dbg !9862
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1222, metadata !1880), !dbg !9864
  %177 = load %struct._object*, %struct._object** %result, align 8, !dbg !9865, !tbaa !1876
  store %struct._object* %177, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9864, !tbaa !1876
  %178 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9866, !tbaa !1876
  %cmp229 = icmp ne %struct._object* %178, null, !dbg !9867
  br i1 %cmp229, label %if.then.230, label %if.end.243, !dbg !9868

if.then.230:                                      ; preds = %do.body.228
  br label %do.body.231, !dbg !9869

do.body.231:                                      ; preds = %if.then.230
  %179 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !9871
  call void @llvm.lifetime.start(i64 8, i8* %179) #2, !dbg !9871
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !1224, metadata !1880), !dbg !9873
  %180 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9874, !tbaa !1876
  store %struct._object* %180, %struct._object** %_py_decref_tmp232, align 8, !dbg !9873, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9875, !tbaa !1876
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 0, !dbg !9877
  %182 = load i64, i64* %ob_refcnt233, align 8, !dbg !9878, !tbaa !1927
  %dec234 = add i64 %182, -1, !dbg !9878
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !9878, !tbaa !1927
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !9879
  br i1 %cmp235, label %if.then.236, label %if.else.237, !dbg !9880

if.then.236:                                      ; preds = %do.body.231
  br label %if.end.240, !dbg !9881

if.else.237:                                      ; preds = %do.body.231
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9883, !tbaa !1876
  %ob_type238 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 1, !dbg !9885
  %184 = load %struct._typeobject*, %struct._typeobject** %ob_type238, align 8, !dbg !9885, !tbaa !2194
  %tp_dealloc239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %184, i32 0, i32 4, !dbg !9886
  %185 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc239, align 8, !dbg !9886, !tbaa !2196
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9887, !tbaa !1876
  call void %185(%struct._object* %186), !dbg !9888
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.237, %if.then.236
  %187 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !9889
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !9889
  br label %do.cond.241, !dbg !9891

do.cond.241:                                      ; preds = %if.end.240
  br label %do.end.242, !dbg !9892

do.end.242:                                       ; preds = %do.cond.241
  br label %if.end.243, !dbg !9894

if.end.243:                                       ; preds = %do.end.242, %do.body.228
  %188 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9896
  call void @llvm.lifetime.end(i64 8, i8* %188) #2, !dbg !9896
  br label %do.cond.244, !dbg !9899

do.cond.244:                                      ; preds = %if.end.243
  br label %do.end.245, !dbg !9900

do.end.245:                                       ; preds = %do.cond.244
  br label %do.body.246, !dbg !9902

do.body.246:                                      ; preds = %do.end.245
  %189 = bitcast %struct._object** %_py_xdecref_tmp247 to i8*, !dbg !9903
  call void @llvm.lifetime.start(i64 8, i8* %189) #2, !dbg !9903
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp247, metadata !1227, metadata !1880), !dbg !9905
  %190 = load %struct._object*, %struct._object** %chunks, align 8, !dbg !9906, !tbaa !1876
  store %struct._object* %190, %struct._object** %_py_xdecref_tmp247, align 8, !dbg !9905, !tbaa !1876
  %191 = load %struct._object*, %struct._object** %_py_xdecref_tmp247, align 8, !dbg !9907, !tbaa !1876
  %cmp248 = icmp ne %struct._object* %191, null, !dbg !9908
  br i1 %cmp248, label %if.then.249, label %if.end.262, !dbg !9909

if.then.249:                                      ; preds = %do.body.246
  br label %do.body.250, !dbg !9910

do.body.250:                                      ; preds = %if.then.249
  %192 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !9912
  call void @llvm.lifetime.start(i64 8, i8* %192) #2, !dbg !9912
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp251, metadata !1229, metadata !1880), !dbg !9914
  %193 = load %struct._object*, %struct._object** %_py_xdecref_tmp247, align 8, !dbg !9915, !tbaa !1876
  store %struct._object* %193, %struct._object** %_py_decref_tmp251, align 8, !dbg !9914, !tbaa !1876
  %194 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !9916, !tbaa !1876
  %ob_refcnt252 = getelementptr inbounds %struct._object, %struct._object* %194, i32 0, i32 0, !dbg !9918
  %195 = load i64, i64* %ob_refcnt252, align 8, !dbg !9919, !tbaa !1927
  %dec253 = add i64 %195, -1, !dbg !9919
  store i64 %dec253, i64* %ob_refcnt252, align 8, !dbg !9919, !tbaa !1927
  %cmp254 = icmp ne i64 %dec253, 0, !dbg !9920
  br i1 %cmp254, label %if.then.255, label %if.else.256, !dbg !9921

if.then.255:                                      ; preds = %do.body.250
  br label %if.end.259, !dbg !9922

if.else.256:                                      ; preds = %do.body.250
  %196 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !9924, !tbaa !1876
  %ob_type257 = getelementptr inbounds %struct._object, %struct._object* %196, i32 0, i32 1, !dbg !9926
  %197 = load %struct._typeobject*, %struct._typeobject** %ob_type257, align 8, !dbg !9926, !tbaa !2194
  %tp_dealloc258 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %197, i32 0, i32 4, !dbg !9927
  %198 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc258, align 8, !dbg !9927, !tbaa !2196
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !9928, !tbaa !1876
  call void %198(%struct._object* %199), !dbg !9929
  br label %if.end.259

if.end.259:                                       ; preds = %if.else.256, %if.then.255
  %200 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !9930
  call void @llvm.lifetime.end(i64 8, i8* %200) #2, !dbg !9930
  br label %do.cond.260, !dbg !9932

do.cond.260:                                      ; preds = %if.end.259
  br label %do.end.261, !dbg !9933

do.end.261:                                       ; preds = %do.cond.260
  br label %if.end.262, !dbg !9935

if.end.262:                                       ; preds = %do.end.261, %do.body.246
  %201 = bitcast %struct._object** %_py_xdecref_tmp247 to i8*, !dbg !9937
  call void @llvm.lifetime.end(i64 8, i8* %201) #2, !dbg !9937
  br label %do.cond.263, !dbg !9938

do.cond.263:                                      ; preds = %if.end.262
  br label %do.end.264, !dbg !9939

do.end.264:                                       ; preds = %do.cond.263
  store %struct._object* null, %struct._object** %retval, !dbg !9941
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.265, !dbg !9941

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.265

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.265

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.265

cleanup.265:                                      ; preds = %NewDefault.4, %NewDefault.1, %NewDefault, %do.end.264, %if.then.46, %if.then.41, %if.then.4, %if.end
  %202 = bitcast %struct._object** %chunks to i8*, !dbg !9942
  call void @llvm.lifetime.end(i64 8, i8* %202) #2, !dbg !9942
  %203 = bitcast %struct._object** %result to i8*, !dbg !9942
  call void @llvm.lifetime.end(i64 8, i8* %203) #2, !dbg !9942
  %204 = bitcast i64* %n to i8*, !dbg !9942
  call void @llvm.lifetime.end(i64 8, i8* %204) #2, !dbg !9942
  %205 = load %struct._object*, %struct._object** %retval, !dbg !9942
  ret %struct._object* %205, !dbg !9942
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_readline(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %limit = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1240, metadata !1880), !dbg !9943
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1241, metadata !1880), !dbg !9944
  %0 = bitcast i64* %limit to i8*, !dbg !9945
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9945
  call void @llvm.dbg.declare(metadata i64* %limit, metadata !1242, metadata !1880), !dbg !9946
  store i64 -1, i64* %limit, align 8, !dbg !9946, !tbaa !1941
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9947, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !9949
  %2 = load i32, i32* %ok, align 4, !dbg !9949, !tbaa !3895
  %cmp = icmp sle i32 %2, 0, !dbg !9950
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !9951

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9952, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !9956
  %4 = load i32, i32* %detached, align 4, !dbg !9956, !tbaa !3903
  %tobool = icmp ne i32 %4, 0, !dbg !9957
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !9958

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9959, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !9962
  br label %if.end, !dbg !9963

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9964, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !9967
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !9968
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9970

if.end.2:                                         ; preds = %entry
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9971, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.63, i32 0, i32 0), i64* %limit), !dbg !9973
  %tobool3 = icmp ne i32 %call, 0, !dbg !9973
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !9974

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !9975
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9975

if.end.5:                                         ; preds = %if.end.2
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9977, !tbaa !1876
  %9 = load i64, i64* %limit, align 8, !dbg !9978, !tbaa !1941
  %call6 = call %struct._object* @_textiowrapper_readline(%struct.textio* %8, i64 %9), !dbg !9979
  store %struct._object* %call6, %struct._object** %retval, !dbg !9980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9980

cleanup:                                          ; preds = %if.end.5, %if.then.4, %if.end
  %10 = bitcast i64* %limit to i8*, !dbg !9981
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !9981
  %11 = load %struct._object*, %struct._object** %retval, !dbg !9981
  ret %struct._object* %11, !dbg !9981
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_flush(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1245, metadata !1880), !dbg !9982
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1246, metadata !1880), !dbg !9983
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9984, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !9986
  %1 = load i32, i32* %ok, align 4, !dbg !9986, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !9987
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !9988

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !9989, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !9993
  %3 = load i32, i32* %detached, align 4, !dbg !9993, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !9994
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !9995

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9996, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !9999
  br label %if.end, !dbg !10000

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10001, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10004
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10005
  br label %return, !dbg !10005

if.end.2:                                         ; preds = %entry
  br label %do.body, !dbg !10007

do.body:                                          ; preds = %if.end.2
  %6 = bitcast i32* %r to i8*, !dbg !10008
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !10008
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1247, metadata !1880), !dbg !10010
  %7 = bitcast %struct._object** %_res to i8*, !dbg !10011
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !10011
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1249, metadata !1880), !dbg !10012
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10013, !tbaa !1876
  %9 = bitcast %struct.textio* %8 to %struct._object*, !dbg !10014
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !10015
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10015, !tbaa !2194
  %cmp3 = icmp eq %struct._typeobject* %10, @PyTextIOWrapper_Type, !dbg !10016
  br i1 %cmp3, label %if.then.4, label %if.else.27, !dbg !10017

if.then.4:                                        ; preds = %do.body
  %11 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10018, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %11, i32 0, i32 28, !dbg !10020
  %12 = load %struct._object*, %struct._object** %raw, align 8, !dbg !10020, !tbaa !4375
  %cmp5 = icmp ne %struct._object* %12, null, !dbg !10021
  br i1 %cmp5, label %if.then.6, label %if.else.8, !dbg !10022

if.then.6:                                        ; preds = %if.then.4
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10023, !tbaa !1876
  %raw7 = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 28, !dbg !10025
  %14 = load %struct._object*, %struct._object** %raw7, align 8, !dbg !10025, !tbaa !4375
  %call = call i32 @_PyFileIO_closed(%struct._object* %14), !dbg !10026
  store i32 %call, i32* %r, align 4, !dbg !10027, !tbaa !1883
  br label %if.end.23, !dbg !10028

if.else.8:                                        ; preds = %if.then.4
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10029, !tbaa !1876
  %call9 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %15, i8* null), !dbg !10031
  store %struct._object* %call9, %struct._object** %_res, align 8, !dbg !10032, !tbaa !1876
  %16 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10033, !tbaa !1876
  %cmp10 = icmp eq %struct._object* %16, null, !dbg !10035
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !10036

if.then.11:                                       ; preds = %if.else.8
  store %struct._object* null, %struct._object** %retval, !dbg !10037
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10039

if.end.12:                                        ; preds = %if.else.8
  %17 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10040, !tbaa !1876
  %call13 = call i32 @PyObject_IsTrue(%struct._object* %17), !dbg !10042
  store i32 %call13, i32* %r, align 4, !dbg !10043, !tbaa !1883
  br label %do.body.14, !dbg !10044

do.body.14:                                       ; preds = %if.end.12
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10045
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !10045
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1250, metadata !1880), !dbg !10047
  %19 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10048, !tbaa !1876
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !10047, !tbaa !1876
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10049, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !10051
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !10052, !tbaa !1927
  %dec = add i64 %21, -1, !dbg !10052
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10052, !tbaa !1927
  %cmp15 = icmp ne i64 %dec, 0, !dbg !10053
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !10054

if.then.16:                                       ; preds = %do.body.14
  br label %if.end.19, !dbg !10055

if.else.17:                                       ; preds = %do.body.14
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10057, !tbaa !1876
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !10059
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !10059, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !10060
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10060, !tbaa !2196
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10061, !tbaa !1876
  call void %24(%struct._object* %25), !dbg !10062
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.17, %if.then.16
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10063
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !10063
  br label %do.cond, !dbg !10065

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !10066

do.end:                                           ; preds = %do.cond
  %27 = load i32, i32* %r, align 4, !dbg !10068, !tbaa !1883
  %cmp20 = icmp slt i32 %27, 0, !dbg !10071
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !10072

if.then.21:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !10073
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10075

if.end.22:                                        ; preds = %do.end
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.6
  %28 = load i32, i32* %r, align 4, !dbg !10076, !tbaa !1883
  %cmp24 = icmp sgt i32 %28, 0, !dbg !10079
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !10080

if.then.25:                                       ; preds = %if.end.23
  %29 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10081, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !10084
  store %struct._object* null, %struct._object** %retval, !dbg !10085
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10085

if.end.26:                                        ; preds = %if.end.23
  br label %if.end.32, !dbg !10086

if.else.27:                                       ; preds = %do.body
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10088, !tbaa !1876
  %31 = bitcast %struct.textio* %30 to %struct._object*, !dbg !10091
  %call28 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %31, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !10092
  %cmp29 = icmp eq %struct._object* %call28, null, !dbg !10093
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !10094

if.then.30:                                       ; preds = %if.else.27
  store %struct._object* null, %struct._object** %retval, !dbg !10095
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10097

if.end.31:                                        ; preds = %if.else.27
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.26
  store i32 0, i32* %cleanup.dest.slot, !dbg !10098
  br label %cleanup, !dbg !10098

cleanup:                                          ; preds = %if.end.32, %if.then.30, %if.then.25, %if.then.21, %if.then.11
  %32 = bitcast %struct._object** %_res to i8*, !dbg !10100
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !10100
  %33 = bitcast i32* %r to i8*, !dbg !10100
  call void @llvm.lifetime.end(i64 4, i8* %33) #2, !dbg !10100
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %do.end.35, !dbg !10106

do.end.35:                                        ; preds = %cleanup.cont
  %34 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10107, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %34, i32 0, i32 16, !dbg !10108
  %35 = load i8, i8* %seekable, align 1, !dbg !10108, !tbaa !4663
  %36 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10109, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %36, i32 0, i32 18, !dbg !10110
  store i8 %35, i8* %telling, align 1, !dbg !10111, !tbaa !4512
  %37 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10112, !tbaa !1876
  %call36 = call i32 @_textiowrapper_writeflush(%struct.textio* %37), !dbg !10114
  %cmp37 = icmp slt i32 %call36, 0, !dbg !10115
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !10116

if.then.38:                                       ; preds = %do.end.35
  store %struct._object* null, %struct._object** %retval, !dbg !10117
  br label %return, !dbg !10117

if.end.39:                                        ; preds = %do.end.35
  %38 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10118, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %38, i32 0, i32 4, !dbg !10119
  %39 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10119, !tbaa !4115
  %call40 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %39, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !10120
  store %struct._object* %call40, %struct._object** %retval, !dbg !10121
  br label %return, !dbg !10121

return:                                           ; preds = %LeafBlock, %if.end.39, %if.then.38, %if.end
  %40 = load %struct._object*, %struct._object** %retval, !dbg !10122
  ret %struct._object* %40, !dbg !10122
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_close(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %exc = alloca %struct._object*, align 8
  %val = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  %val2 = alloca %struct._object*, align 8
  %_py_decref_tmp80 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp95 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1258, metadata !1880), !dbg !10123
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1259, metadata !1880), !dbg !10124
  %0 = bitcast %struct._object** %res to i8*, !dbg !10125
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10125
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1260, metadata !1880), !dbg !10126
  %1 = bitcast i32* %r to i8*, !dbg !10127
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !10127
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1261, metadata !1880), !dbg !10128
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10129, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 1, !dbg !10131
  %3 = load i32, i32* %ok, align 4, !dbg !10131, !tbaa !3895
  %cmp = icmp sle i32 %3, 0, !dbg !10132
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10133

if.then:                                          ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10134, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 2, !dbg !10138
  %5 = load i32, i32* %detached, align 4, !dbg !10138, !tbaa !3903
  %tobool = icmp ne i32 %5, 0, !dbg !10139
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10140

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10141, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10144
  br label %if.end, !dbg !10145

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10146, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10149
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10150
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10152

if.end.2:                                         ; preds = %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10153, !tbaa !1876
  %call = call %struct._object* @textiowrapper_closed_get(%struct.textio* %8, i8* null), !dbg !10154
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !10155, !tbaa !1876
  %9 = load %struct._object*, %struct._object** %res, align 8, !dbg !10156, !tbaa !1876
  %cmp3 = icmp eq %struct._object* %9, null, !dbg !10158
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !10159

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !10160
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10160

if.end.5:                                         ; preds = %if.end.2
  %10 = load %struct._object*, %struct._object** %res, align 8, !dbg !10161, !tbaa !1876
  %call6 = call i32 @PyObject_IsTrue(%struct._object* %10), !dbg !10162
  store i32 %call6, i32* %r, align 4, !dbg !10163, !tbaa !1883
  br label %do.body, !dbg !10164

do.body:                                          ; preds = %if.end.5
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10165
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !10165
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1262, metadata !1880), !dbg !10167
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !10168, !tbaa !1876
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !10167, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10169, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !10171
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !10172, !tbaa !1927
  %dec = add i64 %14, -1, !dbg !10172
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10172, !tbaa !1927
  %cmp7 = icmp ne i64 %dec, 0, !dbg !10173
  br i1 %cmp7, label %if.then.8, label %if.else.9, !dbg !10174

if.then.8:                                        ; preds = %do.body
  br label %if.end.10, !dbg !10175

if.else.9:                                        ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10177, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !10179
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10179, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !10180
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10180, !tbaa !2196
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10181, !tbaa !1876
  call void %17(%struct._object* %18), !dbg !10182
  br label %if.end.10

if.end.10:                                        ; preds = %if.else.9, %if.then.8
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10183
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !10183
  br label %do.cond, !dbg !10185

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !10186

do.end:                                           ; preds = %do.cond
  %20 = load i32, i32* %r, align 4, !dbg !10188, !tbaa !1883
  %cmp11 = icmp slt i32 %20, 0, !dbg !10190
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !10191

if.then.12:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !10192
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10192

if.end.13:                                        ; preds = %do.end
  %21 = load i32, i32* %r, align 4, !dbg !10193, !tbaa !1883
  %cmp14 = icmp sgt i32 %21, 0, !dbg !10194
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !10195

if.then.15:                                       ; preds = %if.end.13
  %22 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10196, !tbaa !1927
  %inc = add i64 %22, 1, !dbg !10196
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10196, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10198
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10198

if.else.16:                                       ; preds = %if.end.13
  %23 = bitcast %struct._object** %exc to i8*, !dbg !10199
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !10199
  call void @llvm.dbg.declare(metadata %struct._object** %exc, metadata !1264, metadata !1880), !dbg !10200
  store %struct._object* null, %struct._object** %exc, align 8, !dbg !10200, !tbaa !1876
  %24 = bitcast %struct._object** %val to i8*, !dbg !10199
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !10199
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !1267, metadata !1880), !dbg !10201
  %25 = bitcast %struct._object** %tb to i8*, !dbg !10199
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !10199
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !1268, metadata !1880), !dbg !10202
  %26 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10203, !tbaa !1876
  %finalizing = getelementptr inbounds %struct.textio, %struct.textio* %26, i32 0, i32 19, !dbg !10204
  %27 = load i8, i8* %finalizing, align 1, !dbg !10204, !tbaa !3760
  %tobool17 = icmp ne i8 %27, 0, !dbg !10203
  br i1 %tobool17, label %if.then.18, label %if.end.36, !dbg !10205

if.then.18:                                       ; preds = %if.else.16
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10206, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %28, i32 0, i32 4, !dbg !10207
  %29 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10207, !tbaa !4115
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10208, !tbaa !1876
  %call19 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %29, %struct._Py_Identifier* @PyId__dealloc_warn, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0), %struct.textio* %30), !dbg !10209
  store %struct._object* %call19, %struct._object** %res, align 8, !dbg !10210, !tbaa !1876
  %31 = load %struct._object*, %struct._object** %res, align 8, !dbg !10211, !tbaa !1876
  %tobool20 = icmp ne %struct._object* %31, null, !dbg !10211
  br i1 %tobool20, label %if.then.21, label %if.else.34, !dbg !10212

if.then.21:                                       ; preds = %if.then.18
  br label %do.body.22, !dbg !10213

do.body.22:                                       ; preds = %if.then.21
  %32 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !10214
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !10214
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !1269, metadata !1880), !dbg !10216
  %33 = load %struct._object*, %struct._object** %res, align 8, !dbg !10217, !tbaa !1876
  store %struct._object* %33, %struct._object** %_py_decref_tmp23, align 8, !dbg !10216, !tbaa !1876
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !10218, !tbaa !1876
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !10220
  %35 = load i64, i64* %ob_refcnt24, align 8, !dbg !10221, !tbaa !1927
  %dec25 = add i64 %35, -1, !dbg !10221
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !10221, !tbaa !1927
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !10222
  br i1 %cmp26, label %if.then.27, label %if.else.28, !dbg !10223

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31, !dbg !10224

if.else.28:                                       ; preds = %do.body.22
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !10226, !tbaa !1876
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !10228
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !10228, !tbaa !2194
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !10229
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !10229, !tbaa !2196
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !10230, !tbaa !1876
  call void %38(%struct._object* %39), !dbg !10231
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %40 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !10232
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !10232
  br label %do.cond.32, !dbg !10234

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !10235

do.end.33:                                        ; preds = %do.cond.32
  br label %if.end.35, !dbg !10237

if.else.34:                                       ; preds = %if.then.18
  call void @PyErr_Clear(), !dbg !10239
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.34, %do.end.33
  br label %if.end.36, !dbg !10240

if.end.36:                                        ; preds = %if.end.35, %if.else.16
  %41 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10241, !tbaa !1876
  %42 = bitcast %struct.textio* %41 to %struct._object*, !dbg !10242
  %call37 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %42, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !10243
  store %struct._object* %call37, %struct._object** %res, align 8, !dbg !10244, !tbaa !1876
  %43 = load %struct._object*, %struct._object** %res, align 8, !dbg !10245, !tbaa !1876
  %cmp38 = icmp eq %struct._object* %43, null, !dbg !10246
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !10247

if.then.39:                                       ; preds = %if.end.36
  call void @PyErr_Fetch(%struct._object** %exc, %struct._object** %val, %struct._object** %tb), !dbg !10248
  br label %if.end.53, !dbg !10248

if.else.40:                                       ; preds = %if.end.36
  br label %do.body.41, !dbg !10249

do.body.41:                                       ; preds = %if.else.40
  %44 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !10250
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !10250
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !1274, metadata !1880), !dbg !10252
  %45 = load %struct._object*, %struct._object** %res, align 8, !dbg !10253, !tbaa !1876
  store %struct._object* %45, %struct._object** %_py_decref_tmp42, align 8, !dbg !10252, !tbaa !1876
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10254, !tbaa !1876
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !10256
  %47 = load i64, i64* %ob_refcnt43, align 8, !dbg !10257, !tbaa !1927
  %dec44 = add i64 %47, -1, !dbg !10257
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !10257, !tbaa !1927
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !10258
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !10259

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !10260

if.else.47:                                       ; preds = %do.body.41
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10262, !tbaa !1876
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !10264
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !10264, !tbaa !2194
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !10265
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !10265, !tbaa !2196
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !10266, !tbaa !1876
  call void %50(%struct._object* %51), !dbg !10267
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %52 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !10268
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !10268
  br label %do.cond.51, !dbg !10270

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !10271

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.53

if.end.53:                                        ; preds = %do.end.52, %if.then.39
  %53 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10273, !tbaa !1876
  %buffer54 = getelementptr inbounds %struct.textio, %struct.textio* %53, i32 0, i32 4, !dbg !10274
  %54 = load %struct._object*, %struct._object** %buffer54, align 8, !dbg !10274, !tbaa !4115
  %call55 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %54, %struct._Py_Identifier* @PyId_close, i8* null), !dbg !10275
  store %struct._object* %call55, %struct._object** %res, align 8, !dbg !10276, !tbaa !1876
  %55 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10277, !tbaa !1876
  %cmp56 = icmp ne %struct._object* %55, null, !dbg !10278
  br i1 %cmp56, label %if.then.57, label %if.end.110, !dbg !10279

if.then.57:                                       ; preds = %if.end.53
  %56 = load %struct._object*, %struct._object** %res, align 8, !dbg !10280, !tbaa !1876
  %cmp58 = icmp ne %struct._object* %56, null, !dbg !10281
  br i1 %cmp58, label %if.then.59, label %if.else.78, !dbg !10282

if.then.59:                                       ; preds = %if.then.57
  br label %do.body.60, !dbg !10283

do.body.60:                                       ; preds = %if.then.59
  %57 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10284
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !10284
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1277, metadata !1880), !dbg !10286
  %58 = load %struct._object*, %struct._object** %res, align 8, !dbg !10287, !tbaa !1876
  store %struct._object* %58, %struct._object** %_py_tmp, align 8, !dbg !10286, !tbaa !1876
  %59 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10288, !tbaa !1876
  %cmp61 = icmp ne %struct._object* %59, null, !dbg !10289
  br i1 %cmp61, label %if.then.62, label %if.end.75, !dbg !10290

if.then.62:                                       ; preds = %do.body.60
  store %struct._object* null, %struct._object** %res, align 8, !dbg !10291, !tbaa !1876
  br label %do.body.63, !dbg !10293

do.body.63:                                       ; preds = %if.then.62
  %60 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !10294
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !10294
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp64, metadata !1283, metadata !1880), !dbg !10296
  %61 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10297, !tbaa !1876
  store %struct._object* %61, %struct._object** %_py_decref_tmp64, align 8, !dbg !10296, !tbaa !1876
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10298, !tbaa !1876
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !10300
  %63 = load i64, i64* %ob_refcnt65, align 8, !dbg !10301, !tbaa !1927
  %dec66 = add i64 %63, -1, !dbg !10301
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !10301, !tbaa !1927
  %cmp67 = icmp ne i64 %dec66, 0, !dbg !10302
  br i1 %cmp67, label %if.then.68, label %if.else.69, !dbg !10303

if.then.68:                                       ; preds = %do.body.63
  br label %if.end.72, !dbg !10304

if.else.69:                                       ; preds = %do.body.63
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10306, !tbaa !1876
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !10308
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !10308, !tbaa !2194
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !10309
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !10309, !tbaa !2196
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !10310, !tbaa !1876
  call void %66(%struct._object* %67), !dbg !10311
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %68 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !10312
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !10312
  br label %do.cond.73, !dbg !10314

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !10315

do.end.74:                                        ; preds = %do.cond.73
  br label %if.end.75, !dbg !10317

if.end.75:                                        ; preds = %do.end.74, %do.body.60
  %69 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10319
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !10319
  br label %do.cond.76, !dbg !10322

do.cond.76:                                       ; preds = %if.end.75
  br label %do.end.77, !dbg !10323

do.end.77:                                        ; preds = %do.cond.76
  %70 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10325, !tbaa !1876
  %71 = load %struct._object*, %struct._object** %val, align 8, !dbg !10326, !tbaa !1876
  %72 = load %struct._object*, %struct._object** %tb, align 8, !dbg !10327, !tbaa !1876
  call void @PyErr_Restore(%struct._object* %70, %struct._object* %71, %struct._object* %72), !dbg !10328
  br label %if.end.109, !dbg !10329

if.else.78:                                       ; preds = %if.then.57
  %73 = bitcast %struct._object** %val2 to i8*, !dbg !10330
  call void @llvm.lifetime.start(i64 8, i8* %73) #2, !dbg !10330
  call void @llvm.dbg.declare(metadata %struct._object** %val2, metadata !1287, metadata !1880), !dbg !10331
  br label %do.body.79, !dbg !10332

do.body.79:                                       ; preds = %if.else.78
  %74 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !10333
  call void @llvm.lifetime.start(i64 8, i8* %74) #2, !dbg !10333
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp80, metadata !1289, metadata !1880), !dbg !10335
  %75 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10336, !tbaa !1876
  store %struct._object* %75, %struct._object** %_py_decref_tmp80, align 8, !dbg !10335, !tbaa !1876
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !10337, !tbaa !1876
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !10339
  %77 = load i64, i64* %ob_refcnt81, align 8, !dbg !10340, !tbaa !1927
  %dec82 = add i64 %77, -1, !dbg !10340
  store i64 %dec82, i64* %ob_refcnt81, align 8, !dbg !10340, !tbaa !1927
  %cmp83 = icmp ne i64 %dec82, 0, !dbg !10341
  br i1 %cmp83, label %if.then.84, label %if.else.85, !dbg !10342

if.then.84:                                       ; preds = %do.body.79
  br label %if.end.88, !dbg !10343

if.else.85:                                       ; preds = %do.body.79
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !10345, !tbaa !1876
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !10347
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !10347, !tbaa !2194
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !10348
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8, !dbg !10348, !tbaa !2196
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !10349, !tbaa !1876
  call void %80(%struct._object* %81), !dbg !10350
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  %82 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !10351
  call void @llvm.lifetime.end(i64 8, i8* %82) #2, !dbg !10351
  br label %do.cond.89, !dbg !10353

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !10354

do.end.90:                                        ; preds = %do.cond.89
  br label %do.body.91, !dbg !10356

do.body.91:                                       ; preds = %do.end.90
  %83 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10357
  call void @llvm.lifetime.start(i64 8, i8* %83) #2, !dbg !10357
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1291, metadata !1880), !dbg !10359
  %84 = load %struct._object*, %struct._object** %tb, align 8, !dbg !10360, !tbaa !1876
  store %struct._object* %84, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10359, !tbaa !1876
  %85 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10361, !tbaa !1876
  %cmp92 = icmp ne %struct._object* %85, null, !dbg !10362
  br i1 %cmp92, label %if.then.93, label %if.end.106, !dbg !10363

if.then.93:                                       ; preds = %do.body.91
  br label %do.body.94, !dbg !10364

do.body.94:                                       ; preds = %if.then.93
  %86 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !10366
  call void @llvm.lifetime.start(i64 8, i8* %86) #2, !dbg !10366
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp95, metadata !1293, metadata !1880), !dbg !10368
  %87 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10369, !tbaa !1876
  store %struct._object* %87, %struct._object** %_py_decref_tmp95, align 8, !dbg !10368, !tbaa !1876
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10370, !tbaa !1876
  %ob_refcnt96 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0, !dbg !10372
  %89 = load i64, i64* %ob_refcnt96, align 8, !dbg !10373, !tbaa !1927
  %dec97 = add i64 %89, -1, !dbg !10373
  store i64 %dec97, i64* %ob_refcnt96, align 8, !dbg !10373, !tbaa !1927
  %cmp98 = icmp ne i64 %dec97, 0, !dbg !10374
  br i1 %cmp98, label %if.then.99, label %if.else.100, !dbg !10375

if.then.99:                                       ; preds = %do.body.94
  br label %if.end.103, !dbg !10376

if.else.100:                                      ; preds = %do.body.94
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10378, !tbaa !1876
  %ob_type101 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1, !dbg !10380
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type101, align 8, !dbg !10380, !tbaa !2194
  %tp_dealloc102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4, !dbg !10381
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc102, align 8, !dbg !10381, !tbaa !2196
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10382, !tbaa !1876
  call void %92(%struct._object* %93), !dbg !10383
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.100, %if.then.99
  %94 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !10384
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !10384
  br label %do.cond.104, !dbg !10386

do.cond.104:                                      ; preds = %if.end.103
  br label %do.end.105, !dbg !10387

do.end.105:                                       ; preds = %do.cond.104
  br label %if.end.106, !dbg !10389

if.end.106:                                       ; preds = %do.end.105, %do.body.91
  %95 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10391
  call void @llvm.lifetime.end(i64 8, i8* %95) #2, !dbg !10391
  br label %do.cond.107, !dbg !10394

do.cond.107:                                      ; preds = %if.end.106
  br label %do.end.108, !dbg !10395

do.end.108:                                       ; preds = %do.cond.107
  call void @PyErr_Fetch(%struct._object** %exc, %struct._object** %val2, %struct._object** %tb), !dbg !10397
  call void @PyErr_NormalizeException(%struct._object** %exc, %struct._object** %val2, %struct._object** %tb), !dbg !10398
  %96 = load %struct._object*, %struct._object** %val2, align 8, !dbg !10399, !tbaa !1876
  %97 = load %struct._object*, %struct._object** %val, align 8, !dbg !10400, !tbaa !1876
  call void @PyException_SetContext(%struct._object* %96, %struct._object* %97), !dbg !10401
  %98 = load %struct._object*, %struct._object** %exc, align 8, !dbg !10402, !tbaa !1876
  %99 = load %struct._object*, %struct._object** %val2, align 8, !dbg !10403, !tbaa !1876
  %100 = load %struct._object*, %struct._object** %tb, align 8, !dbg !10404, !tbaa !1876
  call void @PyErr_Restore(%struct._object* %98, %struct._object* %99, %struct._object* %100), !dbg !10405
  %101 = bitcast %struct._object** %val2 to i8*, !dbg !10406
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !10406
  br label %if.end.109

if.end.109:                                       ; preds = %do.end.108, %do.end.77
  br label %if.end.110, !dbg !10407

if.end.110:                                       ; preds = %if.end.109, %if.end.53
  %102 = load %struct._object*, %struct._object** %res, align 8, !dbg !10408, !tbaa !1876
  store %struct._object* %102, %struct._object** %retval, !dbg !10409
  store i32 1, i32* %cleanup.dest.slot
  %103 = bitcast %struct._object** %tb to i8*, !dbg !10410
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !10410
  %104 = bitcast %struct._object** %val to i8*, !dbg !10410
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !10410
  %105 = bitcast %struct._object** %exc to i8*, !dbg !10410
  call void @llvm.lifetime.end(i64 8, i8* %105) #2, !dbg !10410
  br label %cleanup

cleanup:                                          ; preds = %if.end.110, %if.then.15, %if.then.12, %if.then.4, %if.end
  %106 = bitcast i32* %r to i8*, !dbg !10411
  call void @llvm.lifetime.end(i64 4, i8* %106) #2, !dbg !10411
  %107 = bitcast %struct._object** %res to i8*, !dbg !10411
  call void @llvm.lifetime.end(i64 8, i8* %107) #2, !dbg !10411
  %108 = load %struct._object*, %struct._object** %retval, !dbg !10411
  ret %struct._object* %108, !dbg !10411
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_fileno(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1298, metadata !1880), !dbg !10412
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1299, metadata !1880), !dbg !10413
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10414, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10416
  %1 = load i32, i32* %ok, align 4, !dbg !10416, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !10417
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10418

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10419, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10423
  %3 = load i32, i32* %detached, align 4, !dbg !10423, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !10424
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10425

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10426, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10429
  br label %if.end, !dbg !10430

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10431, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10434
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10435
  br label %return, !dbg !10435

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10437, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10438
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10438, !tbaa !4115
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_fileno, i8* null), !dbg !10439
  store %struct._object* %call, %struct._object** %retval, !dbg !10440
  br label %return, !dbg !10440

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10441
  ret %struct._object* %8, !dbg !10441
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_seekable(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1302, metadata !1880), !dbg !10442
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1303, metadata !1880), !dbg !10443
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10444, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10446
  %1 = load i32, i32* %ok, align 4, !dbg !10446, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !10447
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10448

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10449, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10453
  %3 = load i32, i32* %detached, align 4, !dbg !10453, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !10454
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10455

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10456, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10459
  br label %if.end, !dbg !10460

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10461, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10464
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10465
  br label %return, !dbg !10465

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10467, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10468
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10468, !tbaa !4115
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_seekable, i8* null), !dbg !10469
  store %struct._object* %call, %struct._object** %retval, !dbg !10470
  br label %return, !dbg !10470

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10471
  ret %struct._object* %8, !dbg !10471
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_readable(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1306, metadata !1880), !dbg !10472
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1307, metadata !1880), !dbg !10473
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10474, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10476
  %1 = load i32, i32* %ok, align 4, !dbg !10476, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !10477
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10478

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10479, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10483
  %3 = load i32, i32* %detached, align 4, !dbg !10483, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !10484
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10485

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10486, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10489
  br label %if.end, !dbg !10490

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10491, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10494
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10495
  br label %return, !dbg !10495

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10497, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10498
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10498, !tbaa !4115
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_readable, i8* null), !dbg !10499
  store %struct._object* %call, %struct._object** %retval, !dbg !10500
  br label %return, !dbg !10500

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10501
  ret %struct._object* %8, !dbg !10501
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_writable(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1310, metadata !1880), !dbg !10502
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1311, metadata !1880), !dbg !10503
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10504, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10506
  %1 = load i32, i32* %ok, align 4, !dbg !10506, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !10507
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10508

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10509, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10513
  %3 = load i32, i32* %detached, align 4, !dbg !10513, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !10514
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10515

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10516, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10519
  br label %if.end, !dbg !10520

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10521, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10524
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10525
  br label %return, !dbg !10525

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10527, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10528
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10528, !tbaa !4115
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_writable, i8* null), !dbg !10529
  store %struct._object* %call, %struct._object** %retval, !dbg !10530
  br label %return, !dbg !10530

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10531
  ret %struct._object* %8, !dbg !10531
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_isatty(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1314, metadata !1880), !dbg !10532
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1315, metadata !1880), !dbg !10533
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10534, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !10536
  %1 = load i32, i32* %ok, align 4, !dbg !10536, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !10537
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !10538

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10539, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !10543
  %3 = load i32, i32* %detached, align 4, !dbg !10543, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !10544
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !10545

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10546, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10549
  br label %if.end, !dbg !10550

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10551, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10554
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !10555
  br label %return, !dbg !10555

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10557, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !10558
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10558, !tbaa !4115
  %call = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %7, %struct._Py_Identifier* @PyId_isatty, i8* null), !dbg !10559
  store %struct._object* %call, %struct._object** %retval, !dbg !10560
  br label %return, !dbg !10560

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !10561
  ret %struct._object* %8, !dbg !10561
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_getstate(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1318, metadata !1880), !dbg !10562
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1319, metadata !1880), !dbg !10563
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10564, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10565, !tbaa !1876
  %2 = bitcast %struct.textio* %1 to %struct._object*, !dbg !10566
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !10567
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10567, !tbaa !2194
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 1, !dbg !10568
  %4 = load i8*, i8** %tp_name, align 8, !dbg !10568, !tbaa !3080
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0), i8* %4), !dbg !10569
  ret %struct._object* null, !dbg !10570
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_seek(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %cookieObj = alloca %struct._object*, align 8
  %posobj = alloca %struct._object*, align 8
  %cookie = alloca %struct.cookie_type, align 8
  %whence = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %cmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp57 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp104 = alloca %struct._object*, align 8
  %_py_decref_tmp126 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp143 = alloca %struct._object*, align 8
  %_py_decref_tmp177 = alloca %struct._object*, align 8
  %_py_decref_tmp199 = alloca %struct._object*, align 8
  %_py_decref_tmp214 = alloca %struct._object*, align 8
  %_py_tmp226 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %input_chunk = alloca %struct._object*, align 8
  %decoded = alloca %struct._object*, align 8
  %_py_decref_tmp267 = alloca %struct._object*, align 8
  %_py_decref_tmp285 = alloca %struct._object*, align 8
  %_py_xdecref_tmp336 = alloca %struct._object*, align 8
  %_py_decref_tmp341 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1322, metadata !1880), !dbg !10571
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1323, metadata !1880), !dbg !10572
  %0 = bitcast %struct._object** %cookieObj to i8*, !dbg !10573
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10573
  call void @llvm.dbg.declare(metadata %struct._object** %cookieObj, metadata !1324, metadata !1880), !dbg !10574
  %1 = bitcast %struct._object** %posobj to i8*, !dbg !10573
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !10573
  call void @llvm.dbg.declare(metadata %struct._object** %posobj, metadata !1325, metadata !1880), !dbg !10575
  %2 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !10576
  call void @llvm.lifetime.start(i64 24, i8* %2) #2, !dbg !10576
  call void @llvm.dbg.declare(metadata %struct.cookie_type* %cookie, metadata !1326, metadata !1880), !dbg !10577
  %3 = bitcast i32* %whence to i8*, !dbg !10578
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %whence, metadata !1337, metadata !1880), !dbg !10579
  store i32 0, i32* %whence, align 4, !dbg !10579, !tbaa !1883
  %4 = bitcast %struct._object** %res to i8*, !dbg !10580
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !10580
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1338, metadata !1880), !dbg !10581
  %5 = bitcast i32* %cmp to i8*, !dbg !10582
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !10582
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !1339, metadata !1880), !dbg !10583
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10584, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 1, !dbg !10586
  %7 = load i32, i32* %ok, align 4, !dbg !10586, !tbaa !3895
  %cmp1 = icmp sle i32 %7, 0, !dbg !10587
  br i1 %cmp1, label %if.then, label %if.end.3, !dbg !10588

if.then:                                          ; preds = %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10589, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 2, !dbg !10593
  %9 = load i32, i32* %detached, align 4, !dbg !10593, !tbaa !3903
  %tobool = icmp ne i32 %9, 0, !dbg !10594
  br i1 %tobool, label %if.then.2, label %if.else, !dbg !10595

if.then.2:                                        ; preds = %if.then
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10596, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !10599
  br label %if.end, !dbg !10600

if.else:                                          ; preds = %if.then
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10601, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !10604
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !10605
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !10607

if.end.3:                                         ; preds = %entry
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !10608, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i32 0, i32 0), %struct._object** %cookieObj, i32* %whence), !dbg !10610
  %tobool4 = icmp ne i32 %call, 0, !dbg !10610
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !10611

if.then.5:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !10612
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !10612

if.end.6:                                         ; preds = %if.end.3
  br label %do.body, !dbg !10613

do.body:                                          ; preds = %if.end.6
  %13 = bitcast i32* %r to i8*, !dbg !10614
  call void @llvm.lifetime.start(i64 4, i8* %13) #2, !dbg !10614
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1340, metadata !1880), !dbg !10616
  %14 = bitcast %struct._object** %_res to i8*, !dbg !10617
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !10617
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1342, metadata !1880), !dbg !10618
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10619, !tbaa !1876
  %16 = bitcast %struct.textio* %15 to %struct._object*, !dbg !10620
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !10621
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10621, !tbaa !2194
  %cmp7 = icmp eq %struct._typeobject* %17, @PyTextIOWrapper_Type, !dbg !10622
  br i1 %cmp7, label %if.then.8, label %if.else.32, !dbg !10623

if.then.8:                                        ; preds = %do.body
  %18 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10624, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %18, i32 0, i32 28, !dbg !10626
  %19 = load %struct._object*, %struct._object** %raw, align 8, !dbg !10626, !tbaa !4375
  %cmp9 = icmp ne %struct._object* %19, null, !dbg !10627
  br i1 %cmp9, label %if.then.10, label %if.else.13, !dbg !10628

if.then.10:                                       ; preds = %if.then.8
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10629, !tbaa !1876
  %raw11 = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 28, !dbg !10631
  %21 = load %struct._object*, %struct._object** %raw11, align 8, !dbg !10631, !tbaa !4375
  %call12 = call i32 @_PyFileIO_closed(%struct._object* %21), !dbg !10632
  store i32 %call12, i32* %r, align 4, !dbg !10633, !tbaa !1883
  br label %if.end.28, !dbg !10634

if.else.13:                                       ; preds = %if.then.8
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10635, !tbaa !1876
  %call14 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %22, i8* null), !dbg !10637
  store %struct._object* %call14, %struct._object** %_res, align 8, !dbg !10638, !tbaa !1876
  %23 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10639, !tbaa !1876
  %cmp15 = icmp eq %struct._object* %23, null, !dbg !10641
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !10642

if.then.16:                                       ; preds = %if.else.13
  store %struct._object* null, %struct._object** %retval, !dbg !10643
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10645

if.end.17:                                        ; preds = %if.else.13
  %24 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10646, !tbaa !1876
  %call18 = call i32 @PyObject_IsTrue(%struct._object* %24), !dbg !10648
  store i32 %call18, i32* %r, align 4, !dbg !10649, !tbaa !1883
  br label %do.body.19, !dbg !10650

do.body.19:                                       ; preds = %if.end.17
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10651
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !10651
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1343, metadata !1880), !dbg !10653
  %26 = load %struct._object*, %struct._object** %_res, align 8, !dbg !10654, !tbaa !1876
  store %struct._object* %26, %struct._object** %_py_decref_tmp, align 8, !dbg !10653, !tbaa !1876
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10655, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !10657
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !10658, !tbaa !1927
  %dec = add i64 %28, -1, !dbg !10658
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10658, !tbaa !1927
  %cmp20 = icmp ne i64 %dec, 0, !dbg !10659
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !10660

if.then.21:                                       ; preds = %do.body.19
  br label %if.end.24, !dbg !10661

if.else.22:                                       ; preds = %do.body.19
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10663, !tbaa !1876
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !10665
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !10665, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !10666
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10666, !tbaa !2196
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10667, !tbaa !1876
  call void %31(%struct._object* %32), !dbg !10668
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.22, %if.then.21
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10669
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !10669
  br label %do.cond, !dbg !10671

do.cond:                                          ; preds = %if.end.24
  br label %do.end, !dbg !10672

do.end:                                           ; preds = %do.cond
  %34 = load i32, i32* %r, align 4, !dbg !10674, !tbaa !1883
  %cmp25 = icmp slt i32 %34, 0, !dbg !10677
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !10678

if.then.26:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !10679
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10681

if.end.27:                                        ; preds = %do.end
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.10
  %35 = load i32, i32* %r, align 4, !dbg !10682, !tbaa !1883
  %cmp29 = icmp sgt i32 %35, 0, !dbg !10685
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !10686

if.then.30:                                       ; preds = %if.end.28
  %36 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10687, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %36, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !10690
  store %struct._object* null, %struct._object** %retval, !dbg !10691
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10691

if.end.31:                                        ; preds = %if.end.28
  br label %if.end.37, !dbg !10692

if.else.32:                                       ; preds = %do.body
  %37 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10694, !tbaa !1876
  %38 = bitcast %struct.textio* %37 to %struct._object*, !dbg !10697
  %call33 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %38, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !10698
  %cmp34 = icmp eq %struct._object* %call33, null, !dbg !10699
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !10700

if.then.35:                                       ; preds = %if.else.32
  store %struct._object* null, %struct._object** %retval, !dbg !10701
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10703

if.end.36:                                        ; preds = %if.else.32
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.end.31
  store i32 0, i32* %cleanup.dest.slot, !dbg !10704
  br label %cleanup, !dbg !10704

cleanup:                                          ; preds = %if.end.37, %if.then.35, %if.then.30, %if.then.26, %if.then.16
  %39 = bitcast %struct._object** %_res to i8*, !dbg !10706
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !10706
  %40 = bitcast i32* %r to i8*, !dbg !10706
  call void @llvm.lifetime.end(i64 4, i8* %40) #2, !dbg !10706
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %do.cond.39, !dbg !10712

do.cond.39:                                       ; preds = %cleanup.cont
  br label %do.end.40, !dbg !10713

do.end.40:                                        ; preds = %do.cond.39
  %41 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10715, !tbaa !1876
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !10716
  %42 = load i64, i64* %ob_refcnt41, align 8, !dbg !10717, !tbaa !1927
  %inc = add i64 %42, 1, !dbg !10717
  store i64 %inc, i64* %ob_refcnt41, align 8, !dbg !10717, !tbaa !1927
  %43 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10718, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %43, i32 0, i32 16, !dbg !10720
  %44 = load i8, i8* %seekable, align 1, !dbg !10720, !tbaa !4663
  %tobool42 = icmp ne i8 %44, 0, !dbg !10718
  br i1 %tobool42, label %if.end.45, label %if.then.43, !dbg !10721

if.then.43:                                       ; preds = %do.end.40
  %call44 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i32 0, i32 0)), !dbg !10722
  br label %fail, !dbg !10724

if.end.45:                                        ; preds = %do.end.40
  %45 = load i32, i32* %whence, align 4, !dbg !10725, !tbaa !1883
  %cmp46 = icmp eq i32 %45, 1, !dbg !10726
  br i1 %cmp46, label %if.then.47, label %if.else.72, !dbg !10727

if.then.47:                                       ; preds = %if.end.45
  %46 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10728, !tbaa !1876
  %47 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !10729, !tbaa !1876
  %call48 = call i32 @PyObject_RichCompareBool(%struct._object* %46, %struct._object* %47, i32 2), !dbg !10730
  store i32 %call48, i32* %cmp, align 4, !dbg !10731, !tbaa !1883
  %48 = load i32, i32* %cmp, align 4, !dbg !10732, !tbaa !1883
  %cmp49 = icmp slt i32 %48, 0, !dbg !10734
  br i1 %cmp49, label %if.then.50, label %if.end.51, !dbg !10735

if.then.50:                                       ; preds = %if.then.47
  br label %fail, !dbg !10736

if.end.51:                                        ; preds = %if.then.47
  %49 = load i32, i32* %cmp, align 4, !dbg !10737, !tbaa !1883
  %cmp52 = icmp eq i32 %49, 0, !dbg !10739
  br i1 %cmp52, label %if.then.53, label %if.end.55, !dbg !10740

if.then.53:                                       ; preds = %if.end.51
  %call54 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.69, i32 0, i32 0)), !dbg !10741
  br label %fail, !dbg !10743

if.end.55:                                        ; preds = %if.end.51
  br label %do.body.56, !dbg !10744

do.body.56:                                       ; preds = %if.end.55
  %50 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !10745
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !10745
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp57, metadata !1349, metadata !1880), !dbg !10747
  %51 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10748, !tbaa !1876
  store %struct._object* %51, %struct._object** %_py_decref_tmp57, align 8, !dbg !10747, !tbaa !1876
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !10749, !tbaa !1876
  %ob_refcnt58 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !10751
  %53 = load i64, i64* %ob_refcnt58, align 8, !dbg !10752, !tbaa !1927
  %dec59 = add i64 %53, -1, !dbg !10752
  store i64 %dec59, i64* %ob_refcnt58, align 8, !dbg !10752, !tbaa !1927
  %cmp60 = icmp ne i64 %dec59, 0, !dbg !10753
  br i1 %cmp60, label %if.then.61, label %if.else.62, !dbg !10754

if.then.61:                                       ; preds = %do.body.56
  br label %if.end.65, !dbg !10755

if.else.62:                                       ; preds = %do.body.56
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !10757, !tbaa !1876
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !10759
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !10759, !tbaa !2194
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !10760
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !10760, !tbaa !2196
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp57, align 8, !dbg !10761, !tbaa !1876
  call void %56(%struct._object* %57), !dbg !10762
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  %58 = bitcast %struct._object** %_py_decref_tmp57 to i8*, !dbg !10763
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !10763
  br label %do.cond.66, !dbg !10765

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !10766

do.end.67:                                        ; preds = %do.cond.66
  %59 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10768, !tbaa !1876
  %60 = bitcast %struct.textio* %59 to %struct._object*, !dbg !10769
  %call68 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %60, %struct._Py_Identifier* @PyId_tell, i8* null), !dbg !10770
  store %struct._object* %call68, %struct._object** %cookieObj, align 8, !dbg !10771, !tbaa !1876
  %61 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10772, !tbaa !1876
  %cmp69 = icmp eq %struct._object* %61, null, !dbg !10774
  br i1 %cmp69, label %if.then.70, label %if.end.71, !dbg !10775

if.then.70:                                       ; preds = %do.end.67
  br label %fail, !dbg !10776

if.end.71:                                        ; preds = %do.end.67
  br label %if.end.163, !dbg !10777

if.else.72:                                       ; preds = %if.end.45
  %62 = load i32, i32* %whence, align 4, !dbg !10778, !tbaa !1883
  %cmp73 = icmp eq i32 %62, 2, !dbg !10779
  br i1 %cmp73, label %if.then.74, label %if.else.157, !dbg !10780

if.then.74:                                       ; preds = %if.else.72
  %63 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10781, !tbaa !1876
  %64 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !10782, !tbaa !1876
  %call75 = call i32 @PyObject_RichCompareBool(%struct._object* %63, %struct._object* %64, i32 2), !dbg !10783
  store i32 %call75, i32* %cmp, align 4, !dbg !10784, !tbaa !1883
  %65 = load i32, i32* %cmp, align 4, !dbg !10785, !tbaa !1883
  %cmp76 = icmp slt i32 %65, 0, !dbg !10787
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !10788

if.then.77:                                       ; preds = %if.then.74
  br label %fail, !dbg !10789

if.end.78:                                        ; preds = %if.then.74
  %66 = load i32, i32* %cmp, align 4, !dbg !10790, !tbaa !1883
  %cmp79 = icmp eq i32 %66, 0, !dbg !10792
  br i1 %cmp79, label %if.then.80, label %if.end.82, !dbg !10793

if.then.80:                                       ; preds = %if.end.78
  %call81 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70, i32 0, i32 0)), !dbg !10794
  br label %fail, !dbg !10796

if.end.82:                                        ; preds = %if.end.78
  %67 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10797, !tbaa !1876
  %68 = bitcast %struct.textio* %67 to %struct._object*, !dbg !10798
  %call83 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %68, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !10799
  store %struct._object* %call83, %struct._object** %res, align 8, !dbg !10800, !tbaa !1876
  %69 = load %struct._object*, %struct._object** %res, align 8, !dbg !10801, !tbaa !1876
  %cmp84 = icmp eq %struct._object* %69, null, !dbg !10803
  br i1 %cmp84, label %if.then.85, label %if.end.86, !dbg !10804

if.then.85:                                       ; preds = %if.end.82
  br label %fail, !dbg !10805

if.end.86:                                        ; preds = %if.end.82
  br label %do.body.87, !dbg !10806

do.body.87:                                       ; preds = %if.end.86
  %70 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !10807
  call void @llvm.lifetime.start(i64 8, i8* %70) #2, !dbg !10807
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp88, metadata !1353, metadata !1880), !dbg !10809
  %71 = load %struct._object*, %struct._object** %res, align 8, !dbg !10810, !tbaa !1876
  store %struct._object* %71, %struct._object** %_py_decref_tmp88, align 8, !dbg !10809, !tbaa !1876
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10811, !tbaa !1876
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !10813
  %73 = load i64, i64* %ob_refcnt89, align 8, !dbg !10814, !tbaa !1927
  %dec90 = add i64 %73, -1, !dbg !10814
  store i64 %dec90, i64* %ob_refcnt89, align 8, !dbg !10814, !tbaa !1927
  %cmp91 = icmp ne i64 %dec90, 0, !dbg !10815
  br i1 %cmp91, label %if.then.92, label %if.else.93, !dbg !10816

if.then.92:                                       ; preds = %do.body.87
  br label %if.end.96, !dbg !10817

if.else.93:                                       ; preds = %do.body.87
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10819, !tbaa !1876
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !10821
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !10821, !tbaa !2194
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !10822
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !10822, !tbaa !2196
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8, !dbg !10823, !tbaa !1876
  call void %76(%struct._object* %77), !dbg !10824
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %78 = bitcast %struct._object** %_py_decref_tmp88 to i8*, !dbg !10825
  call void @llvm.lifetime.end(i64 8, i8* %78) #2, !dbg !10825
  br label %do.cond.97, !dbg !10827

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !10828

do.end.98:                                        ; preds = %do.cond.97
  %79 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10830, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %79, %struct._object* null), !dbg !10831
  br label %do.body.99, !dbg !10832

do.body.99:                                       ; preds = %do.end.98
  %80 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10833
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !10833
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1357, metadata !1880), !dbg !10835
  %81 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10836, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %81, i32 0, i32 26, !dbg !10837
  %82 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !10837, !tbaa !4317
  store %struct._object* %82, %struct._object** %_py_tmp, align 8, !dbg !10835, !tbaa !1876
  %83 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10838, !tbaa !1876
  %cmp100 = icmp ne %struct._object* %83, null, !dbg !10839
  br i1 %cmp100, label %if.then.101, label %if.end.115, !dbg !10840

if.then.101:                                      ; preds = %do.body.99
  %84 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10841, !tbaa !1876
  %snapshot102 = getelementptr inbounds %struct.textio, %struct.textio* %84, i32 0, i32 26, !dbg !10843
  store %struct._object* null, %struct._object** %snapshot102, align 8, !dbg !10844, !tbaa !4317
  br label %do.body.103, !dbg !10845

do.body.103:                                      ; preds = %if.then.101
  %85 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !10846
  call void @llvm.lifetime.start(i64 8, i8* %85) #2, !dbg !10846
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp104, metadata !1359, metadata !1880), !dbg !10848
  %86 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !10849, !tbaa !1876
  store %struct._object* %86, %struct._object** %_py_decref_tmp104, align 8, !dbg !10848, !tbaa !1876
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !10850, !tbaa !1876
  %ob_refcnt105 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !10852
  %88 = load i64, i64* %ob_refcnt105, align 8, !dbg !10853, !tbaa !1927
  %dec106 = add i64 %88, -1, !dbg !10853
  store i64 %dec106, i64* %ob_refcnt105, align 8, !dbg !10853, !tbaa !1927
  %cmp107 = icmp ne i64 %dec106, 0, !dbg !10854
  br i1 %cmp107, label %if.then.108, label %if.else.109, !dbg !10855

if.then.108:                                      ; preds = %do.body.103
  br label %if.end.112, !dbg !10856

if.else.109:                                      ; preds = %do.body.103
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !10858, !tbaa !1876
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !10860
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !10860, !tbaa !2194
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !10861
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !10861, !tbaa !2196
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp104, align 8, !dbg !10862, !tbaa !1876
  call void %91(%struct._object* %92), !dbg !10863
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  %93 = bitcast %struct._object** %_py_decref_tmp104 to i8*, !dbg !10864
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !10864
  br label %do.cond.113, !dbg !10866

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !10867

do.end.114:                                       ; preds = %do.cond.113
  br label %if.end.115, !dbg !10869

if.end.115:                                       ; preds = %do.end.114, %do.body.99
  %94 = bitcast %struct._object** %_py_tmp to i8*, !dbg !10871
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !10871
  br label %do.cond.116, !dbg !10874

do.cond.116:                                      ; preds = %if.end.115
  br label %do.end.117, !dbg !10875

do.end.117:                                       ; preds = %do.cond.116
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10877, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 7, !dbg !10878
  %96 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !10878, !tbaa !4201
  %tobool118 = icmp ne %struct._object* %96, null, !dbg !10877
  br i1 %tobool118, label %if.then.119, label %if.end.137, !dbg !10879

if.then.119:                                      ; preds = %do.end.117
  %97 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10880, !tbaa !1876
  %decoder120 = getelementptr inbounds %struct.textio, %struct.textio* %97, i32 0, i32 7, !dbg !10881
  %98 = load %struct._object*, %struct._object** %decoder120, align 8, !dbg !10881, !tbaa !4201
  %call121 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %98, %struct._Py_Identifier* @PyId_reset, i8* null), !dbg !10882
  store %struct._object* %call121, %struct._object** %res, align 8, !dbg !10883, !tbaa !1876
  %99 = load %struct._object*, %struct._object** %res, align 8, !dbg !10884, !tbaa !1876
  %cmp122 = icmp eq %struct._object* %99, null, !dbg !10886
  br i1 %cmp122, label %if.then.123, label %if.end.124, !dbg !10887

if.then.123:                                      ; preds = %if.then.119
  br label %fail, !dbg !10888

if.end.124:                                       ; preds = %if.then.119
  br label %do.body.125, !dbg !10889

do.body.125:                                      ; preds = %if.end.124
  %100 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !10890
  call void @llvm.lifetime.start(i64 8, i8* %100) #2, !dbg !10890
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp126, metadata !1363, metadata !1880), !dbg !10892
  %101 = load %struct._object*, %struct._object** %res, align 8, !dbg !10893, !tbaa !1876
  store %struct._object* %101, %struct._object** %_py_decref_tmp126, align 8, !dbg !10892, !tbaa !1876
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10894, !tbaa !1876
  %ob_refcnt127 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !10896
  %103 = load i64, i64* %ob_refcnt127, align 8, !dbg !10897, !tbaa !1927
  %dec128 = add i64 %103, -1, !dbg !10897
  store i64 %dec128, i64* %ob_refcnt127, align 8, !dbg !10897, !tbaa !1927
  %cmp129 = icmp ne i64 %dec128, 0, !dbg !10898
  br i1 %cmp129, label %if.then.130, label %if.else.131, !dbg !10899

if.then.130:                                      ; preds = %do.body.125
  br label %if.end.134, !dbg !10900

if.else.131:                                      ; preds = %do.body.125
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10902, !tbaa !1876
  %ob_type132 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !10904
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type132, align 8, !dbg !10904, !tbaa !2194
  %tp_dealloc133 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !10905
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc133, align 8, !dbg !10905, !tbaa !2196
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp126, align 8, !dbg !10906, !tbaa !1876
  call void %106(%struct._object* %107), !dbg !10907
  br label %if.end.134

if.end.134:                                       ; preds = %if.else.131, %if.then.130
  %108 = bitcast %struct._object** %_py_decref_tmp126 to i8*, !dbg !10908
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !10908
  br label %do.cond.135, !dbg !10910

do.cond.135:                                      ; preds = %if.end.134
  br label %do.end.136, !dbg !10911

do.end.136:                                       ; preds = %do.cond.135
  br label %if.end.137, !dbg !10913

if.end.137:                                       ; preds = %do.end.136, %do.end.117
  %109 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10914, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %109, i32 0, i32 4, !dbg !10915
  %110 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !10915, !tbaa !4115
  %call138 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %110, %struct._Py_Identifier* @PyId_seek, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i32 0, i32 2), !dbg !10916
  store %struct._object* %call138, %struct._object** %res, align 8, !dbg !10917, !tbaa !1876
  br label %do.body.139, !dbg !10918

do.body.139:                                      ; preds = %if.end.137
  %111 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10919
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !10919
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1367, metadata !1880), !dbg !10921
  %112 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10922, !tbaa !1876
  store %struct._object* %112, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10921, !tbaa !1876
  %113 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10923, !tbaa !1876
  %cmp140 = icmp ne %struct._object* %113, null, !dbg !10924
  br i1 %cmp140, label %if.then.141, label %if.end.154, !dbg !10925

if.then.141:                                      ; preds = %do.body.139
  br label %do.body.142, !dbg !10926

do.body.142:                                      ; preds = %if.then.141
  %114 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !10928
  call void @llvm.lifetime.start(i64 8, i8* %114) #2, !dbg !10928
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp143, metadata !1369, metadata !1880), !dbg !10930
  %115 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10931, !tbaa !1876
  store %struct._object* %115, %struct._object** %_py_decref_tmp143, align 8, !dbg !10930, !tbaa !1876
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !10932, !tbaa !1876
  %ob_refcnt144 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !10934
  %117 = load i64, i64* %ob_refcnt144, align 8, !dbg !10935, !tbaa !1927
  %dec145 = add i64 %117, -1, !dbg !10935
  store i64 %dec145, i64* %ob_refcnt144, align 8, !dbg !10935, !tbaa !1927
  %cmp146 = icmp ne i64 %dec145, 0, !dbg !10936
  br i1 %cmp146, label %if.then.147, label %if.else.148, !dbg !10937

if.then.147:                                      ; preds = %do.body.142
  br label %if.end.151, !dbg !10938

if.else.148:                                      ; preds = %do.body.142
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !10940, !tbaa !1876
  %ob_type149 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1, !dbg !10942
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type149, align 8, !dbg !10942, !tbaa !2194
  %tp_dealloc150 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4, !dbg !10943
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc150, align 8, !dbg !10943, !tbaa !2196
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !10944, !tbaa !1876
  call void %120(%struct._object* %121), !dbg !10945
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.148, %if.then.147
  %122 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !10946
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !10946
  br label %do.cond.152, !dbg !10948

do.cond.152:                                      ; preds = %if.end.151
  br label %do.end.153, !dbg !10949

do.end.153:                                       ; preds = %do.cond.152
  br label %if.end.154, !dbg !10951

if.end.154:                                       ; preds = %do.end.153, %do.body.139
  %123 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10953
  call void @llvm.lifetime.end(i64 8, i8* %123) #2, !dbg !10953
  br label %do.cond.155, !dbg !10954

do.cond.155:                                      ; preds = %if.end.154
  br label %do.end.156, !dbg !10955

do.end.156:                                       ; preds = %do.cond.155
  %124 = load %struct._object*, %struct._object** %res, align 8, !dbg !10957, !tbaa !1876
  store %struct._object* %124, %struct._object** %retval, !dbg !10958
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !10958

if.else.157:                                      ; preds = %if.else.72
  %125 = load i32, i32* %whence, align 4, !dbg !10959, !tbaa !1883
  %cmp158 = icmp ne i32 %125, 0, !dbg !10961
  br i1 %cmp158, label %if.then.159, label %if.end.161, !dbg !10962

if.then.159:                                      ; preds = %if.else.157
  %126 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10963, !tbaa !1876
  %127 = load i32, i32* %whence, align 4, !dbg !10965, !tbaa !1883
  %call160 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %126, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.72, i32 0, i32 0), i32 %127), !dbg !10966
  br label %fail, !dbg !10967

if.end.161:                                       ; preds = %if.else.157
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161
  br label %if.end.163

if.end.163:                                       ; preds = %if.end.162, %if.end.71
  %128 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10968, !tbaa !1876
  %129 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !10969, !tbaa !1876
  %call164 = call i32 @PyObject_RichCompareBool(%struct._object* %128, %struct._object* %129, i32 0), !dbg !10970
  store i32 %call164, i32* %cmp, align 4, !dbg !10971, !tbaa !1883
  %130 = load i32, i32* %cmp, align 4, !dbg !10972, !tbaa !1883
  %cmp165 = icmp slt i32 %130, 0, !dbg !10974
  br i1 %cmp165, label %if.then.166, label %if.end.167, !dbg !10975

if.then.166:                                      ; preds = %if.end.163
  br label %fail, !dbg !10976

if.end.167:                                       ; preds = %if.end.163
  %131 = load i32, i32* %cmp, align 4, !dbg !10977, !tbaa !1883
  %cmp168 = icmp eq i32 %131, 1, !dbg !10979
  br i1 %cmp168, label %if.then.169, label %if.end.171, !dbg !10980

if.then.169:                                      ; preds = %if.end.167
  %132 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10981, !tbaa !1876
  %133 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !10983, !tbaa !1876
  %call170 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %132, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0), %struct._object* %133), !dbg !10984
  br label %fail, !dbg !10985

if.end.171:                                       ; preds = %if.end.167
  %134 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !10986, !tbaa !1876
  %135 = bitcast %struct.textio* %134 to %struct._object*, !dbg !10987
  %136 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !10988, !tbaa !1876
  %call172 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %135, %struct._object* %136, i8* null), !dbg !10989
  store %struct._object* %call172, %struct._object** %res, align 8, !dbg !10990, !tbaa !1876
  %137 = load %struct._object*, %struct._object** %res, align 8, !dbg !10991, !tbaa !1876
  %cmp173 = icmp eq %struct._object* %137, null, !dbg !10993
  br i1 %cmp173, label %if.then.174, label %if.end.175, !dbg !10994

if.then.174:                                      ; preds = %if.end.171
  br label %fail, !dbg !10995

if.end.175:                                       ; preds = %if.end.171
  br label %do.body.176, !dbg !10996

do.body.176:                                      ; preds = %if.end.175
  %138 = bitcast %struct._object** %_py_decref_tmp177 to i8*, !dbg !10997
  call void @llvm.lifetime.start(i64 8, i8* %138) #2, !dbg !10997
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp177, metadata !1372, metadata !1880), !dbg !10999
  %139 = load %struct._object*, %struct._object** %res, align 8, !dbg !11000, !tbaa !1876
  store %struct._object* %139, %struct._object** %_py_decref_tmp177, align 8, !dbg !10999, !tbaa !1876
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !11001, !tbaa !1876
  %ob_refcnt178 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0, !dbg !11003
  %141 = load i64, i64* %ob_refcnt178, align 8, !dbg !11004, !tbaa !1927
  %dec179 = add i64 %141, -1, !dbg !11004
  store i64 %dec179, i64* %ob_refcnt178, align 8, !dbg !11004, !tbaa !1927
  %cmp180 = icmp ne i64 %dec179, 0, !dbg !11005
  br i1 %cmp180, label %if.then.181, label %if.else.182, !dbg !11006

if.then.181:                                      ; preds = %do.body.176
  br label %if.end.185, !dbg !11007

if.else.182:                                      ; preds = %do.body.176
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !11009, !tbaa !1876
  %ob_type183 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 1, !dbg !11011
  %143 = load %struct._typeobject*, %struct._typeobject** %ob_type183, align 8, !dbg !11011, !tbaa !2194
  %tp_dealloc184 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %143, i32 0, i32 4, !dbg !11012
  %144 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc184, align 8, !dbg !11012, !tbaa !2196
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !11013, !tbaa !1876
  call void %144(%struct._object* %145), !dbg !11014
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.182, %if.then.181
  %146 = bitcast %struct._object** %_py_decref_tmp177 to i8*, !dbg !11015
  call void @llvm.lifetime.end(i64 8, i8* %146) #2, !dbg !11015
  br label %do.cond.186, !dbg !11017

do.cond.186:                                      ; preds = %if.end.185
  br label %do.end.187, !dbg !11018

do.end.187:                                       ; preds = %do.cond.186
  %147 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !11020, !tbaa !1876
  %call188 = call i32 @textiowrapper_parse_cookie(%struct.cookie_type* %cookie, %struct._object* %147), !dbg !11022
  %cmp189 = icmp slt i32 %call188, 0, !dbg !11023
  br i1 %cmp189, label %if.then.190, label %if.end.191, !dbg !11024

if.then.190:                                      ; preds = %do.end.187
  br label %fail, !dbg !11025

if.end.191:                                       ; preds = %do.end.187
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11026
  %148 = load i64, i64* %start_pos, align 8, !dbg !11026, !tbaa !11027
  %call192 = call %struct._object* @PyLong_FromSsize_t(i64 %148), !dbg !11029
  store %struct._object* %call192, %struct._object** %posobj, align 8, !dbg !11030, !tbaa !1876
  %149 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11031, !tbaa !1876
  %cmp193 = icmp eq %struct._object* %149, null, !dbg !11033
  br i1 %cmp193, label %if.then.194, label %if.end.195, !dbg !11034

if.then.194:                                      ; preds = %if.end.191
  br label %fail, !dbg !11035

if.end.195:                                       ; preds = %if.end.191
  %150 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11036, !tbaa !1876
  %buffer196 = getelementptr inbounds %struct.textio, %struct.textio* %150, i32 0, i32 4, !dbg !11037
  %151 = load %struct._object*, %struct._object** %buffer196, align 8, !dbg !11037, !tbaa !4115
  %152 = load %struct._object*, %struct._object** @_PyIO_str_seek, align 8, !dbg !11038, !tbaa !1876
  %153 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11039, !tbaa !1876
  %call197 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %151, %struct._object* %152, %struct._object* %153, i8* null), !dbg !11040
  store %struct._object* %call197, %struct._object** %res, align 8, !dbg !11041, !tbaa !1876
  br label %do.body.198, !dbg !11042

do.body.198:                                      ; preds = %if.end.195
  %154 = bitcast %struct._object** %_py_decref_tmp199 to i8*, !dbg !11043
  call void @llvm.lifetime.start(i64 8, i8* %154) #2, !dbg !11043
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp199, metadata !1374, metadata !1880), !dbg !11045
  %155 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11046, !tbaa !1876
  store %struct._object* %155, %struct._object** %_py_decref_tmp199, align 8, !dbg !11045, !tbaa !1876
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp199, align 8, !dbg !11047, !tbaa !1876
  %ob_refcnt200 = getelementptr inbounds %struct._object, %struct._object* %156, i32 0, i32 0, !dbg !11049
  %157 = load i64, i64* %ob_refcnt200, align 8, !dbg !11050, !tbaa !1927
  %dec201 = add i64 %157, -1, !dbg !11050
  store i64 %dec201, i64* %ob_refcnt200, align 8, !dbg !11050, !tbaa !1927
  %cmp202 = icmp ne i64 %dec201, 0, !dbg !11051
  br i1 %cmp202, label %if.then.203, label %if.else.204, !dbg !11052

if.then.203:                                      ; preds = %do.body.198
  br label %if.end.207, !dbg !11053

if.else.204:                                      ; preds = %do.body.198
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp199, align 8, !dbg !11055, !tbaa !1876
  %ob_type205 = getelementptr inbounds %struct._object, %struct._object* %158, i32 0, i32 1, !dbg !11057
  %159 = load %struct._typeobject*, %struct._typeobject** %ob_type205, align 8, !dbg !11057, !tbaa !2194
  %tp_dealloc206 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %159, i32 0, i32 4, !dbg !11058
  %160 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc206, align 8, !dbg !11058, !tbaa !2196
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp199, align 8, !dbg !11059, !tbaa !1876
  call void %160(%struct._object* %161), !dbg !11060
  br label %if.end.207

if.end.207:                                       ; preds = %if.else.204, %if.then.203
  %162 = bitcast %struct._object** %_py_decref_tmp199 to i8*, !dbg !11061
  call void @llvm.lifetime.end(i64 8, i8* %162) #2, !dbg !11061
  br label %do.cond.208, !dbg !11062

do.cond.208:                                      ; preds = %if.end.207
  br label %do.end.209, !dbg !11063

do.end.209:                                       ; preds = %do.cond.208
  %163 = load %struct._object*, %struct._object** %res, align 8, !dbg !11065, !tbaa !1876
  %cmp210 = icmp eq %struct._object* %163, null, !dbg !11067
  br i1 %cmp210, label %if.then.211, label %if.end.212, !dbg !11068

if.then.211:                                      ; preds = %do.end.209
  br label %fail, !dbg !11069

if.end.212:                                       ; preds = %do.end.209
  br label %do.body.213, !dbg !11070

do.body.213:                                      ; preds = %if.end.212
  %164 = bitcast %struct._object** %_py_decref_tmp214 to i8*, !dbg !11071
  call void @llvm.lifetime.start(i64 8, i8* %164) #2, !dbg !11071
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp214, metadata !1376, metadata !1880), !dbg !11073
  %165 = load %struct._object*, %struct._object** %res, align 8, !dbg !11074, !tbaa !1876
  store %struct._object* %165, %struct._object** %_py_decref_tmp214, align 8, !dbg !11073, !tbaa !1876
  %166 = load %struct._object*, %struct._object** %_py_decref_tmp214, align 8, !dbg !11075, !tbaa !1876
  %ob_refcnt215 = getelementptr inbounds %struct._object, %struct._object* %166, i32 0, i32 0, !dbg !11077
  %167 = load i64, i64* %ob_refcnt215, align 8, !dbg !11078, !tbaa !1927
  %dec216 = add i64 %167, -1, !dbg !11078
  store i64 %dec216, i64* %ob_refcnt215, align 8, !dbg !11078, !tbaa !1927
  %cmp217 = icmp ne i64 %dec216, 0, !dbg !11079
  br i1 %cmp217, label %if.then.218, label %if.else.219, !dbg !11080

if.then.218:                                      ; preds = %do.body.213
  br label %if.end.222, !dbg !11081

if.else.219:                                      ; preds = %do.body.213
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp214, align 8, !dbg !11083, !tbaa !1876
  %ob_type220 = getelementptr inbounds %struct._object, %struct._object* %168, i32 0, i32 1, !dbg !11085
  %169 = load %struct._typeobject*, %struct._typeobject** %ob_type220, align 8, !dbg !11085, !tbaa !2194
  %tp_dealloc221 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %169, i32 0, i32 4, !dbg !11086
  %170 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc221, align 8, !dbg !11086, !tbaa !2196
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp214, align 8, !dbg !11087, !tbaa !1876
  call void %170(%struct._object* %171), !dbg !11088
  br label %if.end.222

if.end.222:                                       ; preds = %if.else.219, %if.then.218
  %172 = bitcast %struct._object** %_py_decref_tmp214 to i8*, !dbg !11089
  call void @llvm.lifetime.end(i64 8, i8* %172) #2, !dbg !11089
  br label %do.cond.223, !dbg !11090

do.cond.223:                                      ; preds = %if.end.222
  br label %do.end.224, !dbg !11091

do.end.224:                                       ; preds = %do.cond.223
  %173 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11093, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %173, %struct._object* null), !dbg !11094
  br label %do.body.225, !dbg !11095

do.body.225:                                      ; preds = %do.end.224
  %174 = bitcast %struct._object** %_py_tmp226 to i8*, !dbg !11096
  call void @llvm.lifetime.start(i64 8, i8* %174) #2, !dbg !11096
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp226, metadata !1378, metadata !1880), !dbg !11098
  %175 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11099, !tbaa !1876
  %snapshot227 = getelementptr inbounds %struct.textio, %struct.textio* %175, i32 0, i32 26, !dbg !11100
  %176 = load %struct._object*, %struct._object** %snapshot227, align 8, !dbg !11100, !tbaa !4317
  store %struct._object* %176, %struct._object** %_py_tmp226, align 8, !dbg !11098, !tbaa !1876
  %177 = load %struct._object*, %struct._object** %_py_tmp226, align 8, !dbg !11101, !tbaa !1876
  %cmp228 = icmp ne %struct._object* %177, null, !dbg !11102
  br i1 %cmp228, label %if.then.229, label %if.end.243, !dbg !11103

if.then.229:                                      ; preds = %do.body.225
  %178 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11104, !tbaa !1876
  %snapshot230 = getelementptr inbounds %struct.textio, %struct.textio* %178, i32 0, i32 26, !dbg !11106
  store %struct._object* null, %struct._object** %snapshot230, align 8, !dbg !11107, !tbaa !4317
  br label %do.body.231, !dbg !11108

do.body.231:                                      ; preds = %if.then.229
  %179 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !11109
  call void @llvm.lifetime.start(i64 8, i8* %179) #2, !dbg !11109
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !1380, metadata !1880), !dbg !11111
  %180 = load %struct._object*, %struct._object** %_py_tmp226, align 8, !dbg !11112, !tbaa !1876
  store %struct._object* %180, %struct._object** %_py_decref_tmp232, align 8, !dbg !11111, !tbaa !1876
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !11113, !tbaa !1876
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 0, !dbg !11115
  %182 = load i64, i64* %ob_refcnt233, align 8, !dbg !11116, !tbaa !1927
  %dec234 = add i64 %182, -1, !dbg !11116
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !11116, !tbaa !1927
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !11117
  br i1 %cmp235, label %if.then.236, label %if.else.237, !dbg !11118

if.then.236:                                      ; preds = %do.body.231
  br label %if.end.240, !dbg !11119

if.else.237:                                      ; preds = %do.body.231
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !11121, !tbaa !1876
  %ob_type238 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 1, !dbg !11123
  %184 = load %struct._typeobject*, %struct._typeobject** %ob_type238, align 8, !dbg !11123, !tbaa !2194
  %tp_dealloc239 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %184, i32 0, i32 4, !dbg !11124
  %185 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc239, align 8, !dbg !11124, !tbaa !2196
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !11125, !tbaa !1876
  call void %185(%struct._object* %186), !dbg !11126
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.237, %if.then.236
  %187 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !11127
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !11127
  br label %do.cond.241, !dbg !11129

do.cond.241:                                      ; preds = %if.end.240
  br label %do.end.242, !dbg !11130

do.end.242:                                       ; preds = %do.cond.241
  br label %if.end.243, !dbg !11132

if.end.243:                                       ; preds = %do.end.242, %do.body.225
  %188 = bitcast %struct._object** %_py_tmp226 to i8*, !dbg !11134
  call void @llvm.lifetime.end(i64 8, i8* %188) #2, !dbg !11134
  br label %do.cond.244, !dbg !11137

do.cond.244:                                      ; preds = %if.end.243
  br label %do.end.245, !dbg !11138

do.end.245:                                       ; preds = %do.cond.244
  %189 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11140, !tbaa !1876
  %decoder246 = getelementptr inbounds %struct.textio, %struct.textio* %189, i32 0, i32 7, !dbg !11142
  %190 = load %struct._object*, %struct._object** %decoder246, align 8, !dbg !11142, !tbaa !4201
  %tobool247 = icmp ne %struct._object* %190, null, !dbg !11140
  br i1 %tobool247, label %if.then.248, label %if.end.253, !dbg !11143

if.then.248:                                      ; preds = %do.end.245
  %191 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11144, !tbaa !1876
  %call249 = call i32 @_textiowrapper_decoder_setstate(%struct.textio* %191, %struct.cookie_type* %cookie), !dbg !11147
  %cmp250 = icmp slt i32 %call249, 0, !dbg !11148
  br i1 %cmp250, label %if.then.251, label %if.end.252, !dbg !11149

if.then.251:                                      ; preds = %if.then.248
  br label %fail, !dbg !11150

if.end.252:                                       ; preds = %if.then.248
  br label %if.end.253, !dbg !11151

if.end.253:                                       ; preds = %if.end.252, %do.end.245
  %chars_to_skip = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11152
  %192 = load i32, i32* %chars_to_skip, align 4, !dbg !11152, !tbaa !11153
  %tobool254 = icmp ne i32 %192, 0, !dbg !11154
  br i1 %tobool254, label %if.then.255, label %if.else.317, !dbg !11155

if.then.255:                                      ; preds = %if.end.253
  %193 = bitcast %struct._object** %input_chunk to i8*, !dbg !11156
  call void @llvm.lifetime.start(i64 8, i8* %193) #2, !dbg !11156
  call void @llvm.dbg.declare(metadata %struct._object** %input_chunk, metadata !1384, metadata !1880), !dbg !11157
  %194 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11158, !tbaa !1876
  %buffer256 = getelementptr inbounds %struct.textio, %struct.textio* %194, i32 0, i32 4, !dbg !11159
  %195 = load %struct._object*, %struct._object** %buffer256, align 8, !dbg !11159, !tbaa !4115
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !11160
  %196 = load i32, i32* %bytes_to_feed, align 4, !dbg !11160, !tbaa !11161
  %call257 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %195, %struct._Py_Identifier* @PyId_read, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0), i32 %196), !dbg !11162
  store %struct._object* %call257, %struct._object** %input_chunk, align 8, !dbg !11157, !tbaa !1876
  %197 = bitcast %struct._object** %decoded to i8*, !dbg !11163
  call void @llvm.lifetime.start(i64 8, i8* %197) #2, !dbg !11163
  call void @llvm.dbg.declare(metadata %struct._object** %decoded, metadata !1387, metadata !1880), !dbg !11164
  %198 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11165, !tbaa !1876
  %cmp258 = icmp eq %struct._object* %198, null, !dbg !11167
  br i1 %cmp258, label %if.then.259, label %if.end.260, !dbg !11168

if.then.259:                                      ; preds = %if.then.255
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11169

if.end.260:                                       ; preds = %if.then.255
  %199 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11170, !tbaa !1876
  %ob_type261 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 1, !dbg !11171
  %200 = load %struct._typeobject*, %struct._typeobject** %ob_type261, align 8, !dbg !11171, !tbaa !2194
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %200, i32 0, i32 19, !dbg !11172
  %201 = load i64, i64* %tp_flags, align 8, !dbg !11172, !tbaa !3072
  %and = and i64 %201, 134217728, !dbg !11173
  %cmp262 = icmp ne i64 %and, 0, !dbg !11174
  br i1 %cmp262, label %if.end.278, label %if.then.263, !dbg !11175

if.then.263:                                      ; preds = %if.end.260
  %202 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11176, !tbaa !1876
  %203 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11177, !tbaa !1876
  %ob_type264 = getelementptr inbounds %struct._object, %struct._object* %203, i32 0, i32 1, !dbg !11178
  %204 = load %struct._typeobject*, %struct._typeobject** %ob_type264, align 8, !dbg !11178, !tbaa !2194
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %204, i32 0, i32 1, !dbg !11179
  %205 = load i8*, i8** %tp_name, align 8, !dbg !11179, !tbaa !3080
  %call265 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %202, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.75, i32 0, i32 0), i8* %205), !dbg !11180
  br label %do.body.266, !dbg !11181

do.body.266:                                      ; preds = %if.then.263
  %206 = bitcast %struct._object** %_py_decref_tmp267 to i8*, !dbg !11182
  call void @llvm.lifetime.start(i64 8, i8* %206) #2, !dbg !11182
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp267, metadata !1388, metadata !1880), !dbg !11184
  %207 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11185, !tbaa !1876
  store %struct._object* %207, %struct._object** %_py_decref_tmp267, align 8, !dbg !11184, !tbaa !1876
  %208 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !11186, !tbaa !1876
  %ob_refcnt268 = getelementptr inbounds %struct._object, %struct._object* %208, i32 0, i32 0, !dbg !11188
  %209 = load i64, i64* %ob_refcnt268, align 8, !dbg !11189, !tbaa !1927
  %dec269 = add i64 %209, -1, !dbg !11189
  store i64 %dec269, i64* %ob_refcnt268, align 8, !dbg !11189, !tbaa !1927
  %cmp270 = icmp ne i64 %dec269, 0, !dbg !11190
  br i1 %cmp270, label %if.then.271, label %if.else.272, !dbg !11191

if.then.271:                                      ; preds = %do.body.266
  br label %if.end.275, !dbg !11192

if.else.272:                                      ; preds = %do.body.266
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !11194, !tbaa !1876
  %ob_type273 = getelementptr inbounds %struct._object, %struct._object* %210, i32 0, i32 1, !dbg !11196
  %211 = load %struct._typeobject*, %struct._typeobject** %ob_type273, align 8, !dbg !11196, !tbaa !2194
  %tp_dealloc274 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %211, i32 0, i32 4, !dbg !11197
  %212 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc274, align 8, !dbg !11197, !tbaa !2196
  %213 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !11198, !tbaa !1876
  call void %212(%struct._object* %213), !dbg !11199
  br label %if.end.275

if.end.275:                                       ; preds = %if.else.272, %if.then.271
  %214 = bitcast %struct._object** %_py_decref_tmp267 to i8*, !dbg !11200
  call void @llvm.lifetime.end(i64 8, i8* %214) #2, !dbg !11200
  br label %do.cond.276, !dbg !11202

do.cond.276:                                      ; preds = %if.end.275
  br label %do.end.277, !dbg !11203

do.end.277:                                       ; preds = %do.cond.276
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11205

if.end.278:                                       ; preds = %if.end.260
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11206
  %215 = load i32, i32* %dec_flags, align 4, !dbg !11206, !tbaa !11207
  %216 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11208, !tbaa !1876
  %call279 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i32 0, i32 0), i32 %215, %struct._object* %216), !dbg !11209
  %217 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11210, !tbaa !1876
  %snapshot280 = getelementptr inbounds %struct.textio, %struct.textio* %217, i32 0, i32 26, !dbg !11211
  store %struct._object* %call279, %struct._object** %snapshot280, align 8, !dbg !11212, !tbaa !4317
  %218 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11213, !tbaa !1876
  %snapshot281 = getelementptr inbounds %struct.textio, %struct.textio* %218, i32 0, i32 26, !dbg !11214
  %219 = load %struct._object*, %struct._object** %snapshot281, align 8, !dbg !11214, !tbaa !4317
  %cmp282 = icmp eq %struct._object* %219, null, !dbg !11215
  br i1 %cmp282, label %if.then.283, label %if.end.296, !dbg !11216

if.then.283:                                      ; preds = %if.end.278
  br label %do.body.284, !dbg !11217

do.body.284:                                      ; preds = %if.then.283
  %220 = bitcast %struct._object** %_py_decref_tmp285 to i8*, !dbg !11218
  call void @llvm.lifetime.start(i64 8, i8* %220) #2, !dbg !11218
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp285, metadata !1392, metadata !1880), !dbg !11220
  %221 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11221, !tbaa !1876
  store %struct._object* %221, %struct._object** %_py_decref_tmp285, align 8, !dbg !11220, !tbaa !1876
  %222 = load %struct._object*, %struct._object** %_py_decref_tmp285, align 8, !dbg !11222, !tbaa !1876
  %ob_refcnt286 = getelementptr inbounds %struct._object, %struct._object* %222, i32 0, i32 0, !dbg !11224
  %223 = load i64, i64* %ob_refcnt286, align 8, !dbg !11225, !tbaa !1927
  %dec287 = add i64 %223, -1, !dbg !11225
  store i64 %dec287, i64* %ob_refcnt286, align 8, !dbg !11225, !tbaa !1927
  %cmp288 = icmp ne i64 %dec287, 0, !dbg !11226
  br i1 %cmp288, label %if.then.289, label %if.else.290, !dbg !11227

if.then.289:                                      ; preds = %do.body.284
  br label %if.end.293, !dbg !11228

if.else.290:                                      ; preds = %do.body.284
  %224 = load %struct._object*, %struct._object** %_py_decref_tmp285, align 8, !dbg !11230, !tbaa !1876
  %ob_type291 = getelementptr inbounds %struct._object, %struct._object* %224, i32 0, i32 1, !dbg !11232
  %225 = load %struct._typeobject*, %struct._typeobject** %ob_type291, align 8, !dbg !11232, !tbaa !2194
  %tp_dealloc292 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %225, i32 0, i32 4, !dbg !11233
  %226 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc292, align 8, !dbg !11233, !tbaa !2196
  %227 = load %struct._object*, %struct._object** %_py_decref_tmp285, align 8, !dbg !11234, !tbaa !1876
  call void %226(%struct._object* %227), !dbg !11235
  br label %if.end.293

if.end.293:                                       ; preds = %if.else.290, %if.then.289
  %228 = bitcast %struct._object** %_py_decref_tmp285 to i8*, !dbg !11236
  call void @llvm.lifetime.end(i64 8, i8* %228) #2, !dbg !11236
  br label %do.cond.294, !dbg !11238

do.cond.294:                                      ; preds = %if.end.293
  br label %do.end.295, !dbg !11239

do.end.295:                                       ; preds = %do.cond.294
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11241

if.end.296:                                       ; preds = %if.end.278
  %229 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11242, !tbaa !1876
  %decoder297 = getelementptr inbounds %struct.textio, %struct.textio* %229, i32 0, i32 7, !dbg !11243
  %230 = load %struct._object*, %struct._object** %decoder297, align 8, !dbg !11243, !tbaa !4201
  %231 = load %struct._object*, %struct._object** %input_chunk, align 8, !dbg !11244, !tbaa !1876
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 4, !dbg !11245
  %232 = load i8, i8* %need_eof, align 1, !dbg !11245, !tbaa !11246
  %conv = sext i8 %232 to i32, !dbg !11247
  %call298 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %230, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), %struct._object* %231, i32 %conv), !dbg !11248
  store %struct._object* %call298, %struct._object** %decoded, align 8, !dbg !11249, !tbaa !1876
  %233 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !11250, !tbaa !1876
  %call299 = call i32 @check_decoded(%struct._object* %233), !dbg !11252
  %cmp300 = icmp slt i32 %call299, 0, !dbg !11253
  br i1 %cmp300, label %if.then.302, label %if.end.303, !dbg !11254

if.then.302:                                      ; preds = %if.end.296
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11255

if.end.303:                                       ; preds = %if.end.296
  %234 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11256, !tbaa !1876
  %235 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !11257, !tbaa !1876
  call void @textiowrapper_set_decoded_chars(%struct.textio* %234, %struct._object* %235), !dbg !11258
  %236 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11259, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %236, i32 0, i32 22, !dbg !11261
  %237 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !11261, !tbaa !4259
  %call304 = call i64 @PyUnicode_GetLength(%struct._object* %237), !dbg !11262
  %chars_to_skip305 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11263
  %238 = load i32, i32* %chars_to_skip305, align 4, !dbg !11263, !tbaa !11153
  %conv306 = sext i32 %238 to i64, !dbg !11264
  %cmp307 = icmp slt i64 %call304, %conv306, !dbg !11265
  br i1 %cmp307, label %if.then.309, label %if.end.310, !dbg !11266

if.then.309:                                      ; preds = %if.end.303
  %239 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !11267, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %239, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.78, i32 0, i32 0)), !dbg !11269
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.313, !dbg !11270

if.end.310:                                       ; preds = %if.end.303
  %chars_to_skip311 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11271
  %240 = load i32, i32* %chars_to_skip311, align 4, !dbg !11271, !tbaa !11153
  %conv312 = sext i32 %240 to i64, !dbg !11272
  %241 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11273, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %241, i32 0, i32 23, !dbg !11274
  store i64 %conv312, i64* %decoded_chars_used, align 8, !dbg !11275, !tbaa !5178
  store i32 0, i32* %cleanup.dest.slot, !dbg !11276
  br label %cleanup.313, !dbg !11276

cleanup.313:                                      ; preds = %if.end.310, %if.then.309, %if.then.302, %do.end.295, %do.end.277, %if.then.259
  %242 = bitcast %struct._object** %decoded to i8*, !dbg !11277
  call void @llvm.lifetime.end(i64 8, i8* %242) #2, !dbg !11277
  %243 = bitcast %struct._object** %input_chunk to i8*, !dbg !11277
  call void @llvm.lifetime.end(i64 8, i8* %243) #2, !dbg !11277
  %cleanup.dest.315 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.313
  %Pivot = icmp slt i32 %cleanup.dest.315, 6
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.315, 6
  br i1 %SwitchLeaf5, label %fail, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.315, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.316, label %NewDefault.1

cleanup.cont.316:                                 ; preds = %LeafBlock.2
  br label %if.end.326, !dbg !11279

if.else.317:                                      ; preds = %if.end.253
  %dec_flags318 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11280
  %244 = load i32, i32* %dec_flags318, align 4, !dbg !11280, !tbaa !11207
  %call319 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.79, i32 0, i32 0), i32 %244, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)), !dbg !11282
  %245 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11283, !tbaa !1876
  %snapshot320 = getelementptr inbounds %struct.textio, %struct.textio* %245, i32 0, i32 26, !dbg !11284
  store %struct._object* %call319, %struct._object** %snapshot320, align 8, !dbg !11285, !tbaa !4317
  %246 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11286, !tbaa !1876
  %snapshot321 = getelementptr inbounds %struct.textio, %struct.textio* %246, i32 0, i32 26, !dbg !11288
  %247 = load %struct._object*, %struct._object** %snapshot321, align 8, !dbg !11288, !tbaa !4317
  %cmp322 = icmp eq %struct._object* %247, null, !dbg !11289
  br i1 %cmp322, label %if.then.324, label %if.end.325, !dbg !11290

if.then.324:                                      ; preds = %if.else.317
  br label %fail, !dbg !11291

if.end.325:                                       ; preds = %if.else.317
  br label %if.end.326

if.end.326:                                       ; preds = %if.end.325, %cleanup.cont.316
  %248 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11292, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %248, i32 0, i32 6, !dbg !11294
  %249 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !11294, !tbaa !4172
  %tobool327 = icmp ne %struct._object* %249, null, !dbg !11292
  br i1 %tobool327, label %if.then.328, label %if.end.334, !dbg !11295

if.then.328:                                      ; preds = %if.end.326
  %250 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11296, !tbaa !1876
  %call329 = call i32 @_textiowrapper_encoder_setstate(%struct.textio* %250, %struct.cookie_type* %cookie), !dbg !11299
  %cmp330 = icmp slt i32 %call329, 0, !dbg !11300
  br i1 %cmp330, label %if.then.332, label %if.end.333, !dbg !11301

if.then.332:                                      ; preds = %if.then.328
  br label %fail, !dbg !11302

if.end.333:                                       ; preds = %if.then.328
  br label %if.end.334, !dbg !11303

if.end.334:                                       ; preds = %if.end.333, %if.end.326
  %251 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !11304, !tbaa !1876
  store %struct._object* %251, %struct._object** %retval, !dbg !11305
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !11305

fail:                                             ; preds = %LeafBlock.4, %if.then.332, %if.then.324, %if.then.251, %if.then.211, %if.then.194, %if.then.190, %if.then.174, %if.then.169, %if.then.166, %if.then.159, %if.then.123, %if.then.85, %if.then.80, %if.then.77, %if.then.70, %if.then.53, %if.then.50, %if.then.43
  br label %do.body.335, !dbg !11306

do.body.335:                                      ; preds = %fail
  %252 = bitcast %struct._object** %_py_xdecref_tmp336 to i8*, !dbg !11307
  call void @llvm.lifetime.start(i64 8, i8* %252) #2, !dbg !11307
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp336, metadata !1396, metadata !1880), !dbg !11309
  %253 = load %struct._object*, %struct._object** %cookieObj, align 8, !dbg !11310, !tbaa !1876
  store %struct._object* %253, %struct._object** %_py_xdecref_tmp336, align 8, !dbg !11309, !tbaa !1876
  %254 = load %struct._object*, %struct._object** %_py_xdecref_tmp336, align 8, !dbg !11311, !tbaa !1876
  %cmp337 = icmp ne %struct._object* %254, null, !dbg !11312
  br i1 %cmp337, label %if.then.339, label %if.end.353, !dbg !11313

if.then.339:                                      ; preds = %do.body.335
  br label %do.body.340, !dbg !11314

do.body.340:                                      ; preds = %if.then.339
  %255 = bitcast %struct._object** %_py_decref_tmp341 to i8*, !dbg !11316
  call void @llvm.lifetime.start(i64 8, i8* %255) #2, !dbg !11316
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp341, metadata !1398, metadata !1880), !dbg !11318
  %256 = load %struct._object*, %struct._object** %_py_xdecref_tmp336, align 8, !dbg !11319, !tbaa !1876
  store %struct._object* %256, %struct._object** %_py_decref_tmp341, align 8, !dbg !11318, !tbaa !1876
  %257 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8, !dbg !11320, !tbaa !1876
  %ob_refcnt342 = getelementptr inbounds %struct._object, %struct._object* %257, i32 0, i32 0, !dbg !11322
  %258 = load i64, i64* %ob_refcnt342, align 8, !dbg !11323, !tbaa !1927
  %dec343 = add i64 %258, -1, !dbg !11323
  store i64 %dec343, i64* %ob_refcnt342, align 8, !dbg !11323, !tbaa !1927
  %cmp344 = icmp ne i64 %dec343, 0, !dbg !11324
  br i1 %cmp344, label %if.then.346, label %if.else.347, !dbg !11325

if.then.346:                                      ; preds = %do.body.340
  br label %if.end.350, !dbg !11326

if.else.347:                                      ; preds = %do.body.340
  %259 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8, !dbg !11328, !tbaa !1876
  %ob_type348 = getelementptr inbounds %struct._object, %struct._object* %259, i32 0, i32 1, !dbg !11330
  %260 = load %struct._typeobject*, %struct._typeobject** %ob_type348, align 8, !dbg !11330, !tbaa !2194
  %tp_dealloc349 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %260, i32 0, i32 4, !dbg !11331
  %261 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc349, align 8, !dbg !11331, !tbaa !2196
  %262 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8, !dbg !11332, !tbaa !1876
  call void %261(%struct._object* %262), !dbg !11333
  br label %if.end.350

if.end.350:                                       ; preds = %if.else.347, %if.then.346
  %263 = bitcast %struct._object** %_py_decref_tmp341 to i8*, !dbg !11334
  call void @llvm.lifetime.end(i64 8, i8* %263) #2, !dbg !11334
  br label %do.cond.351, !dbg !11336

do.cond.351:                                      ; preds = %if.end.350
  br label %do.end.352, !dbg !11337

do.end.352:                                       ; preds = %do.cond.351
  br label %if.end.353, !dbg !11339

if.end.353:                                       ; preds = %do.end.352, %do.body.335
  %264 = bitcast %struct._object** %_py_xdecref_tmp336 to i8*, !dbg !11341
  call void @llvm.lifetime.end(i64 8, i8* %264) #2, !dbg !11341
  br label %do.cond.354, !dbg !11342

do.cond.354:                                      ; preds = %if.end.353
  br label %do.end.355, !dbg !11343

do.end.355:                                       ; preds = %do.cond.354
  store %struct._object* null, %struct._object** %retval, !dbg !11345
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.356, !dbg !11345

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.356

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.356

cleanup.356:                                      ; preds = %NewDefault.1, %NewDefault, %do.end.355, %if.end.334, %do.end.156, %if.then.5, %if.end
  %265 = bitcast i32* %cmp to i8*, !dbg !11346
  call void @llvm.lifetime.end(i64 4, i8* %265) #2, !dbg !11346
  %266 = bitcast %struct._object** %res to i8*, !dbg !11346
  call void @llvm.lifetime.end(i64 8, i8* %266) #2, !dbg !11346
  %267 = bitcast i32* %whence to i8*, !dbg !11346
  call void @llvm.lifetime.end(i64 4, i8* %267) #2, !dbg !11346
  %268 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !11346
  call void @llvm.lifetime.end(i64 24, i8* %268) #2, !dbg !11346
  %269 = bitcast %struct._object** %posobj to i8*, !dbg !11346
  call void @llvm.lifetime.end(i64 8, i8* %269) #2, !dbg !11346
  %270 = bitcast %struct._object** %cookieObj to i8*, !dbg !11346
  call void @llvm.lifetime.end(i64 8, i8* %270) #2, !dbg !11346
  %271 = load %struct._object*, %struct._object** %retval, !dbg !11346
  ret %struct._object* %271, !dbg !11346
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_tell(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %posobj = alloca %struct._object*, align 8
  %cookie = alloca %struct.cookie_type, align 8
  %next_input = alloca %struct._object*, align 8
  %chars_to_skip = alloca i64, align 8
  %chars_decoded = alloca i64, align 8
  %skip_bytes = alloca i64, align 8
  %skip_back = alloca i64, align 8
  %saved_state = alloca %struct._object*, align 8
  %input = alloca i8*, align 8
  %input_end = alloca i8*, align 8
  %dec_buffer = alloca i8*, align 8
  %dec_buffer_len = alloca i64, align 8
  %dec_flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %r = alloca i32, align 4
  %_res = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  %_decoded = alloca %struct._object*, align 8
  %_py_decref_tmp122 = alloca %struct._object*, align 8
  %_state = alloca %struct._object*, align 8
  %_py_decref_tmp153 = alloca %struct._object*, align 8
  %_py_decref_tmp167 = alloca %struct._object*, align 8
  %n = alloca i64, align 8
  %_decoded220 = alloca %struct._object*, align 8
  %_py_decref_tmp230 = alloca %struct._object*, align 8
  %_state250 = alloca %struct._object*, align 8
  %_py_decref_tmp261 = alloca %struct._object*, align 8
  %_py_decref_tmp275 = alloca %struct._object*, align 8
  %decoded = alloca %struct._object*, align 8
  %_py_decref_tmp326 = alloca %struct._object*, align 8
  %_py_decref_tmp349 = alloca %struct._object*, align 8
  %_py_decref_tmp366 = alloca %struct._object*, align 8
  %type = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %traceback = alloca %struct._object*, align 8
  %_py_decref_tmp386 = alloca %struct._object*, align 8
  %_py_decref_tmp403 = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1437, metadata !1880), !dbg !11347
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1438, metadata !1880), !dbg !11348
  %0 = bitcast %struct._object** %res to i8*, !dbg !11349
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11349
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1439, metadata !1880), !dbg !11350
  %1 = bitcast %struct._object** %posobj to i8*, !dbg !11351
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11351
  call void @llvm.dbg.declare(metadata %struct._object** %posobj, metadata !1440, metadata !1880), !dbg !11352
  store %struct._object* null, %struct._object** %posobj, align 8, !dbg !11352, !tbaa !1876
  %2 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !11353
  call void @llvm.lifetime.start(i64 24, i8* %2) #2, !dbg !11353
  call void @llvm.dbg.declare(metadata %struct.cookie_type* %cookie, metadata !1441, metadata !1880), !dbg !11354
  %3 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !11354
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 24, i32 8, i1 false), !dbg !11354
  %4 = bitcast %struct._object** %next_input to i8*, !dbg !11355
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11355
  call void @llvm.dbg.declare(metadata %struct._object** %next_input, metadata !1442, metadata !1880), !dbg !11356
  %5 = bitcast i64* %chars_to_skip to i8*, !dbg !11357
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !11357
  call void @llvm.dbg.declare(metadata i64* %chars_to_skip, metadata !1443, metadata !1880), !dbg !11358
  %6 = bitcast i64* %chars_decoded to i8*, !dbg !11357
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !11357
  call void @llvm.dbg.declare(metadata i64* %chars_decoded, metadata !1444, metadata !1880), !dbg !11359
  %7 = bitcast i64* %skip_bytes to i8*, !dbg !11360
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !11360
  call void @llvm.dbg.declare(metadata i64* %skip_bytes, metadata !1445, metadata !1880), !dbg !11361
  %8 = bitcast i64* %skip_back to i8*, !dbg !11360
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !11360
  call void @llvm.dbg.declare(metadata i64* %skip_back, metadata !1446, metadata !1880), !dbg !11362
  %9 = bitcast %struct._object** %saved_state to i8*, !dbg !11363
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !11363
  call void @llvm.dbg.declare(metadata %struct._object** %saved_state, metadata !1447, metadata !1880), !dbg !11364
  store %struct._object* null, %struct._object** %saved_state, align 8, !dbg !11364, !tbaa !1876
  %10 = bitcast i8** %input to i8*, !dbg !11365
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !11365
  call void @llvm.dbg.declare(metadata i8** %input, metadata !1448, metadata !1880), !dbg !11366
  %11 = bitcast i8** %input_end to i8*, !dbg !11365
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !11365
  call void @llvm.dbg.declare(metadata i8** %input_end, metadata !1449, metadata !1880), !dbg !11367
  %12 = bitcast i8** %dec_buffer to i8*, !dbg !11368
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !11368
  call void @llvm.dbg.declare(metadata i8** %dec_buffer, metadata !1450, metadata !1880), !dbg !11369
  %13 = bitcast i64* %dec_buffer_len to i8*, !dbg !11370
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !11370
  call void @llvm.dbg.declare(metadata i64* %dec_buffer_len, metadata !1451, metadata !1880), !dbg !11371
  %14 = bitcast i32* %dec_flags to i8*, !dbg !11372
  call void @llvm.lifetime.start(i64 4, i8* %14) #2, !dbg !11372
  call void @llvm.dbg.declare(metadata i32* %dec_flags, metadata !1452, metadata !1880), !dbg !11373
  %15 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11374, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %15, i32 0, i32 1, !dbg !11376
  %16 = load i32, i32* %ok, align 4, !dbg !11376, !tbaa !3895
  %cmp = icmp sle i32 %16, 0, !dbg !11377
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !11378

if.then:                                          ; preds = %entry
  %17 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11379, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %17, i32 0, i32 2, !dbg !11383
  %18 = load i32, i32* %detached, align 4, !dbg !11383, !tbaa !3903
  %tobool = icmp ne i32 %18, 0, !dbg !11384
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !11385

if.then.1:                                        ; preds = %if.then
  %19 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11386, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !11389
  br label %if.end, !dbg !11390

if.else:                                          ; preds = %if.then
  %20 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11391, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %20, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !11394
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !11395
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11397

if.end.2:                                         ; preds = %entry
  br label %do.body, !dbg !11398

do.body:                                          ; preds = %if.end.2
  %21 = bitcast i32* %r to i8*, !dbg !11399
  call void @llvm.lifetime.start(i64 4, i8* %21) #2, !dbg !11399
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1453, metadata !1880), !dbg !11401
  %22 = bitcast %struct._object** %_res to i8*, !dbg !11402
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !11402
  call void @llvm.dbg.declare(metadata %struct._object** %_res, metadata !1455, metadata !1880), !dbg !11403
  %23 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11404, !tbaa !1876
  %24 = bitcast %struct.textio* %23 to %struct._object*, !dbg !11405
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !11406
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11406, !tbaa !2194
  %cmp3 = icmp eq %struct._typeobject* %25, @PyTextIOWrapper_Type, !dbg !11407
  br i1 %cmp3, label %if.then.4, label %if.else.27, !dbg !11408

if.then.4:                                        ; preds = %do.body
  %26 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11409, !tbaa !1876
  %raw = getelementptr inbounds %struct.textio, %struct.textio* %26, i32 0, i32 28, !dbg !11411
  %27 = load %struct._object*, %struct._object** %raw, align 8, !dbg !11411, !tbaa !4375
  %cmp5 = icmp ne %struct._object* %27, null, !dbg !11412
  br i1 %cmp5, label %if.then.6, label %if.else.8, !dbg !11413

if.then.6:                                        ; preds = %if.then.4
  %28 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11414, !tbaa !1876
  %raw7 = getelementptr inbounds %struct.textio, %struct.textio* %28, i32 0, i32 28, !dbg !11416
  %29 = load %struct._object*, %struct._object** %raw7, align 8, !dbg !11416, !tbaa !4375
  %call = call i32 @_PyFileIO_closed(%struct._object* %29), !dbg !11417
  store i32 %call, i32* %r, align 4, !dbg !11418, !tbaa !1883
  br label %if.end.23, !dbg !11419

if.else.8:                                        ; preds = %if.then.4
  %30 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11420, !tbaa !1876
  %call9 = call %struct._object* @textiowrapper_closed_get(%struct.textio* %30, i8* null), !dbg !11422
  store %struct._object* %call9, %struct._object** %_res, align 8, !dbg !11423, !tbaa !1876
  %31 = load %struct._object*, %struct._object** %_res, align 8, !dbg !11424, !tbaa !1876
  %cmp10 = icmp eq %struct._object* %31, null, !dbg !11426
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !11427

if.then.11:                                       ; preds = %if.else.8
  store %struct._object* null, %struct._object** %retval, !dbg !11428
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11430

if.end.12:                                        ; preds = %if.else.8
  %32 = load %struct._object*, %struct._object** %_res, align 8, !dbg !11431, !tbaa !1876
  %call13 = call i32 @PyObject_IsTrue(%struct._object* %32), !dbg !11433
  store i32 %call13, i32* %r, align 4, !dbg !11434, !tbaa !1883
  br label %do.body.14, !dbg !11435

do.body.14:                                       ; preds = %if.end.12
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11436
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !11436
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1456, metadata !1880), !dbg !11438
  %34 = load %struct._object*, %struct._object** %_res, align 8, !dbg !11439, !tbaa !1876
  store %struct._object* %34, %struct._object** %_py_decref_tmp, align 8, !dbg !11438, !tbaa !1876
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11440, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !11442
  %36 = load i64, i64* %ob_refcnt, align 8, !dbg !11443, !tbaa !1927
  %dec = add i64 %36, -1, !dbg !11443
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11443, !tbaa !1927
  %cmp15 = icmp ne i64 %dec, 0, !dbg !11444
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !11445

if.then.16:                                       ; preds = %do.body.14
  br label %if.end.19, !dbg !11446

if.else.17:                                       ; preds = %do.body.14
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11448, !tbaa !1876
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !11450
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !11450, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 4, !dbg !11451
  %39 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11451, !tbaa !2196
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11452, !tbaa !1876
  call void %39(%struct._object* %40), !dbg !11453
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.17, %if.then.16
  %41 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11454
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !11454
  br label %do.cond, !dbg !11456

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !11457

do.end:                                           ; preds = %do.cond
  %42 = load i32, i32* %r, align 4, !dbg !11459, !tbaa !1883
  %cmp20 = icmp slt i32 %42, 0, !dbg !11462
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !11463

if.then.21:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !11464
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11466

if.end.22:                                        ; preds = %do.end
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.6
  %43 = load i32, i32* %r, align 4, !dbg !11467, !tbaa !1883
  %cmp24 = icmp sgt i32 %43, 0, !dbg !11470
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !11471

if.then.25:                                       ; preds = %if.end.23
  %44 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11472, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %44, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41, i32 0, i32 0)), !dbg !11475
  store %struct._object* null, %struct._object** %retval, !dbg !11476
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11476

if.end.26:                                        ; preds = %if.end.23
  br label %if.end.32, !dbg !11477

if.else.27:                                       ; preds = %do.body
  %45 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11479, !tbaa !1876
  %46 = bitcast %struct.textio* %45 to %struct._object*, !dbg !11482
  %call28 = call %struct._object* @_PyIOBase_check_closed(%struct._object* %46, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0)), !dbg !11483
  %cmp29 = icmp eq %struct._object* %call28, null, !dbg !11484
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !11485

if.then.30:                                       ; preds = %if.else.27
  store %struct._object* null, %struct._object** %retval, !dbg !11486
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11488

if.end.31:                                        ; preds = %if.else.27
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.26
  store i32 0, i32* %cleanup.dest.slot, !dbg !11489
  br label %cleanup, !dbg !11489

cleanup:                                          ; preds = %if.end.32, %if.then.30, %if.then.25, %if.then.21, %if.then.11
  %47 = bitcast %struct._object** %_res to i8*, !dbg !11491
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !11491
  %48 = bitcast i32* %r to i8*, !dbg !11491
  call void @llvm.lifetime.end(i64 4, i8* %48) #2, !dbg !11491
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %do.cond.34, !dbg !11497

do.cond.34:                                       ; preds = %cleanup.cont
  br label %do.end.35, !dbg !11498

do.end.35:                                        ; preds = %do.cond.34
  %49 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11500, !tbaa !1876
  %seekable = getelementptr inbounds %struct.textio, %struct.textio* %49, i32 0, i32 16, !dbg !11502
  %50 = load i8, i8* %seekable, align 1, !dbg !11502, !tbaa !4663
  %tobool36 = icmp ne i8 %50, 0, !dbg !11500
  br i1 %tobool36, label %if.end.39, label %if.then.37, !dbg !11503

if.then.37:                                       ; preds = %do.end.35
  %call38 = call %struct._object* @_unsupported(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i32 0, i32 0)), !dbg !11504
  br label %fail, !dbg !11506

if.end.39:                                        ; preds = %do.end.35
  %51 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11507, !tbaa !1876
  %telling = getelementptr inbounds %struct.textio, %struct.textio* %51, i32 0, i32 18, !dbg !11509
  %52 = load i8, i8* %telling, align 1, !dbg !11509, !tbaa !4512
  %tobool40 = icmp ne i8 %52, 0, !dbg !11507
  br i1 %tobool40, label %if.end.42, label %if.then.41, !dbg !11510

if.then.41:                                       ; preds = %if.end.39
  %53 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !11511, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %53, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.81, i32 0, i32 0)), !dbg !11513
  br label %fail, !dbg !11514

if.end.42:                                        ; preds = %if.end.39
  %54 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11515, !tbaa !1876
  %call43 = call i32 @_textiowrapper_writeflush(%struct.textio* %54), !dbg !11517
  %cmp44 = icmp slt i32 %call43, 0, !dbg !11518
  br i1 %cmp44, label %if.then.45, label %if.end.46, !dbg !11519

if.then.45:                                       ; preds = %if.end.42
  store %struct._object* null, %struct._object** %retval, !dbg !11520
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11520

if.end.46:                                        ; preds = %if.end.42
  %55 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11521, !tbaa !1876
  %56 = bitcast %struct.textio* %55 to %struct._object*, !dbg !11522
  %call47 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %56, %struct._Py_Identifier* @PyId_flush, i8* null), !dbg !11523
  store %struct._object* %call47, %struct._object** %res, align 8, !dbg !11524, !tbaa !1876
  %57 = load %struct._object*, %struct._object** %res, align 8, !dbg !11525, !tbaa !1876
  %cmp48 = icmp eq %struct._object* %57, null, !dbg !11527
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !11528

if.then.49:                                       ; preds = %if.end.46
  br label %fail, !dbg !11529

if.end.50:                                        ; preds = %if.end.46
  br label %do.body.51, !dbg !11530

do.body.51:                                       ; preds = %if.end.50
  %58 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !11531
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !11531
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !1462, metadata !1880), !dbg !11533
  %59 = load %struct._object*, %struct._object** %res, align 8, !dbg !11534, !tbaa !1876
  store %struct._object* %59, %struct._object** %_py_decref_tmp52, align 8, !dbg !11533, !tbaa !1876
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !11535, !tbaa !1876
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !11537
  %61 = load i64, i64* %ob_refcnt53, align 8, !dbg !11538, !tbaa !1927
  %dec54 = add i64 %61, -1, !dbg !11538
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !11538, !tbaa !1927
  %cmp55 = icmp ne i64 %dec54, 0, !dbg !11539
  br i1 %cmp55, label %if.then.56, label %if.else.57, !dbg !11540

if.then.56:                                       ; preds = %do.body.51
  br label %if.end.60, !dbg !11541

if.else.57:                                       ; preds = %do.body.51
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !11543, !tbaa !1876
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !11545
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !11545, !tbaa !2194
  %tp_dealloc59 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !11546
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc59, align 8, !dbg !11546, !tbaa !2196
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !11547, !tbaa !1876
  call void %64(%struct._object* %65), !dbg !11548
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57, %if.then.56
  %66 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !11549
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !11549
  br label %do.cond.61, !dbg !11551

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !11552

do.end.62:                                        ; preds = %do.cond.61
  %67 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11554, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %67, i32 0, i32 4, !dbg !11555
  %68 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !11555, !tbaa !4115
  %call63 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %68, %struct._Py_Identifier* @PyId_tell, i8* null), !dbg !11556
  store %struct._object* %call63, %struct._object** %posobj, align 8, !dbg !11557, !tbaa !1876
  %69 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11558, !tbaa !1876
  %cmp64 = icmp eq %struct._object* %69, null, !dbg !11560
  br i1 %cmp64, label %if.then.65, label %if.end.66, !dbg !11561

if.then.65:                                       ; preds = %do.end.62
  br label %fail, !dbg !11562

if.end.66:                                        ; preds = %do.end.62
  %70 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11563, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %70, i32 0, i32 7, !dbg !11565
  %71 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !11565, !tbaa !4201
  %cmp67 = icmp eq %struct._object* %71, null, !dbg !11566
  br i1 %cmp67, label %if.then.69, label %lor.lhs.false, !dbg !11567

lor.lhs.false:                                    ; preds = %if.end.66
  %72 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11568, !tbaa !1876
  %snapshot = getelementptr inbounds %struct.textio, %struct.textio* %72, i32 0, i32 26, !dbg !11570
  %73 = load %struct._object*, %struct._object** %snapshot, align 8, !dbg !11570, !tbaa !4317
  %cmp68 = icmp eq %struct._object* %73, null, !dbg !11571
  br i1 %cmp68, label %if.then.69, label %if.end.70, !dbg !11572

if.then.69:                                       ; preds = %lor.lhs.false, %if.end.66
  %74 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11573, !tbaa !1876
  store %struct._object* %74, %struct._object** %retval, !dbg !11575
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11575

if.end.70:                                        ; preds = %lor.lhs.false
  %75 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11576, !tbaa !1876
  %call71 = call i64 @PyLong_AsLong(%struct._object* %75), !dbg !11577
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11578
  store i64 %call71, i64* %start_pos, align 8, !dbg !11579, !tbaa !11027
  br label %do.body.72, !dbg !11580

do.body.72:                                       ; preds = %if.end.70
  %76 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !11581
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !11581
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp73, metadata !1464, metadata !1880), !dbg !11583
  %77 = load %struct._object*, %struct._object** %posobj, align 8, !dbg !11584, !tbaa !1876
  store %struct._object* %77, %struct._object** %_py_decref_tmp73, align 8, !dbg !11583, !tbaa !1876
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !11585, !tbaa !1876
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !11587
  %79 = load i64, i64* %ob_refcnt74, align 8, !dbg !11588, !tbaa !1927
  %dec75 = add i64 %79, -1, !dbg !11588
  store i64 %dec75, i64* %ob_refcnt74, align 8, !dbg !11588, !tbaa !1927
  %cmp76 = icmp ne i64 %dec75, 0, !dbg !11589
  br i1 %cmp76, label %if.then.77, label %if.else.78, !dbg !11590

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81, !dbg !11591

if.else.78:                                       ; preds = %do.body.72
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !11593, !tbaa !1876
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !11595
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8, !dbg !11595, !tbaa !2194
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !11596
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8, !dbg !11596, !tbaa !2196
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8, !dbg !11597, !tbaa !1876
  call void %82(%struct._object* %83), !dbg !11598
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  %84 = bitcast %struct._object** %_py_decref_tmp73 to i8*, !dbg !11599
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !11599
  br label %do.cond.82, !dbg !11600

do.cond.82:                                       ; preds = %if.end.81
  br label %do.end.83, !dbg !11601

do.end.83:                                        ; preds = %do.cond.82
  %call84 = call %struct._object* @PyErr_Occurred(), !dbg !11603
  %tobool85 = icmp ne %struct._object* %call84, null, !dbg !11603
  br i1 %tobool85, label %if.then.86, label %if.end.87, !dbg !11605

if.then.86:                                       ; preds = %do.end.83
  br label %fail, !dbg !11606

if.end.87:                                        ; preds = %do.end.83
  %85 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11607, !tbaa !1876
  %snapshot88 = getelementptr inbounds %struct.textio, %struct.textio* %85, i32 0, i32 26, !dbg !11609
  %86 = load %struct._object*, %struct._object** %snapshot88, align 8, !dbg !11609, !tbaa !4317
  %dec_flags89 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11610
  %call90 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i32 0, i32 0), i32* %dec_flags89, %struct._object** %next_input), !dbg !11611
  %tobool91 = icmp ne i32 %call90, 0, !dbg !11611
  br i1 %tobool91, label %if.end.93, label %if.then.92, !dbg !11612

if.then.92:                                       ; preds = %if.end.87
  br label %fail, !dbg !11613

if.end.93:                                        ; preds = %if.end.87
  %87 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11614, !tbaa !1876
  %88 = bitcast %struct._object* %87 to %struct.PyVarObject*, !dbg !11615
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %88, i32 0, i32 1, !dbg !11616
  %89 = load i64, i64* %ob_size, align 8, !dbg !11616, !tbaa !9161
  %start_pos94 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11617
  %90 = load i64, i64* %start_pos94, align 8, !dbg !11618, !tbaa !11027
  %sub = sub i64 %90, %89, !dbg !11618
  store i64 %sub, i64* %start_pos94, align 8, !dbg !11618, !tbaa !11027
  %91 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11619, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %91, i32 0, i32 23, !dbg !11621
  %92 = load i64, i64* %decoded_chars_used, align 8, !dbg !11621, !tbaa !5178
  %cmp95 = icmp eq i64 %92, 0, !dbg !11622
  br i1 %cmp95, label %if.then.96, label %if.end.98, !dbg !11623

if.then.96:                                       ; preds = %if.end.93
  %call97 = call %struct._object* @textiowrapper_build_cookie(%struct.cookie_type* %cookie), !dbg !11624
  store %struct._object* %call97, %struct._object** %retval, !dbg !11626
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !11626

if.end.98:                                        ; preds = %if.end.93
  %93 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11627, !tbaa !1876
  %decoded_chars_used99 = getelementptr inbounds %struct.textio, %struct.textio* %93, i32 0, i32 23, !dbg !11628
  %94 = load i64, i64* %decoded_chars_used99, align 8, !dbg !11628, !tbaa !5178
  store i64 %94, i64* %chars_to_skip, align 8, !dbg !11629, !tbaa !1941
  %95 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11630, !tbaa !1876
  %decoder100 = getelementptr inbounds %struct.textio, %struct.textio* %95, i32 0, i32 7, !dbg !11631
  %96 = load %struct._object*, %struct._object** %decoder100, align 8, !dbg !11631, !tbaa !4201
  %97 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !11632, !tbaa !1876
  %call101 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %96, %struct._object* %97, i8* null), !dbg !11633
  store %struct._object* %call101, %struct._object** %saved_state, align 8, !dbg !11634, !tbaa !1876
  %98 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !11635, !tbaa !1876
  %cmp102 = icmp eq %struct._object* %98, null, !dbg !11637
  br i1 %cmp102, label %if.then.103, label %if.end.104, !dbg !11638

if.then.103:                                      ; preds = %if.end.98
  br label %fail, !dbg !11639

if.end.104:                                       ; preds = %if.end.98
  %99 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11640, !tbaa !1876
  %b2cratio = getelementptr inbounds %struct.textio, %struct.textio* %99, i32 0, i32 27, !dbg !11641
  %100 = load double, double* %b2cratio, align 8, !dbg !11641, !tbaa !5190
  %101 = load i64, i64* %chars_to_skip, align 8, !dbg !11642, !tbaa !1941
  %conv = sitofp i64 %101 to double, !dbg !11642
  %mul = fmul double %100, %conv, !dbg !11643
  %conv105 = fptosi double %mul to i64, !dbg !11644
  store i64 %conv105, i64* %skip_bytes, align 8, !dbg !11645, !tbaa !1941
  store i64 1, i64* %skip_back, align 8, !dbg !11646, !tbaa !1941
  %102 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11647, !tbaa !1876
  %103 = bitcast %struct._object* %102 to %struct.PyBytesObject*, !dbg !11648
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %103, i32 0, i32 2, !dbg !11649
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !11650
  store i8* %arraydecay, i8** %input, align 8, !dbg !11651, !tbaa !1876
  br label %while.cond, !dbg !11652

while.cond:                                       ; preds = %if.end.194, %if.end.104
  %104 = load i64, i64* %skip_bytes, align 8, !dbg !11653, !tbaa !1941
  %cmp106 = icmp sgt i64 %104, 0, !dbg !11656
  br i1 %cmp106, label %while.body, label %while.end, !dbg !11652

while.body:                                       ; preds = %while.cond
  %105 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11657, !tbaa !1876
  %call108 = call i32 @_textiowrapper_decoder_setstate(%struct.textio* %105, %struct.cookie_type* %cookie), !dbg !11659
  %cmp109 = icmp slt i32 %call108, 0, !dbg !11660
  br i1 %cmp109, label %if.then.111, label %if.end.112, !dbg !11661

if.then.111:                                      ; preds = %while.body
  br label %fail, !dbg !11662

if.end.112:                                       ; preds = %while.body
  br label %do.body.113, !dbg !11663

do.body.113:                                      ; preds = %if.end.112
  %106 = bitcast %struct._object** %_decoded to i8*, !dbg !11664
  call void @llvm.lifetime.start(i64 8, i8* %106) #2, !dbg !11664
  call void @llvm.dbg.declare(metadata %struct._object** %_decoded, metadata !1466, metadata !1880), !dbg !11666
  %107 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11667, !tbaa !1876
  %decoder114 = getelementptr inbounds %struct.textio, %struct.textio* %107, i32 0, i32 7, !dbg !11668
  %108 = load %struct._object*, %struct._object** %decoder114, align 8, !dbg !11668, !tbaa !4201
  %109 = load i8*, i8** %input, align 8, !dbg !11669, !tbaa !1876
  %110 = load i64, i64* %skip_bytes, align 8, !dbg !11670, !tbaa !1941
  %call115 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %108, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i32 0, i32 0), i8* %109, i64 %110), !dbg !11671
  store %struct._object* %call115, %struct._object** %_decoded, align 8, !dbg !11666, !tbaa !1876
  %111 = load %struct._object*, %struct._object** %_decoded, align 8, !dbg !11672, !tbaa !1876
  %call116 = call i32 @check_decoded(%struct._object* %111), !dbg !11674
  %cmp117 = icmp slt i32 %call116, 0, !dbg !11675
  br i1 %cmp117, label %if.then.119, label %if.end.120, !dbg !11676

if.then.119:                                      ; preds = %do.body.113
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.134, !dbg !11677

if.end.120:                                       ; preds = %do.body.113
  %112 = load %struct._object*, %struct._object** %_decoded, align 8, !dbg !11678, !tbaa !1876
  %113 = bitcast %struct._object* %112 to %struct.PyASCIIObject*, !dbg !11680
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %113, i32 0, i32 1, !dbg !11681
  %114 = load i64, i64* %length, align 8, !dbg !11681, !tbaa !1937
  store i64 %114, i64* %chars_decoded, align 8, !dbg !11682, !tbaa !1941
  br label %do.body.121, !dbg !11683

do.body.121:                                      ; preds = %if.end.120
  %115 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !11684
  call void @llvm.lifetime.start(i64 8, i8* %115) #2, !dbg !11684
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp122, metadata !1469, metadata !1880), !dbg !11686
  %116 = load %struct._object*, %struct._object** %_decoded, align 8, !dbg !11687, !tbaa !1876
  store %struct._object* %116, %struct._object** %_py_decref_tmp122, align 8, !dbg !11686, !tbaa !1876
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !11688, !tbaa !1876
  %ob_refcnt123 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 0, !dbg !11690
  %118 = load i64, i64* %ob_refcnt123, align 8, !dbg !11691, !tbaa !1927
  %dec124 = add i64 %118, -1, !dbg !11691
  store i64 %dec124, i64* %ob_refcnt123, align 8, !dbg !11691, !tbaa !1927
  %cmp125 = icmp ne i64 %dec124, 0, !dbg !11692
  br i1 %cmp125, label %if.then.127, label %if.else.128, !dbg !11693

if.then.127:                                      ; preds = %do.body.121
  br label %if.end.131, !dbg !11694

if.else.128:                                      ; preds = %do.body.121
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !11696, !tbaa !1876
  %ob_type129 = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 1, !dbg !11698
  %120 = load %struct._typeobject*, %struct._typeobject** %ob_type129, align 8, !dbg !11698, !tbaa !2194
  %tp_dealloc130 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %120, i32 0, i32 4, !dbg !11699
  %121 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc130, align 8, !dbg !11699, !tbaa !2196
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !11700, !tbaa !1876
  call void %121(%struct._object* %122), !dbg !11701
  br label %if.end.131

if.end.131:                                       ; preds = %if.else.128, %if.then.127
  %123 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !11702
  call void @llvm.lifetime.end(i64 8, i8* %123) #2, !dbg !11702
  br label %do.cond.132, !dbg !11704

do.cond.132:                                      ; preds = %if.end.131
  br label %do.end.133, !dbg !11705

do.end.133:                                       ; preds = %do.cond.132
  store i32 0, i32* %cleanup.dest.slot, !dbg !11707
  br label %cleanup.134, !dbg !11707

cleanup.134:                                      ; preds = %do.end.133, %if.then.119
  %124 = bitcast %struct._object** %_decoded to i8*, !dbg !11709
  call void @llvm.lifetime.end(i64 8, i8* %124) #2, !dbg !11709
  %cleanup.dest.135 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.134
  %Pivot = icmp slt i32 %cleanup.dest.135, 6
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.135, 6
  br i1 %SwitchLeaf5, label %fail, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.135, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.136, label %NewDefault.1

cleanup.cont.136:                                 ; preds = %LeafBlock.2
  br label %do.cond.137, !dbg !11712

do.cond.137:                                      ; preds = %cleanup.cont.136
  br label %do.end.138, !dbg !11713

do.end.138:                                       ; preds = %do.cond.137
  %125 = load i64, i64* %chars_decoded, align 8, !dbg !11715, !tbaa !1941
  %126 = load i64, i64* %chars_to_skip, align 8, !dbg !11716, !tbaa !1941
  %cmp139 = icmp sle i64 %125, %126, !dbg !11717
  br i1 %cmp139, label %if.then.141, label %if.else.191, !dbg !11718

if.then.141:                                      ; preds = %do.end.138
  br label %do.body.142, !dbg !11719

do.body.142:                                      ; preds = %if.then.141
  %127 = bitcast %struct._object** %_state to i8*, !dbg !11720
  call void @llvm.lifetime.start(i64 8, i8* %127) #2, !dbg !11720
  call void @llvm.dbg.declare(metadata %struct._object** %_state, metadata !1471, metadata !1880), !dbg !11722
  %128 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11723, !tbaa !1876
  %decoder143 = getelementptr inbounds %struct.textio, %struct.textio* %128, i32 0, i32 7, !dbg !11724
  %129 = load %struct._object*, %struct._object** %decoder143, align 8, !dbg !11724, !tbaa !4201
  %130 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !11725, !tbaa !1876
  %call144 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %129, %struct._object* %130, i8* null), !dbg !11726
  store %struct._object* %call144, %struct._object** %_state, align 8, !dbg !11722, !tbaa !1876
  %131 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11727, !tbaa !1876
  %cmp145 = icmp eq %struct._object* %131, null, !dbg !11729
  br i1 %cmp145, label %if.then.147, label %if.end.148, !dbg !11730

if.then.147:                                      ; preds = %do.body.142
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.179, !dbg !11731

if.end.148:                                       ; preds = %do.body.142
  %132 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11732, !tbaa !1876
  %call149 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %132, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8** %dec_buffer, i64* %dec_buffer_len, i32* %dec_flags), !dbg !11734
  %tobool150 = icmp ne i32 %call149, 0, !dbg !11734
  br i1 %tobool150, label %if.end.165, label %if.then.151, !dbg !11735

if.then.151:                                      ; preds = %if.end.148
  br label %do.body.152, !dbg !11736

do.body.152:                                      ; preds = %if.then.151
  %133 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !11738
  call void @llvm.lifetime.start(i64 8, i8* %133) #2, !dbg !11738
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp153, metadata !1475, metadata !1880), !dbg !11740
  %134 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11741, !tbaa !1876
  store %struct._object* %134, %struct._object** %_py_decref_tmp153, align 8, !dbg !11740, !tbaa !1876
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11742, !tbaa !1876
  %ob_refcnt154 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 0, !dbg !11744
  %136 = load i64, i64* %ob_refcnt154, align 8, !dbg !11745, !tbaa !1927
  %dec155 = add i64 %136, -1, !dbg !11745
  store i64 %dec155, i64* %ob_refcnt154, align 8, !dbg !11745, !tbaa !1927
  %cmp156 = icmp ne i64 %dec155, 0, !dbg !11746
  br i1 %cmp156, label %if.then.158, label %if.else.159, !dbg !11747

if.then.158:                                      ; preds = %do.body.152
  br label %if.end.162, !dbg !11748

if.else.159:                                      ; preds = %do.body.152
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11750, !tbaa !1876
  %ob_type160 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 1, !dbg !11752
  %138 = load %struct._typeobject*, %struct._typeobject** %ob_type160, align 8, !dbg !11752, !tbaa !2194
  %tp_dealloc161 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %138, i32 0, i32 4, !dbg !11753
  %139 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc161, align 8, !dbg !11753, !tbaa !2196
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp153, align 8, !dbg !11754, !tbaa !1876
  call void %139(%struct._object* %140), !dbg !11755
  br label %if.end.162

if.end.162:                                       ; preds = %if.else.159, %if.then.158
  %141 = bitcast %struct._object** %_py_decref_tmp153 to i8*, !dbg !11756
  call void @llvm.lifetime.end(i64 8, i8* %141) #2, !dbg !11756
  br label %do.cond.163, !dbg !11758

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !11759

do.end.164:                                       ; preds = %do.cond.163
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.179, !dbg !11761

if.end.165:                                       ; preds = %if.end.148
  br label %do.body.166, !dbg !11762

do.body.166:                                      ; preds = %if.end.165
  %142 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !11764
  call void @llvm.lifetime.start(i64 8, i8* %142) #2, !dbg !11764
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp167, metadata !1479, metadata !1880), !dbg !11766
  %143 = load %struct._object*, %struct._object** %_state, align 8, !dbg !11767, !tbaa !1876
  store %struct._object* %143, %struct._object** %_py_decref_tmp167, align 8, !dbg !11766, !tbaa !1876
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11768, !tbaa !1876
  %ob_refcnt168 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0, !dbg !11770
  %145 = load i64, i64* %ob_refcnt168, align 8, !dbg !11771, !tbaa !1927
  %dec169 = add i64 %145, -1, !dbg !11771
  store i64 %dec169, i64* %ob_refcnt168, align 8, !dbg !11771, !tbaa !1927
  %cmp170 = icmp ne i64 %dec169, 0, !dbg !11772
  br i1 %cmp170, label %if.then.172, label %if.else.173, !dbg !11773

if.then.172:                                      ; preds = %do.body.166
  br label %if.end.176, !dbg !11774

if.else.173:                                      ; preds = %do.body.166
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11776, !tbaa !1876
  %ob_type174 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1, !dbg !11778
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type174, align 8, !dbg !11778, !tbaa !2194
  %tp_dealloc175 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4, !dbg !11779
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc175, align 8, !dbg !11779, !tbaa !2196
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp167, align 8, !dbg !11780, !tbaa !1876
  call void %148(%struct._object* %149), !dbg !11781
  br label %if.end.176

if.end.176:                                       ; preds = %if.else.173, %if.then.172
  %150 = bitcast %struct._object** %_py_decref_tmp167 to i8*, !dbg !11782
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !11782
  br label %do.cond.177, !dbg !11784

do.cond.177:                                      ; preds = %if.end.176
  br label %do.end.178, !dbg !11785

do.end.178:                                       ; preds = %do.cond.177
  store i32 0, i32* %cleanup.dest.slot, !dbg !11787
  br label %cleanup.179, !dbg !11787

cleanup.179:                                      ; preds = %do.end.178, %do.end.164, %if.then.147
  %151 = bitcast %struct._object** %_state to i8*, !dbg !11789
  call void @llvm.lifetime.end(i64 8, i8* %151) #2, !dbg !11789
  %cleanup.dest.180 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.11

NodeBlock.11:                                     ; preds = %cleanup.179
  %Pivot.12 = icmp slt i32 %cleanup.dest.180, 6
  br i1 %Pivot.12, label %LeafBlock.7, label %LeafBlock.9

LeafBlock.9:                                      ; preds = %NodeBlock.11
  %SwitchLeaf10 = icmp eq i32 %cleanup.dest.180, 6
  br i1 %SwitchLeaf10, label %fail, label %NewDefault.6

LeafBlock.7:                                      ; preds = %NodeBlock.11
  %SwitchLeaf8 = icmp eq i32 %cleanup.dest.180, 0
  br i1 %SwitchLeaf8, label %cleanup.cont.181, label %NewDefault.6

cleanup.cont.181:                                 ; preds = %LeafBlock.7
  br label %do.cond.182, !dbg !11793

do.cond.182:                                      ; preds = %cleanup.cont.181
  br label %do.end.183, !dbg !11794

do.end.183:                                       ; preds = %do.cond.182
  %152 = load i64, i64* %dec_buffer_len, align 8, !dbg !11796, !tbaa !1941
  %cmp184 = icmp eq i64 %152, 0, !dbg !11798
  br i1 %cmp184, label %if.then.186, label %if.end.189, !dbg !11799

if.then.186:                                      ; preds = %do.end.183
  %153 = load i32, i32* %dec_flags, align 4, !dbg !11800, !tbaa !1883
  %dec_flags187 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !11802
  store i32 %153, i32* %dec_flags187, align 4, !dbg !11803, !tbaa !11207
  %154 = load i64, i64* %chars_decoded, align 8, !dbg !11804, !tbaa !1941
  %155 = load i64, i64* %chars_to_skip, align 8, !dbg !11805, !tbaa !1941
  %sub188 = sub i64 %155, %154, !dbg !11805
  store i64 %sub188, i64* %chars_to_skip, align 8, !dbg !11805, !tbaa !1941
  br label %while.end, !dbg !11806

if.end.189:                                       ; preds = %do.end.183
  %156 = load i64, i64* %dec_buffer_len, align 8, !dbg !11807, !tbaa !1941
  %157 = load i64, i64* %skip_bytes, align 8, !dbg !11808, !tbaa !1941
  %sub190 = sub i64 %157, %156, !dbg !11808
  store i64 %sub190, i64* %skip_bytes, align 8, !dbg !11808, !tbaa !1941
  store i64 1, i64* %skip_back, align 8, !dbg !11809, !tbaa !1941
  br label %if.end.194, !dbg !11810

if.else.191:                                      ; preds = %do.end.138
  %158 = load i64, i64* %skip_back, align 8, !dbg !11811, !tbaa !1941
  %159 = load i64, i64* %skip_bytes, align 8, !dbg !11813, !tbaa !1941
  %sub192 = sub i64 %159, %158, !dbg !11813
  store i64 %sub192, i64* %skip_bytes, align 8, !dbg !11813, !tbaa !1941
  %160 = load i64, i64* %skip_back, align 8, !dbg !11814, !tbaa !1941
  %mul193 = mul i64 %160, 2, !dbg !11814
  store i64 %mul193, i64* %skip_back, align 8, !dbg !11814, !tbaa !1941
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.end.189
  br label %while.cond, !dbg !11652

while.end:                                        ; preds = %if.then.186, %while.cond
  %161 = load i64, i64* %skip_bytes, align 8, !dbg !11815, !tbaa !1941
  %cmp195 = icmp sle i64 %161, 0, !dbg !11817
  br i1 %cmp195, label %if.then.197, label %if.end.203, !dbg !11818

if.then.197:                                      ; preds = %while.end
  store i64 0, i64* %skip_bytes, align 8, !dbg !11819, !tbaa !1941
  %162 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11821, !tbaa !1876
  %call198 = call i32 @_textiowrapper_decoder_setstate(%struct.textio* %162, %struct.cookie_type* %cookie), !dbg !11823
  %cmp199 = icmp slt i32 %call198, 0, !dbg !11824
  br i1 %cmp199, label %if.then.201, label %if.end.202, !dbg !11825

if.then.201:                                      ; preds = %if.then.197
  br label %fail, !dbg !11826

if.end.202:                                       ; preds = %if.then.197
  br label %if.end.203, !dbg !11827

if.end.203:                                       ; preds = %if.end.202, %while.end
  %163 = load i64, i64* %skip_bytes, align 8, !dbg !11828, !tbaa !1941
  %start_pos204 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !11829
  %164 = load i64, i64* %start_pos204, align 8, !dbg !11830, !tbaa !11027
  %add = add i64 %164, %163, !dbg !11830
  store i64 %add, i64* %start_pos204, align 8, !dbg !11830, !tbaa !11027
  %165 = load i64, i64* %chars_to_skip, align 8, !dbg !11831, !tbaa !1941
  %conv205 = trunc i64 %165 to i32, !dbg !11832
  %chars_to_skip206 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !11833
  store i32 %conv205, i32* %chars_to_skip206, align 4, !dbg !11834, !tbaa !11153
  %166 = load i64, i64* %chars_to_skip, align 8, !dbg !11835, !tbaa !1941
  %cmp207 = icmp eq i64 %166, 0, !dbg !11837
  br i1 %cmp207, label %if.then.209, label %if.end.210, !dbg !11838

if.then.209:                                      ; preds = %if.end.203
  br label %finally, !dbg !11839

if.end.210:                                       ; preds = %if.end.203
  store i64 0, i64* %chars_decoded, align 8, !dbg !11840, !tbaa !1941
  %167 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11841, !tbaa !1876
  %168 = bitcast %struct._object* %167 to %struct.PyBytesObject*, !dbg !11842
  %ob_sval211 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %168, i32 0, i32 2, !dbg !11843
  %arraydecay212 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval211, i32 0, i32 0, !dbg !11844
  store i8* %arraydecay212, i8** %input, align 8, !dbg !11845, !tbaa !1876
  %169 = load i8*, i8** %input, align 8, !dbg !11846, !tbaa !1876
  %170 = load %struct._object*, %struct._object** %next_input, align 8, !dbg !11847, !tbaa !1876
  %171 = bitcast %struct._object* %170 to %struct.PyVarObject*, !dbg !11848
  %ob_size213 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %171, i32 0, i32 1, !dbg !11849
  %172 = load i64, i64* %ob_size213, align 8, !dbg !11849, !tbaa !9161
  %add.ptr = getelementptr i8, i8* %169, i64 %172, !dbg !11850
  store i8* %add.ptr, i8** %input_end, align 8, !dbg !11851, !tbaa !1876
  %173 = load i64, i64* %skip_bytes, align 8, !dbg !11852, !tbaa !1941
  %174 = load i8*, i8** %input, align 8, !dbg !11853, !tbaa !1876
  %add.ptr214 = getelementptr i8, i8* %174, i64 %173, !dbg !11853
  store i8* %add.ptr214, i8** %input, align 8, !dbg !11853, !tbaa !1876
  br label %while.cond.215, !dbg !11854

while.cond.215:                                   ; preds = %cleanup.cont.311, %if.end.210
  %175 = load i8*, i8** %input, align 8, !dbg !11855, !tbaa !1876
  %176 = load i8*, i8** %input_end, align 8, !dbg !11856, !tbaa !1876
  %cmp216 = icmp ult i8* %175, %176, !dbg !11857
  br i1 %cmp216, label %while.body.218, label %while.end.312, !dbg !11854

while.body.218:                                   ; preds = %while.cond.215
  %177 = bitcast i64* %n to i8*, !dbg !11858
  call void @llvm.lifetime.start(i64 8, i8* %177) #2, !dbg !11858
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1481, metadata !1880), !dbg !11859
  br label %do.body.219, !dbg !11860

do.body.219:                                      ; preds = %while.body.218
  %178 = bitcast %struct._object** %_decoded220 to i8*, !dbg !11861
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !11861
  call void @llvm.dbg.declare(metadata %struct._object** %_decoded220, metadata !1483, metadata !1880), !dbg !11863
  %179 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11864, !tbaa !1876
  %decoder221 = getelementptr inbounds %struct.textio, %struct.textio* %179, i32 0, i32 7, !dbg !11865
  %180 = load %struct._object*, %struct._object** %decoder221, align 8, !dbg !11865, !tbaa !4201
  %181 = load i8*, i8** %input, align 8, !dbg !11866, !tbaa !1876
  %call222 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %180, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i32 0, i32 0), i8* %181, i64 1), !dbg !11867
  store %struct._object* %call222, %struct._object** %_decoded220, align 8, !dbg !11863, !tbaa !1876
  %182 = load %struct._object*, %struct._object** %_decoded220, align 8, !dbg !11868, !tbaa !1876
  %call223 = call i32 @check_decoded(%struct._object* %182), !dbg !11870
  %cmp224 = icmp slt i32 %call223, 0, !dbg !11871
  br i1 %cmp224, label %if.then.226, label %if.end.227, !dbg !11872

if.then.226:                                      ; preds = %do.body.219
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.242, !dbg !11873

if.end.227:                                       ; preds = %do.body.219
  %183 = load %struct._object*, %struct._object** %_decoded220, align 8, !dbg !11874, !tbaa !1876
  %184 = bitcast %struct._object* %183 to %struct.PyASCIIObject*, !dbg !11876
  %length228 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %184, i32 0, i32 1, !dbg !11877
  %185 = load i64, i64* %length228, align 8, !dbg !11877, !tbaa !1937
  store i64 %185, i64* %n, align 8, !dbg !11878, !tbaa !1941
  br label %do.body.229, !dbg !11879

do.body.229:                                      ; preds = %if.end.227
  %186 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !11880
  call void @llvm.lifetime.start(i64 8, i8* %186) #2, !dbg !11880
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp230, metadata !1485, metadata !1880), !dbg !11882
  %187 = load %struct._object*, %struct._object** %_decoded220, align 8, !dbg !11883, !tbaa !1876
  store %struct._object* %187, %struct._object** %_py_decref_tmp230, align 8, !dbg !11882, !tbaa !1876
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !11884, !tbaa !1876
  %ob_refcnt231 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 0, !dbg !11886
  %189 = load i64, i64* %ob_refcnt231, align 8, !dbg !11887, !tbaa !1927
  %dec232 = add i64 %189, -1, !dbg !11887
  store i64 %dec232, i64* %ob_refcnt231, align 8, !dbg !11887, !tbaa !1927
  %cmp233 = icmp ne i64 %dec232, 0, !dbg !11888
  br i1 %cmp233, label %if.then.235, label %if.else.236, !dbg !11889

if.then.235:                                      ; preds = %do.body.229
  br label %if.end.239, !dbg !11890

if.else.236:                                      ; preds = %do.body.229
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !11892, !tbaa !1876
  %ob_type237 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 1, !dbg !11894
  %191 = load %struct._typeobject*, %struct._typeobject** %ob_type237, align 8, !dbg !11894, !tbaa !2194
  %tp_dealloc238 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %191, i32 0, i32 4, !dbg !11895
  %192 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc238, align 8, !dbg !11895, !tbaa !2196
  %193 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8, !dbg !11896, !tbaa !1876
  call void %192(%struct._object* %193), !dbg !11897
  br label %if.end.239

if.end.239:                                       ; preds = %if.else.236, %if.then.235
  %194 = bitcast %struct._object** %_py_decref_tmp230 to i8*, !dbg !11898
  call void @llvm.lifetime.end(i64 8, i8* %194) #2, !dbg !11898
  br label %do.cond.240, !dbg !11900

do.cond.240:                                      ; preds = %if.end.239
  br label %do.end.241, !dbg !11901

do.end.241:                                       ; preds = %do.cond.240
  store i32 0, i32* %cleanup.dest.slot, !dbg !11903
  br label %cleanup.242, !dbg !11903

cleanup.242:                                      ; preds = %do.end.241, %if.then.226
  %195 = bitcast %struct._object** %_decoded220 to i8*, !dbg !11905
  call void @llvm.lifetime.end(i64 8, i8* %195) #2, !dbg !11905
  %cleanup.dest.243 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.14

LeafBlock.14:                                     ; preds = %cleanup.242
  %SwitchLeaf15 = icmp eq i32 %cleanup.dest.243, 0
  br i1 %SwitchLeaf15, label %cleanup.cont.244, label %NewDefault.13

cleanup.cont.244:                                 ; preds = %LeafBlock.14
  br label %do.cond.245, !dbg !11908

do.cond.245:                                      ; preds = %cleanup.cont.244
  br label %do.end.246, !dbg !11909

do.end.246:                                       ; preds = %do.cond.245
  %196 = load i64, i64* %n, align 8, !dbg !11911, !tbaa !1941
  %197 = load i64, i64* %chars_decoded, align 8, !dbg !11912, !tbaa !1941
  %add247 = add i64 %197, %196, !dbg !11912
  store i64 %add247, i64* %chars_decoded, align 8, !dbg !11912, !tbaa !1941
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !11913
  %198 = load i32, i32* %bytes_to_feed, align 4, !dbg !11914, !tbaa !11161
  %add248 = add i32 %198, 1, !dbg !11914
  store i32 %add248, i32* %bytes_to_feed, align 4, !dbg !11914, !tbaa !11161
  br label %do.body.249, !dbg !11915

do.body.249:                                      ; preds = %do.end.246
  %199 = bitcast %struct._object** %_state250 to i8*, !dbg !11916
  call void @llvm.lifetime.start(i64 8, i8* %199) #2, !dbg !11916
  call void @llvm.dbg.declare(metadata %struct._object** %_state250, metadata !1487, metadata !1880), !dbg !11918
  %200 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !11919, !tbaa !1876
  %decoder251 = getelementptr inbounds %struct.textio, %struct.textio* %200, i32 0, i32 7, !dbg !11920
  %201 = load %struct._object*, %struct._object** %decoder251, align 8, !dbg !11920, !tbaa !4201
  %202 = load %struct._object*, %struct._object** @_PyIO_str_getstate, align 8, !dbg !11921, !tbaa !1876
  %call252 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %201, %struct._object* %202, i8* null), !dbg !11922
  store %struct._object* %call252, %struct._object** %_state250, align 8, !dbg !11918, !tbaa !1876
  %203 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11923, !tbaa !1876
  %cmp253 = icmp eq %struct._object* %203, null, !dbg !11925
  br i1 %cmp253, label %if.then.255, label %if.end.256, !dbg !11926

if.then.255:                                      ; preds = %do.body.249
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.287, !dbg !11927

if.end.256:                                       ; preds = %do.body.249
  %204 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11928, !tbaa !1876
  %call257 = call i32 (%struct._object*, i8*, ...) @_PyArg_Parse_SizeT(%struct._object* %204, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8** %dec_buffer, i64* %dec_buffer_len, i32* %dec_flags), !dbg !11930
  %tobool258 = icmp ne i32 %call257, 0, !dbg !11930
  br i1 %tobool258, label %if.end.273, label %if.then.259, !dbg !11931

if.then.259:                                      ; preds = %if.end.256
  br label %do.body.260, !dbg !11932

do.body.260:                                      ; preds = %if.then.259
  %205 = bitcast %struct._object** %_py_decref_tmp261 to i8*, !dbg !11934
  call void @llvm.lifetime.start(i64 8, i8* %205) #2, !dbg !11934
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp261, metadata !1489, metadata !1880), !dbg !11936
  %206 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11937, !tbaa !1876
  store %struct._object* %206, %struct._object** %_py_decref_tmp261, align 8, !dbg !11936, !tbaa !1876
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !11938, !tbaa !1876
  %ob_refcnt262 = getelementptr inbounds %struct._object, %struct._object* %207, i32 0, i32 0, !dbg !11940
  %208 = load i64, i64* %ob_refcnt262, align 8, !dbg !11941, !tbaa !1927
  %dec263 = add i64 %208, -1, !dbg !11941
  store i64 %dec263, i64* %ob_refcnt262, align 8, !dbg !11941, !tbaa !1927
  %cmp264 = icmp ne i64 %dec263, 0, !dbg !11942
  br i1 %cmp264, label %if.then.266, label %if.else.267, !dbg !11943

if.then.266:                                      ; preds = %do.body.260
  br label %if.end.270, !dbg !11944

if.else.267:                                      ; preds = %do.body.260
  %209 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !11946, !tbaa !1876
  %ob_type268 = getelementptr inbounds %struct._object, %struct._object* %209, i32 0, i32 1, !dbg !11948
  %210 = load %struct._typeobject*, %struct._typeobject** %ob_type268, align 8, !dbg !11948, !tbaa !2194
  %tp_dealloc269 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %210, i32 0, i32 4, !dbg !11949
  %211 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc269, align 8, !dbg !11949, !tbaa !2196
  %212 = load %struct._object*, %struct._object** %_py_decref_tmp261, align 8, !dbg !11950, !tbaa !1876
  call void %211(%struct._object* %212), !dbg !11951
  br label %if.end.270

if.end.270:                                       ; preds = %if.else.267, %if.then.266
  %213 = bitcast %struct._object** %_py_decref_tmp261 to i8*, !dbg !11952
  call void @llvm.lifetime.end(i64 8, i8* %213) #2, !dbg !11952
  br label %do.cond.271, !dbg !11954

do.cond.271:                                      ; preds = %if.end.270
  br label %do.end.272, !dbg !11955

do.end.272:                                       ; preds = %do.cond.271
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.287, !dbg !11957

if.end.273:                                       ; preds = %if.end.256
  br label %do.body.274, !dbg !11958

do.body.274:                                      ; preds = %if.end.273
  %214 = bitcast %struct._object** %_py_decref_tmp275 to i8*, !dbg !11960
  call void @llvm.lifetime.start(i64 8, i8* %214) #2, !dbg !11960
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp275, metadata !1493, metadata !1880), !dbg !11962
  %215 = load %struct._object*, %struct._object** %_state250, align 8, !dbg !11963, !tbaa !1876
  store %struct._object* %215, %struct._object** %_py_decref_tmp275, align 8, !dbg !11962, !tbaa !1876
  %216 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !11964, !tbaa !1876
  %ob_refcnt276 = getelementptr inbounds %struct._object, %struct._object* %216, i32 0, i32 0, !dbg !11966
  %217 = load i64, i64* %ob_refcnt276, align 8, !dbg !11967, !tbaa !1927
  %dec277 = add i64 %217, -1, !dbg !11967
  store i64 %dec277, i64* %ob_refcnt276, align 8, !dbg !11967, !tbaa !1927
  %cmp278 = icmp ne i64 %dec277, 0, !dbg !11968
  br i1 %cmp278, label %if.then.280, label %if.else.281, !dbg !11969

if.then.280:                                      ; preds = %do.body.274
  br label %if.end.284, !dbg !11970

if.else.281:                                      ; preds = %do.body.274
  %218 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !11972, !tbaa !1876
  %ob_type282 = getelementptr inbounds %struct._object, %struct._object* %218, i32 0, i32 1, !dbg !11974
  %219 = load %struct._typeobject*, %struct._typeobject** %ob_type282, align 8, !dbg !11974, !tbaa !2194
  %tp_dealloc283 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %219, i32 0, i32 4, !dbg !11975
  %220 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc283, align 8, !dbg !11975, !tbaa !2196
  %221 = load %struct._object*, %struct._object** %_py_decref_tmp275, align 8, !dbg !11976, !tbaa !1876
  call void %220(%struct._object* %221), !dbg !11977
  br label %if.end.284

if.end.284:                                       ; preds = %if.else.281, %if.then.280
  %222 = bitcast %struct._object** %_py_decref_tmp275 to i8*, !dbg !11978
  call void @llvm.lifetime.end(i64 8, i8* %222) #2, !dbg !11978
  br label %do.cond.285, !dbg !11980

do.cond.285:                                      ; preds = %if.end.284
  br label %do.end.286, !dbg !11981

do.end.286:                                       ; preds = %do.cond.285
  store i32 0, i32* %cleanup.dest.slot, !dbg !11983
  br label %cleanup.287, !dbg !11983

cleanup.287:                                      ; preds = %do.end.286, %do.end.272, %if.then.255
  %223 = bitcast %struct._object** %_state250 to i8*, !dbg !11985
  call void @llvm.lifetime.end(i64 8, i8* %223) #2, !dbg !11985
  %cleanup.dest.288 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.17

LeafBlock.17:                                     ; preds = %cleanup.287
  %SwitchLeaf18 = icmp eq i32 %cleanup.dest.288, 0
  br i1 %SwitchLeaf18, label %cleanup.cont.289, label %NewDefault.16

cleanup.cont.289:                                 ; preds = %LeafBlock.17
  br label %do.cond.290, !dbg !11988

do.cond.290:                                      ; preds = %cleanup.cont.289
  br label %do.end.291, !dbg !11989

do.end.291:                                       ; preds = %do.cond.290
  %224 = load i64, i64* %dec_buffer_len, align 8, !dbg !11991, !tbaa !1941
  %cmp292 = icmp eq i64 %224, 0, !dbg !11993
  br i1 %cmp292, label %land.lhs.true, label %if.end.304, !dbg !11994

land.lhs.true:                                    ; preds = %do.end.291
  %225 = load i64, i64* %chars_decoded, align 8, !dbg !11995, !tbaa !1941
  %226 = load i64, i64* %chars_to_skip, align 8, !dbg !11997, !tbaa !1941
  %cmp294 = icmp sle i64 %225, %226, !dbg !11998
  br i1 %cmp294, label %if.then.296, label %if.end.304, !dbg !11999

if.then.296:                                      ; preds = %land.lhs.true
  %bytes_to_feed297 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !12000
  %227 = load i32, i32* %bytes_to_feed297, align 4, !dbg !12000, !tbaa !11161
  %conv298 = sext i32 %227 to i64, !dbg !12002
  %start_pos299 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 0, !dbg !12003
  %228 = load i64, i64* %start_pos299, align 8, !dbg !12004, !tbaa !11027
  %add300 = add i64 %228, %conv298, !dbg !12004
  store i64 %add300, i64* %start_pos299, align 8, !dbg !12004, !tbaa !11027
  %229 = load i64, i64* %chars_decoded, align 8, !dbg !12005, !tbaa !1941
  %230 = load i64, i64* %chars_to_skip, align 8, !dbg !12006, !tbaa !1941
  %sub301 = sub i64 %230, %229, !dbg !12006
  store i64 %sub301, i64* %chars_to_skip, align 8, !dbg !12006, !tbaa !1941
  %231 = load i32, i32* %dec_flags, align 4, !dbg !12007, !tbaa !1883
  %dec_flags302 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 1, !dbg !12008
  store i32 %231, i32* %dec_flags302, align 4, !dbg !12009, !tbaa !11207
  %bytes_to_feed303 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 2, !dbg !12010
  store i32 0, i32* %bytes_to_feed303, align 4, !dbg !12011, !tbaa !11161
  store i64 0, i64* %chars_decoded, align 8, !dbg !12012, !tbaa !1941
  br label %if.end.304, !dbg !12013

if.end.304:                                       ; preds = %if.then.296, %land.lhs.true, %do.end.291
  %232 = load i64, i64* %chars_decoded, align 8, !dbg !12014, !tbaa !1941
  %233 = load i64, i64* %chars_to_skip, align 8, !dbg !12016, !tbaa !1941
  %cmp305 = icmp sge i64 %232, %233, !dbg !12017
  br i1 %cmp305, label %if.then.307, label %if.end.308, !dbg !12018

if.then.307:                                      ; preds = %if.end.304
  store i32 25, i32* %cleanup.dest.slot
  br label %cleanup.309, !dbg !12019

if.end.308:                                       ; preds = %if.end.304
  %234 = load i8*, i8** %input, align 8, !dbg !12020, !tbaa !1876
  %incdec.ptr = getelementptr i8, i8* %234, i32 1, !dbg !12020
  store i8* %incdec.ptr, i8** %input, align 8, !dbg !12020, !tbaa !1876
  store i32 0, i32* %cleanup.dest.slot, !dbg !12021
  br label %cleanup.309, !dbg !12021

NewDefault.13:                                    ; preds = %LeafBlock.14
  br label %cleanup.309

NewDefault.16:                                    ; preds = %LeafBlock.17
  br label %cleanup.309

cleanup.309:                                      ; preds = %NewDefault.16, %NewDefault.13, %if.end.308, %if.then.307
  %235 = bitcast i64* %n to i8*, !dbg !12022
  call void @llvm.lifetime.end(i64 8, i8* %235) #2, !dbg !12022
  %cleanup.dest.310 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.28

NodeBlock.28:                                     ; preds = %cleanup.309
  %Pivot.29 = icmp slt i32 %cleanup.dest.310, 6
  br i1 %Pivot.29, label %LeafBlock.20, label %NodeBlock.26

NodeBlock.26:                                     ; preds = %NodeBlock.28
  %Pivot.27 = icmp slt i32 %cleanup.dest.310, 25
  br i1 %Pivot.27, label %LeafBlock.22, label %LeafBlock.24

LeafBlock.24:                                     ; preds = %NodeBlock.26
  %SwitchLeaf25 = icmp eq i32 %cleanup.dest.310, 25
  br i1 %SwitchLeaf25, label %while.end.312, label %NewDefault.19

LeafBlock.22:                                     ; preds = %NodeBlock.26
  %SwitchLeaf23 = icmp eq i32 %cleanup.dest.310, 6
  br i1 %SwitchLeaf23, label %fail, label %NewDefault.19

LeafBlock.20:                                     ; preds = %NodeBlock.28
  %SwitchLeaf21 = icmp eq i32 %cleanup.dest.310, 0
  br i1 %SwitchLeaf21, label %cleanup.cont.311, label %NewDefault.19

cleanup.cont.311:                                 ; preds = %LeafBlock.20
  br label %while.cond.215, !dbg !11854

while.end.312:                                    ; preds = %LeafBlock.24, %while.cond.215
  %236 = load i8*, i8** %input, align 8, !dbg !12023, !tbaa !1876
  %237 = load i8*, i8** %input_end, align 8, !dbg !12024, !tbaa !1876
  %cmp313 = icmp eq i8* %236, %237, !dbg !12025
  br i1 %cmp313, label %if.then.315, label %if.end.345, !dbg !12026

if.then.315:                                      ; preds = %while.end.312
  %238 = bitcast %struct._object** %decoded to i8*, !dbg !12027
  call void @llvm.lifetime.start(i64 8, i8* %238) #2, !dbg !12027
  call void @llvm.dbg.declare(metadata %struct._object** %decoded, metadata !1495, metadata !1880), !dbg !12028
  %239 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12029, !tbaa !1876
  %decoder316 = getelementptr inbounds %struct.textio, %struct.textio* %239, i32 0, i32 7, !dbg !12030
  %240 = load %struct._object*, %struct._object** %decoder316, align 8, !dbg !12030, !tbaa !4201
  %call317 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %240, %struct._Py_Identifier* @PyId_decode, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), i32 1), !dbg !12031
  store %struct._object* %call317, %struct._object** %decoded, align 8, !dbg !12028, !tbaa !1876
  %241 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !12032, !tbaa !1876
  %call318 = call i32 @check_decoded(%struct._object* %241), !dbg !12034
  %cmp319 = icmp slt i32 %call318, 0, !dbg !12035
  br i1 %cmp319, label %if.then.321, label %if.end.322, !dbg !12036

if.then.321:                                      ; preds = %if.then.315
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.342, !dbg !12037

if.end.322:                                       ; preds = %if.then.315
  %242 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !12038, !tbaa !1876
  %243 = bitcast %struct._object* %242 to %struct.PyASCIIObject*, !dbg !12039
  %length323 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %243, i32 0, i32 1, !dbg !12040
  %244 = load i64, i64* %length323, align 8, !dbg !12040, !tbaa !1937
  %245 = load i64, i64* %chars_decoded, align 8, !dbg !12041, !tbaa !1941
  %add324 = add i64 %245, %244, !dbg !12041
  store i64 %add324, i64* %chars_decoded, align 8, !dbg !12041, !tbaa !1941
  br label %do.body.325, !dbg !12042

do.body.325:                                      ; preds = %if.end.322
  %246 = bitcast %struct._object** %_py_decref_tmp326 to i8*, !dbg !12043
  call void @llvm.lifetime.start(i64 8, i8* %246) #2, !dbg !12043
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp326, metadata !1498, metadata !1880), !dbg !12045
  %247 = load %struct._object*, %struct._object** %decoded, align 8, !dbg !12046, !tbaa !1876
  store %struct._object* %247, %struct._object** %_py_decref_tmp326, align 8, !dbg !12045, !tbaa !1876
  %248 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8, !dbg !12047, !tbaa !1876
  %ob_refcnt327 = getelementptr inbounds %struct._object, %struct._object* %248, i32 0, i32 0, !dbg !12049
  %249 = load i64, i64* %ob_refcnt327, align 8, !dbg !12050, !tbaa !1927
  %dec328 = add i64 %249, -1, !dbg !12050
  store i64 %dec328, i64* %ob_refcnt327, align 8, !dbg !12050, !tbaa !1927
  %cmp329 = icmp ne i64 %dec328, 0, !dbg !12051
  br i1 %cmp329, label %if.then.331, label %if.else.332, !dbg !12052

if.then.331:                                      ; preds = %do.body.325
  br label %if.end.335, !dbg !12053

if.else.332:                                      ; preds = %do.body.325
  %250 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8, !dbg !12055, !tbaa !1876
  %ob_type333 = getelementptr inbounds %struct._object, %struct._object* %250, i32 0, i32 1, !dbg !12057
  %251 = load %struct._typeobject*, %struct._typeobject** %ob_type333, align 8, !dbg !12057, !tbaa !2194
  %tp_dealloc334 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %251, i32 0, i32 4, !dbg !12058
  %252 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc334, align 8, !dbg !12058, !tbaa !2196
  %253 = load %struct._object*, %struct._object** %_py_decref_tmp326, align 8, !dbg !12059, !tbaa !1876
  call void %252(%struct._object* %253), !dbg !12060
  br label %if.end.335

if.end.335:                                       ; preds = %if.else.332, %if.then.331
  %254 = bitcast %struct._object** %_py_decref_tmp326 to i8*, !dbg !12061
  call void @llvm.lifetime.end(i64 8, i8* %254) #2, !dbg !12061
  br label %do.cond.336, !dbg !12063

do.cond.336:                                      ; preds = %if.end.335
  br label %do.end.337, !dbg !12064

do.end.337:                                       ; preds = %do.cond.336
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 4, !dbg !12066
  store i8 1, i8* %need_eof, align 1, !dbg !12067, !tbaa !11246
  %255 = load i64, i64* %chars_decoded, align 8, !dbg !12068, !tbaa !1941
  %256 = load i64, i64* %chars_to_skip, align 8, !dbg !12070, !tbaa !1941
  %cmp338 = icmp slt i64 %255, %256, !dbg !12071
  br i1 %cmp338, label %if.then.340, label %if.end.341, !dbg !12072

if.then.340:                                      ; preds = %do.end.337
  %257 = load %struct._object*, %struct._object** @PyExc_IOError, align 8, !dbg !12073, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %257, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.86, i32 0, i32 0)), !dbg !12075
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.342, !dbg !12076

if.end.341:                                       ; preds = %do.end.337
  store i32 0, i32* %cleanup.dest.slot, !dbg !12077
  br label %cleanup.342, !dbg !12077

cleanup.342:                                      ; preds = %if.end.341, %if.then.340, %if.then.321
  %258 = bitcast %struct._object** %decoded to i8*, !dbg !12078
  call void @llvm.lifetime.end(i64 8, i8* %258) #2, !dbg !12078
  %cleanup.dest.343 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.35

NodeBlock.35:                                     ; preds = %cleanup.342
  %Pivot.36 = icmp slt i32 %cleanup.dest.343, 6
  br i1 %Pivot.36, label %LeafBlock.31, label %LeafBlock.33

LeafBlock.33:                                     ; preds = %NodeBlock.35
  %SwitchLeaf34 = icmp eq i32 %cleanup.dest.343, 6
  br i1 %SwitchLeaf34, label %fail, label %NewDefault.30

LeafBlock.31:                                     ; preds = %NodeBlock.35
  %SwitchLeaf32 = icmp eq i32 %cleanup.dest.343, 0
  br i1 %SwitchLeaf32, label %cleanup.cont.344, label %NewDefault.30

cleanup.cont.344:                                 ; preds = %LeafBlock.31
  br label %if.end.345, !dbg !12080

if.end.345:                                       ; preds = %cleanup.cont.344, %while.end.312
  br label %finally, !dbg !12081

finally:                                          ; preds = %if.end.345, %if.then.209
  %259 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12082, !tbaa !1876
  %decoder346 = getelementptr inbounds %struct.textio, %struct.textio* %259, i32 0, i32 7, !dbg !12083
  %260 = load %struct._object*, %struct._object** %decoder346, align 8, !dbg !12083, !tbaa !4201
  %261 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12084, !tbaa !1876
  %call347 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %260, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), %struct._object* %261), !dbg !12085
  store %struct._object* %call347, %struct._object** %res, align 8, !dbg !12086, !tbaa !1876
  br label %do.body.348, !dbg !12087

do.body.348:                                      ; preds = %finally
  %262 = bitcast %struct._object** %_py_decref_tmp349 to i8*, !dbg !12088
  call void @llvm.lifetime.start(i64 8, i8* %262) #2, !dbg !12088
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp349, metadata !1500, metadata !1880), !dbg !12090
  %263 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12091, !tbaa !1876
  store %struct._object* %263, %struct._object** %_py_decref_tmp349, align 8, !dbg !12090, !tbaa !1876
  %264 = load %struct._object*, %struct._object** %_py_decref_tmp349, align 8, !dbg !12092, !tbaa !1876
  %ob_refcnt350 = getelementptr inbounds %struct._object, %struct._object* %264, i32 0, i32 0, !dbg !12094
  %265 = load i64, i64* %ob_refcnt350, align 8, !dbg !12095, !tbaa !1927
  %dec351 = add i64 %265, -1, !dbg !12095
  store i64 %dec351, i64* %ob_refcnt350, align 8, !dbg !12095, !tbaa !1927
  %cmp352 = icmp ne i64 %dec351, 0, !dbg !12096
  br i1 %cmp352, label %if.then.354, label %if.else.355, !dbg !12097

if.then.354:                                      ; preds = %do.body.348
  br label %if.end.358, !dbg !12098

if.else.355:                                      ; preds = %do.body.348
  %266 = load %struct._object*, %struct._object** %_py_decref_tmp349, align 8, !dbg !12100, !tbaa !1876
  %ob_type356 = getelementptr inbounds %struct._object, %struct._object* %266, i32 0, i32 1, !dbg !12102
  %267 = load %struct._typeobject*, %struct._typeobject** %ob_type356, align 8, !dbg !12102, !tbaa !2194
  %tp_dealloc357 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %267, i32 0, i32 4, !dbg !12103
  %268 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc357, align 8, !dbg !12103, !tbaa !2196
  %269 = load %struct._object*, %struct._object** %_py_decref_tmp349, align 8, !dbg !12104, !tbaa !1876
  call void %268(%struct._object* %269), !dbg !12105
  br label %if.end.358

if.end.358:                                       ; preds = %if.else.355, %if.then.354
  %270 = bitcast %struct._object** %_py_decref_tmp349 to i8*, !dbg !12106
  call void @llvm.lifetime.end(i64 8, i8* %270) #2, !dbg !12106
  br label %do.cond.359, !dbg !12107

do.cond.359:                                      ; preds = %if.end.358
  br label %do.end.360, !dbg !12108

do.end.360:                                       ; preds = %do.cond.359
  %271 = load %struct._object*, %struct._object** %res, align 8, !dbg !12110, !tbaa !1876
  %cmp361 = icmp eq %struct._object* %271, null, !dbg !12112
  br i1 %cmp361, label %if.then.363, label %if.end.364, !dbg !12113

if.then.363:                                      ; preds = %do.end.360
  store %struct._object* null, %struct._object** %retval, !dbg !12114
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !12114

if.end.364:                                       ; preds = %do.end.360
  br label %do.body.365, !dbg !12115

do.body.365:                                      ; preds = %if.end.364
  %272 = bitcast %struct._object** %_py_decref_tmp366 to i8*, !dbg !12116
  call void @llvm.lifetime.start(i64 8, i8* %272) #2, !dbg !12116
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp366, metadata !1502, metadata !1880), !dbg !12118
  %273 = load %struct._object*, %struct._object** %res, align 8, !dbg !12119, !tbaa !1876
  store %struct._object* %273, %struct._object** %_py_decref_tmp366, align 8, !dbg !12118, !tbaa !1876
  %274 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8, !dbg !12120, !tbaa !1876
  %ob_refcnt367 = getelementptr inbounds %struct._object, %struct._object* %274, i32 0, i32 0, !dbg !12122
  %275 = load i64, i64* %ob_refcnt367, align 8, !dbg !12123, !tbaa !1927
  %dec368 = add i64 %275, -1, !dbg !12123
  store i64 %dec368, i64* %ob_refcnt367, align 8, !dbg !12123, !tbaa !1927
  %cmp369 = icmp ne i64 %dec368, 0, !dbg !12124
  br i1 %cmp369, label %if.then.371, label %if.else.372, !dbg !12125

if.then.371:                                      ; preds = %do.body.365
  br label %if.end.375, !dbg !12126

if.else.372:                                      ; preds = %do.body.365
  %276 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8, !dbg !12128, !tbaa !1876
  %ob_type373 = getelementptr inbounds %struct._object, %struct._object* %276, i32 0, i32 1, !dbg !12130
  %277 = load %struct._typeobject*, %struct._typeobject** %ob_type373, align 8, !dbg !12130, !tbaa !2194
  %tp_dealloc374 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %277, i32 0, i32 4, !dbg !12131
  %278 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc374, align 8, !dbg !12131, !tbaa !2196
  %279 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8, !dbg !12132, !tbaa !1876
  call void %278(%struct._object* %279), !dbg !12133
  br label %if.end.375

if.end.375:                                       ; preds = %if.else.372, %if.then.371
  %280 = bitcast %struct._object** %_py_decref_tmp366 to i8*, !dbg !12134
  call void @llvm.lifetime.end(i64 8, i8* %280) #2, !dbg !12134
  br label %do.cond.376, !dbg !12135

do.cond.376:                                      ; preds = %if.end.375
  br label %do.end.377, !dbg !12136

do.end.377:                                       ; preds = %do.cond.376
  %281 = load i64, i64* %chars_to_skip, align 8, !dbg !12138, !tbaa !1941
  %conv378 = trunc i64 %281 to i32, !dbg !12139
  %chars_to_skip379 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %cookie, i32 0, i32 3, !dbg !12140
  store i32 %conv378, i32* %chars_to_skip379, align 4, !dbg !12141, !tbaa !11153
  %call380 = call %struct._object* @textiowrapper_build_cookie(%struct.cookie_type* %cookie), !dbg !12142
  store %struct._object* %call380, %struct._object** %retval, !dbg !12143
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !12143

fail:                                             ; preds = %LeafBlock.33, %LeafBlock.22, %LeafBlock.9, %LeafBlock.4, %if.then.201, %if.then.111, %if.then.103, %if.then.92, %if.then.86, %if.then.65, %if.then.49, %if.then.41, %if.then.37
  %282 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12144, !tbaa !1876
  %tobool381 = icmp ne %struct._object* %282, null, !dbg !12144
  br i1 %tobool381, label %if.then.382, label %if.end.420, !dbg !12145

if.then.382:                                      ; preds = %fail
  %283 = bitcast %struct._object** %type to i8*, !dbg !12146
  call void @llvm.lifetime.start(i64 8, i8* %283) #2, !dbg !12146
  call void @llvm.dbg.declare(metadata %struct._object** %type, metadata !1504, metadata !1880), !dbg !12147
  %284 = bitcast %struct._object** %value to i8*, !dbg !12146
  call void @llvm.lifetime.start(i64 8, i8* %284) #2, !dbg !12146
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !1507, metadata !1880), !dbg !12148
  %285 = bitcast %struct._object** %traceback to i8*, !dbg !12146
  call void @llvm.lifetime.start(i64 8, i8* %285) #2, !dbg !12146
  call void @llvm.dbg.declare(metadata %struct._object** %traceback, metadata !1508, metadata !1880), !dbg !12149
  call void @PyErr_Fetch(%struct._object** %type, %struct._object** %value, %struct._object** %traceback), !dbg !12150
  %286 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12151, !tbaa !1876
  %decoder383 = getelementptr inbounds %struct.textio, %struct.textio* %286, i32 0, i32 7, !dbg !12152
  %287 = load %struct._object*, %struct._object** %decoder383, align 8, !dbg !12152, !tbaa !4201
  %288 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12153, !tbaa !1876
  %call384 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %287, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), %struct._object* %288), !dbg !12154
  store %struct._object* %call384, %struct._object** %res, align 8, !dbg !12155, !tbaa !1876
  br label %do.body.385, !dbg !12156

do.body.385:                                      ; preds = %if.then.382
  %289 = bitcast %struct._object** %_py_decref_tmp386 to i8*, !dbg !12157
  call void @llvm.lifetime.start(i64 8, i8* %289) #2, !dbg !12157
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp386, metadata !1509, metadata !1880), !dbg !12159
  %290 = load %struct._object*, %struct._object** %saved_state, align 8, !dbg !12160, !tbaa !1876
  store %struct._object* %290, %struct._object** %_py_decref_tmp386, align 8, !dbg !12159, !tbaa !1876
  %291 = load %struct._object*, %struct._object** %_py_decref_tmp386, align 8, !dbg !12161, !tbaa !1876
  %ob_refcnt387 = getelementptr inbounds %struct._object, %struct._object* %291, i32 0, i32 0, !dbg !12163
  %292 = load i64, i64* %ob_refcnt387, align 8, !dbg !12164, !tbaa !1927
  %dec388 = add i64 %292, -1, !dbg !12164
  store i64 %dec388, i64* %ob_refcnt387, align 8, !dbg !12164, !tbaa !1927
  %cmp389 = icmp ne i64 %dec388, 0, !dbg !12165
  br i1 %cmp389, label %if.then.391, label %if.else.392, !dbg !12166

if.then.391:                                      ; preds = %do.body.385
  br label %if.end.395, !dbg !12167

if.else.392:                                      ; preds = %do.body.385
  %293 = load %struct._object*, %struct._object** %_py_decref_tmp386, align 8, !dbg !12169, !tbaa !1876
  %ob_type393 = getelementptr inbounds %struct._object, %struct._object* %293, i32 0, i32 1, !dbg !12171
  %294 = load %struct._typeobject*, %struct._typeobject** %ob_type393, align 8, !dbg !12171, !tbaa !2194
  %tp_dealloc394 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %294, i32 0, i32 4, !dbg !12172
  %295 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc394, align 8, !dbg !12172, !tbaa !2196
  %296 = load %struct._object*, %struct._object** %_py_decref_tmp386, align 8, !dbg !12173, !tbaa !1876
  call void %295(%struct._object* %296), !dbg !12174
  br label %if.end.395

if.end.395:                                       ; preds = %if.else.392, %if.then.391
  %297 = bitcast %struct._object** %_py_decref_tmp386 to i8*, !dbg !12175
  call void @llvm.lifetime.end(i64 8, i8* %297) #2, !dbg !12175
  br label %do.cond.396, !dbg !12177

do.cond.396:                                      ; preds = %if.end.395
  br label %do.end.397, !dbg !12178

do.end.397:                                       ; preds = %do.cond.396
  %298 = load %struct._object*, %struct._object** %res, align 8, !dbg !12180, !tbaa !1876
  %cmp398 = icmp eq %struct._object* %298, null, !dbg !12182
  br i1 %cmp398, label %if.then.400, label %if.end.401, !dbg !12183

if.then.400:                                      ; preds = %do.end.397
  store %struct._object* null, %struct._object** %retval, !dbg !12184
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.415, !dbg !12184

if.end.401:                                       ; preds = %do.end.397
  br label %do.body.402, !dbg !12185

do.body.402:                                      ; preds = %if.end.401
  %299 = bitcast %struct._object** %_py_decref_tmp403 to i8*, !dbg !12186
  call void @llvm.lifetime.start(i64 8, i8* %299) #2, !dbg !12186
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp403, metadata !1511, metadata !1880), !dbg !12188
  %300 = load %struct._object*, %struct._object** %res, align 8, !dbg !12189, !tbaa !1876
  store %struct._object* %300, %struct._object** %_py_decref_tmp403, align 8, !dbg !12188, !tbaa !1876
  %301 = load %struct._object*, %struct._object** %_py_decref_tmp403, align 8, !dbg !12190, !tbaa !1876
  %ob_refcnt404 = getelementptr inbounds %struct._object, %struct._object* %301, i32 0, i32 0, !dbg !12192
  %302 = load i64, i64* %ob_refcnt404, align 8, !dbg !12193, !tbaa !1927
  %dec405 = add i64 %302, -1, !dbg !12193
  store i64 %dec405, i64* %ob_refcnt404, align 8, !dbg !12193, !tbaa !1927
  %cmp406 = icmp ne i64 %dec405, 0, !dbg !12194
  br i1 %cmp406, label %if.then.408, label %if.else.409, !dbg !12195

if.then.408:                                      ; preds = %do.body.402
  br label %if.end.412, !dbg !12196

if.else.409:                                      ; preds = %do.body.402
  %303 = load %struct._object*, %struct._object** %_py_decref_tmp403, align 8, !dbg !12198, !tbaa !1876
  %ob_type410 = getelementptr inbounds %struct._object, %struct._object* %303, i32 0, i32 1, !dbg !12200
  %304 = load %struct._typeobject*, %struct._typeobject** %ob_type410, align 8, !dbg !12200, !tbaa !2194
  %tp_dealloc411 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %304, i32 0, i32 4, !dbg !12201
  %305 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc411, align 8, !dbg !12201, !tbaa !2196
  %306 = load %struct._object*, %struct._object** %_py_decref_tmp403, align 8, !dbg !12202, !tbaa !1876
  call void %305(%struct._object* %306), !dbg !12203
  br label %if.end.412

if.end.412:                                       ; preds = %if.else.409, %if.then.408
  %307 = bitcast %struct._object** %_py_decref_tmp403 to i8*, !dbg !12204
  call void @llvm.lifetime.end(i64 8, i8* %307) #2, !dbg !12204
  br label %do.cond.413, !dbg !12205

do.cond.413:                                      ; preds = %if.end.412
  br label %do.end.414, !dbg !12206

do.end.414:                                       ; preds = %do.cond.413
  %308 = load %struct._object*, %struct._object** %type, align 8, !dbg !12208, !tbaa !1876
  %309 = load %struct._object*, %struct._object** %value, align 8, !dbg !12209, !tbaa !1876
  %310 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !12210, !tbaa !1876
  call void @PyErr_Restore(%struct._object* %308, %struct._object* %309, %struct._object* %310), !dbg !12211
  store i32 0, i32* %cleanup.dest.slot, !dbg !12212
  br label %cleanup.415, !dbg !12212

cleanup.415:                                      ; preds = %do.end.414, %if.then.400
  %311 = bitcast %struct._object** %traceback to i8*, !dbg !12213
  call void @llvm.lifetime.end(i64 8, i8* %311) #2, !dbg !12213
  %312 = bitcast %struct._object** %value to i8*, !dbg !12213
  call void @llvm.lifetime.end(i64 8, i8* %312) #2, !dbg !12213
  %313 = bitcast %struct._object** %type to i8*, !dbg !12213
  call void @llvm.lifetime.end(i64 8, i8* %313) #2, !dbg !12213
  %cleanup.dest.418 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.38

LeafBlock.38:                                     ; preds = %cleanup.415
  %SwitchLeaf39 = icmp eq i32 %cleanup.dest.418, 0
  br i1 %SwitchLeaf39, label %cleanup.cont.419, label %NewDefault.37

cleanup.cont.419:                                 ; preds = %LeafBlock.38
  br label %if.end.420, !dbg !12215

if.end.420:                                       ; preds = %cleanup.cont.419, %fail
  store %struct._object* null, %struct._object** %retval, !dbg !12216
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.421, !dbg !12216

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.421

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.421

NewDefault.6:                                     ; preds = %LeafBlock.9, %LeafBlock.7
  br label %cleanup.421

NewDefault.19:                                    ; preds = %LeafBlock.24, %LeafBlock.22, %LeafBlock.20
  br label %cleanup.421

NewDefault.30:                                    ; preds = %LeafBlock.33, %LeafBlock.31
  br label %cleanup.421

NewDefault.37:                                    ; preds = %LeafBlock.38
  br label %cleanup.421

cleanup.421:                                      ; preds = %NewDefault.37, %NewDefault.30, %NewDefault.19, %NewDefault.6, %NewDefault.1, %NewDefault, %if.end.420, %do.end.377, %if.then.363, %if.then.96, %if.then.69, %if.then.45, %if.end
  %314 = bitcast i32* %dec_flags to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 4, i8* %314) #2, !dbg !12217
  %315 = bitcast i64* %dec_buffer_len to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %315) #2, !dbg !12217
  %316 = bitcast i8** %dec_buffer to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %316) #2, !dbg !12217
  %317 = bitcast i8** %input_end to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %317) #2, !dbg !12217
  %318 = bitcast i8** %input to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %318) #2, !dbg !12217
  %319 = bitcast %struct._object** %saved_state to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %319) #2, !dbg !12217
  %320 = bitcast i64* %skip_back to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %320) #2, !dbg !12217
  %321 = bitcast i64* %skip_bytes to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %321) #2, !dbg !12217
  %322 = bitcast i64* %chars_decoded to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %322) #2, !dbg !12217
  %323 = bitcast i64* %chars_to_skip to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %323) #2, !dbg !12217
  %324 = bitcast %struct._object** %next_input to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %324) #2, !dbg !12217
  %325 = bitcast %struct.cookie_type* %cookie to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 24, i8* %325) #2, !dbg !12217
  %326 = bitcast %struct._object** %posobj to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %326) #2, !dbg !12217
  %327 = bitcast %struct._object** %res to i8*, !dbg !12217
  call void @llvm.lifetime.end(i64 8, i8* %327) #2, !dbg !12217
  %328 = load %struct._object*, %struct._object** %retval, !dbg !12217
  ret %struct._object* %328, !dbg !12217
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_truncate(%struct.textio* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %args.addr = alloca %struct._object*, align 8
  %pos = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1521, metadata !1880), !dbg !12218
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1522, metadata !1880), !dbg !12219
  %0 = bitcast %struct._object** %pos to i8*, !dbg !12220
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12220
  call void @llvm.dbg.declare(metadata %struct._object** %pos, metadata !1523, metadata !1880), !dbg !12221
  store %struct._object* @_Py_NoneStruct, %struct._object** %pos, align 8, !dbg !12221, !tbaa !1876
  %1 = bitcast %struct._object** %res to i8*, !dbg !12222
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12222
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1524, metadata !1880), !dbg !12223
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12224, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 1, !dbg !12226
  %3 = load i32, i32* %ok, align 4, !dbg !12226, !tbaa !3895
  %cmp = icmp sle i32 %3, 0, !dbg !12227
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12228

if.then:                                          ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12229, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 2, !dbg !12233
  %5 = load i32, i32* %detached, align 4, !dbg !12233, !tbaa !3903
  %tobool = icmp ne i32 %5, 0, !dbg !12234
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12235

if.then.1:                                        ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12236, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12239
  br label %if.end, !dbg !12240

if.else:                                          ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12241, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12244
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12245
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12247

if.end.2:                                         ; preds = %entry
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12248, !tbaa !1876
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i32 0, i32 0), %struct._object** %pos), !dbg !12250
  %tobool3 = icmp ne i32 %call, 0, !dbg !12250
  br i1 %tobool3, label %if.end.5, label %if.then.4, !dbg !12251

if.then.4:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !12252
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12252

if.end.5:                                         ; preds = %if.end.2
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12254, !tbaa !1876
  %10 = bitcast %struct.textio* %9 to %struct._object*, !dbg !12255
  %11 = load %struct._object*, %struct._object** @_PyIO_str_flush, align 8, !dbg !12256, !tbaa !1876
  %call6 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %10, %struct._object* %11, i8* null), !dbg !12257
  store %struct._object* %call6, %struct._object** %res, align 8, !dbg !12258, !tbaa !1876
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !12259, !tbaa !1876
  %cmp7 = icmp eq %struct._object* %12, null, !dbg !12261
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !12262

if.then.8:                                        ; preds = %if.end.5
  store %struct._object* null, %struct._object** %retval, !dbg !12263
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12263

if.end.9:                                         ; preds = %if.end.5
  br label %do.body, !dbg !12264

do.body:                                          ; preds = %if.end.9
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12265
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !12265
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1525, metadata !1880), !dbg !12267
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !12268, !tbaa !1876
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !12267, !tbaa !1876
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12269, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !12271
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !12272, !tbaa !1927
  %dec = add i64 %16, -1, !dbg !12272
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12272, !tbaa !1927
  %cmp10 = icmp ne i64 %dec, 0, !dbg !12273
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !12274

if.then.11:                                       ; preds = %do.body
  br label %if.end.13, !dbg !12275

if.else.12:                                       ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12277, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !12279
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12279, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !12280
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12280, !tbaa !2196
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12281, !tbaa !1876
  call void %19(%struct._object* %20), !dbg !12282
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.12, %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12283
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !12283
  br label %do.cond, !dbg !12285

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !12286

do.end:                                           ; preds = %do.cond
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12288, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %22, i32 0, i32 4, !dbg !12289
  %23 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12289, !tbaa !4115
  %24 = load %struct._object*, %struct._object** @_PyIO_str_truncate, align 8, !dbg !12290, !tbaa !1876
  %25 = load %struct._object*, %struct._object** %pos, align 8, !dbg !12291, !tbaa !1876
  %call14 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %23, %struct._object* %24, %struct._object* %25, i8* null), !dbg !12292
  store %struct._object* %call14, %struct._object** %retval, !dbg !12293
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12293

cleanup:                                          ; preds = %do.end, %if.then.8, %if.then.4, %if.end
  %26 = bitcast %struct._object** %res to i8*, !dbg !12294
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !12294
  %27 = bitcast %struct._object** %pos to i8*, !dbg !12294
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !12294
  %28 = load %struct._object*, %struct._object** %retval, !dbg !12294
  ret %struct._object* %28, !dbg !12294
}

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

declare i64 @PyUnicode_FindChar(%struct._object*, i32, i64, i64, i32) #3

declare i32 @_PyIO_ConvertSsize_t(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_get_decoded_chars(%struct.textio* %self, i64 %n) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %n.addr = alloca i64, align 8
  %chars = alloca %struct._object*, align 8
  %avail = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1234, metadata !1880), !dbg !12295
  store i64 %n, i64* %n.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !1235, metadata !1880), !dbg !12296
  %0 = bitcast %struct._object** %chars to i8*, !dbg !12297
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12297
  call void @llvm.dbg.declare(metadata %struct._object** %chars, metadata !1236, metadata !1880), !dbg !12298
  %1 = bitcast i64* %avail to i8*, !dbg !12299
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12299
  call void @llvm.dbg.declare(metadata i64* %avail, metadata !1237, metadata !1880), !dbg !12300
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12301, !tbaa !1876
  %decoded_chars = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 22, !dbg !12303
  %3 = load %struct._object*, %struct._object** %decoded_chars, align 8, !dbg !12303, !tbaa !4259
  %cmp = icmp eq %struct._object* %3, null, !dbg !12304
  br i1 %cmp, label %if.then, label %if.end, !dbg !12305

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyUnicode_FromStringAndSize(i8* null, i64 0), !dbg !12306
  store %struct._object* %call, %struct._object** %retval, !dbg !12307
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12307

if.end:                                           ; preds = %entry
  %4 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12308, !tbaa !1876
  %decoded_chars1 = getelementptr inbounds %struct.textio, %struct.textio* %4, i32 0, i32 22, !dbg !12309
  %5 = load %struct._object*, %struct._object** %decoded_chars1, align 8, !dbg !12309, !tbaa !4259
  %6 = bitcast %struct._object* %5 to %struct.PyASCIIObject*, !dbg !12310
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %6, i32 0, i32 1, !dbg !12311
  %7 = load i64, i64* %length, align 8, !dbg !12311, !tbaa !1937
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12312, !tbaa !1876
  %decoded_chars_used = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 23, !dbg !12313
  %9 = load i64, i64* %decoded_chars_used, align 8, !dbg !12313, !tbaa !5178
  %sub = sub i64 %7, %9, !dbg !12314
  store i64 %sub, i64* %avail, align 8, !dbg !12315, !tbaa !1941
  %10 = load i64, i64* %n.addr, align 8, !dbg !12316, !tbaa !1941
  %cmp2 = icmp slt i64 %10, 0, !dbg !12318
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false, !dbg !12319

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i64, i64* %n.addr, align 8, !dbg !12320, !tbaa !1941
  %12 = load i64, i64* %avail, align 8, !dbg !12322, !tbaa !1941
  %cmp3 = icmp sgt i64 %11, %12, !dbg !12323
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !12324

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %13 = load i64, i64* %avail, align 8, !dbg !12325, !tbaa !1941
  store i64 %13, i64* %n.addr, align 8, !dbg !12326, !tbaa !1941
  br label %if.end.5, !dbg !12327

if.end.5:                                         ; preds = %if.then.4, %lor.lhs.false
  %14 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12328, !tbaa !1876
  %decoded_chars_used6 = getelementptr inbounds %struct.textio, %struct.textio* %14, i32 0, i32 23, !dbg !12330
  %15 = load i64, i64* %decoded_chars_used6, align 8, !dbg !12330, !tbaa !5178
  %cmp7 = icmp sgt i64 %15, 0, !dbg !12331
  br i1 %cmp7, label %if.then.10, label %lor.lhs.false.8, !dbg !12332

lor.lhs.false.8:                                  ; preds = %if.end.5
  %16 = load i64, i64* %n.addr, align 8, !dbg !12333, !tbaa !1941
  %17 = load i64, i64* %avail, align 8, !dbg !12335, !tbaa !1941
  %cmp9 = icmp slt i64 %16, %17, !dbg !12336
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !12337

if.then.10:                                       ; preds = %lor.lhs.false.8, %if.end.5
  %18 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12338, !tbaa !1876
  %decoded_chars11 = getelementptr inbounds %struct.textio, %struct.textio* %18, i32 0, i32 22, !dbg !12340
  %19 = load %struct._object*, %struct._object** %decoded_chars11, align 8, !dbg !12340, !tbaa !4259
  %20 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12341, !tbaa !1876
  %decoded_chars_used12 = getelementptr inbounds %struct.textio, %struct.textio* %20, i32 0, i32 23, !dbg !12342
  %21 = load i64, i64* %decoded_chars_used12, align 8, !dbg !12342, !tbaa !5178
  %22 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12343, !tbaa !1876
  %decoded_chars_used13 = getelementptr inbounds %struct.textio, %struct.textio* %22, i32 0, i32 23, !dbg !12344
  %23 = load i64, i64* %decoded_chars_used13, align 8, !dbg !12344, !tbaa !5178
  %24 = load i64, i64* %n.addr, align 8, !dbg !12345, !tbaa !1941
  %add = add i64 %23, %24, !dbg !12346
  %call14 = call %struct._object* @PyUnicode_Substring(%struct._object* %19, i64 %21, i64 %add), !dbg !12347
  store %struct._object* %call14, %struct._object** %chars, align 8, !dbg !12348, !tbaa !1876
  %25 = load %struct._object*, %struct._object** %chars, align 8, !dbg !12349, !tbaa !1876
  %cmp15 = icmp eq %struct._object* %25, null, !dbg !12351
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !12352

if.then.16:                                       ; preds = %if.then.10
  store %struct._object* null, %struct._object** %retval, !dbg !12353
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12353

if.end.17:                                        ; preds = %if.then.10
  br label %if.end.19, !dbg !12354

if.else:                                          ; preds = %lor.lhs.false.8
  %26 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12355, !tbaa !1876
  %decoded_chars18 = getelementptr inbounds %struct.textio, %struct.textio* %26, i32 0, i32 22, !dbg !12357
  %27 = load %struct._object*, %struct._object** %decoded_chars18, align 8, !dbg !12357, !tbaa !4259
  store %struct._object* %27, %struct._object** %chars, align 8, !dbg !12358, !tbaa !1876
  %28 = load %struct._object*, %struct._object** %chars, align 8, !dbg !12359, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !12360
  %29 = load i64, i64* %ob_refcnt, align 8, !dbg !12361, !tbaa !1927
  %inc = add i64 %29, 1, !dbg !12361
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12361, !tbaa !1927
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.end.17
  %30 = load i64, i64* %n.addr, align 8, !dbg !12362, !tbaa !1941
  %31 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12363, !tbaa !1876
  %decoded_chars_used20 = getelementptr inbounds %struct.textio, %struct.textio* %31, i32 0, i32 23, !dbg !12364
  %32 = load i64, i64* %decoded_chars_used20, align 8, !dbg !12365, !tbaa !5178
  %add21 = add i64 %32, %30, !dbg !12365
  store i64 %add21, i64* %decoded_chars_used20, align 8, !dbg !12365, !tbaa !5178
  %33 = load %struct._object*, %struct._object** %chars, align 8, !dbg !12366, !tbaa !1876
  store %struct._object* %33, %struct._object** %retval, !dbg !12367
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12367

cleanup:                                          ; preds = %if.end.19, %if.then.16, %if.then
  %34 = bitcast i64* %avail to i8*, !dbg !12368
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !12368
  %35 = bitcast %struct._object** %chars to i8*, !dbg !12368
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !12368
  %36 = load %struct._object*, %struct._object** %retval, !dbg !12368
  ret %struct._object* %36, !dbg !12368
}

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #3

declare void @PyErr_Fetch(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyErr_Restore(%struct._object*, %struct._object*, %struct._object*) #3

declare void @PyErr_NormalizeException(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyException_SetContext(%struct._object*, %struct._object*) #3

declare i32 @PyObject_RichCompareBool(%struct._object*, %struct._object*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_parse_cookie(%struct.cookie_type* %cookie, %struct._object* %cookieObj) #0 {
entry:
  %retval = alloca i32, align 4
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %cookieObj.addr = alloca %struct._object*, align 8
  %buffer = alloca [21 x i8], align 16
  %cookieLong = alloca %struct._longobject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp9 = alloca %struct._object*, align 8
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1406, metadata !1880), !dbg !12369
  store %struct._object* %cookieObj, %struct._object** %cookieObj.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %cookieObj.addr, metadata !1407, metadata !1880), !dbg !12370
  %0 = bitcast [21 x i8]* %buffer to i8*, !dbg !12371
  call void @llvm.lifetime.start(i64 21, i8* %0) #2, !dbg !12371
  call void @llvm.dbg.declare(metadata [21 x i8]* %buffer, metadata !1408, metadata !1880), !dbg !12372
  %1 = bitcast %struct._longobject** %cookieLong to i8*, !dbg !12373
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12373
  call void @llvm.dbg.declare(metadata %struct._longobject** %cookieLong, metadata !1412, metadata !1880), !dbg !12374
  %2 = load %struct._object*, %struct._object** %cookieObj.addr, align 8, !dbg !12375, !tbaa !1876
  %call = call %struct._object* @PyNumber_Long(%struct._object* %2), !dbg !12376
  %3 = bitcast %struct._object* %call to %struct._longobject*, !dbg !12377
  store %struct._longobject* %3, %struct._longobject** %cookieLong, align 8, !dbg !12374, !tbaa !1876
  %4 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12378, !tbaa !1876
  %cmp = icmp eq %struct._longobject* %4, null, !dbg !12380
  br i1 %cmp, label %if.then, label %if.end, !dbg !12381

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !12382
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12382

if.end:                                           ; preds = %entry
  %5 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12383, !tbaa !1876
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12384
  %call1 = call i32 @_PyLong_AsByteArray(%struct._longobject* %5, i8* %arraydecay, i64 21, i32 1, i32 0), !dbg !12385
  %cmp2 = icmp slt i32 %call1, 0, !dbg !12386
  br i1 %cmp2, label %if.then.3, label %if.end.7, !dbg !12387

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !12388

do.body:                                          ; preds = %if.then.3
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12389
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !12389
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1413, metadata !1880), !dbg !12391
  %7 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12392, !tbaa !1876
  %8 = bitcast %struct._longobject* %7 to %struct._object*, !dbg !12393
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !12391, !tbaa !1876
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12394, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !12396
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !12397, !tbaa !1927
  %dec = add i64 %10, -1, !dbg !12397
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12397, !tbaa !1927
  %cmp4 = icmp ne i64 %dec, 0, !dbg !12398
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !12399

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !12400

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12402, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12404
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12404, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !12405
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12405, !tbaa !2196
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12406, !tbaa !1876
  call void %13(%struct._object* %14), !dbg !12407
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12408
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !12408
  br label %do.cond, !dbg !12410

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !12411

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !12413
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12413

if.end.7:                                         ; preds = %if.end
  br label %do.body.8, !dbg !12414

do.body.8:                                        ; preds = %if.end.7
  %16 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !12415
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !12415
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp9, metadata !1417, metadata !1880), !dbg !12417
  %17 = load %struct._longobject*, %struct._longobject** %cookieLong, align 8, !dbg !12418, !tbaa !1876
  %18 = bitcast %struct._longobject* %17 to %struct._object*, !dbg !12419
  store %struct._object* %18, %struct._object** %_py_decref_tmp9, align 8, !dbg !12417, !tbaa !1876
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12420, !tbaa !1876
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !12422
  %20 = load i64, i64* %ob_refcnt10, align 8, !dbg !12423, !tbaa !1927
  %dec11 = add i64 %20, -1, !dbg !12423
  store i64 %dec11, i64* %ob_refcnt10, align 8, !dbg !12423, !tbaa !1927
  %cmp12 = icmp ne i64 %dec11, 0, !dbg !12424
  br i1 %cmp12, label %if.then.13, label %if.else.14, !dbg !12425

if.then.13:                                       ; preds = %do.body.8
  br label %if.end.17, !dbg !12426

if.else.14:                                       ; preds = %do.body.8
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12428, !tbaa !1876
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !12430
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !12430, !tbaa !2194
  %tp_dealloc16 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !12431
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc16, align 8, !dbg !12431, !tbaa !2196
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12432, !tbaa !1876
  call void %23(%struct._object* %24), !dbg !12433
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.14, %if.then.13
  %25 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !12434
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !12434
  br label %do.cond.18, !dbg !12436

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !12437

do.end.19:                                        ; preds = %do.cond.18
  %26 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12439, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %26, i32 0, i32 0, !dbg !12440
  %27 = bitcast i64* %start_pos to i8*, !dbg !12441
  %arraydecay20 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12442
  %add.ptr = getelementptr i8, i8* %arraydecay20, i64 0, !dbg !12443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %add.ptr, i64 8, i32 1, i1 false), !dbg !12441
  %28 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12444, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %28, i32 0, i32 1, !dbg !12445
  %29 = bitcast i32* %dec_flags to i8*, !dbg !12446
  %arraydecay21 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12447
  %add.ptr22 = getelementptr i8, i8* %arraydecay21, i64 8, !dbg !12448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %add.ptr22, i64 4, i32 1, i1 false), !dbg !12446
  %30 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12449, !tbaa !1876
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %30, i32 0, i32 2, !dbg !12450
  %31 = bitcast i32* %bytes_to_feed to i8*, !dbg !12451
  %arraydecay23 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12452
  %add.ptr24 = getelementptr i8, i8* %arraydecay23, i64 12, !dbg !12453
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %add.ptr24, i64 4, i32 1, i1 false), !dbg !12451
  %32 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12454, !tbaa !1876
  %chars_to_skip = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %32, i32 0, i32 3, !dbg !12455
  %33 = bitcast i32* %chars_to_skip to i8*, !dbg !12456
  %arraydecay25 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12457
  %add.ptr26 = getelementptr i8, i8* %arraydecay25, i64 16, !dbg !12458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %add.ptr26, i64 4, i32 1, i1 false), !dbg !12456
  %34 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12459, !tbaa !1876
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %34, i32 0, i32 4, !dbg !12460
  %arraydecay27 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12461
  %add.ptr28 = getelementptr i8, i8* %arraydecay27, i64 20, !dbg !12462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %need_eof, i8* %add.ptr28, i64 1, i32 1, i1 false), !dbg !12463
  store i32 0, i32* %retval, !dbg !12464
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12464

cleanup:                                          ; preds = %do.end.19, %do.end, %if.then
  %35 = bitcast %struct._longobject** %cookieLong to i8*, !dbg !12465
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !12465
  %36 = bitcast [21 x i8]* %buffer to i8*, !dbg !12465
  call void @llvm.lifetime.end(i64 21, i8* %36) #2, !dbg !12465
  %37 = load i32, i32* %retval, !dbg !12465
  ret i32 %37, !dbg !12465
}

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_decoder_setstate(%struct.textio* %self, %struct.cookie_type* %cookie) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1423, metadata !1880), !dbg !12466
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1424, metadata !1880), !dbg !12467
  %0 = bitcast %struct._object** %res to i8*, !dbg !12468
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12468
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1425, metadata !1880), !dbg !12469
  %1 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12470, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %1, i32 0, i32 0, !dbg !12472
  %2 = load i64, i64* %start_pos, align 8, !dbg !12472, !tbaa !11027
  %cmp = icmp eq i64 %2, 0, !dbg !12473
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12474

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12475, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %3, i32 0, i32 1, !dbg !12477
  %4 = load i32, i32* %dec_flags, align 4, !dbg !12477, !tbaa !11207
  %cmp1 = icmp eq i32 %4, 0, !dbg !12478
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12479

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12480, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 7, !dbg !12481
  %6 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !12481, !tbaa !4201
  %7 = load %struct._object*, %struct._object** @_PyIO_str_reset, align 8, !dbg !12482, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %6, %struct._object* %7, i8* null), !dbg !12483
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !12484, !tbaa !1876
  br label %if.end, !dbg !12485

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12486, !tbaa !1876
  %decoder2 = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 7, !dbg !12487
  %9 = load %struct._object*, %struct._object** %decoder2, align 8, !dbg !12487, !tbaa !4201
  %10 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12488, !tbaa !1876
  %dec_flags3 = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %10, i32 0, i32 1, !dbg !12489
  %11 = load i32, i32* %dec_flags3, align 4, !dbg !12489, !tbaa !11207
  %call4 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %9, %struct._Py_Identifier* @PyId_setstate, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), i32 %11), !dbg !12490
  store %struct._object* %call4, %struct._object** %res, align 8, !dbg !12491, !tbaa !1876
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !12492, !tbaa !1876
  %cmp5 = icmp eq %struct._object* %12, null, !dbg !12494
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !12495

if.then.6:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !12496
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12496

if.end.7:                                         ; preds = %if.end
  br label %do.body, !dbg !12497

do.body:                                          ; preds = %if.end.7
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12498
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !12498
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1426, metadata !1880), !dbg !12500
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !12501, !tbaa !1876
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !12500, !tbaa !1876
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12502, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !12504
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !12505, !tbaa !1927
  %dec = add i64 %16, -1, !dbg !12505
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12505, !tbaa !1927
  %cmp8 = icmp ne i64 %dec, 0, !dbg !12506
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !12507

if.then.9:                                        ; preds = %do.body
  br label %if.end.11, !dbg !12508

if.else.10:                                       ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12510, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !12512
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12512, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !12513
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12513, !tbaa !2196
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12514, !tbaa !1876
  call void %19(%struct._object* %20), !dbg !12515
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.10, %if.then.9
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12516
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !12516
  br label %do.cond, !dbg !12518

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !12519

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !12521
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12521

cleanup:                                          ; preds = %do.end, %if.then.6
  %22 = bitcast %struct._object** %res to i8*, !dbg !12522
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !12522
  %23 = load i32, i32* %retval, !dbg !12522
  ret i32 %23, !dbg !12522
}

declare i64 @PyUnicode_GetLength(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_textiowrapper_encoder_setstate(%struct.textio* %self, %struct.cookie_type* %cookie) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1430, metadata !1880), !dbg !12523
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1431, metadata !1880), !dbg !12524
  %0 = bitcast %struct._object** %res to i8*, !dbg !12525
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12525
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1432, metadata !1880), !dbg !12526
  %1 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12527, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %1, i32 0, i32 0, !dbg !12529
  %2 = load i64, i64* %start_pos, align 8, !dbg !12529, !tbaa !11027
  %cmp = icmp eq i64 %2, 0, !dbg !12530
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12531

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12532, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %3, i32 0, i32 1, !dbg !12534
  %4 = load i32, i32* %dec_flags, align 4, !dbg !12534, !tbaa !11207
  %cmp1 = icmp eq i32 %4, 0, !dbg !12535
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12536

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12537, !tbaa !1876
  %encoder = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 6, !dbg !12539
  %6 = load %struct._object*, %struct._object** %encoder, align 8, !dbg !12539, !tbaa !4172
  %7 = load %struct._object*, %struct._object** @_PyIO_str_reset, align 8, !dbg !12540, !tbaa !1876
  %call = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %6, %struct._object* %7, i8* null), !dbg !12541
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !12542, !tbaa !1876
  %8 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12543, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %8, i32 0, i32 21, !dbg !12544
  store i8 1, i8* %encoding_start_of_stream, align 1, !dbg !12545, !tbaa !6150
  br label %if.end, !dbg !12546

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12547, !tbaa !1876
  %encoder2 = getelementptr inbounds %struct.textio, %struct.textio* %9, i32 0, i32 6, !dbg !12549
  %10 = load %struct._object*, %struct._object** %encoder2, align 8, !dbg !12549, !tbaa !4172
  %11 = load %struct._object*, %struct._object** @_PyIO_str_setstate, align 8, !dbg !12550, !tbaa !1876
  %12 = load %struct._object*, %struct._object** @_PyIO_zero, align 8, !dbg !12551, !tbaa !1876
  %call3 = call %struct._object* (%struct._object*, %struct._object*, ...) @PyObject_CallMethodObjArgs(%struct._object* %10, %struct._object* %11, %struct._object* %12, i8* null), !dbg !12552
  store %struct._object* %call3, %struct._object** %res, align 8, !dbg !12553, !tbaa !1876
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12554, !tbaa !1876
  %encoding_start_of_stream4 = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 21, !dbg !12555
  store i8 0, i8* %encoding_start_of_stream4, align 1, !dbg !12556, !tbaa !6150
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !12557, !tbaa !1876
  %cmp5 = icmp eq %struct._object* %14, null, !dbg !12559
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !12560

if.then.6:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !12561
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12561

if.end.7:                                         ; preds = %if.end
  br label %do.body, !dbg !12562

do.body:                                          ; preds = %if.end.7
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12563
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !12563
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1433, metadata !1880), !dbg !12565
  %16 = load %struct._object*, %struct._object** %res, align 8, !dbg !12566, !tbaa !1876
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !12565, !tbaa !1876
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12567, !tbaa !1876
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !12569
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !12570, !tbaa !1927
  %dec = add i64 %18, -1, !dbg !12570
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12570, !tbaa !1927
  %cmp8 = icmp ne i64 %dec, 0, !dbg !12571
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !12572

if.then.9:                                        ; preds = %do.body
  br label %if.end.11, !dbg !12573

if.else.10:                                       ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12575, !tbaa !1876
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !12577
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12577, !tbaa !2194
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !12578
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12578, !tbaa !2196
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12579, !tbaa !1876
  call void %21(%struct._object* %22), !dbg !12580
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.10, %if.then.9
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12581
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !12581
  br label %do.cond, !dbg !12583

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !12584

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !12586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12586

cleanup:                                          ; preds = %do.end, %if.then.6
  %24 = bitcast %struct._object** %res to i8*, !dbg !12587
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !12587
  %25 = load i32, i32* %retval, !dbg !12587
  ret i32 %25, !dbg !12587
}

declare %struct._object* @PyNumber_Long(%struct._object*) #3

declare i32 @_PyLong_AsByteArray(%struct._longobject*, i8*, i64, i32, i32) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare i64 @PyLong_AsLong(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_build_cookie(%struct.cookie_type* %cookie) #0 {
entry:
  %cookie.addr = alloca %struct.cookie_type*, align 8
  %buffer = alloca [21 x i8], align 16
  store %struct.cookie_type* %cookie, %struct.cookie_type** %cookie.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.cookie_type** %cookie.addr, metadata !1517, metadata !1880), !dbg !12588
  %0 = bitcast [21 x i8]* %buffer to i8*, !dbg !12589
  call void @llvm.lifetime.start(i64 21, i8* %0) #2, !dbg !12589
  call void @llvm.dbg.declare(metadata [21 x i8]* %buffer, metadata !1518, metadata !1880), !dbg !12590
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12591
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 0, !dbg !12592
  %1 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12593, !tbaa !1876
  %start_pos = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %1, i32 0, i32 0, !dbg !12594
  %2 = bitcast i64* %start_pos to i8*, !dbg !12595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %2, i64 8, i32 1, i1 false), !dbg !12595
  %arraydecay1 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12596
  %add.ptr2 = getelementptr i8, i8* %arraydecay1, i64 8, !dbg !12597
  %3 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12598, !tbaa !1876
  %dec_flags = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %3, i32 0, i32 1, !dbg !12599
  %4 = bitcast i32* %dec_flags to i8*, !dbg !12600
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr2, i8* %4, i64 4, i32 1, i1 false), !dbg !12600
  %arraydecay3 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12601
  %add.ptr4 = getelementptr i8, i8* %arraydecay3, i64 12, !dbg !12602
  %5 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12603, !tbaa !1876
  %bytes_to_feed = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %5, i32 0, i32 2, !dbg !12604
  %6 = bitcast i32* %bytes_to_feed to i8*, !dbg !12605
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr4, i8* %6, i64 4, i32 1, i1 false), !dbg !12605
  %arraydecay5 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12606
  %add.ptr6 = getelementptr i8, i8* %arraydecay5, i64 16, !dbg !12607
  %7 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12608, !tbaa !1876
  %chars_to_skip = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %7, i32 0, i32 3, !dbg !12609
  %8 = bitcast i32* %chars_to_skip to i8*, !dbg !12610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr6, i8* %8, i64 4, i32 1, i1 false), !dbg !12610
  %arraydecay7 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12611
  %add.ptr8 = getelementptr i8, i8* %arraydecay7, i64 20, !dbg !12612
  %9 = load %struct.cookie_type*, %struct.cookie_type** %cookie.addr, align 8, !dbg !12613, !tbaa !1876
  %need_eof = getelementptr inbounds %struct.cookie_type, %struct.cookie_type* %9, i32 0, i32 4, !dbg !12614
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr8, i8* %need_eof, i64 1, i32 1, i1 false), !dbg !12615
  %arraydecay9 = getelementptr inbounds [21 x i8], [21 x i8]* %buffer, i32 0, i32 0, !dbg !12616
  %call = call %struct._object* @_PyLong_FromByteArray(i8* %arraydecay9, i64 21, i32 1, i32 0), !dbg !12617
  %10 = bitcast [21 x i8]* %buffer to i8*, !dbg !12618
  call void @llvm.lifetime.end(i64 21, i8* %10) #2, !dbg !12618
  ret %struct._object* %call, !dbg !12619
}

declare %struct._object* @_PyLong_FromByteArray(i8*, i64, i32, i32) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_name_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1529, metadata !1880), !dbg !12620
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1530, metadata !1880), !dbg !12621
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12622, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !12624
  %1 = load i32, i32* %ok, align 4, !dbg !12624, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !12625
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12626

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12627, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !12631
  %3 = load i32, i32* %detached, align 4, !dbg !12631, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !12632
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12633

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12634, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12637
  br label %if.end, !dbg !12638

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12639, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12642
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12643
  br label %return, !dbg !12643

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12645, !tbaa !1876
  %buffer = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 4, !dbg !12646
  %7 = load %struct._object*, %struct._object** %buffer, align 8, !dbg !12646, !tbaa !4115
  %call = call %struct._object* @_PyObject_GetAttrId(%struct._object* %7, %struct._Py_Identifier* @PyId_name), !dbg !12647
  store %struct._object* %call, %struct._object** %retval, !dbg !12648
  br label %return, !dbg !12648

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12649
  ret %struct._object* %8, !dbg !12649
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_newlines_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1533, metadata !1880), !dbg !12650
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1534, metadata !1880), !dbg !12651
  %0 = bitcast %struct._object** %res to i8*, !dbg !12652
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12652
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1535, metadata !1880), !dbg !12653
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12654, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !12656
  %2 = load i32, i32* %ok, align 4, !dbg !12656, !tbaa !3895
  %cmp = icmp sle i32 %2, 0, !dbg !12657
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12658

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12659, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !12663
  %4 = load i32, i32* %detached, align 4, !dbg !12663, !tbaa !3903
  %tobool = icmp ne i32 %4, 0, !dbg !12664
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12665

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12666, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12669
  br label %if.end, !dbg !12670

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12671, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12674
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12675
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12677

if.end.2:                                         ; preds = %entry
  %7 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12678, !tbaa !1876
  %decoder = getelementptr inbounds %struct.textio, %struct.textio* %7, i32 0, i32 7, !dbg !12680
  %8 = load %struct._object*, %struct._object** %decoder, align 8, !dbg !12680, !tbaa !4201
  %cmp3 = icmp eq %struct._object* %8, null, !dbg !12681
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !12682

if.then.4:                                        ; preds = %if.end.2
  %9 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12683, !tbaa !1927
  %inc = add i64 %9, 1, !dbg !12683
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12683, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12684
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12684

if.end.5:                                         ; preds = %if.end.2
  %10 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12685, !tbaa !1876
  %decoder6 = getelementptr inbounds %struct.textio, %struct.textio* %10, i32 0, i32 7, !dbg !12686
  %11 = load %struct._object*, %struct._object** %decoder6, align 8, !dbg !12686, !tbaa !4201
  %12 = load %struct._object*, %struct._object** @_PyIO_str_newlines, align 8, !dbg !12687, !tbaa !1876
  %call = call %struct._object* @PyObject_GetAttr(%struct._object* %11, %struct._object* %12), !dbg !12688
  store %struct._object* %call, %struct._object** %res, align 8, !dbg !12689, !tbaa !1876
  %13 = load %struct._object*, %struct._object** %res, align 8, !dbg !12690, !tbaa !1876
  %cmp7 = icmp eq %struct._object* %13, null, !dbg !12692
  br i1 %cmp7, label %if.then.8, label %if.end.14, !dbg !12693

if.then.8:                                        ; preds = %if.end.5
  %14 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !12694, !tbaa !1876
  %call9 = call i32 @PyErr_ExceptionMatches(%struct._object* %14), !dbg !12697
  %tobool10 = icmp ne i32 %call9, 0, !dbg !12697
  br i1 %tobool10, label %if.then.11, label %if.else.13, !dbg !12698

if.then.11:                                       ; preds = %if.then.8
  call void @PyErr_Clear(), !dbg !12699
  %15 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12701, !tbaa !1927
  %inc12 = add i64 %15, 1, !dbg !12701
  store i64 %inc12, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12701, !tbaa !1927
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12702
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12702

if.else.13:                                       ; preds = %if.then.8
  store %struct._object* null, %struct._object** %retval, !dbg !12703
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12703

if.end.14:                                        ; preds = %if.end.5
  %16 = load %struct._object*, %struct._object** %res, align 8, !dbg !12705, !tbaa !1876
  store %struct._object* %16, %struct._object** %retval, !dbg !12706
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12706

cleanup:                                          ; preds = %if.end.14, %if.else.13, %if.then.11, %if.then.4, %if.end
  %17 = bitcast %struct._object** %res to i8*, !dbg !12707
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !12707
  %18 = load %struct._object*, %struct._object** %retval, !dbg !12707
  ret %struct._object* %18, !dbg !12707
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_errors_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1538, metadata !1880), !dbg !12708
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1539, metadata !1880), !dbg !12709
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12710, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !12712
  %1 = load i32, i32* %ok, align 4, !dbg !12712, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !12713
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12714

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12715, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !12719
  %3 = load i32, i32* %detached, align 4, !dbg !12719, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !12720
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12721

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12722, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12725
  br label %if.end, !dbg !12726

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12727, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12730
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12731
  br label %return, !dbg !12731

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12733, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 9, !dbg !12734
  %7 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12734, !tbaa !4346
  %8 = bitcast %struct._object* %7 to %struct.PyBytesObject*, !dbg !12735
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %8, i32 0, i32 2, !dbg !12736
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12737
  %call = call %struct._object* @PyUnicode_FromString(i8* %arraydecay), !dbg !12738
  store %struct._object* %call, %struct._object** %retval, !dbg !12739
  br label %return, !dbg !12739

return:                                           ; preds = %if.end.2, %if.end
  %9 = load %struct._object*, %struct._object** %retval, !dbg !12740
  ret %struct._object* %9, !dbg !12740
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @textiowrapper_chunk_size_get(%struct.textio* %self, i8* %context) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1542, metadata !1880), !dbg !12741
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1543, metadata !1880), !dbg !12742
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12743, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 1, !dbg !12745
  %1 = load i32, i32* %ok, align 4, !dbg !12745, !tbaa !3895
  %cmp = icmp sle i32 %1, 0, !dbg !12746
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12747

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12748, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %2, i32 0, i32 2, !dbg !12752
  %3 = load i32, i32* %detached, align 4, !dbg !12752, !tbaa !3903
  %tobool = icmp ne i32 %3, 0, !dbg !12753
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12754

if.then.1:                                        ; preds = %if.then
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12755, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12758
  br label %if.end, !dbg !12759

if.else:                                          ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12760, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12763
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store %struct._object* null, %struct._object** %retval, !dbg !12764
  br label %return, !dbg !12764

if.end.2:                                         ; preds = %entry
  %6 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12766, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %6, i32 0, i32 3, !dbg !12767
  %7 = load i64, i64* %chunk_size, align 8, !dbg !12767, !tbaa !5565
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %7), !dbg !12768
  store %struct._object* %call, %struct._object** %retval, !dbg !12769
  br label %return, !dbg !12769

return:                                           ; preds = %if.end.2, %if.end
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12770
  ret %struct._object* %8, !dbg !12770
}

; Function Attrs: nounwind uwtable
define internal i32 @textiowrapper_chunk_size_set(%struct.textio* %self, %struct._object* %arg, i8* %context) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.textio*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %context.addr = alloca i8*, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1548, metadata !1880), !dbg !12771
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !1549, metadata !1880), !dbg !12772
  store i8* %context, i8** %context.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !1550, metadata !1880), !dbg !12773
  %0 = bitcast i64* %n to i8*, !dbg !12774
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12774
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1551, metadata !1880), !dbg !12775
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12776, !tbaa !1876
  %ok = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 1, !dbg !12778
  %2 = load i32, i32* %ok, align 4, !dbg !12778, !tbaa !3895
  %cmp = icmp sle i32 %2, 0, !dbg !12779
  br i1 %cmp, label %if.then, label %if.end.2, !dbg !12780

if.then:                                          ; preds = %entry
  %3 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12781, !tbaa !1876
  %detached = getelementptr inbounds %struct.textio, %struct.textio* %3, i32 0, i32 2, !dbg !12785
  %4 = load i32, i32* %detached, align 4, !dbg !12785, !tbaa !3903
  %tobool = icmp ne i32 %4, 0, !dbg !12786
  br i1 %tobool, label %if.then.1, label %if.else, !dbg !12787

if.then.1:                                        ; preds = %if.then
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12788, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32, i32 0, i32 0)), !dbg !12791
  br label %if.end, !dbg !12792

if.else:                                          ; preds = %if.then
  %6 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12793, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i32 0, i32 0)), !dbg !12796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.1
  store i32 -1, i32* %retval, !dbg !12797
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12799

if.end.2:                                         ; preds = %entry
  %7 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !12800, !tbaa !1876
  %8 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12801, !tbaa !1876
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %7, %struct._object* %8), !dbg !12802
  store i64 %call, i64* %n, align 8, !dbg !12803, !tbaa !1941
  %9 = load i64, i64* %n, align 8, !dbg !12804, !tbaa !1941
  %cmp3 = icmp eq i64 %9, -1, !dbg !12806
  br i1 %cmp3, label %land.lhs.true, label %if.end.7, !dbg !12807

land.lhs.true:                                    ; preds = %if.end.2
  %call4 = call %struct._object* @PyErr_Occurred(), !dbg !12808
  %tobool5 = icmp ne %struct._object* %call4, null, !dbg !12808
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !12810

if.then.6:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, !dbg !12811
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12811

if.end.7:                                         ; preds = %land.lhs.true, %if.end.2
  %10 = load i64, i64* %n, align 8, !dbg !12812, !tbaa !1941
  %cmp8 = icmp sle i64 %10, 0, !dbg !12814
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !12815

if.then.9:                                        ; preds = %if.end.7
  %11 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !12816, !tbaa !1876
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.94, i32 0, i32 0)), !dbg !12818
  store i32 -1, i32* %retval, !dbg !12819
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12819

if.end.10:                                        ; preds = %if.end.7
  %12 = load i64, i64* %n, align 8, !dbg !12820, !tbaa !1941
  %13 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12821, !tbaa !1876
  %chunk_size = getelementptr inbounds %struct.textio, %struct.textio* %13, i32 0, i32 3, !dbg !12822
  store i64 %12, i64* %chunk_size, align 8, !dbg !12823, !tbaa !5565
  store i32 0, i32* %retval, !dbg !12824
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12824

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then.6, %if.end
  %14 = bitcast i64* %n to i8*, !dbg !12825
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !12825
  %15 = load i32, i32* %retval, !dbg !12825
  ret i32 %15, !dbg !12825
}

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #3

declare i32 @_PyLong_AsInt(%struct._object*) #3

declare %struct._object* @_Py_device_encoding(i32) #3

declare %struct._object* @_PyIO_get_locale_module(%struct._PyIO_State*) #3

declare i8* @PyUnicode_AsUTF8(%struct._object*) #3

declare %struct._object* @_PyCodec_LookupTextEncoding(i8*, i8*) #3

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #5

declare %struct._object* @_PyCodecInfo_GetIncrementalDecoder(%struct._object*, i8*) #3

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

declare %struct._object* @_PyCodecInfo_GetIncrementalEncoder(%struct._object*, i8*) #3

declare i32 @PyUnicode_CompareWithASCIIString(%struct._object*, i8*) #3

declare i32 @_PyObject_HasAttrId(%struct._object*, %struct._Py_Identifier*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @ascii_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1739, metadata !1880), !dbg !12826
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1740, metadata !1880), !dbg !12827
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12828, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12829, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12830
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12830, !tbaa !4346
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12831
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12832
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12833
  %call = call %struct._object* @_PyUnicode_AsASCIIString(%struct._object* %0, i8* %arraydecay), !dbg !12834
  ret %struct._object* %call, !dbg !12835
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @latin1_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1743, metadata !1880), !dbg !12836
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1744, metadata !1880), !dbg !12837
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12838, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12839, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12840
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12840, !tbaa !4346
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12841
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12842
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12843
  %call = call %struct._object* @_PyUnicode_AsLatin1String(%struct._object* %0, i8* %arraydecay), !dbg !12844
  ret %struct._object* %call, !dbg !12845
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf8_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1747, metadata !1880), !dbg !12846
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1748, metadata !1880), !dbg !12847
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12848, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12849, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12850
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12850, !tbaa !4346
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12851
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12852
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12853
  %call = call %struct._object* @_PyUnicode_AsUTF8String(%struct._object* %0, i8* %arraydecay), !dbg !12854
  ret %struct._object* %call, !dbg !12855
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf16be_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1751, metadata !1880), !dbg !12856
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1752, metadata !1880), !dbg !12857
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12858, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12859, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12860
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12860, !tbaa !4346
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12861
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12862
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12863
  %call = call %struct._object* @_PyUnicode_EncodeUTF16(%struct._object* %0, i8* %arraydecay, i32 1), !dbg !12864
  ret %struct._object* %call, !dbg !12865
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf16le_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1755, metadata !1880), !dbg !12866
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1756, metadata !1880), !dbg !12867
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12868, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12869, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12870
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12870, !tbaa !4346
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12871
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12872
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12873
  %call = call %struct._object* @_PyUnicode_EncodeUTF16(%struct._object* %0, i8* %arraydecay, i32 -1), !dbg !12874
  ret %struct._object* %call, !dbg !12875
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf16_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1759, metadata !1880), !dbg !12876
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1760, metadata !1880), !dbg !12877
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12878, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 21, !dbg !12880
  %1 = load i8, i8* %encoding_start_of_stream, align 1, !dbg !12880, !tbaa !6150
  %tobool = icmp ne i8 %1, 0, !dbg !12878
  br i1 %tobool, label %if.end, label %if.then, !dbg !12881

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12882, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12884, !tbaa !1876
  %call = call %struct._object* @utf16le_encode(%struct.textio* %2, %struct._object* %3), !dbg !12885
  store %struct._object* %call, %struct._object** %retval, !dbg !12886
  br label %return, !dbg !12886

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12887, !tbaa !1876
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12888, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 9, !dbg !12889
  %6 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12889, !tbaa !4346
  %7 = bitcast %struct._object* %6 to %struct.PyBytesObject*, !dbg !12890
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %7, i32 0, i32 2, !dbg !12891
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12892
  %call1 = call %struct._object* @_PyUnicode_EncodeUTF16(%struct._object* %4, i8* %arraydecay, i32 0), !dbg !12893
  store %struct._object* %call1, %struct._object** %retval, !dbg !12894
  br label %return, !dbg !12894

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12895
  ret %struct._object* %8, !dbg !12895
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf32be_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1763, metadata !1880), !dbg !12896
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1764, metadata !1880), !dbg !12897
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12898, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12899, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12900
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12900, !tbaa !4346
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12901
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12902
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12903
  %call = call %struct._object* @_PyUnicode_EncodeUTF32(%struct._object* %0, i8* %arraydecay, i32 1), !dbg !12904
  ret %struct._object* %call, !dbg !12905
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf32le_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1767, metadata !1880), !dbg !12906
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1768, metadata !1880), !dbg !12907
  %0 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12908, !tbaa !1876
  %1 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12909, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %1, i32 0, i32 9, !dbg !12910
  %2 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12910, !tbaa !4346
  %3 = bitcast %struct._object* %2 to %struct.PyBytesObject*, !dbg !12911
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %3, i32 0, i32 2, !dbg !12912
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12913
  %call = call %struct._object* @_PyUnicode_EncodeUTF32(%struct._object* %0, i8* %arraydecay, i32 -1), !dbg !12914
  ret %struct._object* %call, !dbg !12915
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @utf32_encode(%struct.textio* %self, %struct._object* %text) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.textio*, align 8
  %text.addr = alloca %struct._object*, align 8
  store %struct.textio* %self, %struct.textio** %self.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct.textio** %self.addr, metadata !1771, metadata !1880), !dbg !12916
  store %struct._object* %text, %struct._object** %text.addr, align 8, !tbaa !1876
  call void @llvm.dbg.declare(metadata %struct._object** %text.addr, metadata !1772, metadata !1880), !dbg !12917
  %0 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12918, !tbaa !1876
  %encoding_start_of_stream = getelementptr inbounds %struct.textio, %struct.textio* %0, i32 0, i32 21, !dbg !12920
  %1 = load i8, i8* %encoding_start_of_stream, align 1, !dbg !12920, !tbaa !6150
  %tobool = icmp ne i8 %1, 0, !dbg !12918
  br i1 %tobool, label %if.end, label %if.then, !dbg !12921

if.then:                                          ; preds = %entry
  %2 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12922, !tbaa !1876
  %3 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12924, !tbaa !1876
  %call = call %struct._object* @utf32le_encode(%struct.textio* %2, %struct._object* %3), !dbg !12925
  store %struct._object* %call, %struct._object** %retval, !dbg !12926
  br label %return, !dbg !12926

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %text.addr, align 8, !dbg !12927, !tbaa !1876
  %5 = load %struct.textio*, %struct.textio** %self.addr, align 8, !dbg !12928, !tbaa !1876
  %errors = getelementptr inbounds %struct.textio, %struct.textio* %5, i32 0, i32 9, !dbg !12929
  %6 = load %struct._object*, %struct._object** %errors, align 8, !dbg !12929, !tbaa !4346
  %7 = bitcast %struct._object* %6 to %struct.PyBytesObject*, !dbg !12930
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %7, i32 0, i32 2, !dbg !12931
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !12932
  %call1 = call %struct._object* @_PyUnicode_EncodeUTF32(%struct._object* %4, i8* %arraydecay, i32 0), !dbg !12933
  store %struct._object* %call1, %struct._object** %retval, !dbg !12934
  br label %return, !dbg !12934

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12935
  ret %struct._object* %8, !dbg !12935
}

declare %struct._object* @_PyUnicode_AsASCIIString(%struct._object*, i8*) #3

declare %struct._object* @_PyUnicode_AsLatin1String(%struct._object*, i8*) #3

declare %struct._object* @_PyUnicode_AsUTF8String(%struct._object*, i8*) #3

declare %struct._object* @_PyUnicode_EncodeUTF16(%struct._object*, i8*, i32) #3

declare %struct._object* @_PyUnicode_EncodeUTF32(%struct._object*, i8*, i32) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1873, !1874}
!llvm.ident = !{!1875}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !10, subprograms: !458, globals: !1773)
!1 = !DIFile(filename: "textio.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PyUnicode_Kind", file: !4, line: 451, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9}
!6 = !DIEnumerator(name: "PyUnicode_WCHAR_KIND", value: 0)
!7 = !DIEnumerator(name: "PyUnicode_1BYTE_KIND", value: 1)
!8 = !DIEnumerator(name: "PyUnicode_2BYTE_KIND", value: 2)
!9 = !DIEnumerator(name: "PyUnicode_4BYTE_KIND", value: 4)
!10 = !{!11, !102, !50, !368, !386, !394, !405, !404, !409, !408, !412, !411, !413, !415, !417, !64, !56, !42, !419, !107, !22, !432, !433, !434, !446, !454, !456, !40}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "nldecoder_object", file: !13, line: 230, baseType: !14)
!13 = !DIFile(filename: "./Modules/_io/textio.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!14 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 223, size: 320, align: 64, elements: !15)
!15 = !{!16, !363, !364, !365, !366, !367}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !14, file: !13, line: 224, baseType: !17, size: 128, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !18, line: 109, baseType: !19)
!18 = !DIFile(filename: "Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!19 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !18, line: 105, size: 128, align: 64, elements: !20)
!20 = !{!21, !29}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !19, file: !18, line: 107, baseType: !22, size: 64, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !23, line: 177, baseType: !24)
!23 = !DIFile(filename: "Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !25, line: 102, baseType: !26)
!25 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !27, line: 181, baseType: !28)
!27 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!28 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !19, file: !18, line: 108, baseType: !30, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !18, line: 334, size: 3200, align: 64, elements: !32)
!32 = !{!33, !39, !43, !44, !45, !51, !115, !120, !125, !126, !131, !183, !214, !226, !232, !233, !234, !236, !238, !269, !270, !271, !280, !281, !286, !287, !289, !291, !301, !311, !329, !330, !331, !333, !335, !336, !338, !343, !348, !353, !354, !355, !356, !357, !358, !359, !360, !362}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !31, file: !18, line: 335, baseType: !34, size: 192, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !18, line: 114, baseType: !35)
!35 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 111, size: 192, align: 64, elements: !36)
!36 = !{!37, !38}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !35, file: !18, line: 112, baseType: !17, size: 128, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !35, file: !18, line: 113, baseType: !22, size: 64, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !31, file: !18, line: 336, baseType: !40, size: 64, align: 64, offset: 192)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !42)
!42 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 256)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !31, file: !18, line: 337, baseType: !22, size: 64, align: 64, offset: 320)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !31, file: !18, line: 341, baseType: !46, size: 64, align: 64, offset: 384)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !18, line: 308, baseType: !47)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!48 = !DISubroutineType(types: !49)
!49 = !{null, !50}
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !31, file: !18, line: 342, baseType: !52, size: 64, align: 64, offset: 448)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !18, line: 314, baseType: !53)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!54 = !DISubroutineType(types: !55)
!55 = !{!56, !50, !57, !56}
!56 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !25, line: 48, baseType: !59)
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !60, line: 246, size: 1728, align: 64, elements: !61)
!60 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!61 = !{!62, !63, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !83, !84, !85, !86, !88, !90, !92, !96, !99, !101, !103, !104, !105, !106, !110, !111}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !59, file: !60, line: 247, baseType: !56, size: 32, align: 32)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !59, file: !60, line: 252, baseType: !64, size: 64, align: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !59, file: !60, line: 253, baseType: !64, size: 64, align: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !59, file: !60, line: 254, baseType: !64, size: 64, align: 64, offset: 192)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !59, file: !60, line: 255, baseType: !64, size: 64, align: 64, offset: 256)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !59, file: !60, line: 256, baseType: !64, size: 64, align: 64, offset: 320)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !59, file: !60, line: 257, baseType: !64, size: 64, align: 64, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !59, file: !60, line: 258, baseType: !64, size: 64, align: 64, offset: 448)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !59, file: !60, line: 259, baseType: !64, size: 64, align: 64, offset: 512)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !59, file: !60, line: 261, baseType: !64, size: 64, align: 64, offset: 576)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !59, file: !60, line: 262, baseType: !64, size: 64, align: 64, offset: 640)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !59, file: !60, line: 263, baseType: !64, size: 64, align: 64, offset: 704)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !59, file: !60, line: 265, baseType: !76, size: 64, align: 64, offset: 768)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64, align: 64)
!77 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !60, line: 161, size: 192, align: 64, elements: !78)
!78 = !{!79, !80, !82}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !77, file: !60, line: 162, baseType: !76, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !77, file: !60, line: 163, baseType: !81, size: 64, align: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !77, file: !60, line: 167, baseType: !56, size: 32, align: 32, offset: 128)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !59, file: !60, line: 267, baseType: !81, size: 64, align: 64, offset: 832)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !59, file: !60, line: 269, baseType: !56, size: 32, align: 32, offset: 896)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !59, file: !60, line: 273, baseType: !56, size: 32, align: 32, offset: 928)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !59, file: !60, line: 275, baseType: !87, size: 64, align: 64, offset: 960)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !27, line: 140, baseType: !28)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !59, file: !60, line: 279, baseType: !89, size: 16, align: 16, offset: 1024)
!89 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !59, file: !60, line: 280, baseType: !91, size: 8, align: 8, offset: 1040)
!91 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !59, file: !60, line: 281, baseType: !93, size: 8, align: 8, offset: 1048)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 8, align: 8, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 1)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !59, file: !60, line: 285, baseType: !97, size: 64, align: 64, offset: 1088)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !60, line: 155, baseType: null)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !59, file: !60, line: 294, baseType: !100, size: 64, align: 64, offset: 1152)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !27, line: 141, baseType: !28)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !59, file: !60, line: 303, baseType: !102, size: 64, align: 64, offset: 1216)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !59, file: !60, line: 304, baseType: !102, size: 64, align: 64, offset: 1280)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !59, file: !60, line: 305, baseType: !102, size: 64, align: 64, offset: 1344)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !59, file: !60, line: 306, baseType: !102, size: 64, align: 64, offset: 1408)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !59, file: !60, line: 307, baseType: !107, size: 64, align: 64, offset: 1472)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !108, line: 62, baseType: !109)
!108 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!109 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !59, file: !60, line: 309, baseType: !56, size: 32, align: 32, offset: 1536)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !59, file: !60, line: 311, baseType: !112, size: 160, align: 8, offset: 1568)
!112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 160, align: 8, elements: !113)
!113 = !{!114}
!114 = !DISubrange(count: 20)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !31, file: !18, line: 343, baseType: !116, size: 64, align: 64, offset: 512)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !18, line: 316, baseType: !117)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64, align: 64)
!118 = !DISubroutineType(types: !119)
!119 = !{!50, !50, !64}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !31, file: !18, line: 344, baseType: !121, size: 64, align: 64, offset: 576)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !18, line: 318, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64, align: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!56, !50, !64, !50}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !31, file: !18, line: 345, baseType: !102, size: 64, align: 64, offset: 640)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !31, file: !18, line: 346, baseType: !127, size: 64, align: 64, offset: 704)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !18, line: 320, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64, align: 64)
!129 = !DISubroutineType(types: !130)
!130 = !{!50, !50}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !31, file: !18, line: 350, baseType: !132, size: 64, align: 64, offset: 768)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !18, line: 278, baseType: !134)
!134 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 236, size: 2176, align: 64, elements: !135)
!135 = !{!136, !141, !142, !143, !144, !145, !150, !152, !153, !154, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !134, file: !18, line: 241, baseType: !137, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !18, line: 166, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64, align: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!50, !50, !50}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !134, file: !18, line: 242, baseType: !137, size: 64, align: 64, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !134, file: !18, line: 243, baseType: !137, size: 64, align: 64, offset: 128)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !134, file: !18, line: 244, baseType: !137, size: 64, align: 64, offset: 192)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !134, file: !18, line: 245, baseType: !137, size: 64, align: 64, offset: 256)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !134, file: !18, line: 246, baseType: !146, size: 64, align: 64, offset: 320)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !18, line: 167, baseType: !147)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64, align: 64)
!148 = !DISubroutineType(types: !149)
!149 = !{!50, !50, !50, !50}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !134, file: !18, line: 247, baseType: !151, size: 64, align: 64, offset: 384)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !18, line: 165, baseType: !128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !134, file: !18, line: 248, baseType: !151, size: 64, align: 64, offset: 448)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !134, file: !18, line: 249, baseType: !151, size: 64, align: 64, offset: 512)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !134, file: !18, line: 250, baseType: !155, size: 64, align: 64, offset: 576)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !18, line: 168, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64, align: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!56, !50}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !134, file: !18, line: 251, baseType: !151, size: 64, align: 64, offset: 640)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !134, file: !18, line: 252, baseType: !137, size: 64, align: 64, offset: 704)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !134, file: !18, line: 253, baseType: !137, size: 64, align: 64, offset: 768)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !134, file: !18, line: 254, baseType: !137, size: 64, align: 64, offset: 832)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !134, file: !18, line: 255, baseType: !137, size: 64, align: 64, offset: 896)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !134, file: !18, line: 256, baseType: !137, size: 64, align: 64, offset: 960)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !134, file: !18, line: 257, baseType: !151, size: 64, align: 64, offset: 1024)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !134, file: !18, line: 258, baseType: !102, size: 64, align: 64, offset: 1088)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !134, file: !18, line: 259, baseType: !151, size: 64, align: 64, offset: 1152)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !134, file: !18, line: 261, baseType: !137, size: 64, align: 64, offset: 1216)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !134, file: !18, line: 262, baseType: !137, size: 64, align: 64, offset: 1280)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !134, file: !18, line: 263, baseType: !137, size: 64, align: 64, offset: 1344)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !134, file: !18, line: 264, baseType: !137, size: 64, align: 64, offset: 1408)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !134, file: !18, line: 265, baseType: !146, size: 64, align: 64, offset: 1472)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !134, file: !18, line: 266, baseType: !137, size: 64, align: 64, offset: 1536)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !134, file: !18, line: 267, baseType: !137, size: 64, align: 64, offset: 1600)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !134, file: !18, line: 268, baseType: !137, size: 64, align: 64, offset: 1664)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !134, file: !18, line: 269, baseType: !137, size: 64, align: 64, offset: 1728)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !134, file: !18, line: 270, baseType: !137, size: 64, align: 64, offset: 1792)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !134, file: !18, line: 272, baseType: !137, size: 64, align: 64, offset: 1856)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !134, file: !18, line: 273, baseType: !137, size: 64, align: 64, offset: 1920)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !134, file: !18, line: 274, baseType: !137, size: 64, align: 64, offset: 1984)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !134, file: !18, line: 275, baseType: !137, size: 64, align: 64, offset: 2048)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !134, file: !18, line: 277, baseType: !151, size: 64, align: 64, offset: 2112)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !31, file: !18, line: 351, baseType: !184, size: 64, align: 64, offset: 832)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !18, line: 292, baseType: !186)
!186 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 280, size: 640, align: 64, elements: !187)
!187 = !{!188, !193, !194, !199, !200, !201, !206, !207, !212, !213}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !186, file: !18, line: 281, baseType: !189, size: 64, align: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !18, line: 169, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!22, !50}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !186, file: !18, line: 282, baseType: !137, size: 64, align: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !186, file: !18, line: 283, baseType: !195, size: 64, align: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !18, line: 170, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!50, !50, !22}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !186, file: !18, line: 284, baseType: !195, size: 64, align: 64, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !186, file: !18, line: 285, baseType: !102, size: 64, align: 64, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !186, file: !18, line: 286, baseType: !202, size: 64, align: 64, offset: 320)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !18, line: 172, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64, align: 64)
!204 = !DISubroutineType(types: !205)
!205 = !{!56, !50, !22, !50}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !186, file: !18, line: 287, baseType: !102, size: 64, align: 64, offset: 384)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !186, file: !18, line: 288, baseType: !208, size: 64, align: 64, offset: 448)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !18, line: 231, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!210 = !DISubroutineType(types: !211)
!211 = !{!56, !50, !50}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !186, file: !18, line: 290, baseType: !137, size: 64, align: 64, offset: 512)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !186, file: !18, line: 291, baseType: !195, size: 64, align: 64, offset: 576)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !31, file: !18, line: 352, baseType: !215, size: 64, align: 64, offset: 896)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !18, line: 298, baseType: !217)
!217 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 294, size: 192, align: 64, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !217, file: !18, line: 295, baseType: !189, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !217, file: !18, line: 296, baseType: !137, size: 64, align: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !217, file: !18, line: 297, baseType: !222, size: 64, align: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !18, line: 174, baseType: !223)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64, align: 64)
!224 = !DISubroutineType(types: !225)
!225 = !{!56, !50, !50, !50}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !31, file: !18, line: 356, baseType: !227, size: 64, align: 64, offset: 960)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !18, line: 321, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64, align: 64)
!229 = !DISubroutineType(types: !230)
!230 = !{!231, !50}
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !23, line: 186, baseType: !22)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !31, file: !18, line: 357, baseType: !146, size: 64, align: 64, offset: 1024)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !31, file: !18, line: 358, baseType: !127, size: 64, align: 64, offset: 1088)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !31, file: !18, line: 359, baseType: !235, size: 64, align: 64, offset: 1152)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !18, line: 317, baseType: !138)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !31, file: !18, line: 360, baseType: !237, size: 64, align: 64, offset: 1216)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !18, line: 319, baseType: !223)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !31, file: !18, line: 363, baseType: !239, size: 64, align: 64, offset: 1280)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !18, line: 304, baseType: !241)
!241 = !DICompositeType(tag: DW_TAG_structure_type, file: !18, line: 301, size: 128, align: 64, elements: !242)
!242 = !{!243, !264}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !241, file: !18, line: 302, baseType: !244, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !18, line: 193, baseType: !245)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64, align: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{!56, !50, !248, !56}
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !18, line: 191, baseType: !250)
!250 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !18, line: 178, size: 640, align: 64, elements: !251)
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !261, !262, !263}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !250, file: !18, line: 179, baseType: !102, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !250, file: !18, line: 180, baseType: !50, size: 64, align: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !250, file: !18, line: 181, baseType: !22, size: 64, align: 64, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !250, file: !18, line: 182, baseType: !22, size: 64, align: 64, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !250, file: !18, line: 184, baseType: !56, size: 32, align: 32, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !250, file: !18, line: 185, baseType: !56, size: 32, align: 32, offset: 288)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !250, file: !18, line: 186, baseType: !64, size: 64, align: 64, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !250, file: !18, line: 187, baseType: !260, size: 64, align: 64, offset: 384)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !250, file: !18, line: 188, baseType: !260, size: 64, align: 64, offset: 448)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !250, file: !18, line: 189, baseType: !260, size: 64, align: 64, offset: 512)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !250, file: !18, line: 190, baseType: !102, size: 64, align: 64, offset: 576)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !241, file: !18, line: 303, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !18, line: 194, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64, align: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{null, !50, !248}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !31, file: !18, line: 366, baseType: !109, size: 64, align: 64, offset: 1344)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !31, file: !18, line: 368, baseType: !40, size: 64, align: 64, offset: 1408)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !31, file: !18, line: 372, baseType: !272, size: 64, align: 64, offset: 1472)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !18, line: 233, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DISubroutineType(types: !275)
!275 = !{!56, !50, !276, !102}
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !18, line: 232, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!56, !50, !102}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !31, file: !18, line: 375, baseType: !155, size: 64, align: 64, offset: 1536)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !31, file: !18, line: 379, baseType: !282, size: 64, align: 64, offset: 1600)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !18, line: 322, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64, align: 64)
!284 = !DISubroutineType(types: !285)
!285 = !{!50, !50, !50, !56}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !31, file: !18, line: 382, baseType: !22, size: 64, align: 64, offset: 1664)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !31, file: !18, line: 385, baseType: !288, size: 64, align: 64, offset: 1728)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !18, line: 323, baseType: !128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !31, file: !18, line: 386, baseType: !290, size: 64, align: 64, offset: 1792)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !18, line: 324, baseType: !128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !31, file: !18, line: 389, baseType: !292, size: 64, align: 64, offset: 1856)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !294, line: 40, size: 256, align: 64, elements: !295)
!294 = !DIFile(filename: "Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!295 = !{!296, !297, !299, !300}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !293, file: !294, line: 41, baseType: !40, size: 64, align: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !293, file: !294, line: 42, baseType: !298, size: 64, align: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !294, line: 18, baseType: !138)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !293, file: !294, line: 43, baseType: !56, size: 32, align: 32, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !293, file: !294, line: 45, baseType: !40, size: 64, align: 64, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !31, file: !18, line: 390, baseType: !302, size: 64, align: 64, offset: 1920)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64, align: 64)
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !304, line: 18, size: 320, align: 64, elements: !305)
!304 = !DIFile(filename: "Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !303, file: !304, line: 19, baseType: !64, size: 64, align: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !303, file: !304, line: 20, baseType: !56, size: 32, align: 32, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !303, file: !304, line: 21, baseType: !22, size: 64, align: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !303, file: !304, line: 22, baseType: !56, size: 32, align: 32, offset: 192)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !303, file: !304, line: 23, baseType: !64, size: 64, align: 64, offset: 256)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !31, file: !18, line: 391, baseType: !312, size: 64, align: 64, offset: 1984)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !314, line: 11, size: 320, align: 64, elements: !315)
!314 = !DIFile(filename: "Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!315 = !{!316, !317, !322, !327, !328}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !313, file: !314, line: 12, baseType: !64, size: 64, align: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !313, file: !314, line: 13, baseType: !318, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !314, line: 8, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64, align: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!50, !50, !102}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !313, file: !314, line: 14, baseType: !323, size: 64, align: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !314, line: 9, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!56, !50, !50, !102}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !313, file: !314, line: 15, baseType: !64, size: 64, align: 64, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !313, file: !314, line: 16, baseType: !102, size: 64, align: 64, offset: 256)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !31, file: !18, line: 392, baseType: !30, size: 64, align: 64, offset: 2048)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !31, file: !18, line: 393, baseType: !50, size: 64, align: 64, offset: 2112)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !31, file: !18, line: 394, baseType: !332, size: 64, align: 64, offset: 2176)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !18, line: 325, baseType: !147)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !31, file: !18, line: 395, baseType: !334, size: 64, align: 64, offset: 2240)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !18, line: 326, baseType: !223)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !31, file: !18, line: 396, baseType: !22, size: 64, align: 64, offset: 2304)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !31, file: !18, line: 397, baseType: !337, size: 64, align: 64, offset: 2368)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !18, line: 327, baseType: !223)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !31, file: !18, line: 398, baseType: !339, size: 64, align: 64, offset: 2432)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !18, line: 329, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64, align: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!50, !30, !22}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !31, file: !18, line: 399, baseType: !344, size: 64, align: 64, offset: 2496)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !18, line: 328, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64, align: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!50, !30, !50, !50}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !31, file: !18, line: 400, baseType: !349, size: 64, align: 64, offset: 2560)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !18, line: 307, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{null, !102}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !31, file: !18, line: 401, baseType: !155, size: 64, align: 64, offset: 2624)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !31, file: !18, line: 402, baseType: !50, size: 64, align: 64, offset: 2688)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !31, file: !18, line: 403, baseType: !50, size: 64, align: 64, offset: 2752)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !31, file: !18, line: 404, baseType: !50, size: 64, align: 64, offset: 2816)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !31, file: !18, line: 405, baseType: !50, size: 64, align: 64, offset: 2880)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !31, file: !18, line: 406, baseType: !50, size: 64, align: 64, offset: 2944)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !31, file: !18, line: 407, baseType: !46, size: 64, align: 64, offset: 3008)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !31, file: !18, line: 410, baseType: !361, size: 32, align: 32, offset: 3072)
!361 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !31, file: !18, line: 412, baseType: !46, size: 64, align: 64, offset: 3136)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "decoder", scope: !14, file: !13, line: 225, baseType: !50, size: 64, align: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !14, file: !13, line: 226, baseType: !50, size: 64, align: 64, offset: 192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pendingcr", scope: !14, file: !13, line: 227, baseType: !56, size: 1, align: 32, offset: 256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !14, file: !13, line: 228, baseType: !56, size: 1, align: 32, offset: 257)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "seennl", scope: !14, file: !13, line: 229, baseType: !361, size: 3, align: 32, offset: 258)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !4, line: 351, baseType: !370)
!370 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 217, size: 384, align: 64, elements: !371)
!371 = !{!372, !373, !374, !375, !383}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !370, file: !4, line: 291, baseType: !17, size: 128, align: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !370, file: !4, line: 292, baseType: !22, size: 64, align: 64, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !370, file: !4, line: 293, baseType: !231, size: 64, align: 64, offset: 192)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !370, file: !4, line: 349, baseType: !376, size: 32, align: 32, offset: 256)
!376 = !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !4, line: 294, size: 32, align: 32, elements: !377)
!377 = !{!378, !379, !380, !381, !382}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !376, file: !4, line: 303, baseType: !361, size: 2, align: 32)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !376, file: !4, line: 331, baseType: !361, size: 3, align: 32, offset: 2)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !376, file: !4, line: 336, baseType: !361, size: 1, align: 32, offset: 5)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !376, file: !4, line: 340, baseType: !361, size: 1, align: 32, offset: 6)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !376, file: !4, line: 345, baseType: !361, size: 1, align: 32, offset: 7)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !370, file: !4, line: 350, baseType: !384, size: 64, align: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64, align: 64)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !108, line: 90, baseType: !56)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !4, line: 363, baseType: !388)
!388 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 356, size: 576, align: 64, elements: !389)
!389 = !{!390, !391, !392, !393}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !388, file: !4, line: 357, baseType: !369, size: 384, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !388, file: !4, line: 358, baseType: !22, size: 64, align: 64, offset: 384)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !388, file: !4, line: 360, baseType: !64, size: 64, align: 64, offset: 448)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !388, file: !4, line: 361, baseType: !22, size: 64, align: 64, offset: 512)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64, align: 64)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyUnicodeObject", file: !4, line: 376, baseType: !396)
!396 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 368, size: 640, align: 64, elements: !397)
!397 = !{!398, !399}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !396, file: !4, line: 369, baseType: !387, size: 576, align: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !396, file: !4, line: 375, baseType: !400, size: 64, align: 64, offset: 576)
!400 = !DICompositeType(tag: DW_TAG_union_type, scope: !396, file: !4, line: 370, size: 64, align: 64, elements: !401)
!401 = !{!402, !403, !407, !410}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "any", scope: !400, file: !4, line: 371, baseType: !102, size: 64, align: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "latin1", scope: !400, file: !4, line: 372, baseType: !404, size: 64, align: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS1", file: !4, line: 134, baseType: !406)
!406 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ucs2", scope: !400, file: !4, line: 373, baseType: !408, size: 64, align: 64)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64, align: 64)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS2", file: !4, line: 129, baseType: !89)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ucs4", scope: !400, file: !4, line: 374, baseType: !411, size: 64, align: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UCS4", file: !4, line: 121, baseType: !361)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64, align: 64)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64, align: 64)
!416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64, align: 64)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !412)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGC_Head", file: !421, line: 253, baseType: !422)
!421 = !DIFile(filename: "Include/objimpl.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!422 = !DICompositeType(tag: DW_TAG_union_type, name: "_gc_head", file: !421, line: 246, size: 192, align: 64, elements: !423)
!423 = !{!424, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !422, file: !421, line: 251, baseType: !425, size: 192, align: 64)
!425 = !DICompositeType(tag: DW_TAG_structure_type, scope: !422, file: !421, line: 247, size: 192, align: 64, elements: !426)
!426 = !{!427, !429, !430}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "gc_next", scope: !425, file: !421, line: 248, baseType: !428, size: 64, align: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "gc_prev", scope: !425, file: !421, line: 249, baseType: !428, size: 64, align: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "gc_refs", scope: !425, file: !421, line: 250, baseType: !22, size: 64, align: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !422, file: !421, line: 252, baseType: !432, size: 64, align: 64)
!432 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64, align: 64)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyLongObject", file: !436, line: 10, baseType: !437)
!436 = !DIFile(filename: "Include/longobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "_longobject", file: !438, line: 89, size: 256, align: 64, elements: !439)
!438 = !DIFile(filename: "Include/longintrepr.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !437, file: !438, line: 90, baseType: !34, size: 192, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ob_digit", scope: !437, file: !438, line: 91, baseType: !442, size: 32, align: 32, offset: 192)
!442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 32, align: 32, elements: !94)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "digit", file: !438, line: 49, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !445, line: 51, baseType: !361)
!445 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !448, line: 41, baseType: !449)
!448 = !DIFile(filename: "Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!449 = !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 31, size: 320, align: 64, elements: !450)
!450 = !{!451, !452, !453}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !449, file: !448, line: 32, baseType: !34, size: 192, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !449, file: !448, line: 33, baseType: !231, size: 64, align: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !449, file: !448, line: 34, baseType: !93, size: 8, align: 8, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64, align: 64)
!457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !406)
!458 = !{!459, !519, !554, !557, !571, !575, !579, !583, !587, !591, !595, !606, !623, !636, !654, !660, !664, !670, !684, !692, !741, !806, !830, !881, !890, !910, !1015, !1021, !1039, !1096, !1108, !1115, !1170, !1232, !1238, !1243, !1256, !1296, !1300, !1304, !1308, !1312, !1316, !1320, !1401, !1419, !1428, !1435, !1513, !1519, !1527, !1531, !1536, !1540, !1544, !1552, !1737, !1741, !1745, !1749, !1753, !1757, !1761, !1765, !1769}
!459 = !DISubprogram(name: "_PyIncrementalNewlineDecoder_decode", scope: !13, file: !13, line: 298, type: !284, isLocal: false, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32)* @_PyIncrementalNewlineDecoder_decode, variables: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !470, !471, !472, !474, !479, !481, !483, !484, !485, !486, !487, !494, !498, !501, !505, !507, !508, !509, !510, !511, !515, !517}
!461 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !459, file: !13, line: 298, type: !50)
!462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "input", arg: 2, scope: !459, file: !13, line: 299, type: !50)
!463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "final", arg: 3, scope: !459, file: !13, line: 299, type: !56)
!464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "output", scope: !459, file: !13, line: 301, type: !50)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "output_len", scope: !459, file: !13, line: 302, type: !22)
!466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !459, file: !13, line: 303, type: !11)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !468, file: !13, line: 327, type: !56)
!468 = distinct !DILexicalBlock(scope: !469, file: !13, line: 325, column: 55)
!469 = distinct !DILexicalBlock(scope: !459, file: !13, line: 325, column: 9)
!470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "modified", scope: !468, file: !13, line: 328, type: !50)
!471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !468, file: !13, line: 329, type: !64)
!472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !473, file: !13, line: 339, type: !50)
!473 = distinct !DILexicalBlock(scope: !468, file: !13, line: 339, column: 12)
!474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "modified", scope: !475, file: !13, line: 352, type: !50)
!475 = distinct !DILexicalBlock(scope: !476, file: !13, line: 351, column: 9)
!476 = distinct !DILexicalBlock(scope: !477, file: !13, line: 349, column: 13)
!477 = distinct !DILexicalBlock(scope: !478, file: !13, line: 348, column: 17)
!478 = distinct !DILexicalBlock(scope: !459, file: !13, line: 348, column: 9)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !480, file: !13, line: 355, type: !50)
!480 = distinct !DILexicalBlock(scope: !475, file: !13, line: 355, column: 16)
!481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in_str", scope: !482, file: !13, line: 364, type: !102)
!482 = distinct !DILexicalBlock(scope: !459, file: !13, line: 363, column: 5)
!483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !482, file: !13, line: 365, type: !22)
!484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seennl", scope: !482, file: !13, line: 366, type: !56)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "only_lf", scope: !482, file: !13, line: 367, type: !56)
!486 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !482, file: !13, line: 368, type: !56)
!487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !488, file: !13, line: 393, type: !22)
!488 = distinct !DILexicalBlock(scope: !489, file: !13, line: 392, column: 22)
!489 = distinct !DILexicalBlock(scope: !490, file: !13, line: 390, column: 21)
!490 = distinct !DILexicalBlock(scope: !491, file: !13, line: 389, column: 65)
!491 = distinct !DILexicalBlock(scope: !492, file: !13, line: 388, column: 17)
!492 = distinct !DILexicalBlock(scope: !493, file: !13, line: 384, column: 22)
!493 = distinct !DILexicalBlock(scope: !482, file: !13, line: 384, column: 13)
!494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !495, file: !13, line: 395, type: !412)
!495 = distinct !DILexicalBlock(scope: !496, file: !13, line: 394, column: 30)
!496 = distinct !DILexicalBlock(scope: !497, file: !13, line: 394, column: 21)
!497 = distinct !DILexicalBlock(scope: !488, file: !13, line: 394, column: 21)
!498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !499, file: !13, line: 413, type: !22)
!499 = distinct !DILexicalBlock(scope: !500, file: !13, line: 412, column: 36)
!500 = distinct !DILexicalBlock(scope: !493, file: !13, line: 412, column: 18)
!501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !502, file: !13, line: 418, type: !412)
!502 = distinct !DILexicalBlock(scope: !503, file: !13, line: 417, column: 22)
!503 = distinct !DILexicalBlock(scope: !504, file: !13, line: 417, column: 13)
!504 = distinct !DILexicalBlock(scope: !499, file: !13, line: 417, column: 13)
!505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "translated", scope: !506, file: !13, line: 442, type: !102)
!506 = distinct !DILexicalBlock(scope: !500, file: !13, line: 441, column: 14)
!507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !506, file: !13, line: 443, type: !56)
!508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in_str", scope: !506, file: !13, line: 444, type: !102)
!509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !506, file: !13, line: 445, type: !22)
!510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !506, file: !13, line: 445, type: !22)
!511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !512, file: !13, line: 459, type: !412)
!512 = distinct !DILexicalBlock(scope: !513, file: !13, line: 458, column: 22)
!513 = distinct !DILexicalBlock(scope: !514, file: !13, line: 458, column: 13)
!514 = distinct !DILexicalBlock(scope: !506, file: !13, line: 458, column: 13)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !516, file: !13, line: 482, type: !50)
!516 = distinct !DILexicalBlock(scope: !506, file: !13, line: 482, column: 16)
!517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !518, file: !13, line: 494, type: !50)
!518 = distinct !DILexicalBlock(scope: !459, file: !13, line: 494, column: 8)
!519 = !DISubprogram(name: "_PyIO_find_line_ending", scope: !13, file: !13, line: 1681, type: !520, isLocal: false, isDefinition: true, scopeLine: 1684, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i32, i32, %struct._object*, i32, i8*, i8*, i64*)* @_PyIO_find_line_ending, variables: !522)
!520 = !DISubroutineType(types: !521)
!521 = !{!22, !56, !56, !50, !56, !64, !64, !260}
!522 = !{!523, !524, !525, !526, !527, !528, !529, !530, !531, !534, !537, !541, !543, !544, !547, !549, !550, !551, !553}
!523 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "translated", arg: 1, scope: !519, file: !13, line: 1682, type: !56)
!524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "universal", arg: 2, scope: !519, file: !13, line: 1682, type: !56)
!525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "readnl", arg: 3, scope: !519, file: !13, line: 1682, type: !50)
!526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kind", arg: 4, scope: !519, file: !13, line: 1683, type: !56)
!527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 5, scope: !519, file: !13, line: 1683, type: !64)
!528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 6, scope: !519, file: !13, line: 1683, type: !64)
!529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "consumed", arg: 7, scope: !519, file: !13, line: 1683, type: !260)
!530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !519, file: !13, line: 1685, type: !22)
!531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !532, file: !13, line: 1689, type: !64)
!532 = distinct !DILexicalBlock(scope: !533, file: !13, line: 1687, column: 21)
!533 = distinct !DILexicalBlock(scope: !519, file: !13, line: 1687, column: 9)
!534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !535, file: !13, line: 1701, type: !64)
!535 = distinct !DILexicalBlock(scope: !536, file: !13, line: 1697, column: 25)
!536 = distinct !DILexicalBlock(scope: !533, file: !13, line: 1697, column: 14)
!537 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !538, file: !13, line: 1703, type: !412)
!538 = distinct !DILexicalBlock(scope: !539, file: !13, line: 1702, column: 18)
!539 = distinct !DILexicalBlock(scope: !540, file: !13, line: 1702, column: 9)
!540 = distinct !DILexicalBlock(scope: !535, file: !13, line: 1702, column: 9)
!541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "readnl_len", scope: !542, file: !13, line: 1726, type: !22)
!542 = distinct !DILexicalBlock(scope: !536, file: !13, line: 1724, column: 10)
!543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nl", scope: !542, file: !13, line: 1727, type: !64)
!544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !545, file: !13, line: 1731, type: !64)
!545 = distinct !DILexicalBlock(scope: !546, file: !13, line: 1730, column: 30)
!546 = distinct !DILexicalBlock(scope: !542, file: !13, line: 1730, column: 13)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !548, file: !13, line: 1738, type: !64)
!548 = distinct !DILexicalBlock(scope: !546, file: !13, line: 1737, column: 14)
!549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !548, file: !13, line: 1739, type: !64)
!550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !548, file: !13, line: 1740, type: !64)
!551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !552, file: !13, line: 1744, type: !22)
!552 = distinct !DILexicalBlock(scope: !548, file: !13, line: 1743, column: 27)
!553 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !552, file: !13, line: 1745, type: !64)
!554 = !DISubprogram(name: "textiobase_detach", scope: !13, file: !13, line: 62, type: !129, isLocal: true, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @textiobase_detach, variables: !555)
!555 = !{!556}
!556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !554, file: !13, line: 62, type: !50)
!557 = !DISubprogram(name: "_unsupported", scope: !13, file: !13, line: 46, type: !558, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*)* @_unsupported, variables: !560)
!558 = !DISubroutineType(types: !559)
!559 = !{!50, !40}
!560 = !{!561, !562}
!561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "message", arg: 1, scope: !557, file: !13, line: 46, type: !40)
!562 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !557, file: !13, line: 48, type: !563)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64, align: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyIO_State", file: !565, line: 135, baseType: !566)
!565 = !DIFile(filename: "./Modules/_io/_iomodule.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!566 = !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 130, size: 192, align: 64, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !566, file: !565, line: 131, baseType: !56, size: 32, align: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "locale_module", scope: !566, file: !565, line: 132, baseType: !50, size: 64, align: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported_operation", scope: !566, file: !565, line: 134, baseType: !50, size: 64, align: 64, offset: 128)
!571 = !DISubprogram(name: "textiobase_read", scope: !13, file: !13, line: 75, type: !139, isLocal: true, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @textiobase_read, variables: !572)
!572 = !{!573, !574}
!573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !571, file: !13, line: 75, type: !50)
!574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !571, file: !13, line: 75, type: !50)
!575 = !DISubprogram(name: "textiobase_readline", scope: !13, file: !13, line: 87, type: !139, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @textiobase_readline, variables: !576)
!576 = !{!577, !578}
!577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !575, file: !13, line: 87, type: !50)
!578 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !575, file: !13, line: 87, type: !50)
!579 = !DISubprogram(name: "textiobase_write", scope: !13, file: !13, line: 99, type: !139, isLocal: true, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @textiobase_write, variables: !580)
!580 = !{!581, !582}
!581 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !579, file: !13, line: 99, type: !50)
!582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !579, file: !13, line: 99, type: !50)
!583 = !DISubprogram(name: "textiobase_encoding_get", scope: !13, file: !13, line: 111, type: !320, isLocal: true, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @textiobase_encoding_get, variables: !584)
!584 = !{!585, !586}
!585 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !583, file: !13, line: 111, type: !50)
!586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !583, file: !13, line: 111, type: !102)
!587 = !DISubprogram(name: "textiobase_newlines_get", scope: !13, file: !13, line: 125, type: !320, isLocal: true, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @textiobase_newlines_get, variables: !588)
!588 = !{!589, !590}
!589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !587, file: !13, line: 125, type: !50)
!590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !587, file: !13, line: 125, type: !102)
!591 = !DISubprogram(name: "textiobase_errors_get", scope: !13, file: !13, line: 137, type: !320, isLocal: true, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @textiobase_errors_get, variables: !592)
!592 = !{!593, !594}
!593 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !591, file: !13, line: 137, type: !50)
!594 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !591, file: !13, line: 137, type: !102)
!595 = !DISubprogram(name: "check_decoded", scope: !13, file: !13, line: 274, type: !157, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @check_decoded, variables: !596)
!596 = !{!597, !598, !602}
!597 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "decoded", arg: 1, scope: !595, file: !13, line: 274, type: !50)
!598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !599, file: !13, line: 282, type: !50)
!599 = distinct !DILexicalBlock(scope: !600, file: !13, line: 282, column: 12)
!600 = distinct !DILexicalBlock(scope: !601, file: !13, line: 278, column: 82)
!601 = distinct !DILexicalBlock(scope: !595, file: !13, line: 278, column: 9)
!602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !603, file: !13, line: 286, type: !50)
!603 = distinct !DILexicalBlock(scope: !604, file: !13, line: 286, column: 12)
!604 = distinct !DILexicalBlock(scope: !605, file: !13, line: 285, column: 119)
!605 = distinct !DILexicalBlock(scope: !595, file: !13, line: 285, column: 9)
!606 = !DISubprogram(name: "incrementalnewlinedecoder_dealloc", scope: !13, file: !13, line: 266, type: !607, isLocal: true, isDefinition: true, scopeLine: 267, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.nldecoder_object*)* @incrementalnewlinedecoder_dealloc, variables: !609)
!607 = !DISubroutineType(types: !608)
!608 = !{null, !11}
!609 = !{!610, !611, !613, !617, !619}
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !606, file: !13, line: 266, type: !11)
!611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !612, file: !13, line: 268, type: !50)
!612 = distinct !DILexicalBlock(scope: !606, file: !13, line: 268, column: 8)
!613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !614, file: !13, line: 268, type: !50)
!614 = distinct !DILexicalBlock(scope: !615, file: !13, line: 268, column: 121)
!615 = distinct !DILexicalBlock(scope: !616, file: !13, line: 268, column: 86)
!616 = distinct !DILexicalBlock(scope: !612, file: !13, line: 268, column: 63)
!617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !618, file: !13, line: 269, type: !50)
!618 = distinct !DILexicalBlock(scope: !606, file: !13, line: 269, column: 8)
!619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !620, file: !13, line: 269, type: !50)
!620 = distinct !DILexicalBlock(scope: !621, file: !13, line: 269, column: 119)
!621 = distinct !DILexicalBlock(scope: !622, file: !13, line: 269, column: 85)
!622 = distinct !DILexicalBlock(scope: !618, file: !13, line: 269, column: 62)
!623 = !DISubprogram(name: "incrementalnewlinedecoder_decode", scope: !13, file: !13, line: 499, type: !624, isLocal: true, isDefinition: true, scopeLine: 501, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_decode, variables: !626)
!624 = !DISubroutineType(types: !625)
!625 = !{!50, !11, !50, !50}
!626 = !{!627, !628, !629, !630, !634, !635}
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !623, file: !13, line: 499, type: !11)
!628 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !623, file: !13, line: 500, type: !50)
!629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !623, file: !13, line: 500, type: !50)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !623, file: !13, line: 502, type: !631)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 192, align: 64, elements: !632)
!632 = !{!633}
!633 = !DISubrange(count: 3)
!634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input", scope: !623, file: !13, line: 503, type: !50)
!635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "final", scope: !623, file: !13, line: 504, type: !56)
!636 = !DISubprogram(name: "incrementalnewlinedecoder_getstate", scope: !13, file: !13, line: 513, type: !637, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_getstate, variables: !639)
!637 = !DISubroutineType(types: !638)
!638 = !{!50, !11, !50}
!639 = !{!640, !641, !642, !643, !645, !648, !652}
!640 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !636, file: !13, line: 513, type: !11)
!641 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !636, file: !13, line: 513, type: !50)
!642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !636, file: !13, line: 515, type: !50)
!643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flag", scope: !636, file: !13, line: 516, type: !644)
!644 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!645 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !646, file: !13, line: 519, type: !50)
!646 = distinct !DILexicalBlock(scope: !647, file: !13, line: 518, column: 45)
!647 = distinct !DILexicalBlock(scope: !636, file: !13, line: 518, column: 9)
!648 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !649, file: !13, line: 524, type: !50)
!649 = distinct !DILexicalBlock(scope: !650, file: !13, line: 524, column: 16)
!650 = distinct !DILexicalBlock(scope: !651, file: !13, line: 523, column: 65)
!651 = distinct !DILexicalBlock(scope: !646, file: !13, line: 523, column: 13)
!652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !653, file: !13, line: 528, type: !50)
!653 = distinct !DILexicalBlock(scope: !646, file: !13, line: 528, column: 12)
!654 = !DISubprogram(name: "incrementalnewlinedecoder_setstate", scope: !13, file: !13, line: 541, type: !637, isLocal: true, isDefinition: true, scopeLine: 542, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_setstate, variables: !655)
!655 = !{!656, !657, !658, !659}
!656 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !654, file: !13, line: 541, type: !11)
!657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 2, scope: !654, file: !13, line: 541, type: !50)
!658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !654, file: !13, line: 543, type: !50)
!659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flag", scope: !654, file: !13, line: 544, type: !644)
!660 = !DISubprogram(name: "incrementalnewlinedecoder_reset", scope: !13, file: !13, line: 560, type: !637, isLocal: true, isDefinition: true, scopeLine: 561, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, %struct._object*)* @incrementalnewlinedecoder_reset, variables: !661)
!661 = !{!662, !663}
!662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !660, file: !13, line: 560, type: !11)
!663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !660, file: !13, line: 560, type: !50)
!664 = !DISubprogram(name: "incrementalnewlinedecoder_newlines_get", scope: !13, file: !13, line: 571, type: !665, isLocal: true, isDefinition: true, scopeLine: 572, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.nldecoder_object*, i8*)* @incrementalnewlinedecoder_newlines_get, variables: !667)
!665 = !DISubroutineType(types: !666)
!666 = !{!50, !11, !102}
!667 = !{!668, !669}
!668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !664, file: !13, line: 571, type: !11)
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !664, file: !13, line: 571, type: !102)
!670 = !DISubprogram(name: "incrementalnewlinedecoder_init", scope: !13, file: !13, line: 233, type: !671, isLocal: true, isDefinition: true, scopeLine: 235, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.nldecoder_object*, %struct._object*, %struct._object*)* @incrementalnewlinedecoder_init, variables: !673)
!671 = !DISubroutineType(types: !672)
!672 = !{!56, !11, !50, !50}
!673 = !{!674, !675, !676, !677, !678, !679, !680}
!674 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !670, file: !13, line: 233, type: !11)
!675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !670, file: !13, line: 234, type: !50)
!676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !670, file: !13, line: 234, type: !50)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoder", scope: !670, file: !13, line: 236, type: !50)
!678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "translate", scope: !670, file: !13, line: 237, type: !56)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !670, file: !13, line: 238, type: !50)
!680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !670, file: !13, line: 239, type: !681)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 256, align: 64, elements: !682)
!682 = !{!683}
!683 = !DISubrange(count: 4)
!684 = !DISubprogram(name: "find_control_char", scope: !13, file: !13, line: 1663, type: !685, isLocal: true, isDefinition: true, scopeLine: 1664, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i32, i8*, i8*, i32)* @find_control_char, variables: !687)
!685 = !DISubroutineType(types: !686)
!686 = !{!64, !56, !64, !64, !412}
!687 = !{!688, !689, !690, !691}
!688 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kind", arg: 1, scope: !684, file: !13, line: 1663, type: !56)
!689 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !684, file: !13, line: 1663, type: !64)
!690 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 3, scope: !684, file: !13, line: 1663, type: !64)
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ch", arg: 4, scope: !684, file: !13, line: 1663, type: !412)
!692 = !DISubprogram(name: "textiowrapper_dealloc", scope: !13, file: !13, line: 1150, type: !693, isLocal: true, isDefinition: true, scopeLine: 1151, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.textio*)* @textiowrapper_dealloc, variables: !731)
!693 = !DISubroutineType(types: !694)
!694 = !{null, !695}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64, align: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "textio", file: !13, line: 743, baseType: !697)
!697 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 686, size: 1536, align: 64, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !697, file: !13, line: 688, baseType: !17, size: 128, align: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !697, file: !13, line: 689, baseType: !56, size: 32, align: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !697, file: !13, line: 690, baseType: !56, size: 32, align: 32, offset: 160)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !697, file: !13, line: 691, baseType: !22, size: 64, align: 64, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !697, file: !13, line: 692, baseType: !50, size: 64, align: 64, offset: 256)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !697, file: !13, line: 693, baseType: !50, size: 64, align: 64, offset: 320)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !697, file: !13, line: 694, baseType: !50, size: 64, align: 64, offset: 384)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "decoder", scope: !697, file: !13, line: 695, baseType: !50, size: 64, align: 64, offset: 448)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "readnl", scope: !697, file: !13, line: 696, baseType: !50, size: 64, align: 64, offset: 512)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !697, file: !13, line: 697, baseType: !50, size: 64, align: 64, offset: 576)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "writenl", scope: !697, file: !13, line: 698, baseType: !40, size: 64, align: 64, offset: 640)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "line_buffering", scope: !697, file: !13, line: 699, baseType: !42, size: 8, align: 8, offset: 704)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "write_through", scope: !697, file: !13, line: 700, baseType: !42, size: 8, align: 8, offset: 712)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "readuniversal", scope: !697, file: !13, line: 701, baseType: !42, size: 8, align: 8, offset: 720)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "readtranslate", scope: !697, file: !13, line: 702, baseType: !42, size: 8, align: 8, offset: 728)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "writetranslate", scope: !697, file: !13, line: 703, baseType: !42, size: 8, align: 8, offset: 736)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !697, file: !13, line: 704, baseType: !42, size: 8, align: 8, offset: 744)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "has_read1", scope: !697, file: !13, line: 705, baseType: !42, size: 8, align: 8, offset: 752)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "telling", scope: !697, file: !13, line: 706, baseType: !42, size: 8, align: 8, offset: 760)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "finalizing", scope: !697, file: !13, line: 707, baseType: !42, size: 8, align: 8, offset: 768)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "encodefunc", scope: !697, file: !13, line: 709, baseType: !720, size: 64, align: 64, offset: 832)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "encodefunc_t", file: !13, line: 684, baseType: !138)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_start_of_stream", scope: !697, file: !13, line: 711, baseType: !42, size: 8, align: 8, offset: 896)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_chars", scope: !697, file: !13, line: 722, baseType: !50, size: 64, align: 64, offset: 960)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_chars_used", scope: !697, file: !13, line: 723, baseType: !22, size: 64, align: 64, offset: 1024)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "pending_bytes", scope: !697, file: !13, line: 724, baseType: !50, size: 64, align: 64, offset: 1088)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "pending_bytes_count", scope: !697, file: !13, line: 726, baseType: !22, size: 64, align: 64, offset: 1152)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot", scope: !697, file: !13, line: 733, baseType: !50, size: 64, align: 64, offset: 1216)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "b2cratio", scope: !697, file: !13, line: 736, baseType: !432, size: 64, align: 64, offset: 1280)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !697, file: !13, line: 739, baseType: !50, size: 64, align: 64, offset: 1344)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "weakreflist", scope: !697, file: !13, line: 741, baseType: !50, size: 64, align: 64, offset: 1408)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !697, file: !13, line: 742, baseType: !50, size: 64, align: 64, offset: 1472)
!731 = !{!732, !733, !735, !737}
!732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !692, file: !13, line: 1150, type: !695)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "g", scope: !734, file: !13, line: 1156, type: !419)
!734 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1156, column: 8)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !736, file: !13, line: 1159, type: !50)
!736 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1159, column: 8)
!737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !738, file: !13, line: 1159, type: !50)
!738 = distinct !DILexicalBlock(scope: !739, file: !13, line: 1159, column: 115)
!739 = distinct !DILexicalBlock(scope: !740, file: !13, line: 1159, column: 83)
!740 = distinct !DILexicalBlock(scope: !736, file: !13, line: 1159, column: 60)
!741 = !DISubprogram(name: "_textiowrapper_clear", scope: !13, file: !13, line: 1133, type: !742, isLocal: true, isDefinition: true, scopeLine: 1134, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*)* @_textiowrapper_clear, variables: !744)
!742 = !DISubroutineType(types: !743)
!743 = !{!56, !695}
!744 = !{!745, !746, !748, !752, !754, !758, !760, !764, !766, !770, !772, !776, !778, !782, !784, !788, !790, !794, !796, !800, !802}
!745 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !741, file: !13, line: 1133, type: !695)
!746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !747, file: !13, line: 1136, type: !50)
!747 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1136, column: 8)
!748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !749, file: !13, line: 1136, type: !50)
!749 = distinct !DILexicalBlock(scope: !750, file: !13, line: 1136, column: 119)
!750 = distinct !DILexicalBlock(scope: !751, file: !13, line: 1136, column: 85)
!751 = distinct !DILexicalBlock(scope: !747, file: !13, line: 1136, column: 62)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !753, file: !13, line: 1137, type: !50)
!753 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1137, column: 8)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !755, file: !13, line: 1137, type: !50)
!755 = distinct !DILexicalBlock(scope: !756, file: !13, line: 1137, column: 123)
!756 = distinct !DILexicalBlock(scope: !757, file: !13, line: 1137, column: 87)
!757 = distinct !DILexicalBlock(scope: !753, file: !13, line: 1137, column: 64)
!758 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !759, file: !13, line: 1138, type: !50)
!759 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1138, column: 8)
!760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !761, file: !13, line: 1138, type: !50)
!761 = distinct !DILexicalBlock(scope: !762, file: !13, line: 1138, column: 121)
!762 = distinct !DILexicalBlock(scope: !763, file: !13, line: 1138, column: 86)
!763 = distinct !DILexicalBlock(scope: !759, file: !13, line: 1138, column: 63)
!764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !765, file: !13, line: 1139, type: !50)
!765 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1139, column: 8)
!766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !767, file: !13, line: 1139, type: !50)
!767 = distinct !DILexicalBlock(scope: !768, file: !13, line: 1139, column: 121)
!768 = distinct !DILexicalBlock(scope: !769, file: !13, line: 1139, column: 86)
!769 = distinct !DILexicalBlock(scope: !765, file: !13, line: 1139, column: 63)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !771, file: !13, line: 1140, type: !50)
!771 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1140, column: 8)
!772 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !773, file: !13, line: 1140, type: !50)
!773 = distinct !DILexicalBlock(scope: !774, file: !13, line: 1140, column: 119)
!774 = distinct !DILexicalBlock(scope: !775, file: !13, line: 1140, column: 85)
!775 = distinct !DILexicalBlock(scope: !771, file: !13, line: 1140, column: 62)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !777, file: !13, line: 1141, type: !50)
!777 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1141, column: 8)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !779, file: !13, line: 1141, type: !50)
!779 = distinct !DILexicalBlock(scope: !780, file: !13, line: 1141, column: 133)
!780 = distinct !DILexicalBlock(scope: !781, file: !13, line: 1141, column: 92)
!781 = distinct !DILexicalBlock(scope: !777, file: !13, line: 1141, column: 69)
!782 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !783, file: !13, line: 1142, type: !50)
!783 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1142, column: 8)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !785, file: !13, line: 1142, type: !50)
!785 = distinct !DILexicalBlock(scope: !786, file: !13, line: 1142, column: 133)
!786 = distinct !DILexicalBlock(scope: !787, file: !13, line: 1142, column: 92)
!787 = distinct !DILexicalBlock(scope: !783, file: !13, line: 1142, column: 69)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !789, file: !13, line: 1143, type: !50)
!789 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1143, column: 8)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !791, file: !13, line: 1143, type: !50)
!791 = distinct !DILexicalBlock(scope: !792, file: !13, line: 1143, column: 123)
!792 = distinct !DILexicalBlock(scope: !793, file: !13, line: 1143, column: 87)
!793 = distinct !DILexicalBlock(scope: !789, file: !13, line: 1143, column: 64)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !795, file: !13, line: 1144, type: !50)
!795 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1144, column: 8)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !797, file: !13, line: 1144, type: !50)
!797 = distinct !DILexicalBlock(scope: !798, file: !13, line: 1144, column: 119)
!798 = distinct !DILexicalBlock(scope: !799, file: !13, line: 1144, column: 85)
!799 = distinct !DILexicalBlock(scope: !795, file: !13, line: 1144, column: 62)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !801, file: !13, line: 1145, type: !50)
!801 = distinct !DILexicalBlock(scope: !741, file: !13, line: 1145, column: 8)
!802 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !803, file: !13, line: 1145, type: !50)
!803 = distinct !DILexicalBlock(scope: !804, file: !13, line: 1145, column: 113)
!804 = distinct !DILexicalBlock(scope: !805, file: !13, line: 1145, column: 82)
!805 = distinct !DILexicalBlock(scope: !801, file: !13, line: 1145, column: 59)
!806 = !DISubprogram(name: "textiowrapper_repr", scope: !13, file: !13, line: 2469, type: !807, isLocal: true, isDefinition: true, scopeLine: 2470, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*)* @textiowrapper_repr, variables: !809)
!807 = !DISubroutineType(types: !808)
!808 = !{!50, !695}
!809 = !{!810, !811, !812, !813, !814, !815, !819, !823, !825, !827}
!810 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !806, file: !13, line: 2469, type: !695)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nameobj", scope: !806, file: !13, line: 2471, type: !50)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "modeobj", scope: !806, file: !13, line: 2471, type: !50)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !806, file: !13, line: 2471, type: !50)
!814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !806, file: !13, line: 2471, type: !50)
!815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !816, file: !13, line: 2487, type: !50)
!816 = distinct !DILexicalBlock(scope: !817, file: !13, line: 2487, column: 12)
!817 = distinct !DILexicalBlock(scope: !818, file: !13, line: 2485, column: 10)
!818 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2479, column: 9)
!819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !820, file: !13, line: 2503, type: !50)
!820 = distinct !DILexicalBlock(scope: !821, file: !13, line: 2503, column: 12)
!821 = distinct !DILexicalBlock(scope: !822, file: !13, line: 2501, column: 10)
!822 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2495, column: 9)
!823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !824, file: !13, line: 2512, type: !50)
!824 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2512, column: 8)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !826, file: !13, line: 2515, type: !50)
!826 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2515, column: 8)
!827 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !828, file: !13, line: 2515, type: !50)
!828 = distinct !DILexicalBlock(scope: !829, file: !13, line: 2515, column: 95)
!829 = distinct !DILexicalBlock(scope: !826, file: !13, line: 2515, column: 61)
!830 = !DISubprogram(name: "textiowrapper_traverse", scope: !13, file: !13, line: 1164, type: !831, isLocal: true, isDefinition: true, scopeLine: 1165, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, i32 (%struct._object*, i8*)*, i8*)* @textiowrapper_traverse, variables: !833)
!831 = !DISubroutineType(types: !832)
!832 = !{!56, !695, !276, !102}
!833 = !{!834, !835, !836, !837, !841, !845, !849, !853, !857, !861, !865, !869, !873, !877}
!834 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !830, file: !13, line: 1164, type: !695)
!835 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !830, file: !13, line: 1164, type: !276)
!836 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !830, file: !13, line: 1164, type: !102)
!837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !838, file: !13, line: 1166, type: !56)
!838 = distinct !DILexicalBlock(scope: !839, file: !13, line: 1166, column: 28)
!839 = distinct !DILexicalBlock(scope: !840, file: !13, line: 1166, column: 14)
!840 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1166, column: 8)
!841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !842, file: !13, line: 1167, type: !56)
!842 = distinct !DILexicalBlock(scope: !843, file: !13, line: 1167, column: 30)
!843 = distinct !DILexicalBlock(scope: !844, file: !13, line: 1167, column: 14)
!844 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1167, column: 8)
!845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !846, file: !13, line: 1168, type: !56)
!846 = distinct !DILexicalBlock(scope: !847, file: !13, line: 1168, column: 29)
!847 = distinct !DILexicalBlock(scope: !848, file: !13, line: 1168, column: 14)
!848 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1168, column: 8)
!849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !850, file: !13, line: 1169, type: !56)
!850 = distinct !DILexicalBlock(scope: !851, file: !13, line: 1169, column: 29)
!851 = distinct !DILexicalBlock(scope: !852, file: !13, line: 1169, column: 14)
!852 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1169, column: 8)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !854, file: !13, line: 1170, type: !56)
!854 = distinct !DILexicalBlock(scope: !855, file: !13, line: 1170, column: 28)
!855 = distinct !DILexicalBlock(scope: !856, file: !13, line: 1170, column: 14)
!856 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1170, column: 8)
!857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !858, file: !13, line: 1171, type: !56)
!858 = distinct !DILexicalBlock(scope: !859, file: !13, line: 1171, column: 35)
!859 = distinct !DILexicalBlock(scope: !860, file: !13, line: 1171, column: 14)
!860 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1171, column: 8)
!861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !862, file: !13, line: 1172, type: !56)
!862 = distinct !DILexicalBlock(scope: !863, file: !13, line: 1172, column: 35)
!863 = distinct !DILexicalBlock(scope: !864, file: !13, line: 1172, column: 14)
!864 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1172, column: 8)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !866, file: !13, line: 1173, type: !56)
!866 = distinct !DILexicalBlock(scope: !867, file: !13, line: 1173, column: 30)
!867 = distinct !DILexicalBlock(scope: !868, file: !13, line: 1173, column: 14)
!868 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1173, column: 8)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !870, file: !13, line: 1174, type: !56)
!870 = distinct !DILexicalBlock(scope: !871, file: !13, line: 1174, column: 28)
!871 = distinct !DILexicalBlock(scope: !872, file: !13, line: 1174, column: 14)
!872 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1174, column: 8)
!873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !874, file: !13, line: 1175, type: !56)
!874 = distinct !DILexicalBlock(scope: !875, file: !13, line: 1175, column: 25)
!875 = distinct !DILexicalBlock(scope: !876, file: !13, line: 1175, column: 14)
!876 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1175, column: 8)
!877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !878, file: !13, line: 1177, type: !56)
!878 = distinct !DILexicalBlock(scope: !879, file: !13, line: 1177, column: 26)
!879 = distinct !DILexicalBlock(scope: !880, file: !13, line: 1177, column: 14)
!880 = distinct !DILexicalBlock(scope: !830, file: !13, line: 1177, column: 8)
!881 = !DISubprogram(name: "textiowrapper_clear", scope: !13, file: !13, line: 1182, type: !742, isLocal: true, isDefinition: true, scopeLine: 1183, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*)* @textiowrapper_clear, variables: !882)
!882 = !{!883, !884, !886}
!883 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !881, file: !13, line: 1182, type: !695)
!884 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !885, file: !13, line: 1186, type: !50)
!885 = distinct !DILexicalBlock(scope: !881, file: !13, line: 1186, column: 8)
!886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !887, file: !13, line: 1186, type: !50)
!887 = distinct !DILexicalBlock(scope: !888, file: !13, line: 1186, column: 115)
!888 = distinct !DILexicalBlock(scope: !889, file: !13, line: 1186, column: 83)
!889 = distinct !DILexicalBlock(scope: !885, file: !13, line: 1186, column: 60)
!890 = !DISubprogram(name: "textiowrapper_iternext", scope: !13, file: !13, line: 2630, type: !807, isLocal: true, isDefinition: true, scopeLine: 2631, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*)* @textiowrapper_iternext, variables: !891)
!891 = !{!892, !893, !894, !900, !904, !906}
!892 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !890, file: !13, line: 2630, type: !695)
!893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line", scope: !890, file: !13, line: 2632, type: !50)
!894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !895, file: !13, line: 2648, type: !50)
!895 = distinct !DILexicalBlock(scope: !896, file: !13, line: 2648, column: 16)
!896 = distinct !DILexicalBlock(scope: !897, file: !13, line: 2644, column: 91)
!897 = distinct !DILexicalBlock(scope: !898, file: !13, line: 2644, column: 13)
!898 = distinct !DILexicalBlock(scope: !899, file: !13, line: 2641, column: 10)
!899 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2637, column: 9)
!900 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !901, file: !13, line: 2658, type: !50)
!901 = distinct !DILexicalBlock(scope: !902, file: !13, line: 2658, column: 12)
!902 = distinct !DILexicalBlock(scope: !903, file: !13, line: 2656, column: 79)
!903 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2656, column: 9)
!904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !905, file: !13, line: 2659, type: !50)
!905 = distinct !DILexicalBlock(scope: !902, file: !13, line: 2659, column: 12)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !907, file: !13, line: 2659, type: !50)
!907 = distinct !DILexicalBlock(scope: !908, file: !13, line: 2659, column: 127)
!908 = distinct !DILexicalBlock(scope: !909, file: !13, line: 2659, column: 91)
!909 = distinct !DILexicalBlock(scope: !905, file: !13, line: 2659, column: 68)
!910 = !DISubprogram(name: "_textiowrapper_readline", scope: !13, file: !13, line: 1767, type: !911, isLocal: true, isDefinition: true, scopeLine: 1768, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i64)* @_textiowrapper_readline, variables: !913)
!911 = !DISubroutineType(types: !912)
!912 = !{!50, !695, !22}
!913 = !{!914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !926, !927, !933, !935, !936, !937, !938, !942, !946, !950, !954, !957, !961, !963, !965, !969, !974, !976, !980, !984, !988, !994, !996, !1000, !1002, !1005, !1007, !1010, !1012}
!914 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !910, file: !13, line: 1767, type: !695)
!915 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "limit", arg: 2, scope: !910, file: !13, line: 1767, type: !22)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line", scope: !910, file: !13, line: 1769, type: !50)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunks", scope: !910, file: !13, line: 1769, type: !50)
!918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remaining", scope: !910, file: !13, line: 1769, type: !50)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !910, file: !13, line: 1770, type: !22)
!920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "endpos", scope: !910, file: !13, line: 1770, type: !22)
!921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunked", scope: !910, file: !13, line: 1770, type: !22)
!922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset_to_buffer", scope: !910, file: !13, line: 1770, type: !22)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !910, file: !13, line: 1771, type: !56)
!924 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !925, file: !13, line: 1773, type: !56)
!925 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1773, column: 8)
!926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !925, file: !13, line: 1773, type: !50)
!927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !928, file: !13, line: 1773, type: !50)
!928 = distinct !DILexicalBlock(scope: !929, file: !13, line: 1773, column: 289)
!929 = distinct !DILexicalBlock(scope: !930, file: !13, line: 1773, column: 163)
!930 = distinct !DILexicalBlock(scope: !931, file: !13, line: 1773, column: 100)
!931 = distinct !DILexicalBlock(scope: !932, file: !13, line: 1773, column: 94)
!932 = distinct !DILexicalBlock(scope: !925, file: !13, line: 1773, column: 37)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !934, file: !13, line: 1781, type: !64)
!934 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1780, column: 15)
!935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line_len", scope: !934, file: !13, line: 1782, type: !22)
!936 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kind", scope: !934, file: !13, line: 1783, type: !56)
!937 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "consumed", scope: !934, file: !13, line: 1784, type: !22)
!938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !939, file: !13, line: 1805, type: !50)
!939 = distinct !DILexicalBlock(scope: !940, file: !13, line: 1805, column: 16)
!940 = distinct !DILexicalBlock(scope: !941, file: !13, line: 1802, column: 23)
!941 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1802, column: 13)
!942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !943, file: !13, line: 1805, type: !50)
!943 = distinct !DILexicalBlock(scope: !944, file: !13, line: 1805, column: 131)
!944 = distinct !DILexicalBlock(scope: !945, file: !13, line: 1805, column: 95)
!945 = distinct !DILexicalBlock(scope: !939, file: !13, line: 1805, column: 72)
!946 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !947, file: !13, line: 1821, type: !50)
!947 = distinct !DILexicalBlock(scope: !948, file: !13, line: 1821, column: 16)
!948 = distinct !DILexicalBlock(scope: !949, file: !13, line: 1816, column: 14)
!949 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1810, column: 13)
!950 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !951, file: !13, line: 1821, type: !50)
!951 = distinct !DILexicalBlock(scope: !952, file: !13, line: 1821, column: 121)
!952 = distinct !DILexicalBlock(scope: !953, file: !13, line: 1821, column: 90)
!953 = distinct !DILexicalBlock(scope: !947, file: !13, line: 1821, column: 67)
!954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !955, file: !13, line: 1855, type: !50)
!955 = distinct !DILexicalBlock(scope: !956, file: !13, line: 1853, column: 29)
!956 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1853, column: 13)
!957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !958, file: !13, line: 1865, type: !50)
!958 = distinct !DILexicalBlock(scope: !959, file: !13, line: 1865, column: 20)
!959 = distinct !DILexicalBlock(scope: !960, file: !13, line: 1864, column: 47)
!960 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1864, column: 17)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !962, file: !13, line: 1869, type: !50)
!962 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1869, column: 16)
!963 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !964, file: !13, line: 1878, type: !50)
!964 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1878, column: 12)
!965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !966, file: !13, line: 1878, type: !50)
!966 = distinct !DILexicalBlock(scope: !967, file: !13, line: 1878, column: 107)
!967 = distinct !DILexicalBlock(scope: !968, file: !13, line: 1878, column: 81)
!968 = distinct !DILexicalBlock(scope: !964, file: !13, line: 1878, column: 58)
!969 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !970, file: !13, line: 1887, type: !50)
!970 = distinct !DILexicalBlock(scope: !971, file: !13, line: 1886, column: 100)
!971 = distinct !DILexicalBlock(scope: !972, file: !13, line: 1886, column: 13)
!972 = distinct !DILexicalBlock(scope: !973, file: !13, line: 1883, column: 29)
!973 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1883, column: 9)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !975, file: !13, line: 1888, type: !50)
!975 = distinct !DILexicalBlock(scope: !970, file: !13, line: 1888, column: 16)
!976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !977, file: !13, line: 1888, type: !50)
!977 = distinct !DILexicalBlock(scope: !978, file: !13, line: 1888, column: 111)
!978 = distinct !DILexicalBlock(scope: !979, file: !13, line: 1888, column: 85)
!979 = distinct !DILexicalBlock(scope: !975, file: !13, line: 1888, column: 62)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !981, file: !13, line: 1902, type: !50)
!981 = distinct !DILexicalBlock(scope: !982, file: !13, line: 1902, column: 12)
!982 = distinct !DILexicalBlock(scope: !983, file: !13, line: 1894, column: 34)
!983 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1894, column: 9)
!984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !985, file: !13, line: 1902, type: !50)
!985 = distinct !DILexicalBlock(scope: !986, file: !13, line: 1902, column: 117)
!986 = distinct !DILexicalBlock(scope: !987, file: !13, line: 1902, column: 86)
!987 = distinct !DILexicalBlock(scope: !981, file: !13, line: 1902, column: 63)
!988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !989, file: !13, line: 1908, type: !50)
!989 = distinct !DILexicalBlock(scope: !990, file: !13, line: 1908, column: 16)
!990 = distinct !DILexicalBlock(scope: !991, file: !13, line: 1905, column: 33)
!991 = distinct !DILexicalBlock(scope: !992, file: !13, line: 1905, column: 13)
!992 = distinct !DILexicalBlock(scope: !993, file: !13, line: 1904, column: 31)
!993 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1904, column: 9)
!994 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !995, file: !13, line: 1913, type: !50)
!995 = distinct !DILexicalBlock(scope: !992, file: !13, line: 1913, column: 12)
!996 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !997, file: !13, line: 1913, type: !50)
!997 = distinct !DILexicalBlock(scope: !998, file: !13, line: 1913, column: 111)
!998 = distinct !DILexicalBlock(scope: !999, file: !13, line: 1913, column: 83)
!999 = distinct !DILexicalBlock(scope: !995, file: !13, line: 1913, column: 60)
!1000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1001, file: !13, line: 1923, type: !50)
!1001 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1923, column: 8)
!1002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1003, file: !13, line: 1923, type: !50)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !13, line: 1923, column: 98)
!1004 = distinct !DILexicalBlock(scope: !1001, file: !13, line: 1923, column: 64)
!1005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1006, file: !13, line: 1924, type: !50)
!1006 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1924, column: 8)
!1007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1008, file: !13, line: 1924, type: !50)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !13, line: 1924, column: 101)
!1009 = distinct !DILexicalBlock(scope: !1006, file: !13, line: 1924, column: 67)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1011, file: !13, line: 1925, type: !50)
!1011 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1925, column: 8)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1013, file: !13, line: 1925, type: !50)
!1013 = distinct !DILexicalBlock(scope: !1014, file: !13, line: 1925, column: 96)
!1014 = distinct !DILexicalBlock(scope: !1011, file: !13, line: 1925, column: 62)
!1015 = !DISubprogram(name: "textiowrapper_closed_get", scope: !13, file: !13, line: 2675, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2676, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_closed_get, variables: !1018)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!50, !695, !102}
!1018 = !{!1019, !1020}
!1019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1015, file: !13, line: 2675, type: !695)
!1020 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1015, file: !13, line: 2675, type: !102)
!1021 = !DISubprogram(name: "_textiowrapper_writeflush", scope: !13, file: !13, line: 1264, type: !742, isLocal: true, isDefinition: true, scopeLine: 1265, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*)* @_textiowrapper_writeflush, variables: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1029, !1033, !1035, !1037}
!1023 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1021, file: !13, line: 1264, type: !695)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pending", scope: !1021, file: !13, line: 1266, type: !50)
!1025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1021, file: !13, line: 1266, type: !50)
!1026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1021, file: !13, line: 1266, type: !50)
!1027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1028, file: !13, line: 1274, type: !50)
!1028 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1274, column: 8)
!1029 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1030, file: !13, line: 1274, type: !50)
!1030 = distinct !DILexicalBlock(scope: !1031, file: !13, line: 1274, column: 133)
!1031 = distinct !DILexicalBlock(scope: !1032, file: !13, line: 1274, column: 92)
!1032 = distinct !DILexicalBlock(scope: !1028, file: !13, line: 1274, column: 69)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1034, file: !13, line: 1277, type: !50)
!1034 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1277, column: 8)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1036, file: !13, line: 1285, type: !50)
!1036 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1285, column: 8)
!1037 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1038, file: !13, line: 1288, type: !50)
!1038 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1288, column: 8)
!1039 = !DISubprogram(name: "textiowrapper_read_chunk", scope: !13, file: !13, line: 1438, type: !1040, isLocal: true, isDefinition: true, scopeLine: 1439, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, i64)* @textiowrapper_read_chunk, variables: !1042)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!56, !695, !22}
!1042 = !{!1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1056, !1060, !1062, !1064, !1067, !1071, !1073, !1075, !1079, !1081, !1083, !1086, !1088, !1091, !1093}
!1043 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1039, file: !13, line: 1438, type: !695)
!1044 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size_hint", arg: 2, scope: !1039, file: !13, line: 1438, type: !22)
!1045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_buffer", scope: !1039, file: !13, line: 1440, type: !50)
!1046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_flags", scope: !1039, file: !13, line: 1441, type: !50)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_chunk", scope: !1039, file: !13, line: 1442, type: !50)
!1048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded_chars", scope: !1039, file: !13, line: 1443, type: !50)
!1049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunk_size", scope: !1039, file: !13, line: 1443, type: !50)
!1050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nbytes", scope: !1039, file: !13, line: 1444, type: !22)
!1051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nchars", scope: !1039, file: !13, line: 1444, type: !22)
!1052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "eof", scope: !1039, file: !13, line: 1445, type: !56)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1054, file: !13, line: 1463, type: !50)
!1054 = distinct !DILexicalBlock(scope: !1055, file: !13, line: 1458, column: 24)
!1055 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1458, column: 9)
!1056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1057, file: !13, line: 1471, type: !50)
!1057 = distinct !DILexicalBlock(scope: !1058, file: !13, line: 1471, column: 16)
!1058 = distinct !DILexicalBlock(scope: !1059, file: !13, line: 1470, column: 77)
!1059 = distinct !DILexicalBlock(scope: !1054, file: !13, line: 1470, column: 13)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1061, file: !13, line: 1476, type: !50)
!1061 = distinct !DILexicalBlock(scope: !1054, file: !13, line: 1476, column: 12)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1063, file: !13, line: 1489, type: !50)
!1063 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1489, column: 8)
!1064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next_input", scope: !1065, file: !13, line: 1527, type: !50)
!1065 = distinct !DILexicalBlock(scope: !1066, file: !13, line: 1523, column: 24)
!1066 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1523, column: 9)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1068, file: !13, line: 1535, type: !50)
!1068 = distinct !DILexicalBlock(scope: !1069, file: !13, line: 1535, column: 16)
!1069 = distinct !DILexicalBlock(scope: !1070, file: !13, line: 1530, column: 89)
!1070 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1530, column: 13)
!1071 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1072, file: !13, line: 1538, type: !50)
!1072 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1538, column: 12)
!1073 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1074, file: !13, line: 1539, type: !50)
!1074 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1539, column: 12)
!1075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1076, file: !13, line: 1539, type: !50)
!1076 = distinct !DILexicalBlock(scope: !1077, file: !13, line: 1539, column: 127)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !13, line: 1539, column: 91)
!1078 = distinct !DILexicalBlock(scope: !1074, file: !13, line: 1539, column: 68)
!1079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1080, file: !13, line: 1542, type: !50)
!1080 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1542, column: 8)
!1081 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1082, file: !13, line: 1547, type: !50)
!1082 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1547, column: 8)
!1083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1084, file: !13, line: 1547, type: !50)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !13, line: 1547, column: 102)
!1085 = distinct !DILexicalBlock(scope: !1082, file: !13, line: 1547, column: 68)
!1086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1087, file: !13, line: 1548, type: !50)
!1087 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1548, column: 8)
!1088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1089, file: !13, line: 1548, type: !50)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !13, line: 1548, column: 101)
!1090 = distinct !DILexicalBlock(scope: !1087, file: !13, line: 1548, column: 67)
!1091 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1092, file: !13, line: 1549, type: !50)
!1092 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1549, column: 8)
!1093 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1094, file: !13, line: 1549, type: !50)
!1094 = distinct !DILexicalBlock(scope: !1095, file: !13, line: 1549, column: 103)
!1095 = distinct !DILexicalBlock(scope: !1092, file: !13, line: 1549, column: 69)
!1096 = !DISubprogram(name: "textiowrapper_set_decoded_chars", scope: !13, file: !13, line: 1394, type: !1097, isLocal: true, isDefinition: true, scopeLine: 1395, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.textio*, %struct._object*)* @textiowrapper_set_decoded_chars, variables: !1099)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !695, !50}
!1099 = !{!1100, !1101, !1102, !1104}
!1100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1096, file: !13, line: 1394, type: !695)
!1101 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "chars", arg: 2, scope: !1096, file: !13, line: 1394, type: !50)
!1102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1103, file: !13, line: 1396, type: !50)
!1103 = distinct !DILexicalBlock(scope: !1096, file: !13, line: 1396, column: 8)
!1104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1105, file: !13, line: 1396, type: !50)
!1105 = distinct !DILexicalBlock(scope: !1106, file: !13, line: 1396, column: 133)
!1106 = distinct !DILexicalBlock(scope: !1107, file: !13, line: 1396, column: 92)
!1107 = distinct !DILexicalBlock(scope: !1103, file: !13, line: 1396, column: 69)
!1108 = !DISubprogram(name: "textiowrapper_detach", scope: !13, file: !13, line: 1246, type: !807, isLocal: true, isDefinition: true, scopeLine: 1247, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*)* @textiowrapper_detach, variables: !1109)
!1109 = !{!1110, !1111, !1112, !1113}
!1110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1108, file: !13, line: 1246, type: !695)
!1111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1108, file: !13, line: 1248, type: !50)
!1112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1108, file: !13, line: 1248, type: !50)
!1113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1114, file: !13, line: 1253, type: !50)
!1114 = distinct !DILexicalBlock(scope: !1108, file: !13, line: 1253, column: 8)
!1115 = !DISubprogram(name: "textiowrapper_write", scope: !13, file: !13, line: 1293, type: !1116, isLocal: true, isDefinition: true, scopeLine: 1294, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_write, variables: !1118)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!50, !695, !50}
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1130, !1131, !1137, !1140, !1142, !1144, !1150, !1154, !1156, !1160, !1162, !1166}
!1119 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1115, file: !13, line: 1293, type: !695)
!1120 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1115, file: !13, line: 1293, type: !50)
!1121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1115, file: !13, line: 1295, type: !50)
!1122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text", scope: !1115, file: !13, line: 1296, type: !50)
!1123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1115, file: !13, line: 1297, type: !50)
!1124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "textlen", scope: !1115, file: !13, line: 1298, type: !22)
!1125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "haslf", scope: !1115, file: !13, line: 1299, type: !56)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "needflush", scope: !1115, file: !13, line: 1300, type: !56)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "text_needflush", scope: !1115, file: !13, line: 1300, type: !56)
!1128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1129, file: !13, line: 1311, type: !56)
!1129 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1311, column: 8)
!1130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1129, file: !13, line: 1311, type: !50)
!1131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1132, file: !13, line: 1311, type: !50)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !13, line: 1311, column: 289)
!1133 = distinct !DILexicalBlock(scope: !1134, file: !13, line: 1311, column: 163)
!1134 = distinct !DILexicalBlock(scope: !1135, file: !13, line: 1311, column: 100)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !13, line: 1311, column: 94)
!1136 = distinct !DILexicalBlock(scope: !1129, file: !13, line: 1311, column: 37)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newtext", scope: !1138, file: !13, line: 1325, type: !50)
!1138 = distinct !DILexicalBlock(scope: !1139, file: !13, line: 1324, column: 71)
!1139 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1324, column: 9)
!1140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1141, file: !13, line: 1327, type: !50)
!1141 = distinct !DILexicalBlock(scope: !1138, file: !13, line: 1327, column: 12)
!1142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1143, file: !13, line: 1348, type: !50)
!1143 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1348, column: 8)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1145, file: !13, line: 1355, type: !50)
!1145 = distinct !DILexicalBlock(scope: !1146, file: !13, line: 1355, column: 16)
!1146 = distinct !DILexicalBlock(scope: !1147, file: !13, line: 1354, column: 48)
!1147 = distinct !DILexicalBlock(scope: !1148, file: !13, line: 1354, column: 13)
!1148 = distinct !DILexicalBlock(scope: !1149, file: !13, line: 1352, column: 44)
!1149 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1352, column: 9)
!1150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1151, file: !13, line: 1361, type: !50)
!1151 = distinct !DILexicalBlock(scope: !1152, file: !13, line: 1361, column: 12)
!1152 = distinct !DILexicalBlock(scope: !1153, file: !13, line: 1360, column: 52)
!1153 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1360, column: 9)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1155, file: !13, line: 1365, type: !50)
!1155 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1365, column: 8)
!1156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1157, file: !13, line: 1376, type: !50)
!1157 = distinct !DILexicalBlock(scope: !1158, file: !13, line: 1376, column: 12)
!1158 = distinct !DILexicalBlock(scope: !1159, file: !13, line: 1372, column: 20)
!1159 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1372, column: 9)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1161, file: !13, line: 1379, type: !50)
!1161 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1379, column: 8)
!1162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1163, file: !13, line: 1379, type: !50)
!1163 = distinct !DILexicalBlock(scope: !1164, file: !13, line: 1379, column: 123)
!1164 = distinct !DILexicalBlock(scope: !1165, file: !13, line: 1379, column: 87)
!1165 = distinct !DILexicalBlock(scope: !1161, file: !13, line: 1379, column: 64)
!1166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1167, file: !13, line: 1385, type: !50)
!1167 = distinct !DILexicalBlock(scope: !1168, file: !13, line: 1385, column: 12)
!1168 = distinct !DILexicalBlock(scope: !1169, file: !13, line: 1381, column: 24)
!1169 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1381, column: 9)
!1170 = !DISubprogram(name: "textiowrapper_read", scope: !13, file: !13, line: 1554, type: !1116, isLocal: true, isDefinition: true, scopeLine: 1555, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_read, variables: !1171)
!1171 = !{!1172, !1173, !1174, !1175, !1176, !1177, !1179, !1180, !1186, !1189, !1190, !1192, !1196, !1198, !1202, !1204, !1205, !1208, !1212, !1216, !1218, !1222, !1224, !1227, !1229}
!1172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1170, file: !13, line: 1554, type: !695)
!1173 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1170, file: !13, line: 1554, type: !50)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1170, file: !13, line: 1556, type: !22)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1170, file: !13, line: 1557, type: !50)
!1176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chunks", scope: !1170, file: !13, line: 1557, type: !50)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1178, file: !13, line: 1564, type: !56)
!1178 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1564, column: 8)
!1179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1178, file: !13, line: 1564, type: !50)
!1180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1181, file: !13, line: 1564, type: !50)
!1181 = distinct !DILexicalBlock(scope: !1182, file: !13, line: 1564, column: 289)
!1182 = distinct !DILexicalBlock(scope: !1183, file: !13, line: 1564, column: 163)
!1183 = distinct !DILexicalBlock(scope: !1184, file: !13, line: 1564, column: 100)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !13, line: 1564, column: 94)
!1185 = distinct !DILexicalBlock(scope: !1178, file: !13, line: 1564, column: 37)
!1186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !1187, file: !13, line: 1574, type: !50)
!1187 = distinct !DILexicalBlock(scope: !1188, file: !13, line: 1572, column: 16)
!1188 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1572, column: 9)
!1189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded", scope: !1187, file: !13, line: 1575, type: !50)
!1190 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1191, file: !13, line: 1585, type: !50)
!1191 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1585, column: 12)
!1192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1193, file: !13, line: 1592, type: !50)
!1193 = distinct !DILexicalBlock(scope: !1194, file: !13, line: 1592, column: 16)
!1194 = distinct !DILexicalBlock(scope: !1195, file: !13, line: 1591, column: 35)
!1195 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1591, column: 13)
!1196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1197, file: !13, line: 1600, type: !50)
!1197 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1600, column: 12)
!1198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1199, file: !13, line: 1600, type: !50)
!1199 = distinct !DILexicalBlock(scope: !1200, file: !13, line: 1600, column: 127)
!1200 = distinct !DILexicalBlock(scope: !1201, file: !13, line: 1600, column: 91)
!1201 = distinct !DILexicalBlock(scope: !1197, file: !13, line: 1600, column: 68)
!1202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1203, file: !13, line: 1604, type: !56)
!1203 = distinct !DILexicalBlock(scope: !1188, file: !13, line: 1603, column: 10)
!1204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remaining", scope: !1203, file: !13, line: 1605, type: !22)
!1205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1206, file: !13, line: 1635, type: !50)
!1206 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1635, column: 16)
!1207 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1615, column: 31)
!1208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1209, file: !13, line: 1644, type: !50)
!1209 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1644, column: 16)
!1210 = distinct !DILexicalBlock(scope: !1211, file: !13, line: 1641, column: 35)
!1211 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1641, column: 13)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1213, file: !13, line: 1644, type: !50)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !13, line: 1644, column: 115)
!1214 = distinct !DILexicalBlock(scope: !1215, file: !13, line: 1644, column: 87)
!1215 = distinct !DILexicalBlock(scope: !1209, file: !13, line: 1644, column: 64)
!1216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1217, file: !13, line: 1648, type: !50)
!1217 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1648, column: 16)
!1218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1219, file: !13, line: 1648, type: !50)
!1219 = distinct !DILexicalBlock(scope: !1220, file: !13, line: 1648, column: 115)
!1220 = distinct !DILexicalBlock(scope: !1221, file: !13, line: 1648, column: 87)
!1221 = distinct !DILexicalBlock(scope: !1217, file: !13, line: 1648, column: 64)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1223, file: !13, line: 1653, type: !50)
!1223 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1653, column: 8)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1225, file: !13, line: 1653, type: !50)
!1225 = distinct !DILexicalBlock(scope: !1226, file: !13, line: 1653, column: 98)
!1226 = distinct !DILexicalBlock(scope: !1223, file: !13, line: 1653, column: 64)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1228, file: !13, line: 1654, type: !50)
!1228 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1654, column: 8)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1230, file: !13, line: 1654, type: !50)
!1230 = distinct !DILexicalBlock(scope: !1231, file: !13, line: 1654, column: 98)
!1231 = distinct !DILexicalBlock(scope: !1228, file: !13, line: 1654, column: 64)
!1232 = !DISubprogram(name: "textiowrapper_get_decoded_chars", scope: !13, file: !13, line: 1402, type: !911, isLocal: true, isDefinition: true, scopeLine: 1403, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i64)* @textiowrapper_get_decoded_chars, variables: !1233)
!1233 = !{!1234, !1235, !1236, !1237}
!1234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1232, file: !13, line: 1402, type: !695)
!1235 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !1232, file: !13, line: 1402, type: !22)
!1236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chars", scope: !1232, file: !13, line: 1404, type: !50)
!1237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "avail", scope: !1232, file: !13, line: 1405, type: !22)
!1238 = !DISubprogram(name: "textiowrapper_readline", scope: !13, file: !13, line: 1930, type: !1116, isLocal: true, isDefinition: true, scopeLine: 1931, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readline, variables: !1239)
!1239 = !{!1240, !1241, !1242}
!1240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1238, file: !13, line: 1930, type: !695)
!1241 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1238, file: !13, line: 1930, type: !50)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "limit", scope: !1238, file: !13, line: 1932, type: !22)
!1243 = !DISubprogram(name: "textiowrapper_flush", scope: !13, file: !13, line: 2566, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2567, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_flush, variables: !1244)
!1244 = !{!1245, !1246, !1247, !1249, !1250}
!1245 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1243, file: !13, line: 2566, type: !695)
!1246 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1243, file: !13, line: 2566, type: !50)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1248, file: !13, line: 2569, type: !56)
!1248 = distinct !DILexicalBlock(scope: !1243, file: !13, line: 2569, column: 8)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1248, file: !13, line: 2569, type: !50)
!1250 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1251, file: !13, line: 2569, type: !50)
!1251 = distinct !DILexicalBlock(scope: !1252, file: !13, line: 2569, column: 289)
!1252 = distinct !DILexicalBlock(scope: !1253, file: !13, line: 2569, column: 163)
!1253 = distinct !DILexicalBlock(scope: !1254, file: !13, line: 2569, column: 100)
!1254 = distinct !DILexicalBlock(scope: !1255, file: !13, line: 2569, column: 94)
!1255 = distinct !DILexicalBlock(scope: !1248, file: !13, line: 2569, column: 37)
!1256 = !DISubprogram(name: "textiowrapper_close", scope: !13, file: !13, line: 2577, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2578, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_close, variables: !1257)
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1264, !1267, !1268, !1269, !1274, !1277, !1283, !1287, !1289, !1291, !1293}
!1258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1256, file: !13, line: 2577, type: !695)
!1259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1256, file: !13, line: 2577, type: !50)
!1260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1256, file: !13, line: 2579, type: !50)
!1261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1256, file: !13, line: 2580, type: !56)
!1262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1263, file: !13, line: 2587, type: !50)
!1263 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2587, column: 8)
!1264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc", scope: !1265, file: !13, line: 2595, type: !50)
!1265 = distinct !DILexicalBlock(scope: !1266, file: !13, line: 2594, column: 10)
!1266 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2591, column: 9)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !1265, file: !13, line: 2595, type: !50)
!1268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !1265, file: !13, line: 2595, type: !50)
!1269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1270, file: !13, line: 2599, type: !50)
!1270 = distinct !DILexicalBlock(scope: !1271, file: !13, line: 2599, column: 20)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !13, line: 2598, column: 17)
!1272 = distinct !DILexicalBlock(scope: !1273, file: !13, line: 2596, column: 31)
!1273 = distinct !DILexicalBlock(scope: !1265, file: !13, line: 2596, column: 13)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1275, file: !13, line: 2607, type: !50)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !13, line: 2607, column: 16)
!1276 = distinct !DILexicalBlock(scope: !1265, file: !13, line: 2604, column: 13)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1278, file: !13, line: 2612, type: !50)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !13, line: 2612, column: 20)
!1279 = distinct !DILexicalBlock(scope: !1280, file: !13, line: 2611, column: 36)
!1280 = distinct !DILexicalBlock(scope: !1281, file: !13, line: 2611, column: 17)
!1281 = distinct !DILexicalBlock(scope: !1282, file: !13, line: 2610, column: 32)
!1282 = distinct !DILexicalBlock(scope: !1265, file: !13, line: 2610, column: 13)
!1283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1284, file: !13, line: 2612, type: !50)
!1284 = distinct !DILexicalBlock(scope: !1285, file: !13, line: 2612, column: 113)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !13, line: 2612, column: 88)
!1286 = distinct !DILexicalBlock(scope: !1278, file: !13, line: 2612, column: 65)
!1287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val2", scope: !1288, file: !13, line: 2616, type: !50)
!1288 = distinct !DILexicalBlock(scope: !1280, file: !13, line: 2615, column: 18)
!1289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1290, file: !13, line: 2617, type: !50)
!1290 = distinct !DILexicalBlock(scope: !1288, file: !13, line: 2617, column: 20)
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1292, file: !13, line: 2618, type: !50)
!1292 = distinct !DILexicalBlock(scope: !1288, file: !13, line: 2618, column: 20)
!1293 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1294, file: !13, line: 2618, type: !50)
!1294 = distinct !DILexicalBlock(scope: !1295, file: !13, line: 2618, column: 106)
!1295 = distinct !DILexicalBlock(scope: !1292, file: !13, line: 2618, column: 72)
!1296 = !DISubprogram(name: "textiowrapper_fileno", scope: !13, file: !13, line: 2523, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2524, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_fileno, variables: !1297)
!1297 = !{!1298, !1299}
!1298 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1296, file: !13, line: 2523, type: !695)
!1299 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1296, file: !13, line: 2523, type: !50)
!1300 = !DISubprogram(name: "textiowrapper_seekable", scope: !13, file: !13, line: 2530, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2531, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seekable, variables: !1301)
!1301 = !{!1302, !1303}
!1302 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1300, file: !13, line: 2530, type: !695)
!1303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1300, file: !13, line: 2530, type: !50)
!1304 = !DISubprogram(name: "textiowrapper_readable", scope: !13, file: !13, line: 2537, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2538, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_readable, variables: !1305)
!1305 = !{!1306, !1307}
!1306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1304, file: !13, line: 2537, type: !695)
!1307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1304, file: !13, line: 2537, type: !50)
!1308 = !DISubprogram(name: "textiowrapper_writable", scope: !13, file: !13, line: 2544, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2545, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_writable, variables: !1309)
!1309 = !{!1310, !1311}
!1310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1308, file: !13, line: 2544, type: !695)
!1311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1308, file: !13, line: 2544, type: !50)
!1312 = !DISubprogram(name: "textiowrapper_isatty", scope: !13, file: !13, line: 2551, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2552, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_isatty, variables: !1313)
!1313 = !{!1314, !1315}
!1314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1312, file: !13, line: 2551, type: !695)
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1312, file: !13, line: 2551, type: !50)
!1316 = !DISubprogram(name: "textiowrapper_getstate", scope: !13, file: !13, line: 2558, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2559, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_getstate, variables: !1317)
!1317 = !{!1318, !1319}
!1318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1316, file: !13, line: 2558, type: !695)
!1319 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1316, file: !13, line: 2558, type: !50)
!1320 = !DISubprogram(name: "textiowrapper_seek", scope: !13, file: !13, line: 2064, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2065, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_seek, variables: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326, !1337, !1338, !1339, !1340, !1342, !1343, !1349, !1353, !1357, !1359, !1363, !1367, !1369, !1372, !1374, !1376, !1378, !1380, !1384, !1387, !1388, !1392, !1396, !1398}
!1322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1320, file: !13, line: 2064, type: !695)
!1323 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1320, file: !13, line: 2064, type: !50)
!1324 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookieObj", scope: !1320, file: !13, line: 2066, type: !50)
!1325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "posobj", scope: !1320, file: !13, line: 2066, type: !50)
!1326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookie", scope: !1320, file: !13, line: 2067, type: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "cookie_type", file: !13, line: 1949, baseType: !1328)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 1943, size: 192, align: 64, elements: !1329)
!1329 = !{!1330, !1333, !1334, !1335, !1336}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "start_pos", scope: !1328, file: !13, line: 1944, baseType: !1331, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_off_t", file: !565, line: 94, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !25, line: 92, baseType: !100)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "dec_flags", scope: !1328, file: !13, line: 1945, baseType: !56, size: 32, align: 32, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_to_feed", scope: !1328, file: !13, line: 1946, baseType: !56, size: 32, align: 32, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "chars_to_skip", scope: !1328, file: !13, line: 1947, baseType: !56, size: 32, align: 32, offset: 128)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "need_eof", scope: !1328, file: !13, line: 1948, baseType: !42, size: 8, align: 8, offset: 160)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "whence", scope: !1320, file: !13, line: 2068, type: !56)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1320, file: !13, line: 2069, type: !50)
!1339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !1320, file: !13, line: 2070, type: !56)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1341, file: !13, line: 2076, type: !56)
!1341 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2076, column: 8)
!1342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1341, file: !13, line: 2076, type: !50)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1344, file: !13, line: 2076, type: !50)
!1344 = distinct !DILexicalBlock(scope: !1345, file: !13, line: 2076, column: 289)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !13, line: 2076, column: 163)
!1346 = distinct !DILexicalBlock(scope: !1347, file: !13, line: 2076, column: 100)
!1347 = distinct !DILexicalBlock(scope: !1348, file: !13, line: 2076, column: 94)
!1348 = distinct !DILexicalBlock(scope: !1341, file: !13, line: 2076, column: 37)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1350, file: !13, line: 2099, type: !50)
!1350 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2099, column: 12)
!1351 = distinct !DILexicalBlock(scope: !1352, file: !13, line: 2085, column: 22)
!1352 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2085, column: 9)
!1353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1354, file: !13, line: 2118, type: !50)
!1354 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2118, column: 12)
!1355 = distinct !DILexicalBlock(scope: !1356, file: !13, line: 2104, column: 27)
!1356 = distinct !DILexicalBlock(scope: !1352, file: !13, line: 2104, column: 14)
!1357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1358, file: !13, line: 2121, type: !50)
!1358 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2121, column: 12)
!1359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1360, file: !13, line: 2121, type: !50)
!1360 = distinct !DILexicalBlock(scope: !1361, file: !13, line: 2121, column: 127)
!1361 = distinct !DILexicalBlock(scope: !1362, file: !13, line: 2121, column: 91)
!1362 = distinct !DILexicalBlock(scope: !1358, file: !13, line: 2121, column: 68)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1364, file: !13, line: 2126, type: !50)
!1364 = distinct !DILexicalBlock(scope: !1365, file: !13, line: 2126, column: 16)
!1365 = distinct !DILexicalBlock(scope: !1366, file: !13, line: 2122, column: 28)
!1366 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2122, column: 13)
!1367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1368, file: !13, line: 2130, type: !50)
!1368 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2130, column: 12)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1370, file: !13, line: 2130, type: !50)
!1370 = distinct !DILexicalBlock(scope: !1371, file: !13, line: 2130, column: 105)
!1371 = distinct !DILexicalBlock(scope: !1368, file: !13, line: 2130, column: 71)
!1372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1373, file: !13, line: 2152, type: !50)
!1373 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2152, column: 8)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1375, file: !13, line: 2166, type: !50)
!1375 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2166, column: 8)
!1376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1377, file: !13, line: 2169, type: !50)
!1377 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2169, column: 8)
!1378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1379, file: !13, line: 2172, type: !50)
!1379 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2172, column: 8)
!1380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1381, file: !13, line: 2172, type: !50)
!1381 = distinct !DILexicalBlock(scope: !1382, file: !13, line: 2172, column: 123)
!1382 = distinct !DILexicalBlock(scope: !1383, file: !13, line: 2172, column: 87)
!1383 = distinct !DILexicalBlock(scope: !1379, file: !13, line: 2172, column: 64)
!1384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_chunk", scope: !1385, file: !13, line: 2182, type: !50)
!1385 = distinct !DILexicalBlock(scope: !1386, file: !13, line: 2180, column: 31)
!1386 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2180, column: 9)
!1387 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded", scope: !1385, file: !13, line: 2184, type: !50)
!1388 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1389, file: !13, line: 2194, type: !50)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !13, line: 2194, column: 16)
!1390 = distinct !DILexicalBlock(scope: !1391, file: !13, line: 2189, column: 90)
!1391 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2189, column: 13)
!1392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1393, file: !13, line: 2200, type: !50)
!1393 = distinct !DILexicalBlock(scope: !1394, file: !13, line: 2200, column: 16)
!1394 = distinct !DILexicalBlock(scope: !1395, file: !13, line: 2199, column: 43)
!1395 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2199, column: 13)
!1396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1397, file: !13, line: 2232, type: !50)
!1397 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2232, column: 8)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1399, file: !13, line: 2232, type: !50)
!1399 = distinct !DILexicalBlock(scope: !1400, file: !13, line: 2232, column: 101)
!1400 = distinct !DILexicalBlock(scope: !1397, file: !13, line: 2232, column: 67)
!1401 = !DISubprogram(name: "textiowrapper_parse_cookie", scope: !13, file: !13, line: 1984, type: !1402, isLocal: true, isDefinition: true, scopeLine: 1985, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.cookie_type*, %struct._object*)* @textiowrapper_parse_cookie, variables: !1405)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!56, !1404, !50}
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64, align: 64)
!1405 = !{!1406, !1407, !1408, !1412, !1413, !1417}
!1406 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 1, scope: !1401, file: !13, line: 1984, type: !1404)
!1407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookieObj", arg: 2, scope: !1401, file: !13, line: 1984, type: !50)
!1408 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1401, file: !13, line: 1986, type: !1409)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 168, align: 8, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 21)
!1412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookieLong", scope: !1401, file: !13, line: 1987, type: !434)
!1413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1414, file: !13, line: 1993, type: !50)
!1414 = distinct !DILexicalBlock(scope: !1415, file: !13, line: 1993, column: 12)
!1415 = distinct !DILexicalBlock(scope: !1416, file: !13, line: 1992, column: 40)
!1416 = distinct !DILexicalBlock(scope: !1401, file: !13, line: 1991, column: 9)
!1417 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1418, file: !13, line: 1996, type: !50)
!1418 = distinct !DILexicalBlock(scope: !1401, file: !13, line: 1996, column: 8)
!1419 = !DISubprogram(name: "_textiowrapper_decoder_setstate", scope: !13, file: !13, line: 2023, type: !1420, isLocal: true, isDefinition: true, scopeLine: 2024, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct.cookie_type*)* @_textiowrapper_decoder_setstate, variables: !1422)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!56, !695, !1404}
!1422 = !{!1423, !1424, !1425, !1426}
!1423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1419, file: !13, line: 2023, type: !695)
!1424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 2, scope: !1419, file: !13, line: 2023, type: !1404)
!1425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1419, file: !13, line: 2025, type: !50)
!1426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1427, file: !13, line: 2039, type: !50)
!1427 = distinct !DILexicalBlock(scope: !1419, file: !13, line: 2039, column: 8)
!1428 = !DISubprogram(name: "_textiowrapper_encoder_setstate", scope: !13, file: !13, line: 2044, type: !1420, isLocal: true, isDefinition: true, scopeLine: 2045, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct.cookie_type*)* @_textiowrapper_encoder_setstate, variables: !1429)
!1429 = !{!1430, !1431, !1432, !1433}
!1430 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1428, file: !13, line: 2044, type: !695)
!1431 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 2, scope: !1428, file: !13, line: 2044, type: !1404)
!1432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1428, file: !13, line: 2046, type: !50)
!1433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1434, file: !13, line: 2059, type: !50)
!1434 = distinct !DILexicalBlock(scope: !1428, file: !13, line: 2059, column: 8)
!1435 = !DISubprogram(name: "textiowrapper_tell", scope: !13, file: !13, line: 2238, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2239, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_tell, variables: !1436)
!1436 = !{!1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1455, !1456, !1462, !1464, !1466, !1469, !1471, !1475, !1479, !1481, !1483, !1485, !1487, !1489, !1493, !1495, !1498, !1500, !1502, !1504, !1507, !1508, !1509, !1511}
!1437 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1435, file: !13, line: 2238, type: !695)
!1438 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1435, file: !13, line: 2238, type: !50)
!1439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1435, file: !13, line: 2240, type: !50)
!1440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "posobj", scope: !1435, file: !13, line: 2241, type: !50)
!1441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookie", scope: !1435, file: !13, line: 2242, type: !1327)
!1442 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next_input", scope: !1435, file: !13, line: 2243, type: !50)
!1443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chars_to_skip", scope: !1435, file: !13, line: 2244, type: !22)
!1444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chars_decoded", scope: !1435, file: !13, line: 2244, type: !22)
!1445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "skip_bytes", scope: !1435, file: !13, line: 2245, type: !22)
!1446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "skip_back", scope: !1435, file: !13, line: 2245, type: !22)
!1447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "saved_state", scope: !1435, file: !13, line: 2246, type: !50)
!1448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input", scope: !1435, file: !13, line: 2247, type: !64)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_end", scope: !1435, file: !13, line: 2247, type: !64)
!1450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_buffer", scope: !1435, file: !13, line: 2248, type: !64)
!1451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_buffer_len", scope: !1435, file: !13, line: 2249, type: !22)
!1452 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dec_flags", scope: !1435, file: !13, line: 2250, type: !56)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1454, file: !13, line: 2253, type: !56)
!1454 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2253, column: 8)
!1455 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_res", scope: !1454, file: !13, line: 2253, type: !50)
!1456 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1457, file: !13, line: 2253, type: !50)
!1457 = distinct !DILexicalBlock(scope: !1458, file: !13, line: 2253, column: 289)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !13, line: 2253, column: 163)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !13, line: 2253, column: 100)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !13, line: 2253, column: 94)
!1461 = distinct !DILexicalBlock(scope: !1454, file: !13, line: 2253, column: 37)
!1462 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1463, file: !13, line: 2270, type: !50)
!1463 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2270, column: 8)
!1464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1465, file: !13, line: 2286, type: !50)
!1465 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2286, column: 8)
!1466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_decoded", scope: !1467, file: !13, line: 2343, type: !50)
!1467 = distinct !DILexicalBlock(scope: !1468, file: !13, line: 2343, column: 12)
!1468 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2339, column: 28)
!1469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1470, file: !13, line: 2343, type: !50)
!1470 = distinct !DILexicalBlock(scope: !1467, file: !13, line: 2343, column: 252)
!1471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_state", scope: !1472, file: !13, line: 2345, type: !50)
!1472 = distinct !DILexicalBlock(scope: !1473, file: !13, line: 2345, column: 16)
!1473 = distinct !DILexicalBlock(scope: !1474, file: !13, line: 2344, column: 45)
!1474 = distinct !DILexicalBlock(scope: !1468, file: !13, line: 2344, column: 13)
!1475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1476, file: !13, line: 2345, type: !50)
!1476 = distinct !DILexicalBlock(scope: !1477, file: !13, line: 2345, column: 238)
!1477 = distinct !DILexicalBlock(scope: !1478, file: !13, line: 2345, column: 233)
!1478 = distinct !DILexicalBlock(scope: !1472, file: !13, line: 2345, column: 153)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1480, file: !13, line: 2345, type: !50)
!1480 = distinct !DILexicalBlock(scope: !1472, file: !13, line: 2345, column: 456)
!1481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1482, file: !13, line: 2385, type: !22)
!1482 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2384, column: 31)
!1483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_decoded", scope: !1484, file: !13, line: 2387, type: !50)
!1484 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2387, column: 12)
!1485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1486, file: !13, line: 2387, type: !50)
!1486 = distinct !DILexicalBlock(scope: !1484, file: !13, line: 2387, column: 243)
!1487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_state", scope: !1488, file: !13, line: 2391, type: !50)
!1488 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2391, column: 12)
!1489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1490, file: !13, line: 2391, type: !50)
!1490 = distinct !DILexicalBlock(scope: !1491, file: !13, line: 2391, column: 234)
!1491 = distinct !DILexicalBlock(scope: !1492, file: !13, line: 2391, column: 229)
!1492 = distinct !DILexicalBlock(scope: !1488, file: !13, line: 2391, column: 149)
!1493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1494, file: !13, line: 2391, type: !50)
!1494 = distinct !DILexicalBlock(scope: !1488, file: !13, line: 2391, column: 452)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decoded", scope: !1496, file: !13, line: 2407, type: !50)
!1496 = distinct !DILexicalBlock(scope: !1497, file: !13, line: 2405, column: 29)
!1497 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2405, column: 9)
!1498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1499, file: !13, line: 2412, type: !50)
!1499 = distinct !DILexicalBlock(scope: !1496, file: !13, line: 2412, column: 12)
!1500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1501, file: !13, line: 2424, type: !50)
!1501 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2424, column: 8)
!1502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1503, file: !13, line: 2427, type: !50)
!1503 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2427, column: 8)
!1504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !1505, file: !13, line: 2435, type: !50)
!1505 = distinct !DILexicalBlock(scope: !1506, file: !13, line: 2434, column: 22)
!1506 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2434, column: 9)
!1507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1505, file: !13, line: 2435, type: !50)
!1508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "traceback", scope: !1505, file: !13, line: 2435, type: !50)
!1509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1510, file: !13, line: 2439, type: !50)
!1510 = distinct !DILexicalBlock(scope: !1505, file: !13, line: 2439, column: 12)
!1511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1512, file: !13, line: 2442, type: !50)
!1512 = distinct !DILexicalBlock(scope: !1505, file: !13, line: 2442, column: 12)
!1513 = !DISubprogram(name: "textiowrapper_build_cookie", scope: !13, file: !13, line: 2008, type: !1514, isLocal: true, isDefinition: true, scopeLine: 2009, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.cookie_type*)* @textiowrapper_build_cookie, variables: !1516)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!50, !1404}
!1516 = !{!1517, !1518}
!1517 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cookie", arg: 1, scope: !1513, file: !13, line: 2008, type: !1404)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1513, file: !13, line: 2010, type: !1409)
!1519 = !DISubprogram(name: "textiowrapper_truncate", scope: !13, file: !13, line: 2450, type: !1116, isLocal: true, isDefinition: true, scopeLine: 2451, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @textiowrapper_truncate, variables: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525}
!1521 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1519, file: !13, line: 2450, type: !695)
!1522 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1519, file: !13, line: 2450, type: !50)
!1523 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !1519, file: !13, line: 2452, type: !50)
!1524 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1519, file: !13, line: 2453, type: !50)
!1525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1526, file: !13, line: 2463, type: !50)
!1526 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2463, column: 8)
!1527 = !DISubprogram(name: "textiowrapper_name_get", scope: !13, file: !13, line: 2668, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2669, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_name_get, variables: !1528)
!1528 = !{!1529, !1530}
!1529 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1527, file: !13, line: 2668, type: !695)
!1530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1527, file: !13, line: 2668, type: !102)
!1531 = !DISubprogram(name: "textiowrapper_newlines_get", scope: !13, file: !13, line: 2682, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2683, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_newlines_get, variables: !1532)
!1532 = !{!1533, !1534, !1535}
!1533 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1531, file: !13, line: 2682, type: !695)
!1534 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1531, file: !13, line: 2682, type: !102)
!1535 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1531, file: !13, line: 2684, type: !50)
!1536 = !DISubprogram(name: "textiowrapper_errors_get", scope: !13, file: !13, line: 2702, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2703, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_errors_get, variables: !1537)
!1537 = !{!1538, !1539}
!1538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1536, file: !13, line: 2702, type: !695)
!1539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1536, file: !13, line: 2702, type: !102)
!1540 = !DISubprogram(name: "textiowrapper_chunk_size_get", scope: !13, file: !13, line: 2709, type: !1016, isLocal: true, isDefinition: true, scopeLine: 2710, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, i8*)* @textiowrapper_chunk_size_get, variables: !1541)
!1541 = !{!1542, !1543}
!1542 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1540, file: !13, line: 2709, type: !695)
!1543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 2, scope: !1540, file: !13, line: 2709, type: !102)
!1544 = !DISubprogram(name: "textiowrapper_chunk_size_set", scope: !13, file: !13, line: 2716, type: !1545, isLocal: true, isDefinition: true, scopeLine: 2717, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct._object*, i8*)* @textiowrapper_chunk_size_set, variables: !1547)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!56, !695, !50, !102}
!1547 = !{!1548, !1549, !1550, !1551}
!1548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1544, file: !13, line: 2716, type: !695)
!1549 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1544, file: !13, line: 2716, type: !50)
!1550 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "context", arg: 3, scope: !1544, file: !13, line: 2716, type: !102)
!1551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1544, file: !13, line: 2718, type: !22)
!1552 = !DISubprogram(name: "textiowrapper_init", scope: !13, file: !13, line: 847, type: !1553, isLocal: true, isDefinition: true, scopeLine: 848, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.textio*, %struct._object*, %struct._object*)* @textiowrapper_init, variables: !1555)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!56, !695, !50, !50}
!1555 = !{!1556, !1557, !1558, !1559, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1576, !1580, !1582, !1586, !1588, !1592, !1594, !1598, !1600, !1604, !1606, !1610, !1612, !1616, !1618, !1622, !1624, !1628, !1630, !1634, !1637, !1640, !1642, !1646, !1650, !1653, !1655, !1659, !1663, !1667, !1671, !1676, !1677, !1679, !1680, !1682, !1687, !1689, !1693, !1695, !1707, !1709, !1712, !1714, !1720, !1722, !1725, !1726, !1728, !1732, !1734}
!1556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1552, file: !13, line: 847, type: !695)
!1557 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1552, file: !13, line: 847, type: !50)
!1558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1552, file: !13, line: 847, type: !50)
!1559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kwlist", scope: !1552, file: !13, line: 849, type: !1560)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 448, align: 64, elements: !1561)
!1561 = !{!1562}
!1562 = !DISubrange(count: 7)
!1563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1552, file: !13, line: 852, type: !50)
!1564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "raw", scope: !1552, file: !13, line: 852, type: !50)
!1565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "codec_info", scope: !1552, file: !13, line: 852, type: !50)
!1566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding", scope: !1552, file: !13, line: 853, type: !64)
!1567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1552, file: !13, line: 854, type: !64)
!1568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newline", scope: !1552, file: !13, line: 855, type: !64)
!1569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line_buffering", scope: !1552, file: !13, line: 856, type: !56)
!1570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "write_through", scope: !1552, file: !13, line: 856, type: !56)
!1571 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1552, file: !13, line: 857, type: !563)
!1572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1552, file: !13, line: 859, type: !50)
!1573 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1552, file: !13, line: 860, type: !56)
!1574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1575, file: !13, line: 878, type: !50)
!1575 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 878, column: 8)
!1576 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1577, file: !13, line: 878, type: !50)
!1577 = distinct !DILexicalBlock(scope: !1578, file: !13, line: 878, column: 119)
!1578 = distinct !DILexicalBlock(scope: !1579, file: !13, line: 878, column: 85)
!1579 = distinct !DILexicalBlock(scope: !1575, file: !13, line: 878, column: 62)
!1580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1581, file: !13, line: 879, type: !50)
!1581 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 879, column: 8)
!1582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1583, file: !13, line: 879, type: !50)
!1583 = distinct !DILexicalBlock(scope: !1584, file: !13, line: 879, column: 123)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !13, line: 879, column: 87)
!1585 = distinct !DILexicalBlock(scope: !1581, file: !13, line: 879, column: 64)
!1586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1587, file: !13, line: 880, type: !50)
!1587 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 880, column: 8)
!1588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1589, file: !13, line: 880, type: !50)
!1589 = distinct !DILexicalBlock(scope: !1590, file: !13, line: 880, column: 121)
!1590 = distinct !DILexicalBlock(scope: !1591, file: !13, line: 880, column: 86)
!1591 = distinct !DILexicalBlock(scope: !1587, file: !13, line: 880, column: 63)
!1592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1593, file: !13, line: 881, type: !50)
!1593 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 881, column: 8)
!1594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1595, file: !13, line: 881, type: !50)
!1595 = distinct !DILexicalBlock(scope: !1596, file: !13, line: 881, column: 121)
!1596 = distinct !DILexicalBlock(scope: !1597, file: !13, line: 881, column: 86)
!1597 = distinct !DILexicalBlock(scope: !1593, file: !13, line: 881, column: 63)
!1598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1599, file: !13, line: 882, type: !50)
!1599 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 882, column: 8)
!1600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1601, file: !13, line: 882, type: !50)
!1601 = distinct !DILexicalBlock(scope: !1602, file: !13, line: 882, column: 119)
!1602 = distinct !DILexicalBlock(scope: !1603, file: !13, line: 882, column: 85)
!1603 = distinct !DILexicalBlock(scope: !1599, file: !13, line: 882, column: 62)
!1604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1605, file: !13, line: 883, type: !50)
!1605 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 883, column: 8)
!1606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1607, file: !13, line: 883, type: !50)
!1607 = distinct !DILexicalBlock(scope: !1608, file: !13, line: 883, column: 133)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !13, line: 883, column: 92)
!1609 = distinct !DILexicalBlock(scope: !1605, file: !13, line: 883, column: 69)
!1610 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1611, file: !13, line: 884, type: !50)
!1611 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 884, column: 8)
!1612 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1613, file: !13, line: 884, type: !50)
!1613 = distinct !DILexicalBlock(scope: !1614, file: !13, line: 884, column: 133)
!1614 = distinct !DILexicalBlock(scope: !1615, file: !13, line: 884, column: 92)
!1615 = distinct !DILexicalBlock(scope: !1611, file: !13, line: 884, column: 69)
!1616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1617, file: !13, line: 885, type: !50)
!1617 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 885, column: 8)
!1618 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1619, file: !13, line: 885, type: !50)
!1619 = distinct !DILexicalBlock(scope: !1620, file: !13, line: 885, column: 123)
!1620 = distinct !DILexicalBlock(scope: !1621, file: !13, line: 885, column: 87)
!1621 = distinct !DILexicalBlock(scope: !1617, file: !13, line: 885, column: 64)
!1622 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1623, file: !13, line: 886, type: !50)
!1623 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 886, column: 8)
!1624 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1625, file: !13, line: 886, type: !50)
!1625 = distinct !DILexicalBlock(scope: !1626, file: !13, line: 886, column: 119)
!1626 = distinct !DILexicalBlock(scope: !1627, file: !13, line: 886, column: 85)
!1627 = distinct !DILexicalBlock(scope: !1623, file: !13, line: 886, column: 62)
!1628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1629, file: !13, line: 887, type: !50)
!1629 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 887, column: 8)
!1630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1631, file: !13, line: 887, type: !50)
!1631 = distinct !DILexicalBlock(scope: !1632, file: !13, line: 887, column: 113)
!1632 = distinct !DILexicalBlock(scope: !1633, file: !13, line: 887, column: 82)
!1633 = distinct !DILexicalBlock(scope: !1629, file: !13, line: 887, column: 59)
!1634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fileno", scope: !1635, file: !13, line: 895, type: !50)
!1635 = distinct !DILexicalBlock(scope: !1636, file: !13, line: 893, column: 33)
!1636 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 893, column: 9)
!1637 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1638, file: !13, line: 911, type: !56)
!1638 = distinct !DILexicalBlock(scope: !1639, file: !13, line: 910, column: 14)
!1639 = distinct !DILexicalBlock(scope: !1635, file: !13, line: 901, column: 13)
!1640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1641, file: !13, line: 912, type: !50)
!1641 = distinct !DILexicalBlock(scope: !1638, file: !13, line: 912, column: 16)
!1642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1643, file: !13, line: 921, type: !50)
!1643 = distinct !DILexicalBlock(scope: !1644, file: !13, line: 921, column: 20)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !13, line: 920, column: 22)
!1645 = distinct !DILexicalBlock(scope: !1638, file: !13, line: 918, column: 17)
!1646 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1647, file: !13, line: 921, type: !50)
!1647 = distinct !DILexicalBlock(scope: !1648, file: !13, line: 921, column: 135)
!1648 = distinct !DILexicalBlock(scope: !1649, file: !13, line: 921, column: 99)
!1649 = distinct !DILexicalBlock(scope: !1643, file: !13, line: 921, column: 76)
!1650 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "locale_module", scope: !1651, file: !13, line: 925, type: !50)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !13, line: 924, column: 65)
!1652 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 924, column: 9)
!1653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1654, file: !13, line: 930, type: !50)
!1654 = distinct !DILexicalBlock(scope: !1651, file: !13, line: 930, column: 12)
!1655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1656, file: !13, line: 947, type: !50)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !13, line: 947, column: 16)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !13, line: 946, column: 18)
!1658 = distinct !DILexicalBlock(scope: !1651, file: !13, line: 931, column: 13)
!1659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1660, file: !13, line: 947, type: !50)
!1660 = distinct !DILexicalBlock(scope: !1661, file: !13, line: 947, column: 131)
!1661 = distinct !DILexicalBlock(scope: !1662, file: !13, line: 947, column: 95)
!1662 = distinct !DILexicalBlock(scope: !1656, file: !13, line: 947, column: 72)
!1663 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1664, file: !13, line: 967, type: !50)
!1664 = distinct !DILexicalBlock(scope: !1665, file: !13, line: 967, column: 12)
!1665 = distinct !DILexicalBlock(scope: !1666, file: !13, line: 966, column: 35)
!1666 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 966, column: 9)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1668, file: !13, line: 967, type: !50)
!1668 = distinct !DILexicalBlock(scope: !1669, file: !13, line: 967, column: 127)
!1669 = distinct !DILexicalBlock(scope: !1670, file: !13, line: 967, column: 91)
!1670 = distinct !DILexicalBlock(scope: !1664, file: !13, line: 967, column: 68)
!1671 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !1672, file: !13, line: 996, type: !107)
!1672 = distinct !DILexicalBlock(scope: !1673, file: !13, line: 996, column: 29)
!1673 = distinct !DILexicalBlock(scope: !1674, file: !13, line: 996, column: 13)
!1674 = distinct !DILexicalBlock(scope: !1675, file: !13, line: 992, column: 47)
!1675 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 992, column: 9)
!1676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !1672, file: !13, line: 996, type: !107)
!1677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !1678, file: !13, line: 996, type: !456)
!1678 = distinct !DILexicalBlock(scope: !1672, file: !13, line: 996, column: 1692)
!1679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !1678, file: !13, line: 996, type: !56)
!1680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1681, file: !13, line: 1009, type: !50)
!1681 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1009, column: 8)
!1682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "incrementalDecoder", scope: !1683, file: !13, line: 1019, type: !50)
!1683 = distinct !DILexicalBlock(scope: !1684, file: !13, line: 1018, column: 34)
!1684 = distinct !DILexicalBlock(scope: !1685, file: !13, line: 1018, column: 13)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !13, line: 1012, column: 17)
!1686 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1012, column: 9)
!1687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1688, file: !13, line: 1024, type: !50)
!1688 = distinct !DILexicalBlock(scope: !1683, file: !13, line: 1024, column: 16)
!1689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1690, file: !13, line: 1024, type: !50)
!1690 = distinct !DILexicalBlock(scope: !1691, file: !13, line: 1024, column: 129)
!1691 = distinct !DILexicalBlock(scope: !1692, file: !13, line: 1024, column: 94)
!1692 = distinct !DILexicalBlock(scope: !1688, file: !13, line: 1024, column: 71)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1694, file: !13, line: 1034, type: !50)
!1694 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1034, column: 8)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !1696, file: !13, line: 1051, type: !1701)
!1696 = distinct !DILexicalBlock(scope: !1697, file: !13, line: 1050, column: 86)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !13, line: 1050, column: 18)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !13, line: 1044, column: 13)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !13, line: 1037, column: 17)
!1700 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1037, column: 9)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64, align: 64)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "encodefuncentry", file: !13, line: 830, baseType: !1703)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 827, size: 128, align: 64, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1703, file: !13, line: 828, baseType: !40, size: 64, align: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "encodefunc", scope: !1703, file: !13, line: 829, baseType: !720, size: 64, align: 64, offset: 64)
!1707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1708, file: !13, line: 1060, type: !50)
!1708 = distinct !DILexicalBlock(scope: !1699, file: !13, line: 1060, column: 12)
!1709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1710, file: !13, line: 1060, type: !50)
!1710 = distinct !DILexicalBlock(scope: !1711, file: !13, line: 1060, column: 99)
!1711 = distinct !DILexicalBlock(scope: !1708, file: !13, line: 1060, column: 65)
!1712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1713, file: !13, line: 1064, type: !50)
!1713 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1064, column: 8)
!1714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1715, file: !13, line: 1083, type: !50)
!1715 = distinct !DILexicalBlock(scope: !1716, file: !13, line: 1083, column: 16)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !13, line: 1080, column: 18)
!1717 = distinct !DILexicalBlock(scope: !1718, file: !13, line: 1074, column: 13)
!1718 = distinct !DILexicalBlock(scope: !1719, file: !13, line: 1071, column: 69)
!1719 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1069, column: 9)
!1720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1721, file: !13, line: 1090, type: !50)
!1721 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1090, column: 8)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cookieObj", scope: !1723, file: !13, line: 1099, type: !50)
!1723 = distinct !DILexicalBlock(scope: !1724, file: !13, line: 1098, column: 42)
!1724 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1098, column: 9)
!1725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !1723, file: !13, line: 1100, type: !56)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1727, file: !13, line: 1109, type: !50)
!1727 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1109, column: 12)
!1728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1729, file: !13, line: 1120, type: !50)
!1729 = distinct !DILexicalBlock(scope: !1730, file: !13, line: 1120, column: 16)
!1730 = distinct !DILexicalBlock(scope: !1731, file: !13, line: 1114, column: 23)
!1731 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1114, column: 13)
!1732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1733, file: !13, line: 1128, type: !50)
!1733 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1128, column: 8)
!1734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1735, file: !13, line: 1128, type: !50)
!1735 = distinct !DILexicalBlock(scope: !1736, file: !13, line: 1128, column: 102)
!1736 = distinct !DILexicalBlock(scope: !1733, file: !13, line: 1128, column: 68)
!1737 = !DISubprogram(name: "ascii_encode", scope: !13, file: !13, line: 750, type: !1116, isLocal: true, isDefinition: true, scopeLine: 751, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @ascii_encode, variables: !1738)
!1738 = !{!1739, !1740}
!1739 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1737, file: !13, line: 750, type: !695)
!1740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1737, file: !13, line: 750, type: !50)
!1741 = !DISubprogram(name: "latin1_encode", scope: !13, file: !13, line: 820, type: !1116, isLocal: true, isDefinition: true, scopeLine: 821, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @latin1_encode, variables: !1742)
!1742 = !{!1743, !1744}
!1743 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1741, file: !13, line: 820, type: !695)
!1744 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1741, file: !13, line: 820, type: !50)
!1745 = !DISubprogram(name: "utf8_encode", scope: !13, file: !13, line: 814, type: !1116, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf8_encode, variables: !1746)
!1746 = !{!1747, !1748}
!1747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1745, file: !13, line: 814, type: !695)
!1748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1745, file: !13, line: 814, type: !50)
!1749 = !DISubprogram(name: "utf16be_encode", scope: !13, file: !13, line: 756, type: !1116, isLocal: true, isDefinition: true, scopeLine: 757, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf16be_encode, variables: !1750)
!1750 = !{!1751, !1752}
!1751 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1749, file: !13, line: 756, type: !695)
!1752 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1749, file: !13, line: 756, type: !50)
!1753 = !DISubprogram(name: "utf16le_encode", scope: !13, file: !13, line: 763, type: !1116, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf16le_encode, variables: !1754)
!1754 = !{!1755, !1756}
!1755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1753, file: !13, line: 763, type: !695)
!1756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1753, file: !13, line: 763, type: !50)
!1757 = !DISubprogram(name: "utf16_encode", scope: !13, file: !13, line: 770, type: !1116, isLocal: true, isDefinition: true, scopeLine: 771, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf16_encode, variables: !1758)
!1758 = !{!1759, !1760}
!1759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1757, file: !13, line: 770, type: !695)
!1760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1757, file: !13, line: 770, type: !50)
!1761 = !DISubprogram(name: "utf32be_encode", scope: !13, file: !13, line: 785, type: !1116, isLocal: true, isDefinition: true, scopeLine: 786, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf32be_encode, variables: !1762)
!1762 = !{!1763, !1764}
!1763 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1761, file: !13, line: 785, type: !695)
!1764 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1761, file: !13, line: 785, type: !50)
!1765 = !DISubprogram(name: "utf32le_encode", scope: !13, file: !13, line: 792, type: !1116, isLocal: true, isDefinition: true, scopeLine: 793, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf32le_encode, variables: !1766)
!1766 = !{!1767, !1768}
!1767 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1765, file: !13, line: 792, type: !695)
!1768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1765, file: !13, line: 792, type: !50)
!1769 = !DISubprogram(name: "utf32_encode", scope: !13, file: !13, line: 799, type: !1116, isLocal: true, isDefinition: true, scopeLine: 800, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.textio*, %struct._object*)* @utf32_encode, variables: !1770)
!1770 = !{!1771, !1772}
!1771 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1769, file: !13, line: 799, type: !695)
!1772 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "text", arg: 2, scope: !1769, file: !13, line: 799, type: !50)
!1773 = !{!1774, !1776, !1777, !1778, !1782, !1787, !1791, !1795, !1799, !1803, !1806, !1810, !1814, !1818, !1822, !1823, !1831, !1835, !1836, !1837, !1841, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1862, !1866, !1867, !1871, !1872}
!1774 = !DIGlobalVariable(name: "PyTextIOBase_Type", scope: !0, file: !13, line: 158, type: !1775, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyTextIOBase_Type)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !18, line: 422, baseType: !31)
!1776 = !DIGlobalVariable(name: "PyIncrementalNewlineDecoder_Type", scope: !0, file: !13, line: 608, type: !1775, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyIncrementalNewlineDecoder_Type)
!1777 = !DIGlobalVariable(name: "PyTextIOWrapper_Type", scope: !0, file: !13, line: 2773, type: !1775, isLocal: false, isDefinition: true, variable: %struct._typeobject* @PyTextIOWrapper_Type)
!1778 = !DIGlobalVariable(name: "textiobase_doc", scope: !0, file: !13, line: 37, type: !1779, isLocal: true, isDefinition: true, variable: [209 x i8]* @textiobase_doc)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1672, align: 8, elements: !1780)
!1780 = !{!1781}
!1781 = !DISubrange(count: 209)
!1782 = !DIGlobalVariable(name: "textiobase_methods", scope: !0, file: !13, line: 143, type: !1783, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMethodDef]* @textiobase_methods)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 1280, align: 64, elements: !1785)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !294, line: 47, baseType: !293)
!1785 = !{!1786}
!1786 = !DISubrange(count: 5)
!1787 = !DIGlobalVariable(name: "textiobase_detach_doc", scope: !0, file: !13, line: 54, type: !1788, isLocal: true, isDefinition: true, variable: [151 x i8]* @textiobase_detach_doc)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1208, align: 8, elements: !1789)
!1789 = !{!1790}
!1790 = !DISubrange(count: 151)
!1791 = !DIGlobalVariable(name: "textiobase_read_doc", scope: !0, file: !13, line: 67, type: !1792, isLocal: true, isDefinition: true, variable: [156 x i8]* @textiobase_read_doc)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1248, align: 8, elements: !1793)
!1793 = !{!1794}
!1794 = !DISubrange(count: 156)
!1795 = !DIGlobalVariable(name: "textiobase_readline_doc", scope: !0, file: !13, line: 80, type: !1796, isLocal: true, isDefinition: true, variable: [80 x i8]* @textiobase_readline_doc)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 640, align: 8, elements: !1797)
!1797 = !{!1798}
!1798 = !DISubrange(count: 80)
!1799 = !DIGlobalVariable(name: "textiobase_write_doc", scope: !0, file: !13, line: 92, type: !1800, isLocal: true, isDefinition: true, variable: [119 x i8]* @textiobase_write_doc)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 952, align: 8, elements: !1801)
!1801 = !{!1802}
!1802 = !DISubrange(count: 119)
!1803 = !DIGlobalVariable(name: "textiobase_getset", scope: !0, file: !13, line: 151, type: !1804, isLocal: true, isDefinition: true, variable: [4 x %struct.PyGetSetDef]* @textiobase_getset)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 1280, align: 64, elements: !682)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !314, line: 17, baseType: !313)
!1806 = !DIGlobalVariable(name: "textiobase_encoding_doc", scope: !0, file: !13, line: 104, type: !1807, isLocal: true, isDefinition: true, variable: [59 x i8]* @textiobase_encoding_doc)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 472, align: 8, elements: !1808)
!1808 = !{!1809}
!1809 = !DISubrange(count: 59)
!1810 = !DIGlobalVariable(name: "textiobase_newlines_doc", scope: !0, file: !13, line: 116, type: !1811, isLocal: true, isDefinition: true, variable: [123 x i8]* @textiobase_newlines_doc)
!1811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 984, align: 8, elements: !1812)
!1812 = !{!1813}
!1813 = !DISubrange(count: 123)
!1814 = !DIGlobalVariable(name: "textiobase_errors_doc", scope: !0, file: !13, line: 130, type: !1815, isLocal: true, isDefinition: true, variable: [75 x i8]* @textiobase_errors_doc)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 600, align: 8, elements: !1816)
!1816 = !{!1817}
!1817 = !DISubrange(count: 75)
!1818 = !DIGlobalVariable(name: "incrementalnewlinedecoder_doc", scope: !0, file: !13, line: 213, type: !1819, isLocal: true, isDefinition: true, variable: [420 x i8]* @incrementalnewlinedecoder_doc)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 3360, align: 8, elements: !1820)
!1820 = !{!1821}
!1821 = !DISubrange(count: 420)
!1822 = !DIGlobalVariable(name: "incrementalnewlinedecoder_methods", scope: !0, file: !13, line: 595, type: !1783, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMethodDef]* @incrementalnewlinedecoder_methods)
!1823 = !DIGlobalVariable(name: "PyId_setstate", scope: !0, file: !13, line: 31, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_setstate)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !18, line: 144, baseType: !1825)
!1825 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !18, line: 140, size: 192, align: 64, elements: !1826)
!1826 = !{!1827, !1829, !1830}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1825, file: !18, line: 141, baseType: !1828, size: 64, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64, align: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1825, file: !18, line: 142, baseType: !40, size: 64, align: 64, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1825, file: !18, line: 143, baseType: !50, size: 64, align: 64, offset: 128)
!1831 = !DIGlobalVariable(name: "incrementalnewlinedecoder_getset", scope: !0, file: !13, line: 603, type: !1832, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @incrementalnewlinedecoder_getset)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 640, align: 64, elements: !1833)
!1833 = !{!1834}
!1834 = !DISubrange(count: 2)
!1835 = !DIGlobalVariable(name: "PyId_name", scope: !0, file: !13, line: 22, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_name)
!1836 = !DIGlobalVariable(name: "PyId_mode", scope: !0, file: !13, line: 21, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_mode)
!1837 = !DIGlobalVariable(name: "textiowrapper_doc", scope: !0, file: !13, line: 652, type: !1838, isLocal: true, isDefinition: true, variable: [1345 x i8]* @textiowrapper_doc)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 10760, align: 8, elements: !1839)
!1839 = !{!1840}
!1840 = !DISubrange(count: 1345)
!1841 = !DIGlobalVariable(name: "textiowrapper_methods", scope: !0, file: !13, line: 2732, type: !1842, isLocal: true, isDefinition: true, variable: [16 x %struct.PyMethodDef]* @textiowrapper_methods)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 4096, align: 64, elements: !1843)
!1843 = !{!1844}
!1844 = !DISubrange(count: 16)
!1845 = !DIGlobalVariable(name: "PyId_replace", scope: !0, file: !13, line: 27, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_replace)
!1846 = !DIGlobalVariable(name: "PyId_reset", scope: !0, file: !13, line: 28, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_reset)
!1847 = !DIGlobalVariable(name: "PyId_read", scope: !0, file: !13, line: 24, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_read)
!1848 = !DIGlobalVariable(name: "PyId_flush", scope: !0, file: !13, line: 18, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_flush)
!1849 = !DIGlobalVariable(name: "PyId__dealloc_warn", scope: !0, file: !13, line: 15, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId__dealloc_warn)
!1850 = !DIGlobalVariable(name: "PyId_close", scope: !0, file: !13, line: 14, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_close)
!1851 = !DIGlobalVariable(name: "PyId_fileno", scope: !0, file: !13, line: 17, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_fileno)
!1852 = !DIGlobalVariable(name: "PyId_seekable", scope: !0, file: !13, line: 30, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_seekable)
!1853 = !DIGlobalVariable(name: "PyId_readable", scope: !0, file: !13, line: 26, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_readable)
!1854 = !DIGlobalVariable(name: "PyId_writable", scope: !0, file: !13, line: 33, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_writable)
!1855 = !DIGlobalVariable(name: "PyId_isatty", scope: !0, file: !13, line: 20, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_isatty)
!1856 = !DIGlobalVariable(name: "PyId_tell", scope: !0, file: !13, line: 32, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_tell)
!1857 = !DIGlobalVariable(name: "PyId_seek", scope: !0, file: !13, line: 29, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_seek)
!1858 = !DIGlobalVariable(name: "PyId_decode", scope: !0, file: !13, line: 16, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_decode)
!1859 = !DIGlobalVariable(name: "textiowrapper_members", scope: !0, file: !13, line: 2753, type: !1860, isLocal: true, isDefinition: true, variable: [5 x %struct.PyMemberDef]* @textiowrapper_members)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 1600, align: 64, elements: !1785)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !304, line: 24, baseType: !303)
!1862 = !DIGlobalVariable(name: "textiowrapper_getset", scope: !0, file: !13, line: 2761, type: !1863, isLocal: true, isDefinition: true, variable: [6 x %struct.PyGetSetDef]* @textiowrapper_getset)
!1863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 1920, align: 64, elements: !1864)
!1864 = !{!1865}
!1865 = !DISubrange(count: 6)
!1866 = !DIGlobalVariable(name: "PyId_getpreferredencoding", scope: !0, file: !13, line: 19, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_getpreferredencoding)
!1867 = !DIGlobalVariable(name: "encodefuncs", scope: !0, file: !13, line: 832, type: !1868, isLocal: true, isDefinition: true, variable: [10 x %struct.encodefuncentry]* @encodefuncs)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 1280, align: 64, elements: !1869)
!1869 = !{!1870}
!1870 = !DISubrange(count: 10)
!1871 = !DIGlobalVariable(name: "PyId_raw", scope: !0, file: !13, line: 23, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_raw)
!1872 = !DIGlobalVariable(name: "PyId_read1", scope: !0, file: !13, line: 25, type: !1824, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @PyId_read1)
!1873 = !{i32 2, !"Dwarf Version", i32 4}
!1874 = !{i32 2, !"Debug Info Version", i32 3}
!1875 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1876 = !{!1877, !1877, i64 0}
!1877 = !{!"any pointer", !1878, i64 0}
!1878 = !{!"omnipotent char", !1879, i64 0}
!1879 = !{!"Simple C/C++ TBAA"}
!1880 = !DIExpression()
!1881 = !DILocation(line: 298, column: 47, scope: !459)
!1882 = !DILocation(line: 299, column: 47, scope: !459)
!1883 = !{!1884, !1884, i64 0}
!1884 = !{!"int", !1878, i64 0}
!1885 = !DILocation(line: 299, column: 58, scope: !459)
!1886 = !DILocation(line: 301, column: 5, scope: !459)
!1887 = !DILocation(line: 301, column: 15, scope: !459)
!1888 = !DILocation(line: 302, column: 5, scope: !459)
!1889 = !DILocation(line: 302, column: 16, scope: !459)
!1890 = !DILocation(line: 303, column: 5, scope: !459)
!1891 = !DILocation(line: 303, column: 23, scope: !459)
!1892 = !DILocation(line: 303, column: 51, scope: !459)
!1893 = !DILocation(line: 303, column: 30, scope: !459)
!1894 = !DILocation(line: 305, column: 9, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !459, file: !13, line: 305, column: 9)
!1896 = !DILocation(line: 305, column: 15, scope: !1895)
!1897 = !{!1898, !1877, i64 16}
!1898 = !{!"", !1899, i64 0, !1877, i64 16, !1877, i64 24, !1884, i64 32, !1884, i64 32, !1884, i64 32}
!1899 = !{!"_object", !1900, i64 0, !1877, i64 8}
!1900 = !{!"long", !1878, i64 0}
!1901 = !DILocation(line: 305, column: 23, scope: !1895)
!1902 = !DILocation(line: 305, column: 9, scope: !459)
!1903 = !DILocation(line: 306, column: 25, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1895, file: !13, line: 305, column: 38)
!1905 = !DILocation(line: 306, column: 9, scope: !1904)
!1906 = !DILocation(line: 308, column: 9, scope: !1904)
!1907 = !DILocation(line: 312, column: 9, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !459, file: !13, line: 312, column: 9)
!1909 = !DILocation(line: 312, column: 15, scope: !1908)
!1910 = !DILocation(line: 312, column: 23, scope: !1908)
!1911 = !DILocation(line: 312, column: 9, scope: !459)
!1912 = !DILocation(line: 313, column: 45, scope: !1913)
!1913 = distinct !DILexicalBlock(scope: !1908, file: !13, line: 312, column: 45)
!1914 = !DILocation(line: 313, column: 51, scope: !1913)
!1915 = !DILocation(line: 314, column: 13, scope: !1913)
!1916 = !DILocation(line: 314, column: 31, scope: !1913)
!1917 = !DILocation(line: 314, column: 38, scope: !1913)
!1918 = !DILocation(line: 313, column: 18, scope: !1913)
!1919 = !DILocation(line: 313, column: 16, scope: !1913)
!1920 = !DILocation(line: 315, column: 5, scope: !1913)
!1921 = !DILocation(line: 317, column: 18, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1908, file: !13, line: 316, column: 10)
!1923 = !DILocation(line: 317, column: 16, scope: !1922)
!1924 = !DILocation(line: 318, column: 25, scope: !1922)
!1925 = !DILocation(line: 318, column: 35, scope: !1922)
!1926 = !DILocation(line: 318, column: 44, scope: !1922)
!1927 = !{!1899, !1900, i64 0}
!1928 = !DILocation(line: 321, column: 23, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !459, file: !13, line: 321, column: 9)
!1930 = !DILocation(line: 321, column: 9, scope: !1929)
!1931 = !DILocation(line: 321, column: 31, scope: !1929)
!1932 = !DILocation(line: 321, column: 9, scope: !459)
!1933 = !DILocation(line: 322, column: 9, scope: !1929)
!1934 = !DILocation(line: 324, column: 66, scope: !459)
!1935 = !DILocation(line: 324, column: 48, scope: !459)
!1936 = !DILocation(line: 324, column: 76, scope: !459)
!1937 = !{!1938, !1900, i64 16}
!1938 = !{!"", !1899, i64 0, !1900, i64 16, !1900, i64 24, !1939, i64 32, !1877, i64 40}
!1939 = !{!"", !1884, i64 0, !1884, i64 0, !1884, i64 0, !1884, i64 0, !1884, i64 0, !1884, i64 1}
!1940 = !DILocation(line: 324, column: 16, scope: !459)
!1941 = !{!1900, !1900, i64 0}
!1942 = !DILocation(line: 325, column: 9, scope: !469)
!1943 = !DILocation(line: 325, column: 15, scope: !469)
!1944 = !DILocation(line: 325, column: 25, scope: !469)
!1945 = !DILocation(line: 325, column: 29, scope: !1946)
!1946 = !DILexicalBlockFile(scope: !469, file: !13, discriminator: 1)
!1947 = !DILocation(line: 325, column: 35, scope: !469)
!1948 = !DILocation(line: 325, column: 38, scope: !1949)
!1949 = !DILexicalBlockFile(scope: !469, file: !13, discriminator: 2)
!1950 = !DILocation(line: 325, column: 49, scope: !469)
!1951 = !DILocation(line: 325, column: 9, scope: !459)
!1952 = !DILocation(line: 327, column: 9, scope: !468)
!1953 = !DILocation(line: 327, column: 13, scope: !468)
!1954 = !DILocation(line: 328, column: 9, scope: !468)
!1955 = !DILocation(line: 328, column: 19, scope: !468)
!1956 = !DILocation(line: 329, column: 9, scope: !468)
!1957 = !DILocation(line: 329, column: 15, scope: !468)
!1958 = !DILocation(line: 331, column: 34, scope: !468)
!1959 = !DILocation(line: 331, column: 45, scope: !468)
!1960 = !DILocation(line: 332, column: 96, scope: !468)
!1961 = !DILocation(line: 332, column: 80, scope: !468)
!1962 = !DILocation(line: 332, column: 105, scope: !468)
!1963 = !DILocation(line: 332, column: 111, scope: !468)
!1964 = !DILocation(line: 332, column: 50, scope: !468)
!1965 = !DILocation(line: 332, column: 50, scope: !1966)
!1966 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 1)
!1967 = !DILocation(line: 332, column: 178, scope: !1968)
!1968 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 2)
!1969 = !DILocation(line: 332, column: 160, scope: !468)
!1970 = !DILocation(line: 332, column: 188, scope: !468)
!1971 = !DILocation(line: 332, column: 194, scope: !468)
!1972 = !DILocation(line: 332, column: 200, scope: !468)
!1973 = !DILocation(line: 332, column: 130, scope: !468)
!1974 = !DILocation(line: 332, column: 130, scope: !1975)
!1975 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 3)
!1976 = !DILocation(line: 332, column: 285, scope: !1977)
!1977 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 4)
!1978 = !DILocation(line: 332, column: 267, scope: !468)
!1979 = !DILocation(line: 332, column: 295, scope: !468)
!1980 = !DILocation(line: 332, column: 301, scope: !468)
!1981 = !DILocation(line: 332, column: 307, scope: !468)
!1982 = !DILocation(line: 332, column: 237, scope: !468)
!1983 = !DILocation(line: 332, column: 50, scope: !1984)
!1984 = !DILexicalBlockFile(scope: !1985, file: !13, discriminator: 6)
!1985 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 5)
!1986 = !DILocation(line: 331, column: 20, scope: !468)
!1987 = !DILocation(line: 331, column: 18, scope: !468)
!1988 = !DILocation(line: 333, column: 13, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !468, file: !13, line: 333, column: 13)
!1990 = !DILocation(line: 333, column: 22, scope: !1989)
!1991 = !DILocation(line: 333, column: 13, scope: !468)
!1992 = !DILocation(line: 334, column: 13, scope: !1989)
!1993 = !DILocation(line: 335, column: 64, scope: !468)
!1994 = !DILocation(line: 335, column: 46, scope: !468)
!1995 = !DILocation(line: 335, column: 76, scope: !468)
!1996 = !DILocation(line: 335, column: 82, scope: !468)
!1997 = !DILocation(line: 335, column: 14, scope: !468)
!1998 = !DILocation(line: 336, column: 49, scope: !468)
!1999 = !DILocation(line: 336, column: 32, scope: !468)
!2000 = !DILocation(line: 336, column: 61, scope: !468)
!2001 = !DILocation(line: 336, column: 67, scope: !468)
!2002 = !DILocation(line: 336, column: 30, scope: !468)
!2003 = !DILocation(line: 336, column: 125, scope: !1966)
!2004 = !DILocation(line: 336, column: 109, scope: !468)
!2005 = !DILocation(line: 336, column: 136, scope: !468)
!2006 = !DILocation(line: 336, column: 142, scope: !468)
!2007 = !DILocation(line: 336, column: 79, scope: !468)
!2008 = !DILocation(line: 336, column: 177, scope: !1975)
!2009 = !DILocation(line: 336, column: 160, scope: !468)
!2010 = !DILocation(line: 336, column: 187, scope: !468)
!2011 = !DILocation(line: 336, column: 152, scope: !468)
!2012 = !DILocation(line: 336, column: 230, scope: !1977)
!2013 = !DILocation(line: 336, column: 204, scope: !468)
!2014 = !DILocation(line: 336, column: 240, scope: !468)
!2015 = !DILocation(line: 336, column: 196, scope: !468)
!2016 = !DILocation(line: 336, column: 30, scope: !1984)
!2017 = !DILocation(line: 336, column: 287, scope: !1968)
!2018 = !DILocation(line: 336, column: 267, scope: !468)
!2019 = !DILocation(line: 336, column: 299, scope: !468)
!2020 = !DILocation(line: 336, column: 304, scope: !468)
!2021 = !DILocation(line: 336, column: 13, scope: !2022)
!2022 = !DILexicalBlockFile(scope: !2023, file: !13, discriminator: 8)
!2023 = !DILexicalBlockFile(scope: !468, file: !13, discriminator: 7)
!2024 = !DILocation(line: 337, column: 9, scope: !468)
!2025 = !DILocation(line: 337, column: 23, scope: !2026)
!2026 = !DILexicalBlockFile(scope: !2027, file: !13, discriminator: 1)
!2027 = distinct !DILexicalBlock(scope: !468, file: !13, line: 337, column: 12)
!2028 = !DILocation(line: 337, column: 108, scope: !2029)
!2029 = !DILexicalBlockFile(scope: !2030, file: !13, discriminator: 3)
!2030 = distinct !DILexicalBlock(scope: !2031, file: !13, line: 337, column: 59)
!2031 = distinct !DILexicalBlock(scope: !2027, file: !13, line: 337, column: 30)
!2032 = !DILocation(line: 337, column: 91, scope: !2030)
!2033 = !DILocation(line: 337, column: 120, scope: !2030)
!2034 = !DILocation(line: 337, column: 126, scope: !2030)
!2035 = !DILocation(line: 337, column: 89, scope: !2030)
!2036 = !DILocation(line: 337, column: 184, scope: !2037)
!2037 = !DILexicalBlockFile(scope: !2030, file: !13, discriminator: 5)
!2038 = !DILocation(line: 337, column: 168, scope: !2030)
!2039 = !DILocation(line: 337, column: 195, scope: !2030)
!2040 = !DILocation(line: 337, column: 201, scope: !2030)
!2041 = !DILocation(line: 337, column: 138, scope: !2030)
!2042 = !DILocation(line: 337, column: 236, scope: !2043)
!2043 = !DILexicalBlockFile(scope: !2030, file: !13, discriminator: 7)
!2044 = !DILocation(line: 337, column: 219, scope: !2030)
!2045 = !DILocation(line: 337, column: 246, scope: !2030)
!2046 = !DILocation(line: 337, column: 211, scope: !2030)
!2047 = !DILocation(line: 337, column: 289, scope: !2048)
!2048 = !DILexicalBlockFile(scope: !2030, file: !13, discriminator: 8)
!2049 = !DILocation(line: 337, column: 263, scope: !2030)
!2050 = !DILocation(line: 337, column: 299, scope: !2030)
!2051 = !DILocation(line: 337, column: 255, scope: !2030)
!2052 = !DILocation(line: 337, column: 89, scope: !2053)
!2053 = !DILexicalBlockFile(scope: !2054, file: !13, discriminator: 10)
!2054 = !DILexicalBlockFile(scope: !2030, file: !13, discriminator: 9)
!2055 = !DILocation(line: 337, column: 346, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !2030, file: !13, discriminator: 6)
!2057 = !DILocation(line: 337, column: 326, scope: !2030)
!2058 = !DILocation(line: 337, column: 358, scope: !2030)
!2059 = !DILocation(line: 337, column: 363, scope: !2030)
!2060 = !DILocation(line: 337, column: 61, scope: !2061)
!2061 = !DILexicalBlockFile(scope: !2062, file: !13, discriminator: 12)
!2062 = !DILexicalBlockFile(scope: !2030, file: !13, discriminator: 11)
!2063 = !DILocation(line: 337, column: 378, scope: !2030)
!2064 = !{!1878, !1878, i64 0}
!2065 = !DILocation(line: 337, column: 397, scope: !2030)
!2066 = !DILocation(line: 337, column: 482, scope: !2067)
!2067 = !DILexicalBlockFile(scope: !2068, file: !13, discriminator: 4)
!2068 = distinct !DILexicalBlock(scope: !2031, file: !13, line: 337, column: 433)
!2069 = !DILocation(line: 337, column: 465, scope: !2068)
!2070 = !DILocation(line: 337, column: 494, scope: !2068)
!2071 = !DILocation(line: 337, column: 500, scope: !2068)
!2072 = !DILocation(line: 337, column: 463, scope: !2068)
!2073 = !DILocation(line: 337, column: 558, scope: !2074)
!2074 = !DILexicalBlockFile(scope: !2068, file: !13, discriminator: 14)
!2075 = !DILocation(line: 337, column: 542, scope: !2068)
!2076 = !DILocation(line: 337, column: 569, scope: !2068)
!2077 = !DILocation(line: 337, column: 575, scope: !2068)
!2078 = !DILocation(line: 337, column: 512, scope: !2068)
!2079 = !DILocation(line: 337, column: 610, scope: !2080)
!2080 = !DILexicalBlockFile(scope: !2068, file: !13, discriminator: 16)
!2081 = !DILocation(line: 337, column: 593, scope: !2068)
!2082 = !DILocation(line: 337, column: 620, scope: !2068)
!2083 = !DILocation(line: 337, column: 585, scope: !2068)
!2084 = !DILocation(line: 337, column: 663, scope: !2085)
!2085 = !DILexicalBlockFile(scope: !2068, file: !13, discriminator: 17)
!2086 = !DILocation(line: 337, column: 637, scope: !2068)
!2087 = !DILocation(line: 337, column: 673, scope: !2068)
!2088 = !DILocation(line: 337, column: 629, scope: !2068)
!2089 = !DILocation(line: 337, column: 463, scope: !2090)
!2090 = !DILexicalBlockFile(scope: !2091, file: !13, discriminator: 19)
!2091 = !DILexicalBlockFile(scope: !2068, file: !13, discriminator: 18)
!2092 = !DILocation(line: 337, column: 720, scope: !2093)
!2093 = !DILexicalBlockFile(scope: !2068, file: !13, discriminator: 15)
!2094 = !DILocation(line: 337, column: 700, scope: !2068)
!2095 = !DILocation(line: 337, column: 732, scope: !2068)
!2096 = !DILocation(line: 337, column: 737, scope: !2068)
!2097 = !DILocation(line: 337, column: 436, scope: !2098)
!2098 = !DILexicalBlockFile(scope: !2099, file: !13, discriminator: 21)
!2099 = !DILexicalBlockFile(scope: !2068, file: !13, discriminator: 20)
!2100 = !DILocation(line: 337, column: 435, scope: !2068)
!2101 = !DILocation(line: 337, column: 752, scope: !2068)
!2102 = !{!2103, !2103, i64 0}
!2103 = !{!"short", !1878, i64 0}
!2104 = !DILocation(line: 337, column: 771, scope: !2068)
!2105 = !DILocation(line: 337, column: 852, scope: !2106)
!2106 = !DILexicalBlockFile(scope: !2107, file: !13, discriminator: 2)
!2107 = distinct !DILexicalBlock(scope: !2031, file: !13, line: 337, column: 789)
!2108 = !DILocation(line: 337, column: 835, scope: !2107)
!2109 = !DILocation(line: 337, column: 864, scope: !2107)
!2110 = !DILocation(line: 337, column: 870, scope: !2107)
!2111 = !DILocation(line: 337, column: 833, scope: !2107)
!2112 = !DILocation(line: 337, column: 928, scope: !2113)
!2113 = !DILexicalBlockFile(scope: !2107, file: !13, discriminator: 23)
!2114 = !DILocation(line: 337, column: 912, scope: !2107)
!2115 = !DILocation(line: 337, column: 939, scope: !2107)
!2116 = !DILocation(line: 337, column: 945, scope: !2107)
!2117 = !DILocation(line: 337, column: 882, scope: !2107)
!2118 = !DILocation(line: 337, column: 980, scope: !2119)
!2119 = !DILexicalBlockFile(scope: !2107, file: !13, discriminator: 25)
!2120 = !DILocation(line: 337, column: 963, scope: !2107)
!2121 = !DILocation(line: 337, column: 990, scope: !2107)
!2122 = !DILocation(line: 337, column: 955, scope: !2107)
!2123 = !DILocation(line: 337, column: 1033, scope: !2124)
!2124 = !DILexicalBlockFile(scope: !2107, file: !13, discriminator: 26)
!2125 = !DILocation(line: 337, column: 1007, scope: !2107)
!2126 = !DILocation(line: 337, column: 1043, scope: !2107)
!2127 = !DILocation(line: 337, column: 999, scope: !2107)
!2128 = !DILocation(line: 337, column: 833, scope: !2129)
!2129 = !DILexicalBlockFile(scope: !2130, file: !13, discriminator: 28)
!2130 = !DILexicalBlockFile(scope: !2107, file: !13, discriminator: 27)
!2131 = !DILocation(line: 337, column: 1090, scope: !2132)
!2132 = !DILexicalBlockFile(scope: !2107, file: !13, discriminator: 24)
!2133 = !DILocation(line: 337, column: 1070, scope: !2107)
!2134 = !DILocation(line: 337, column: 1102, scope: !2107)
!2135 = !DILocation(line: 337, column: 1107, scope: !2107)
!2136 = !DILocation(line: 337, column: 806, scope: !2137)
!2137 = !DILexicalBlockFile(scope: !2138, file: !13, discriminator: 30)
!2138 = !DILexicalBlockFile(scope: !2107, file: !13, discriminator: 29)
!2139 = !DILocation(line: 337, column: 805, scope: !2107)
!2140 = !DILocation(line: 337, column: 1122, scope: !2107)
!2141 = !DILocation(line: 337, column: 1143, scope: !2031)
!2142 = !DILocation(line: 337, column: 1145, scope: !2143)
!2143 = !DILexicalBlockFile(scope: !2144, file: !13, discriminator: 31)
!2144 = !DILexicalBlockFile(scope: !2145, file: !13, discriminator: 22)
!2145 = !DILexicalBlockFile(scope: !2027, file: !13, discriminator: 13)
!2146 = !DILocation(line: 337, column: 1145, scope: !2147)
!2147 = !DILexicalBlockFile(scope: !2027, file: !13, discriminator: 32)
!2148 = !DILocation(line: 338, column: 16, scope: !468)
!2149 = !DILocation(line: 338, column: 22, scope: !468)
!2150 = !DILocation(line: 338, column: 20, scope: !468)
!2151 = !DILocation(line: 338, column: 62, scope: !468)
!2152 = !DILocation(line: 338, column: 45, scope: !468)
!2153 = !DILocation(line: 338, column: 72, scope: !468)
!2154 = !DILocation(line: 338, column: 78, scope: !468)
!2155 = !DILocation(line: 338, column: 43, scope: !468)
!2156 = !DILocation(line: 338, column: 136, scope: !1966)
!2157 = !DILocation(line: 338, column: 120, scope: !468)
!2158 = !DILocation(line: 338, column: 145, scope: !468)
!2159 = !DILocation(line: 338, column: 151, scope: !468)
!2160 = !DILocation(line: 338, column: 90, scope: !468)
!2161 = !DILocation(line: 338, column: 186, scope: !1975)
!2162 = !DILocation(line: 338, column: 169, scope: !468)
!2163 = !DILocation(line: 338, column: 194, scope: !468)
!2164 = !DILocation(line: 338, column: 161, scope: !468)
!2165 = !DILocation(line: 338, column: 237, scope: !1977)
!2166 = !DILocation(line: 338, column: 211, scope: !468)
!2167 = !DILocation(line: 338, column: 245, scope: !468)
!2168 = !DILocation(line: 338, column: 203, scope: !468)
!2169 = !DILocation(line: 338, column: 43, scope: !1984)
!2170 = !DILocation(line: 338, column: 292, scope: !1968)
!2171 = !DILocation(line: 338, column: 272, scope: !468)
!2172 = !DILocation(line: 338, column: 302, scope: !468)
!2173 = !DILocation(line: 338, column: 307, scope: !468)
!2174 = !DILocation(line: 338, column: 316, scope: !2022)
!2175 = !DILocation(line: 338, column: 323, scope: !468)
!2176 = !DILocation(line: 338, column: 321, scope: !468)
!2177 = !DILocation(line: 338, column: 9, scope: !468)
!2178 = !DILocation(line: 339, column: 9, scope: !468)
!2179 = !DILocation(line: 339, column: 14, scope: !2180)
!2180 = !DILexicalBlockFile(scope: !473, file: !13, discriminator: 1)
!2181 = !DILocation(line: 339, column: 24, scope: !473)
!2182 = !DILocation(line: 339, column: 54, scope: !473)
!2183 = !DILocation(line: 339, column: 71, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !473, file: !13, line: 339, column: 68)
!2185 = !DILocation(line: 339, column: 88, scope: !2184)
!2186 = !DILocation(line: 339, column: 68, scope: !2184)
!2187 = !DILocation(line: 339, column: 98, scope: !2184)
!2188 = !DILocation(line: 339, column: 68, scope: !473)
!2189 = !DILocation(line: 339, column: 68, scope: !2190)
!2190 = !DILexicalBlockFile(scope: !473, file: !13, discriminator: 2)
!2191 = !DILocation(line: 339, column: 129, scope: !2192)
!2192 = !DILexicalBlockFile(scope: !2184, file: !13, discriminator: 3)
!2193 = !DILocation(line: 339, column: 147, scope: !2184)
!2194 = !{!1899, !1877, i64 8}
!2195 = !DILocation(line: 339, column: 157, scope: !2184)
!2196 = !{!2197, !1877, i64 48}
!2197 = !{!"_typeobject", !2198, i64 0, !1877, i64 24, !1900, i64 32, !1900, i64 40, !1877, i64 48, !1877, i64 56, !1877, i64 64, !1877, i64 72, !1877, i64 80, !1877, i64 88, !1877, i64 96, !1877, i64 104, !1877, i64 112, !1877, i64 120, !1877, i64 128, !1877, i64 136, !1877, i64 144, !1877, i64 152, !1877, i64 160, !1900, i64 168, !1877, i64 176, !1877, i64 184, !1877, i64 192, !1877, i64 200, !1900, i64 208, !1877, i64 216, !1877, i64 224, !1877, i64 232, !1877, i64 240, !1877, i64 248, !1877, i64 256, !1877, i64 264, !1877, i64 272, !1877, i64 280, !1900, i64 288, !1877, i64 296, !1877, i64 304, !1877, i64 312, !1877, i64 320, !1877, i64 328, !1877, i64 336, !1877, i64 344, !1877, i64 352, !1877, i64 360, !1877, i64 368, !1877, i64 376, !1884, i64 384, !1877, i64 392}
!2198 = !{!"", !1899, i64 0, !1900, i64 16}
!2199 = !DILocation(line: 339, column: 182, scope: !2184)
!2200 = !DILocation(line: 339, column: 113, scope: !2184)
!2201 = !DILocation(line: 339, column: 201, scope: !1977)
!2202 = !DILocation(line: 339, column: 201, scope: !473)
!2203 = !DILocation(line: 339, column: 201, scope: !2204)
!2204 = !DILexicalBlockFile(scope: !473, file: !13, discriminator: 5)
!2205 = !DILocation(line: 340, column: 18, scope: !468)
!2206 = !DILocation(line: 340, column: 16, scope: !468)
!2207 = !DILocation(line: 341, column: 9, scope: !468)
!2208 = !DILocation(line: 341, column: 15, scope: !468)
!2209 = !DILocation(line: 341, column: 25, scope: !468)
!2210 = !DILocation(line: 342, column: 19, scope: !468)
!2211 = !DILocation(line: 343, column: 5, scope: !469)
!2212 = !DILocation(line: 343, column: 5, scope: !1946)
!2213 = !DILocation(line: 343, column: 5, scope: !468)
!2214 = !DILocation(line: 348, column: 10, scope: !478)
!2215 = !DILocation(line: 348, column: 9, scope: !459)
!2216 = !DILocation(line: 349, column: 13, scope: !476)
!2217 = !DILocation(line: 349, column: 24, scope: !476)
!2218 = !DILocation(line: 350, column: 13, scope: !476)
!2219 = !DILocation(line: 350, column: 105, scope: !2220)
!2220 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 1)
!2221 = !DILocation(line: 350, column: 86, scope: !476)
!2222 = !DILocation(line: 350, column: 116, scope: !476)
!2223 = !DILocation(line: 350, column: 122, scope: !476)
!2224 = !DILocation(line: 350, column: 128, scope: !476)
!2225 = !DILocation(line: 350, column: 56, scope: !476)
!2226 = !DILocation(line: 350, column: 473, scope: !2227)
!2227 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 2)
!2228 = !DILocation(line: 350, column: 484, scope: !476)
!2229 = !DILocation(line: 350, column: 208, scope: !476)
!2230 = !DILocation(line: 350, column: 190, scope: !476)
!2231 = !DILocation(line: 350, column: 219, scope: !476)
!2232 = !DILocation(line: 350, column: 225, scope: !476)
!2233 = !DILocation(line: 350, column: 188, scope: !476)
!2234 = !DILocation(line: 350, column: 284, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 4)
!2236 = !DILocation(line: 350, column: 267, scope: !476)
!2237 = !DILocation(line: 350, column: 294, scope: !476)
!2238 = !DILocation(line: 350, column: 300, scope: !476)
!2239 = !DILocation(line: 350, column: 237, scope: !476)
!2240 = !DILocation(line: 350, column: 336, scope: !2241)
!2241 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 6)
!2242 = !DILocation(line: 350, column: 318, scope: !476)
!2243 = !DILocation(line: 350, column: 345, scope: !476)
!2244 = !DILocation(line: 350, column: 310, scope: !476)
!2245 = !DILocation(line: 350, column: 389, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 7)
!2247 = !DILocation(line: 350, column: 362, scope: !476)
!2248 = !DILocation(line: 350, column: 398, scope: !476)
!2249 = !DILocation(line: 350, column: 354, scope: !476)
!2250 = !DILocation(line: 350, column: 188, scope: !2251)
!2251 = !DILexicalBlockFile(scope: !2252, file: !13, discriminator: 9)
!2252 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 8)
!2253 = !DILocation(line: 350, column: 446, scope: !2254)
!2254 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 5)
!2255 = !DILocation(line: 350, column: 425, scope: !476)
!2256 = !DILocation(line: 350, column: 457, scope: !476)
!2257 = !DILocation(line: 350, column: 462, scope: !476)
!2258 = !DILocation(line: 350, column: 154, scope: !2259)
!2259 = !DILexicalBlockFile(scope: !2260, file: !13, discriminator: 11)
!2260 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 10)
!2261 = !DILocation(line: 350, column: 542, scope: !2262)
!2262 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 3)
!2263 = !DILocation(line: 350, column: 523, scope: !476)
!2264 = !DILocation(line: 350, column: 553, scope: !476)
!2265 = !DILocation(line: 350, column: 559, scope: !476)
!2266 = !DILocation(line: 350, column: 565, scope: !476)
!2267 = !DILocation(line: 350, column: 493, scope: !476)
!2268 = !DILocation(line: 350, column: 910, scope: !2269)
!2269 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 13)
!2270 = !DILocation(line: 350, column: 921, scope: !476)
!2271 = !DILocation(line: 350, column: 645, scope: !476)
!2272 = !DILocation(line: 350, column: 627, scope: !476)
!2273 = !DILocation(line: 350, column: 656, scope: !476)
!2274 = !DILocation(line: 350, column: 662, scope: !476)
!2275 = !DILocation(line: 350, column: 625, scope: !476)
!2276 = !DILocation(line: 350, column: 721, scope: !2277)
!2277 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 15)
!2278 = !DILocation(line: 350, column: 704, scope: !476)
!2279 = !DILocation(line: 350, column: 731, scope: !476)
!2280 = !DILocation(line: 350, column: 737, scope: !476)
!2281 = !DILocation(line: 350, column: 674, scope: !476)
!2282 = !DILocation(line: 350, column: 773, scope: !2283)
!2283 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 17)
!2284 = !DILocation(line: 350, column: 755, scope: !476)
!2285 = !DILocation(line: 350, column: 782, scope: !476)
!2286 = !DILocation(line: 350, column: 747, scope: !476)
!2287 = !DILocation(line: 350, column: 826, scope: !2288)
!2288 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 18)
!2289 = !DILocation(line: 350, column: 799, scope: !476)
!2290 = !DILocation(line: 350, column: 835, scope: !476)
!2291 = !DILocation(line: 350, column: 791, scope: !476)
!2292 = !DILocation(line: 350, column: 625, scope: !2293)
!2293 = !DILexicalBlockFile(scope: !2294, file: !13, discriminator: 20)
!2294 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 19)
!2295 = !DILocation(line: 350, column: 883, scope: !2296)
!2296 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 16)
!2297 = !DILocation(line: 350, column: 862, scope: !476)
!2298 = !DILocation(line: 350, column: 894, scope: !476)
!2299 = !DILocation(line: 350, column: 899, scope: !476)
!2300 = !DILocation(line: 350, column: 592, scope: !2301)
!2301 = !DILexicalBlockFile(scope: !2302, file: !13, discriminator: 22)
!2302 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 21)
!2303 = !DILocation(line: 350, column: 591, scope: !476)
!2304 = !DILocation(line: 350, column: 1248, scope: !2305)
!2305 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 14)
!2306 = !DILocation(line: 350, column: 1259, scope: !476)
!2307 = !DILocation(line: 350, column: 983, scope: !476)
!2308 = !DILocation(line: 350, column: 965, scope: !476)
!2309 = !DILocation(line: 350, column: 994, scope: !476)
!2310 = !DILocation(line: 350, column: 1000, scope: !476)
!2311 = !DILocation(line: 350, column: 963, scope: !476)
!2312 = !DILocation(line: 350, column: 1059, scope: !2313)
!2313 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 24)
!2314 = !DILocation(line: 350, column: 1042, scope: !476)
!2315 = !DILocation(line: 350, column: 1069, scope: !476)
!2316 = !DILocation(line: 350, column: 1075, scope: !476)
!2317 = !DILocation(line: 350, column: 1012, scope: !476)
!2318 = !DILocation(line: 350, column: 1111, scope: !2319)
!2319 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 26)
!2320 = !DILocation(line: 350, column: 1093, scope: !476)
!2321 = !DILocation(line: 350, column: 1120, scope: !476)
!2322 = !DILocation(line: 350, column: 1085, scope: !476)
!2323 = !DILocation(line: 350, column: 1164, scope: !2324)
!2324 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 27)
!2325 = !DILocation(line: 350, column: 1137, scope: !476)
!2326 = !DILocation(line: 350, column: 1173, scope: !476)
!2327 = !DILocation(line: 350, column: 1129, scope: !476)
!2328 = !DILocation(line: 350, column: 963, scope: !2329)
!2329 = !DILexicalBlockFile(scope: !2330, file: !13, discriminator: 29)
!2330 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 28)
!2331 = !DILocation(line: 350, column: 1221, scope: !2332)
!2332 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 25)
!2333 = !DILocation(line: 350, column: 1200, scope: !476)
!2334 = !DILocation(line: 350, column: 1232, scope: !476)
!2335 = !DILocation(line: 350, column: 1237, scope: !476)
!2336 = !DILocation(line: 350, column: 930, scope: !2337)
!2337 = !DILexicalBlockFile(scope: !2338, file: !13, discriminator: 31)
!2338 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 30)
!2339 = !DILocation(line: 350, column: 929, scope: !476)
!2340 = !DILocation(line: 350, column: 56, scope: !2341)
!2341 = !DILexicalBlockFile(scope: !2342, file: !13, discriminator: 32)
!2342 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 23)
!2343 = !DILocation(line: 350, column: 1270, scope: !2344)
!2344 = !DILexicalBlockFile(scope: !2345, file: !13, discriminator: 33)
!2345 = !DILexicalBlockFile(scope: !476, file: !13, discriminator: 12)
!2346 = !DILocation(line: 349, column: 13, scope: !477)
!2347 = !DILocation(line: 352, column: 13, scope: !475)
!2348 = !DILocation(line: 352, column: 23, scope: !475)
!2349 = !DILocation(line: 352, column: 54, scope: !475)
!2350 = !DILocation(line: 352, column: 65, scope: !475)
!2351 = !DILocation(line: 352, column: 76, scope: !475)
!2352 = !DILocation(line: 352, column: 34, scope: !475)
!2353 = !DILocation(line: 353, column: 17, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !475, file: !13, line: 353, column: 17)
!2355 = !DILocation(line: 353, column: 26, scope: !2354)
!2356 = !DILocation(line: 353, column: 17, scope: !475)
!2357 = !DILocation(line: 354, column: 17, scope: !2354)
!2358 = !DILocation(line: 355, column: 13, scope: !475)
!2359 = !DILocation(line: 355, column: 18, scope: !2360)
!2360 = !DILexicalBlockFile(scope: !480, file: !13, discriminator: 1)
!2361 = !DILocation(line: 355, column: 28, scope: !480)
!2362 = !DILocation(line: 355, column: 58, scope: !480)
!2363 = !DILocation(line: 355, column: 75, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !480, file: !13, line: 355, column: 72)
!2365 = !DILocation(line: 355, column: 92, scope: !2364)
!2366 = !DILocation(line: 355, column: 72, scope: !2364)
!2367 = !DILocation(line: 355, column: 102, scope: !2364)
!2368 = !DILocation(line: 355, column: 72, scope: !480)
!2369 = !DILocation(line: 355, column: 72, scope: !2370)
!2370 = !DILexicalBlockFile(scope: !480, file: !13, discriminator: 2)
!2371 = !DILocation(line: 355, column: 133, scope: !2372)
!2372 = !DILexicalBlockFile(scope: !2364, file: !13, discriminator: 3)
!2373 = !DILocation(line: 355, column: 151, scope: !2364)
!2374 = !DILocation(line: 355, column: 161, scope: !2364)
!2375 = !DILocation(line: 355, column: 186, scope: !2364)
!2376 = !DILocation(line: 355, column: 117, scope: !2364)
!2377 = !DILocation(line: 355, column: 205, scope: !2378)
!2378 = !DILexicalBlockFile(scope: !475, file: !13, discriminator: 4)
!2379 = !DILocation(line: 355, column: 205, scope: !480)
!2380 = !DILocation(line: 355, column: 205, scope: !2381)
!2381 = !DILexicalBlockFile(scope: !480, file: !13, discriminator: 5)
!2382 = !DILocation(line: 356, column: 22, scope: !475)
!2383 = !DILocation(line: 356, column: 20, scope: !475)
!2384 = !DILocation(line: 357, column: 13, scope: !475)
!2385 = !DILocation(line: 357, column: 19, scope: !475)
!2386 = !DILocation(line: 357, column: 29, scope: !475)
!2387 = !DILocation(line: 358, column: 9, scope: !476)
!2388 = !DILocation(line: 358, column: 9, scope: !2220)
!2389 = !DILocation(line: 358, column: 9, scope: !475)
!2390 = !DILocation(line: 359, column: 5, scope: !477)
!2391 = !DILocation(line: 364, column: 9, scope: !482)
!2392 = !DILocation(line: 364, column: 15, scope: !482)
!2393 = !DILocation(line: 365, column: 9, scope: !482)
!2394 = !DILocation(line: 365, column: 20, scope: !482)
!2395 = !DILocation(line: 366, column: 9, scope: !482)
!2396 = !DILocation(line: 366, column: 13, scope: !482)
!2397 = !DILocation(line: 366, column: 22, scope: !482)
!2398 = !DILocation(line: 366, column: 28, scope: !482)
!2399 = !DILocation(line: 367, column: 9, scope: !482)
!2400 = !DILocation(line: 367, column: 13, scope: !482)
!2401 = !DILocation(line: 368, column: 9, scope: !482)
!2402 = !DILocation(line: 368, column: 13, scope: !482)
!2403 = !DILocation(line: 370, column: 52, scope: !482)
!2404 = !DILocation(line: 370, column: 35, scope: !482)
!2405 = !DILocation(line: 370, column: 62, scope: !482)
!2406 = !DILocation(line: 370, column: 68, scope: !482)
!2407 = !DILocation(line: 370, column: 33, scope: !482)
!2408 = !DILocation(line: 370, column: 126, scope: !2409)
!2409 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 1)
!2410 = !DILocation(line: 370, column: 110, scope: !482)
!2411 = !DILocation(line: 370, column: 135, scope: !482)
!2412 = !DILocation(line: 370, column: 141, scope: !482)
!2413 = !DILocation(line: 370, column: 80, scope: !482)
!2414 = !DILocation(line: 370, column: 176, scope: !2415)
!2415 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 3)
!2416 = !DILocation(line: 370, column: 159, scope: !482)
!2417 = !DILocation(line: 370, column: 184, scope: !482)
!2418 = !DILocation(line: 370, column: 151, scope: !482)
!2419 = !DILocation(line: 370, column: 227, scope: !2420)
!2420 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 4)
!2421 = !DILocation(line: 370, column: 201, scope: !482)
!2422 = !DILocation(line: 370, column: 235, scope: !482)
!2423 = !DILocation(line: 370, column: 193, scope: !482)
!2424 = !DILocation(line: 370, column: 33, scope: !2425)
!2425 = !DILexicalBlockFile(scope: !2426, file: !13, discriminator: 6)
!2426 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 5)
!2427 = !DILocation(line: 370, column: 282, scope: !2428)
!2428 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 2)
!2429 = !DILocation(line: 370, column: 262, scope: !482)
!2430 = !DILocation(line: 370, column: 292, scope: !482)
!2431 = !DILocation(line: 370, column: 297, scope: !482)
!2432 = !DILocation(line: 370, column: 16, scope: !2433)
!2433 = !DILexicalBlockFile(scope: !2434, file: !13, discriminator: 8)
!2434 = !DILexicalBlockFile(scope: !482, file: !13, discriminator: 7)
!2435 = !DILocation(line: 371, column: 63, scope: !482)
!2436 = !DILocation(line: 371, column: 45, scope: !482)
!2437 = !DILocation(line: 371, column: 73, scope: !482)
!2438 = !DILocation(line: 371, column: 13, scope: !482)
!2439 = !DILocation(line: 372, column: 64, scope: !482)
!2440 = !DILocation(line: 372, column: 46, scope: !482)
!2441 = !DILocation(line: 372, column: 74, scope: !482)
!2442 = !DILocation(line: 372, column: 80, scope: !482)
!2443 = !DILocation(line: 372, column: 14, scope: !482)
!2444 = !DILocation(line: 374, column: 13, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !482, file: !13, line: 374, column: 13)
!2446 = !DILocation(line: 374, column: 17, scope: !2445)
!2447 = !DILocation(line: 374, column: 13, scope: !482)
!2448 = !DILocation(line: 375, column: 20, scope: !2445)
!2449 = !DILocation(line: 375, column: 13, scope: !2445)
!2450 = !DILocation(line: 380, column: 13, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !482, file: !13, line: 380, column: 13)
!2452 = !DILocation(line: 380, column: 20, scope: !2451)
!2453 = !DILocation(line: 380, column: 25, scope: !2451)
!2454 = !DILocation(line: 380, column: 28, scope: !2455)
!2455 = !DILexicalBlockFile(scope: !2451, file: !13, discriminator: 1)
!2456 = !DILocation(line: 380, column: 35, scope: !2451)
!2457 = !DILocation(line: 380, column: 13, scope: !482)
!2458 = !DILocation(line: 381, column: 31, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2451, file: !13, line: 380, column: 41)
!2460 = !DILocation(line: 381, column: 45, scope: !2459)
!2461 = !DILocation(line: 381, column: 52, scope: !2459)
!2462 = !DILocation(line: 381, column: 50, scope: !2459)
!2463 = !DILocation(line: 381, column: 24, scope: !2459)
!2464 = !DILocation(line: 381, column: 57, scope: !2459)
!2465 = !DILocation(line: 381, column: 21, scope: !2459)
!2466 = !DILocation(line: 382, column: 9, scope: !2459)
!2467 = !DILocation(line: 384, column: 13, scope: !493)
!2468 = !DILocation(line: 384, column: 13, scope: !482)
!2469 = !DILocation(line: 388, column: 17, scope: !491)
!2470 = !DILocation(line: 388, column: 24, scope: !491)
!2471 = !DILocation(line: 388, column: 29, scope: !491)
!2472 = !DILocation(line: 389, column: 24, scope: !491)
!2473 = !DILocation(line: 389, column: 38, scope: !491)
!2474 = !DILocation(line: 389, column: 45, scope: !491)
!2475 = !DILocation(line: 389, column: 43, scope: !491)
!2476 = !DILocation(line: 389, column: 17, scope: !491)
!2477 = !DILocation(line: 389, column: 50, scope: !491)
!2478 = !DILocation(line: 388, column: 17, scope: !492)
!2479 = !DILocation(line: 390, column: 21, scope: !489)
!2480 = !DILocation(line: 390, column: 26, scope: !489)
!2481 = !DILocation(line: 390, column: 21, scope: !490)
!2482 = !DILocation(line: 391, column: 28, scope: !489)
!2483 = !DILocation(line: 391, column: 21, scope: !489)
!2484 = !DILocation(line: 393, column: 21, scope: !488)
!2485 = !DILocation(line: 393, column: 32, scope: !488)
!2486 = !DILocation(line: 394, column: 21, scope: !488)
!2487 = !DILocation(line: 395, column: 25, scope: !495)
!2488 = !DILocation(line: 395, column: 33, scope: !495)
!2489 = !DILocation(line: 397, column: 25, scope: !495)
!2490 = !DILocation(line: 397, column: 45, scope: !2491)
!2491 = !DILexicalBlockFile(scope: !2492, file: !13, discriminator: 10)
!2492 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 1)
!2493 = !DILocation(line: 397, column: 51, scope: !495)
!2494 = !DILocation(line: 397, column: 44, scope: !495)
!2495 = !DILocation(line: 397, column: 106, scope: !2496)
!2496 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 2)
!2497 = !DILocation(line: 397, column: 96, scope: !495)
!2498 = !DILocation(line: 397, column: 77, scope: !495)
!2499 = !DILocation(line: 397, column: 114, scope: !2500)
!2500 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 3)
!2501 = !DILocation(line: 397, column: 120, scope: !495)
!2502 = !DILocation(line: 397, column: 113, scope: !495)
!2503 = !DILocation(line: 397, column: 175, scope: !2504)
!2504 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 5)
!2505 = !DILocation(line: 397, column: 165, scope: !495)
!2506 = !DILocation(line: 397, column: 147, scope: !495)
!2507 = !DILocation(line: 397, column: 146, scope: !495)
!2508 = !DILocation(line: 397, column: 210, scope: !2509)
!2509 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 6)
!2510 = !DILocation(line: 397, column: 200, scope: !495)
!2511 = !DILocation(line: 397, column: 182, scope: !495)
!2512 = !DILocation(line: 397, column: 181, scope: !495)
!2513 = !DILocation(line: 397, column: 44, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2515, file: !13, discriminator: 8)
!2515 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 7)
!2516 = !DILocation(line: 397, column: 219, scope: !2517)
!2517 = !DILexicalBlockFile(scope: !2518, file: !13, discriminator: 9)
!2518 = !DILexicalBlockFile(scope: !495, file: !13, discriminator: 4)
!2519 = !DILocation(line: 398, column: 30, scope: !495)
!2520 = !DILocation(line: 399, column: 42, scope: !495)
!2521 = !DILocation(line: 399, column: 48, scope: !495)
!2522 = !DILocation(line: 399, column: 41, scope: !495)
!2523 = !DILocation(line: 399, column: 104, scope: !2492)
!2524 = !DILocation(line: 399, column: 93, scope: !495)
!2525 = !DILocation(line: 399, column: 74, scope: !495)
!2526 = !DILocation(line: 399, column: 113, scope: !2496)
!2527 = !DILocation(line: 399, column: 119, scope: !495)
!2528 = !DILocation(line: 399, column: 112, scope: !495)
!2529 = !DILocation(line: 399, column: 175, scope: !2518)
!2530 = !DILocation(line: 399, column: 164, scope: !495)
!2531 = !DILocation(line: 399, column: 146, scope: !495)
!2532 = !DILocation(line: 399, column: 145, scope: !495)
!2533 = !DILocation(line: 399, column: 212, scope: !2504)
!2534 = !DILocation(line: 399, column: 201, scope: !495)
!2535 = !DILocation(line: 399, column: 183, scope: !495)
!2536 = !DILocation(line: 399, column: 182, scope: !495)
!2537 = !DILocation(line: 399, column: 41, scope: !2538)
!2538 = !DILexicalBlockFile(scope: !2509, file: !13, discriminator: 7)
!2539 = !DILocation(line: 399, column: 27, scope: !2540)
!2540 = !DILexicalBlockFile(scope: !2500, file: !13, discriminator: 8)
!2541 = !DILocation(line: 400, column: 29, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !495, file: !13, line: 400, column: 29)
!2543 = !DILocation(line: 400, column: 31, scope: !2542)
!2544 = !DILocation(line: 400, column: 29, scope: !495)
!2545 = !DILocation(line: 401, column: 36, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2542, file: !13, line: 400, column: 40)
!2547 = !DILocation(line: 402, column: 29, scope: !2546)
!2548 = !DILocation(line: 404, column: 29, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !495, file: !13, line: 404, column: 29)
!2550 = !DILocation(line: 404, column: 34, scope: !2549)
!2551 = !DILocation(line: 404, column: 31, scope: !2549)
!2552 = !DILocation(line: 404, column: 29, scope: !495)
!2553 = !DILocation(line: 405, column: 29, scope: !2549)
!2554 = !DILocation(line: 406, column: 21, scope: !496)
!2555 = !DILocation(line: 406, column: 21, scope: !2556)
!2556 = !DILexicalBlockFile(scope: !496, file: !13, discriminator: 1)
!2557 = !DILocation(line: 394, column: 21, scope: !496)
!2558 = !DILocation(line: 407, column: 17, scope: !489)
!2559 = !DILocation(line: 408, column: 13, scope: !490)
!2560 = !DILocation(line: 411, column: 9, scope: !492)
!2561 = !DILocation(line: 412, column: 19, scope: !500)
!2562 = !DILocation(line: 412, column: 25, scope: !500)
!2563 = !DILocation(line: 412, column: 18, scope: !493)
!2564 = !DILocation(line: 413, column: 13, scope: !499)
!2565 = !DILocation(line: 413, column: 24, scope: !499)
!2566 = !DILocation(line: 415, column: 17, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !499, file: !13, line: 415, column: 17)
!2568 = !DILocation(line: 415, column: 24, scope: !2567)
!2569 = !DILocation(line: 415, column: 17, scope: !499)
!2570 = !DILocation(line: 416, column: 17, scope: !2567)
!2571 = !DILocation(line: 417, column: 13, scope: !499)
!2572 = !DILocation(line: 418, column: 17, scope: !502)
!2573 = !DILocation(line: 418, column: 25, scope: !502)
!2574 = !DILocation(line: 420, column: 17, scope: !502)
!2575 = !DILocation(line: 420, column: 37, scope: !2576)
!2576 = !DILexicalBlockFile(scope: !2577, file: !13, discriminator: 10)
!2577 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 1)
!2578 = !DILocation(line: 420, column: 43, scope: !502)
!2579 = !DILocation(line: 420, column: 36, scope: !502)
!2580 = !DILocation(line: 420, column: 98, scope: !2581)
!2581 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 2)
!2582 = !DILocation(line: 420, column: 88, scope: !502)
!2583 = !DILocation(line: 420, column: 69, scope: !502)
!2584 = !DILocation(line: 420, column: 106, scope: !2585)
!2585 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 3)
!2586 = !DILocation(line: 420, column: 112, scope: !502)
!2587 = !DILocation(line: 420, column: 105, scope: !502)
!2588 = !DILocation(line: 420, column: 167, scope: !2589)
!2589 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 5)
!2590 = !DILocation(line: 420, column: 157, scope: !502)
!2591 = !DILocation(line: 420, column: 139, scope: !502)
!2592 = !DILocation(line: 420, column: 138, scope: !502)
!2593 = !DILocation(line: 420, column: 202, scope: !2594)
!2594 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 6)
!2595 = !DILocation(line: 420, column: 192, scope: !502)
!2596 = !DILocation(line: 420, column: 174, scope: !502)
!2597 = !DILocation(line: 420, column: 173, scope: !502)
!2598 = !DILocation(line: 420, column: 36, scope: !2599)
!2599 = !DILexicalBlockFile(scope: !2600, file: !13, discriminator: 8)
!2600 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 7)
!2601 = !DILocation(line: 420, column: 211, scope: !2602)
!2602 = !DILexicalBlockFile(scope: !2603, file: !13, discriminator: 9)
!2603 = !DILexicalBlockFile(scope: !502, file: !13, discriminator: 4)
!2604 = !DILocation(line: 421, column: 22, scope: !502)
!2605 = !DILocation(line: 422, column: 34, scope: !502)
!2606 = !DILocation(line: 422, column: 40, scope: !502)
!2607 = !DILocation(line: 422, column: 33, scope: !502)
!2608 = !DILocation(line: 422, column: 96, scope: !2577)
!2609 = !DILocation(line: 422, column: 85, scope: !502)
!2610 = !DILocation(line: 422, column: 66, scope: !502)
!2611 = !DILocation(line: 422, column: 105, scope: !2581)
!2612 = !DILocation(line: 422, column: 111, scope: !502)
!2613 = !DILocation(line: 422, column: 104, scope: !502)
!2614 = !DILocation(line: 422, column: 167, scope: !2603)
!2615 = !DILocation(line: 422, column: 156, scope: !502)
!2616 = !DILocation(line: 422, column: 138, scope: !502)
!2617 = !DILocation(line: 422, column: 137, scope: !502)
!2618 = !DILocation(line: 422, column: 204, scope: !2589)
!2619 = !DILocation(line: 422, column: 193, scope: !502)
!2620 = !DILocation(line: 422, column: 175, scope: !502)
!2621 = !DILocation(line: 422, column: 174, scope: !502)
!2622 = !DILocation(line: 422, column: 33, scope: !2623)
!2623 = !DILexicalBlockFile(scope: !2594, file: !13, discriminator: 7)
!2624 = !DILocation(line: 422, column: 19, scope: !2625)
!2625 = !DILexicalBlockFile(scope: !2585, file: !13, discriminator: 8)
!2626 = !DILocation(line: 423, column: 21, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !502, file: !13, line: 423, column: 21)
!2628 = !DILocation(line: 423, column: 23, scope: !2627)
!2629 = !DILocation(line: 423, column: 21, scope: !502)
!2630 = !DILocation(line: 424, column: 28, scope: !2627)
!2631 = !DILocation(line: 424, column: 21, scope: !2627)
!2632 = !DILocation(line: 425, column: 26, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2627, file: !13, line: 425, column: 26)
!2634 = !DILocation(line: 425, column: 28, scope: !2633)
!2635 = !DILocation(line: 425, column: 26, scope: !2627)
!2636 = !DILocation(line: 426, column: 38, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2638, file: !13, line: 426, column: 25)
!2638 = distinct !DILexicalBlock(scope: !2633, file: !13, line: 425, column: 37)
!2639 = !DILocation(line: 426, column: 44, scope: !2637)
!2640 = !DILocation(line: 426, column: 37, scope: !2637)
!2641 = !DILocation(line: 426, column: 99, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !2637, file: !13, discriminator: 1)
!2643 = !DILocation(line: 426, column: 89, scope: !2637)
!2644 = !DILocation(line: 426, column: 70, scope: !2637)
!2645 = !DILocation(line: 426, column: 107, scope: !2646)
!2646 = !DILexicalBlockFile(scope: !2637, file: !13, discriminator: 2)
!2647 = !DILocation(line: 426, column: 113, scope: !2637)
!2648 = !DILocation(line: 426, column: 106, scope: !2637)
!2649 = !DILocation(line: 426, column: 168, scope: !2650)
!2650 = !DILexicalBlockFile(scope: !2637, file: !13, discriminator: 4)
!2651 = !DILocation(line: 426, column: 158, scope: !2637)
!2652 = !DILocation(line: 426, column: 140, scope: !2637)
!2653 = !DILocation(line: 426, column: 139, scope: !2637)
!2654 = !DILocation(line: 426, column: 203, scope: !2655)
!2655 = !DILexicalBlockFile(scope: !2637, file: !13, discriminator: 5)
!2656 = !DILocation(line: 426, column: 193, scope: !2637)
!2657 = !DILocation(line: 426, column: 175, scope: !2637)
!2658 = !DILocation(line: 426, column: 174, scope: !2637)
!2659 = !DILocation(line: 426, column: 37, scope: !2660)
!2660 = !DILexicalBlockFile(scope: !2661, file: !13, discriminator: 7)
!2661 = !DILexicalBlockFile(scope: !2637, file: !13, discriminator: 6)
!2662 = !DILocation(line: 426, column: 212, scope: !2663)
!2663 = !DILexicalBlockFile(scope: !2664, file: !13, discriminator: 8)
!2664 = !DILexicalBlockFile(scope: !2637, file: !13, discriminator: 3)
!2665 = !DILocation(line: 426, column: 25, scope: !2638)
!2666 = !DILocation(line: 427, column: 32, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2637, file: !13, line: 426, column: 221)
!2668 = !DILocation(line: 428, column: 26, scope: !2667)
!2669 = !DILocation(line: 429, column: 21, scope: !2667)
!2670 = !DILocation(line: 431, column: 32, scope: !2637)
!2671 = !DILocation(line: 432, column: 17, scope: !2638)
!2672 = !DILocation(line: 433, column: 21, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !502, file: !13, line: 433, column: 21)
!2674 = !DILocation(line: 433, column: 26, scope: !2673)
!2675 = !DILocation(line: 433, column: 23, scope: !2673)
!2676 = !DILocation(line: 433, column: 21, scope: !502)
!2677 = !DILocation(line: 434, column: 21, scope: !2673)
!2678 = !DILocation(line: 435, column: 21, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !502, file: !13, line: 435, column: 21)
!2680 = !DILocation(line: 435, column: 28, scope: !2679)
!2681 = !DILocation(line: 435, column: 21, scope: !502)
!2682 = !DILocation(line: 436, column: 21, scope: !2679)
!2683 = !DILocation(line: 437, column: 13, scope: !503)
!2684 = !DILocation(line: 437, column: 13, scope: !2685)
!2685 = !DILexicalBlockFile(scope: !503, file: !13, discriminator: 1)
!2686 = !DILocation(line: 417, column: 13, scope: !503)
!2687 = !DILocation(line: 437, column: 13, scope: !504)
!2688 = !DILocation(line: 440, column: 9, scope: !500)
!2689 = !DILocation(line: 440, column: 9, scope: !499)
!2690 = !DILocation(line: 442, column: 13, scope: !506)
!2691 = !DILocation(line: 442, column: 19, scope: !506)
!2692 = !DILocation(line: 443, column: 13, scope: !506)
!2693 = !DILocation(line: 443, column: 17, scope: !506)
!2694 = !DILocation(line: 443, column: 72, scope: !506)
!2695 = !DILocation(line: 443, column: 54, scope: !506)
!2696 = !DILocation(line: 443, column: 82, scope: !506)
!2697 = !DILocation(line: 443, column: 88, scope: !506)
!2698 = !DILocation(line: 444, column: 13, scope: !506)
!2699 = !DILocation(line: 444, column: 19, scope: !506)
!2700 = !DILocation(line: 444, column: 62, scope: !506)
!2701 = !DILocation(line: 444, column: 45, scope: !506)
!2702 = !DILocation(line: 444, column: 72, scope: !506)
!2703 = !DILocation(line: 444, column: 78, scope: !506)
!2704 = !DILocation(line: 444, column: 43, scope: !506)
!2705 = !DILocation(line: 444, column: 136, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 1)
!2707 = !DILocation(line: 444, column: 120, scope: !506)
!2708 = !DILocation(line: 444, column: 145, scope: !506)
!2709 = !DILocation(line: 444, column: 151, scope: !506)
!2710 = !DILocation(line: 444, column: 90, scope: !506)
!2711 = !DILocation(line: 444, column: 186, scope: !2712)
!2712 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 3)
!2713 = !DILocation(line: 444, column: 169, scope: !506)
!2714 = !DILocation(line: 444, column: 194, scope: !506)
!2715 = !DILocation(line: 444, column: 161, scope: !506)
!2716 = !DILocation(line: 444, column: 237, scope: !2717)
!2717 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 4)
!2718 = !DILocation(line: 444, column: 211, scope: !506)
!2719 = !DILocation(line: 444, column: 245, scope: !506)
!2720 = !DILocation(line: 444, column: 203, scope: !506)
!2721 = !DILocation(line: 444, column: 43, scope: !2722)
!2722 = !DILexicalBlockFile(scope: !2723, file: !13, discriminator: 6)
!2723 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 5)
!2724 = !DILocation(line: 444, column: 292, scope: !2725)
!2725 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 2)
!2726 = !DILocation(line: 444, column: 272, scope: !506)
!2727 = !DILocation(line: 444, column: 302, scope: !506)
!2728 = !DILocation(line: 444, column: 307, scope: !506)
!2729 = !DILocation(line: 444, column: 19, scope: !2730)
!2730 = !DILexicalBlockFile(scope: !2731, file: !13, discriminator: 8)
!2731 = !DILexicalBlockFile(scope: !506, file: !13, discriminator: 7)
!2732 = !DILocation(line: 445, column: 13, scope: !506)
!2733 = !DILocation(line: 445, column: 24, scope: !506)
!2734 = !DILocation(line: 445, column: 28, scope: !506)
!2735 = !DILocation(line: 452, column: 39, scope: !506)
!2736 = !DILocation(line: 452, column: 46, scope: !506)
!2737 = !DILocation(line: 452, column: 44, scope: !506)
!2738 = !DILocation(line: 452, column: 26, scope: !506)
!2739 = !DILocation(line: 452, column: 24, scope: !506)
!2740 = !DILocation(line: 453, column: 17, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !506, file: !13, line: 453, column: 17)
!2742 = !DILocation(line: 453, column: 28, scope: !2741)
!2743 = !DILocation(line: 453, column: 17, scope: !506)
!2744 = !DILocation(line: 454, column: 17, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !13, line: 453, column: 43)
!2746 = !DILocation(line: 455, column: 17, scope: !2745)
!2747 = !DILocation(line: 457, column: 22, scope: !506)
!2748 = !DILocation(line: 457, column: 16, scope: !506)
!2749 = !DILocation(line: 458, column: 13, scope: !506)
!2750 = !DILocation(line: 459, column: 17, scope: !512)
!2751 = !DILocation(line: 459, column: 25, scope: !512)
!2752 = !DILocation(line: 461, column: 17, scope: !512)
!2753 = !DILocation(line: 461, column: 42, scope: !2754)
!2754 = !DILexicalBlockFile(scope: !2755, file: !13, discriminator: 10)
!2755 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 1)
!2756 = !DILocation(line: 461, column: 48, scope: !512)
!2757 = !DILocation(line: 461, column: 41, scope: !512)
!2758 = !DILocation(line: 461, column: 105, scope: !2759)
!2759 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 2)
!2760 = !DILocation(line: 461, column: 93, scope: !512)
!2761 = !DILocation(line: 461, column: 74, scope: !512)
!2762 = !DILocation(line: 461, column: 114, scope: !2763)
!2763 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 3)
!2764 = !DILocation(line: 461, column: 120, scope: !512)
!2765 = !DILocation(line: 461, column: 113, scope: !512)
!2766 = !DILocation(line: 461, column: 177, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 5)
!2768 = !DILocation(line: 461, column: 165, scope: !512)
!2769 = !DILocation(line: 461, column: 147, scope: !512)
!2770 = !DILocation(line: 461, column: 146, scope: !512)
!2771 = !DILocation(line: 461, column: 215, scope: !2772)
!2772 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 6)
!2773 = !DILocation(line: 461, column: 203, scope: !512)
!2774 = !DILocation(line: 461, column: 185, scope: !512)
!2775 = !DILocation(line: 461, column: 184, scope: !512)
!2776 = !DILocation(line: 461, column: 41, scope: !2777)
!2777 = !DILexicalBlockFile(scope: !2778, file: !13, discriminator: 8)
!2778 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 7)
!2779 = !DILocation(line: 461, column: 27, scope: !2780)
!2780 = !DILexicalBlockFile(scope: !2781, file: !13, discriminator: 9)
!2781 = !DILexicalBlockFile(scope: !512, file: !13, discriminator: 4)
!2782 = !DILocation(line: 461, column: 226, scope: !512)
!2783 = !DILocation(line: 462, column: 21, scope: !512)
!2784 = !DILocation(line: 462, column: 35, scope: !2785)
!2785 = !DILexicalBlockFile(scope: !2786, file: !13, discriminator: 1)
!2786 = distinct !DILexicalBlock(scope: !512, file: !13, line: 462, column: 24)
!2787 = !DILocation(line: 462, column: 120, scope: !2788)
!2788 = !DILexicalBlockFile(scope: !2789, file: !13, discriminator: 3)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !13, line: 462, column: 71)
!2790 = distinct !DILexicalBlock(scope: !2786, file: !13, line: 462, column: 42)
!2791 = !DILocation(line: 462, column: 110, scope: !2789)
!2792 = !DILocation(line: 462, column: 103, scope: !2789)
!2793 = !DILocation(line: 462, column: 86, scope: !2789)
!2794 = !DILocation(line: 462, column: 73, scope: !2789)
!2795 = !DILocation(line: 462, column: 108, scope: !2789)
!2796 = !DILocation(line: 462, column: 124, scope: !2789)
!2797 = !DILocation(line: 462, column: 209, scope: !2798)
!2798 = !DILexicalBlockFile(scope: !2799, file: !13, discriminator: 4)
!2799 = distinct !DILexicalBlock(scope: !2790, file: !13, line: 462, column: 160)
!2800 = !DILocation(line: 462, column: 199, scope: !2799)
!2801 = !DILocation(line: 462, column: 192, scope: !2799)
!2802 = !DILocation(line: 462, column: 175, scope: !2799)
!2803 = !DILocation(line: 462, column: 163, scope: !2799)
!2804 = !DILocation(line: 462, column: 162, scope: !2799)
!2805 = !DILocation(line: 462, column: 197, scope: !2799)
!2806 = !DILocation(line: 462, column: 213, scope: !2799)
!2807 = !DILocation(line: 462, column: 294, scope: !2808)
!2808 = !DILexicalBlockFile(scope: !2809, file: !13, discriminator: 2)
!2809 = distinct !DILexicalBlock(scope: !2790, file: !13, line: 462, column: 231)
!2810 = !DILocation(line: 462, column: 277, scope: !2809)
!2811 = !DILocation(line: 462, column: 260, scope: !2809)
!2812 = !DILocation(line: 462, column: 248, scope: !2809)
!2813 = !DILocation(line: 462, column: 247, scope: !2809)
!2814 = !DILocation(line: 462, column: 282, scope: !2809)
!2815 = !DILocation(line: 462, column: 300, scope: !2790)
!2816 = !DILocation(line: 462, column: 302, scope: !2817)
!2817 = !DILexicalBlockFile(scope: !2818, file: !13, discriminator: 7)
!2818 = !DILexicalBlockFile(scope: !2819, file: !13, discriminator: 6)
!2819 = !DILexicalBlockFile(scope: !2786, file: !13, discriminator: 5)
!2820 = !DILocation(line: 462, column: 302, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2786, file: !13, discriminator: 8)
!2822 = !DILocation(line: 463, column: 21, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !512, file: !13, line: 463, column: 21)
!2824 = !DILocation(line: 463, column: 23, scope: !2823)
!2825 = !DILocation(line: 463, column: 21, scope: !512)
!2826 = !DILocation(line: 464, column: 21, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2823, file: !13, line: 463, column: 32)
!2828 = !DILocation(line: 464, column: 35, scope: !2829)
!2829 = !DILexicalBlockFile(scope: !2830, file: !13, discriminator: 1)
!2830 = distinct !DILexicalBlock(scope: !2827, file: !13, line: 464, column: 24)
!2831 = !DILocation(line: 464, column: 120, scope: !2832)
!2832 = !DILexicalBlockFile(scope: !2833, file: !13, discriminator: 3)
!2833 = distinct !DILexicalBlock(scope: !2834, file: !13, line: 464, column: 71)
!2834 = distinct !DILexicalBlock(scope: !2830, file: !13, line: 464, column: 42)
!2835 = !DILocation(line: 464, column: 110, scope: !2833)
!2836 = !DILocation(line: 464, column: 103, scope: !2833)
!2837 = !DILocation(line: 464, column: 86, scope: !2833)
!2838 = !DILocation(line: 464, column: 73, scope: !2833)
!2839 = !DILocation(line: 464, column: 108, scope: !2833)
!2840 = !DILocation(line: 464, column: 124, scope: !2833)
!2841 = !DILocation(line: 464, column: 209, scope: !2842)
!2842 = !DILexicalBlockFile(scope: !2843, file: !13, discriminator: 4)
!2843 = distinct !DILexicalBlock(scope: !2834, file: !13, line: 464, column: 160)
!2844 = !DILocation(line: 464, column: 199, scope: !2843)
!2845 = !DILocation(line: 464, column: 192, scope: !2843)
!2846 = !DILocation(line: 464, column: 175, scope: !2843)
!2847 = !DILocation(line: 464, column: 163, scope: !2843)
!2848 = !DILocation(line: 464, column: 162, scope: !2843)
!2849 = !DILocation(line: 464, column: 197, scope: !2843)
!2850 = !DILocation(line: 464, column: 213, scope: !2843)
!2851 = !DILocation(line: 464, column: 294, scope: !2852)
!2852 = !DILexicalBlockFile(scope: !2853, file: !13, discriminator: 2)
!2853 = distinct !DILexicalBlock(scope: !2834, file: !13, line: 464, column: 231)
!2854 = !DILocation(line: 464, column: 277, scope: !2853)
!2855 = !DILocation(line: 464, column: 260, scope: !2853)
!2856 = !DILocation(line: 464, column: 248, scope: !2853)
!2857 = !DILocation(line: 464, column: 247, scope: !2853)
!2858 = !DILocation(line: 464, column: 282, scope: !2853)
!2859 = !DILocation(line: 464, column: 300, scope: !2834)
!2860 = !DILocation(line: 464, column: 302, scope: !2861)
!2861 = !DILexicalBlockFile(scope: !2862, file: !13, discriminator: 7)
!2862 = !DILexicalBlockFile(scope: !2863, file: !13, discriminator: 6)
!2863 = !DILexicalBlockFile(scope: !2830, file: !13, discriminator: 5)
!2864 = !DILocation(line: 464, column: 302, scope: !2865)
!2865 = !DILexicalBlockFile(scope: !2830, file: !13, discriminator: 8)
!2866 = !DILocation(line: 465, column: 28, scope: !2827)
!2867 = !DILocation(line: 466, column: 21, scope: !2827)
!2868 = !DILocation(line: 468, column: 21, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !512, file: !13, line: 468, column: 21)
!2870 = !DILocation(line: 468, column: 23, scope: !2869)
!2871 = !DILocation(line: 468, column: 21, scope: !512)
!2872 = !DILocation(line: 469, column: 38, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2874, file: !13, line: 469, column: 25)
!2874 = distinct !DILexicalBlock(scope: !2869, file: !13, line: 468, column: 32)
!2875 = !DILocation(line: 469, column: 44, scope: !2873)
!2876 = !DILocation(line: 469, column: 37, scope: !2873)
!2877 = !DILocation(line: 469, column: 99, scope: !2878)
!2878 = !DILexicalBlockFile(scope: !2873, file: !13, discriminator: 1)
!2879 = !DILocation(line: 469, column: 89, scope: !2873)
!2880 = !DILocation(line: 469, column: 70, scope: !2873)
!2881 = !DILocation(line: 469, column: 108, scope: !2882)
!2882 = !DILexicalBlockFile(scope: !2873, file: !13, discriminator: 2)
!2883 = !DILocation(line: 469, column: 114, scope: !2873)
!2884 = !DILocation(line: 469, column: 107, scope: !2873)
!2885 = !DILocation(line: 469, column: 169, scope: !2886)
!2886 = !DILexicalBlockFile(scope: !2873, file: !13, discriminator: 4)
!2887 = !DILocation(line: 469, column: 159, scope: !2873)
!2888 = !DILocation(line: 469, column: 141, scope: !2873)
!2889 = !DILocation(line: 469, column: 140, scope: !2873)
!2890 = !DILocation(line: 469, column: 205, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !2873, file: !13, discriminator: 5)
!2892 = !DILocation(line: 469, column: 195, scope: !2873)
!2893 = !DILocation(line: 469, column: 177, scope: !2873)
!2894 = !DILocation(line: 469, column: 176, scope: !2873)
!2895 = !DILocation(line: 469, column: 37, scope: !2896)
!2896 = !DILexicalBlockFile(scope: !2897, file: !13, discriminator: 7)
!2897 = !DILexicalBlockFile(scope: !2873, file: !13, discriminator: 6)
!2898 = !DILocation(line: 469, column: 215, scope: !2899)
!2899 = !DILexicalBlockFile(scope: !2900, file: !13, discriminator: 8)
!2900 = !DILexicalBlockFile(scope: !2873, file: !13, discriminator: 3)
!2901 = !DILocation(line: 469, column: 25, scope: !2874)
!2902 = !DILocation(line: 470, column: 27, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2873, file: !13, line: 469, column: 224)
!2904 = !DILocation(line: 471, column: 32, scope: !2903)
!2905 = !DILocation(line: 472, column: 21, scope: !2903)
!2906 = !DILocation(line: 474, column: 32, scope: !2873)
!2907 = !DILocation(line: 475, column: 21, scope: !2874)
!2908 = !DILocation(line: 475, column: 35, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !2910, file: !13, discriminator: 1)
!2910 = distinct !DILexicalBlock(scope: !2874, file: !13, line: 475, column: 24)
!2911 = !DILocation(line: 475, column: 103, scope: !2912)
!2912 = !DILexicalBlockFile(scope: !2913, file: !13, discriminator: 3)
!2913 = distinct !DILexicalBlock(scope: !2914, file: !13, line: 475, column: 71)
!2914 = distinct !DILexicalBlock(scope: !2910, file: !13, line: 475, column: 42)
!2915 = !DILocation(line: 475, column: 86, scope: !2913)
!2916 = !DILocation(line: 475, column: 73, scope: !2913)
!2917 = !DILocation(line: 475, column: 108, scope: !2913)
!2918 = !DILocation(line: 475, column: 127, scope: !2913)
!2919 = !DILocation(line: 475, column: 195, scope: !2920)
!2920 = !DILexicalBlockFile(scope: !2921, file: !13, discriminator: 4)
!2921 = distinct !DILexicalBlock(scope: !2914, file: !13, line: 475, column: 163)
!2922 = !DILocation(line: 475, column: 178, scope: !2921)
!2923 = !DILocation(line: 475, column: 166, scope: !2921)
!2924 = !DILocation(line: 475, column: 165, scope: !2921)
!2925 = !DILocation(line: 475, column: 200, scope: !2921)
!2926 = !DILocation(line: 475, column: 219, scope: !2921)
!2927 = !DILocation(line: 475, column: 283, scope: !2928)
!2928 = !DILexicalBlockFile(scope: !2929, file: !13, discriminator: 2)
!2929 = distinct !DILexicalBlock(scope: !2914, file: !13, line: 475, column: 237)
!2930 = !DILocation(line: 475, column: 266, scope: !2929)
!2931 = !DILocation(line: 475, column: 254, scope: !2929)
!2932 = !DILocation(line: 475, column: 253, scope: !2929)
!2933 = !DILocation(line: 475, column: 288, scope: !2929)
!2934 = !DILocation(line: 475, column: 309, scope: !2914)
!2935 = !DILocation(line: 475, column: 311, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !2937, file: !13, discriminator: 7)
!2937 = !DILexicalBlockFile(scope: !2938, file: !13, discriminator: 6)
!2938 = !DILexicalBlockFile(scope: !2910, file: !13, discriminator: 5)
!2939 = !DILocation(line: 475, column: 311, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !2910, file: !13, discriminator: 8)
!2941 = !DILocation(line: 476, column: 21, scope: !2874)
!2942 = !DILocation(line: 478, column: 21, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !512, file: !13, line: 478, column: 21)
!2944 = !DILocation(line: 478, column: 26, scope: !2943)
!2945 = !DILocation(line: 478, column: 24, scope: !2943)
!2946 = !DILocation(line: 478, column: 21, scope: !512)
!2947 = !DILocation(line: 479, column: 21, scope: !2943)
!2948 = !DILocation(line: 480, column: 17, scope: !512)
!2949 = !DILocation(line: 480, column: 31, scope: !2950)
!2950 = !DILexicalBlockFile(scope: !2951, file: !13, discriminator: 1)
!2951 = distinct !DILexicalBlock(scope: !512, file: !13, line: 480, column: 20)
!2952 = !DILocation(line: 480, column: 116, scope: !2953)
!2953 = !DILexicalBlockFile(scope: !2954, file: !13, discriminator: 3)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !13, line: 480, column: 67)
!2955 = distinct !DILexicalBlock(scope: !2951, file: !13, line: 480, column: 38)
!2956 = !DILocation(line: 480, column: 106, scope: !2954)
!2957 = !DILocation(line: 480, column: 99, scope: !2954)
!2958 = !DILocation(line: 480, column: 82, scope: !2954)
!2959 = !DILocation(line: 480, column: 69, scope: !2954)
!2960 = !DILocation(line: 480, column: 104, scope: !2954)
!2961 = !DILocation(line: 480, column: 120, scope: !2954)
!2962 = !DILocation(line: 480, column: 205, scope: !2963)
!2963 = !DILexicalBlockFile(scope: !2964, file: !13, discriminator: 4)
!2964 = distinct !DILexicalBlock(scope: !2955, file: !13, line: 480, column: 156)
!2965 = !DILocation(line: 480, column: 195, scope: !2964)
!2966 = !DILocation(line: 480, column: 188, scope: !2964)
!2967 = !DILocation(line: 480, column: 171, scope: !2964)
!2968 = !DILocation(line: 480, column: 159, scope: !2964)
!2969 = !DILocation(line: 480, column: 158, scope: !2964)
!2970 = !DILocation(line: 480, column: 193, scope: !2964)
!2971 = !DILocation(line: 480, column: 209, scope: !2964)
!2972 = !DILocation(line: 480, column: 290, scope: !2973)
!2973 = !DILexicalBlockFile(scope: !2974, file: !13, discriminator: 2)
!2974 = distinct !DILexicalBlock(scope: !2955, file: !13, line: 480, column: 227)
!2975 = !DILocation(line: 480, column: 273, scope: !2974)
!2976 = !DILocation(line: 480, column: 256, scope: !2974)
!2977 = !DILocation(line: 480, column: 244, scope: !2974)
!2978 = !DILocation(line: 480, column: 243, scope: !2974)
!2979 = !DILocation(line: 480, column: 278, scope: !2974)
!2980 = !DILocation(line: 480, column: 296, scope: !2955)
!2981 = !DILocation(line: 480, column: 298, scope: !2982)
!2982 = !DILexicalBlockFile(scope: !2983, file: !13, discriminator: 7)
!2983 = !DILexicalBlockFile(scope: !2984, file: !13, discriminator: 6)
!2984 = !DILexicalBlockFile(scope: !2951, file: !13, discriminator: 5)
!2985 = !DILocation(line: 480, column: 298, scope: !2986)
!2986 = !DILexicalBlockFile(scope: !2951, file: !13, discriminator: 8)
!2987 = !DILocation(line: 481, column: 13, scope: !513)
!2988 = !DILocation(line: 481, column: 13, scope: !2989)
!2989 = !DILexicalBlockFile(scope: !513, file: !13, discriminator: 1)
!2990 = !DILocation(line: 458, column: 13, scope: !513)
!2991 = !DILocation(line: 482, column: 13, scope: !506)
!2992 = !DILocation(line: 482, column: 18, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !516, file: !13, discriminator: 1)
!2994 = !DILocation(line: 482, column: 28, scope: !516)
!2995 = !DILocation(line: 482, column: 58, scope: !516)
!2996 = !DILocation(line: 482, column: 75, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !516, file: !13, line: 482, column: 72)
!2998 = !DILocation(line: 482, column: 92, scope: !2997)
!2999 = !DILocation(line: 482, column: 72, scope: !2997)
!3000 = !DILocation(line: 482, column: 102, scope: !2997)
!3001 = !DILocation(line: 482, column: 72, scope: !516)
!3002 = !DILocation(line: 482, column: 72, scope: !3003)
!3003 = !DILexicalBlockFile(scope: !516, file: !13, discriminator: 2)
!3004 = !DILocation(line: 482, column: 133, scope: !3005)
!3005 = !DILexicalBlockFile(scope: !2997, file: !13, discriminator: 3)
!3006 = !DILocation(line: 482, column: 151, scope: !2997)
!3007 = !DILocation(line: 482, column: 161, scope: !2997)
!3008 = !DILocation(line: 482, column: 186, scope: !2997)
!3009 = !DILocation(line: 482, column: 117, scope: !2997)
!3010 = !DILocation(line: 482, column: 205, scope: !2717)
!3011 = !DILocation(line: 482, column: 205, scope: !516)
!3012 = !DILocation(line: 482, column: 205, scope: !3013)
!3013 = !DILexicalBlockFile(scope: !516, file: !13, discriminator: 5)
!3014 = !DILocation(line: 483, column: 48, scope: !506)
!3015 = !DILocation(line: 483, column: 54, scope: !506)
!3016 = !DILocation(line: 483, column: 66, scope: !506)
!3017 = !DILocation(line: 483, column: 22, scope: !506)
!3018 = !DILocation(line: 483, column: 20, scope: !506)
!3019 = !DILocation(line: 484, column: 24, scope: !506)
!3020 = !DILocation(line: 484, column: 13, scope: !506)
!3021 = !DILocation(line: 485, column: 18, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !506, file: !13, line: 485, column: 17)
!3023 = !DILocation(line: 485, column: 17, scope: !506)
!3024 = !DILocation(line: 486, column: 17, scope: !3022)
!3025 = !DILocation(line: 487, column: 9, scope: !500)
!3026 = !DILocation(line: 487, column: 9, scope: !3027)
!3027 = !DILexicalBlockFile(scope: !500, file: !13, discriminator: 1)
!3028 = !DILocation(line: 488, column: 25, scope: !482)
!3029 = !DILocation(line: 488, column: 9, scope: !482)
!3030 = !DILocation(line: 488, column: 15, scope: !482)
!3031 = !DILocation(line: 488, column: 22, scope: !482)
!3032 = !DILocation(line: 489, column: 5, scope: !459)
!3033 = !DILocation(line: 489, column: 5, scope: !3034)
!3034 = !DILexicalBlockFile(scope: !459, file: !13, discriminator: 1)
!3035 = !DILocation(line: 491, column: 12, scope: !459)
!3036 = !DILocation(line: 491, column: 5, scope: !459)
!3037 = !DILocation(line: 494, column: 5, scope: !459)
!3038 = !DILocation(line: 494, column: 10, scope: !3039)
!3039 = !DILexicalBlockFile(scope: !518, file: !13, discriminator: 1)
!3040 = !DILocation(line: 494, column: 20, scope: !518)
!3041 = !DILocation(line: 494, column: 50, scope: !518)
!3042 = !DILocation(line: 494, column: 67, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !518, file: !13, line: 494, column: 64)
!3044 = !DILocation(line: 494, column: 84, scope: !3043)
!3045 = !DILocation(line: 494, column: 64, scope: !3043)
!3046 = !DILocation(line: 494, column: 94, scope: !3043)
!3047 = !DILocation(line: 494, column: 64, scope: !518)
!3048 = !DILocation(line: 494, column: 64, scope: !3049)
!3049 = !DILexicalBlockFile(scope: !518, file: !13, discriminator: 2)
!3050 = !DILocation(line: 494, column: 125, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3043, file: !13, discriminator: 3)
!3052 = !DILocation(line: 494, column: 143, scope: !3043)
!3053 = !DILocation(line: 494, column: 153, scope: !3043)
!3054 = !DILocation(line: 494, column: 178, scope: !3043)
!3055 = !DILocation(line: 494, column: 109, scope: !3043)
!3056 = !DILocation(line: 494, column: 197, scope: !3057)
!3057 = !DILexicalBlockFile(scope: !459, file: !13, discriminator: 4)
!3058 = !DILocation(line: 494, column: 197, scope: !518)
!3059 = !DILocation(line: 494, column: 197, scope: !3060)
!3060 = !DILexicalBlockFile(scope: !518, file: !13, discriminator: 5)
!3061 = !DILocation(line: 495, column: 5, scope: !459)
!3062 = !DILocation(line: 496, column: 1, scope: !459)
!3063 = !DILocation(line: 274, column: 25, scope: !595)
!3064 = !DILocation(line: 276, column: 9, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !595, file: !13, line: 276, column: 9)
!3066 = !DILocation(line: 276, column: 17, scope: !3065)
!3067 = !DILocation(line: 276, column: 9, scope: !595)
!3068 = !DILocation(line: 277, column: 9, scope: !3065)
!3069 = !DILocation(line: 278, column: 27, scope: !601)
!3070 = !DILocation(line: 278, column: 38, scope: !601)
!3071 = !DILocation(line: 278, column: 49, scope: !601)
!3072 = !{!2197, !1900, i64 168}
!3073 = !DILocation(line: 278, column: 58, scope: !601)
!3074 = !DILocation(line: 278, column: 75, scope: !601)
!3075 = !DILocation(line: 278, column: 9, scope: !595)
!3076 = !DILocation(line: 279, column: 22, scope: !600)
!3077 = !DILocation(line: 281, column: 36, scope: !600)
!3078 = !DILocation(line: 281, column: 47, scope: !600)
!3079 = !DILocation(line: 281, column: 57, scope: !600)
!3080 = !{!2197, !1877, i64 24}
!3081 = !DILocation(line: 279, column: 9, scope: !600)
!3082 = !DILocation(line: 282, column: 9, scope: !600)
!3083 = !DILocation(line: 282, column: 14, scope: !3084)
!3084 = !DILexicalBlockFile(scope: !599, file: !13, discriminator: 1)
!3085 = !DILocation(line: 282, column: 24, scope: !599)
!3086 = !DILocation(line: 282, column: 54, scope: !599)
!3087 = !DILocation(line: 282, column: 72, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !599, file: !13, line: 282, column: 69)
!3089 = !DILocation(line: 282, column: 89, scope: !3088)
!3090 = !DILocation(line: 282, column: 69, scope: !3088)
!3091 = !DILocation(line: 282, column: 99, scope: !3088)
!3092 = !DILocation(line: 282, column: 69, scope: !599)
!3093 = !DILocation(line: 282, column: 69, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !599, file: !13, discriminator: 2)
!3095 = !DILocation(line: 282, column: 130, scope: !3096)
!3096 = !DILexicalBlockFile(scope: !3088, file: !13, discriminator: 3)
!3097 = !DILocation(line: 282, column: 148, scope: !3088)
!3098 = !DILocation(line: 282, column: 158, scope: !3088)
!3099 = !DILocation(line: 282, column: 183, scope: !3088)
!3100 = !DILocation(line: 282, column: 114, scope: !3088)
!3101 = !DILocation(line: 282, column: 202, scope: !3102)
!3102 = !DILexicalBlockFile(scope: !600, file: !13, discriminator: 4)
!3103 = !DILocation(line: 282, column: 202, scope: !599)
!3104 = !DILocation(line: 283, column: 9, scope: !600)
!3105 = !DILocation(line: 285, column: 43, scope: !605)
!3106 = !DILocation(line: 285, column: 27, scope: !605)
!3107 = !DILocation(line: 285, column: 53, scope: !605)
!3108 = !DILocation(line: 285, column: 59, scope: !605)
!3109 = !DILocation(line: 285, column: 25, scope: !605)
!3110 = !DILocation(line: 285, column: 25, scope: !3111)
!3111 = !DILexicalBlockFile(scope: !605, file: !13, discriminator: 1)
!3112 = !DILocation(line: 285, column: 102, scope: !3113)
!3113 = !DILexicalBlockFile(scope: !605, file: !13, discriminator: 2)
!3114 = !DILocation(line: 285, column: 72, scope: !605)
!3115 = !DILocation(line: 285, column: 114, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !3117, file: !13, discriminator: 4)
!3117 = !DILexicalBlockFile(scope: !605, file: !13, discriminator: 3)
!3118 = !DILocation(line: 285, column: 9, scope: !595)
!3119 = !DILocation(line: 286, column: 9, scope: !604)
!3120 = !DILocation(line: 286, column: 14, scope: !3121)
!3121 = !DILexicalBlockFile(scope: !603, file: !13, discriminator: 1)
!3122 = !DILocation(line: 286, column: 24, scope: !603)
!3123 = !DILocation(line: 286, column: 54, scope: !603)
!3124 = !DILocation(line: 286, column: 72, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !603, file: !13, line: 286, column: 69)
!3126 = !DILocation(line: 286, column: 89, scope: !3125)
!3127 = !DILocation(line: 286, column: 69, scope: !3125)
!3128 = !DILocation(line: 286, column: 99, scope: !3125)
!3129 = !DILocation(line: 286, column: 69, scope: !603)
!3130 = !DILocation(line: 286, column: 69, scope: !3131)
!3131 = !DILexicalBlockFile(scope: !603, file: !13, discriminator: 2)
!3132 = !DILocation(line: 286, column: 130, scope: !3133)
!3133 = !DILexicalBlockFile(scope: !3125, file: !13, discriminator: 3)
!3134 = !DILocation(line: 286, column: 148, scope: !3125)
!3135 = !DILocation(line: 286, column: 158, scope: !3125)
!3136 = !DILocation(line: 286, column: 183, scope: !3125)
!3137 = !DILocation(line: 286, column: 114, scope: !3125)
!3138 = !DILocation(line: 286, column: 202, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !604, file: !13, discriminator: 4)
!3140 = !DILocation(line: 286, column: 202, scope: !603)
!3141 = !DILocation(line: 287, column: 9, scope: !604)
!3142 = !DILocation(line: 289, column: 5, scope: !595)
!3143 = !DILocation(line: 290, column: 1, scope: !595)
!3144 = !DILocation(line: 266, column: 53, scope: !606)
!3145 = !DILocation(line: 268, column: 5, scope: !606)
!3146 = !DILocation(line: 268, column: 10, scope: !3147)
!3147 = !DILexicalBlockFile(scope: !612, file: !13, discriminator: 1)
!3148 = !DILocation(line: 268, column: 20, scope: !612)
!3149 = !DILocation(line: 268, column: 43, scope: !612)
!3150 = !DILocation(line: 268, column: 49, scope: !612)
!3151 = !DILocation(line: 268, column: 63, scope: !616)
!3152 = !DILocation(line: 268, column: 71, scope: !616)
!3153 = !DILocation(line: 268, column: 63, scope: !612)
!3154 = !DILocation(line: 268, column: 89, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !615, file: !13, discriminator: 2)
!3156 = !DILocation(line: 268, column: 95, scope: !615)
!3157 = !DILocation(line: 268, column: 104, scope: !615)
!3158 = !DILocation(line: 268, column: 118, scope: !615)
!3159 = !DILocation(line: 268, column: 123, scope: !3160)
!3160 = !DILexicalBlockFile(scope: !614, file: !13, discriminator: 4)
!3161 = !DILocation(line: 268, column: 133, scope: !614)
!3162 = !DILocation(line: 268, column: 163, scope: !614)
!3163 = !DILocation(line: 268, column: 181, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !614, file: !13, line: 268, column: 178)
!3165 = !DILocation(line: 268, column: 198, scope: !3164)
!3166 = !DILocation(line: 268, column: 178, scope: !3164)
!3167 = !DILocation(line: 268, column: 208, scope: !3164)
!3168 = !DILocation(line: 268, column: 178, scope: !614)
!3169 = !DILocation(line: 268, column: 178, scope: !3170)
!3170 = !DILexicalBlockFile(scope: !614, file: !13, discriminator: 5)
!3171 = !DILocation(line: 268, column: 239, scope: !3172)
!3172 = !DILexicalBlockFile(scope: !3164, file: !13, discriminator: 6)
!3173 = !DILocation(line: 268, column: 257, scope: !3164)
!3174 = !DILocation(line: 268, column: 267, scope: !3164)
!3175 = !DILocation(line: 268, column: 292, scope: !3164)
!3176 = !DILocation(line: 268, column: 223, scope: !3164)
!3177 = !DILocation(line: 268, column: 311, scope: !3178)
!3178 = !DILexicalBlockFile(scope: !615, file: !13, discriminator: 7)
!3179 = !DILocation(line: 268, column: 311, scope: !614)
!3180 = !DILocation(line: 268, column: 311, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !614, file: !13, discriminator: 8)
!3182 = !DILocation(line: 268, column: 324, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !615, file: !13, discriminator: 9)
!3184 = !DILocation(line: 268, column: 326, scope: !3185)
!3185 = !DILexicalBlockFile(scope: !3186, file: !13, discriminator: 10)
!3186 = !DILexicalBlockFile(scope: !606, file: !13, discriminator: 3)
!3187 = !DILocation(line: 268, column: 326, scope: !612)
!3188 = !DILocation(line: 269, column: 5, scope: !606)
!3189 = !DILocation(line: 269, column: 10, scope: !3190)
!3190 = !DILexicalBlockFile(scope: !618, file: !13, discriminator: 1)
!3191 = !DILocation(line: 269, column: 20, scope: !618)
!3192 = !DILocation(line: 269, column: 43, scope: !618)
!3193 = !DILocation(line: 269, column: 49, scope: !618)
!3194 = !{!1898, !1877, i64 24}
!3195 = !DILocation(line: 269, column: 62, scope: !622)
!3196 = !DILocation(line: 269, column: 70, scope: !622)
!3197 = !DILocation(line: 269, column: 62, scope: !618)
!3198 = !DILocation(line: 269, column: 88, scope: !3199)
!3199 = !DILexicalBlockFile(scope: !621, file: !13, discriminator: 2)
!3200 = !DILocation(line: 269, column: 94, scope: !621)
!3201 = !DILocation(line: 269, column: 102, scope: !621)
!3202 = !DILocation(line: 269, column: 116, scope: !621)
!3203 = !DILocation(line: 269, column: 121, scope: !3204)
!3204 = !DILexicalBlockFile(scope: !620, file: !13, discriminator: 4)
!3205 = !DILocation(line: 269, column: 131, scope: !620)
!3206 = !DILocation(line: 269, column: 161, scope: !620)
!3207 = !DILocation(line: 269, column: 179, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !620, file: !13, line: 269, column: 176)
!3209 = !DILocation(line: 269, column: 196, scope: !3208)
!3210 = !DILocation(line: 269, column: 176, scope: !3208)
!3211 = !DILocation(line: 269, column: 206, scope: !3208)
!3212 = !DILocation(line: 269, column: 176, scope: !620)
!3213 = !DILocation(line: 269, column: 176, scope: !3214)
!3214 = !DILexicalBlockFile(scope: !620, file: !13, discriminator: 5)
!3215 = !DILocation(line: 269, column: 237, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3208, file: !13, discriminator: 6)
!3217 = !DILocation(line: 269, column: 255, scope: !3208)
!3218 = !DILocation(line: 269, column: 265, scope: !3208)
!3219 = !DILocation(line: 269, column: 290, scope: !3208)
!3220 = !DILocation(line: 269, column: 221, scope: !3208)
!3221 = !DILocation(line: 269, column: 309, scope: !3222)
!3222 = !DILexicalBlockFile(scope: !621, file: !13, discriminator: 7)
!3223 = !DILocation(line: 269, column: 309, scope: !620)
!3224 = !DILocation(line: 269, column: 309, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !620, file: !13, discriminator: 8)
!3226 = !DILocation(line: 269, column: 322, scope: !3227)
!3227 = !DILexicalBlockFile(scope: !621, file: !13, discriminator: 9)
!3228 = !DILocation(line: 269, column: 324, scope: !3185)
!3229 = !DILocation(line: 269, column: 324, scope: !618)
!3230 = !DILocation(line: 270, column: 19, scope: !606)
!3231 = !DILocation(line: 270, column: 7, scope: !606)
!3232 = !DILocation(line: 270, column: 27, scope: !606)
!3233 = !DILocation(line: 270, column: 37, scope: !606)
!3234 = !{!2197, !1877, i64 320}
!3235 = !DILocation(line: 270, column: 57, scope: !606)
!3236 = !DILocation(line: 270, column: 45, scope: !606)
!3237 = !DILocation(line: 270, column: 5, scope: !606)
!3238 = !DILocation(line: 271, column: 1, scope: !606)
!3239 = !DILocation(line: 233, column: 50, scope: !670)
!3240 = !DILocation(line: 234, column: 42, scope: !670)
!3241 = !DILocation(line: 234, column: 58, scope: !670)
!3242 = !DILocation(line: 236, column: 5, scope: !670)
!3243 = !DILocation(line: 236, column: 15, scope: !670)
!3244 = !DILocation(line: 237, column: 5, scope: !670)
!3245 = !DILocation(line: 237, column: 9, scope: !670)
!3246 = !DILocation(line: 238, column: 5, scope: !670)
!3247 = !DILocation(line: 238, column: 15, scope: !670)
!3248 = !DILocation(line: 239, column: 5, scope: !670)
!3249 = !DILocation(line: 239, column: 11, scope: !670)
!3250 = !DILocation(line: 241, column: 45, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !670, file: !13, line: 241, column: 9)
!3252 = !DILocation(line: 241, column: 51, scope: !3251)
!3253 = !DILocation(line: 242, column: 38, scope: !3251)
!3254 = !DILocation(line: 241, column: 10, scope: !3251)
!3255 = !DILocation(line: 241, column: 9, scope: !670)
!3256 = !DILocation(line: 243, column: 9, scope: !3251)
!3257 = !DILocation(line: 245, column: 21, scope: !670)
!3258 = !DILocation(line: 245, column: 5, scope: !670)
!3259 = !DILocation(line: 245, column: 11, scope: !670)
!3260 = !DILocation(line: 245, column: 19, scope: !670)
!3261 = !DILocation(line: 246, column: 21, scope: !670)
!3262 = !DILocation(line: 246, column: 32, scope: !670)
!3263 = !DILocation(line: 246, column: 41, scope: !670)
!3264 = !DILocation(line: 248, column: 9, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !670, file: !13, line: 248, column: 9)
!3266 = !DILocation(line: 248, column: 16, scope: !3265)
!3267 = !DILocation(line: 248, column: 9, scope: !670)
!3268 = !DILocation(line: 249, column: 24, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !13, line: 248, column: 31)
!3270 = !DILocation(line: 249, column: 9, scope: !3269)
!3271 = !DILocation(line: 249, column: 15, scope: !3269)
!3272 = !DILocation(line: 249, column: 22, scope: !3269)
!3273 = !DILocation(line: 250, column: 13, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3269, file: !13, line: 250, column: 13)
!3275 = !DILocation(line: 250, column: 19, scope: !3274)
!3276 = !DILocation(line: 250, column: 26, scope: !3274)
!3277 = !DILocation(line: 250, column: 13, scope: !3269)
!3278 = !DILocation(line: 251, column: 13, scope: !3274)
!3279 = !DILocation(line: 252, column: 5, scope: !3269)
!3280 = !DILocation(line: 254, column: 25, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3265, file: !13, line: 253, column: 10)
!3282 = !DILocation(line: 254, column: 35, scope: !3281)
!3283 = !DILocation(line: 254, column: 44, scope: !3281)
!3284 = !DILocation(line: 255, column: 24, scope: !3281)
!3285 = !DILocation(line: 255, column: 9, scope: !3281)
!3286 = !DILocation(line: 255, column: 15, scope: !3281)
!3287 = !DILocation(line: 255, column: 22, scope: !3281)
!3288 = !DILocation(line: 258, column: 23, scope: !670)
!3289 = !DILocation(line: 258, column: 5, scope: !670)
!3290 = !DILocation(line: 258, column: 11, scope: !670)
!3291 = !DILocation(line: 258, column: 21, scope: !670)
!3292 = !DILocation(line: 259, column: 5, scope: !670)
!3293 = !DILocation(line: 259, column: 11, scope: !670)
!3294 = !DILocation(line: 259, column: 18, scope: !670)
!3295 = !DILocation(line: 260, column: 5, scope: !670)
!3296 = !DILocation(line: 260, column: 11, scope: !670)
!3297 = !DILocation(line: 260, column: 21, scope: !670)
!3298 = !DILocation(line: 262, column: 5, scope: !670)
!3299 = !DILocation(line: 263, column: 1, scope: !670)
!3300 = !DILocation(line: 1682, column: 9, scope: !519)
!3301 = !DILocation(line: 1682, column: 25, scope: !519)
!3302 = !DILocation(line: 1682, column: 46, scope: !519)
!3303 = !DILocation(line: 1683, column: 9, scope: !519)
!3304 = !DILocation(line: 1683, column: 21, scope: !519)
!3305 = !DILocation(line: 1683, column: 34, scope: !519)
!3306 = !DILocation(line: 1683, column: 51, scope: !519)
!3307 = !DILocation(line: 1685, column: 5, scope: !519)
!3308 = !DILocation(line: 1685, column: 16, scope: !519)
!3309 = !DILocation(line: 1685, column: 30, scope: !519)
!3310 = !DILocation(line: 1685, column: 43, scope: !519)
!3311 = !DILocation(line: 1685, column: 34, scope: !519)
!3312 = !DILocation(line: 1685, column: 50, scope: !519)
!3313 = !DILocation(line: 1685, column: 49, scope: !519)
!3314 = !DILocation(line: 1687, column: 9, scope: !533)
!3315 = !DILocation(line: 1687, column: 9, scope: !519)
!3316 = !DILocation(line: 1689, column: 9, scope: !532)
!3317 = !DILocation(line: 1689, column: 15, scope: !532)
!3318 = !DILocation(line: 1689, column: 39, scope: !532)
!3319 = !DILocation(line: 1689, column: 45, scope: !532)
!3320 = !DILocation(line: 1689, column: 52, scope: !532)
!3321 = !DILocation(line: 1689, column: 21, scope: !532)
!3322 = !DILocation(line: 1690, column: 13, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !532, file: !13, line: 1690, column: 13)
!3324 = !DILocation(line: 1690, column: 17, scope: !3323)
!3325 = !DILocation(line: 1690, column: 13, scope: !532)
!3326 = !DILocation(line: 1691, column: 21, scope: !3323)
!3327 = !DILocation(line: 1691, column: 27, scope: !3323)
!3328 = !DILocation(line: 1691, column: 25, scope: !3323)
!3329 = !DILocation(line: 1691, column: 34, scope: !3323)
!3330 = !DILocation(line: 1691, column: 33, scope: !3323)
!3331 = !DILocation(line: 1691, column: 39, scope: !3323)
!3332 = !DILocation(line: 1691, column: 13, scope: !3323)
!3333 = !DILocation(line: 1693, column: 25, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3323, file: !13, line: 1692, column: 14)
!3335 = !DILocation(line: 1693, column: 14, scope: !3334)
!3336 = !DILocation(line: 1693, column: 23, scope: !3334)
!3337 = !DILocation(line: 1694, column: 13, scope: !3334)
!3338 = !DILocation(line: 1696, column: 5, scope: !533)
!3339 = !DILocation(line: 1697, column: 14, scope: !536)
!3340 = !DILocation(line: 1697, column: 14, scope: !533)
!3341 = !DILocation(line: 1701, column: 9, scope: !535)
!3342 = !DILocation(line: 1701, column: 15, scope: !535)
!3343 = !DILocation(line: 1701, column: 19, scope: !535)
!3344 = !DILocation(line: 1702, column: 9, scope: !535)
!3345 = !DILocation(line: 1703, column: 13, scope: !538)
!3346 = !DILocation(line: 1703, column: 21, scope: !538)
!3347 = !DILocation(line: 1706, column: 13, scope: !538)
!3348 = !DILocation(line: 1706, column: 33, scope: !3349)
!3349 = !DILexicalBlockFile(scope: !3350, file: !13, discriminator: 10)
!3350 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 1)
!3351 = !DILocation(line: 1706, column: 39, scope: !538)
!3352 = !DILocation(line: 1706, column: 32, scope: !538)
!3353 = !DILocation(line: 1706, column: 84, scope: !3354)
!3354 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 2)
!3355 = !DILocation(line: 1706, column: 65, scope: !538)
!3356 = !DILocation(line: 1706, column: 97, scope: !3357)
!3357 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 3)
!3358 = !DILocation(line: 1706, column: 103, scope: !538)
!3359 = !DILocation(line: 1706, column: 96, scope: !538)
!3360 = !DILocation(line: 1706, column: 148, scope: !3361)
!3361 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 5)
!3362 = !DILocation(line: 1706, column: 130, scope: !538)
!3363 = !DILocation(line: 1706, column: 129, scope: !538)
!3364 = !DILocation(line: 1706, column: 178, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 6)
!3366 = !DILocation(line: 1706, column: 160, scope: !538)
!3367 = !DILocation(line: 1706, column: 159, scope: !538)
!3368 = !DILocation(line: 1706, column: 32, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !3370, file: !13, discriminator: 8)
!3370 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 7)
!3371 = !DILocation(line: 1706, column: 192, scope: !3372)
!3372 = !DILexicalBlockFile(scope: !3373, file: !13, discriminator: 9)
!3373 = !DILexicalBlockFile(scope: !538, file: !13, discriminator: 4)
!3374 = !DILocation(line: 1707, column: 22, scope: !538)
!3375 = !DILocation(line: 1707, column: 19, scope: !538)
!3376 = !DILocation(line: 1708, column: 17, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !538, file: !13, line: 1708, column: 17)
!3378 = !DILocation(line: 1708, column: 22, scope: !3377)
!3379 = !DILocation(line: 1708, column: 19, scope: !3377)
!3380 = !DILocation(line: 1708, column: 17, scope: !538)
!3381 = !DILocation(line: 1709, column: 29, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3377, file: !13, line: 1708, column: 27)
!3383 = !DILocation(line: 1709, column: 18, scope: !3382)
!3384 = !DILocation(line: 1709, column: 27, scope: !3382)
!3385 = !DILocation(line: 1710, column: 17, scope: !3382)
!3386 = !DILocation(line: 1712, column: 31, scope: !538)
!3387 = !DILocation(line: 1712, column: 37, scope: !538)
!3388 = !DILocation(line: 1712, column: 30, scope: !538)
!3389 = !DILocation(line: 1712, column: 82, scope: !3350)
!3390 = !DILocation(line: 1712, column: 63, scope: !538)
!3391 = !DILocation(line: 1712, column: 95, scope: !3354)
!3392 = !DILocation(line: 1712, column: 101, scope: !538)
!3393 = !DILocation(line: 1712, column: 94, scope: !538)
!3394 = !DILocation(line: 1712, column: 146, scope: !3373)
!3395 = !DILocation(line: 1712, column: 128, scope: !538)
!3396 = !DILocation(line: 1712, column: 127, scope: !538)
!3397 = !DILocation(line: 1712, column: 176, scope: !3361)
!3398 = !DILocation(line: 1712, column: 158, scope: !538)
!3399 = !DILocation(line: 1712, column: 157, scope: !538)
!3400 = !DILocation(line: 1712, column: 30, scope: !3401)
!3401 = !DILexicalBlockFile(scope: !3365, file: !13, discriminator: 7)
!3402 = !DILocation(line: 1712, column: 16, scope: !3403)
!3403 = !DILexicalBlockFile(scope: !3357, file: !13, discriminator: 8)
!3404 = !DILocation(line: 1713, column: 18, scope: !538)
!3405 = !DILocation(line: 1713, column: 15, scope: !538)
!3406 = !DILocation(line: 1714, column: 17, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !538, file: !13, line: 1714, column: 17)
!3408 = !DILocation(line: 1714, column: 20, scope: !3407)
!3409 = !DILocation(line: 1714, column: 17, scope: !538)
!3410 = !DILocation(line: 1715, column: 25, scope: !3407)
!3411 = !DILocation(line: 1715, column: 29, scope: !3407)
!3412 = !DILocation(line: 1715, column: 27, scope: !3407)
!3413 = !DILocation(line: 1715, column: 36, scope: !3407)
!3414 = !DILocation(line: 1715, column: 35, scope: !3407)
!3415 = !DILocation(line: 1715, column: 17, scope: !3407)
!3416 = !DILocation(line: 1716, column: 17, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !538, file: !13, line: 1716, column: 17)
!3418 = !DILocation(line: 1716, column: 20, scope: !3417)
!3419 = !DILocation(line: 1716, column: 17, scope: !538)
!3420 = !DILocation(line: 1717, column: 34, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !13, line: 1717, column: 21)
!3422 = distinct !DILexicalBlock(scope: !3417, file: !13, line: 1716, column: 29)
!3423 = !DILocation(line: 1717, column: 40, scope: !3421)
!3424 = !DILocation(line: 1717, column: 33, scope: !3421)
!3425 = !DILocation(line: 1717, column: 85, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3421, file: !13, discriminator: 1)
!3427 = !DILocation(line: 1717, column: 66, scope: !3421)
!3428 = !DILocation(line: 1717, column: 98, scope: !3429)
!3429 = !DILexicalBlockFile(scope: !3421, file: !13, discriminator: 2)
!3430 = !DILocation(line: 1717, column: 104, scope: !3421)
!3431 = !DILocation(line: 1717, column: 97, scope: !3421)
!3432 = !DILocation(line: 1717, column: 149, scope: !3433)
!3433 = !DILexicalBlockFile(scope: !3421, file: !13, discriminator: 4)
!3434 = !DILocation(line: 1717, column: 131, scope: !3421)
!3435 = !DILocation(line: 1717, column: 130, scope: !3421)
!3436 = !DILocation(line: 1717, column: 179, scope: !3437)
!3437 = !DILexicalBlockFile(scope: !3421, file: !13, discriminator: 5)
!3438 = !DILocation(line: 1717, column: 161, scope: !3421)
!3439 = !DILocation(line: 1717, column: 160, scope: !3421)
!3440 = !DILocation(line: 1717, column: 33, scope: !3441)
!3441 = !DILexicalBlockFile(scope: !3442, file: !13, discriminator: 7)
!3442 = !DILexicalBlockFile(scope: !3421, file: !13, discriminator: 6)
!3443 = !DILocation(line: 1717, column: 193, scope: !3444)
!3444 = !DILexicalBlockFile(scope: !3445, file: !13, discriminator: 8)
!3445 = !DILexicalBlockFile(scope: !3421, file: !13, discriminator: 3)
!3446 = !DILocation(line: 1717, column: 21, scope: !3422)
!3447 = !DILocation(line: 1718, column: 29, scope: !3421)
!3448 = !DILocation(line: 1718, column: 33, scope: !3421)
!3449 = !DILocation(line: 1718, column: 31, scope: !3421)
!3450 = !DILocation(line: 1718, column: 40, scope: !3421)
!3451 = !DILocation(line: 1718, column: 39, scope: !3421)
!3452 = !DILocation(line: 1718, column: 45, scope: !3421)
!3453 = !DILocation(line: 1718, column: 21, scope: !3421)
!3454 = !DILocation(line: 1720, column: 29, scope: !3421)
!3455 = !DILocation(line: 1720, column: 33, scope: !3421)
!3456 = !DILocation(line: 1720, column: 31, scope: !3421)
!3457 = !DILocation(line: 1720, column: 40, scope: !3421)
!3458 = !DILocation(line: 1720, column: 39, scope: !3421)
!3459 = !DILocation(line: 1720, column: 21, scope: !3421)
!3460 = !DILocation(line: 1722, column: 9, scope: !539)
!3461 = !DILocation(line: 1722, column: 9, scope: !3462)
!3462 = !DILexicalBlockFile(scope: !539, file: !13, discriminator: 1)
!3463 = !DILocation(line: 1702, column: 9, scope: !539)
!3464 = !DILocation(line: 1723, column: 5, scope: !536)
!3465 = !DILocation(line: 1726, column: 9, scope: !542)
!3466 = !DILocation(line: 1726, column: 20, scope: !542)
!3467 = !DILocation(line: 1726, column: 81, scope: !542)
!3468 = !DILocation(line: 1726, column: 63, scope: !542)
!3469 = !DILocation(line: 1726, column: 91, scope: !542)
!3470 = !DILocation(line: 1727, column: 9, scope: !542)
!3471 = !DILocation(line: 1727, column: 15, scope: !542)
!3472 = !DILocation(line: 1727, column: 54, scope: !542)
!3473 = !DILocation(line: 1727, column: 37, scope: !542)
!3474 = !DILocation(line: 1727, column: 64, scope: !542)
!3475 = !DILocation(line: 1727, column: 70, scope: !542)
!3476 = !DILocation(line: 1727, column: 35, scope: !542)
!3477 = !DILocation(line: 1727, column: 128, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 1)
!3479 = !DILocation(line: 1727, column: 112, scope: !542)
!3480 = !DILocation(line: 1727, column: 137, scope: !542)
!3481 = !DILocation(line: 1727, column: 143, scope: !542)
!3482 = !DILocation(line: 1727, column: 82, scope: !542)
!3483 = !DILocation(line: 1727, column: 178, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 3)
!3485 = !DILocation(line: 1727, column: 161, scope: !542)
!3486 = !DILocation(line: 1727, column: 186, scope: !542)
!3487 = !DILocation(line: 1727, column: 153, scope: !542)
!3488 = !DILocation(line: 1727, column: 229, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 4)
!3490 = !DILocation(line: 1727, column: 203, scope: !542)
!3491 = !DILocation(line: 1727, column: 237, scope: !542)
!3492 = !DILocation(line: 1727, column: 195, scope: !542)
!3493 = !DILocation(line: 1727, column: 35, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !3495, file: !13, discriminator: 6)
!3495 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 5)
!3496 = !DILocation(line: 1727, column: 284, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 2)
!3498 = !DILocation(line: 1727, column: 264, scope: !542)
!3499 = !DILocation(line: 1727, column: 294, scope: !542)
!3500 = !DILocation(line: 1727, column: 299, scope: !542)
!3501 = !DILocation(line: 1727, column: 15, scope: !3502)
!3502 = !DILexicalBlockFile(scope: !3503, file: !13, discriminator: 8)
!3503 = !DILexicalBlockFile(scope: !542, file: !13, discriminator: 7)
!3504 = !DILocation(line: 1730, column: 13, scope: !546)
!3505 = !DILocation(line: 1730, column: 24, scope: !546)
!3506 = !DILocation(line: 1730, column: 13, scope: !542)
!3507 = !DILocation(line: 1731, column: 13, scope: !545)
!3508 = !DILocation(line: 1731, column: 19, scope: !545)
!3509 = !DILocation(line: 1731, column: 43, scope: !545)
!3510 = !DILocation(line: 1731, column: 49, scope: !545)
!3511 = !DILocation(line: 1731, column: 56, scope: !545)
!3512 = !DILocation(line: 1731, column: 61, scope: !545)
!3513 = !DILocation(line: 1731, column: 25, scope: !545)
!3514 = !DILocation(line: 1732, column: 17, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !545, file: !13, line: 1732, column: 17)
!3516 = !DILocation(line: 1732, column: 21, scope: !3515)
!3517 = !DILocation(line: 1732, column: 17, scope: !545)
!3518 = !DILocation(line: 1733, column: 25, scope: !3515)
!3519 = !DILocation(line: 1733, column: 31, scope: !3515)
!3520 = !DILocation(line: 1733, column: 29, scope: !3515)
!3521 = !DILocation(line: 1733, column: 38, scope: !3515)
!3522 = !DILocation(line: 1733, column: 37, scope: !3515)
!3523 = !DILocation(line: 1733, column: 43, scope: !3515)
!3524 = !DILocation(line: 1733, column: 17, scope: !3515)
!3525 = !DILocation(line: 1734, column: 25, scope: !545)
!3526 = !DILocation(line: 1734, column: 14, scope: !545)
!3527 = !DILocation(line: 1734, column: 23, scope: !545)
!3528 = !DILocation(line: 1735, column: 13, scope: !545)
!3529 = !DILocation(line: 1736, column: 9, scope: !546)
!3530 = !DILocation(line: 1738, column: 13, scope: !548)
!3531 = !DILocation(line: 1738, column: 19, scope: !548)
!3532 = !DILocation(line: 1738, column: 23, scope: !548)
!3533 = !DILocation(line: 1739, column: 13, scope: !548)
!3534 = !DILocation(line: 1739, column: 19, scope: !548)
!3535 = !DILocation(line: 1739, column: 23, scope: !548)
!3536 = !DILocation(line: 1739, column: 30, scope: !548)
!3537 = !DILocation(line: 1739, column: 41, scope: !548)
!3538 = !DILocation(line: 1739, column: 46, scope: !548)
!3539 = !DILocation(line: 1739, column: 45, scope: !548)
!3540 = !DILocation(line: 1739, column: 27, scope: !548)
!3541 = !DILocation(line: 1740, column: 13, scope: !548)
!3542 = !DILocation(line: 1740, column: 19, scope: !548)
!3543 = !DILocation(line: 1741, column: 17, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !548, file: !13, line: 1741, column: 17)
!3545 = !DILocation(line: 1741, column: 21, scope: !3544)
!3546 = !DILocation(line: 1741, column: 19, scope: !3544)
!3547 = !DILocation(line: 1741, column: 17, scope: !548)
!3548 = !DILocation(line: 1742, column: 21, scope: !3544)
!3549 = !DILocation(line: 1742, column: 19, scope: !3544)
!3550 = !DILocation(line: 1742, column: 17, scope: !3544)
!3551 = !DILocation(line: 1743, column: 13, scope: !548)
!3552 = !DILocation(line: 1743, column: 20, scope: !3553)
!3553 = !DILexicalBlockFile(scope: !3554, file: !13, discriminator: 2)
!3554 = !DILexicalBlockFile(scope: !548, file: !13, discriminator: 1)
!3555 = !DILocation(line: 1743, column: 24, scope: !548)
!3556 = !DILocation(line: 1743, column: 22, scope: !548)
!3557 = !DILocation(line: 1744, column: 17, scope: !552)
!3558 = !DILocation(line: 1744, column: 28, scope: !552)
!3559 = !DILocation(line: 1745, column: 17, scope: !552)
!3560 = !DILocation(line: 1745, column: 23, scope: !552)
!3561 = !DILocation(line: 1745, column: 47, scope: !552)
!3562 = !DILocation(line: 1745, column: 53, scope: !552)
!3563 = !DILocation(line: 1745, column: 56, scope: !552)
!3564 = !DILocation(line: 1745, column: 61, scope: !552)
!3565 = !DILocation(line: 1745, column: 29, scope: !552)
!3566 = !DILocation(line: 1746, column: 21, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !552, file: !13, line: 1746, column: 21)
!3568 = !DILocation(line: 1746, column: 25, scope: !3567)
!3569 = !DILocation(line: 1746, column: 39, scope: !3567)
!3570 = !DILocation(line: 1746, column: 42, scope: !3571)
!3571 = !DILexicalBlockFile(scope: !3567, file: !13, discriminator: 1)
!3572 = !DILocation(line: 1746, column: 49, scope: !3567)
!3573 = !DILocation(line: 1746, column: 46, scope: !3567)
!3574 = !DILocation(line: 1746, column: 21, scope: !552)
!3575 = !DILocation(line: 1747, column: 21, scope: !3567)
!3576 = !DILocation(line: 1748, column: 24, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !552, file: !13, line: 1748, column: 17)
!3578 = !DILocation(line: 1748, column: 22, scope: !3577)
!3579 = !DILocation(line: 1748, column: 29, scope: !3580)
!3580 = !DILexicalBlockFile(scope: !3581, file: !13, discriminator: 2)
!3581 = !DILexicalBlockFile(scope: !3582, file: !13, discriminator: 1)
!3582 = distinct !DILexicalBlock(scope: !3577, file: !13, line: 1748, column: 17)
!3583 = !DILocation(line: 1748, column: 33, scope: !3582)
!3584 = !DILocation(line: 1748, column: 31, scope: !3582)
!3585 = !DILocation(line: 1748, column: 17, scope: !3577)
!3586 = !DILocation(line: 1749, column: 38, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !13, line: 1749, column: 25)
!3588 = distinct !DILexicalBlock(scope: !3582, file: !13, line: 1748, column: 50)
!3589 = !DILocation(line: 1749, column: 44, scope: !3587)
!3590 = !DILocation(line: 1749, column: 37, scope: !3587)
!3591 = !DILocation(line: 1749, column: 96, scope: !3592)
!3592 = !DILexicalBlockFile(scope: !3587, file: !13, discriminator: 1)
!3593 = !DILocation(line: 1749, column: 89, scope: !3587)
!3594 = !DILocation(line: 1749, column: 70, scope: !3587)
!3595 = !DILocation(line: 1749, column: 104, scope: !3596)
!3596 = !DILexicalBlockFile(scope: !3587, file: !13, discriminator: 2)
!3597 = !DILocation(line: 1749, column: 110, scope: !3587)
!3598 = !DILocation(line: 1749, column: 103, scope: !3587)
!3599 = !DILocation(line: 1749, column: 162, scope: !3600)
!3600 = !DILexicalBlockFile(scope: !3587, file: !13, discriminator: 4)
!3601 = !DILocation(line: 1749, column: 155, scope: !3587)
!3602 = !DILocation(line: 1749, column: 137, scope: !3587)
!3603 = !DILocation(line: 1749, column: 136, scope: !3587)
!3604 = !DILocation(line: 1749, column: 194, scope: !3605)
!3605 = !DILexicalBlockFile(scope: !3587, file: !13, discriminator: 5)
!3606 = !DILocation(line: 1749, column: 187, scope: !3587)
!3607 = !DILocation(line: 1749, column: 169, scope: !3587)
!3608 = !DILocation(line: 1749, column: 168, scope: !3587)
!3609 = !DILocation(line: 1749, column: 37, scope: !3610)
!3610 = !DILexicalBlockFile(scope: !3611, file: !13, discriminator: 7)
!3611 = !DILexicalBlockFile(scope: !3587, file: !13, discriminator: 6)
!3612 = !DILocation(line: 1749, column: 209, scope: !3613)
!3613 = !DILexicalBlockFile(scope: !3614, file: !13, discriminator: 8)
!3614 = !DILexicalBlockFile(scope: !3587, file: !13, discriminator: 3)
!3615 = !DILocation(line: 1749, column: 206, scope: !3587)
!3616 = !DILocation(line: 1749, column: 203, scope: !3587)
!3617 = !DILocation(line: 1749, column: 25, scope: !3588)
!3618 = !DILocation(line: 1750, column: 25, scope: !3587)
!3619 = !DILocation(line: 1751, column: 17, scope: !3588)
!3620 = !DILocation(line: 1748, column: 46, scope: !3582)
!3621 = !DILocation(line: 1748, column: 17, scope: !3582)
!3622 = !DILocation(line: 1752, column: 21, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !552, file: !13, line: 1752, column: 21)
!3624 = !DILocation(line: 1752, column: 26, scope: !3623)
!3625 = !DILocation(line: 1752, column: 23, scope: !3623)
!3626 = !DILocation(line: 1752, column: 21, scope: !552)
!3627 = !DILocation(line: 1753, column: 29, scope: !3623)
!3628 = !DILocation(line: 1753, column: 35, scope: !3623)
!3629 = !DILocation(line: 1753, column: 33, scope: !3623)
!3630 = !DILocation(line: 1753, column: 42, scope: !3623)
!3631 = !DILocation(line: 1753, column: 41, scope: !3623)
!3632 = !DILocation(line: 1753, column: 49, scope: !3623)
!3633 = !DILocation(line: 1753, column: 47, scope: !3623)
!3634 = !DILocation(line: 1753, column: 21, scope: !3623)
!3635 = !DILocation(line: 1754, column: 21, scope: !552)
!3636 = !DILocation(line: 1754, column: 27, scope: !552)
!3637 = !DILocation(line: 1754, column: 25, scope: !552)
!3638 = !DILocation(line: 1754, column: 19, scope: !552)
!3639 = !DILocation(line: 1755, column: 13, scope: !548)
!3640 = !DILocation(line: 1755, column: 13, scope: !3554)
!3641 = !DILocation(line: 1756, column: 37, scope: !548)
!3642 = !DILocation(line: 1756, column: 43, scope: !548)
!3643 = !DILocation(line: 1756, column: 46, scope: !548)
!3644 = !DILocation(line: 1756, column: 51, scope: !548)
!3645 = !DILocation(line: 1756, column: 19, scope: !548)
!3646 = !DILocation(line: 1756, column: 17, scope: !548)
!3647 = !DILocation(line: 1757, column: 17, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !548, file: !13, line: 1757, column: 17)
!3649 = !DILocation(line: 1757, column: 21, scope: !3648)
!3650 = !DILocation(line: 1757, column: 17, scope: !548)
!3651 = !DILocation(line: 1758, column: 29, scope: !3648)
!3652 = !DILocation(line: 1758, column: 18, scope: !3648)
!3653 = !DILocation(line: 1758, column: 27, scope: !3648)
!3654 = !DILocation(line: 1758, column: 17, scope: !3648)
!3655 = !DILocation(line: 1760, column: 30, scope: !3648)
!3656 = !DILocation(line: 1760, column: 36, scope: !3648)
!3657 = !DILocation(line: 1760, column: 34, scope: !3648)
!3658 = !DILocation(line: 1760, column: 43, scope: !3648)
!3659 = !DILocation(line: 1760, column: 42, scope: !3648)
!3660 = !DILocation(line: 1760, column: 18, scope: !3648)
!3661 = !DILocation(line: 1760, column: 27, scope: !3648)
!3662 = !DILocation(line: 1761, column: 13, scope: !548)
!3663 = !DILocation(line: 1762, column: 9, scope: !546)
!3664 = !DILocation(line: 1763, column: 5, scope: !536)
!3665 = !DILocation(line: 1764, column: 1, scope: !519)
!3666 = !DILocation(line: 1663, column: 23, scope: !684)
!3667 = !DILocation(line: 1663, column: 35, scope: !684)
!3668 = !DILocation(line: 1663, column: 44, scope: !684)
!3669 = !DILocation(line: 1663, column: 57, scope: !684)
!3670 = !DILocation(line: 1665, column: 9, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !684, file: !13, line: 1665, column: 9)
!3672 = !DILocation(line: 1665, column: 14, scope: !3671)
!3673 = !DILocation(line: 1665, column: 9, scope: !684)
!3674 = !DILocation(line: 1667, column: 41, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3671, file: !13, line: 1665, column: 39)
!3676 = !DILocation(line: 1667, column: 51, scope: !3675)
!3677 = !DILocation(line: 1667, column: 44, scope: !3675)
!3678 = !DILocation(line: 1667, column: 55, scope: !3675)
!3679 = !DILocation(line: 1667, column: 61, scope: !3675)
!3680 = !DILocation(line: 1667, column: 59, scope: !3675)
!3681 = !DILocation(line: 1667, column: 25, scope: !3675)
!3682 = !DILocation(line: 1667, column: 9, scope: !3675)
!3683 = !DILocation(line: 1669, column: 5, scope: !684)
!3684 = !DILocation(line: 1670, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !13, line: 1669, column: 14)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !13, line: 1669, column: 5)
!3687 = distinct !DILexicalBlock(scope: !684, file: !13, line: 1669, column: 5)
!3688 = !DILocation(line: 1670, column: 29, scope: !3689)
!3689 = !DILexicalBlockFile(scope: !3690, file: !13, discriminator: 10)
!3690 = !DILexicalBlockFile(scope: !3685, file: !13, discriminator: 1)
!3691 = !DILocation(line: 1670, column: 35, scope: !3685)
!3692 = !DILocation(line: 1670, column: 28, scope: !3685)
!3693 = !DILocation(line: 1670, column: 80, scope: !3694)
!3694 = !DILexicalBlockFile(scope: !3685, file: !13, discriminator: 2)
!3695 = !DILocation(line: 1670, column: 61, scope: !3685)
!3696 = !DILocation(line: 1670, column: 93, scope: !3697)
!3697 = !DILexicalBlockFile(scope: !3685, file: !13, discriminator: 3)
!3698 = !DILocation(line: 1670, column: 99, scope: !3685)
!3699 = !DILocation(line: 1670, column: 92, scope: !3685)
!3700 = !DILocation(line: 1670, column: 144, scope: !3701)
!3701 = !DILexicalBlockFile(scope: !3685, file: !13, discriminator: 5)
!3702 = !DILocation(line: 1670, column: 126, scope: !3685)
!3703 = !DILocation(line: 1670, column: 125, scope: !3685)
!3704 = !DILocation(line: 1670, column: 174, scope: !3705)
!3705 = !DILexicalBlockFile(scope: !3685, file: !13, discriminator: 6)
!3706 = !DILocation(line: 1670, column: 156, scope: !3685)
!3707 = !DILocation(line: 1670, column: 155, scope: !3685)
!3708 = !DILocation(line: 1670, column: 28, scope: !3709)
!3709 = !DILexicalBlockFile(scope: !3710, file: !13, discriminator: 8)
!3710 = !DILexicalBlockFile(scope: !3685, file: !13, discriminator: 7)
!3711 = !DILocation(line: 1670, column: 190, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !3713, file: !13, discriminator: 9)
!3713 = !DILexicalBlockFile(scope: !3685, file: !13, discriminator: 4)
!3714 = !DILocation(line: 1670, column: 188, scope: !3685)
!3715 = !DILocation(line: 1671, column: 18, scope: !3685)
!3716 = !DILocation(line: 1671, column: 15, scope: !3685)
!3717 = !DILocation(line: 1672, column: 26, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3685, file: !13, line: 1672, column: 13)
!3719 = !DILocation(line: 1672, column: 32, scope: !3718)
!3720 = !DILocation(line: 1672, column: 25, scope: !3718)
!3721 = !DILocation(line: 1672, column: 77, scope: !3722)
!3722 = !DILexicalBlockFile(scope: !3718, file: !13, discriminator: 1)
!3723 = !DILocation(line: 1672, column: 58, scope: !3718)
!3724 = !DILocation(line: 1672, column: 90, scope: !3725)
!3725 = !DILexicalBlockFile(scope: !3718, file: !13, discriminator: 2)
!3726 = !DILocation(line: 1672, column: 96, scope: !3718)
!3727 = !DILocation(line: 1672, column: 89, scope: !3718)
!3728 = !DILocation(line: 1672, column: 141, scope: !3729)
!3729 = !DILexicalBlockFile(scope: !3718, file: !13, discriminator: 4)
!3730 = !DILocation(line: 1672, column: 123, scope: !3718)
!3731 = !DILocation(line: 1672, column: 122, scope: !3718)
!3732 = !DILocation(line: 1672, column: 171, scope: !3733)
!3733 = !DILexicalBlockFile(scope: !3718, file: !13, discriminator: 5)
!3734 = !DILocation(line: 1672, column: 153, scope: !3718)
!3735 = !DILocation(line: 1672, column: 152, scope: !3718)
!3736 = !DILocation(line: 1672, column: 25, scope: !3737)
!3737 = !DILexicalBlockFile(scope: !3738, file: !13, discriminator: 7)
!3738 = !DILexicalBlockFile(scope: !3718, file: !13, discriminator: 6)
!3739 = !DILocation(line: 1672, column: 188, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !3741, file: !13, discriminator: 8)
!3741 = !DILexicalBlockFile(scope: !3718, file: !13, discriminator: 3)
!3742 = !DILocation(line: 1672, column: 185, scope: !3718)
!3743 = !DILocation(line: 1672, column: 13, scope: !3685)
!3744 = !DILocation(line: 1673, column: 20, scope: !3718)
!3745 = !DILocation(line: 1673, column: 13, scope: !3718)
!3746 = !DILocation(line: 1674, column: 13, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3685, file: !13, line: 1674, column: 13)
!3748 = !DILocation(line: 1674, column: 18, scope: !3747)
!3749 = !DILocation(line: 1674, column: 15, scope: !3747)
!3750 = !DILocation(line: 1674, column: 13, scope: !3685)
!3751 = !DILocation(line: 1675, column: 13, scope: !3747)
!3752 = !DILocation(line: 1676, column: 14, scope: !3685)
!3753 = !DILocation(line: 1676, column: 11, scope: !3685)
!3754 = !DILocation(line: 1669, column: 5, scope: !3686)
!3755 = !DILocation(line: 1678, column: 1, scope: !684)
!3756 = !DILocation(line: 1150, column: 31, scope: !692)
!3757 = !DILocation(line: 1152, column: 5, scope: !692)
!3758 = !DILocation(line: 1152, column: 11, scope: !692)
!3759 = !DILocation(line: 1152, column: 22, scope: !692)
!3760 = !{!3761, !1878, i64 96}
!3761 = !{!"", !1899, i64 0, !1884, i64 16, !1884, i64 20, !1900, i64 24, !1877, i64 32, !1877, i64 40, !1877, i64 48, !1877, i64 56, !1877, i64 64, !1877, i64 72, !1877, i64 80, !1878, i64 88, !1878, i64 89, !1878, i64 90, !1878, i64 91, !1878, i64 92, !1878, i64 93, !1878, i64 94, !1878, i64 95, !1878, i64 96, !1877, i64 104, !1878, i64 112, !1877, i64 120, !1900, i64 128, !1877, i64 136, !1900, i64 144, !1877, i64 152, !3762, i64 160, !1877, i64 168, !1877, i64 176, !1877, i64 184}
!3762 = !{!"double", !1878, i64 0}
!3763 = !DILocation(line: 1153, column: 41, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1153, column: 9)
!3765 = !DILocation(line: 1153, column: 28, scope: !3764)
!3766 = !DILocation(line: 1153, column: 9, scope: !3764)
!3767 = !DILocation(line: 1153, column: 47, scope: !3764)
!3768 = !DILocation(line: 1153, column: 9, scope: !692)
!3769 = !DILocation(line: 1154, column: 9, scope: !3764)
!3770 = !DILocation(line: 1155, column: 26, scope: !692)
!3771 = !DILocation(line: 1155, column: 5, scope: !692)
!3772 = !DILocation(line: 1156, column: 5, scope: !692)
!3773 = !DILocation(line: 1156, column: 10, scope: !3774)
!3774 = !DILexicalBlockFile(scope: !734, file: !13, discriminator: 1)
!3775 = !DILocation(line: 1156, column: 21, scope: !734)
!3776 = !DILocation(line: 1156, column: 40, scope: !734)
!3777 = !DILocation(line: 1156, column: 26, scope: !734)
!3778 = !DILocation(line: 1156, column: 45, scope: !734)
!3779 = !DILocation(line: 1156, column: 64, scope: !734)
!3780 = !DILocation(line: 1156, column: 89, scope: !3781)
!3781 = !DILexicalBlockFile(scope: !3782, file: !13, discriminator: 2)
!3782 = distinct !DILexicalBlock(scope: !734, file: !13, line: 1156, column: 67)
!3783 = !DILocation(line: 1156, column: 93, scope: !3782)
!3784 = !DILocation(line: 1156, column: 96, scope: !3782)
!3785 = !{!3786, !1900, i64 16}
!3786 = !{!"", !1877, i64 0, !1877, i64 8, !1900, i64 16}
!3787 = !DILocation(line: 1156, column: 104, scope: !3782)
!3788 = !DILocation(line: 1156, column: 131, scope: !3782)
!3789 = !DILocation(line: 1156, column: 70, scope: !3782)
!3790 = !DILocation(line: 1156, column: 74, scope: !3782)
!3791 = !DILocation(line: 1156, column: 77, scope: !3782)
!3792 = !DILocation(line: 1156, column: 85, scope: !3782)
!3793 = !DILocation(line: 1156, column: 160, scope: !3782)
!3794 = !DILocation(line: 1156, column: 160, scope: !3795)
!3795 = !DILexicalBlockFile(scope: !3782, file: !13, discriminator: 3)
!3796 = !DILocation(line: 1156, column: 201, scope: !3797)
!3797 = !DILexicalBlockFile(scope: !734, file: !13, discriminator: 4)
!3798 = !DILocation(line: 1156, column: 204, scope: !734)
!3799 = !DILocation(line: 1156, column: 207, scope: !734)
!3800 = !{!3786, !1877, i64 0}
!3801 = !DILocation(line: 1156, column: 173, scope: !734)
!3802 = !DILocation(line: 1156, column: 176, scope: !734)
!3803 = !DILocation(line: 1156, column: 179, scope: !734)
!3804 = !{!3786, !1877, i64 8}
!3805 = !DILocation(line: 1156, column: 188, scope: !734)
!3806 = !DILocation(line: 1156, column: 191, scope: !734)
!3807 = !DILocation(line: 1156, column: 199, scope: !734)
!3808 = !DILocation(line: 1156, column: 244, scope: !734)
!3809 = !DILocation(line: 1156, column: 247, scope: !734)
!3810 = !DILocation(line: 1156, column: 250, scope: !734)
!3811 = !DILocation(line: 1156, column: 216, scope: !734)
!3812 = !DILocation(line: 1156, column: 219, scope: !734)
!3813 = !DILocation(line: 1156, column: 222, scope: !734)
!3814 = !DILocation(line: 1156, column: 231, scope: !734)
!3815 = !DILocation(line: 1156, column: 234, scope: !734)
!3816 = !DILocation(line: 1156, column: 242, scope: !734)
!3817 = !DILocation(line: 1156, column: 259, scope: !734)
!3818 = !DILocation(line: 1156, column: 262, scope: !734)
!3819 = !DILocation(line: 1156, column: 265, scope: !734)
!3820 = !DILocation(line: 1156, column: 273, scope: !734)
!3821 = !DILocation(line: 1156, column: 287, scope: !692)
!3822 = !DILocation(line: 1156, column: 287, scope: !734)
!3823 = !DILocation(line: 1157, column: 9, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !692, file: !13, line: 1157, column: 9)
!3825 = !DILocation(line: 1157, column: 15, scope: !3824)
!3826 = !{!3761, !1877, i64 176}
!3827 = !DILocation(line: 1157, column: 27, scope: !3824)
!3828 = !DILocation(line: 1157, column: 9, scope: !692)
!3829 = !DILocation(line: 1158, column: 44, scope: !3824)
!3830 = !DILocation(line: 1158, column: 32, scope: !3824)
!3831 = !DILocation(line: 1158, column: 9, scope: !3824)
!3832 = !DILocation(line: 1159, column: 5, scope: !692)
!3833 = !DILocation(line: 1159, column: 10, scope: !3834)
!3834 = !DILexicalBlockFile(scope: !736, file: !13, discriminator: 1)
!3835 = !DILocation(line: 1159, column: 20, scope: !736)
!3836 = !DILocation(line: 1159, column: 43, scope: !736)
!3837 = !DILocation(line: 1159, column: 49, scope: !736)
!3838 = !{!3761, !1877, i64 184}
!3839 = !DILocation(line: 1159, column: 60, scope: !740)
!3840 = !DILocation(line: 1159, column: 68, scope: !740)
!3841 = !DILocation(line: 1159, column: 60, scope: !736)
!3842 = !DILocation(line: 1159, column: 86, scope: !3843)
!3843 = !DILexicalBlockFile(scope: !739, file: !13, discriminator: 2)
!3844 = !DILocation(line: 1159, column: 92, scope: !739)
!3845 = !DILocation(line: 1159, column: 98, scope: !739)
!3846 = !DILocation(line: 1159, column: 112, scope: !739)
!3847 = !DILocation(line: 1159, column: 117, scope: !3848)
!3848 = !DILexicalBlockFile(scope: !738, file: !13, discriminator: 4)
!3849 = !DILocation(line: 1159, column: 127, scope: !738)
!3850 = !DILocation(line: 1159, column: 157, scope: !738)
!3851 = !DILocation(line: 1159, column: 175, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !738, file: !13, line: 1159, column: 172)
!3853 = !DILocation(line: 1159, column: 192, scope: !3852)
!3854 = !DILocation(line: 1159, column: 172, scope: !3852)
!3855 = !DILocation(line: 1159, column: 202, scope: !3852)
!3856 = !DILocation(line: 1159, column: 172, scope: !738)
!3857 = !DILocation(line: 1159, column: 172, scope: !3858)
!3858 = !DILexicalBlockFile(scope: !738, file: !13, discriminator: 5)
!3859 = !DILocation(line: 1159, column: 233, scope: !3860)
!3860 = !DILexicalBlockFile(scope: !3852, file: !13, discriminator: 6)
!3861 = !DILocation(line: 1159, column: 251, scope: !3852)
!3862 = !DILocation(line: 1159, column: 261, scope: !3852)
!3863 = !DILocation(line: 1159, column: 286, scope: !3852)
!3864 = !DILocation(line: 1159, column: 217, scope: !3852)
!3865 = !DILocation(line: 1159, column: 305, scope: !3866)
!3866 = !DILexicalBlockFile(scope: !739, file: !13, discriminator: 7)
!3867 = !DILocation(line: 1159, column: 305, scope: !738)
!3868 = !DILocation(line: 1159, column: 305, scope: !3869)
!3869 = !DILexicalBlockFile(scope: !738, file: !13, discriminator: 8)
!3870 = !DILocation(line: 1159, column: 318, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !739, file: !13, discriminator: 9)
!3872 = !DILocation(line: 1159, column: 320, scope: !3873)
!3873 = !DILexicalBlockFile(scope: !3874, file: !13, discriminator: 10)
!3874 = !DILexicalBlockFile(scope: !692, file: !13, discriminator: 3)
!3875 = !DILocation(line: 1159, column: 320, scope: !736)
!3876 = !DILocation(line: 1160, column: 19, scope: !692)
!3877 = !DILocation(line: 1160, column: 7, scope: !692)
!3878 = !DILocation(line: 1160, column: 27, scope: !692)
!3879 = !DILocation(line: 1160, column: 37, scope: !692)
!3880 = !DILocation(line: 1160, column: 57, scope: !692)
!3881 = !DILocation(line: 1160, column: 45, scope: !692)
!3882 = !DILocation(line: 1160, column: 5, scope: !692)
!3883 = !DILocation(line: 1161, column: 1, scope: !692)
!3884 = !DILocation(line: 1161, column: 1, scope: !3885)
!3885 = !DILexicalBlockFile(scope: !692, file: !13, discriminator: 1)
!3886 = !DILocation(line: 2469, column: 28, scope: !806)
!3887 = !DILocation(line: 2471, column: 5, scope: !806)
!3888 = !DILocation(line: 2471, column: 15, scope: !806)
!3889 = !DILocation(line: 2471, column: 25, scope: !806)
!3890 = !DILocation(line: 2471, column: 35, scope: !806)
!3891 = !DILocation(line: 2471, column: 41, scope: !806)
!3892 = !DILocation(line: 2473, column: 9, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2473, column: 9)
!3894 = !DILocation(line: 2473, column: 15, scope: !3893)
!3895 = !{!3761, !1884, i64 16}
!3896 = !DILocation(line: 2473, column: 18, scope: !3893)
!3897 = !DILocation(line: 2473, column: 9, scope: !806)
!3898 = !DILocation(line: 2473, column: 30, scope: !3899)
!3899 = !DILexicalBlockFile(scope: !3900, file: !13, discriminator: 1)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !13, line: 2473, column: 30)
!3901 = distinct !DILexicalBlock(scope: !3893, file: !13, line: 2473, column: 24)
!3902 = !DILocation(line: 2473, column: 36, scope: !3900)
!3903 = !{!3761, !1884, i64 20}
!3904 = !DILocation(line: 2473, column: 30, scope: !3900)
!3905 = !DILocation(line: 2473, column: 30, scope: !3901)
!3906 = !DILocation(line: 2473, column: 64, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3908, file: !13, discriminator: 2)
!3908 = distinct !DILexicalBlock(scope: !3900, file: !13, line: 2473, column: 46)
!3909 = !DILocation(line: 2473, column: 48, scope: !3908)
!3910 = !DILocation(line: 2473, column: 122, scope: !3908)
!3911 = !DILocation(line: 2473, column: 147, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3913, file: !13, discriminator: 3)
!3913 = distinct !DILexicalBlock(scope: !3900, file: !13, line: 2473, column: 129)
!3914 = !DILocation(line: 2473, column: 131, scope: !3913)
!3915 = !DILocation(line: 2473, column: 209, scope: !3916)
!3916 = !DILexicalBlockFile(scope: !3901, file: !13, discriminator: 4)
!3917 = !DILocation(line: 2473, column: 209, scope: !3901)
!3918 = !DILocation(line: 2475, column: 11, scope: !806)
!3919 = !DILocation(line: 2475, column: 9, scope: !806)
!3920 = !DILocation(line: 2476, column: 9, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !806, file: !13, line: 2476, column: 9)
!3922 = !DILocation(line: 2476, column: 13, scope: !3921)
!3923 = !DILocation(line: 2476, column: 9, scope: !806)
!3924 = !DILocation(line: 2477, column: 9, scope: !3921)
!3925 = !DILocation(line: 2478, column: 48, scope: !806)
!3926 = !DILocation(line: 2478, column: 35, scope: !806)
!3927 = !DILocation(line: 2478, column: 15, scope: !806)
!3928 = !DILocation(line: 2478, column: 13, scope: !806)
!3929 = !DILocation(line: 2479, column: 9, scope: !818)
!3930 = !DILocation(line: 2479, column: 17, scope: !818)
!3931 = !DILocation(line: 2479, column: 9, scope: !806)
!3932 = !DILocation(line: 2480, column: 36, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !13, line: 2480, column: 13)
!3934 = distinct !DILexicalBlock(scope: !818, file: !13, line: 2479, column: 32)
!3935 = !DILocation(line: 2480, column: 13, scope: !3933)
!3936 = !DILocation(line: 2480, column: 13, scope: !3934)
!3937 = !DILocation(line: 2481, column: 13, scope: !3933)
!3938 = !DILocation(line: 2483, column: 13, scope: !3933)
!3939 = !DILocation(line: 2484, column: 5, scope: !3934)
!3940 = !DILocation(line: 2486, column: 46, scope: !817)
!3941 = !DILocation(line: 2486, column: 13, scope: !817)
!3942 = !DILocation(line: 2486, column: 11, scope: !817)
!3943 = !DILocation(line: 2487, column: 9, scope: !817)
!3944 = !DILocation(line: 2487, column: 14, scope: !3945)
!3945 = !DILexicalBlockFile(scope: !816, file: !13, discriminator: 1)
!3946 = !DILocation(line: 2487, column: 24, scope: !816)
!3947 = !DILocation(line: 2487, column: 54, scope: !816)
!3948 = !DILocation(line: 2487, column: 72, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !816, file: !13, line: 2487, column: 69)
!3950 = !DILocation(line: 2487, column: 89, scope: !3949)
!3951 = !DILocation(line: 2487, column: 69, scope: !3949)
!3952 = !DILocation(line: 2487, column: 99, scope: !3949)
!3953 = !DILocation(line: 2487, column: 69, scope: !816)
!3954 = !DILocation(line: 2487, column: 69, scope: !3955)
!3955 = !DILexicalBlockFile(scope: !816, file: !13, discriminator: 2)
!3956 = !DILocation(line: 2487, column: 130, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !3949, file: !13, discriminator: 3)
!3958 = !DILocation(line: 2487, column: 148, scope: !3949)
!3959 = !DILocation(line: 2487, column: 158, scope: !3949)
!3960 = !DILocation(line: 2487, column: 183, scope: !3949)
!3961 = !DILocation(line: 2487, column: 114, scope: !3949)
!3962 = !DILocation(line: 2487, column: 202, scope: !3963)
!3963 = !DILexicalBlockFile(scope: !817, file: !13, discriminator: 4)
!3964 = !DILocation(line: 2487, column: 202, scope: !816)
!3965 = !DILocation(line: 2487, column: 202, scope: !3966)
!3966 = !DILexicalBlockFile(scope: !816, file: !13, discriminator: 5)
!3967 = !DILocation(line: 2488, column: 13, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !817, file: !13, line: 2488, column: 13)
!3969 = !DILocation(line: 2488, column: 15, scope: !3968)
!3970 = !DILocation(line: 2488, column: 13, scope: !817)
!3971 = !DILocation(line: 2489, column: 13, scope: !3968)
!3972 = !DILocation(line: 2490, column: 38, scope: !817)
!3973 = !DILocation(line: 2490, column: 9, scope: !817)
!3974 = !DILocation(line: 2491, column: 13, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !817, file: !13, line: 2491, column: 13)
!3976 = !DILocation(line: 2491, column: 17, scope: !3975)
!3977 = !DILocation(line: 2491, column: 13, scope: !817)
!3978 = !DILocation(line: 2492, column: 13, scope: !3975)
!3979 = !DILocation(line: 2494, column: 48, scope: !806)
!3980 = !DILocation(line: 2494, column: 35, scope: !806)
!3981 = !DILocation(line: 2494, column: 15, scope: !806)
!3982 = !DILocation(line: 2494, column: 13, scope: !806)
!3983 = !DILocation(line: 2495, column: 9, scope: !822)
!3984 = !DILocation(line: 2495, column: 17, scope: !822)
!3985 = !DILocation(line: 2495, column: 9, scope: !806)
!3986 = !DILocation(line: 2496, column: 36, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !13, line: 2496, column: 13)
!3988 = distinct !DILexicalBlock(scope: !822, file: !13, line: 2495, column: 32)
!3989 = !DILocation(line: 2496, column: 13, scope: !3987)
!3990 = !DILocation(line: 2496, column: 13, scope: !3988)
!3991 = !DILocation(line: 2497, column: 13, scope: !3987)
!3992 = !DILocation(line: 2499, column: 13, scope: !3987)
!3993 = !DILocation(line: 2500, column: 5, scope: !3988)
!3994 = !DILocation(line: 2502, column: 46, scope: !821)
!3995 = !DILocation(line: 2502, column: 13, scope: !821)
!3996 = !DILocation(line: 2502, column: 11, scope: !821)
!3997 = !DILocation(line: 2503, column: 9, scope: !821)
!3998 = !DILocation(line: 2503, column: 14, scope: !3999)
!3999 = !DILexicalBlockFile(scope: !820, file: !13, discriminator: 1)
!4000 = !DILocation(line: 2503, column: 24, scope: !820)
!4001 = !DILocation(line: 2503, column: 54, scope: !820)
!4002 = !DILocation(line: 2503, column: 72, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !820, file: !13, line: 2503, column: 69)
!4004 = !DILocation(line: 2503, column: 89, scope: !4003)
!4005 = !DILocation(line: 2503, column: 69, scope: !4003)
!4006 = !DILocation(line: 2503, column: 99, scope: !4003)
!4007 = !DILocation(line: 2503, column: 69, scope: !820)
!4008 = !DILocation(line: 2503, column: 69, scope: !4009)
!4009 = !DILexicalBlockFile(scope: !820, file: !13, discriminator: 2)
!4010 = !DILocation(line: 2503, column: 130, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !4003, file: !13, discriminator: 3)
!4012 = !DILocation(line: 2503, column: 148, scope: !4003)
!4013 = !DILocation(line: 2503, column: 158, scope: !4003)
!4014 = !DILocation(line: 2503, column: 183, scope: !4003)
!4015 = !DILocation(line: 2503, column: 114, scope: !4003)
!4016 = !DILocation(line: 2503, column: 202, scope: !4017)
!4017 = !DILexicalBlockFile(scope: !821, file: !13, discriminator: 4)
!4018 = !DILocation(line: 2503, column: 202, scope: !820)
!4019 = !DILocation(line: 2503, column: 202, scope: !4020)
!4020 = !DILexicalBlockFile(scope: !820, file: !13, discriminator: 5)
!4021 = !DILocation(line: 2504, column: 13, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !821, file: !13, line: 2504, column: 13)
!4023 = !DILocation(line: 2504, column: 15, scope: !4022)
!4024 = !DILocation(line: 2504, column: 13, scope: !821)
!4025 = !DILocation(line: 2505, column: 13, scope: !4022)
!4026 = !DILocation(line: 2506, column: 38, scope: !821)
!4027 = !DILocation(line: 2506, column: 9, scope: !821)
!4028 = !DILocation(line: 2507, column: 13, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !821, file: !13, line: 2507, column: 13)
!4030 = !DILocation(line: 2507, column: 17, scope: !4029)
!4031 = !DILocation(line: 2507, column: 13, scope: !821)
!4032 = !DILocation(line: 2508, column: 13, scope: !4029)
!4033 = !DILocation(line: 2511, column: 30, scope: !806)
!4034 = !DILocation(line: 2511, column: 35, scope: !806)
!4035 = !DILocation(line: 2511, column: 41, scope: !806)
!4036 = !{!3761, !1877, i64 40}
!4037 = !DILocation(line: 2510, column: 9, scope: !806)
!4038 = !DILocation(line: 2510, column: 7, scope: !806)
!4039 = !DILocation(line: 2512, column: 5, scope: !806)
!4040 = !DILocation(line: 2512, column: 10, scope: !4041)
!4041 = !DILexicalBlockFile(scope: !824, file: !13, discriminator: 1)
!4042 = !DILocation(line: 2512, column: 20, scope: !824)
!4043 = !DILocation(line: 2512, column: 50, scope: !824)
!4044 = !DILocation(line: 2512, column: 64, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !824, file: !13, line: 2512, column: 61)
!4046 = !DILocation(line: 2512, column: 81, scope: !4045)
!4047 = !DILocation(line: 2512, column: 61, scope: !4045)
!4048 = !DILocation(line: 2512, column: 91, scope: !4045)
!4049 = !DILocation(line: 2512, column: 61, scope: !824)
!4050 = !DILocation(line: 2512, column: 61, scope: !4051)
!4051 = !DILexicalBlockFile(scope: !824, file: !13, discriminator: 2)
!4052 = !DILocation(line: 2512, column: 122, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !4045, file: !13, discriminator: 3)
!4054 = !DILocation(line: 2512, column: 140, scope: !4045)
!4055 = !DILocation(line: 2512, column: 150, scope: !4045)
!4056 = !DILocation(line: 2512, column: 175, scope: !4045)
!4057 = !DILocation(line: 2512, column: 106, scope: !4045)
!4058 = !DILocation(line: 2512, column: 194, scope: !4059)
!4059 = !DILexicalBlockFile(scope: !806, file: !13, discriminator: 4)
!4060 = !DILocation(line: 2512, column: 194, scope: !824)
!4061 = !DILocation(line: 2512, column: 194, scope: !4062)
!4062 = !DILexicalBlockFile(scope: !824, file: !13, discriminator: 5)
!4063 = !DILocation(line: 2513, column: 12, scope: !806)
!4064 = !DILocation(line: 2513, column: 5, scope: !806)
!4065 = !DILocation(line: 2515, column: 5, scope: !806)
!4066 = !DILocation(line: 2515, column: 10, scope: !4067)
!4067 = !DILexicalBlockFile(scope: !826, file: !13, discriminator: 1)
!4068 = !DILocation(line: 2515, column: 20, scope: !826)
!4069 = !DILocation(line: 2515, column: 51, scope: !826)
!4070 = !DILocation(line: 2515, column: 61, scope: !829)
!4071 = !DILocation(line: 2515, column: 77, scope: !829)
!4072 = !DILocation(line: 2515, column: 61, scope: !826)
!4073 = !DILocation(line: 2515, column: 92, scope: !4074)
!4074 = !DILexicalBlockFile(scope: !829, file: !13, discriminator: 2)
!4075 = !DILocation(line: 2515, column: 97, scope: !4076)
!4076 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 4)
!4077 = !DILocation(line: 2515, column: 107, scope: !828)
!4078 = !DILocation(line: 2515, column: 137, scope: !828)
!4079 = !DILocation(line: 2515, column: 163, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !828, file: !13, line: 2515, column: 160)
!4081 = !DILocation(line: 2515, column: 180, scope: !4080)
!4082 = !DILocation(line: 2515, column: 160, scope: !4080)
!4083 = !DILocation(line: 2515, column: 190, scope: !4080)
!4084 = !DILocation(line: 2515, column: 160, scope: !828)
!4085 = !DILocation(line: 2515, column: 160, scope: !4086)
!4086 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 5)
!4087 = !DILocation(line: 2515, column: 221, scope: !4088)
!4088 = !DILexicalBlockFile(scope: !4080, file: !13, discriminator: 6)
!4089 = !DILocation(line: 2515, column: 239, scope: !4080)
!4090 = !DILocation(line: 2515, column: 249, scope: !4080)
!4091 = !DILocation(line: 2515, column: 274, scope: !4080)
!4092 = !DILocation(line: 2515, column: 205, scope: !4080)
!4093 = !DILocation(line: 2515, column: 293, scope: !4094)
!4094 = !DILexicalBlockFile(scope: !829, file: !13, discriminator: 7)
!4095 = !DILocation(line: 2515, column: 293, scope: !828)
!4096 = !DILocation(line: 2515, column: 293, scope: !4097)
!4097 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 8)
!4098 = !DILocation(line: 2515, column: 293, scope: !4099)
!4099 = !DILexicalBlockFile(scope: !828, file: !13, discriminator: 9)
!4100 = !DILocation(line: 2515, column: 306, scope: !4101)
!4101 = !DILexicalBlockFile(scope: !4102, file: !13, discriminator: 10)
!4102 = !DILexicalBlockFile(scope: !806, file: !13, discriminator: 3)
!4103 = !DILocation(line: 2515, column: 306, scope: !826)
!4104 = !DILocation(line: 2515, column: 306, scope: !4105)
!4105 = !DILexicalBlockFile(scope: !826, file: !13, discriminator: 11)
!4106 = !DILocation(line: 2516, column: 5, scope: !806)
!4107 = !DILocation(line: 2517, column: 1, scope: !806)
!4108 = !DILocation(line: 1164, column: 32, scope: !830)
!4109 = !DILocation(line: 1164, column: 48, scope: !830)
!4110 = !DILocation(line: 1164, column: 61, scope: !830)
!4111 = !DILocation(line: 1166, column: 5, scope: !830)
!4112 = !DILocation(line: 1166, column: 14, scope: !4113)
!4113 = !DILexicalBlockFile(scope: !839, file: !13, discriminator: 1)
!4114 = !DILocation(line: 1166, column: 20, scope: !839)
!4115 = !{!3761, !1877, i64 32}
!4116 = !DILocation(line: 1166, column: 14, scope: !839)
!4117 = !DILocation(line: 1166, column: 14, scope: !840)
!4118 = !DILocation(line: 1166, column: 30, scope: !4119)
!4119 = !DILexicalBlockFile(scope: !838, file: !13, discriminator: 2)
!4120 = !DILocation(line: 1166, column: 34, scope: !838)
!4121 = !DILocation(line: 1166, column: 41, scope: !838)
!4122 = !DILocation(line: 1166, column: 60, scope: !838)
!4123 = !DILocation(line: 1166, column: 66, scope: !838)
!4124 = !DILocation(line: 1166, column: 75, scope: !838)
!4125 = !DILocation(line: 1166, column: 85, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !838, file: !13, line: 1166, column: 85)
!4127 = !DILocation(line: 1166, column: 85, scope: !838)
!4128 = !DILocation(line: 1166, column: 98, scope: !4129)
!4129 = !DILexicalBlockFile(scope: !4126, file: !13, discriminator: 4)
!4130 = !DILocation(line: 1166, column: 91, scope: !4126)
!4131 = !DILocation(line: 1166, column: 104, scope: !4132)
!4132 = !DILexicalBlockFile(scope: !839, file: !13, discriminator: 5)
!4133 = !DILocation(line: 1166, column: 104, scope: !4134)
!4134 = !DILexicalBlockFile(scope: !4135, file: !13, discriminator: 7)
!4135 = !DILexicalBlockFile(scope: !839, file: !13, discriminator: 6)
!4136 = !DILocation(line: 1166, column: 104, scope: !838)
!4137 = !DILocation(line: 1166, column: 106, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !4139, file: !13, discriminator: 8)
!4139 = !DILexicalBlockFile(scope: !840, file: !13, discriminator: 3)
!4140 = !DILocation(line: 1167, column: 5, scope: !830)
!4141 = !DILocation(line: 1167, column: 14, scope: !4142)
!4142 = !DILexicalBlockFile(scope: !843, file: !13, discriminator: 1)
!4143 = !DILocation(line: 1167, column: 20, scope: !843)
!4144 = !DILocation(line: 1167, column: 14, scope: !843)
!4145 = !DILocation(line: 1167, column: 14, scope: !844)
!4146 = !DILocation(line: 1167, column: 32, scope: !4147)
!4147 = !DILexicalBlockFile(scope: !842, file: !13, discriminator: 2)
!4148 = !DILocation(line: 1167, column: 36, scope: !842)
!4149 = !DILocation(line: 1167, column: 43, scope: !842)
!4150 = !DILocation(line: 1167, column: 62, scope: !842)
!4151 = !DILocation(line: 1167, column: 68, scope: !842)
!4152 = !DILocation(line: 1167, column: 79, scope: !842)
!4153 = !DILocation(line: 1167, column: 89, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !842, file: !13, line: 1167, column: 89)
!4155 = !DILocation(line: 1167, column: 89, scope: !842)
!4156 = !DILocation(line: 1167, column: 102, scope: !4157)
!4157 = !DILexicalBlockFile(scope: !4154, file: !13, discriminator: 4)
!4158 = !DILocation(line: 1167, column: 95, scope: !4154)
!4159 = !DILocation(line: 1167, column: 108, scope: !4160)
!4160 = !DILexicalBlockFile(scope: !843, file: !13, discriminator: 5)
!4161 = !DILocation(line: 1167, column: 108, scope: !4162)
!4162 = !DILexicalBlockFile(scope: !4163, file: !13, discriminator: 7)
!4163 = !DILexicalBlockFile(scope: !843, file: !13, discriminator: 6)
!4164 = !DILocation(line: 1167, column: 108, scope: !842)
!4165 = !DILocation(line: 1167, column: 110, scope: !4166)
!4166 = !DILexicalBlockFile(scope: !4167, file: !13, discriminator: 8)
!4167 = !DILexicalBlockFile(scope: !844, file: !13, discriminator: 3)
!4168 = !DILocation(line: 1168, column: 5, scope: !830)
!4169 = !DILocation(line: 1168, column: 14, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !847, file: !13, discriminator: 1)
!4171 = !DILocation(line: 1168, column: 20, scope: !847)
!4172 = !{!3761, !1877, i64 48}
!4173 = !DILocation(line: 1168, column: 14, scope: !847)
!4174 = !DILocation(line: 1168, column: 14, scope: !848)
!4175 = !DILocation(line: 1168, column: 31, scope: !4176)
!4176 = !DILexicalBlockFile(scope: !846, file: !13, discriminator: 2)
!4177 = !DILocation(line: 1168, column: 35, scope: !846)
!4178 = !DILocation(line: 1168, column: 42, scope: !846)
!4179 = !DILocation(line: 1168, column: 61, scope: !846)
!4180 = !DILocation(line: 1168, column: 67, scope: !846)
!4181 = !DILocation(line: 1168, column: 77, scope: !846)
!4182 = !DILocation(line: 1168, column: 87, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !846, file: !13, line: 1168, column: 87)
!4184 = !DILocation(line: 1168, column: 87, scope: !846)
!4185 = !DILocation(line: 1168, column: 100, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4183, file: !13, discriminator: 4)
!4187 = !DILocation(line: 1168, column: 93, scope: !4183)
!4188 = !DILocation(line: 1168, column: 106, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !847, file: !13, discriminator: 5)
!4190 = !DILocation(line: 1168, column: 106, scope: !4191)
!4191 = !DILexicalBlockFile(scope: !4192, file: !13, discriminator: 7)
!4192 = !DILexicalBlockFile(scope: !847, file: !13, discriminator: 6)
!4193 = !DILocation(line: 1168, column: 106, scope: !846)
!4194 = !DILocation(line: 1168, column: 108, scope: !4195)
!4195 = !DILexicalBlockFile(scope: !4196, file: !13, discriminator: 8)
!4196 = !DILexicalBlockFile(scope: !848, file: !13, discriminator: 3)
!4197 = !DILocation(line: 1169, column: 5, scope: !830)
!4198 = !DILocation(line: 1169, column: 14, scope: !4199)
!4199 = !DILexicalBlockFile(scope: !851, file: !13, discriminator: 1)
!4200 = !DILocation(line: 1169, column: 20, scope: !851)
!4201 = !{!3761, !1877, i64 56}
!4202 = !DILocation(line: 1169, column: 14, scope: !851)
!4203 = !DILocation(line: 1169, column: 14, scope: !852)
!4204 = !DILocation(line: 1169, column: 31, scope: !4205)
!4205 = !DILexicalBlockFile(scope: !850, file: !13, discriminator: 2)
!4206 = !DILocation(line: 1169, column: 35, scope: !850)
!4207 = !DILocation(line: 1169, column: 42, scope: !850)
!4208 = !DILocation(line: 1169, column: 61, scope: !850)
!4209 = !DILocation(line: 1169, column: 67, scope: !850)
!4210 = !DILocation(line: 1169, column: 77, scope: !850)
!4211 = !DILocation(line: 1169, column: 87, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !850, file: !13, line: 1169, column: 87)
!4213 = !DILocation(line: 1169, column: 87, scope: !850)
!4214 = !DILocation(line: 1169, column: 100, scope: !4215)
!4215 = !DILexicalBlockFile(scope: !4212, file: !13, discriminator: 4)
!4216 = !DILocation(line: 1169, column: 93, scope: !4212)
!4217 = !DILocation(line: 1169, column: 106, scope: !4218)
!4218 = !DILexicalBlockFile(scope: !851, file: !13, discriminator: 5)
!4219 = !DILocation(line: 1169, column: 106, scope: !4220)
!4220 = !DILexicalBlockFile(scope: !4221, file: !13, discriminator: 7)
!4221 = !DILexicalBlockFile(scope: !851, file: !13, discriminator: 6)
!4222 = !DILocation(line: 1169, column: 106, scope: !850)
!4223 = !DILocation(line: 1169, column: 108, scope: !4224)
!4224 = !DILexicalBlockFile(scope: !4225, file: !13, discriminator: 8)
!4225 = !DILexicalBlockFile(scope: !852, file: !13, discriminator: 3)
!4226 = !DILocation(line: 1170, column: 5, scope: !830)
!4227 = !DILocation(line: 1170, column: 14, scope: !4228)
!4228 = !DILexicalBlockFile(scope: !855, file: !13, discriminator: 1)
!4229 = !DILocation(line: 1170, column: 20, scope: !855)
!4230 = !{!3761, !1877, i64 64}
!4231 = !DILocation(line: 1170, column: 14, scope: !855)
!4232 = !DILocation(line: 1170, column: 14, scope: !856)
!4233 = !DILocation(line: 1170, column: 30, scope: !4234)
!4234 = !DILexicalBlockFile(scope: !854, file: !13, discriminator: 2)
!4235 = !DILocation(line: 1170, column: 34, scope: !854)
!4236 = !DILocation(line: 1170, column: 41, scope: !854)
!4237 = !DILocation(line: 1170, column: 60, scope: !854)
!4238 = !DILocation(line: 1170, column: 66, scope: !854)
!4239 = !DILocation(line: 1170, column: 75, scope: !854)
!4240 = !DILocation(line: 1170, column: 85, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !854, file: !13, line: 1170, column: 85)
!4242 = !DILocation(line: 1170, column: 85, scope: !854)
!4243 = !DILocation(line: 1170, column: 98, scope: !4244)
!4244 = !DILexicalBlockFile(scope: !4241, file: !13, discriminator: 4)
!4245 = !DILocation(line: 1170, column: 91, scope: !4241)
!4246 = !DILocation(line: 1170, column: 104, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !855, file: !13, discriminator: 5)
!4248 = !DILocation(line: 1170, column: 104, scope: !4249)
!4249 = !DILexicalBlockFile(scope: !4250, file: !13, discriminator: 7)
!4250 = !DILexicalBlockFile(scope: !855, file: !13, discriminator: 6)
!4251 = !DILocation(line: 1170, column: 104, scope: !854)
!4252 = !DILocation(line: 1170, column: 106, scope: !4253)
!4253 = !DILexicalBlockFile(scope: !4254, file: !13, discriminator: 8)
!4254 = !DILexicalBlockFile(scope: !856, file: !13, discriminator: 3)
!4255 = !DILocation(line: 1171, column: 5, scope: !830)
!4256 = !DILocation(line: 1171, column: 14, scope: !4257)
!4257 = !DILexicalBlockFile(scope: !859, file: !13, discriminator: 1)
!4258 = !DILocation(line: 1171, column: 20, scope: !859)
!4259 = !{!3761, !1877, i64 120}
!4260 = !DILocation(line: 1171, column: 14, scope: !859)
!4261 = !DILocation(line: 1171, column: 14, scope: !860)
!4262 = !DILocation(line: 1171, column: 37, scope: !4263)
!4263 = !DILexicalBlockFile(scope: !858, file: !13, discriminator: 2)
!4264 = !DILocation(line: 1171, column: 41, scope: !858)
!4265 = !DILocation(line: 1171, column: 48, scope: !858)
!4266 = !DILocation(line: 1171, column: 67, scope: !858)
!4267 = !DILocation(line: 1171, column: 73, scope: !858)
!4268 = !DILocation(line: 1171, column: 89, scope: !858)
!4269 = !DILocation(line: 1171, column: 99, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !858, file: !13, line: 1171, column: 99)
!4271 = !DILocation(line: 1171, column: 99, scope: !858)
!4272 = !DILocation(line: 1171, column: 112, scope: !4273)
!4273 = !DILexicalBlockFile(scope: !4270, file: !13, discriminator: 4)
!4274 = !DILocation(line: 1171, column: 105, scope: !4270)
!4275 = !DILocation(line: 1171, column: 118, scope: !4276)
!4276 = !DILexicalBlockFile(scope: !859, file: !13, discriminator: 5)
!4277 = !DILocation(line: 1171, column: 118, scope: !4278)
!4278 = !DILexicalBlockFile(scope: !4279, file: !13, discriminator: 7)
!4279 = !DILexicalBlockFile(scope: !859, file: !13, discriminator: 6)
!4280 = !DILocation(line: 1171, column: 118, scope: !858)
!4281 = !DILocation(line: 1171, column: 120, scope: !4282)
!4282 = !DILexicalBlockFile(scope: !4283, file: !13, discriminator: 8)
!4283 = !DILexicalBlockFile(scope: !860, file: !13, discriminator: 3)
!4284 = !DILocation(line: 1172, column: 5, scope: !830)
!4285 = !DILocation(line: 1172, column: 14, scope: !4286)
!4286 = !DILexicalBlockFile(scope: !863, file: !13, discriminator: 1)
!4287 = !DILocation(line: 1172, column: 20, scope: !863)
!4288 = !{!3761, !1877, i64 136}
!4289 = !DILocation(line: 1172, column: 14, scope: !863)
!4290 = !DILocation(line: 1172, column: 14, scope: !864)
!4291 = !DILocation(line: 1172, column: 37, scope: !4292)
!4292 = !DILexicalBlockFile(scope: !862, file: !13, discriminator: 2)
!4293 = !DILocation(line: 1172, column: 41, scope: !862)
!4294 = !DILocation(line: 1172, column: 48, scope: !862)
!4295 = !DILocation(line: 1172, column: 67, scope: !862)
!4296 = !DILocation(line: 1172, column: 73, scope: !862)
!4297 = !DILocation(line: 1172, column: 89, scope: !862)
!4298 = !DILocation(line: 1172, column: 99, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !862, file: !13, line: 1172, column: 99)
!4300 = !DILocation(line: 1172, column: 99, scope: !862)
!4301 = !DILocation(line: 1172, column: 112, scope: !4302)
!4302 = !DILexicalBlockFile(scope: !4299, file: !13, discriminator: 4)
!4303 = !DILocation(line: 1172, column: 105, scope: !4299)
!4304 = !DILocation(line: 1172, column: 118, scope: !4305)
!4305 = !DILexicalBlockFile(scope: !863, file: !13, discriminator: 5)
!4306 = !DILocation(line: 1172, column: 118, scope: !4307)
!4307 = !DILexicalBlockFile(scope: !4308, file: !13, discriminator: 7)
!4308 = !DILexicalBlockFile(scope: !863, file: !13, discriminator: 6)
!4309 = !DILocation(line: 1172, column: 118, scope: !862)
!4310 = !DILocation(line: 1172, column: 120, scope: !4311)
!4311 = !DILexicalBlockFile(scope: !4312, file: !13, discriminator: 8)
!4312 = !DILexicalBlockFile(scope: !864, file: !13, discriminator: 3)
!4313 = !DILocation(line: 1173, column: 5, scope: !830)
!4314 = !DILocation(line: 1173, column: 14, scope: !4315)
!4315 = !DILexicalBlockFile(scope: !867, file: !13, discriminator: 1)
!4316 = !DILocation(line: 1173, column: 20, scope: !867)
!4317 = !{!3761, !1877, i64 152}
!4318 = !DILocation(line: 1173, column: 14, scope: !867)
!4319 = !DILocation(line: 1173, column: 14, scope: !868)
!4320 = !DILocation(line: 1173, column: 32, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !866, file: !13, discriminator: 2)
!4322 = !DILocation(line: 1173, column: 36, scope: !866)
!4323 = !DILocation(line: 1173, column: 43, scope: !866)
!4324 = !DILocation(line: 1173, column: 62, scope: !866)
!4325 = !DILocation(line: 1173, column: 68, scope: !866)
!4326 = !DILocation(line: 1173, column: 79, scope: !866)
!4327 = !DILocation(line: 1173, column: 89, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !866, file: !13, line: 1173, column: 89)
!4329 = !DILocation(line: 1173, column: 89, scope: !866)
!4330 = !DILocation(line: 1173, column: 102, scope: !4331)
!4331 = !DILexicalBlockFile(scope: !4328, file: !13, discriminator: 4)
!4332 = !DILocation(line: 1173, column: 95, scope: !4328)
!4333 = !DILocation(line: 1173, column: 108, scope: !4334)
!4334 = !DILexicalBlockFile(scope: !867, file: !13, discriminator: 5)
!4335 = !DILocation(line: 1173, column: 108, scope: !4336)
!4336 = !DILexicalBlockFile(scope: !4337, file: !13, discriminator: 7)
!4337 = !DILexicalBlockFile(scope: !867, file: !13, discriminator: 6)
!4338 = !DILocation(line: 1173, column: 108, scope: !866)
!4339 = !DILocation(line: 1173, column: 110, scope: !4340)
!4340 = !DILexicalBlockFile(scope: !4341, file: !13, discriminator: 8)
!4341 = !DILexicalBlockFile(scope: !868, file: !13, discriminator: 3)
!4342 = !DILocation(line: 1174, column: 5, scope: !830)
!4343 = !DILocation(line: 1174, column: 14, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !871, file: !13, discriminator: 1)
!4345 = !DILocation(line: 1174, column: 20, scope: !871)
!4346 = !{!3761, !1877, i64 72}
!4347 = !DILocation(line: 1174, column: 14, scope: !871)
!4348 = !DILocation(line: 1174, column: 14, scope: !872)
!4349 = !DILocation(line: 1174, column: 30, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !870, file: !13, discriminator: 2)
!4351 = !DILocation(line: 1174, column: 34, scope: !870)
!4352 = !DILocation(line: 1174, column: 41, scope: !870)
!4353 = !DILocation(line: 1174, column: 60, scope: !870)
!4354 = !DILocation(line: 1174, column: 66, scope: !870)
!4355 = !DILocation(line: 1174, column: 75, scope: !870)
!4356 = !DILocation(line: 1174, column: 85, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !870, file: !13, line: 1174, column: 85)
!4358 = !DILocation(line: 1174, column: 85, scope: !870)
!4359 = !DILocation(line: 1174, column: 98, scope: !4360)
!4360 = !DILexicalBlockFile(scope: !4357, file: !13, discriminator: 4)
!4361 = !DILocation(line: 1174, column: 91, scope: !4357)
!4362 = !DILocation(line: 1174, column: 104, scope: !4363)
!4363 = !DILexicalBlockFile(scope: !871, file: !13, discriminator: 5)
!4364 = !DILocation(line: 1174, column: 104, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4366, file: !13, discriminator: 7)
!4366 = !DILexicalBlockFile(scope: !871, file: !13, discriminator: 6)
!4367 = !DILocation(line: 1174, column: 104, scope: !870)
!4368 = !DILocation(line: 1174, column: 106, scope: !4369)
!4369 = !DILexicalBlockFile(scope: !4370, file: !13, discriminator: 8)
!4370 = !DILexicalBlockFile(scope: !872, file: !13, discriminator: 3)
!4371 = !DILocation(line: 1175, column: 5, scope: !830)
!4372 = !DILocation(line: 1175, column: 14, scope: !4373)
!4373 = !DILexicalBlockFile(scope: !875, file: !13, discriminator: 1)
!4374 = !DILocation(line: 1175, column: 20, scope: !875)
!4375 = !{!3761, !1877, i64 168}
!4376 = !DILocation(line: 1175, column: 14, scope: !875)
!4377 = !DILocation(line: 1175, column: 14, scope: !876)
!4378 = !DILocation(line: 1175, column: 27, scope: !4379)
!4379 = !DILexicalBlockFile(scope: !874, file: !13, discriminator: 2)
!4380 = !DILocation(line: 1175, column: 31, scope: !874)
!4381 = !DILocation(line: 1175, column: 38, scope: !874)
!4382 = !DILocation(line: 1175, column: 57, scope: !874)
!4383 = !DILocation(line: 1175, column: 63, scope: !874)
!4384 = !DILocation(line: 1175, column: 69, scope: !874)
!4385 = !DILocation(line: 1175, column: 79, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !874, file: !13, line: 1175, column: 79)
!4387 = !DILocation(line: 1175, column: 79, scope: !874)
!4388 = !DILocation(line: 1175, column: 92, scope: !4389)
!4389 = !DILexicalBlockFile(scope: !4386, file: !13, discriminator: 4)
!4390 = !DILocation(line: 1175, column: 85, scope: !4386)
!4391 = !DILocation(line: 1175, column: 98, scope: !4392)
!4392 = !DILexicalBlockFile(scope: !875, file: !13, discriminator: 5)
!4393 = !DILocation(line: 1175, column: 98, scope: !4394)
!4394 = !DILexicalBlockFile(scope: !4395, file: !13, discriminator: 7)
!4395 = !DILexicalBlockFile(scope: !875, file: !13, discriminator: 6)
!4396 = !DILocation(line: 1175, column: 98, scope: !874)
!4397 = !DILocation(line: 1175, column: 100, scope: !4398)
!4398 = !DILexicalBlockFile(scope: !4399, file: !13, discriminator: 8)
!4399 = !DILexicalBlockFile(scope: !876, file: !13, discriminator: 3)
!4400 = !DILocation(line: 1177, column: 5, scope: !830)
!4401 = !DILocation(line: 1177, column: 14, scope: !4402)
!4402 = !DILexicalBlockFile(scope: !879, file: !13, discriminator: 1)
!4403 = !DILocation(line: 1177, column: 20, scope: !879)
!4404 = !DILocation(line: 1177, column: 14, scope: !879)
!4405 = !DILocation(line: 1177, column: 14, scope: !880)
!4406 = !DILocation(line: 1177, column: 28, scope: !4407)
!4407 = !DILexicalBlockFile(scope: !878, file: !13, discriminator: 2)
!4408 = !DILocation(line: 1177, column: 32, scope: !878)
!4409 = !DILocation(line: 1177, column: 39, scope: !878)
!4410 = !DILocation(line: 1177, column: 58, scope: !878)
!4411 = !DILocation(line: 1177, column: 64, scope: !878)
!4412 = !DILocation(line: 1177, column: 71, scope: !878)
!4413 = !DILocation(line: 1177, column: 81, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !878, file: !13, line: 1177, column: 81)
!4415 = !DILocation(line: 1177, column: 81, scope: !878)
!4416 = !DILocation(line: 1177, column: 94, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !4414, file: !13, discriminator: 4)
!4418 = !DILocation(line: 1177, column: 87, scope: !4414)
!4419 = !DILocation(line: 1177, column: 100, scope: !4420)
!4420 = !DILexicalBlockFile(scope: !879, file: !13, discriminator: 5)
!4421 = !DILocation(line: 1177, column: 100, scope: !4422)
!4422 = !DILexicalBlockFile(scope: !4423, file: !13, discriminator: 7)
!4423 = !DILexicalBlockFile(scope: !879, file: !13, discriminator: 6)
!4424 = !DILocation(line: 1177, column: 100, scope: !878)
!4425 = !DILocation(line: 1177, column: 102, scope: !4426)
!4426 = !DILexicalBlockFile(scope: !4427, file: !13, discriminator: 8)
!4427 = !DILexicalBlockFile(scope: !880, file: !13, discriminator: 3)
!4428 = !DILocation(line: 1178, column: 5, scope: !830)
!4429 = !DILocation(line: 1179, column: 1, scope: !830)
!4430 = !DILocation(line: 1182, column: 29, scope: !881)
!4431 = !DILocation(line: 1184, column: 30, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !881, file: !13, line: 1184, column: 9)
!4433 = !DILocation(line: 1184, column: 9, scope: !4432)
!4434 = !DILocation(line: 1184, column: 36, scope: !4432)
!4435 = !DILocation(line: 1184, column: 9, scope: !881)
!4436 = !DILocation(line: 1185, column: 9, scope: !4432)
!4437 = !DILocation(line: 1186, column: 5, scope: !881)
!4438 = !DILocation(line: 1186, column: 10, scope: !4439)
!4439 = !DILexicalBlockFile(scope: !885, file: !13, discriminator: 1)
!4440 = !DILocation(line: 1186, column: 20, scope: !885)
!4441 = !DILocation(line: 1186, column: 43, scope: !885)
!4442 = !DILocation(line: 1186, column: 49, scope: !885)
!4443 = !DILocation(line: 1186, column: 60, scope: !889)
!4444 = !DILocation(line: 1186, column: 68, scope: !889)
!4445 = !DILocation(line: 1186, column: 60, scope: !885)
!4446 = !DILocation(line: 1186, column: 86, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !888, file: !13, discriminator: 2)
!4448 = !DILocation(line: 1186, column: 92, scope: !888)
!4449 = !DILocation(line: 1186, column: 98, scope: !888)
!4450 = !DILocation(line: 1186, column: 112, scope: !888)
!4451 = !DILocation(line: 1186, column: 117, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !887, file: !13, discriminator: 4)
!4453 = !DILocation(line: 1186, column: 127, scope: !887)
!4454 = !DILocation(line: 1186, column: 157, scope: !887)
!4455 = !DILocation(line: 1186, column: 175, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !887, file: !13, line: 1186, column: 172)
!4457 = !DILocation(line: 1186, column: 192, scope: !4456)
!4458 = !DILocation(line: 1186, column: 172, scope: !4456)
!4459 = !DILocation(line: 1186, column: 202, scope: !4456)
!4460 = !DILocation(line: 1186, column: 172, scope: !887)
!4461 = !DILocation(line: 1186, column: 172, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !887, file: !13, discriminator: 5)
!4463 = !DILocation(line: 1186, column: 233, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !4456, file: !13, discriminator: 6)
!4465 = !DILocation(line: 1186, column: 251, scope: !4456)
!4466 = !DILocation(line: 1186, column: 261, scope: !4456)
!4467 = !DILocation(line: 1186, column: 286, scope: !4456)
!4468 = !DILocation(line: 1186, column: 217, scope: !4456)
!4469 = !DILocation(line: 1186, column: 305, scope: !4470)
!4470 = !DILexicalBlockFile(scope: !888, file: !13, discriminator: 7)
!4471 = !DILocation(line: 1186, column: 305, scope: !887)
!4472 = !DILocation(line: 1186, column: 305, scope: !4473)
!4473 = !DILexicalBlockFile(scope: !887, file: !13, discriminator: 8)
!4474 = !DILocation(line: 1186, column: 318, scope: !4475)
!4475 = !DILexicalBlockFile(scope: !888, file: !13, discriminator: 9)
!4476 = !DILocation(line: 1186, column: 320, scope: !4477)
!4477 = !DILexicalBlockFile(scope: !4478, file: !13, discriminator: 10)
!4478 = !DILexicalBlockFile(scope: !881, file: !13, discriminator: 3)
!4479 = !DILocation(line: 1186, column: 320, scope: !885)
!4480 = !DILocation(line: 1187, column: 5, scope: !881)
!4481 = !DILocation(line: 1188, column: 1, scope: !881)
!4482 = !DILocation(line: 2630, column: 32, scope: !890)
!4483 = !DILocation(line: 2632, column: 5, scope: !890)
!4484 = !DILocation(line: 2632, column: 15, scope: !890)
!4485 = !DILocation(line: 2634, column: 9, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2634, column: 9)
!4487 = !DILocation(line: 2634, column: 15, scope: !4486)
!4488 = !DILocation(line: 2634, column: 18, scope: !4486)
!4489 = !DILocation(line: 2634, column: 9, scope: !890)
!4490 = !DILocation(line: 2634, column: 30, scope: !4491)
!4491 = !DILexicalBlockFile(scope: !4492, file: !13, discriminator: 1)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !13, line: 2634, column: 30)
!4493 = distinct !DILexicalBlock(scope: !4486, file: !13, line: 2634, column: 24)
!4494 = !DILocation(line: 2634, column: 36, scope: !4492)
!4495 = !DILocation(line: 2634, column: 30, scope: !4492)
!4496 = !DILocation(line: 2634, column: 30, scope: !4493)
!4497 = !DILocation(line: 2634, column: 64, scope: !4498)
!4498 = !DILexicalBlockFile(scope: !4499, file: !13, discriminator: 2)
!4499 = distinct !DILexicalBlock(scope: !4492, file: !13, line: 2634, column: 46)
!4500 = !DILocation(line: 2634, column: 48, scope: !4499)
!4501 = !DILocation(line: 2634, column: 122, scope: !4499)
!4502 = !DILocation(line: 2634, column: 147, scope: !4503)
!4503 = !DILexicalBlockFile(scope: !4504, file: !13, discriminator: 3)
!4504 = distinct !DILexicalBlock(scope: !4492, file: !13, line: 2634, column: 129)
!4505 = !DILocation(line: 2634, column: 131, scope: !4504)
!4506 = !DILocation(line: 2634, column: 209, scope: !4507)
!4507 = !DILexicalBlockFile(scope: !4493, file: !13, discriminator: 4)
!4508 = !DILocation(line: 2634, column: 209, scope: !4493)
!4509 = !DILocation(line: 2636, column: 5, scope: !890)
!4510 = !DILocation(line: 2636, column: 11, scope: !890)
!4511 = !DILocation(line: 2636, column: 19, scope: !890)
!4512 = !{!3761, !1878, i64 95}
!4513 = !DILocation(line: 2637, column: 23, scope: !899)
!4514 = !DILocation(line: 2637, column: 11, scope: !899)
!4515 = !DILocation(line: 2637, column: 31, scope: !899)
!4516 = !DILocation(line: 2637, column: 40, scope: !899)
!4517 = !DILocation(line: 2637, column: 9, scope: !890)
!4518 = !DILocation(line: 2639, column: 40, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !899, file: !13, line: 2637, column: 66)
!4520 = !DILocation(line: 2639, column: 16, scope: !4519)
!4521 = !DILocation(line: 2639, column: 14, scope: !4519)
!4522 = !DILocation(line: 2640, column: 5, scope: !4519)
!4523 = !DILocation(line: 2642, column: 55, scope: !898)
!4524 = !DILocation(line: 2642, column: 43, scope: !898)
!4525 = !DILocation(line: 2643, column: 44, scope: !898)
!4526 = !DILocation(line: 2642, column: 16, scope: !898)
!4527 = !DILocation(line: 2642, column: 14, scope: !898)
!4528 = !DILocation(line: 2644, column: 13, scope: !897)
!4529 = !DILocation(line: 2644, column: 18, scope: !897)
!4530 = !DILocation(line: 2644, column: 39, scope: !4531)
!4531 = !DILexicalBlockFile(scope: !897, file: !13, discriminator: 1)
!4532 = !DILocation(line: 2644, column: 47, scope: !897)
!4533 = !DILocation(line: 2644, column: 58, scope: !897)
!4534 = !DILocation(line: 2644, column: 67, scope: !897)
!4535 = !DILocation(line: 2644, column: 84, scope: !897)
!4536 = !DILocation(line: 2644, column: 13, scope: !898)
!4537 = !DILocation(line: 2645, column: 26, scope: !896)
!4538 = !DILocation(line: 2647, column: 56, scope: !896)
!4539 = !DILocation(line: 2647, column: 64, scope: !896)
!4540 = !DILocation(line: 2647, column: 74, scope: !896)
!4541 = !DILocation(line: 2645, column: 13, scope: !896)
!4542 = !DILocation(line: 2648, column: 13, scope: !896)
!4543 = !DILocation(line: 2648, column: 18, scope: !4544)
!4544 = !DILexicalBlockFile(scope: !895, file: !13, discriminator: 1)
!4545 = !DILocation(line: 2648, column: 28, scope: !895)
!4546 = !DILocation(line: 2648, column: 58, scope: !895)
!4547 = !DILocation(line: 2648, column: 73, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !895, file: !13, line: 2648, column: 70)
!4549 = !DILocation(line: 2648, column: 90, scope: !4548)
!4550 = !DILocation(line: 2648, column: 70, scope: !4548)
!4551 = !DILocation(line: 2648, column: 100, scope: !4548)
!4552 = !DILocation(line: 2648, column: 70, scope: !895)
!4553 = !DILocation(line: 2648, column: 70, scope: !4554)
!4554 = !DILexicalBlockFile(scope: !895, file: !13, discriminator: 2)
!4555 = !DILocation(line: 2648, column: 131, scope: !4556)
!4556 = !DILexicalBlockFile(scope: !4548, file: !13, discriminator: 3)
!4557 = !DILocation(line: 2648, column: 149, scope: !4548)
!4558 = !DILocation(line: 2648, column: 159, scope: !4548)
!4559 = !DILocation(line: 2648, column: 184, scope: !4548)
!4560 = !DILocation(line: 2648, column: 115, scope: !4548)
!4561 = !DILocation(line: 2648, column: 203, scope: !4562)
!4562 = !DILexicalBlockFile(scope: !896, file: !13, discriminator: 4)
!4563 = !DILocation(line: 2648, column: 203, scope: !895)
!4564 = !DILocation(line: 2648, column: 203, scope: !4565)
!4565 = !DILexicalBlockFile(scope: !895, file: !13, discriminator: 5)
!4566 = !DILocation(line: 2649, column: 13, scope: !896)
!4567 = !DILocation(line: 2653, column: 9, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !890, file: !13, line: 2653, column: 9)
!4569 = !DILocation(line: 2653, column: 14, scope: !4568)
!4570 = !DILocation(line: 2653, column: 28, scope: !4568)
!4571 = !DILocation(line: 2653, column: 65, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !4568, file: !13, discriminator: 1)
!4573 = !DILocation(line: 2653, column: 49, scope: !4568)
!4574 = !DILocation(line: 2653, column: 72, scope: !4568)
!4575 = !DILocation(line: 2653, column: 78, scope: !4568)
!4576 = !DILocation(line: 2653, column: 47, scope: !4568)
!4577 = !DILocation(line: 2653, column: 47, scope: !4578)
!4578 = !DILexicalBlockFile(scope: !4568, file: !13, discriminator: 2)
!4579 = !DILocation(line: 2653, column: 121, scope: !4580)
!4580 = !DILexicalBlockFile(scope: !4568, file: !13, discriminator: 3)
!4581 = !DILocation(line: 2653, column: 91, scope: !4568)
!4582 = !DILocation(line: 2653, column: 130, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !4584, file: !13, discriminator: 5)
!4584 = !DILexicalBlockFile(scope: !4568, file: !13, discriminator: 4)
!4585 = !DILocation(line: 2653, column: 9, scope: !890)
!4586 = !DILocation(line: 2654, column: 9, scope: !4568)
!4587 = !DILocation(line: 2656, column: 57, scope: !903)
!4588 = !DILocation(line: 2656, column: 39, scope: !903)
!4589 = !DILocation(line: 2656, column: 65, scope: !903)
!4590 = !DILocation(line: 2656, column: 73, scope: !903)
!4591 = !DILocation(line: 2656, column: 9, scope: !890)
!4592 = !DILocation(line: 2658, column: 9, scope: !902)
!4593 = !DILocation(line: 2658, column: 14, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !901, file: !13, discriminator: 1)
!4595 = !DILocation(line: 2658, column: 24, scope: !901)
!4596 = !DILocation(line: 2658, column: 54, scope: !901)
!4597 = !DILocation(line: 2658, column: 69, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !901, file: !13, line: 2658, column: 66)
!4599 = !DILocation(line: 2658, column: 86, scope: !4598)
!4600 = !DILocation(line: 2658, column: 66, scope: !4598)
!4601 = !DILocation(line: 2658, column: 96, scope: !4598)
!4602 = !DILocation(line: 2658, column: 66, scope: !901)
!4603 = !DILocation(line: 2658, column: 66, scope: !4604)
!4604 = !DILexicalBlockFile(scope: !901, file: !13, discriminator: 2)
!4605 = !DILocation(line: 2658, column: 127, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4598, file: !13, discriminator: 3)
!4607 = !DILocation(line: 2658, column: 145, scope: !4598)
!4608 = !DILocation(line: 2658, column: 155, scope: !4598)
!4609 = !DILocation(line: 2658, column: 180, scope: !4598)
!4610 = !DILocation(line: 2658, column: 111, scope: !4598)
!4611 = !DILocation(line: 2658, column: 199, scope: !4612)
!4612 = !DILexicalBlockFile(scope: !902, file: !13, discriminator: 4)
!4613 = !DILocation(line: 2658, column: 199, scope: !901)
!4614 = !DILocation(line: 2658, column: 199, scope: !4615)
!4615 = !DILexicalBlockFile(scope: !901, file: !13, discriminator: 5)
!4616 = !DILocation(line: 2659, column: 9, scope: !902)
!4617 = !DILocation(line: 2659, column: 14, scope: !4618)
!4618 = !DILexicalBlockFile(scope: !905, file: !13, discriminator: 1)
!4619 = !DILocation(line: 2659, column: 24, scope: !905)
!4620 = !DILocation(line: 2659, column: 47, scope: !905)
!4621 = !DILocation(line: 2659, column: 53, scope: !905)
!4622 = !DILocation(line: 2659, column: 68, scope: !909)
!4623 = !DILocation(line: 2659, column: 76, scope: !909)
!4624 = !DILocation(line: 2659, column: 68, scope: !905)
!4625 = !DILocation(line: 2659, column: 94, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !908, file: !13, discriminator: 2)
!4627 = !DILocation(line: 2659, column: 100, scope: !908)
!4628 = !DILocation(line: 2659, column: 110, scope: !908)
!4629 = !DILocation(line: 2659, column: 124, scope: !908)
!4630 = !DILocation(line: 2659, column: 129, scope: !4631)
!4631 = !DILexicalBlockFile(scope: !907, file: !13, discriminator: 4)
!4632 = !DILocation(line: 2659, column: 139, scope: !907)
!4633 = !DILocation(line: 2659, column: 169, scope: !907)
!4634 = !DILocation(line: 2659, column: 187, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !907, file: !13, line: 2659, column: 184)
!4636 = !DILocation(line: 2659, column: 204, scope: !4635)
!4637 = !DILocation(line: 2659, column: 184, scope: !4635)
!4638 = !DILocation(line: 2659, column: 214, scope: !4635)
!4639 = !DILocation(line: 2659, column: 184, scope: !907)
!4640 = !DILocation(line: 2659, column: 184, scope: !4641)
!4641 = !DILexicalBlockFile(scope: !907, file: !13, discriminator: 5)
!4642 = !DILocation(line: 2659, column: 245, scope: !4643)
!4643 = !DILexicalBlockFile(scope: !4635, file: !13, discriminator: 6)
!4644 = !DILocation(line: 2659, column: 263, scope: !4635)
!4645 = !DILocation(line: 2659, column: 273, scope: !4635)
!4646 = !DILocation(line: 2659, column: 298, scope: !4635)
!4647 = !DILocation(line: 2659, column: 229, scope: !4635)
!4648 = !DILocation(line: 2659, column: 317, scope: !4649)
!4649 = !DILexicalBlockFile(scope: !908, file: !13, discriminator: 7)
!4650 = !DILocation(line: 2659, column: 317, scope: !907)
!4651 = !DILocation(line: 2659, column: 317, scope: !4652)
!4652 = !DILexicalBlockFile(scope: !907, file: !13, discriminator: 8)
!4653 = !DILocation(line: 2659, column: 330, scope: !4654)
!4654 = !DILexicalBlockFile(scope: !908, file: !13, discriminator: 9)
!4655 = !DILocation(line: 2659, column: 332, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !4657, file: !13, discriminator: 10)
!4657 = !DILexicalBlockFile(scope: !902, file: !13, discriminator: 3)
!4658 = !DILocation(line: 2659, column: 332, scope: !905)
!4659 = !DILocation(line: 2659, column: 332, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !905, file: !13, discriminator: 11)
!4661 = !DILocation(line: 2660, column: 25, scope: !902)
!4662 = !DILocation(line: 2660, column: 31, scope: !902)
!4663 = !{!3761, !1878, i64 93}
!4664 = !DILocation(line: 2660, column: 9, scope: !902)
!4665 = !DILocation(line: 2660, column: 15, scope: !902)
!4666 = !DILocation(line: 2660, column: 23, scope: !902)
!4667 = !DILocation(line: 2661, column: 9, scope: !902)
!4668 = !DILocation(line: 2664, column: 12, scope: !890)
!4669 = !DILocation(line: 2664, column: 5, scope: !890)
!4670 = !DILocation(line: 2665, column: 1, scope: !890)
!4671 = !DILocation(line: 847, column: 28, scope: !1552)
!4672 = !DILocation(line: 847, column: 44, scope: !1552)
!4673 = !DILocation(line: 847, column: 60, scope: !1552)
!4674 = !DILocation(line: 849, column: 5, scope: !1552)
!4675 = !DILocation(line: 849, column: 11, scope: !1552)
!4676 = !DILocation(line: 852, column: 5, scope: !1552)
!4677 = !DILocation(line: 852, column: 15, scope: !1552)
!4678 = !DILocation(line: 852, column: 24, scope: !1552)
!4679 = !DILocation(line: 852, column: 30, scope: !1552)
!4680 = !DILocation(line: 853, column: 5, scope: !1552)
!4681 = !DILocation(line: 853, column: 11, scope: !1552)
!4682 = !DILocation(line: 854, column: 5, scope: !1552)
!4683 = !DILocation(line: 854, column: 11, scope: !1552)
!4684 = !DILocation(line: 855, column: 5, scope: !1552)
!4685 = !DILocation(line: 855, column: 11, scope: !1552)
!4686 = !DILocation(line: 856, column: 5, scope: !1552)
!4687 = !DILocation(line: 856, column: 9, scope: !1552)
!4688 = !DILocation(line: 856, column: 29, scope: !1552)
!4689 = !DILocation(line: 857, column: 5, scope: !1552)
!4690 = !DILocation(line: 857, column: 18, scope: !1552)
!4691 = !DILocation(line: 859, column: 5, scope: !1552)
!4692 = !DILocation(line: 859, column: 15, scope: !1552)
!4693 = !DILocation(line: 860, column: 5, scope: !1552)
!4694 = !DILocation(line: 860, column: 9, scope: !1552)
!4695 = !DILocation(line: 862, column: 5, scope: !1552)
!4696 = !DILocation(line: 862, column: 11, scope: !1552)
!4697 = !DILocation(line: 862, column: 14, scope: !1552)
!4698 = !DILocation(line: 863, column: 5, scope: !1552)
!4699 = !DILocation(line: 863, column: 11, scope: !1552)
!4700 = !DILocation(line: 863, column: 20, scope: !1552)
!4701 = !DILocation(line: 864, column: 45, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 864, column: 9)
!4703 = !DILocation(line: 864, column: 51, scope: !4702)
!4704 = !DILocation(line: 865, column: 38, scope: !4702)
!4705 = !DILocation(line: 864, column: 10, scope: !4702)
!4706 = !DILocation(line: 864, column: 9, scope: !1552)
!4707 = !DILocation(line: 867, column: 9, scope: !4702)
!4708 = !DILocation(line: 869, column: 9, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 869, column: 9)
!4710 = !DILocation(line: 869, column: 17, scope: !4709)
!4711 = !DILocation(line: 869, column: 20, scope: !4712)
!4712 = !DILexicalBlockFile(scope: !4709, file: !13, discriminator: 1)
!4713 = !DILocation(line: 869, column: 31, scope: !4709)
!4714 = !DILocation(line: 870, column: 9, scope: !4709)
!4715 = !DILocation(line: 870, column: 14, scope: !4712)
!4716 = !DILocation(line: 870, column: 25, scope: !4709)
!4717 = !DILocation(line: 870, column: 33, scope: !4709)
!4718 = !DILocation(line: 870, column: 36, scope: !4719)
!4719 = !DILexicalBlockFile(scope: !4709, file: !13, discriminator: 2)
!4720 = !DILocation(line: 870, column: 47, scope: !4709)
!4721 = !DILocation(line: 871, column: 9, scope: !4709)
!4722 = !DILocation(line: 871, column: 14, scope: !4712)
!4723 = !DILocation(line: 871, column: 25, scope: !4709)
!4724 = !DILocation(line: 871, column: 33, scope: !4709)
!4725 = !DILocation(line: 871, column: 36, scope: !4719)
!4726 = !DILocation(line: 871, column: 47, scope: !4709)
!4727 = !DILocation(line: 872, column: 9, scope: !4709)
!4728 = !DILocation(line: 872, column: 14, scope: !4712)
!4729 = !DILocation(line: 872, column: 25, scope: !4709)
!4730 = !DILocation(line: 872, column: 33, scope: !4709)
!4731 = !DILocation(line: 872, column: 36, scope: !4719)
!4732 = !DILocation(line: 872, column: 47, scope: !4709)
!4733 = !DILocation(line: 872, column: 55, scope: !4709)
!4734 = !DILocation(line: 872, column: 58, scope: !4735)
!4735 = !DILexicalBlockFile(scope: !4709, file: !13, discriminator: 3)
!4736 = !DILocation(line: 872, column: 69, scope: !4709)
!4737 = !DILocation(line: 869, column: 9, scope: !1552)
!4738 = !DILocation(line: 873, column: 22, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4709, file: !13, line: 872, column: 79)
!4740 = !DILocation(line: 874, column: 51, scope: !4739)
!4741 = !DILocation(line: 873, column: 9, scope: !4739)
!4742 = !DILocation(line: 875, column: 9, scope: !4739)
!4743 = !DILocation(line: 878, column: 5, scope: !1552)
!4744 = !DILocation(line: 878, column: 10, scope: !4745)
!4745 = !DILexicalBlockFile(scope: !1575, file: !13, discriminator: 1)
!4746 = !DILocation(line: 878, column: 20, scope: !1575)
!4747 = !DILocation(line: 878, column: 43, scope: !1575)
!4748 = !DILocation(line: 878, column: 49, scope: !1575)
!4749 = !DILocation(line: 878, column: 62, scope: !1579)
!4750 = !DILocation(line: 878, column: 70, scope: !1579)
!4751 = !DILocation(line: 878, column: 62, scope: !1575)
!4752 = !DILocation(line: 878, column: 88, scope: !4753)
!4753 = !DILexicalBlockFile(scope: !1578, file: !13, discriminator: 2)
!4754 = !DILocation(line: 878, column: 94, scope: !1578)
!4755 = !DILocation(line: 878, column: 102, scope: !1578)
!4756 = !DILocation(line: 878, column: 116, scope: !1578)
!4757 = !DILocation(line: 878, column: 121, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !1577, file: !13, discriminator: 4)
!4759 = !DILocation(line: 878, column: 131, scope: !1577)
!4760 = !DILocation(line: 878, column: 161, scope: !1577)
!4761 = !DILocation(line: 878, column: 179, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !1577, file: !13, line: 878, column: 176)
!4763 = !DILocation(line: 878, column: 196, scope: !4762)
!4764 = !DILocation(line: 878, column: 176, scope: !4762)
!4765 = !DILocation(line: 878, column: 206, scope: !4762)
!4766 = !DILocation(line: 878, column: 176, scope: !1577)
!4767 = !DILocation(line: 878, column: 176, scope: !4768)
!4768 = !DILexicalBlockFile(scope: !1577, file: !13, discriminator: 5)
!4769 = !DILocation(line: 878, column: 237, scope: !4770)
!4770 = !DILexicalBlockFile(scope: !4762, file: !13, discriminator: 6)
!4771 = !DILocation(line: 878, column: 255, scope: !4762)
!4772 = !DILocation(line: 878, column: 265, scope: !4762)
!4773 = !DILocation(line: 878, column: 290, scope: !4762)
!4774 = !DILocation(line: 878, column: 221, scope: !4762)
!4775 = !DILocation(line: 878, column: 309, scope: !4776)
!4776 = !DILexicalBlockFile(scope: !1578, file: !13, discriminator: 7)
!4777 = !DILocation(line: 878, column: 309, scope: !1577)
!4778 = !DILocation(line: 878, column: 309, scope: !4779)
!4779 = !DILexicalBlockFile(scope: !1577, file: !13, discriminator: 8)
!4780 = !DILocation(line: 878, column: 322, scope: !4781)
!4781 = !DILexicalBlockFile(scope: !1578, file: !13, discriminator: 9)
!4782 = !DILocation(line: 878, column: 324, scope: !4783)
!4783 = !DILexicalBlockFile(scope: !4784, file: !13, discriminator: 10)
!4784 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 3)
!4785 = !DILocation(line: 878, column: 324, scope: !1575)
!4786 = !DILocation(line: 878, column: 324, scope: !4787)
!4787 = !DILexicalBlockFile(scope: !1575, file: !13, discriminator: 11)
!4788 = !DILocation(line: 879, column: 5, scope: !1552)
!4789 = !DILocation(line: 879, column: 10, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !1581, file: !13, discriminator: 1)
!4791 = !DILocation(line: 879, column: 20, scope: !1581)
!4792 = !DILocation(line: 879, column: 43, scope: !1581)
!4793 = !DILocation(line: 879, column: 49, scope: !1581)
!4794 = !DILocation(line: 879, column: 64, scope: !1585)
!4795 = !DILocation(line: 879, column: 72, scope: !1585)
!4796 = !DILocation(line: 879, column: 64, scope: !1581)
!4797 = !DILocation(line: 879, column: 90, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !1584, file: !13, discriminator: 2)
!4799 = !DILocation(line: 879, column: 96, scope: !1584)
!4800 = !DILocation(line: 879, column: 106, scope: !1584)
!4801 = !DILocation(line: 879, column: 120, scope: !1584)
!4802 = !DILocation(line: 879, column: 125, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !1583, file: !13, discriminator: 4)
!4804 = !DILocation(line: 879, column: 135, scope: !1583)
!4805 = !DILocation(line: 879, column: 165, scope: !1583)
!4806 = !DILocation(line: 879, column: 183, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !1583, file: !13, line: 879, column: 180)
!4808 = !DILocation(line: 879, column: 200, scope: !4807)
!4809 = !DILocation(line: 879, column: 180, scope: !4807)
!4810 = !DILocation(line: 879, column: 210, scope: !4807)
!4811 = !DILocation(line: 879, column: 180, scope: !1583)
!4812 = !DILocation(line: 879, column: 180, scope: !4813)
!4813 = !DILexicalBlockFile(scope: !1583, file: !13, discriminator: 5)
!4814 = !DILocation(line: 879, column: 241, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4807, file: !13, discriminator: 6)
!4816 = !DILocation(line: 879, column: 259, scope: !4807)
!4817 = !DILocation(line: 879, column: 269, scope: !4807)
!4818 = !DILocation(line: 879, column: 294, scope: !4807)
!4819 = !DILocation(line: 879, column: 225, scope: !4807)
!4820 = !DILocation(line: 879, column: 313, scope: !4821)
!4821 = !DILexicalBlockFile(scope: !1584, file: !13, discriminator: 7)
!4822 = !DILocation(line: 879, column: 313, scope: !1583)
!4823 = !DILocation(line: 879, column: 313, scope: !4824)
!4824 = !DILexicalBlockFile(scope: !1583, file: !13, discriminator: 8)
!4825 = !DILocation(line: 879, column: 326, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !1584, file: !13, discriminator: 9)
!4827 = !DILocation(line: 879, column: 328, scope: !4783)
!4828 = !DILocation(line: 879, column: 328, scope: !1581)
!4829 = !DILocation(line: 879, column: 328, scope: !4830)
!4830 = !DILexicalBlockFile(scope: !1581, file: !13, discriminator: 11)
!4831 = !DILocation(line: 880, column: 5, scope: !1552)
!4832 = !DILocation(line: 880, column: 10, scope: !4833)
!4833 = !DILexicalBlockFile(scope: !1587, file: !13, discriminator: 1)
!4834 = !DILocation(line: 880, column: 20, scope: !1587)
!4835 = !DILocation(line: 880, column: 43, scope: !1587)
!4836 = !DILocation(line: 880, column: 49, scope: !1587)
!4837 = !DILocation(line: 880, column: 63, scope: !1591)
!4838 = !DILocation(line: 880, column: 71, scope: !1591)
!4839 = !DILocation(line: 880, column: 63, scope: !1587)
!4840 = !DILocation(line: 880, column: 89, scope: !4841)
!4841 = !DILexicalBlockFile(scope: !1590, file: !13, discriminator: 2)
!4842 = !DILocation(line: 880, column: 95, scope: !1590)
!4843 = !DILocation(line: 880, column: 104, scope: !1590)
!4844 = !DILocation(line: 880, column: 118, scope: !1590)
!4845 = !DILocation(line: 880, column: 123, scope: !4846)
!4846 = !DILexicalBlockFile(scope: !1589, file: !13, discriminator: 4)
!4847 = !DILocation(line: 880, column: 133, scope: !1589)
!4848 = !DILocation(line: 880, column: 163, scope: !1589)
!4849 = !DILocation(line: 880, column: 181, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !1589, file: !13, line: 880, column: 178)
!4851 = !DILocation(line: 880, column: 198, scope: !4850)
!4852 = !DILocation(line: 880, column: 178, scope: !4850)
!4853 = !DILocation(line: 880, column: 208, scope: !4850)
!4854 = !DILocation(line: 880, column: 178, scope: !1589)
!4855 = !DILocation(line: 880, column: 178, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !1589, file: !13, discriminator: 5)
!4857 = !DILocation(line: 880, column: 239, scope: !4858)
!4858 = !DILexicalBlockFile(scope: !4850, file: !13, discriminator: 6)
!4859 = !DILocation(line: 880, column: 257, scope: !4850)
!4860 = !DILocation(line: 880, column: 267, scope: !4850)
!4861 = !DILocation(line: 880, column: 292, scope: !4850)
!4862 = !DILocation(line: 880, column: 223, scope: !4850)
!4863 = !DILocation(line: 880, column: 311, scope: !4864)
!4864 = !DILexicalBlockFile(scope: !1590, file: !13, discriminator: 7)
!4865 = !DILocation(line: 880, column: 311, scope: !1589)
!4866 = !DILocation(line: 880, column: 311, scope: !4867)
!4867 = !DILexicalBlockFile(scope: !1589, file: !13, discriminator: 8)
!4868 = !DILocation(line: 880, column: 324, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !1590, file: !13, discriminator: 9)
!4870 = !DILocation(line: 880, column: 326, scope: !4783)
!4871 = !DILocation(line: 880, column: 326, scope: !1587)
!4872 = !DILocation(line: 880, column: 326, scope: !4873)
!4873 = !DILexicalBlockFile(scope: !1587, file: !13, discriminator: 11)
!4874 = !DILocation(line: 881, column: 5, scope: !1552)
!4875 = !DILocation(line: 881, column: 10, scope: !4876)
!4876 = !DILexicalBlockFile(scope: !1593, file: !13, discriminator: 1)
!4877 = !DILocation(line: 881, column: 20, scope: !1593)
!4878 = !DILocation(line: 881, column: 43, scope: !1593)
!4879 = !DILocation(line: 881, column: 49, scope: !1593)
!4880 = !DILocation(line: 881, column: 63, scope: !1597)
!4881 = !DILocation(line: 881, column: 71, scope: !1597)
!4882 = !DILocation(line: 881, column: 63, scope: !1593)
!4883 = !DILocation(line: 881, column: 89, scope: !4884)
!4884 = !DILexicalBlockFile(scope: !1596, file: !13, discriminator: 2)
!4885 = !DILocation(line: 881, column: 95, scope: !1596)
!4886 = !DILocation(line: 881, column: 104, scope: !1596)
!4887 = !DILocation(line: 881, column: 118, scope: !1596)
!4888 = !DILocation(line: 881, column: 123, scope: !4889)
!4889 = !DILexicalBlockFile(scope: !1595, file: !13, discriminator: 4)
!4890 = !DILocation(line: 881, column: 133, scope: !1595)
!4891 = !DILocation(line: 881, column: 163, scope: !1595)
!4892 = !DILocation(line: 881, column: 181, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !1595, file: !13, line: 881, column: 178)
!4894 = !DILocation(line: 881, column: 198, scope: !4893)
!4895 = !DILocation(line: 881, column: 178, scope: !4893)
!4896 = !DILocation(line: 881, column: 208, scope: !4893)
!4897 = !DILocation(line: 881, column: 178, scope: !1595)
!4898 = !DILocation(line: 881, column: 178, scope: !4899)
!4899 = !DILexicalBlockFile(scope: !1595, file: !13, discriminator: 5)
!4900 = !DILocation(line: 881, column: 239, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4893, file: !13, discriminator: 6)
!4902 = !DILocation(line: 881, column: 257, scope: !4893)
!4903 = !DILocation(line: 881, column: 267, scope: !4893)
!4904 = !DILocation(line: 881, column: 292, scope: !4893)
!4905 = !DILocation(line: 881, column: 223, scope: !4893)
!4906 = !DILocation(line: 881, column: 311, scope: !4907)
!4907 = !DILexicalBlockFile(scope: !1596, file: !13, discriminator: 7)
!4908 = !DILocation(line: 881, column: 311, scope: !1595)
!4909 = !DILocation(line: 881, column: 311, scope: !4910)
!4910 = !DILexicalBlockFile(scope: !1595, file: !13, discriminator: 8)
!4911 = !DILocation(line: 881, column: 324, scope: !4912)
!4912 = !DILexicalBlockFile(scope: !1596, file: !13, discriminator: 9)
!4913 = !DILocation(line: 881, column: 326, scope: !4783)
!4914 = !DILocation(line: 881, column: 326, scope: !1593)
!4915 = !DILocation(line: 881, column: 326, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !1593, file: !13, discriminator: 11)
!4917 = !DILocation(line: 882, column: 5, scope: !1552)
!4918 = !DILocation(line: 882, column: 10, scope: !4919)
!4919 = !DILexicalBlockFile(scope: !1599, file: !13, discriminator: 1)
!4920 = !DILocation(line: 882, column: 20, scope: !1599)
!4921 = !DILocation(line: 882, column: 43, scope: !1599)
!4922 = !DILocation(line: 882, column: 49, scope: !1599)
!4923 = !DILocation(line: 882, column: 62, scope: !1603)
!4924 = !DILocation(line: 882, column: 70, scope: !1603)
!4925 = !DILocation(line: 882, column: 62, scope: !1599)
!4926 = !DILocation(line: 882, column: 88, scope: !4927)
!4927 = !DILexicalBlockFile(scope: !1602, file: !13, discriminator: 2)
!4928 = !DILocation(line: 882, column: 94, scope: !1602)
!4929 = !DILocation(line: 882, column: 102, scope: !1602)
!4930 = !DILocation(line: 882, column: 116, scope: !1602)
!4931 = !DILocation(line: 882, column: 121, scope: !4932)
!4932 = !DILexicalBlockFile(scope: !1601, file: !13, discriminator: 4)
!4933 = !DILocation(line: 882, column: 131, scope: !1601)
!4934 = !DILocation(line: 882, column: 161, scope: !1601)
!4935 = !DILocation(line: 882, column: 179, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !1601, file: !13, line: 882, column: 176)
!4937 = !DILocation(line: 882, column: 196, scope: !4936)
!4938 = !DILocation(line: 882, column: 176, scope: !4936)
!4939 = !DILocation(line: 882, column: 206, scope: !4936)
!4940 = !DILocation(line: 882, column: 176, scope: !1601)
!4941 = !DILocation(line: 882, column: 176, scope: !4942)
!4942 = !DILexicalBlockFile(scope: !1601, file: !13, discriminator: 5)
!4943 = !DILocation(line: 882, column: 237, scope: !4944)
!4944 = !DILexicalBlockFile(scope: !4936, file: !13, discriminator: 6)
!4945 = !DILocation(line: 882, column: 255, scope: !4936)
!4946 = !DILocation(line: 882, column: 265, scope: !4936)
!4947 = !DILocation(line: 882, column: 290, scope: !4936)
!4948 = !DILocation(line: 882, column: 221, scope: !4936)
!4949 = !DILocation(line: 882, column: 309, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !1602, file: !13, discriminator: 7)
!4951 = !DILocation(line: 882, column: 309, scope: !1601)
!4952 = !DILocation(line: 882, column: 309, scope: !4953)
!4953 = !DILexicalBlockFile(scope: !1601, file: !13, discriminator: 8)
!4954 = !DILocation(line: 882, column: 322, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !1602, file: !13, discriminator: 9)
!4956 = !DILocation(line: 882, column: 324, scope: !4783)
!4957 = !DILocation(line: 882, column: 324, scope: !1599)
!4958 = !DILocation(line: 882, column: 324, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !1599, file: !13, discriminator: 11)
!4960 = !DILocation(line: 883, column: 5, scope: !1552)
!4961 = !DILocation(line: 883, column: 10, scope: !4962)
!4962 = !DILexicalBlockFile(scope: !1605, file: !13, discriminator: 1)
!4963 = !DILocation(line: 883, column: 20, scope: !1605)
!4964 = !DILocation(line: 883, column: 43, scope: !1605)
!4965 = !DILocation(line: 883, column: 49, scope: !1605)
!4966 = !DILocation(line: 883, column: 69, scope: !1609)
!4967 = !DILocation(line: 883, column: 77, scope: !1609)
!4968 = !DILocation(line: 883, column: 69, scope: !1605)
!4969 = !DILocation(line: 883, column: 95, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !1608, file: !13, discriminator: 2)
!4971 = !DILocation(line: 883, column: 101, scope: !1608)
!4972 = !DILocation(line: 883, column: 116, scope: !1608)
!4973 = !DILocation(line: 883, column: 130, scope: !1608)
!4974 = !DILocation(line: 883, column: 135, scope: !4975)
!4975 = !DILexicalBlockFile(scope: !1607, file: !13, discriminator: 4)
!4976 = !DILocation(line: 883, column: 145, scope: !1607)
!4977 = !DILocation(line: 883, column: 175, scope: !1607)
!4978 = !DILocation(line: 883, column: 193, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !1607, file: !13, line: 883, column: 190)
!4980 = !DILocation(line: 883, column: 210, scope: !4979)
!4981 = !DILocation(line: 883, column: 190, scope: !4979)
!4982 = !DILocation(line: 883, column: 220, scope: !4979)
!4983 = !DILocation(line: 883, column: 190, scope: !1607)
!4984 = !DILocation(line: 883, column: 190, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !1607, file: !13, discriminator: 5)
!4986 = !DILocation(line: 883, column: 251, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !4979, file: !13, discriminator: 6)
!4988 = !DILocation(line: 883, column: 269, scope: !4979)
!4989 = !DILocation(line: 883, column: 279, scope: !4979)
!4990 = !DILocation(line: 883, column: 304, scope: !4979)
!4991 = !DILocation(line: 883, column: 235, scope: !4979)
!4992 = !DILocation(line: 883, column: 323, scope: !4993)
!4993 = !DILexicalBlockFile(scope: !1608, file: !13, discriminator: 7)
!4994 = !DILocation(line: 883, column: 323, scope: !1607)
!4995 = !DILocation(line: 883, column: 323, scope: !4996)
!4996 = !DILexicalBlockFile(scope: !1607, file: !13, discriminator: 8)
!4997 = !DILocation(line: 883, column: 336, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !1608, file: !13, discriminator: 9)
!4999 = !DILocation(line: 883, column: 338, scope: !4783)
!5000 = !DILocation(line: 883, column: 338, scope: !1605)
!5001 = !DILocation(line: 883, column: 338, scope: !5002)
!5002 = !DILexicalBlockFile(scope: !1605, file: !13, discriminator: 11)
!5003 = !DILocation(line: 884, column: 5, scope: !1552)
!5004 = !DILocation(line: 884, column: 10, scope: !5005)
!5005 = !DILexicalBlockFile(scope: !1611, file: !13, discriminator: 1)
!5006 = !DILocation(line: 884, column: 20, scope: !1611)
!5007 = !DILocation(line: 884, column: 43, scope: !1611)
!5008 = !DILocation(line: 884, column: 49, scope: !1611)
!5009 = !DILocation(line: 884, column: 69, scope: !1615)
!5010 = !DILocation(line: 884, column: 77, scope: !1615)
!5011 = !DILocation(line: 884, column: 69, scope: !1611)
!5012 = !DILocation(line: 884, column: 95, scope: !5013)
!5013 = !DILexicalBlockFile(scope: !1614, file: !13, discriminator: 2)
!5014 = !DILocation(line: 884, column: 101, scope: !1614)
!5015 = !DILocation(line: 884, column: 116, scope: !1614)
!5016 = !DILocation(line: 884, column: 130, scope: !1614)
!5017 = !DILocation(line: 884, column: 135, scope: !5018)
!5018 = !DILexicalBlockFile(scope: !1613, file: !13, discriminator: 4)
!5019 = !DILocation(line: 884, column: 145, scope: !1613)
!5020 = !DILocation(line: 884, column: 175, scope: !1613)
!5021 = !DILocation(line: 884, column: 193, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !1613, file: !13, line: 884, column: 190)
!5023 = !DILocation(line: 884, column: 210, scope: !5022)
!5024 = !DILocation(line: 884, column: 190, scope: !5022)
!5025 = !DILocation(line: 884, column: 220, scope: !5022)
!5026 = !DILocation(line: 884, column: 190, scope: !1613)
!5027 = !DILocation(line: 884, column: 190, scope: !5028)
!5028 = !DILexicalBlockFile(scope: !1613, file: !13, discriminator: 5)
!5029 = !DILocation(line: 884, column: 251, scope: !5030)
!5030 = !DILexicalBlockFile(scope: !5022, file: !13, discriminator: 6)
!5031 = !DILocation(line: 884, column: 269, scope: !5022)
!5032 = !DILocation(line: 884, column: 279, scope: !5022)
!5033 = !DILocation(line: 884, column: 304, scope: !5022)
!5034 = !DILocation(line: 884, column: 235, scope: !5022)
!5035 = !DILocation(line: 884, column: 323, scope: !5036)
!5036 = !DILexicalBlockFile(scope: !1614, file: !13, discriminator: 7)
!5037 = !DILocation(line: 884, column: 323, scope: !1613)
!5038 = !DILocation(line: 884, column: 323, scope: !5039)
!5039 = !DILexicalBlockFile(scope: !1613, file: !13, discriminator: 8)
!5040 = !DILocation(line: 884, column: 336, scope: !5041)
!5041 = !DILexicalBlockFile(scope: !1614, file: !13, discriminator: 9)
!5042 = !DILocation(line: 884, column: 338, scope: !4783)
!5043 = !DILocation(line: 884, column: 338, scope: !1611)
!5044 = !DILocation(line: 884, column: 338, scope: !5045)
!5045 = !DILexicalBlockFile(scope: !1611, file: !13, discriminator: 11)
!5046 = !DILocation(line: 885, column: 5, scope: !1552)
!5047 = !DILocation(line: 885, column: 10, scope: !5048)
!5048 = !DILexicalBlockFile(scope: !1617, file: !13, discriminator: 1)
!5049 = !DILocation(line: 885, column: 20, scope: !1617)
!5050 = !DILocation(line: 885, column: 43, scope: !1617)
!5051 = !DILocation(line: 885, column: 49, scope: !1617)
!5052 = !DILocation(line: 885, column: 64, scope: !1621)
!5053 = !DILocation(line: 885, column: 72, scope: !1621)
!5054 = !DILocation(line: 885, column: 64, scope: !1617)
!5055 = !DILocation(line: 885, column: 90, scope: !5056)
!5056 = !DILexicalBlockFile(scope: !1620, file: !13, discriminator: 2)
!5057 = !DILocation(line: 885, column: 96, scope: !1620)
!5058 = !DILocation(line: 885, column: 106, scope: !1620)
!5059 = !DILocation(line: 885, column: 120, scope: !1620)
!5060 = !DILocation(line: 885, column: 125, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !1619, file: !13, discriminator: 4)
!5062 = !DILocation(line: 885, column: 135, scope: !1619)
!5063 = !DILocation(line: 885, column: 165, scope: !1619)
!5064 = !DILocation(line: 885, column: 183, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !1619, file: !13, line: 885, column: 180)
!5066 = !DILocation(line: 885, column: 200, scope: !5065)
!5067 = !DILocation(line: 885, column: 180, scope: !5065)
!5068 = !DILocation(line: 885, column: 210, scope: !5065)
!5069 = !DILocation(line: 885, column: 180, scope: !1619)
!5070 = !DILocation(line: 885, column: 180, scope: !5071)
!5071 = !DILexicalBlockFile(scope: !1619, file: !13, discriminator: 5)
!5072 = !DILocation(line: 885, column: 241, scope: !5073)
!5073 = !DILexicalBlockFile(scope: !5065, file: !13, discriminator: 6)
!5074 = !DILocation(line: 885, column: 259, scope: !5065)
!5075 = !DILocation(line: 885, column: 269, scope: !5065)
!5076 = !DILocation(line: 885, column: 294, scope: !5065)
!5077 = !DILocation(line: 885, column: 225, scope: !5065)
!5078 = !DILocation(line: 885, column: 313, scope: !5079)
!5079 = !DILexicalBlockFile(scope: !1620, file: !13, discriminator: 7)
!5080 = !DILocation(line: 885, column: 313, scope: !1619)
!5081 = !DILocation(line: 885, column: 313, scope: !5082)
!5082 = !DILexicalBlockFile(scope: !1619, file: !13, discriminator: 8)
!5083 = !DILocation(line: 885, column: 326, scope: !5084)
!5084 = !DILexicalBlockFile(scope: !1620, file: !13, discriminator: 9)
!5085 = !DILocation(line: 885, column: 328, scope: !4783)
!5086 = !DILocation(line: 885, column: 328, scope: !1617)
!5087 = !DILocation(line: 885, column: 328, scope: !5088)
!5088 = !DILexicalBlockFile(scope: !1617, file: !13, discriminator: 11)
!5089 = !DILocation(line: 886, column: 5, scope: !1552)
!5090 = !DILocation(line: 886, column: 10, scope: !5091)
!5091 = !DILexicalBlockFile(scope: !1623, file: !13, discriminator: 1)
!5092 = !DILocation(line: 886, column: 20, scope: !1623)
!5093 = !DILocation(line: 886, column: 43, scope: !1623)
!5094 = !DILocation(line: 886, column: 49, scope: !1623)
!5095 = !DILocation(line: 886, column: 62, scope: !1627)
!5096 = !DILocation(line: 886, column: 70, scope: !1627)
!5097 = !DILocation(line: 886, column: 62, scope: !1623)
!5098 = !DILocation(line: 886, column: 88, scope: !5099)
!5099 = !DILexicalBlockFile(scope: !1626, file: !13, discriminator: 2)
!5100 = !DILocation(line: 886, column: 94, scope: !1626)
!5101 = !DILocation(line: 886, column: 102, scope: !1626)
!5102 = !DILocation(line: 886, column: 116, scope: !1626)
!5103 = !DILocation(line: 886, column: 121, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !1625, file: !13, discriminator: 4)
!5105 = !DILocation(line: 886, column: 131, scope: !1625)
!5106 = !DILocation(line: 886, column: 161, scope: !1625)
!5107 = !DILocation(line: 886, column: 179, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !1625, file: !13, line: 886, column: 176)
!5109 = !DILocation(line: 886, column: 196, scope: !5108)
!5110 = !DILocation(line: 886, column: 176, scope: !5108)
!5111 = !DILocation(line: 886, column: 206, scope: !5108)
!5112 = !DILocation(line: 886, column: 176, scope: !1625)
!5113 = !DILocation(line: 886, column: 176, scope: !5114)
!5114 = !DILexicalBlockFile(scope: !1625, file: !13, discriminator: 5)
!5115 = !DILocation(line: 886, column: 237, scope: !5116)
!5116 = !DILexicalBlockFile(scope: !5108, file: !13, discriminator: 6)
!5117 = !DILocation(line: 886, column: 255, scope: !5108)
!5118 = !DILocation(line: 886, column: 265, scope: !5108)
!5119 = !DILocation(line: 886, column: 290, scope: !5108)
!5120 = !DILocation(line: 886, column: 221, scope: !5108)
!5121 = !DILocation(line: 886, column: 309, scope: !5122)
!5122 = !DILexicalBlockFile(scope: !1626, file: !13, discriminator: 7)
!5123 = !DILocation(line: 886, column: 309, scope: !1625)
!5124 = !DILocation(line: 886, column: 309, scope: !5125)
!5125 = !DILexicalBlockFile(scope: !1625, file: !13, discriminator: 8)
!5126 = !DILocation(line: 886, column: 322, scope: !5127)
!5127 = !DILexicalBlockFile(scope: !1626, file: !13, discriminator: 9)
!5128 = !DILocation(line: 886, column: 324, scope: !4783)
!5129 = !DILocation(line: 886, column: 324, scope: !1623)
!5130 = !DILocation(line: 886, column: 324, scope: !5131)
!5131 = !DILexicalBlockFile(scope: !1623, file: !13, discriminator: 11)
!5132 = !DILocation(line: 887, column: 5, scope: !1552)
!5133 = !DILocation(line: 887, column: 10, scope: !5134)
!5134 = !DILexicalBlockFile(scope: !1629, file: !13, discriminator: 1)
!5135 = !DILocation(line: 887, column: 20, scope: !1629)
!5136 = !DILocation(line: 887, column: 43, scope: !1629)
!5137 = !DILocation(line: 887, column: 49, scope: !1629)
!5138 = !DILocation(line: 887, column: 59, scope: !1633)
!5139 = !DILocation(line: 887, column: 67, scope: !1633)
!5140 = !DILocation(line: 887, column: 59, scope: !1629)
!5141 = !DILocation(line: 887, column: 85, scope: !5142)
!5142 = !DILexicalBlockFile(scope: !1632, file: !13, discriminator: 2)
!5143 = !DILocation(line: 887, column: 91, scope: !1632)
!5144 = !DILocation(line: 887, column: 96, scope: !1632)
!5145 = !DILocation(line: 887, column: 110, scope: !1632)
!5146 = !DILocation(line: 887, column: 115, scope: !5147)
!5147 = !DILexicalBlockFile(scope: !1631, file: !13, discriminator: 4)
!5148 = !DILocation(line: 887, column: 125, scope: !1631)
!5149 = !DILocation(line: 887, column: 155, scope: !1631)
!5150 = !DILocation(line: 887, column: 173, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !1631, file: !13, line: 887, column: 170)
!5152 = !DILocation(line: 887, column: 190, scope: !5151)
!5153 = !DILocation(line: 887, column: 170, scope: !5151)
!5154 = !DILocation(line: 887, column: 200, scope: !5151)
!5155 = !DILocation(line: 887, column: 170, scope: !1631)
!5156 = !DILocation(line: 887, column: 170, scope: !5157)
!5157 = !DILexicalBlockFile(scope: !1631, file: !13, discriminator: 5)
!5158 = !DILocation(line: 887, column: 231, scope: !5159)
!5159 = !DILexicalBlockFile(scope: !5151, file: !13, discriminator: 6)
!5160 = !DILocation(line: 887, column: 249, scope: !5151)
!5161 = !DILocation(line: 887, column: 259, scope: !5151)
!5162 = !DILocation(line: 887, column: 284, scope: !5151)
!5163 = !DILocation(line: 887, column: 215, scope: !5151)
!5164 = !DILocation(line: 887, column: 303, scope: !5165)
!5165 = !DILexicalBlockFile(scope: !1632, file: !13, discriminator: 7)
!5166 = !DILocation(line: 887, column: 303, scope: !1631)
!5167 = !DILocation(line: 887, column: 303, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !1631, file: !13, discriminator: 8)
!5169 = !DILocation(line: 887, column: 316, scope: !5170)
!5170 = !DILexicalBlockFile(scope: !1632, file: !13, discriminator: 9)
!5171 = !DILocation(line: 887, column: 318, scope: !4783)
!5172 = !DILocation(line: 887, column: 318, scope: !1629)
!5173 = !DILocation(line: 887, column: 318, scope: !5174)
!5174 = !DILexicalBlockFile(scope: !1629, file: !13, discriminator: 11)
!5175 = !DILocation(line: 888, column: 5, scope: !1552)
!5176 = !DILocation(line: 888, column: 11, scope: !1552)
!5177 = !DILocation(line: 888, column: 30, scope: !1552)
!5178 = !{!3761, !1900, i64 128}
!5179 = !DILocation(line: 889, column: 5, scope: !1552)
!5180 = !DILocation(line: 889, column: 11, scope: !1552)
!5181 = !DILocation(line: 889, column: 31, scope: !1552)
!5182 = !{!3761, !1900, i64 144}
!5183 = !DILocation(line: 890, column: 5, scope: !1552)
!5184 = !DILocation(line: 890, column: 11, scope: !1552)
!5185 = !DILocation(line: 890, column: 22, scope: !1552)
!5186 = !{!3761, !1877, i64 104}
!5187 = !DILocation(line: 891, column: 5, scope: !1552)
!5188 = !DILocation(line: 891, column: 11, scope: !1552)
!5189 = !DILocation(line: 891, column: 20, scope: !1552)
!5190 = !{!3761, !3762, i64 160}
!5191 = !DILocation(line: 893, column: 9, scope: !1636)
!5192 = !DILocation(line: 893, column: 18, scope: !1636)
!5193 = !DILocation(line: 893, column: 9, scope: !1552)
!5194 = !DILocation(line: 895, column: 9, scope: !1635)
!5195 = !DILocation(line: 895, column: 19, scope: !1635)
!5196 = !DILocation(line: 896, column: 17, scope: !1635)
!5197 = !DILocation(line: 896, column: 15, scope: !1635)
!5198 = !DILocation(line: 897, column: 13, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !1635, file: !13, line: 897, column: 13)
!5200 = !DILocation(line: 897, column: 19, scope: !5199)
!5201 = !DILocation(line: 897, column: 13, scope: !1635)
!5202 = !DILocation(line: 898, column: 13, scope: !5199)
!5203 = !DILocation(line: 899, column: 47, scope: !1635)
!5204 = !DILocation(line: 899, column: 18, scope: !1635)
!5205 = !DILocation(line: 899, column: 16, scope: !1635)
!5206 = !DILocation(line: 901, column: 13, scope: !1639)
!5207 = !DILocation(line: 901, column: 20, scope: !1639)
!5208 = !DILocation(line: 901, column: 13, scope: !1635)
!5209 = !DILocation(line: 902, column: 40, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !13, line: 902, column: 17)
!5211 = distinct !DILexicalBlock(scope: !1639, file: !13, line: 901, column: 35)
!5212 = !DILocation(line: 902, column: 17, scope: !5210)
!5213 = !DILocation(line: 902, column: 62, scope: !5210)
!5214 = !DILocation(line: 903, column: 40, scope: !5210)
!5215 = !DILocation(line: 903, column: 47, scope: !5210)
!5216 = !{!5217, !1877, i64 16}
!5217 = !{!"", !1884, i64 0, !1877, i64 8, !1877, i64 16}
!5218 = !DILocation(line: 903, column: 17, scope: !5210)
!5219 = !DILocation(line: 902, column: 17, scope: !5211)
!5220 = !DILocation(line: 904, column: 17, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5210, file: !13, line: 903, column: 71)
!5222 = !DILocation(line: 905, column: 13, scope: !5221)
!5223 = !DILocation(line: 907, column: 17, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5210, file: !13, line: 906, column: 18)
!5225 = !DILocation(line: 909, column: 9, scope: !5211)
!5226 = !DILocation(line: 911, column: 13, scope: !1638)
!5227 = !DILocation(line: 911, column: 17, scope: !1638)
!5228 = !DILocation(line: 911, column: 36, scope: !1638)
!5229 = !DILocation(line: 911, column: 22, scope: !1638)
!5230 = !DILocation(line: 912, column: 13, scope: !1638)
!5231 = !DILocation(line: 912, column: 18, scope: !5232)
!5232 = !DILexicalBlockFile(scope: !1641, file: !13, discriminator: 1)
!5233 = !DILocation(line: 912, column: 28, scope: !1641)
!5234 = !DILocation(line: 912, column: 58, scope: !1641)
!5235 = !DILocation(line: 912, column: 75, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !1641, file: !13, line: 912, column: 72)
!5237 = !DILocation(line: 912, column: 92, scope: !5236)
!5238 = !DILocation(line: 912, column: 72, scope: !5236)
!5239 = !DILocation(line: 912, column: 102, scope: !5236)
!5240 = !DILocation(line: 912, column: 72, scope: !1641)
!5241 = !DILocation(line: 912, column: 72, scope: !5242)
!5242 = !DILexicalBlockFile(scope: !1641, file: !13, discriminator: 2)
!5243 = !DILocation(line: 912, column: 133, scope: !5244)
!5244 = !DILexicalBlockFile(scope: !5236, file: !13, discriminator: 3)
!5245 = !DILocation(line: 912, column: 151, scope: !5236)
!5246 = !DILocation(line: 912, column: 161, scope: !5236)
!5247 = !DILocation(line: 912, column: 186, scope: !5236)
!5248 = !DILocation(line: 912, column: 117, scope: !5236)
!5249 = !DILocation(line: 912, column: 205, scope: !5250)
!5250 = !DILexicalBlockFile(scope: !1638, file: !13, discriminator: 4)
!5251 = !DILocation(line: 912, column: 205, scope: !1641)
!5252 = !DILocation(line: 912, column: 205, scope: !5253)
!5253 = !DILexicalBlockFile(scope: !1641, file: !13, discriminator: 5)
!5254 = !DILocation(line: 913, column: 17, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !1638, file: !13, line: 913, column: 17)
!5256 = !DILocation(line: 913, column: 20, scope: !5255)
!5257 = !DILocation(line: 913, column: 26, scope: !5255)
!5258 = !DILocation(line: 913, column: 29, scope: !5259)
!5259 = !DILexicalBlockFile(scope: !5255, file: !13, discriminator: 1)
!5260 = !DILocation(line: 913, column: 17, scope: !1638)
!5261 = !DILocation(line: 914, column: 17, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5255, file: !13, line: 913, column: 47)
!5263 = !DILocation(line: 917, column: 50, scope: !1638)
!5264 = !DILocation(line: 917, column: 30, scope: !1638)
!5265 = !DILocation(line: 917, column: 13, scope: !1638)
!5266 = !DILocation(line: 917, column: 19, scope: !1638)
!5267 = !DILocation(line: 917, column: 28, scope: !1638)
!5268 = !DILocation(line: 918, column: 17, scope: !1645)
!5269 = !DILocation(line: 918, column: 23, scope: !1645)
!5270 = !DILocation(line: 918, column: 32, scope: !1645)
!5271 = !DILocation(line: 918, column: 17, scope: !1638)
!5272 = !DILocation(line: 919, column: 17, scope: !1645)
!5273 = !DILocation(line: 920, column: 40, scope: !1644)
!5274 = !DILocation(line: 920, column: 46, scope: !1644)
!5275 = !DILocation(line: 920, column: 58, scope: !1644)
!5276 = !DILocation(line: 920, column: 69, scope: !1644)
!5277 = !DILocation(line: 920, column: 78, scope: !1644)
!5278 = !DILocation(line: 920, column: 95, scope: !1644)
!5279 = !DILocation(line: 920, column: 22, scope: !1645)
!5280 = !DILocation(line: 921, column: 17, scope: !1644)
!5281 = !DILocation(line: 921, column: 22, scope: !5282)
!5282 = !DILexicalBlockFile(scope: !1643, file: !13, discriminator: 1)
!5283 = !DILocation(line: 921, column: 32, scope: !1643)
!5284 = !DILocation(line: 921, column: 55, scope: !1643)
!5285 = !DILocation(line: 921, column: 61, scope: !1643)
!5286 = !DILocation(line: 921, column: 76, scope: !1649)
!5287 = !DILocation(line: 921, column: 84, scope: !1649)
!5288 = !DILocation(line: 921, column: 76, scope: !1643)
!5289 = !DILocation(line: 921, column: 102, scope: !5290)
!5290 = !DILexicalBlockFile(scope: !1648, file: !13, discriminator: 2)
!5291 = !DILocation(line: 921, column: 108, scope: !1648)
!5292 = !DILocation(line: 921, column: 118, scope: !1648)
!5293 = !DILocation(line: 921, column: 132, scope: !1648)
!5294 = !DILocation(line: 921, column: 137, scope: !5295)
!5295 = !DILexicalBlockFile(scope: !1647, file: !13, discriminator: 4)
!5296 = !DILocation(line: 921, column: 147, scope: !1647)
!5297 = !DILocation(line: 921, column: 177, scope: !1647)
!5298 = !DILocation(line: 921, column: 195, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !1647, file: !13, line: 921, column: 192)
!5300 = !DILocation(line: 921, column: 212, scope: !5299)
!5301 = !DILocation(line: 921, column: 192, scope: !5299)
!5302 = !DILocation(line: 921, column: 222, scope: !5299)
!5303 = !DILocation(line: 921, column: 192, scope: !1647)
!5304 = !DILocation(line: 921, column: 192, scope: !5305)
!5305 = !DILexicalBlockFile(scope: !1647, file: !13, discriminator: 5)
!5306 = !DILocation(line: 921, column: 253, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !5299, file: !13, discriminator: 6)
!5308 = !DILocation(line: 921, column: 271, scope: !5299)
!5309 = !DILocation(line: 921, column: 281, scope: !5299)
!5310 = !DILocation(line: 921, column: 306, scope: !5299)
!5311 = !DILocation(line: 921, column: 237, scope: !5299)
!5312 = !DILocation(line: 921, column: 325, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !1648, file: !13, discriminator: 7)
!5314 = !DILocation(line: 921, column: 325, scope: !1647)
!5315 = !DILocation(line: 921, column: 325, scope: !5316)
!5316 = !DILexicalBlockFile(scope: !1647, file: !13, discriminator: 8)
!5317 = !DILocation(line: 921, column: 338, scope: !5318)
!5318 = !DILexicalBlockFile(scope: !1648, file: !13, discriminator: 9)
!5319 = !DILocation(line: 921, column: 340, scope: !5320)
!5320 = !DILexicalBlockFile(scope: !5321, file: !13, discriminator: 10)
!5321 = !DILexicalBlockFile(scope: !1644, file: !13, discriminator: 3)
!5322 = !DILocation(line: 921, column: 340, scope: !1643)
!5323 = !DILocation(line: 921, column: 340, scope: !5324)
!5324 = !DILexicalBlockFile(scope: !1643, file: !13, discriminator: 11)
!5325 = !DILocation(line: 921, column: 340, scope: !5326)
!5326 = !DILexicalBlockFile(scope: !1643, file: !13, discriminator: 12)
!5327 = !DILocation(line: 922, column: 9, scope: !1639)
!5328 = !DILocation(line: 922, column: 9, scope: !5329)
!5329 = !DILexicalBlockFile(scope: !1639, file: !13, discriminator: 1)
!5330 = !DILocation(line: 923, column: 5, scope: !1636)
!5331 = !DILocation(line: 923, column: 5, scope: !5332)
!5332 = !DILexicalBlockFile(scope: !1636, file: !13, discriminator: 1)
!5333 = !DILocation(line: 923, column: 5, scope: !1635)
!5334 = !DILocation(line: 924, column: 9, scope: !1652)
!5335 = !DILocation(line: 924, column: 18, scope: !1652)
!5336 = !DILocation(line: 924, column: 32, scope: !1652)
!5337 = !DILocation(line: 924, column: 35, scope: !5338)
!5338 = !DILexicalBlockFile(scope: !1652, file: !13, discriminator: 1)
!5339 = !DILocation(line: 924, column: 41, scope: !1652)
!5340 = !DILocation(line: 924, column: 50, scope: !1652)
!5341 = !DILocation(line: 924, column: 9, scope: !1552)
!5342 = !DILocation(line: 925, column: 9, scope: !1651)
!5343 = !DILocation(line: 925, column: 19, scope: !1651)
!5344 = !DILocation(line: 925, column: 59, scope: !1651)
!5345 = !DILocation(line: 925, column: 35, scope: !1651)
!5346 = !DILocation(line: 926, column: 13, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !1651, file: !13, line: 926, column: 13)
!5348 = !DILocation(line: 926, column: 27, scope: !5347)
!5349 = !DILocation(line: 926, column: 13, scope: !1651)
!5350 = !DILocation(line: 927, column: 13, scope: !5347)
!5351 = !DILocation(line: 929, column: 13, scope: !1651)
!5352 = !DILocation(line: 928, column: 26, scope: !1651)
!5353 = !DILocation(line: 928, column: 9, scope: !1651)
!5354 = !DILocation(line: 928, column: 15, scope: !1651)
!5355 = !DILocation(line: 928, column: 24, scope: !1651)
!5356 = !DILocation(line: 930, column: 9, scope: !1651)
!5357 = !DILocation(line: 930, column: 14, scope: !5358)
!5358 = !DILexicalBlockFile(scope: !1654, file: !13, discriminator: 1)
!5359 = !DILocation(line: 930, column: 24, scope: !1654)
!5360 = !DILocation(line: 930, column: 54, scope: !1654)
!5361 = !DILocation(line: 930, column: 78, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !1654, file: !13, line: 930, column: 75)
!5363 = !DILocation(line: 930, column: 95, scope: !5362)
!5364 = !DILocation(line: 930, column: 75, scope: !5362)
!5365 = !DILocation(line: 930, column: 105, scope: !5362)
!5366 = !DILocation(line: 930, column: 75, scope: !1654)
!5367 = !DILocation(line: 930, column: 75, scope: !5368)
!5368 = !DILexicalBlockFile(scope: !1654, file: !13, discriminator: 2)
!5369 = !DILocation(line: 930, column: 136, scope: !5370)
!5370 = !DILexicalBlockFile(scope: !5362, file: !13, discriminator: 3)
!5371 = !DILocation(line: 930, column: 154, scope: !5362)
!5372 = !DILocation(line: 930, column: 164, scope: !5362)
!5373 = !DILocation(line: 930, column: 189, scope: !5362)
!5374 = !DILocation(line: 930, column: 120, scope: !5362)
!5375 = !DILocation(line: 930, column: 208, scope: !5376)
!5376 = !DILexicalBlockFile(scope: !1651, file: !13, discriminator: 4)
!5377 = !DILocation(line: 930, column: 208, scope: !1654)
!5378 = !DILocation(line: 930, column: 208, scope: !5379)
!5379 = !DILexicalBlockFile(scope: !1654, file: !13, discriminator: 5)
!5380 = !DILocation(line: 931, column: 13, scope: !1658)
!5381 = !DILocation(line: 931, column: 19, scope: !1658)
!5382 = !DILocation(line: 931, column: 28, scope: !1658)
!5383 = !DILocation(line: 931, column: 13, scope: !1651)
!5384 = !DILocation(line: 931, column: 43, scope: !5385)
!5385 = !DILexicalBlockFile(scope: !1658, file: !13, discriminator: 1)
!5386 = !DILocation(line: 939, column: 40, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !13, line: 939, column: 17)
!5388 = distinct !DILexicalBlock(scope: !1658, file: !13, line: 931, column: 43)
!5389 = !DILocation(line: 939, column: 17, scope: !5387)
!5390 = !DILocation(line: 939, column: 17, scope: !5388)
!5391 = !DILocation(line: 940, column: 17, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5387, file: !13, line: 939, column: 60)
!5393 = !DILocation(line: 941, column: 34, scope: !5392)
!5394 = !DILocation(line: 941, column: 17, scope: !5392)
!5395 = !DILocation(line: 941, column: 23, scope: !5392)
!5396 = !DILocation(line: 941, column: 32, scope: !5392)
!5397 = !DILocation(line: 942, column: 13, scope: !5392)
!5398 = !DILocation(line: 944, column: 17, scope: !5387)
!5399 = !DILocation(line: 945, column: 9, scope: !5388)
!5400 = !DILocation(line: 946, column: 36, scope: !1657)
!5401 = !DILocation(line: 946, column: 42, scope: !1657)
!5402 = !DILocation(line: 946, column: 54, scope: !1657)
!5403 = !DILocation(line: 946, column: 65, scope: !1657)
!5404 = !DILocation(line: 946, column: 74, scope: !1657)
!5405 = !DILocation(line: 946, column: 91, scope: !1657)
!5406 = !DILocation(line: 946, column: 18, scope: !1658)
!5407 = !DILocation(line: 947, column: 13, scope: !1657)
!5408 = !DILocation(line: 947, column: 18, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !1656, file: !13, discriminator: 1)
!5410 = !DILocation(line: 947, column: 28, scope: !1656)
!5411 = !DILocation(line: 947, column: 51, scope: !1656)
!5412 = !DILocation(line: 947, column: 57, scope: !1656)
!5413 = !DILocation(line: 947, column: 72, scope: !1662)
!5414 = !DILocation(line: 947, column: 80, scope: !1662)
!5415 = !DILocation(line: 947, column: 72, scope: !1656)
!5416 = !DILocation(line: 947, column: 98, scope: !5417)
!5417 = !DILexicalBlockFile(scope: !1661, file: !13, discriminator: 2)
!5418 = !DILocation(line: 947, column: 104, scope: !1661)
!5419 = !DILocation(line: 947, column: 114, scope: !1661)
!5420 = !DILocation(line: 947, column: 128, scope: !1661)
!5421 = !DILocation(line: 947, column: 133, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !1660, file: !13, discriminator: 4)
!5423 = !DILocation(line: 947, column: 143, scope: !1660)
!5424 = !DILocation(line: 947, column: 173, scope: !1660)
!5425 = !DILocation(line: 947, column: 191, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !1660, file: !13, line: 947, column: 188)
!5427 = !DILocation(line: 947, column: 208, scope: !5426)
!5428 = !DILocation(line: 947, column: 188, scope: !5426)
!5429 = !DILocation(line: 947, column: 218, scope: !5426)
!5430 = !DILocation(line: 947, column: 188, scope: !1660)
!5431 = !DILocation(line: 947, column: 188, scope: !5432)
!5432 = !DILexicalBlockFile(scope: !1660, file: !13, discriminator: 5)
!5433 = !DILocation(line: 947, column: 249, scope: !5434)
!5434 = !DILexicalBlockFile(scope: !5426, file: !13, discriminator: 6)
!5435 = !DILocation(line: 947, column: 267, scope: !5426)
!5436 = !DILocation(line: 947, column: 277, scope: !5426)
!5437 = !DILocation(line: 947, column: 302, scope: !5426)
!5438 = !DILocation(line: 947, column: 233, scope: !5426)
!5439 = !DILocation(line: 947, column: 321, scope: !5440)
!5440 = !DILexicalBlockFile(scope: !1661, file: !13, discriminator: 7)
!5441 = !DILocation(line: 947, column: 321, scope: !1660)
!5442 = !DILocation(line: 947, column: 321, scope: !5443)
!5443 = !DILexicalBlockFile(scope: !1660, file: !13, discriminator: 8)
!5444 = !DILocation(line: 947, column: 334, scope: !5445)
!5445 = !DILexicalBlockFile(scope: !1661, file: !13, discriminator: 9)
!5446 = !DILocation(line: 947, column: 336, scope: !5447)
!5447 = !DILexicalBlockFile(scope: !5448, file: !13, discriminator: 10)
!5448 = !DILexicalBlockFile(scope: !1657, file: !13, discriminator: 3)
!5449 = !DILocation(line: 947, column: 336, scope: !1656)
!5450 = !DILocation(line: 947, column: 336, scope: !5451)
!5451 = !DILexicalBlockFile(scope: !1656, file: !13, discriminator: 11)
!5452 = !DILocation(line: 947, column: 336, scope: !5453)
!5453 = !DILexicalBlockFile(scope: !1656, file: !13, discriminator: 12)
!5454 = !DILocation(line: 948, column: 5, scope: !1652)
!5455 = !DILocation(line: 948, column: 5, scope: !5338)
!5456 = !DILocation(line: 948, column: 5, scope: !1651)
!5457 = !DILocation(line: 949, column: 9, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 949, column: 9)
!5459 = !DILocation(line: 949, column: 15, scope: !5458)
!5460 = !DILocation(line: 949, column: 24, scope: !5458)
!5461 = !DILocation(line: 949, column: 9, scope: !1552)
!5462 = !DILocation(line: 950, column: 37, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5458, file: !13, line: 949, column: 39)
!5464 = !DILocation(line: 950, column: 43, scope: !5463)
!5465 = !DILocation(line: 950, column: 20, scope: !5463)
!5466 = !DILocation(line: 950, column: 18, scope: !5463)
!5467 = !DILocation(line: 951, column: 13, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5463, file: !13, line: 951, column: 13)
!5469 = !DILocation(line: 951, column: 22, scope: !5468)
!5470 = !DILocation(line: 951, column: 13, scope: !5463)
!5471 = !DILocation(line: 952, column: 13, scope: !5468)
!5472 = !DILocation(line: 953, column: 5, scope: !5463)
!5473 = !DILocation(line: 954, column: 14, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5458, file: !13, line: 954, column: 14)
!5475 = !DILocation(line: 954, column: 23, scope: !5474)
!5476 = !DILocation(line: 954, column: 14, scope: !5458)
!5477 = !DILocation(line: 955, column: 47, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !13, line: 954, column: 38)
!5479 = !DILocation(line: 955, column: 26, scope: !5478)
!5480 = !DILocation(line: 955, column: 9, scope: !5478)
!5481 = !DILocation(line: 955, column: 15, scope: !5478)
!5482 = !DILocation(line: 955, column: 24, scope: !5478)
!5483 = !DILocation(line: 956, column: 13, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5478, file: !13, line: 956, column: 13)
!5485 = !DILocation(line: 956, column: 19, scope: !5484)
!5486 = !DILocation(line: 956, column: 28, scope: !5484)
!5487 = !DILocation(line: 956, column: 13, scope: !5478)
!5488 = !DILocation(line: 957, column: 13, scope: !5484)
!5489 = !DILocation(line: 958, column: 5, scope: !5478)
!5490 = !DILocation(line: 960, column: 25, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5474, file: !13, line: 959, column: 10)
!5492 = !DILocation(line: 960, column: 9, scope: !5491)
!5493 = !DILocation(line: 965, column: 46, scope: !1552)
!5494 = !DILocation(line: 965, column: 18, scope: !1552)
!5495 = !DILocation(line: 965, column: 16, scope: !1552)
!5496 = !DILocation(line: 966, column: 9, scope: !1666)
!5497 = !DILocation(line: 966, column: 20, scope: !1666)
!5498 = !DILocation(line: 966, column: 9, scope: !1552)
!5499 = !DILocation(line: 967, column: 9, scope: !1665)
!5500 = !DILocation(line: 967, column: 14, scope: !5501)
!5501 = !DILexicalBlockFile(scope: !1664, file: !13, discriminator: 1)
!5502 = !DILocation(line: 967, column: 24, scope: !1664)
!5503 = !DILocation(line: 967, column: 47, scope: !1664)
!5504 = !DILocation(line: 967, column: 53, scope: !1664)
!5505 = !DILocation(line: 967, column: 68, scope: !1670)
!5506 = !DILocation(line: 967, column: 76, scope: !1670)
!5507 = !DILocation(line: 967, column: 68, scope: !1664)
!5508 = !DILocation(line: 967, column: 94, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !1669, file: !13, discriminator: 2)
!5510 = !DILocation(line: 967, column: 100, scope: !1669)
!5511 = !DILocation(line: 967, column: 110, scope: !1669)
!5512 = !DILocation(line: 967, column: 124, scope: !1669)
!5513 = !DILocation(line: 967, column: 129, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !1668, file: !13, discriminator: 4)
!5515 = !DILocation(line: 967, column: 139, scope: !1668)
!5516 = !DILocation(line: 967, column: 169, scope: !1668)
!5517 = !DILocation(line: 967, column: 187, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !1668, file: !13, line: 967, column: 184)
!5519 = !DILocation(line: 967, column: 204, scope: !5518)
!5520 = !DILocation(line: 967, column: 184, scope: !5518)
!5521 = !DILocation(line: 967, column: 214, scope: !5518)
!5522 = !DILocation(line: 967, column: 184, scope: !1668)
!5523 = !DILocation(line: 967, column: 184, scope: !5524)
!5524 = !DILexicalBlockFile(scope: !1668, file: !13, discriminator: 5)
!5525 = !DILocation(line: 967, column: 245, scope: !5526)
!5526 = !DILexicalBlockFile(scope: !5518, file: !13, discriminator: 6)
!5527 = !DILocation(line: 967, column: 263, scope: !5518)
!5528 = !DILocation(line: 967, column: 273, scope: !5518)
!5529 = !DILocation(line: 967, column: 298, scope: !5518)
!5530 = !DILocation(line: 967, column: 229, scope: !5518)
!5531 = !DILocation(line: 967, column: 317, scope: !5532)
!5532 = !DILexicalBlockFile(scope: !1669, file: !13, discriminator: 7)
!5533 = !DILocation(line: 967, column: 317, scope: !1668)
!5534 = !DILocation(line: 967, column: 317, scope: !5535)
!5535 = !DILexicalBlockFile(scope: !1668, file: !13, discriminator: 8)
!5536 = !DILocation(line: 967, column: 330, scope: !5537)
!5537 = !DILexicalBlockFile(scope: !1669, file: !13, discriminator: 9)
!5538 = !DILocation(line: 967, column: 332, scope: !5539)
!5539 = !DILexicalBlockFile(scope: !5540, file: !13, discriminator: 10)
!5540 = !DILexicalBlockFile(scope: !1665, file: !13, discriminator: 3)
!5541 = !DILocation(line: 967, column: 332, scope: !1664)
!5542 = !DILocation(line: 967, column: 332, scope: !5543)
!5543 = !DILexicalBlockFile(scope: !1664, file: !13, discriminator: 11)
!5544 = !DILocation(line: 968, column: 9, scope: !1665)
!5545 = !DILocation(line: 975, column: 9, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 975, column: 9)
!5547 = !DILocation(line: 975, column: 16, scope: !5546)
!5548 = !DILocation(line: 975, column: 9, scope: !1552)
!5549 = !DILocation(line: 976, column: 16, scope: !5546)
!5550 = !DILocation(line: 976, column: 9, scope: !5546)
!5551 = !DILocation(line: 977, column: 39, scope: !1552)
!5552 = !DILocation(line: 977, column: 20, scope: !1552)
!5553 = !DILocation(line: 977, column: 5, scope: !1552)
!5554 = !DILocation(line: 977, column: 11, scope: !1552)
!5555 = !DILocation(line: 977, column: 18, scope: !1552)
!5556 = !DILocation(line: 978, column: 9, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 978, column: 9)
!5558 = !DILocation(line: 978, column: 15, scope: !5557)
!5559 = !DILocation(line: 978, column: 22, scope: !5557)
!5560 = !DILocation(line: 978, column: 9, scope: !1552)
!5561 = !DILocation(line: 979, column: 9, scope: !5557)
!5562 = !DILocation(line: 981, column: 5, scope: !1552)
!5563 = !DILocation(line: 981, column: 11, scope: !1552)
!5564 = !DILocation(line: 981, column: 22, scope: !1552)
!5565 = !{!3761, !1900, i64 24}
!5566 = !DILocation(line: 982, column: 28, scope: !1552)
!5567 = !DILocation(line: 982, column: 36, scope: !1552)
!5568 = !DILocation(line: 982, column: 50, scope: !1552)
!5569 = !DILocation(line: 982, column: 53, scope: !5570)
!5570 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 2)
!5571 = !DILocation(line: 982, column: 64, scope: !1552)
!5572 = !DILocation(line: 982, column: 50, scope: !5573)
!5573 = !DILexicalBlockFile(scope: !5574, file: !13, discriminator: 3)
!5574 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 1)
!5575 = !DILocation(line: 982, column: 27, scope: !1552)
!5576 = !DILocation(line: 982, column: 5, scope: !1552)
!5577 = !DILocation(line: 982, column: 11, scope: !1552)
!5578 = !DILocation(line: 982, column: 25, scope: !1552)
!5579 = !{!3761, !1878, i64 90}
!5580 = !DILocation(line: 983, column: 28, scope: !1552)
!5581 = !DILocation(line: 983, column: 5, scope: !1552)
!5582 = !DILocation(line: 983, column: 11, scope: !1552)
!5583 = !DILocation(line: 983, column: 26, scope: !1552)
!5584 = !{!3761, !1878, i64 88}
!5585 = !DILocation(line: 984, column: 27, scope: !1552)
!5586 = !DILocation(line: 984, column: 5, scope: !1552)
!5587 = !DILocation(line: 984, column: 11, scope: !1552)
!5588 = !DILocation(line: 984, column: 25, scope: !1552)
!5589 = !{!3761, !1878, i64 89}
!5590 = !DILocation(line: 985, column: 28, scope: !1552)
!5591 = !DILocation(line: 985, column: 36, scope: !1552)
!5592 = !DILocation(line: 985, column: 27, scope: !1552)
!5593 = !DILocation(line: 985, column: 5, scope: !1552)
!5594 = !DILocation(line: 985, column: 11, scope: !1552)
!5595 = !DILocation(line: 985, column: 25, scope: !1552)
!5596 = !{!3761, !1878, i64 91}
!5597 = !DILocation(line: 986, column: 9, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 986, column: 9)
!5599 = !DILocation(line: 986, column: 9, scope: !1552)
!5600 = !DILocation(line: 987, column: 45, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5598, file: !13, line: 986, column: 18)
!5602 = !DILocation(line: 987, column: 24, scope: !5601)
!5603 = !DILocation(line: 987, column: 9, scope: !5601)
!5604 = !DILocation(line: 987, column: 15, scope: !5601)
!5605 = !DILocation(line: 987, column: 22, scope: !5601)
!5606 = !DILocation(line: 988, column: 13, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5601, file: !13, line: 988, column: 13)
!5608 = !DILocation(line: 988, column: 19, scope: !5607)
!5609 = !DILocation(line: 988, column: 26, scope: !5607)
!5610 = !DILocation(line: 988, column: 13, scope: !5601)
!5611 = !DILocation(line: 989, column: 13, scope: !5607)
!5612 = !DILocation(line: 990, column: 5, scope: !5601)
!5613 = !DILocation(line: 991, column: 29, scope: !1552)
!5614 = !DILocation(line: 991, column: 37, scope: !1552)
!5615 = !DILocation(line: 991, column: 51, scope: !1552)
!5616 = !DILocation(line: 991, column: 54, scope: !5570)
!5617 = !DILocation(line: 991, column: 65, scope: !1552)
!5618 = !DILocation(line: 991, column: 51, scope: !5573)
!5619 = !DILocation(line: 991, column: 28, scope: !1552)
!5620 = !DILocation(line: 991, column: 5, scope: !1552)
!5621 = !DILocation(line: 991, column: 11, scope: !1552)
!5622 = !DILocation(line: 991, column: 26, scope: !1552)
!5623 = !{!3761, !1878, i64 92}
!5624 = !DILocation(line: 992, column: 10, scope: !1675)
!5625 = !DILocation(line: 992, column: 16, scope: !1675)
!5626 = !DILocation(line: 992, column: 30, scope: !1675)
!5627 = !DILocation(line: 992, column: 33, scope: !5628)
!5628 = !DILexicalBlockFile(scope: !1675, file: !13, discriminator: 1)
!5629 = !DILocation(line: 992, column: 39, scope: !1675)
!5630 = !DILocation(line: 992, column: 33, scope: !1675)
!5631 = !DILocation(line: 992, column: 9, scope: !1552)
!5632 = !DILocation(line: 993, column: 42, scope: !1674)
!5633 = !DILocation(line: 993, column: 48, scope: !1674)
!5634 = !DILocation(line: 993, column: 25, scope: !1674)
!5635 = !DILocation(line: 993, column: 9, scope: !1674)
!5636 = !DILocation(line: 993, column: 15, scope: !1674)
!5637 = !DILocation(line: 993, column: 23, scope: !1674)
!5638 = !{!3761, !1877, i64 80}
!5639 = !DILocation(line: 994, column: 13, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !1674, file: !13, line: 994, column: 13)
!5641 = !DILocation(line: 994, column: 19, scope: !5640)
!5642 = !DILocation(line: 994, column: 27, scope: !5640)
!5643 = !DILocation(line: 994, column: 13, scope: !1674)
!5644 = !DILocation(line: 995, column: 13, scope: !5640)
!5645 = !DILocation(line: 996, column: 31, scope: !1672)
!5646 = !DILocation(line: 996, column: 38, scope: !1672)
!5647 = !DILocation(line: 996, column: 48, scope: !1672)
!5648 = !DILocation(line: 996, column: 1455, scope: !1672)
!5649 = !DILocation(line: 996, column: 1468, scope: !5650)
!5650 = !DILexicalBlockFile(scope: !1672, file: !13, discriminator: 1)
!5651 = !DILocation(line: 996, column: 1485, scope: !1672)
!5652 = !DILocation(line: 996, column: 1494, scope: !1672)
!5653 = !DILocation(line: 996, column: 1351, scope: !1672)
!5654 = !DILocation(line: 996, column: 1694, scope: !5655)
!5655 = !DILexicalBlockFile(scope: !1678, file: !13, discriminator: 3)
!5656 = !DILocation(line: 996, column: 1715, scope: !1678)
!5657 = !DILocation(line: 996, column: 1762, scope: !1678)
!5658 = !DILocation(line: 996, column: 1768, scope: !1678)
!5659 = !DILocation(line: 996, column: 1778, scope: !1678)
!5660 = !DILocation(line: 996, column: 1791, scope: !1678)
!5661 = !DILocation(line: 996, column: 1802, scope: !1678)
!5662 = !DILocation(line: 996, column: 1812, scope: !1678)
!5663 = !DILocation(line: 996, column: 1810, scope: !1678)
!5664 = !DILocation(line: 996, column: 1868, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !1678, file: !13, line: 996, column: 1868)
!5666 = !DILocation(line: 996, column: 1877, scope: !5665)
!5667 = !DILocation(line: 996, column: 1881, scope: !5665)
!5668 = !DILocation(line: 996, column: 1884, scope: !5669)
!5669 = !DILexicalBlockFile(scope: !5665, file: !13, discriminator: 5)
!5670 = !DILocation(line: 996, column: 1893, scope: !5665)
!5671 = !DILocation(line: 996, column: 1868, scope: !1678)
!5672 = !DILocation(line: 996, column: 1913, scope: !5673)
!5673 = !DILexicalBlockFile(scope: !5674, file: !13, discriminator: 7)
!5674 = distinct !DILexicalBlock(scope: !5665, file: !13, line: 996, column: 1899)
!5675 = !DILocation(line: 996, column: 1923, scope: !5674)
!5676 = !DILocation(line: 996, column: 1921, scope: !5674)
!5677 = !DILocation(line: 996, column: 1910, scope: !5674)
!5678 = !DILocation(line: 996, column: 1980, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5674, file: !13, line: 996, column: 1980)
!5680 = !DILocation(line: 996, column: 1989, scope: !5679)
!5681 = !DILocation(line: 996, column: 1993, scope: !5679)
!5682 = !DILocation(line: 996, column: 1996, scope: !5683)
!5683 = !DILexicalBlockFile(scope: !5679, file: !13, discriminator: 9)
!5684 = !DILocation(line: 996, column: 2005, scope: !5679)
!5685 = !DILocation(line: 996, column: 1980, scope: !5674)
!5686 = !DILocation(line: 996, column: 2025, scope: !5687)
!5687 = !DILexicalBlockFile(scope: !5688, file: !13, discriminator: 11)
!5688 = distinct !DILexicalBlock(scope: !5679, file: !13, line: 996, column: 2011)
!5689 = !DILocation(line: 996, column: 2035, scope: !5688)
!5690 = !DILocation(line: 996, column: 2033, scope: !5688)
!5691 = !DILocation(line: 996, column: 2022, scope: !5688)
!5692 = !DILocation(line: 996, column: 2092, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5688, file: !13, line: 996, column: 2092)
!5694 = !DILocation(line: 996, column: 2101, scope: !5693)
!5695 = !DILocation(line: 996, column: 2105, scope: !5693)
!5696 = !DILocation(line: 996, column: 2108, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !5693, file: !13, discriminator: 13)
!5698 = !DILocation(line: 996, column: 2117, scope: !5693)
!5699 = !DILocation(line: 996, column: 2092, scope: !5688)
!5700 = !DILocation(line: 996, column: 2135, scope: !5701)
!5701 = !DILexicalBlockFile(scope: !5693, file: !13, discriminator: 15)
!5702 = !DILocation(line: 996, column: 2145, scope: !5693)
!5703 = !DILocation(line: 996, column: 2143, scope: !5693)
!5704 = !DILocation(line: 996, column: 2132, scope: !5693)
!5705 = !DILocation(line: 996, column: 2123, scope: !5693)
!5706 = !DILocation(line: 996, column: 2198, scope: !5707)
!5707 = !DILexicalBlockFile(scope: !5708, file: !13, discriminator: 17)
!5708 = !DILexicalBlockFile(scope: !5709, file: !13, discriminator: 16)
!5709 = !DILexicalBlockFile(scope: !5688, file: !13, discriminator: 14)
!5710 = !DILocation(line: 996, column: 2200, scope: !5711)
!5711 = !DILexicalBlockFile(scope: !5712, file: !13, discriminator: 18)
!5712 = !DILexicalBlockFile(scope: !5713, file: !13, discriminator: 12)
!5713 = !DILexicalBlockFile(scope: !5674, file: !13, discriminator: 10)
!5714 = !DILocation(line: 996, column: 2202, scope: !5715)
!5715 = !DILexicalBlockFile(scope: !5716, file: !13, discriminator: 19)
!5716 = !DILexicalBlockFile(scope: !5717, file: !13, discriminator: 8)
!5717 = !DILexicalBlockFile(scope: !1678, file: !13, discriminator: 6)
!5718 = !DILocation(line: 996, column: 1896, scope: !5665)
!5719 = !DILocation(line: 996, column: 2212, scope: !1672)
!5720 = !DILocation(line: 996, column: 2212, scope: !1678)
!5721 = !DILocation(line: 996, column: 2237, scope: !5722)
!5722 = !DILexicalBlockFile(scope: !5723, file: !13, discriminator: 4)
!5723 = !DILexicalBlockFile(scope: !1672, file: !13, discriminator: 2)
!5724 = !DILocation(line: 996, column: 2243, scope: !1672)
!5725 = !DILocation(line: 996, column: 2219, scope: !1672)
!5726 = !DILocation(line: 996, column: 31, scope: !5727)
!5727 = !DILexicalBlockFile(scope: !5728, file: !13, discriminator: 21)
!5728 = !DILexicalBlockFile(scope: !1672, file: !13, discriminator: 20)
!5729 = !DILocation(line: 996, column: 2262, scope: !1673)
!5730 = !DILocation(line: 996, column: 2262, scope: !1672)
!5731 = !DILocation(line: 996, column: 28, scope: !1673)
!5732 = !DILocation(line: 996, column: 13, scope: !1674)
!5733 = !DILocation(line: 997, column: 13, scope: !1673)
!5734 = !DILocation(line: 997, column: 19, scope: !1673)
!5735 = !DILocation(line: 997, column: 27, scope: !1673)
!5736 = !DILocation(line: 998, column: 5, scope: !1674)
!5737 = !DILocation(line: 1005, column: 40, scope: !1552)
!5738 = !DILocation(line: 1005, column: 11, scope: !1552)
!5739 = !DILocation(line: 1005, column: 9, scope: !1552)
!5740 = !DILocation(line: 1006, column: 9, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1006, column: 9)
!5742 = !DILocation(line: 1006, column: 13, scope: !5741)
!5743 = !DILocation(line: 1006, column: 9, scope: !1552)
!5744 = !DILocation(line: 1007, column: 9, scope: !5741)
!5745 = !DILocation(line: 1008, column: 25, scope: !1552)
!5746 = !DILocation(line: 1008, column: 9, scope: !1552)
!5747 = !DILocation(line: 1008, column: 7, scope: !1552)
!5748 = !DILocation(line: 1009, column: 5, scope: !1552)
!5749 = !DILocation(line: 1009, column: 10, scope: !5750)
!5750 = !DILexicalBlockFile(scope: !1681, file: !13, discriminator: 1)
!5751 = !DILocation(line: 1009, column: 20, scope: !1681)
!5752 = !DILocation(line: 1009, column: 50, scope: !1681)
!5753 = !DILocation(line: 1009, column: 64, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !1681, file: !13, line: 1009, column: 61)
!5755 = !DILocation(line: 1009, column: 81, scope: !5754)
!5756 = !DILocation(line: 1009, column: 61, scope: !5754)
!5757 = !DILocation(line: 1009, column: 91, scope: !5754)
!5758 = !DILocation(line: 1009, column: 61, scope: !1681)
!5759 = !DILocation(line: 1009, column: 61, scope: !5760)
!5760 = !DILexicalBlockFile(scope: !1681, file: !13, discriminator: 2)
!5761 = !DILocation(line: 1009, column: 122, scope: !5762)
!5762 = !DILexicalBlockFile(scope: !5754, file: !13, discriminator: 3)
!5763 = !DILocation(line: 1009, column: 140, scope: !5754)
!5764 = !DILocation(line: 1009, column: 150, scope: !5754)
!5765 = !DILocation(line: 1009, column: 175, scope: !5754)
!5766 = !DILocation(line: 1009, column: 106, scope: !5754)
!5767 = !DILocation(line: 1009, column: 194, scope: !5768)
!5768 = !DILexicalBlockFile(scope: !1552, file: !13, discriminator: 4)
!5769 = !DILocation(line: 1009, column: 194, scope: !1681)
!5770 = !DILocation(line: 1009, column: 194, scope: !5771)
!5771 = !DILexicalBlockFile(scope: !1681, file: !13, discriminator: 5)
!5772 = !DILocation(line: 1010, column: 9, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1010, column: 9)
!5774 = !DILocation(line: 1010, column: 11, scope: !5773)
!5775 = !DILocation(line: 1010, column: 9, scope: !1552)
!5776 = !DILocation(line: 1011, column: 9, scope: !5773)
!5777 = !DILocation(line: 1012, column: 9, scope: !1686)
!5778 = !DILocation(line: 1012, column: 11, scope: !1686)
!5779 = !DILocation(line: 1012, column: 9, scope: !1552)
!5780 = !DILocation(line: 1013, column: 60, scope: !1685)
!5781 = !DILocation(line: 1014, column: 60, scope: !1685)
!5782 = !DILocation(line: 1013, column: 25, scope: !1685)
!5783 = !DILocation(line: 1013, column: 9, scope: !1685)
!5784 = !DILocation(line: 1013, column: 15, scope: !1685)
!5785 = !DILocation(line: 1013, column: 23, scope: !1685)
!5786 = !DILocation(line: 1015, column: 13, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !1685, file: !13, line: 1015, column: 13)
!5788 = !DILocation(line: 1015, column: 19, scope: !5787)
!5789 = !DILocation(line: 1015, column: 27, scope: !5787)
!5790 = !DILocation(line: 1015, column: 13, scope: !1685)
!5791 = !DILocation(line: 1016, column: 13, scope: !5787)
!5792 = !DILocation(line: 1018, column: 13, scope: !1684)
!5793 = !DILocation(line: 1018, column: 19, scope: !1684)
!5794 = !DILocation(line: 1018, column: 13, scope: !1685)
!5795 = !DILocation(line: 1019, column: 13, scope: !1683)
!5796 = !DILocation(line: 1019, column: 23, scope: !1683)
!5797 = !DILocation(line: 1021, column: 23, scope: !1683)
!5798 = !DILocation(line: 1021, column: 29, scope: !1683)
!5799 = !DILocation(line: 1021, column: 43, scope: !1683)
!5800 = !DILocation(line: 1021, column: 49, scope: !1683)
!5801 = !DILocation(line: 1021, column: 38, scope: !1683)
!5802 = !DILocation(line: 1019, column: 44, scope: !1683)
!5803 = !DILocation(line: 1022, column: 17, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !1683, file: !13, line: 1022, column: 17)
!5805 = !DILocation(line: 1022, column: 36, scope: !5804)
!5806 = !DILocation(line: 1022, column: 17, scope: !1683)
!5807 = !DILocation(line: 1023, column: 17, scope: !5804)
!5808 = !DILocation(line: 1024, column: 13, scope: !1683)
!5809 = !DILocation(line: 1024, column: 18, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !1688, file: !13, discriminator: 1)
!5811 = !DILocation(line: 1024, column: 28, scope: !1688)
!5812 = !DILocation(line: 1024, column: 51, scope: !1688)
!5813 = !DILocation(line: 1024, column: 57, scope: !1688)
!5814 = !DILocation(line: 1024, column: 71, scope: !1692)
!5815 = !DILocation(line: 1024, column: 79, scope: !1692)
!5816 = !DILocation(line: 1024, column: 71, scope: !1688)
!5817 = !DILocation(line: 1024, column: 97, scope: !5818)
!5818 = !DILexicalBlockFile(scope: !1691, file: !13, discriminator: 2)
!5819 = !DILocation(line: 1024, column: 103, scope: !1691)
!5820 = !DILocation(line: 1024, column: 112, scope: !1691)
!5821 = !DILocation(line: 1024, column: 126, scope: !1691)
!5822 = !DILocation(line: 1024, column: 131, scope: !5823)
!5823 = !DILexicalBlockFile(scope: !1690, file: !13, discriminator: 4)
!5824 = !DILocation(line: 1024, column: 141, scope: !1690)
!5825 = !DILocation(line: 1024, column: 171, scope: !1690)
!5826 = !DILocation(line: 1024, column: 189, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !1690, file: !13, line: 1024, column: 186)
!5828 = !DILocation(line: 1024, column: 206, scope: !5827)
!5829 = !DILocation(line: 1024, column: 186, scope: !5827)
!5830 = !DILocation(line: 1024, column: 216, scope: !5827)
!5831 = !DILocation(line: 1024, column: 186, scope: !1690)
!5832 = !DILocation(line: 1024, column: 186, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !1690, file: !13, discriminator: 5)
!5834 = !DILocation(line: 1024, column: 247, scope: !5835)
!5835 = !DILexicalBlockFile(scope: !5827, file: !13, discriminator: 6)
!5836 = !DILocation(line: 1024, column: 265, scope: !5827)
!5837 = !DILocation(line: 1024, column: 275, scope: !5827)
!5838 = !DILocation(line: 1024, column: 300, scope: !5827)
!5839 = !DILocation(line: 1024, column: 231, scope: !5827)
!5840 = !DILocation(line: 1024, column: 319, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !1691, file: !13, discriminator: 7)
!5842 = !DILocation(line: 1024, column: 319, scope: !1690)
!5843 = !DILocation(line: 1024, column: 319, scope: !5844)
!5844 = !DILexicalBlockFile(scope: !1690, file: !13, discriminator: 8)
!5845 = !DILocation(line: 1024, column: 332, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !1691, file: !13, discriminator: 9)
!5847 = !DILocation(line: 1024, column: 334, scope: !5848)
!5848 = !DILexicalBlockFile(scope: !5849, file: !13, discriminator: 10)
!5849 = !DILexicalBlockFile(scope: !1683, file: !13, discriminator: 3)
!5850 = !DILocation(line: 1024, column: 334, scope: !1688)
!5851 = !DILocation(line: 1024, column: 334, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !1688, file: !13, discriminator: 11)
!5853 = !DILocation(line: 1025, column: 29, scope: !1683)
!5854 = !DILocation(line: 1025, column: 13, scope: !1683)
!5855 = !DILocation(line: 1025, column: 19, scope: !1683)
!5856 = !DILocation(line: 1025, column: 27, scope: !1683)
!5857 = !DILocation(line: 1026, column: 9, scope: !1684)
!5858 = !DILocation(line: 1026, column: 9, scope: !5859)
!5859 = !DILexicalBlockFile(scope: !1684, file: !13, discriminator: 1)
!5860 = !DILocation(line: 1026, column: 9, scope: !1683)
!5861 = !DILocation(line: 1027, column: 5, scope: !1685)
!5862 = !DILocation(line: 1030, column: 40, scope: !1552)
!5863 = !DILocation(line: 1030, column: 11, scope: !1552)
!5864 = !DILocation(line: 1030, column: 9, scope: !1552)
!5865 = !DILocation(line: 1031, column: 9, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1031, column: 9)
!5867 = !DILocation(line: 1031, column: 13, scope: !5866)
!5868 = !DILocation(line: 1031, column: 9, scope: !1552)
!5869 = !DILocation(line: 1032, column: 9, scope: !5866)
!5870 = !DILocation(line: 1033, column: 25, scope: !1552)
!5871 = !DILocation(line: 1033, column: 9, scope: !1552)
!5872 = !DILocation(line: 1033, column: 7, scope: !1552)
!5873 = !DILocation(line: 1034, column: 5, scope: !1552)
!5874 = !DILocation(line: 1034, column: 10, scope: !5875)
!5875 = !DILexicalBlockFile(scope: !1694, file: !13, discriminator: 1)
!5876 = !DILocation(line: 1034, column: 20, scope: !1694)
!5877 = !DILocation(line: 1034, column: 50, scope: !1694)
!5878 = !DILocation(line: 1034, column: 64, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !1694, file: !13, line: 1034, column: 61)
!5880 = !DILocation(line: 1034, column: 81, scope: !5879)
!5881 = !DILocation(line: 1034, column: 61, scope: !5879)
!5882 = !DILocation(line: 1034, column: 91, scope: !5879)
!5883 = !DILocation(line: 1034, column: 61, scope: !1694)
!5884 = !DILocation(line: 1034, column: 61, scope: !5885)
!5885 = !DILexicalBlockFile(scope: !1694, file: !13, discriminator: 2)
!5886 = !DILocation(line: 1034, column: 122, scope: !5887)
!5887 = !DILexicalBlockFile(scope: !5879, file: !13, discriminator: 3)
!5888 = !DILocation(line: 1034, column: 140, scope: !5879)
!5889 = !DILocation(line: 1034, column: 150, scope: !5879)
!5890 = !DILocation(line: 1034, column: 175, scope: !5879)
!5891 = !DILocation(line: 1034, column: 106, scope: !5879)
!5892 = !DILocation(line: 1034, column: 194, scope: !5768)
!5893 = !DILocation(line: 1034, column: 194, scope: !1694)
!5894 = !DILocation(line: 1034, column: 194, scope: !5895)
!5895 = !DILexicalBlockFile(scope: !1694, file: !13, discriminator: 5)
!5896 = !DILocation(line: 1035, column: 9, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1035, column: 9)
!5898 = !DILocation(line: 1035, column: 11, scope: !5897)
!5899 = !DILocation(line: 1035, column: 9, scope: !1552)
!5900 = !DILocation(line: 1036, column: 9, scope: !5897)
!5901 = !DILocation(line: 1037, column: 9, scope: !1700)
!5902 = !DILocation(line: 1037, column: 11, scope: !1700)
!5903 = !DILocation(line: 1037, column: 9, scope: !1552)
!5904 = !DILocation(line: 1038, column: 60, scope: !1699)
!5905 = !DILocation(line: 1039, column: 60, scope: !1699)
!5906 = !DILocation(line: 1038, column: 25, scope: !1699)
!5907 = !DILocation(line: 1038, column: 9, scope: !1699)
!5908 = !DILocation(line: 1038, column: 15, scope: !1699)
!5909 = !DILocation(line: 1038, column: 23, scope: !1699)
!5910 = !DILocation(line: 1040, column: 13, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !1699, file: !13, line: 1040, column: 13)
!5912 = !DILocation(line: 1040, column: 19, scope: !5911)
!5913 = !DILocation(line: 1040, column: 27, scope: !5911)
!5914 = !DILocation(line: 1040, column: 13, scope: !1699)
!5915 = !DILocation(line: 1041, column: 13, scope: !5911)
!5916 = !DILocation(line: 1043, column: 35, scope: !1699)
!5917 = !DILocation(line: 1043, column: 15, scope: !1699)
!5918 = !DILocation(line: 1043, column: 13, scope: !1699)
!5919 = !DILocation(line: 1044, column: 13, scope: !1698)
!5920 = !DILocation(line: 1044, column: 17, scope: !1698)
!5921 = !DILocation(line: 1044, column: 13, scope: !1699)
!5922 = !DILocation(line: 1045, column: 40, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !13, line: 1045, column: 17)
!5924 = distinct !DILexicalBlock(scope: !1698, file: !13, line: 1044, column: 32)
!5925 = !DILocation(line: 1045, column: 17, scope: !5923)
!5926 = !DILocation(line: 1045, column: 17, scope: !5924)
!5927 = !DILocation(line: 1046, column: 17, scope: !5923)
!5928 = !DILocation(line: 1048, column: 17, scope: !5923)
!5929 = !DILocation(line: 1049, column: 9, scope: !5924)
!5930 = !DILocation(line: 1050, column: 35, scope: !1697)
!5931 = !DILocation(line: 1050, column: 42, scope: !1697)
!5932 = !DILocation(line: 1050, column: 53, scope: !1697)
!5933 = !DILocation(line: 1050, column: 62, scope: !1697)
!5934 = !DILocation(line: 1050, column: 79, scope: !1697)
!5935 = !DILocation(line: 1050, column: 18, scope: !1698)
!5936 = !DILocation(line: 1051, column: 13, scope: !1696)
!5937 = !DILocation(line: 1051, column: 30, scope: !1696)
!5938 = !DILocation(line: 1052, column: 13, scope: !1696)
!5939 = !DILocation(line: 1052, column: 20, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !5941, file: !13, discriminator: 2)
!5941 = !DILexicalBlockFile(scope: !1696, file: !13, discriminator: 1)
!5942 = !DILocation(line: 1052, column: 23, scope: !1696)
!5943 = !{!5944, !1877, i64 0}
!5944 = !{!"", !1877, i64 0, !1877, i64 8}
!5945 = !DILocation(line: 1052, column: 28, scope: !1696)
!5946 = !DILocation(line: 1053, column: 55, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !13, line: 1053, column: 21)
!5948 = distinct !DILexicalBlock(scope: !1696, file: !13, line: 1052, column: 43)
!5949 = !DILocation(line: 1053, column: 60, scope: !5947)
!5950 = !DILocation(line: 1053, column: 63, scope: !5947)
!5951 = !DILocation(line: 1053, column: 22, scope: !5947)
!5952 = !DILocation(line: 1053, column: 21, scope: !5948)
!5953 = !DILocation(line: 1054, column: 40, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5947, file: !13, line: 1053, column: 70)
!5955 = !DILocation(line: 1054, column: 43, scope: !5954)
!5956 = !{!5944, !1877, i64 8}
!5957 = !DILocation(line: 1054, column: 21, scope: !5954)
!5958 = !DILocation(line: 1054, column: 27, scope: !5954)
!5959 = !DILocation(line: 1054, column: 38, scope: !5954)
!5960 = !DILocation(line: 1055, column: 21, scope: !5954)
!5961 = !DILocation(line: 1057, column: 18, scope: !5948)
!5962 = !DILocation(line: 1059, column: 9, scope: !1697)
!5963 = !DILocation(line: 1059, column: 9, scope: !1696)
!5964 = !DILocation(line: 1060, column: 9, scope: !1699)
!5965 = !DILocation(line: 1060, column: 14, scope: !5966)
!5966 = !DILexicalBlockFile(scope: !1708, file: !13, discriminator: 1)
!5967 = !DILocation(line: 1060, column: 24, scope: !1708)
!5968 = !DILocation(line: 1060, column: 55, scope: !1708)
!5969 = !DILocation(line: 1060, column: 65, scope: !1711)
!5970 = !DILocation(line: 1060, column: 81, scope: !1711)
!5971 = !DILocation(line: 1060, column: 65, scope: !1708)
!5972 = !DILocation(line: 1060, column: 96, scope: !5973)
!5973 = !DILexicalBlockFile(scope: !1711, file: !13, discriminator: 2)
!5974 = !DILocation(line: 1060, column: 101, scope: !5975)
!5975 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 4)
!5976 = !DILocation(line: 1060, column: 111, scope: !1710)
!5977 = !DILocation(line: 1060, column: 141, scope: !1710)
!5978 = !DILocation(line: 1060, column: 167, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !1710, file: !13, line: 1060, column: 164)
!5980 = !DILocation(line: 1060, column: 184, scope: !5979)
!5981 = !DILocation(line: 1060, column: 164, scope: !5979)
!5982 = !DILocation(line: 1060, column: 194, scope: !5979)
!5983 = !DILocation(line: 1060, column: 164, scope: !1710)
!5984 = !DILocation(line: 1060, column: 164, scope: !5985)
!5985 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 5)
!5986 = !DILocation(line: 1060, column: 225, scope: !5987)
!5987 = !DILexicalBlockFile(scope: !5979, file: !13, discriminator: 6)
!5988 = !DILocation(line: 1060, column: 243, scope: !5979)
!5989 = !DILocation(line: 1060, column: 253, scope: !5979)
!5990 = !DILocation(line: 1060, column: 278, scope: !5979)
!5991 = !DILocation(line: 1060, column: 209, scope: !5979)
!5992 = !DILocation(line: 1060, column: 297, scope: !5993)
!5993 = !DILexicalBlockFile(scope: !1711, file: !13, discriminator: 7)
!5994 = !DILocation(line: 1060, column: 297, scope: !1710)
!5995 = !DILocation(line: 1060, column: 297, scope: !5996)
!5996 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 8)
!5997 = !DILocation(line: 1060, column: 297, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !1710, file: !13, discriminator: 9)
!5999 = !DILocation(line: 1060, column: 310, scope: !6000)
!6000 = !DILexicalBlockFile(scope: !6001, file: !13, discriminator: 10)
!6001 = !DILexicalBlockFile(scope: !1699, file: !13, discriminator: 3)
!6002 = !DILocation(line: 1060, column: 310, scope: !1708)
!6003 = !DILocation(line: 1060, column: 310, scope: !6004)
!6004 = !DILexicalBlockFile(scope: !1708, file: !13, discriminator: 11)
!6005 = !DILocation(line: 1061, column: 5, scope: !1699)
!6006 = !DILocation(line: 1064, column: 5, scope: !1552)
!6007 = !DILocation(line: 1064, column: 10, scope: !6008)
!6008 = !DILexicalBlockFile(scope: !1713, file: !13, discriminator: 1)
!6009 = !DILocation(line: 1064, column: 20, scope: !1713)
!6010 = !DILocation(line: 1064, column: 50, scope: !1713)
!6011 = !DILocation(line: 1064, column: 71, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !1713, file: !13, line: 1064, column: 68)
!6013 = !DILocation(line: 1064, column: 88, scope: !6012)
!6014 = !DILocation(line: 1064, column: 68, scope: !6012)
!6015 = !DILocation(line: 1064, column: 98, scope: !6012)
!6016 = !DILocation(line: 1064, column: 68, scope: !1713)
!6017 = !DILocation(line: 1064, column: 68, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !1713, file: !13, discriminator: 2)
!6019 = !DILocation(line: 1064, column: 129, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !6012, file: !13, discriminator: 3)
!6021 = !DILocation(line: 1064, column: 147, scope: !6012)
!6022 = !DILocation(line: 1064, column: 157, scope: !6012)
!6023 = !DILocation(line: 1064, column: 182, scope: !6012)
!6024 = !DILocation(line: 1064, column: 113, scope: !6012)
!6025 = !DILocation(line: 1064, column: 201, scope: !5768)
!6026 = !DILocation(line: 1064, column: 201, scope: !1713)
!6027 = !DILocation(line: 1064, column: 201, scope: !6028)
!6028 = !DILexicalBlockFile(scope: !1713, file: !13, discriminator: 5)
!6029 = !DILocation(line: 1066, column: 20, scope: !1552)
!6030 = !DILocation(line: 1066, column: 5, scope: !1552)
!6031 = !DILocation(line: 1066, column: 11, scope: !1552)
!6032 = !DILocation(line: 1066, column: 18, scope: !1552)
!6033 = !DILocation(line: 1067, column: 21, scope: !1552)
!6034 = !DILocation(line: 1067, column: 31, scope: !1552)
!6035 = !DILocation(line: 1067, column: 40, scope: !1552)
!6036 = !DILocation(line: 1069, column: 23, scope: !1719)
!6037 = !DILocation(line: 1069, column: 33, scope: !1719)
!6038 = !DILocation(line: 1069, column: 42, scope: !1719)
!6039 = !DILocation(line: 1069, column: 68, scope: !1719)
!6040 = !DILocation(line: 1070, column: 23, scope: !1719)
!6041 = !DILocation(line: 1070, column: 33, scope: !1719)
!6042 = !DILocation(line: 1070, column: 42, scope: !1719)
!6043 = !DILocation(line: 1070, column: 68, scope: !1719)
!6044 = !DILocation(line: 1071, column: 23, scope: !1719)
!6045 = !DILocation(line: 1071, column: 33, scope: !1719)
!6046 = !DILocation(line: 1071, column: 42, scope: !1719)
!6047 = !DILocation(line: 1069, column: 9, scope: !1552)
!6048 = !DILocation(line: 1072, column: 35, scope: !1718)
!6049 = !DILocation(line: 1072, column: 15, scope: !1718)
!6050 = !DILocation(line: 1072, column: 13, scope: !1718)
!6051 = !DILocation(line: 1074, column: 13, scope: !1717)
!6052 = !DILocation(line: 1074, column: 17, scope: !1717)
!6053 = !DILocation(line: 1074, column: 13, scope: !1718)
!6054 = !DILocation(line: 1075, column: 40, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !13, line: 1075, column: 17)
!6056 = distinct !DILexicalBlock(scope: !1717, file: !13, line: 1074, column: 32)
!6057 = !DILocation(line: 1075, column: 17, scope: !6055)
!6058 = !DILocation(line: 1075, column: 17, scope: !6056)
!6059 = !DILocation(line: 1076, column: 17, scope: !6055)
!6060 = !DILocation(line: 1078, column: 17, scope: !6055)
!6061 = !DILocation(line: 1079, column: 9, scope: !6056)
!6062 = !DILocation(line: 1080, column: 32, scope: !1716)
!6063 = !DILocation(line: 1080, column: 39, scope: !1716)
!6064 = !DILocation(line: 1080, column: 48, scope: !1716)
!6065 = !DILocation(line: 1080, column: 18, scope: !1717)
!6066 = !DILocation(line: 1081, column: 25, scope: !1716)
!6067 = !DILocation(line: 1081, column: 13, scope: !1716)
!6068 = !DILocation(line: 1081, column: 19, scope: !1716)
!6069 = !DILocation(line: 1081, column: 23, scope: !1716)
!6070 = !DILocation(line: 1083, column: 13, scope: !1716)
!6071 = !DILocation(line: 1083, column: 18, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !1715, file: !13, discriminator: 1)
!6073 = !DILocation(line: 1083, column: 28, scope: !1715)
!6074 = !DILocation(line: 1083, column: 58, scope: !1715)
!6075 = !DILocation(line: 1083, column: 72, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !1715, file: !13, line: 1083, column: 69)
!6077 = !DILocation(line: 1083, column: 89, scope: !6076)
!6078 = !DILocation(line: 1083, column: 69, scope: !6076)
!6079 = !DILocation(line: 1083, column: 99, scope: !6076)
!6080 = !DILocation(line: 1083, column: 69, scope: !1715)
!6081 = !DILocation(line: 1083, column: 69, scope: !6082)
!6082 = !DILexicalBlockFile(scope: !1715, file: !13, discriminator: 2)
!6083 = !DILocation(line: 1083, column: 130, scope: !6084)
!6084 = !DILexicalBlockFile(scope: !6076, file: !13, discriminator: 3)
!6085 = !DILocation(line: 1083, column: 148, scope: !6076)
!6086 = !DILocation(line: 1083, column: 158, scope: !6076)
!6087 = !DILocation(line: 1083, column: 183, scope: !6076)
!6088 = !DILocation(line: 1083, column: 114, scope: !6076)
!6089 = !DILocation(line: 1083, column: 202, scope: !6090)
!6090 = !DILexicalBlockFile(scope: !1716, file: !13, discriminator: 4)
!6091 = !DILocation(line: 1083, column: 202, scope: !1715)
!6092 = !DILocation(line: 1083, column: 202, scope: !6093)
!6093 = !DILexicalBlockFile(scope: !1715, file: !13, discriminator: 5)
!6094 = !DILocation(line: 1084, column: 5, scope: !1718)
!6095 = !DILocation(line: 1086, column: 40, scope: !1552)
!6096 = !DILocation(line: 1086, column: 11, scope: !1552)
!6097 = !DILocation(line: 1086, column: 9, scope: !1552)
!6098 = !DILocation(line: 1087, column: 9, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1087, column: 9)
!6100 = !DILocation(line: 1087, column: 13, scope: !6099)
!6101 = !DILocation(line: 1087, column: 9, scope: !1552)
!6102 = !DILocation(line: 1088, column: 9, scope: !6099)
!6103 = !DILocation(line: 1089, column: 25, scope: !1552)
!6104 = !DILocation(line: 1089, column: 9, scope: !1552)
!6105 = !DILocation(line: 1089, column: 7, scope: !1552)
!6106 = !DILocation(line: 1090, column: 5, scope: !1552)
!6107 = !DILocation(line: 1090, column: 10, scope: !6108)
!6108 = !DILexicalBlockFile(scope: !1721, file: !13, discriminator: 1)
!6109 = !DILocation(line: 1090, column: 20, scope: !1721)
!6110 = !DILocation(line: 1090, column: 50, scope: !1721)
!6111 = !DILocation(line: 1090, column: 64, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !1721, file: !13, line: 1090, column: 61)
!6113 = !DILocation(line: 1090, column: 81, scope: !6112)
!6114 = !DILocation(line: 1090, column: 61, scope: !6112)
!6115 = !DILocation(line: 1090, column: 91, scope: !6112)
!6116 = !DILocation(line: 1090, column: 61, scope: !1721)
!6117 = !DILocation(line: 1090, column: 61, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !1721, file: !13, discriminator: 2)
!6119 = !DILocation(line: 1090, column: 122, scope: !6120)
!6120 = !DILexicalBlockFile(scope: !6112, file: !13, discriminator: 3)
!6121 = !DILocation(line: 1090, column: 140, scope: !6112)
!6122 = !DILocation(line: 1090, column: 150, scope: !6112)
!6123 = !DILocation(line: 1090, column: 175, scope: !6112)
!6124 = !DILocation(line: 1090, column: 106, scope: !6112)
!6125 = !DILocation(line: 1090, column: 194, scope: !5768)
!6126 = !DILocation(line: 1090, column: 194, scope: !1721)
!6127 = !DILocation(line: 1090, column: 194, scope: !6128)
!6128 = !DILexicalBlockFile(scope: !1721, file: !13, discriminator: 5)
!6129 = !DILocation(line: 1091, column: 9, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !1552, file: !13, line: 1091, column: 9)
!6131 = !DILocation(line: 1091, column: 11, scope: !6130)
!6132 = !DILocation(line: 1091, column: 9, scope: !1552)
!6133 = !DILocation(line: 1092, column: 9, scope: !6130)
!6134 = !DILocation(line: 1093, column: 38, scope: !1552)
!6135 = !DILocation(line: 1093, column: 22, scope: !1552)
!6136 = !DILocation(line: 1093, column: 28, scope: !1552)
!6137 = !DILocation(line: 1093, column: 36, scope: !1552)
!6138 = !DILocation(line: 1093, column: 5, scope: !1552)
!6139 = !DILocation(line: 1093, column: 11, scope: !1552)
!6140 = !DILocation(line: 1093, column: 20, scope: !1552)
!6141 = !DILocation(line: 1095, column: 43, scope: !1552)
!6142 = !DILocation(line: 1095, column: 23, scope: !1552)
!6143 = !DILocation(line: 1095, column: 5, scope: !1552)
!6144 = !DILocation(line: 1095, column: 11, scope: !1552)
!6145 = !DILocation(line: 1095, column: 21, scope: !1552)
!6146 = !{!3761, !1878, i64 94}
!6147 = !DILocation(line: 1097, column: 5, scope: !1552)
!6148 = !DILocation(line: 1097, column: 11, scope: !1552)
!6149 = !DILocation(line: 1097, column: 36, scope: !1552)
!6150 = !{!3761, !1878, i64 112}
!6151 = !DILocation(line: 1098, column: 9, scope: !1724)
!6152 = !DILocation(line: 1098, column: 15, scope: !1724)
!6153 = !DILocation(line: 1098, column: 24, scope: !1724)
!6154 = !DILocation(line: 1098, column: 27, scope: !6155)
!6155 = !DILexicalBlockFile(scope: !1724, file: !13, discriminator: 1)
!6156 = !DILocation(line: 1098, column: 33, scope: !1724)
!6157 = !DILocation(line: 1098, column: 27, scope: !1724)
!6158 = !DILocation(line: 1098, column: 9, scope: !1552)
!6159 = !DILocation(line: 1099, column: 9, scope: !1723)
!6160 = !DILocation(line: 1099, column: 19, scope: !1723)
!6161 = !DILocation(line: 1100, column: 9, scope: !1723)
!6162 = !DILocation(line: 1100, column: 13, scope: !1723)
!6163 = !DILocation(line: 1102, column: 9, scope: !1723)
!6164 = !DILocation(line: 1102, column: 15, scope: !1723)
!6165 = !DILocation(line: 1102, column: 40, scope: !1723)
!6166 = !DILocation(line: 1104, column: 48, scope: !1723)
!6167 = !DILocation(line: 1104, column: 56, scope: !1723)
!6168 = !DILocation(line: 1104, column: 21, scope: !1723)
!6169 = !DILocation(line: 1104, column: 19, scope: !1723)
!6170 = !DILocation(line: 1105, column: 13, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1105, column: 13)
!6172 = !DILocation(line: 1105, column: 23, scope: !6171)
!6173 = !DILocation(line: 1105, column: 13, scope: !1723)
!6174 = !DILocation(line: 1106, column: 13, scope: !6171)
!6175 = !DILocation(line: 1108, column: 40, scope: !1723)
!6176 = !DILocation(line: 1108, column: 51, scope: !1723)
!6177 = !DILocation(line: 1108, column: 15, scope: !1723)
!6178 = !DILocation(line: 1108, column: 13, scope: !1723)
!6179 = !DILocation(line: 1109, column: 9, scope: !1723)
!6180 = !DILocation(line: 1109, column: 14, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !1727, file: !13, discriminator: 1)
!6182 = !DILocation(line: 1109, column: 24, scope: !1727)
!6183 = !DILocation(line: 1109, column: 54, scope: !1727)
!6184 = !DILocation(line: 1109, column: 74, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !1727, file: !13, line: 1109, column: 71)
!6186 = !DILocation(line: 1109, column: 91, scope: !6185)
!6187 = !DILocation(line: 1109, column: 71, scope: !6185)
!6188 = !DILocation(line: 1109, column: 101, scope: !6185)
!6189 = !DILocation(line: 1109, column: 71, scope: !1727)
!6190 = !DILocation(line: 1109, column: 71, scope: !6191)
!6191 = !DILexicalBlockFile(scope: !1727, file: !13, discriminator: 2)
!6192 = !DILocation(line: 1109, column: 132, scope: !6193)
!6193 = !DILexicalBlockFile(scope: !6185, file: !13, discriminator: 3)
!6194 = !DILocation(line: 1109, column: 150, scope: !6185)
!6195 = !DILocation(line: 1109, column: 160, scope: !6185)
!6196 = !DILocation(line: 1109, column: 185, scope: !6185)
!6197 = !DILocation(line: 1109, column: 116, scope: !6185)
!6198 = !DILocation(line: 1109, column: 204, scope: !6199)
!6199 = !DILexicalBlockFile(scope: !1723, file: !13, discriminator: 4)
!6200 = !DILocation(line: 1109, column: 204, scope: !1727)
!6201 = !DILocation(line: 1109, column: 204, scope: !6202)
!6202 = !DILexicalBlockFile(scope: !1727, file: !13, discriminator: 5)
!6203 = !DILocation(line: 1110, column: 13, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !1723, file: !13, line: 1110, column: 13)
!6205 = !DILocation(line: 1110, column: 17, scope: !6204)
!6206 = !DILocation(line: 1110, column: 13, scope: !1723)
!6207 = !DILocation(line: 1111, column: 13, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6204, file: !13, line: 1110, column: 22)
!6209 = !DILocation(line: 1114, column: 13, scope: !1731)
!6210 = !DILocation(line: 1114, column: 17, scope: !1731)
!6211 = !DILocation(line: 1114, column: 13, scope: !1723)
!6212 = !DILocation(line: 1115, column: 13, scope: !1730)
!6213 = !DILocation(line: 1115, column: 19, scope: !1730)
!6214 = !DILocation(line: 1115, column: 44, scope: !1730)
!6215 = !DILocation(line: 1116, column: 46, scope: !1730)
!6216 = !DILocation(line: 1116, column: 52, scope: !1730)
!6217 = !DILocation(line: 1116, column: 61, scope: !1730)
!6218 = !DILocation(line: 1117, column: 46, scope: !1730)
!6219 = !DILocation(line: 1116, column: 19, scope: !1730)
!6220 = !DILocation(line: 1116, column: 17, scope: !1730)
!6221 = !DILocation(line: 1118, column: 17, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !1730, file: !13, line: 1118, column: 17)
!6223 = !DILocation(line: 1118, column: 21, scope: !6222)
!6224 = !DILocation(line: 1118, column: 17, scope: !1730)
!6225 = !DILocation(line: 1119, column: 17, scope: !6222)
!6226 = !DILocation(line: 1120, column: 13, scope: !1730)
!6227 = !DILocation(line: 1120, column: 18, scope: !6228)
!6228 = !DILexicalBlockFile(scope: !1729, file: !13, discriminator: 1)
!6229 = !DILocation(line: 1120, column: 28, scope: !1729)
!6230 = !DILocation(line: 1120, column: 58, scope: !1729)
!6231 = !DILocation(line: 1120, column: 72, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !1729, file: !13, line: 1120, column: 69)
!6233 = !DILocation(line: 1120, column: 89, scope: !6232)
!6234 = !DILocation(line: 1120, column: 69, scope: !6232)
!6235 = !DILocation(line: 1120, column: 99, scope: !6232)
!6236 = !DILocation(line: 1120, column: 69, scope: !1729)
!6237 = !DILocation(line: 1120, column: 69, scope: !6238)
!6238 = !DILexicalBlockFile(scope: !1729, file: !13, discriminator: 2)
!6239 = !DILocation(line: 1120, column: 130, scope: !6240)
!6240 = !DILexicalBlockFile(scope: !6232, file: !13, discriminator: 3)
!6241 = !DILocation(line: 1120, column: 148, scope: !6232)
!6242 = !DILocation(line: 1120, column: 158, scope: !6232)
!6243 = !DILocation(line: 1120, column: 183, scope: !6232)
!6244 = !DILocation(line: 1120, column: 114, scope: !6232)
!6245 = !DILocation(line: 1120, column: 202, scope: !6246)
!6246 = !DILexicalBlockFile(scope: !1730, file: !13, discriminator: 4)
!6247 = !DILocation(line: 1120, column: 202, scope: !1729)
!6248 = !DILocation(line: 1120, column: 202, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !1729, file: !13, discriminator: 5)
!6250 = !DILocation(line: 1121, column: 9, scope: !1730)
!6251 = !DILocation(line: 1122, column: 5, scope: !1724)
!6252 = !DILocation(line: 1122, column: 5, scope: !6155)
!6253 = !DILocation(line: 1122, column: 5, scope: !1723)
!6254 = !DILocation(line: 1124, column: 5, scope: !1552)
!6255 = !DILocation(line: 1124, column: 11, scope: !1552)
!6256 = !DILocation(line: 1124, column: 14, scope: !1552)
!6257 = !DILocation(line: 1125, column: 5, scope: !1552)
!6258 = !DILocation(line: 1128, column: 5, scope: !1552)
!6259 = !DILocation(line: 1128, column: 10, scope: !6260)
!6260 = !DILexicalBlockFile(scope: !1733, file: !13, discriminator: 1)
!6261 = !DILocation(line: 1128, column: 20, scope: !1733)
!6262 = !DILocation(line: 1128, column: 51, scope: !1733)
!6263 = !DILocation(line: 1128, column: 68, scope: !1736)
!6264 = !DILocation(line: 1128, column: 84, scope: !1736)
!6265 = !DILocation(line: 1128, column: 68, scope: !1733)
!6266 = !DILocation(line: 1128, column: 99, scope: !6267)
!6267 = !DILexicalBlockFile(scope: !1736, file: !13, discriminator: 2)
!6268 = !DILocation(line: 1128, column: 104, scope: !6269)
!6269 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 4)
!6270 = !DILocation(line: 1128, column: 114, scope: !1735)
!6271 = !DILocation(line: 1128, column: 144, scope: !1735)
!6272 = !DILocation(line: 1128, column: 170, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !1735, file: !13, line: 1128, column: 167)
!6274 = !DILocation(line: 1128, column: 187, scope: !6273)
!6275 = !DILocation(line: 1128, column: 167, scope: !6273)
!6276 = !DILocation(line: 1128, column: 197, scope: !6273)
!6277 = !DILocation(line: 1128, column: 167, scope: !1735)
!6278 = !DILocation(line: 1128, column: 167, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 5)
!6280 = !DILocation(line: 1128, column: 228, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !6273, file: !13, discriminator: 6)
!6282 = !DILocation(line: 1128, column: 246, scope: !6273)
!6283 = !DILocation(line: 1128, column: 256, scope: !6273)
!6284 = !DILocation(line: 1128, column: 281, scope: !6273)
!6285 = !DILocation(line: 1128, column: 212, scope: !6273)
!6286 = !DILocation(line: 1128, column: 300, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !1736, file: !13, discriminator: 7)
!6288 = !DILocation(line: 1128, column: 300, scope: !1735)
!6289 = !DILocation(line: 1128, column: 300, scope: !6290)
!6290 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 8)
!6291 = !DILocation(line: 1128, column: 300, scope: !6292)
!6292 = !DILexicalBlockFile(scope: !1735, file: !13, discriminator: 9)
!6293 = !DILocation(line: 1128, column: 313, scope: !4783)
!6294 = !DILocation(line: 1128, column: 313, scope: !1733)
!6295 = !DILocation(line: 1128, column: 313, scope: !6296)
!6296 = !DILexicalBlockFile(scope: !1733, file: !13, discriminator: 11)
!6297 = !DILocation(line: 1129, column: 5, scope: !1552)
!6298 = !DILocation(line: 1130, column: 1, scope: !1552)
!6299 = !DILocation(line: 62, column: 29, scope: !554)
!6300 = !DILocation(line: 64, column: 12, scope: !554)
!6301 = !DILocation(line: 64, column: 5, scope: !554)
!6302 = !DILocation(line: 75, column: 27, scope: !571)
!6303 = !DILocation(line: 75, column: 43, scope: !571)
!6304 = !DILocation(line: 77, column: 12, scope: !571)
!6305 = !DILocation(line: 77, column: 5, scope: !571)
!6306 = !DILocation(line: 87, column: 31, scope: !575)
!6307 = !DILocation(line: 87, column: 47, scope: !575)
!6308 = !DILocation(line: 89, column: 12, scope: !575)
!6309 = !DILocation(line: 89, column: 5, scope: !575)
!6310 = !DILocation(line: 99, column: 28, scope: !579)
!6311 = !DILocation(line: 99, column: 44, scope: !579)
!6312 = !DILocation(line: 101, column: 12, scope: !579)
!6313 = !DILocation(line: 101, column: 5, scope: !579)
!6314 = !DILocation(line: 46, column: 26, scope: !557)
!6315 = !DILocation(line: 48, column: 5, scope: !557)
!6316 = !DILocation(line: 48, column: 18, scope: !557)
!6317 = !DILocation(line: 48, column: 26, scope: !557)
!6318 = !DILocation(line: 49, column: 9, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !557, file: !13, line: 49, column: 9)
!6320 = !DILocation(line: 49, column: 15, scope: !6319)
!6321 = !DILocation(line: 49, column: 9, scope: !557)
!6322 = !DILocation(line: 50, column: 25, scope: !6319)
!6323 = !DILocation(line: 50, column: 32, scope: !6319)
!6324 = !DILocation(line: 50, column: 55, scope: !6319)
!6325 = !DILocation(line: 50, column: 9, scope: !6319)
!6326 = !DILocation(line: 52, column: 1, scope: !557)
!6327 = !DILocation(line: 51, column: 5, scope: !557)
!6328 = !DILocation(line: 111, column: 35, scope: !583)
!6329 = !DILocation(line: 111, column: 47, scope: !583)
!6330 = !DILocation(line: 113, column: 58, scope: !583)
!6331 = !DILocation(line: 113, column: 5, scope: !583)
!6332 = !DILocation(line: 125, column: 35, scope: !587)
!6333 = !DILocation(line: 125, column: 47, scope: !587)
!6334 = !DILocation(line: 127, column: 58, scope: !587)
!6335 = !DILocation(line: 127, column: 5, scope: !587)
!6336 = !DILocation(line: 137, column: 33, scope: !591)
!6337 = !DILocation(line: 137, column: 45, scope: !591)
!6338 = !DILocation(line: 139, column: 58, scope: !591)
!6339 = !DILocation(line: 139, column: 5, scope: !591)
!6340 = !DILocation(line: 499, column: 52, scope: !623)
!6341 = !DILocation(line: 500, column: 44, scope: !623)
!6342 = !DILocation(line: 500, column: 60, scope: !623)
!6343 = !DILocation(line: 502, column: 5, scope: !623)
!6344 = !DILocation(line: 502, column: 11, scope: !623)
!6345 = !DILocation(line: 503, column: 5, scope: !623)
!6346 = !DILocation(line: 503, column: 15, scope: !623)
!6347 = !DILocation(line: 504, column: 5, scope: !623)
!6348 = !DILocation(line: 504, column: 9, scope: !623)
!6349 = !DILocation(line: 506, column: 45, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !623, file: !13, line: 506, column: 9)
!6351 = !DILocation(line: 506, column: 51, scope: !6350)
!6352 = !DILocation(line: 507, column: 38, scope: !6350)
!6353 = !DILocation(line: 506, column: 10, scope: !6350)
!6354 = !DILocation(line: 506, column: 9, scope: !623)
!6355 = !DILocation(line: 508, column: 9, scope: !6350)
!6356 = !DILocation(line: 509, column: 61, scope: !623)
!6357 = !DILocation(line: 509, column: 48, scope: !623)
!6358 = !DILocation(line: 509, column: 67, scope: !623)
!6359 = !DILocation(line: 509, column: 74, scope: !623)
!6360 = !DILocation(line: 509, column: 12, scope: !623)
!6361 = !DILocation(line: 509, column: 5, scope: !623)
!6362 = !DILocation(line: 510, column: 1, scope: !623)
!6363 = !DILocation(line: 513, column: 54, scope: !636)
!6364 = !DILocation(line: 513, column: 70, scope: !636)
!6365 = !DILocation(line: 515, column: 5, scope: !636)
!6366 = !DILocation(line: 515, column: 15, scope: !636)
!6367 = !DILocation(line: 516, column: 5, scope: !636)
!6368 = !DILocation(line: 516, column: 24, scope: !636)
!6369 = !DILocation(line: 518, column: 9, scope: !647)
!6370 = !DILocation(line: 518, column: 15, scope: !647)
!6371 = !DILocation(line: 518, column: 23, scope: !647)
!6372 = !DILocation(line: 518, column: 9, scope: !636)
!6373 = !DILocation(line: 519, column: 9, scope: !646)
!6374 = !DILocation(line: 519, column: 19, scope: !646)
!6375 = !DILocation(line: 519, column: 54, scope: !646)
!6376 = !DILocation(line: 519, column: 60, scope: !646)
!6377 = !DILocation(line: 520, column: 12, scope: !646)
!6378 = !DILocation(line: 519, column: 27, scope: !646)
!6379 = !DILocation(line: 521, column: 13, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !646, file: !13, line: 521, column: 13)
!6381 = !DILocation(line: 521, column: 19, scope: !6380)
!6382 = !DILocation(line: 521, column: 13, scope: !646)
!6383 = !DILocation(line: 522, column: 13, scope: !6380)
!6384 = !DILocation(line: 523, column: 33, scope: !651)
!6385 = !DILocation(line: 523, column: 14, scope: !651)
!6386 = !DILocation(line: 523, column: 13, scope: !646)
!6387 = !DILocation(line: 524, column: 13, scope: !650)
!6388 = !DILocation(line: 524, column: 18, scope: !6389)
!6389 = !DILexicalBlockFile(scope: !649, file: !13, discriminator: 1)
!6390 = !DILocation(line: 524, column: 28, scope: !649)
!6391 = !DILocation(line: 524, column: 58, scope: !649)
!6392 = !DILocation(line: 524, column: 74, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !649, file: !13, line: 524, column: 71)
!6394 = !DILocation(line: 524, column: 91, scope: !6393)
!6395 = !DILocation(line: 524, column: 71, scope: !6393)
!6396 = !DILocation(line: 524, column: 101, scope: !6393)
!6397 = !DILocation(line: 524, column: 71, scope: !649)
!6398 = !DILocation(line: 524, column: 71, scope: !6399)
!6399 = !DILexicalBlockFile(scope: !649, file: !13, discriminator: 2)
!6400 = !DILocation(line: 524, column: 132, scope: !6401)
!6401 = !DILexicalBlockFile(scope: !6393, file: !13, discriminator: 3)
!6402 = !DILocation(line: 524, column: 150, scope: !6393)
!6403 = !DILocation(line: 524, column: 160, scope: !6393)
!6404 = !DILocation(line: 524, column: 185, scope: !6393)
!6405 = !DILocation(line: 524, column: 116, scope: !6393)
!6406 = !DILocation(line: 524, column: 204, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !650, file: !13, discriminator: 4)
!6408 = !DILocation(line: 524, column: 204, scope: !649)
!6409 = !DILocation(line: 524, column: 204, scope: !6410)
!6410 = !DILexicalBlockFile(scope: !649, file: !13, discriminator: 5)
!6411 = !DILocation(line: 525, column: 13, scope: !650)
!6412 = !DILocation(line: 527, column: 25, scope: !646)
!6413 = !DILocation(line: 527, column: 35, scope: !646)
!6414 = !DILocation(line: 527, column: 44, scope: !646)
!6415 = !DILocation(line: 528, column: 9, scope: !646)
!6416 = !DILocation(line: 528, column: 14, scope: !6417)
!6417 = !DILexicalBlockFile(scope: !653, file: !13, discriminator: 1)
!6418 = !DILocation(line: 528, column: 24, scope: !653)
!6419 = !DILocation(line: 528, column: 54, scope: !653)
!6420 = !DILocation(line: 528, column: 70, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !653, file: !13, line: 528, column: 67)
!6422 = !DILocation(line: 528, column: 87, scope: !6421)
!6423 = !DILocation(line: 528, column: 67, scope: !6421)
!6424 = !DILocation(line: 528, column: 97, scope: !6421)
!6425 = !DILocation(line: 528, column: 67, scope: !653)
!6426 = !DILocation(line: 528, column: 67, scope: !6427)
!6427 = !DILexicalBlockFile(scope: !653, file: !13, discriminator: 2)
!6428 = !DILocation(line: 528, column: 128, scope: !6429)
!6429 = !DILexicalBlockFile(scope: !6421, file: !13, discriminator: 3)
!6430 = !DILocation(line: 528, column: 146, scope: !6421)
!6431 = !DILocation(line: 528, column: 156, scope: !6421)
!6432 = !DILocation(line: 528, column: 181, scope: !6421)
!6433 = !DILocation(line: 528, column: 112, scope: !6421)
!6434 = !DILocation(line: 528, column: 200, scope: !6435)
!6435 = !DILexicalBlockFile(scope: !646, file: !13, discriminator: 4)
!6436 = !DILocation(line: 528, column: 200, scope: !653)
!6437 = !DILocation(line: 528, column: 200, scope: !6438)
!6438 = !DILexicalBlockFile(scope: !653, file: !13, discriminator: 5)
!6439 = !DILocation(line: 529, column: 5, scope: !647)
!6440 = !DILocation(line: 529, column: 5, scope: !6441)
!6441 = !DILexicalBlockFile(scope: !647, file: !13, discriminator: 1)
!6442 = !DILocation(line: 529, column: 5, scope: !646)
!6443 = !DILocation(line: 531, column: 18, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !647, file: !13, line: 530, column: 10)
!6445 = !DILocation(line: 531, column: 16, scope: !6444)
!6446 = !DILocation(line: 532, column: 14, scope: !6444)
!6447 = !{!6448, !6448, i64 0}
!6448 = !{!"long long", !1878, i64 0}
!6449 = !DILocation(line: 534, column: 10, scope: !636)
!6450 = !DILocation(line: 535, column: 9, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !636, file: !13, line: 535, column: 9)
!6452 = !DILocation(line: 535, column: 15, scope: !6451)
!6453 = !DILocation(line: 535, column: 9, scope: !636)
!6454 = !DILocation(line: 536, column: 14, scope: !6451)
!6455 = !DILocation(line: 536, column: 9, scope: !6451)
!6456 = !DILocation(line: 537, column: 39, scope: !636)
!6457 = !DILocation(line: 537, column: 47, scope: !636)
!6458 = !DILocation(line: 537, column: 12, scope: !636)
!6459 = !DILocation(line: 537, column: 5, scope: !636)
!6460 = !DILocation(line: 538, column: 1, scope: !636)
!6461 = !DILocation(line: 541, column: 54, scope: !654)
!6462 = !DILocation(line: 541, column: 70, scope: !654)
!6463 = !DILocation(line: 543, column: 5, scope: !654)
!6464 = !DILocation(line: 543, column: 15, scope: !654)
!6465 = !DILocation(line: 544, column: 5, scope: !654)
!6466 = !DILocation(line: 544, column: 24, scope: !654)
!6467 = !DILocation(line: 546, column: 29, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !654, file: !13, line: 546, column: 9)
!6469 = !DILocation(line: 546, column: 10, scope: !6468)
!6470 = !DILocation(line: 546, column: 9, scope: !654)
!6471 = !DILocation(line: 547, column: 9, scope: !6468)
!6472 = !DILocation(line: 549, column: 29, scope: !654)
!6473 = !DILocation(line: 549, column: 23, scope: !654)
!6474 = !DILocation(line: 549, column: 34, scope: !654)
!6475 = !DILocation(line: 549, column: 5, scope: !654)
!6476 = !DILocation(line: 549, column: 11, scope: !654)
!6477 = !DILocation(line: 549, column: 21, scope: !654)
!6478 = !DILocation(line: 550, column: 10, scope: !654)
!6479 = !DILocation(line: 552, column: 9, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !654, file: !13, line: 552, column: 9)
!6481 = !DILocation(line: 552, column: 15, scope: !6480)
!6482 = !DILocation(line: 552, column: 23, scope: !6480)
!6483 = !DILocation(line: 552, column: 9, scope: !654)
!6484 = !DILocation(line: 553, column: 45, scope: !6480)
!6485 = !DILocation(line: 553, column: 51, scope: !6480)
!6486 = !DILocation(line: 554, column: 65, scope: !6480)
!6487 = !DILocation(line: 554, column: 73, scope: !6480)
!6488 = !DILocation(line: 553, column: 16, scope: !6480)
!6489 = !DILocation(line: 553, column: 9, scope: !6480)
!6490 = !DILocation(line: 556, column: 62, scope: !6480)
!6491 = !DILocation(line: 556, column: 9, scope: !6480)
!6492 = !DILocation(line: 557, column: 1, scope: !654)
!6493 = !DILocation(line: 560, column: 51, scope: !660)
!6494 = !DILocation(line: 560, column: 67, scope: !660)
!6495 = !DILocation(line: 562, column: 5, scope: !660)
!6496 = !DILocation(line: 562, column: 11, scope: !660)
!6497 = !DILocation(line: 562, column: 18, scope: !660)
!6498 = !DILocation(line: 563, column: 5, scope: !660)
!6499 = !DILocation(line: 563, column: 11, scope: !660)
!6500 = !DILocation(line: 563, column: 21, scope: !660)
!6501 = !DILocation(line: 564, column: 9, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !660, file: !13, line: 564, column: 9)
!6503 = !DILocation(line: 564, column: 15, scope: !6502)
!6504 = !DILocation(line: 564, column: 23, scope: !6502)
!6505 = !DILocation(line: 564, column: 9, scope: !660)
!6506 = !DILocation(line: 565, column: 43, scope: !6502)
!6507 = !DILocation(line: 565, column: 49, scope: !6502)
!6508 = !DILocation(line: 565, column: 58, scope: !6502)
!6509 = !DILocation(line: 565, column: 16, scope: !6502)
!6510 = !DILocation(line: 565, column: 9, scope: !6502)
!6511 = !DILocation(line: 567, column: 62, scope: !6502)
!6512 = !DILocation(line: 567, column: 9, scope: !6502)
!6513 = !DILocation(line: 568, column: 1, scope: !660)
!6514 = !DILocation(line: 571, column: 58, scope: !664)
!6515 = !DILocation(line: 571, column: 70, scope: !664)
!6516 = !DILocation(line: 573, column: 13, scope: !664)
!6517 = !DILocation(line: 573, column: 19, scope: !664)
!6518 = !DILocation(line: 575, column: 16, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !664, file: !13, line: 573, column: 27)
!6520 = !DILocation(line: 575, column: 9, scope: !6519)
!6521 = !DILocation(line: 577, column: 16, scope: !6519)
!6522 = !DILocation(line: 577, column: 9, scope: !6519)
!6523 = !DILocation(line: 579, column: 16, scope: !6519)
!6524 = !DILocation(line: 579, column: 9, scope: !6519)
!6525 = !DILocation(line: 581, column: 16, scope: !6519)
!6526 = !DILocation(line: 581, column: 9, scope: !6519)
!6527 = !DILocation(line: 583, column: 16, scope: !6519)
!6528 = !DILocation(line: 583, column: 9, scope: !6519)
!6529 = !DILocation(line: 585, column: 16, scope: !6519)
!6530 = !DILocation(line: 585, column: 9, scope: !6519)
!6531 = !DILocation(line: 587, column: 16, scope: !6519)
!6532 = !DILocation(line: 587, column: 9, scope: !6519)
!6533 = !DILocation(line: 589, column: 62, scope: !6519)
!6534 = !DILocation(line: 589, column: 9, scope: !6519)
!6535 = !DILocation(line: 592, column: 1, scope: !664)
!6536 = !DILocation(line: 1133, column: 30, scope: !741)
!6537 = !DILocation(line: 1135, column: 5, scope: !741)
!6538 = !DILocation(line: 1135, column: 11, scope: !741)
!6539 = !DILocation(line: 1135, column: 14, scope: !741)
!6540 = !DILocation(line: 1136, column: 5, scope: !741)
!6541 = !DILocation(line: 1136, column: 10, scope: !6542)
!6542 = !DILexicalBlockFile(scope: !747, file: !13, discriminator: 1)
!6543 = !DILocation(line: 1136, column: 20, scope: !747)
!6544 = !DILocation(line: 1136, column: 43, scope: !747)
!6545 = !DILocation(line: 1136, column: 49, scope: !747)
!6546 = !DILocation(line: 1136, column: 62, scope: !751)
!6547 = !DILocation(line: 1136, column: 70, scope: !751)
!6548 = !DILocation(line: 1136, column: 62, scope: !747)
!6549 = !DILocation(line: 1136, column: 88, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !750, file: !13, discriminator: 2)
!6551 = !DILocation(line: 1136, column: 94, scope: !750)
!6552 = !DILocation(line: 1136, column: 102, scope: !750)
!6553 = !DILocation(line: 1136, column: 116, scope: !750)
!6554 = !DILocation(line: 1136, column: 121, scope: !6555)
!6555 = !DILexicalBlockFile(scope: !749, file: !13, discriminator: 4)
!6556 = !DILocation(line: 1136, column: 131, scope: !749)
!6557 = !DILocation(line: 1136, column: 161, scope: !749)
!6558 = !DILocation(line: 1136, column: 179, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !749, file: !13, line: 1136, column: 176)
!6560 = !DILocation(line: 1136, column: 196, scope: !6559)
!6561 = !DILocation(line: 1136, column: 176, scope: !6559)
!6562 = !DILocation(line: 1136, column: 206, scope: !6559)
!6563 = !DILocation(line: 1136, column: 176, scope: !749)
!6564 = !DILocation(line: 1136, column: 176, scope: !6565)
!6565 = !DILexicalBlockFile(scope: !749, file: !13, discriminator: 5)
!6566 = !DILocation(line: 1136, column: 237, scope: !6567)
!6567 = !DILexicalBlockFile(scope: !6559, file: !13, discriminator: 6)
!6568 = !DILocation(line: 1136, column: 255, scope: !6559)
!6569 = !DILocation(line: 1136, column: 265, scope: !6559)
!6570 = !DILocation(line: 1136, column: 290, scope: !6559)
!6571 = !DILocation(line: 1136, column: 221, scope: !6559)
!6572 = !DILocation(line: 1136, column: 309, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !750, file: !13, discriminator: 7)
!6574 = !DILocation(line: 1136, column: 309, scope: !749)
!6575 = !DILocation(line: 1136, column: 309, scope: !6576)
!6576 = !DILexicalBlockFile(scope: !749, file: !13, discriminator: 8)
!6577 = !DILocation(line: 1136, column: 322, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !750, file: !13, discriminator: 9)
!6579 = !DILocation(line: 1136, column: 324, scope: !6580)
!6580 = !DILexicalBlockFile(scope: !6581, file: !13, discriminator: 10)
!6581 = !DILexicalBlockFile(scope: !741, file: !13, discriminator: 3)
!6582 = !DILocation(line: 1136, column: 324, scope: !747)
!6583 = !DILocation(line: 1137, column: 5, scope: !741)
!6584 = !DILocation(line: 1137, column: 10, scope: !6585)
!6585 = !DILexicalBlockFile(scope: !753, file: !13, discriminator: 1)
!6586 = !DILocation(line: 1137, column: 20, scope: !753)
!6587 = !DILocation(line: 1137, column: 43, scope: !753)
!6588 = !DILocation(line: 1137, column: 49, scope: !753)
!6589 = !DILocation(line: 1137, column: 64, scope: !757)
!6590 = !DILocation(line: 1137, column: 72, scope: !757)
!6591 = !DILocation(line: 1137, column: 64, scope: !753)
!6592 = !DILocation(line: 1137, column: 90, scope: !6593)
!6593 = !DILexicalBlockFile(scope: !756, file: !13, discriminator: 2)
!6594 = !DILocation(line: 1137, column: 96, scope: !756)
!6595 = !DILocation(line: 1137, column: 106, scope: !756)
!6596 = !DILocation(line: 1137, column: 120, scope: !756)
!6597 = !DILocation(line: 1137, column: 125, scope: !6598)
!6598 = !DILexicalBlockFile(scope: !755, file: !13, discriminator: 4)
!6599 = !DILocation(line: 1137, column: 135, scope: !755)
!6600 = !DILocation(line: 1137, column: 165, scope: !755)
!6601 = !DILocation(line: 1137, column: 183, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !755, file: !13, line: 1137, column: 180)
!6603 = !DILocation(line: 1137, column: 200, scope: !6602)
!6604 = !DILocation(line: 1137, column: 180, scope: !6602)
!6605 = !DILocation(line: 1137, column: 210, scope: !6602)
!6606 = !DILocation(line: 1137, column: 180, scope: !755)
!6607 = !DILocation(line: 1137, column: 180, scope: !6608)
!6608 = !DILexicalBlockFile(scope: !755, file: !13, discriminator: 5)
!6609 = !DILocation(line: 1137, column: 241, scope: !6610)
!6610 = !DILexicalBlockFile(scope: !6602, file: !13, discriminator: 6)
!6611 = !DILocation(line: 1137, column: 259, scope: !6602)
!6612 = !DILocation(line: 1137, column: 269, scope: !6602)
!6613 = !DILocation(line: 1137, column: 294, scope: !6602)
!6614 = !DILocation(line: 1137, column: 225, scope: !6602)
!6615 = !DILocation(line: 1137, column: 313, scope: !6616)
!6616 = !DILexicalBlockFile(scope: !756, file: !13, discriminator: 7)
!6617 = !DILocation(line: 1137, column: 313, scope: !755)
!6618 = !DILocation(line: 1137, column: 313, scope: !6619)
!6619 = !DILexicalBlockFile(scope: !755, file: !13, discriminator: 8)
!6620 = !DILocation(line: 1137, column: 326, scope: !6621)
!6621 = !DILexicalBlockFile(scope: !756, file: !13, discriminator: 9)
!6622 = !DILocation(line: 1137, column: 328, scope: !6580)
!6623 = !DILocation(line: 1137, column: 328, scope: !753)
!6624 = !DILocation(line: 1138, column: 5, scope: !741)
!6625 = !DILocation(line: 1138, column: 10, scope: !6626)
!6626 = !DILexicalBlockFile(scope: !759, file: !13, discriminator: 1)
!6627 = !DILocation(line: 1138, column: 20, scope: !759)
!6628 = !DILocation(line: 1138, column: 43, scope: !759)
!6629 = !DILocation(line: 1138, column: 49, scope: !759)
!6630 = !DILocation(line: 1138, column: 63, scope: !763)
!6631 = !DILocation(line: 1138, column: 71, scope: !763)
!6632 = !DILocation(line: 1138, column: 63, scope: !759)
!6633 = !DILocation(line: 1138, column: 89, scope: !6634)
!6634 = !DILexicalBlockFile(scope: !762, file: !13, discriminator: 2)
!6635 = !DILocation(line: 1138, column: 95, scope: !762)
!6636 = !DILocation(line: 1138, column: 104, scope: !762)
!6637 = !DILocation(line: 1138, column: 118, scope: !762)
!6638 = !DILocation(line: 1138, column: 123, scope: !6639)
!6639 = !DILexicalBlockFile(scope: !761, file: !13, discriminator: 4)
!6640 = !DILocation(line: 1138, column: 133, scope: !761)
!6641 = !DILocation(line: 1138, column: 163, scope: !761)
!6642 = !DILocation(line: 1138, column: 181, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !761, file: !13, line: 1138, column: 178)
!6644 = !DILocation(line: 1138, column: 198, scope: !6643)
!6645 = !DILocation(line: 1138, column: 178, scope: !6643)
!6646 = !DILocation(line: 1138, column: 208, scope: !6643)
!6647 = !DILocation(line: 1138, column: 178, scope: !761)
!6648 = !DILocation(line: 1138, column: 178, scope: !6649)
!6649 = !DILexicalBlockFile(scope: !761, file: !13, discriminator: 5)
!6650 = !DILocation(line: 1138, column: 239, scope: !6651)
!6651 = !DILexicalBlockFile(scope: !6643, file: !13, discriminator: 6)
!6652 = !DILocation(line: 1138, column: 257, scope: !6643)
!6653 = !DILocation(line: 1138, column: 267, scope: !6643)
!6654 = !DILocation(line: 1138, column: 292, scope: !6643)
!6655 = !DILocation(line: 1138, column: 223, scope: !6643)
!6656 = !DILocation(line: 1138, column: 311, scope: !6657)
!6657 = !DILexicalBlockFile(scope: !762, file: !13, discriminator: 7)
!6658 = !DILocation(line: 1138, column: 311, scope: !761)
!6659 = !DILocation(line: 1138, column: 311, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !761, file: !13, discriminator: 8)
!6661 = !DILocation(line: 1138, column: 324, scope: !6662)
!6662 = !DILexicalBlockFile(scope: !762, file: !13, discriminator: 9)
!6663 = !DILocation(line: 1138, column: 326, scope: !6580)
!6664 = !DILocation(line: 1138, column: 326, scope: !759)
!6665 = !DILocation(line: 1139, column: 5, scope: !741)
!6666 = !DILocation(line: 1139, column: 10, scope: !6667)
!6667 = !DILexicalBlockFile(scope: !765, file: !13, discriminator: 1)
!6668 = !DILocation(line: 1139, column: 20, scope: !765)
!6669 = !DILocation(line: 1139, column: 43, scope: !765)
!6670 = !DILocation(line: 1139, column: 49, scope: !765)
!6671 = !DILocation(line: 1139, column: 63, scope: !769)
!6672 = !DILocation(line: 1139, column: 71, scope: !769)
!6673 = !DILocation(line: 1139, column: 63, scope: !765)
!6674 = !DILocation(line: 1139, column: 89, scope: !6675)
!6675 = !DILexicalBlockFile(scope: !768, file: !13, discriminator: 2)
!6676 = !DILocation(line: 1139, column: 95, scope: !768)
!6677 = !DILocation(line: 1139, column: 104, scope: !768)
!6678 = !DILocation(line: 1139, column: 118, scope: !768)
!6679 = !DILocation(line: 1139, column: 123, scope: !6680)
!6680 = !DILexicalBlockFile(scope: !767, file: !13, discriminator: 4)
!6681 = !DILocation(line: 1139, column: 133, scope: !767)
!6682 = !DILocation(line: 1139, column: 163, scope: !767)
!6683 = !DILocation(line: 1139, column: 181, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !767, file: !13, line: 1139, column: 178)
!6685 = !DILocation(line: 1139, column: 198, scope: !6684)
!6686 = !DILocation(line: 1139, column: 178, scope: !6684)
!6687 = !DILocation(line: 1139, column: 208, scope: !6684)
!6688 = !DILocation(line: 1139, column: 178, scope: !767)
!6689 = !DILocation(line: 1139, column: 178, scope: !6690)
!6690 = !DILexicalBlockFile(scope: !767, file: !13, discriminator: 5)
!6691 = !DILocation(line: 1139, column: 239, scope: !6692)
!6692 = !DILexicalBlockFile(scope: !6684, file: !13, discriminator: 6)
!6693 = !DILocation(line: 1139, column: 257, scope: !6684)
!6694 = !DILocation(line: 1139, column: 267, scope: !6684)
!6695 = !DILocation(line: 1139, column: 292, scope: !6684)
!6696 = !DILocation(line: 1139, column: 223, scope: !6684)
!6697 = !DILocation(line: 1139, column: 311, scope: !6698)
!6698 = !DILexicalBlockFile(scope: !768, file: !13, discriminator: 7)
!6699 = !DILocation(line: 1139, column: 311, scope: !767)
!6700 = !DILocation(line: 1139, column: 311, scope: !6701)
!6701 = !DILexicalBlockFile(scope: !767, file: !13, discriminator: 8)
!6702 = !DILocation(line: 1139, column: 324, scope: !6703)
!6703 = !DILexicalBlockFile(scope: !768, file: !13, discriminator: 9)
!6704 = !DILocation(line: 1139, column: 326, scope: !6580)
!6705 = !DILocation(line: 1139, column: 326, scope: !765)
!6706 = !DILocation(line: 1140, column: 5, scope: !741)
!6707 = !DILocation(line: 1140, column: 10, scope: !6708)
!6708 = !DILexicalBlockFile(scope: !771, file: !13, discriminator: 1)
!6709 = !DILocation(line: 1140, column: 20, scope: !771)
!6710 = !DILocation(line: 1140, column: 43, scope: !771)
!6711 = !DILocation(line: 1140, column: 49, scope: !771)
!6712 = !DILocation(line: 1140, column: 62, scope: !775)
!6713 = !DILocation(line: 1140, column: 70, scope: !775)
!6714 = !DILocation(line: 1140, column: 62, scope: !771)
!6715 = !DILocation(line: 1140, column: 88, scope: !6716)
!6716 = !DILexicalBlockFile(scope: !774, file: !13, discriminator: 2)
!6717 = !DILocation(line: 1140, column: 94, scope: !774)
!6718 = !DILocation(line: 1140, column: 102, scope: !774)
!6719 = !DILocation(line: 1140, column: 116, scope: !774)
!6720 = !DILocation(line: 1140, column: 121, scope: !6721)
!6721 = !DILexicalBlockFile(scope: !773, file: !13, discriminator: 4)
!6722 = !DILocation(line: 1140, column: 131, scope: !773)
!6723 = !DILocation(line: 1140, column: 161, scope: !773)
!6724 = !DILocation(line: 1140, column: 179, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !773, file: !13, line: 1140, column: 176)
!6726 = !DILocation(line: 1140, column: 196, scope: !6725)
!6727 = !DILocation(line: 1140, column: 176, scope: !6725)
!6728 = !DILocation(line: 1140, column: 206, scope: !6725)
!6729 = !DILocation(line: 1140, column: 176, scope: !773)
!6730 = !DILocation(line: 1140, column: 176, scope: !6731)
!6731 = !DILexicalBlockFile(scope: !773, file: !13, discriminator: 5)
!6732 = !DILocation(line: 1140, column: 237, scope: !6733)
!6733 = !DILexicalBlockFile(scope: !6725, file: !13, discriminator: 6)
!6734 = !DILocation(line: 1140, column: 255, scope: !6725)
!6735 = !DILocation(line: 1140, column: 265, scope: !6725)
!6736 = !DILocation(line: 1140, column: 290, scope: !6725)
!6737 = !DILocation(line: 1140, column: 221, scope: !6725)
!6738 = !DILocation(line: 1140, column: 309, scope: !6739)
!6739 = !DILexicalBlockFile(scope: !774, file: !13, discriminator: 7)
!6740 = !DILocation(line: 1140, column: 309, scope: !773)
!6741 = !DILocation(line: 1140, column: 309, scope: !6742)
!6742 = !DILexicalBlockFile(scope: !773, file: !13, discriminator: 8)
!6743 = !DILocation(line: 1140, column: 322, scope: !6744)
!6744 = !DILexicalBlockFile(scope: !774, file: !13, discriminator: 9)
!6745 = !DILocation(line: 1140, column: 324, scope: !6580)
!6746 = !DILocation(line: 1140, column: 324, scope: !771)
!6747 = !DILocation(line: 1141, column: 5, scope: !741)
!6748 = !DILocation(line: 1141, column: 10, scope: !6749)
!6749 = !DILexicalBlockFile(scope: !777, file: !13, discriminator: 1)
!6750 = !DILocation(line: 1141, column: 20, scope: !777)
!6751 = !DILocation(line: 1141, column: 43, scope: !777)
!6752 = !DILocation(line: 1141, column: 49, scope: !777)
!6753 = !DILocation(line: 1141, column: 69, scope: !781)
!6754 = !DILocation(line: 1141, column: 77, scope: !781)
!6755 = !DILocation(line: 1141, column: 69, scope: !777)
!6756 = !DILocation(line: 1141, column: 95, scope: !6757)
!6757 = !DILexicalBlockFile(scope: !780, file: !13, discriminator: 2)
!6758 = !DILocation(line: 1141, column: 101, scope: !780)
!6759 = !DILocation(line: 1141, column: 116, scope: !780)
!6760 = !DILocation(line: 1141, column: 130, scope: !780)
!6761 = !DILocation(line: 1141, column: 135, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !779, file: !13, discriminator: 4)
!6763 = !DILocation(line: 1141, column: 145, scope: !779)
!6764 = !DILocation(line: 1141, column: 175, scope: !779)
!6765 = !DILocation(line: 1141, column: 193, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !779, file: !13, line: 1141, column: 190)
!6767 = !DILocation(line: 1141, column: 210, scope: !6766)
!6768 = !DILocation(line: 1141, column: 190, scope: !6766)
!6769 = !DILocation(line: 1141, column: 220, scope: !6766)
!6770 = !DILocation(line: 1141, column: 190, scope: !779)
!6771 = !DILocation(line: 1141, column: 190, scope: !6772)
!6772 = !DILexicalBlockFile(scope: !779, file: !13, discriminator: 5)
!6773 = !DILocation(line: 1141, column: 251, scope: !6774)
!6774 = !DILexicalBlockFile(scope: !6766, file: !13, discriminator: 6)
!6775 = !DILocation(line: 1141, column: 269, scope: !6766)
!6776 = !DILocation(line: 1141, column: 279, scope: !6766)
!6777 = !DILocation(line: 1141, column: 304, scope: !6766)
!6778 = !DILocation(line: 1141, column: 235, scope: !6766)
!6779 = !DILocation(line: 1141, column: 323, scope: !6780)
!6780 = !DILexicalBlockFile(scope: !780, file: !13, discriminator: 7)
!6781 = !DILocation(line: 1141, column: 323, scope: !779)
!6782 = !DILocation(line: 1141, column: 323, scope: !6783)
!6783 = !DILexicalBlockFile(scope: !779, file: !13, discriminator: 8)
!6784 = !DILocation(line: 1141, column: 336, scope: !6785)
!6785 = !DILexicalBlockFile(scope: !780, file: !13, discriminator: 9)
!6786 = !DILocation(line: 1141, column: 338, scope: !6580)
!6787 = !DILocation(line: 1141, column: 338, scope: !777)
!6788 = !DILocation(line: 1142, column: 5, scope: !741)
!6789 = !DILocation(line: 1142, column: 10, scope: !6790)
!6790 = !DILexicalBlockFile(scope: !783, file: !13, discriminator: 1)
!6791 = !DILocation(line: 1142, column: 20, scope: !783)
!6792 = !DILocation(line: 1142, column: 43, scope: !783)
!6793 = !DILocation(line: 1142, column: 49, scope: !783)
!6794 = !DILocation(line: 1142, column: 69, scope: !787)
!6795 = !DILocation(line: 1142, column: 77, scope: !787)
!6796 = !DILocation(line: 1142, column: 69, scope: !783)
!6797 = !DILocation(line: 1142, column: 95, scope: !6798)
!6798 = !DILexicalBlockFile(scope: !786, file: !13, discriminator: 2)
!6799 = !DILocation(line: 1142, column: 101, scope: !786)
!6800 = !DILocation(line: 1142, column: 116, scope: !786)
!6801 = !DILocation(line: 1142, column: 130, scope: !786)
!6802 = !DILocation(line: 1142, column: 135, scope: !6803)
!6803 = !DILexicalBlockFile(scope: !785, file: !13, discriminator: 4)
!6804 = !DILocation(line: 1142, column: 145, scope: !785)
!6805 = !DILocation(line: 1142, column: 175, scope: !785)
!6806 = !DILocation(line: 1142, column: 193, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !785, file: !13, line: 1142, column: 190)
!6808 = !DILocation(line: 1142, column: 210, scope: !6807)
!6809 = !DILocation(line: 1142, column: 190, scope: !6807)
!6810 = !DILocation(line: 1142, column: 220, scope: !6807)
!6811 = !DILocation(line: 1142, column: 190, scope: !785)
!6812 = !DILocation(line: 1142, column: 190, scope: !6813)
!6813 = !DILexicalBlockFile(scope: !785, file: !13, discriminator: 5)
!6814 = !DILocation(line: 1142, column: 251, scope: !6815)
!6815 = !DILexicalBlockFile(scope: !6807, file: !13, discriminator: 6)
!6816 = !DILocation(line: 1142, column: 269, scope: !6807)
!6817 = !DILocation(line: 1142, column: 279, scope: !6807)
!6818 = !DILocation(line: 1142, column: 304, scope: !6807)
!6819 = !DILocation(line: 1142, column: 235, scope: !6807)
!6820 = !DILocation(line: 1142, column: 323, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !786, file: !13, discriminator: 7)
!6822 = !DILocation(line: 1142, column: 323, scope: !785)
!6823 = !DILocation(line: 1142, column: 323, scope: !6824)
!6824 = !DILexicalBlockFile(scope: !785, file: !13, discriminator: 8)
!6825 = !DILocation(line: 1142, column: 336, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !786, file: !13, discriminator: 9)
!6827 = !DILocation(line: 1142, column: 338, scope: !6580)
!6828 = !DILocation(line: 1142, column: 338, scope: !783)
!6829 = !DILocation(line: 1143, column: 5, scope: !741)
!6830 = !DILocation(line: 1143, column: 10, scope: !6831)
!6831 = !DILexicalBlockFile(scope: !789, file: !13, discriminator: 1)
!6832 = !DILocation(line: 1143, column: 20, scope: !789)
!6833 = !DILocation(line: 1143, column: 43, scope: !789)
!6834 = !DILocation(line: 1143, column: 49, scope: !789)
!6835 = !DILocation(line: 1143, column: 64, scope: !793)
!6836 = !DILocation(line: 1143, column: 72, scope: !793)
!6837 = !DILocation(line: 1143, column: 64, scope: !789)
!6838 = !DILocation(line: 1143, column: 90, scope: !6839)
!6839 = !DILexicalBlockFile(scope: !792, file: !13, discriminator: 2)
!6840 = !DILocation(line: 1143, column: 96, scope: !792)
!6841 = !DILocation(line: 1143, column: 106, scope: !792)
!6842 = !DILocation(line: 1143, column: 120, scope: !792)
!6843 = !DILocation(line: 1143, column: 125, scope: !6844)
!6844 = !DILexicalBlockFile(scope: !791, file: !13, discriminator: 4)
!6845 = !DILocation(line: 1143, column: 135, scope: !791)
!6846 = !DILocation(line: 1143, column: 165, scope: !791)
!6847 = !DILocation(line: 1143, column: 183, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !791, file: !13, line: 1143, column: 180)
!6849 = !DILocation(line: 1143, column: 200, scope: !6848)
!6850 = !DILocation(line: 1143, column: 180, scope: !6848)
!6851 = !DILocation(line: 1143, column: 210, scope: !6848)
!6852 = !DILocation(line: 1143, column: 180, scope: !791)
!6853 = !DILocation(line: 1143, column: 180, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !791, file: !13, discriminator: 5)
!6855 = !DILocation(line: 1143, column: 241, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6848, file: !13, discriminator: 6)
!6857 = !DILocation(line: 1143, column: 259, scope: !6848)
!6858 = !DILocation(line: 1143, column: 269, scope: !6848)
!6859 = !DILocation(line: 1143, column: 294, scope: !6848)
!6860 = !DILocation(line: 1143, column: 225, scope: !6848)
!6861 = !DILocation(line: 1143, column: 313, scope: !6862)
!6862 = !DILexicalBlockFile(scope: !792, file: !13, discriminator: 7)
!6863 = !DILocation(line: 1143, column: 313, scope: !791)
!6864 = !DILocation(line: 1143, column: 313, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !791, file: !13, discriminator: 8)
!6866 = !DILocation(line: 1143, column: 326, scope: !6867)
!6867 = !DILexicalBlockFile(scope: !792, file: !13, discriminator: 9)
!6868 = !DILocation(line: 1143, column: 328, scope: !6580)
!6869 = !DILocation(line: 1143, column: 328, scope: !789)
!6870 = !DILocation(line: 1144, column: 5, scope: !741)
!6871 = !DILocation(line: 1144, column: 10, scope: !6872)
!6872 = !DILexicalBlockFile(scope: !795, file: !13, discriminator: 1)
!6873 = !DILocation(line: 1144, column: 20, scope: !795)
!6874 = !DILocation(line: 1144, column: 43, scope: !795)
!6875 = !DILocation(line: 1144, column: 49, scope: !795)
!6876 = !DILocation(line: 1144, column: 62, scope: !799)
!6877 = !DILocation(line: 1144, column: 70, scope: !799)
!6878 = !DILocation(line: 1144, column: 62, scope: !795)
!6879 = !DILocation(line: 1144, column: 88, scope: !6880)
!6880 = !DILexicalBlockFile(scope: !798, file: !13, discriminator: 2)
!6881 = !DILocation(line: 1144, column: 94, scope: !798)
!6882 = !DILocation(line: 1144, column: 102, scope: !798)
!6883 = !DILocation(line: 1144, column: 116, scope: !798)
!6884 = !DILocation(line: 1144, column: 121, scope: !6885)
!6885 = !DILexicalBlockFile(scope: !797, file: !13, discriminator: 4)
!6886 = !DILocation(line: 1144, column: 131, scope: !797)
!6887 = !DILocation(line: 1144, column: 161, scope: !797)
!6888 = !DILocation(line: 1144, column: 179, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !797, file: !13, line: 1144, column: 176)
!6890 = !DILocation(line: 1144, column: 196, scope: !6889)
!6891 = !DILocation(line: 1144, column: 176, scope: !6889)
!6892 = !DILocation(line: 1144, column: 206, scope: !6889)
!6893 = !DILocation(line: 1144, column: 176, scope: !797)
!6894 = !DILocation(line: 1144, column: 176, scope: !6895)
!6895 = !DILexicalBlockFile(scope: !797, file: !13, discriminator: 5)
!6896 = !DILocation(line: 1144, column: 237, scope: !6897)
!6897 = !DILexicalBlockFile(scope: !6889, file: !13, discriminator: 6)
!6898 = !DILocation(line: 1144, column: 255, scope: !6889)
!6899 = !DILocation(line: 1144, column: 265, scope: !6889)
!6900 = !DILocation(line: 1144, column: 290, scope: !6889)
!6901 = !DILocation(line: 1144, column: 221, scope: !6889)
!6902 = !DILocation(line: 1144, column: 309, scope: !6903)
!6903 = !DILexicalBlockFile(scope: !798, file: !13, discriminator: 7)
!6904 = !DILocation(line: 1144, column: 309, scope: !797)
!6905 = !DILocation(line: 1144, column: 309, scope: !6906)
!6906 = !DILexicalBlockFile(scope: !797, file: !13, discriminator: 8)
!6907 = !DILocation(line: 1144, column: 322, scope: !6908)
!6908 = !DILexicalBlockFile(scope: !798, file: !13, discriminator: 9)
!6909 = !DILocation(line: 1144, column: 324, scope: !6580)
!6910 = !DILocation(line: 1144, column: 324, scope: !795)
!6911 = !DILocation(line: 1145, column: 5, scope: !741)
!6912 = !DILocation(line: 1145, column: 10, scope: !6913)
!6913 = !DILexicalBlockFile(scope: !801, file: !13, discriminator: 1)
!6914 = !DILocation(line: 1145, column: 20, scope: !801)
!6915 = !DILocation(line: 1145, column: 43, scope: !801)
!6916 = !DILocation(line: 1145, column: 49, scope: !801)
!6917 = !DILocation(line: 1145, column: 59, scope: !805)
!6918 = !DILocation(line: 1145, column: 67, scope: !805)
!6919 = !DILocation(line: 1145, column: 59, scope: !801)
!6920 = !DILocation(line: 1145, column: 85, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !804, file: !13, discriminator: 2)
!6922 = !DILocation(line: 1145, column: 91, scope: !804)
!6923 = !DILocation(line: 1145, column: 96, scope: !804)
!6924 = !DILocation(line: 1145, column: 110, scope: !804)
!6925 = !DILocation(line: 1145, column: 115, scope: !6926)
!6926 = !DILexicalBlockFile(scope: !803, file: !13, discriminator: 4)
!6927 = !DILocation(line: 1145, column: 125, scope: !803)
!6928 = !DILocation(line: 1145, column: 155, scope: !803)
!6929 = !DILocation(line: 1145, column: 173, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !803, file: !13, line: 1145, column: 170)
!6931 = !DILocation(line: 1145, column: 190, scope: !6930)
!6932 = !DILocation(line: 1145, column: 170, scope: !6930)
!6933 = !DILocation(line: 1145, column: 200, scope: !6930)
!6934 = !DILocation(line: 1145, column: 170, scope: !803)
!6935 = !DILocation(line: 1145, column: 170, scope: !6936)
!6936 = !DILexicalBlockFile(scope: !803, file: !13, discriminator: 5)
!6937 = !DILocation(line: 1145, column: 231, scope: !6938)
!6938 = !DILexicalBlockFile(scope: !6930, file: !13, discriminator: 6)
!6939 = !DILocation(line: 1145, column: 249, scope: !6930)
!6940 = !DILocation(line: 1145, column: 259, scope: !6930)
!6941 = !DILocation(line: 1145, column: 284, scope: !6930)
!6942 = !DILocation(line: 1145, column: 215, scope: !6930)
!6943 = !DILocation(line: 1145, column: 303, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !804, file: !13, discriminator: 7)
!6945 = !DILocation(line: 1145, column: 303, scope: !803)
!6946 = !DILocation(line: 1145, column: 303, scope: !6947)
!6947 = !DILexicalBlockFile(scope: !803, file: !13, discriminator: 8)
!6948 = !DILocation(line: 1145, column: 316, scope: !6949)
!6949 = !DILexicalBlockFile(scope: !804, file: !13, discriminator: 9)
!6950 = !DILocation(line: 1145, column: 318, scope: !6580)
!6951 = !DILocation(line: 1145, column: 318, scope: !801)
!6952 = !DILocation(line: 1146, column: 5, scope: !741)
!6953 = !DILocation(line: 1767, column: 33, scope: !910)
!6954 = !DILocation(line: 1767, column: 50, scope: !910)
!6955 = !DILocation(line: 1769, column: 5, scope: !910)
!6956 = !DILocation(line: 1769, column: 15, scope: !910)
!6957 = !DILocation(line: 1769, column: 35, scope: !910)
!6958 = !DILocation(line: 1769, column: 57, scope: !910)
!6959 = !DILocation(line: 1770, column: 5, scope: !910)
!6960 = !DILocation(line: 1770, column: 16, scope: !910)
!6961 = !DILocation(line: 1770, column: 23, scope: !910)
!6962 = !DILocation(line: 1770, column: 31, scope: !910)
!6963 = !DILocation(line: 1770, column: 40, scope: !910)
!6964 = !DILocation(line: 1771, column: 5, scope: !910)
!6965 = !DILocation(line: 1771, column: 9, scope: !910)
!6966 = !DILocation(line: 1773, column: 5, scope: !910)
!6967 = !DILocation(line: 1773, column: 10, scope: !6968)
!6968 = !DILexicalBlockFile(scope: !925, file: !13, discriminator: 1)
!6969 = !DILocation(line: 1773, column: 14, scope: !925)
!6970 = !DILocation(line: 1773, column: 17, scope: !925)
!6971 = !DILocation(line: 1773, column: 27, scope: !925)
!6972 = !DILocation(line: 1773, column: 51, scope: !932)
!6973 = !DILocation(line: 1773, column: 39, scope: !932)
!6974 = !DILocation(line: 1773, column: 59, scope: !932)
!6975 = !DILocation(line: 1773, column: 68, scope: !932)
!6976 = !DILocation(line: 1773, column: 37, scope: !925)
!6977 = !DILocation(line: 1773, column: 100, scope: !6978)
!6978 = !DILexicalBlockFile(scope: !930, file: !13, discriminator: 2)
!6979 = !DILocation(line: 1773, column: 106, scope: !930)
!6980 = !DILocation(line: 1773, column: 110, scope: !930)
!6981 = !DILocation(line: 1773, column: 100, scope: !931)
!6982 = !DILocation(line: 1773, column: 146, scope: !6983)
!6983 = !DILexicalBlockFile(scope: !930, file: !13, discriminator: 4)
!6984 = !DILocation(line: 1773, column: 152, scope: !930)
!6985 = !DILocation(line: 1773, column: 129, scope: !930)
!6986 = !DILocation(line: 1773, column: 127, scope: !930)
!6987 = !DILocation(line: 1773, column: 125, scope: !930)
!6988 = !DILocation(line: 1773, column: 197, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !929, file: !13, discriminator: 5)
!6990 = !DILocation(line: 1773, column: 172, scope: !929)
!6991 = !DILocation(line: 1773, column: 170, scope: !929)
!6992 = !DILocation(line: 1773, column: 220, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !929, file: !13, line: 1773, column: 220)
!6994 = !DILocation(line: 1773, column: 225, scope: !6993)
!6995 = !DILocation(line: 1773, column: 220, scope: !929)
!6996 = !DILocation(line: 1773, column: 240, scope: !6997)
!6997 = !DILexicalBlockFile(scope: !6993, file: !13, discriminator: 7)
!6998 = !DILocation(line: 1773, column: 240, scope: !6993)
!6999 = !DILocation(line: 1773, column: 279, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !929, file: !13, discriminator: 8)
!7001 = !DILocation(line: 1773, column: 263, scope: !929)
!7002 = !DILocation(line: 1773, column: 261, scope: !929)
!7003 = !DILocation(line: 1773, column: 286, scope: !929)
!7004 = !DILocation(line: 1773, column: 291, scope: !7005)
!7005 = !DILexicalBlockFile(scope: !928, file: !13, discriminator: 10)
!7006 = !DILocation(line: 1773, column: 301, scope: !928)
!7007 = !DILocation(line: 1773, column: 331, scope: !928)
!7008 = !DILocation(line: 1773, column: 346, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !928, file: !13, line: 1773, column: 343)
!7010 = !DILocation(line: 1773, column: 363, scope: !7009)
!7011 = !DILocation(line: 1773, column: 343, scope: !7009)
!7012 = !DILocation(line: 1773, column: 373, scope: !7009)
!7013 = !DILocation(line: 1773, column: 343, scope: !928)
!7014 = !DILocation(line: 1773, column: 343, scope: !7015)
!7015 = !DILexicalBlockFile(scope: !928, file: !13, discriminator: 11)
!7016 = !DILocation(line: 1773, column: 404, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !7009, file: !13, discriminator: 12)
!7018 = !DILocation(line: 1773, column: 422, scope: !7009)
!7019 = !DILocation(line: 1773, column: 432, scope: !7009)
!7020 = !DILocation(line: 1773, column: 457, scope: !7009)
!7021 = !DILocation(line: 1773, column: 388, scope: !7009)
!7022 = !DILocation(line: 1773, column: 476, scope: !7023)
!7023 = !DILexicalBlockFile(scope: !929, file: !13, discriminator: 13)
!7024 = !DILocation(line: 1773, column: 476, scope: !928)
!7025 = !DILocation(line: 1773, column: 476, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !928, file: !13, discriminator: 14)
!7027 = !DILocation(line: 1773, column: 493, scope: !7028)
!7028 = !DILexicalBlockFile(scope: !7029, file: !13, discriminator: 15)
!7029 = distinct !DILexicalBlock(scope: !929, file: !13, line: 1773, column: 493)
!7030 = !DILocation(line: 1773, column: 495, scope: !7029)
!7031 = !DILocation(line: 1773, column: 493, scope: !929)
!7032 = !DILocation(line: 1773, column: 500, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7029, file: !13, discriminator: 16)
!7034 = !DILocation(line: 1773, column: 500, scope: !7029)
!7035 = !DILocation(line: 1773, column: 525, scope: !7036)
!7036 = !DILexicalBlockFile(scope: !7037, file: !13, discriminator: 6)
!7037 = distinct !DILexicalBlock(scope: !931, file: !13, line: 1773, column: 525)
!7038 = !DILocation(line: 1773, column: 527, scope: !7037)
!7039 = !DILocation(line: 1773, column: 525, scope: !931)
!7040 = !DILocation(line: 1773, column: 550, scope: !7041)
!7041 = !DILexicalBlockFile(scope: !7042, file: !13, discriminator: 18)
!7042 = distinct !DILexicalBlock(scope: !7037, file: !13, line: 1773, column: 532)
!7043 = !DILocation(line: 1773, column: 534, scope: !7042)
!7044 = !DILocation(line: 1773, column: 602, scope: !7042)
!7045 = !DILocation(line: 1773, column: 623, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !931, file: !13, discriminator: 19)
!7047 = !DILocation(line: 1773, column: 669, scope: !7048)
!7048 = !DILexicalBlockFile(scope: !7049, file: !13, discriminator: 3)
!7049 = distinct !DILexicalBlock(scope: !932, file: !13, line: 1773, column: 634)
!7050 = !DILocation(line: 1773, column: 657, scope: !7049)
!7051 = !DILocation(line: 1773, column: 634, scope: !7049)
!7052 = !DILocation(line: 1773, column: 707, scope: !7049)
!7053 = !DILocation(line: 1773, column: 634, scope: !932)
!7054 = !DILocation(line: 1773, column: 722, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !7049, file: !13, discriminator: 22)
!7056 = !DILocation(line: 1773, column: 722, scope: !7049)
!7057 = !DILocation(line: 1773, column: 741, scope: !7058)
!7058 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 21)
!7059 = !DILocation(line: 1773, column: 741, scope: !7060)
!7060 = !DILexicalBlockFile(scope: !7061, file: !13, discriminator: 24)
!7061 = !DILexicalBlockFile(scope: !7062, file: !13, discriminator: 23)
!7062 = !DILexicalBlockFile(scope: !7063, file: !13, discriminator: 20)
!7063 = !DILexicalBlockFile(scope: !7064, file: !13, discriminator: 17)
!7064 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 9)
!7065 = !DILocation(line: 1773, column: 741, scope: !925)
!7066 = !DILocation(line: 1773, column: 741, scope: !7067)
!7067 = !DILexicalBlockFile(scope: !925, file: !13, discriminator: 25)
!7068 = !DILocation(line: 1775, column: 35, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1775, column: 9)
!7070 = !DILocation(line: 1775, column: 9, scope: !7069)
!7071 = !DILocation(line: 1775, column: 41, scope: !7069)
!7072 = !DILocation(line: 1775, column: 9, scope: !910)
!7073 = !DILocation(line: 1776, column: 9, scope: !7069)
!7074 = !DILocation(line: 1778, column: 13, scope: !910)
!7075 = !DILocation(line: 1780, column: 5, scope: !910)
!7076 = !DILocation(line: 1780, column: 5, scope: !7077)
!7077 = !DILexicalBlockFile(scope: !7078, file: !13, discriminator: 2)
!7078 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 1)
!7079 = !DILocation(line: 1781, column: 9, scope: !934)
!7080 = !DILocation(line: 1781, column: 15, scope: !934)
!7081 = !DILocation(line: 1782, column: 9, scope: !934)
!7082 = !DILocation(line: 1782, column: 20, scope: !934)
!7083 = !DILocation(line: 1783, column: 9, scope: !934)
!7084 = !DILocation(line: 1783, column: 13, scope: !934)
!7085 = !DILocation(line: 1784, column: 9, scope: !934)
!7086 = !DILocation(line: 1784, column: 20, scope: !934)
!7087 = !DILocation(line: 1787, column: 13, scope: !934)
!7088 = !DILocation(line: 1788, column: 9, scope: !934)
!7089 = !DILocation(line: 1788, column: 17, scope: !7090)
!7090 = !DILexicalBlockFile(scope: !7091, file: !13, discriminator: 4)
!7091 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 1)
!7092 = !DILocation(line: 1788, column: 23, scope: !934)
!7093 = !DILocation(line: 1788, column: 17, scope: !934)
!7094 = !DILocation(line: 1788, column: 37, scope: !934)
!7095 = !DILocation(line: 1789, column: 65, scope: !934)
!7096 = !DILocation(line: 1789, column: 71, scope: !934)
!7097 = !DILocation(line: 1789, column: 47, scope: !934)
!7098 = !DILocation(line: 1789, column: 88, scope: !934)
!7099 = !DILocation(line: 1789, column: 16, scope: !934)
!7100 = !DILocation(line: 1788, column: 9, scope: !7101)
!7101 = !DILexicalBlockFile(scope: !7102, file: !13, discriminator: 3)
!7102 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 2)
!7103 = !DILocation(line: 1790, column: 44, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1789, column: 97)
!7105 = !DILocation(line: 1790, column: 19, scope: !7104)
!7106 = !DILocation(line: 1790, column: 17, scope: !7104)
!7107 = !DILocation(line: 1791, column: 17, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7104, file: !13, line: 1791, column: 17)
!7109 = !DILocation(line: 1791, column: 21, scope: !7108)
!7110 = !DILocation(line: 1791, column: 17, scope: !7104)
!7111 = !DILocation(line: 1794, column: 21, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !13, line: 1794, column: 21)
!7113 = distinct !DILexicalBlock(scope: !7108, file: !13, line: 1791, column: 26)
!7114 = !DILocation(line: 1794, column: 21, scope: !7113)
!7115 = !DILocation(line: 1795, column: 21, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7112, file: !13, line: 1794, column: 41)
!7117 = !DILocation(line: 1797, column: 17, scope: !7113)
!7118 = !DILocation(line: 1799, column: 17, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7104, file: !13, line: 1799, column: 17)
!7120 = !DILocation(line: 1799, column: 21, scope: !7119)
!7121 = !DILocation(line: 1799, column: 17, scope: !7104)
!7122 = !DILocation(line: 1800, column: 17, scope: !7119)
!7123 = !DILocation(line: 1802, column: 13, scope: !941)
!7124 = !DILocation(line: 1802, column: 17, scope: !941)
!7125 = !DILocation(line: 1802, column: 13, scope: !934)
!7126 = !DILocation(line: 1804, column: 45, scope: !940)
!7127 = !DILocation(line: 1804, column: 13, scope: !940)
!7128 = !DILocation(line: 1805, column: 13, scope: !940)
!7129 = !DILocation(line: 1805, column: 18, scope: !7130)
!7130 = !DILexicalBlockFile(scope: !939, file: !13, discriminator: 1)
!7131 = !DILocation(line: 1805, column: 28, scope: !939)
!7132 = !DILocation(line: 1805, column: 51, scope: !939)
!7133 = !DILocation(line: 1805, column: 57, scope: !939)
!7134 = !DILocation(line: 1805, column: 72, scope: !945)
!7135 = !DILocation(line: 1805, column: 80, scope: !945)
!7136 = !DILocation(line: 1805, column: 72, scope: !939)
!7137 = !DILocation(line: 1805, column: 98, scope: !7138)
!7138 = !DILexicalBlockFile(scope: !944, file: !13, discriminator: 2)
!7139 = !DILocation(line: 1805, column: 104, scope: !944)
!7140 = !DILocation(line: 1805, column: 114, scope: !944)
!7141 = !DILocation(line: 1805, column: 128, scope: !944)
!7142 = !DILocation(line: 1805, column: 133, scope: !7143)
!7143 = !DILexicalBlockFile(scope: !943, file: !13, discriminator: 4)
!7144 = !DILocation(line: 1805, column: 143, scope: !943)
!7145 = !DILocation(line: 1805, column: 173, scope: !943)
!7146 = !DILocation(line: 1805, column: 191, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !943, file: !13, line: 1805, column: 188)
!7148 = !DILocation(line: 1805, column: 208, scope: !7147)
!7149 = !DILocation(line: 1805, column: 188, scope: !7147)
!7150 = !DILocation(line: 1805, column: 218, scope: !7147)
!7151 = !DILocation(line: 1805, column: 188, scope: !943)
!7152 = !DILocation(line: 1805, column: 188, scope: !7153)
!7153 = !DILexicalBlockFile(scope: !943, file: !13, discriminator: 5)
!7154 = !DILocation(line: 1805, column: 249, scope: !7155)
!7155 = !DILexicalBlockFile(scope: !7147, file: !13, discriminator: 6)
!7156 = !DILocation(line: 1805, column: 267, scope: !7147)
!7157 = !DILocation(line: 1805, column: 277, scope: !7147)
!7158 = !DILocation(line: 1805, column: 302, scope: !7147)
!7159 = !DILocation(line: 1805, column: 233, scope: !7147)
!7160 = !DILocation(line: 1805, column: 321, scope: !7161)
!7161 = !DILexicalBlockFile(scope: !944, file: !13, discriminator: 7)
!7162 = !DILocation(line: 1805, column: 321, scope: !943)
!7163 = !DILocation(line: 1805, column: 321, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !943, file: !13, discriminator: 8)
!7165 = !DILocation(line: 1805, column: 334, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !944, file: !13, discriminator: 9)
!7167 = !DILocation(line: 1805, column: 336, scope: !7168)
!7168 = !DILexicalBlockFile(scope: !7169, file: !13, discriminator: 10)
!7169 = !DILexicalBlockFile(scope: !940, file: !13, discriminator: 3)
!7170 = !DILocation(line: 1805, column: 336, scope: !939)
!7171 = !DILocation(line: 1805, column: 336, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !939, file: !13, discriminator: 11)
!7173 = !DILocation(line: 1806, column: 47, scope: !940)
!7174 = !DILocation(line: 1806, column: 28, scope: !940)
!7175 = !DILocation(line: 1806, column: 19, scope: !940)
!7176 = !DILocation(line: 1807, column: 13, scope: !940)
!7177 = !DILocation(line: 1810, column: 13, scope: !949)
!7178 = !DILocation(line: 1810, column: 23, scope: !949)
!7179 = !DILocation(line: 1810, column: 13, scope: !934)
!7180 = !DILocation(line: 1811, column: 20, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !949, file: !13, line: 1810, column: 38)
!7182 = !DILocation(line: 1811, column: 26, scope: !7181)
!7183 = !DILocation(line: 1811, column: 18, scope: !7181)
!7184 = !DILocation(line: 1812, column: 21, scope: !7181)
!7185 = !DILocation(line: 1812, column: 27, scope: !7181)
!7186 = !DILocation(line: 1812, column: 19, scope: !7181)
!7187 = !DILocation(line: 1813, column: 30, scope: !7181)
!7188 = !DILocation(line: 1814, column: 29, scope: !7181)
!7189 = !DILocation(line: 1814, column: 37, scope: !7181)
!7190 = !DILocation(line: 1814, column: 46, scope: !7181)
!7191 = !DILocation(line: 1815, column: 9, scope: !7181)
!7192 = !DILocation(line: 1818, column: 37, scope: !948)
!7193 = !DILocation(line: 1818, column: 48, scope: !948)
!7194 = !DILocation(line: 1818, column: 54, scope: !948)
!7195 = !DILocation(line: 1818, column: 20, scope: !948)
!7196 = !DILocation(line: 1818, column: 18, scope: !948)
!7197 = !DILocation(line: 1819, column: 19, scope: !948)
!7198 = !DILocation(line: 1820, column: 80, scope: !948)
!7199 = !DILocation(line: 1820, column: 62, scope: !948)
!7200 = !DILocation(line: 1820, column: 93, scope: !948)
!7201 = !DILocation(line: 1820, column: 30, scope: !948)
!7202 = !DILocation(line: 1821, column: 13, scope: !948)
!7203 = !DILocation(line: 1821, column: 18, scope: !7204)
!7204 = !DILexicalBlockFile(scope: !947, file: !13, discriminator: 1)
!7205 = !DILocation(line: 1821, column: 28, scope: !947)
!7206 = !DILocation(line: 1821, column: 51, scope: !947)
!7207 = !DILocation(line: 1821, column: 67, scope: !953)
!7208 = !DILocation(line: 1821, column: 75, scope: !953)
!7209 = !DILocation(line: 1821, column: 67, scope: !947)
!7210 = !DILocation(line: 1821, column: 104, scope: !7211)
!7211 = !DILexicalBlockFile(scope: !952, file: !13, discriminator: 2)
!7212 = !DILocation(line: 1821, column: 118, scope: !952)
!7213 = !DILocation(line: 1821, column: 123, scope: !7214)
!7214 = !DILexicalBlockFile(scope: !951, file: !13, discriminator: 4)
!7215 = !DILocation(line: 1821, column: 133, scope: !951)
!7216 = !DILocation(line: 1821, column: 163, scope: !951)
!7217 = !DILocation(line: 1821, column: 181, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !951, file: !13, line: 1821, column: 178)
!7219 = !DILocation(line: 1821, column: 198, scope: !7218)
!7220 = !DILocation(line: 1821, column: 178, scope: !7218)
!7221 = !DILocation(line: 1821, column: 208, scope: !7218)
!7222 = !DILocation(line: 1821, column: 178, scope: !951)
!7223 = !DILocation(line: 1821, column: 178, scope: !7224)
!7224 = !DILexicalBlockFile(scope: !951, file: !13, discriminator: 5)
!7225 = !DILocation(line: 1821, column: 239, scope: !7226)
!7226 = !DILexicalBlockFile(scope: !7218, file: !13, discriminator: 6)
!7227 = !DILocation(line: 1821, column: 257, scope: !7218)
!7228 = !DILocation(line: 1821, column: 267, scope: !7218)
!7229 = !DILocation(line: 1821, column: 292, scope: !7218)
!7230 = !DILocation(line: 1821, column: 223, scope: !7218)
!7231 = !DILocation(line: 1821, column: 311, scope: !7232)
!7232 = !DILexicalBlockFile(scope: !952, file: !13, discriminator: 7)
!7233 = !DILocation(line: 1821, column: 311, scope: !951)
!7234 = !DILocation(line: 1821, column: 311, scope: !7235)
!7235 = !DILexicalBlockFile(scope: !951, file: !13, discriminator: 8)
!7236 = !DILocation(line: 1821, column: 324, scope: !7237)
!7237 = !DILexicalBlockFile(scope: !952, file: !13, discriminator: 9)
!7238 = !DILocation(line: 1821, column: 326, scope: !7239)
!7239 = !DILexicalBlockFile(scope: !7240, file: !13, discriminator: 10)
!7240 = !DILexicalBlockFile(scope: !948, file: !13, discriminator: 3)
!7241 = !DILocation(line: 1821, column: 326, scope: !947)
!7242 = !DILocation(line: 1821, column: 326, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !947, file: !13, discriminator: 11)
!7244 = !DILocation(line: 1822, column: 17, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !948, file: !13, line: 1822, column: 17)
!7246 = !DILocation(line: 1822, column: 22, scope: !7245)
!7247 = !DILocation(line: 1822, column: 17, scope: !948)
!7248 = !DILocation(line: 1823, column: 17, scope: !7245)
!7249 = !DILocation(line: 1824, column: 51, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !948, file: !13, line: 1824, column: 17)
!7251 = !DILocation(line: 1824, column: 35, scope: !7250)
!7252 = !DILocation(line: 1824, column: 58, scope: !7250)
!7253 = !DILocation(line: 1824, column: 64, scope: !7250)
!7254 = !DILocation(line: 1824, column: 33, scope: !7250)
!7255 = !DILocation(line: 1824, column: 33, scope: !7256)
!7256 = !DILexicalBlockFile(scope: !7250, file: !13, discriminator: 1)
!7257 = !DILocation(line: 1824, column: 107, scope: !7258)
!7258 = !DILexicalBlockFile(scope: !7250, file: !13, discriminator: 2)
!7259 = !DILocation(line: 1824, column: 77, scope: !7250)
!7260 = !DILocation(line: 1824, column: 116, scope: !7261)
!7261 = !DILexicalBlockFile(scope: !7262, file: !13, discriminator: 4)
!7262 = !DILexicalBlockFile(scope: !7250, file: !13, discriminator: 3)
!7263 = !DILocation(line: 1824, column: 17, scope: !948)
!7264 = !DILocation(line: 1825, column: 17, scope: !7250)
!7265 = !DILocation(line: 1828, column: 49, scope: !934)
!7266 = !DILocation(line: 1828, column: 32, scope: !934)
!7267 = !DILocation(line: 1828, column: 57, scope: !934)
!7268 = !DILocation(line: 1828, column: 63, scope: !934)
!7269 = !DILocation(line: 1828, column: 30, scope: !934)
!7270 = !DILocation(line: 1828, column: 121, scope: !7091)
!7271 = !DILocation(line: 1828, column: 105, scope: !934)
!7272 = !DILocation(line: 1828, column: 128, scope: !934)
!7273 = !DILocation(line: 1828, column: 134, scope: !934)
!7274 = !DILocation(line: 1828, column: 75, scope: !934)
!7275 = !DILocation(line: 1828, column: 169, scope: !7276)
!7276 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 3)
!7277 = !DILocation(line: 1828, column: 152, scope: !934)
!7278 = !DILocation(line: 1828, column: 175, scope: !934)
!7279 = !DILocation(line: 1828, column: 144, scope: !934)
!7280 = !DILocation(line: 1828, column: 218, scope: !7281)
!7281 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 4)
!7282 = !DILocation(line: 1828, column: 192, scope: !934)
!7283 = !DILocation(line: 1828, column: 224, scope: !934)
!7284 = !DILocation(line: 1828, column: 184, scope: !934)
!7285 = !DILocation(line: 1828, column: 30, scope: !7286)
!7286 = !DILexicalBlockFile(scope: !7287, file: !13, discriminator: 6)
!7287 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 5)
!7288 = !DILocation(line: 1828, column: 271, scope: !7102)
!7289 = !DILocation(line: 1828, column: 251, scope: !934)
!7290 = !DILocation(line: 1828, column: 279, scope: !934)
!7291 = !DILocation(line: 1828, column: 284, scope: !934)
!7292 = !DILocation(line: 1828, column: 13, scope: !7293)
!7293 = !DILexicalBlockFile(scope: !7294, file: !13, discriminator: 8)
!7294 = !DILexicalBlockFile(scope: !934, file: !13, discriminator: 7)
!7295 = !DILocation(line: 1829, column: 68, scope: !934)
!7296 = !DILocation(line: 1829, column: 50, scope: !934)
!7297 = !DILocation(line: 1829, column: 76, scope: !934)
!7298 = !DILocation(line: 1829, column: 18, scope: !934)
!7299 = !DILocation(line: 1830, column: 64, scope: !934)
!7300 = !DILocation(line: 1830, column: 46, scope: !934)
!7301 = !DILocation(line: 1830, column: 72, scope: !934)
!7302 = !DILocation(line: 1830, column: 78, scope: !934)
!7303 = !DILocation(line: 1830, column: 14, scope: !934)
!7304 = !DILocation(line: 1833, column: 13, scope: !934)
!7305 = !DILocation(line: 1833, column: 19, scope: !934)
!7306 = !DILocation(line: 1833, column: 34, scope: !934)
!7307 = !DILocation(line: 1833, column: 40, scope: !934)
!7308 = !DILocation(line: 1833, column: 55, scope: !934)
!7309 = !DILocation(line: 1833, column: 61, scope: !934)
!7310 = !DILocation(line: 1834, column: 13, scope: !934)
!7311 = !DILocation(line: 1835, column: 13, scope: !934)
!7312 = !DILocation(line: 1835, column: 19, scope: !934)
!7313 = !DILocation(line: 1835, column: 26, scope: !934)
!7314 = !DILocation(line: 1835, column: 24, scope: !934)
!7315 = !DILocation(line: 1835, column: 17, scope: !934)
!7316 = !DILocation(line: 1836, column: 13, scope: !934)
!7317 = !DILocation(line: 1836, column: 19, scope: !934)
!7318 = !DILocation(line: 1836, column: 26, scope: !934)
!7319 = !DILocation(line: 1836, column: 24, scope: !934)
!7320 = !DILocation(line: 1836, column: 17, scope: !934)
!7321 = !DILocation(line: 1832, column: 18, scope: !934)
!7322 = !DILocation(line: 1832, column: 16, scope: !934)
!7323 = !DILocation(line: 1838, column: 13, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1838, column: 13)
!7325 = !DILocation(line: 1838, column: 20, scope: !7324)
!7326 = !DILocation(line: 1838, column: 13, scope: !934)
!7327 = !DILocation(line: 1839, column: 23, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7324, file: !13, line: 1838, column: 26)
!7329 = !DILocation(line: 1839, column: 20, scope: !7328)
!7330 = !DILocation(line: 1840, column: 17, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7328, file: !13, line: 1840, column: 17)
!7332 = !DILocation(line: 1840, column: 23, scope: !7331)
!7333 = !DILocation(line: 1840, column: 28, scope: !7331)
!7334 = !DILocation(line: 1840, column: 32, scope: !7335)
!7335 = !DILexicalBlockFile(scope: !7331, file: !13, discriminator: 1)
!7336 = !DILocation(line: 1840, column: 41, scope: !7331)
!7337 = !DILocation(line: 1840, column: 39, scope: !7331)
!7338 = !DILocation(line: 1840, column: 50, scope: !7331)
!7339 = !DILocation(line: 1840, column: 48, scope: !7331)
!7340 = !DILocation(line: 1840, column: 61, scope: !7331)
!7341 = !DILocation(line: 1840, column: 58, scope: !7331)
!7342 = !DILocation(line: 1840, column: 17, scope: !7328)
!7343 = !DILocation(line: 1841, column: 26, scope: !7331)
!7344 = !DILocation(line: 1841, column: 34, scope: !7331)
!7345 = !DILocation(line: 1841, column: 32, scope: !7331)
!7346 = !DILocation(line: 1841, column: 42, scope: !7331)
!7347 = !DILocation(line: 1841, column: 40, scope: !7331)
!7348 = !DILocation(line: 1841, column: 24, scope: !7331)
!7349 = !DILocation(line: 1841, column: 17, scope: !7331)
!7350 = !DILocation(line: 1842, column: 13, scope: !7328)
!7351 = !DILocation(line: 1846, column: 18, scope: !934)
!7352 = !DILocation(line: 1846, column: 29, scope: !934)
!7353 = !DILocation(line: 1846, column: 27, scope: !934)
!7354 = !DILocation(line: 1846, column: 16, scope: !934)
!7355 = !DILocation(line: 1847, column: 13, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1847, column: 13)
!7357 = !DILocation(line: 1847, column: 19, scope: !7356)
!7358 = !DILocation(line: 1847, column: 24, scope: !7356)
!7359 = !DILocation(line: 1847, column: 28, scope: !7360)
!7360 = !DILexicalBlockFile(scope: !7356, file: !13, discriminator: 1)
!7361 = !DILocation(line: 1847, column: 37, scope: !7356)
!7362 = !DILocation(line: 1847, column: 35, scope: !7356)
!7363 = !DILocation(line: 1847, column: 46, scope: !7356)
!7364 = !DILocation(line: 1847, column: 44, scope: !7356)
!7365 = !DILocation(line: 1847, column: 57, scope: !7356)
!7366 = !DILocation(line: 1847, column: 54, scope: !7356)
!7367 = !DILocation(line: 1847, column: 13, scope: !934)
!7368 = !DILocation(line: 1849, column: 22, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7356, file: !13, line: 1847, column: 64)
!7370 = !DILocation(line: 1849, column: 30, scope: !7369)
!7371 = !DILocation(line: 1849, column: 28, scope: !7369)
!7372 = !DILocation(line: 1849, column: 38, scope: !7369)
!7373 = !DILocation(line: 1849, column: 36, scope: !7369)
!7374 = !DILocation(line: 1849, column: 20, scope: !7369)
!7375 = !DILocation(line: 1850, column: 13, scope: !7369)
!7376 = !DILocation(line: 1853, column: 13, scope: !956)
!7377 = !DILocation(line: 1853, column: 22, scope: !956)
!7378 = !DILocation(line: 1853, column: 20, scope: !956)
!7379 = !DILocation(line: 1853, column: 13, scope: !934)
!7380 = !DILocation(line: 1855, column: 13, scope: !955)
!7381 = !DILocation(line: 1855, column: 23, scope: !955)
!7382 = !DILocation(line: 1856, column: 17, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1856, column: 17)
!7384 = !DILocation(line: 1856, column: 24, scope: !7383)
!7385 = !DILocation(line: 1856, column: 17, scope: !955)
!7386 = !DILocation(line: 1857, column: 26, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7383, file: !13, line: 1856, column: 39)
!7388 = !DILocation(line: 1857, column: 24, scope: !7387)
!7389 = !DILocation(line: 1858, column: 21, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7387, file: !13, line: 1858, column: 21)
!7391 = !DILocation(line: 1858, column: 28, scope: !7390)
!7392 = !DILocation(line: 1858, column: 21, scope: !7387)
!7393 = !DILocation(line: 1859, column: 21, scope: !7390)
!7394 = !DILocation(line: 1860, column: 13, scope: !7387)
!7395 = !DILocation(line: 1861, column: 37, scope: !955)
!7396 = !DILocation(line: 1861, column: 43, scope: !955)
!7397 = !DILocation(line: 1861, column: 50, scope: !955)
!7398 = !DILocation(line: 1861, column: 17, scope: !955)
!7399 = !DILocation(line: 1861, column: 15, scope: !955)
!7400 = !DILocation(line: 1862, column: 17, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !955, file: !13, line: 1862, column: 17)
!7402 = !DILocation(line: 1862, column: 19, scope: !7401)
!7403 = !DILocation(line: 1862, column: 17, scope: !955)
!7404 = !DILocation(line: 1863, column: 17, scope: !7401)
!7405 = !DILocation(line: 1864, column: 31, scope: !960)
!7406 = !DILocation(line: 1864, column: 39, scope: !960)
!7407 = !DILocation(line: 1864, column: 17, scope: !960)
!7408 = !DILocation(line: 1864, column: 42, scope: !960)
!7409 = !DILocation(line: 1864, column: 17, scope: !955)
!7410 = !DILocation(line: 1865, column: 17, scope: !959)
!7411 = !DILocation(line: 1865, column: 22, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !958, file: !13, discriminator: 1)
!7413 = !DILocation(line: 1865, column: 32, scope: !958)
!7414 = !DILocation(line: 1865, column: 62, scope: !958)
!7415 = !DILocation(line: 1865, column: 74, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !958, file: !13, line: 1865, column: 71)
!7417 = !DILocation(line: 1865, column: 91, scope: !7416)
!7418 = !DILocation(line: 1865, column: 71, scope: !7416)
!7419 = !DILocation(line: 1865, column: 101, scope: !7416)
!7420 = !DILocation(line: 1865, column: 71, scope: !958)
!7421 = !DILocation(line: 1865, column: 71, scope: !7422)
!7422 = !DILexicalBlockFile(scope: !958, file: !13, discriminator: 2)
!7423 = !DILocation(line: 1865, column: 132, scope: !7424)
!7424 = !DILexicalBlockFile(scope: !7416, file: !13, discriminator: 3)
!7425 = !DILocation(line: 1865, column: 150, scope: !7416)
!7426 = !DILocation(line: 1865, column: 160, scope: !7416)
!7427 = !DILocation(line: 1865, column: 185, scope: !7416)
!7428 = !DILocation(line: 1865, column: 116, scope: !7416)
!7429 = !DILocation(line: 1865, column: 204, scope: !7430)
!7430 = !DILexicalBlockFile(scope: !959, file: !13, discriminator: 4)
!7431 = !DILocation(line: 1865, column: 204, scope: !958)
!7432 = !DILocation(line: 1865, column: 204, scope: !7433)
!7433 = !DILexicalBlockFile(scope: !958, file: !13, discriminator: 5)
!7434 = !DILocation(line: 1866, column: 17, scope: !959)
!7435 = !DILocation(line: 1868, column: 72, scope: !955)
!7436 = !DILocation(line: 1868, column: 54, scope: !955)
!7437 = !DILocation(line: 1868, column: 77, scope: !955)
!7438 = !DILocation(line: 1868, column: 21, scope: !955)
!7439 = !DILocation(line: 1869, column: 13, scope: !955)
!7440 = !DILocation(line: 1869, column: 18, scope: !7441)
!7441 = !DILexicalBlockFile(scope: !962, file: !13, discriminator: 1)
!7442 = !DILocation(line: 1869, column: 28, scope: !962)
!7443 = !DILocation(line: 1869, column: 58, scope: !962)
!7444 = !DILocation(line: 1869, column: 70, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !962, file: !13, line: 1869, column: 67)
!7446 = !DILocation(line: 1869, column: 87, scope: !7445)
!7447 = !DILocation(line: 1869, column: 67, scope: !7445)
!7448 = !DILocation(line: 1869, column: 97, scope: !7445)
!7449 = !DILocation(line: 1869, column: 67, scope: !962)
!7450 = !DILocation(line: 1869, column: 67, scope: !7451)
!7451 = !DILexicalBlockFile(scope: !962, file: !13, discriminator: 2)
!7452 = !DILocation(line: 1869, column: 128, scope: !7453)
!7453 = !DILexicalBlockFile(scope: !7445, file: !13, discriminator: 3)
!7454 = !DILocation(line: 1869, column: 146, scope: !7445)
!7455 = !DILocation(line: 1869, column: 156, scope: !7445)
!7456 = !DILocation(line: 1869, column: 181, scope: !7445)
!7457 = !DILocation(line: 1869, column: 112, scope: !7445)
!7458 = !DILocation(line: 1869, column: 200, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !955, file: !13, discriminator: 4)
!7460 = !DILocation(line: 1869, column: 200, scope: !962)
!7461 = !DILocation(line: 1869, column: 200, scope: !7462)
!7462 = !DILexicalBlockFile(scope: !962, file: !13, discriminator: 5)
!7463 = !DILocation(line: 1870, column: 9, scope: !956)
!7464 = !DILocation(line: 1870, column: 9, scope: !7465)
!7465 = !DILexicalBlockFile(scope: !956, file: !13, discriminator: 1)
!7466 = !DILocation(line: 1870, column: 9, scope: !955)
!7467 = !DILocation(line: 1873, column: 13, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !934, file: !13, line: 1873, column: 13)
!7469 = !DILocation(line: 1873, column: 22, scope: !7468)
!7470 = !DILocation(line: 1873, column: 20, scope: !7468)
!7471 = !DILocation(line: 1873, column: 13, scope: !934)
!7472 = !DILocation(line: 1874, column: 45, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7468, file: !13, line: 1873, column: 32)
!7474 = !DILocation(line: 1874, column: 51, scope: !7473)
!7475 = !DILocation(line: 1874, column: 59, scope: !7473)
!7476 = !DILocation(line: 1874, column: 25, scope: !7473)
!7477 = !DILocation(line: 1874, column: 23, scope: !7473)
!7478 = !DILocation(line: 1875, column: 17, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7473, file: !13, line: 1875, column: 17)
!7480 = !DILocation(line: 1875, column: 27, scope: !7479)
!7481 = !DILocation(line: 1875, column: 17, scope: !7473)
!7482 = !DILocation(line: 1876, column: 17, scope: !7479)
!7483 = !DILocation(line: 1877, column: 9, scope: !7473)
!7484 = !DILocation(line: 1878, column: 9, scope: !934)
!7485 = !DILocation(line: 1878, column: 14, scope: !7486)
!7486 = !DILexicalBlockFile(scope: !964, file: !13, discriminator: 1)
!7487 = !DILocation(line: 1878, column: 24, scope: !964)
!7488 = !DILocation(line: 1878, column: 47, scope: !964)
!7489 = !DILocation(line: 1878, column: 58, scope: !968)
!7490 = !DILocation(line: 1878, column: 66, scope: !968)
!7491 = !DILocation(line: 1878, column: 58, scope: !964)
!7492 = !DILocation(line: 1878, column: 90, scope: !7493)
!7493 = !DILexicalBlockFile(scope: !967, file: !13, discriminator: 2)
!7494 = !DILocation(line: 1878, column: 104, scope: !967)
!7495 = !DILocation(line: 1878, column: 109, scope: !7496)
!7496 = !DILexicalBlockFile(scope: !966, file: !13, discriminator: 4)
!7497 = !DILocation(line: 1878, column: 119, scope: !966)
!7498 = !DILocation(line: 1878, column: 149, scope: !966)
!7499 = !DILocation(line: 1878, column: 167, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !966, file: !13, line: 1878, column: 164)
!7501 = !DILocation(line: 1878, column: 184, scope: !7500)
!7502 = !DILocation(line: 1878, column: 164, scope: !7500)
!7503 = !DILocation(line: 1878, column: 194, scope: !7500)
!7504 = !DILocation(line: 1878, column: 164, scope: !966)
!7505 = !DILocation(line: 1878, column: 164, scope: !7506)
!7506 = !DILexicalBlockFile(scope: !966, file: !13, discriminator: 5)
!7507 = !DILocation(line: 1878, column: 225, scope: !7508)
!7508 = !DILexicalBlockFile(scope: !7500, file: !13, discriminator: 6)
!7509 = !DILocation(line: 1878, column: 243, scope: !7500)
!7510 = !DILocation(line: 1878, column: 253, scope: !7500)
!7511 = !DILocation(line: 1878, column: 278, scope: !7500)
!7512 = !DILocation(line: 1878, column: 209, scope: !7500)
!7513 = !DILocation(line: 1878, column: 297, scope: !7514)
!7514 = !DILexicalBlockFile(scope: !967, file: !13, discriminator: 7)
!7515 = !DILocation(line: 1878, column: 297, scope: !966)
!7516 = !DILocation(line: 1878, column: 297, scope: !7517)
!7517 = !DILexicalBlockFile(scope: !966, file: !13, discriminator: 8)
!7518 = !DILocation(line: 1878, column: 310, scope: !7519)
!7519 = !DILexicalBlockFile(scope: !967, file: !13, discriminator: 9)
!7520 = !DILocation(line: 1878, column: 312, scope: !7521)
!7521 = !DILexicalBlockFile(scope: !7276, file: !13, discriminator: 10)
!7522 = !DILocation(line: 1878, column: 312, scope: !964)
!7523 = !DILocation(line: 1878, column: 312, scope: !7524)
!7524 = !DILexicalBlockFile(scope: !964, file: !13, discriminator: 11)
!7525 = !DILocation(line: 1880, column: 41, scope: !934)
!7526 = !DILocation(line: 1880, column: 9, scope: !934)
!7527 = !DILocation(line: 1881, column: 5, scope: !910)
!7528 = !DILocation(line: 1881, column: 5, scope: !7078)
!7529 = !DILocation(line: 1883, column: 9, scope: !973)
!7530 = !DILocation(line: 1883, column: 14, scope: !973)
!7531 = !DILocation(line: 1883, column: 9, scope: !910)
!7532 = !DILocation(line: 1885, column: 36, scope: !972)
!7533 = !DILocation(line: 1885, column: 45, scope: !972)
!7534 = !DILocation(line: 1885, column: 43, scope: !972)
!7535 = !DILocation(line: 1885, column: 9, scope: !972)
!7536 = !DILocation(line: 1885, column: 15, scope: !972)
!7537 = !DILocation(line: 1885, column: 34, scope: !972)
!7538 = !DILocation(line: 1886, column: 13, scope: !971)
!7539 = !DILocation(line: 1886, column: 19, scope: !971)
!7540 = !DILocation(line: 1886, column: 23, scope: !971)
!7541 = !DILocation(line: 1886, column: 26, scope: !7542)
!7542 = !DILexicalBlockFile(scope: !971, file: !13, discriminator: 1)
!7543 = !DILocation(line: 1886, column: 83, scope: !971)
!7544 = !DILocation(line: 1886, column: 65, scope: !971)
!7545 = !DILocation(line: 1886, column: 91, scope: !971)
!7546 = !DILocation(line: 1886, column: 33, scope: !971)
!7547 = !DILocation(line: 1886, column: 13, scope: !972)
!7548 = !DILocation(line: 1887, column: 13, scope: !970)
!7549 = !DILocation(line: 1887, column: 23, scope: !970)
!7550 = !DILocation(line: 1887, column: 47, scope: !970)
!7551 = !DILocation(line: 1887, column: 53, scope: !970)
!7552 = !DILocation(line: 1887, column: 60, scope: !970)
!7553 = !DILocation(line: 1887, column: 27, scope: !970)
!7554 = !DILocation(line: 1888, column: 13, scope: !970)
!7555 = !DILocation(line: 1888, column: 18, scope: !7556)
!7556 = !DILexicalBlockFile(scope: !975, file: !13, discriminator: 1)
!7557 = !DILocation(line: 1888, column: 28, scope: !975)
!7558 = !DILocation(line: 1888, column: 51, scope: !975)
!7559 = !DILocation(line: 1888, column: 62, scope: !979)
!7560 = !DILocation(line: 1888, column: 70, scope: !979)
!7561 = !DILocation(line: 1888, column: 62, scope: !975)
!7562 = !DILocation(line: 1888, column: 94, scope: !7563)
!7563 = !DILexicalBlockFile(scope: !978, file: !13, discriminator: 2)
!7564 = !DILocation(line: 1888, column: 108, scope: !978)
!7565 = !DILocation(line: 1888, column: 113, scope: !7566)
!7566 = !DILexicalBlockFile(scope: !977, file: !13, discriminator: 4)
!7567 = !DILocation(line: 1888, column: 123, scope: !977)
!7568 = !DILocation(line: 1888, column: 153, scope: !977)
!7569 = !DILocation(line: 1888, column: 171, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !977, file: !13, line: 1888, column: 168)
!7571 = !DILocation(line: 1888, column: 188, scope: !7570)
!7572 = !DILocation(line: 1888, column: 168, scope: !7570)
!7573 = !DILocation(line: 1888, column: 198, scope: !7570)
!7574 = !DILocation(line: 1888, column: 168, scope: !977)
!7575 = !DILocation(line: 1888, column: 168, scope: !7576)
!7576 = !DILexicalBlockFile(scope: !977, file: !13, discriminator: 5)
!7577 = !DILocation(line: 1888, column: 229, scope: !7578)
!7578 = !DILexicalBlockFile(scope: !7570, file: !13, discriminator: 6)
!7579 = !DILocation(line: 1888, column: 247, scope: !7570)
!7580 = !DILocation(line: 1888, column: 257, scope: !7570)
!7581 = !DILocation(line: 1888, column: 282, scope: !7570)
!7582 = !DILocation(line: 1888, column: 213, scope: !7570)
!7583 = !DILocation(line: 1888, column: 301, scope: !7584)
!7584 = !DILexicalBlockFile(scope: !978, file: !13, discriminator: 7)
!7585 = !DILocation(line: 1888, column: 301, scope: !977)
!7586 = !DILocation(line: 1888, column: 301, scope: !7587)
!7587 = !DILexicalBlockFile(scope: !977, file: !13, discriminator: 8)
!7588 = !DILocation(line: 1888, column: 314, scope: !7589)
!7589 = !DILexicalBlockFile(scope: !978, file: !13, discriminator: 9)
!7590 = !DILocation(line: 1888, column: 316, scope: !7591)
!7591 = !DILexicalBlockFile(scope: !7592, file: !13, discriminator: 10)
!7592 = !DILexicalBlockFile(scope: !970, file: !13, discriminator: 3)
!7593 = !DILocation(line: 1888, column: 316, scope: !975)
!7594 = !DILocation(line: 1888, column: 316, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !975, file: !13, discriminator: 11)
!7596 = !DILocation(line: 1889, column: 17, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !970, file: !13, line: 1889, column: 17)
!7598 = !DILocation(line: 1889, column: 19, scope: !7597)
!7599 = !DILocation(line: 1889, column: 17, scope: !970)
!7600 = !DILocation(line: 1890, column: 17, scope: !7597)
!7601 = !DILocation(line: 1891, column: 20, scope: !970)
!7602 = !DILocation(line: 1891, column: 18, scope: !970)
!7603 = !DILocation(line: 1892, column: 9, scope: !971)
!7604 = !DILocation(line: 1892, column: 9, scope: !7542)
!7605 = !DILocation(line: 1892, column: 9, scope: !970)
!7606 = !DILocation(line: 1893, column: 5, scope: !972)
!7607 = !DILocation(line: 1894, column: 9, scope: !983)
!7608 = !DILocation(line: 1894, column: 19, scope: !983)
!7609 = !DILocation(line: 1894, column: 9, scope: !910)
!7610 = !DILocation(line: 1895, column: 13, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !982, file: !13, line: 1895, column: 13)
!7612 = !DILocation(line: 1895, column: 20, scope: !7611)
!7613 = !DILocation(line: 1895, column: 13, scope: !982)
!7614 = !DILocation(line: 1896, column: 22, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7611, file: !13, line: 1895, column: 35)
!7616 = !DILocation(line: 1896, column: 20, scope: !7615)
!7617 = !DILocation(line: 1897, column: 17, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7615, file: !13, line: 1897, column: 17)
!7619 = !DILocation(line: 1897, column: 24, scope: !7618)
!7620 = !DILocation(line: 1897, column: 17, scope: !7615)
!7621 = !DILocation(line: 1898, column: 17, scope: !7618)
!7622 = !DILocation(line: 1899, column: 9, scope: !7615)
!7623 = !DILocation(line: 1900, column: 27, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !982, file: !13, line: 1900, column: 13)
!7625 = !DILocation(line: 1900, column: 35, scope: !7624)
!7626 = !DILocation(line: 1900, column: 13, scope: !7624)
!7627 = !DILocation(line: 1900, column: 46, scope: !7624)
!7628 = !DILocation(line: 1900, column: 13, scope: !982)
!7629 = !DILocation(line: 1901, column: 13, scope: !7624)
!7630 = !DILocation(line: 1902, column: 9, scope: !982)
!7631 = !DILocation(line: 1902, column: 14, scope: !7632)
!7632 = !DILexicalBlockFile(scope: !981, file: !13, discriminator: 1)
!7633 = !DILocation(line: 1902, column: 24, scope: !981)
!7634 = !DILocation(line: 1902, column: 47, scope: !981)
!7635 = !DILocation(line: 1902, column: 63, scope: !987)
!7636 = !DILocation(line: 1902, column: 71, scope: !987)
!7637 = !DILocation(line: 1902, column: 63, scope: !981)
!7638 = !DILocation(line: 1902, column: 100, scope: !7639)
!7639 = !DILexicalBlockFile(scope: !986, file: !13, discriminator: 2)
!7640 = !DILocation(line: 1902, column: 114, scope: !986)
!7641 = !DILocation(line: 1902, column: 119, scope: !7642)
!7642 = !DILexicalBlockFile(scope: !985, file: !13, discriminator: 4)
!7643 = !DILocation(line: 1902, column: 129, scope: !985)
!7644 = !DILocation(line: 1902, column: 159, scope: !985)
!7645 = !DILocation(line: 1902, column: 177, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !985, file: !13, line: 1902, column: 174)
!7647 = !DILocation(line: 1902, column: 194, scope: !7646)
!7648 = !DILocation(line: 1902, column: 174, scope: !7646)
!7649 = !DILocation(line: 1902, column: 204, scope: !7646)
!7650 = !DILocation(line: 1902, column: 174, scope: !985)
!7651 = !DILocation(line: 1902, column: 174, scope: !7652)
!7652 = !DILexicalBlockFile(scope: !985, file: !13, discriminator: 5)
!7653 = !DILocation(line: 1902, column: 235, scope: !7654)
!7654 = !DILexicalBlockFile(scope: !7646, file: !13, discriminator: 6)
!7655 = !DILocation(line: 1902, column: 253, scope: !7646)
!7656 = !DILocation(line: 1902, column: 263, scope: !7646)
!7657 = !DILocation(line: 1902, column: 288, scope: !7646)
!7658 = !DILocation(line: 1902, column: 219, scope: !7646)
!7659 = !DILocation(line: 1902, column: 307, scope: !7660)
!7660 = !DILexicalBlockFile(scope: !986, file: !13, discriminator: 7)
!7661 = !DILocation(line: 1902, column: 307, scope: !985)
!7662 = !DILocation(line: 1902, column: 307, scope: !7663)
!7663 = !DILexicalBlockFile(scope: !985, file: !13, discriminator: 8)
!7664 = !DILocation(line: 1902, column: 320, scope: !7665)
!7665 = !DILexicalBlockFile(scope: !986, file: !13, discriminator: 9)
!7666 = !DILocation(line: 1902, column: 322, scope: !7667)
!7667 = !DILexicalBlockFile(scope: !7668, file: !13, discriminator: 10)
!7668 = !DILexicalBlockFile(scope: !982, file: !13, discriminator: 3)
!7669 = !DILocation(line: 1902, column: 322, scope: !981)
!7670 = !DILocation(line: 1902, column: 322, scope: !7671)
!7671 = !DILexicalBlockFile(scope: !981, file: !13, discriminator: 11)
!7672 = !DILocation(line: 1903, column: 5, scope: !982)
!7673 = !DILocation(line: 1904, column: 9, scope: !993)
!7674 = !DILocation(line: 1904, column: 16, scope: !993)
!7675 = !DILocation(line: 1904, column: 9, scope: !910)
!7676 = !DILocation(line: 1905, column: 13, scope: !991)
!7677 = !DILocation(line: 1905, column: 18, scope: !991)
!7678 = !DILocation(line: 1905, column: 13, scope: !992)
!7679 = !DILocation(line: 1906, column: 31, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !990, file: !13, line: 1906, column: 17)
!7681 = !DILocation(line: 1906, column: 39, scope: !7680)
!7682 = !DILocation(line: 1906, column: 17, scope: !7680)
!7683 = !DILocation(line: 1906, column: 45, scope: !7680)
!7684 = !DILocation(line: 1906, column: 17, scope: !990)
!7685 = !DILocation(line: 1907, column: 17, scope: !7680)
!7686 = !DILocation(line: 1908, column: 13, scope: !990)
!7687 = !DILocation(line: 1908, column: 18, scope: !7688)
!7688 = !DILexicalBlockFile(scope: !989, file: !13, discriminator: 1)
!7689 = !DILocation(line: 1908, column: 28, scope: !989)
!7690 = !DILocation(line: 1908, column: 58, scope: !989)
!7691 = !DILocation(line: 1908, column: 73, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !989, file: !13, line: 1908, column: 70)
!7693 = !DILocation(line: 1908, column: 90, scope: !7692)
!7694 = !DILocation(line: 1908, column: 70, scope: !7692)
!7695 = !DILocation(line: 1908, column: 100, scope: !7692)
!7696 = !DILocation(line: 1908, column: 70, scope: !989)
!7697 = !DILocation(line: 1908, column: 70, scope: !7698)
!7698 = !DILexicalBlockFile(scope: !989, file: !13, discriminator: 2)
!7699 = !DILocation(line: 1908, column: 131, scope: !7700)
!7700 = !DILexicalBlockFile(scope: !7692, file: !13, discriminator: 3)
!7701 = !DILocation(line: 1908, column: 149, scope: !7692)
!7702 = !DILocation(line: 1908, column: 159, scope: !7692)
!7703 = !DILocation(line: 1908, column: 184, scope: !7692)
!7704 = !DILocation(line: 1908, column: 115, scope: !7692)
!7705 = !DILocation(line: 1908, column: 203, scope: !7706)
!7706 = !DILexicalBlockFile(scope: !990, file: !13, discriminator: 4)
!7707 = !DILocation(line: 1908, column: 203, scope: !989)
!7708 = !DILocation(line: 1908, column: 203, scope: !7709)
!7709 = !DILexicalBlockFile(scope: !989, file: !13, discriminator: 5)
!7710 = !DILocation(line: 1909, column: 9, scope: !990)
!7711 = !DILocation(line: 1910, column: 31, scope: !992)
!7712 = !DILocation(line: 1910, column: 48, scope: !992)
!7713 = !DILocation(line: 1910, column: 16, scope: !992)
!7714 = !DILocation(line: 1910, column: 14, scope: !992)
!7715 = !DILocation(line: 1911, column: 13, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !992, file: !13, line: 1911, column: 13)
!7717 = !DILocation(line: 1911, column: 18, scope: !7716)
!7718 = !DILocation(line: 1911, column: 13, scope: !992)
!7719 = !DILocation(line: 1912, column: 13, scope: !7716)
!7720 = !DILocation(line: 1913, column: 9, scope: !992)
!7721 = !DILocation(line: 1913, column: 14, scope: !7722)
!7722 = !DILexicalBlockFile(scope: !995, file: !13, discriminator: 1)
!7723 = !DILocation(line: 1913, column: 24, scope: !995)
!7724 = !DILocation(line: 1913, column: 47, scope: !995)
!7725 = !DILocation(line: 1913, column: 60, scope: !999)
!7726 = !DILocation(line: 1913, column: 68, scope: !999)
!7727 = !DILocation(line: 1913, column: 60, scope: !995)
!7728 = !DILocation(line: 1913, column: 94, scope: !7729)
!7729 = !DILexicalBlockFile(scope: !998, file: !13, discriminator: 2)
!7730 = !DILocation(line: 1913, column: 108, scope: !998)
!7731 = !DILocation(line: 1913, column: 113, scope: !7732)
!7732 = !DILexicalBlockFile(scope: !997, file: !13, discriminator: 4)
!7733 = !DILocation(line: 1913, column: 123, scope: !997)
!7734 = !DILocation(line: 1913, column: 153, scope: !997)
!7735 = !DILocation(line: 1913, column: 171, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !997, file: !13, line: 1913, column: 168)
!7737 = !DILocation(line: 1913, column: 188, scope: !7736)
!7738 = !DILocation(line: 1913, column: 168, scope: !7736)
!7739 = !DILocation(line: 1913, column: 198, scope: !7736)
!7740 = !DILocation(line: 1913, column: 168, scope: !997)
!7741 = !DILocation(line: 1913, column: 168, scope: !7742)
!7742 = !DILexicalBlockFile(scope: !997, file: !13, discriminator: 5)
!7743 = !DILocation(line: 1913, column: 229, scope: !7744)
!7744 = !DILexicalBlockFile(scope: !7736, file: !13, discriminator: 6)
!7745 = !DILocation(line: 1913, column: 247, scope: !7736)
!7746 = !DILocation(line: 1913, column: 257, scope: !7736)
!7747 = !DILocation(line: 1913, column: 282, scope: !7736)
!7748 = !DILocation(line: 1913, column: 213, scope: !7736)
!7749 = !DILocation(line: 1913, column: 301, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !998, file: !13, discriminator: 7)
!7751 = !DILocation(line: 1913, column: 301, scope: !997)
!7752 = !DILocation(line: 1913, column: 301, scope: !7753)
!7753 = !DILexicalBlockFile(scope: !997, file: !13, discriminator: 8)
!7754 = !DILocation(line: 1913, column: 314, scope: !7755)
!7755 = !DILexicalBlockFile(scope: !998, file: !13, discriminator: 9)
!7756 = !DILocation(line: 1913, column: 316, scope: !7757)
!7757 = !DILexicalBlockFile(scope: !7758, file: !13, discriminator: 10)
!7758 = !DILexicalBlockFile(scope: !992, file: !13, discriminator: 3)
!7759 = !DILocation(line: 1913, column: 316, scope: !995)
!7760 = !DILocation(line: 1913, column: 316, scope: !7761)
!7761 = !DILexicalBlockFile(scope: !995, file: !13, discriminator: 11)
!7762 = !DILocation(line: 1914, column: 5, scope: !992)
!7763 = !DILocation(line: 1915, column: 9, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !910, file: !13, line: 1915, column: 9)
!7765 = !DILocation(line: 1915, column: 14, scope: !7764)
!7766 = !DILocation(line: 1915, column: 9, scope: !910)
!7767 = !DILocation(line: 1916, column: 25, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7764, file: !13, line: 1915, column: 29)
!7769 = !DILocation(line: 1916, column: 44, scope: !7768)
!7770 = !DILocation(line: 1916, column: 53, scope: !7768)
!7771 = !DILocation(line: 1917, column: 16, scope: !7768)
!7772 = !DILocation(line: 1917, column: 14, scope: !7768)
!7773 = !DILocation(line: 1918, column: 5, scope: !7768)
!7774 = !DILocation(line: 1920, column: 12, scope: !910)
!7775 = !DILocation(line: 1920, column: 5, scope: !910)
!7776 = !DILocation(line: 1923, column: 5, scope: !910)
!7777 = !DILocation(line: 1923, column: 10, scope: !7778)
!7778 = !DILexicalBlockFile(scope: !1001, file: !13, discriminator: 1)
!7779 = !DILocation(line: 1923, column: 20, scope: !1001)
!7780 = !DILocation(line: 1923, column: 51, scope: !1001)
!7781 = !DILocation(line: 1923, column: 64, scope: !1004)
!7782 = !DILocation(line: 1923, column: 80, scope: !1004)
!7783 = !DILocation(line: 1923, column: 64, scope: !1001)
!7784 = !DILocation(line: 1923, column: 95, scope: !7785)
!7785 = !DILexicalBlockFile(scope: !1004, file: !13, discriminator: 2)
!7786 = !DILocation(line: 1923, column: 100, scope: !7787)
!7787 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 4)
!7788 = !DILocation(line: 1923, column: 110, scope: !1003)
!7789 = !DILocation(line: 1923, column: 140, scope: !1003)
!7790 = !DILocation(line: 1923, column: 166, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !1003, file: !13, line: 1923, column: 163)
!7792 = !DILocation(line: 1923, column: 183, scope: !7791)
!7793 = !DILocation(line: 1923, column: 163, scope: !7791)
!7794 = !DILocation(line: 1923, column: 193, scope: !7791)
!7795 = !DILocation(line: 1923, column: 163, scope: !1003)
!7796 = !DILocation(line: 1923, column: 163, scope: !7797)
!7797 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 5)
!7798 = !DILocation(line: 1923, column: 224, scope: !7799)
!7799 = !DILexicalBlockFile(scope: !7791, file: !13, discriminator: 6)
!7800 = !DILocation(line: 1923, column: 242, scope: !7791)
!7801 = !DILocation(line: 1923, column: 252, scope: !7791)
!7802 = !DILocation(line: 1923, column: 277, scope: !7791)
!7803 = !DILocation(line: 1923, column: 208, scope: !7791)
!7804 = !DILocation(line: 1923, column: 296, scope: !7805)
!7805 = !DILexicalBlockFile(scope: !1004, file: !13, discriminator: 7)
!7806 = !DILocation(line: 1923, column: 296, scope: !1003)
!7807 = !DILocation(line: 1923, column: 296, scope: !7808)
!7808 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 8)
!7809 = !DILocation(line: 1923, column: 296, scope: !7810)
!7810 = !DILexicalBlockFile(scope: !1003, file: !13, discriminator: 9)
!7811 = !DILocation(line: 1923, column: 309, scope: !7812)
!7812 = !DILexicalBlockFile(scope: !7813, file: !13, discriminator: 10)
!7813 = !DILexicalBlockFile(scope: !910, file: !13, discriminator: 3)
!7814 = !DILocation(line: 1923, column: 309, scope: !1001)
!7815 = !DILocation(line: 1923, column: 309, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !1001, file: !13, discriminator: 11)
!7817 = !DILocation(line: 1924, column: 5, scope: !910)
!7818 = !DILocation(line: 1924, column: 10, scope: !7819)
!7819 = !DILexicalBlockFile(scope: !1006, file: !13, discriminator: 1)
!7820 = !DILocation(line: 1924, column: 20, scope: !1006)
!7821 = !DILocation(line: 1924, column: 51, scope: !1006)
!7822 = !DILocation(line: 1924, column: 67, scope: !1009)
!7823 = !DILocation(line: 1924, column: 83, scope: !1009)
!7824 = !DILocation(line: 1924, column: 67, scope: !1006)
!7825 = !DILocation(line: 1924, column: 98, scope: !7826)
!7826 = !DILexicalBlockFile(scope: !1009, file: !13, discriminator: 2)
!7827 = !DILocation(line: 1924, column: 103, scope: !7828)
!7828 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 4)
!7829 = !DILocation(line: 1924, column: 113, scope: !1008)
!7830 = !DILocation(line: 1924, column: 143, scope: !1008)
!7831 = !DILocation(line: 1924, column: 169, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !1008, file: !13, line: 1924, column: 166)
!7833 = !DILocation(line: 1924, column: 186, scope: !7832)
!7834 = !DILocation(line: 1924, column: 166, scope: !7832)
!7835 = !DILocation(line: 1924, column: 196, scope: !7832)
!7836 = !DILocation(line: 1924, column: 166, scope: !1008)
!7837 = !DILocation(line: 1924, column: 166, scope: !7838)
!7838 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 5)
!7839 = !DILocation(line: 1924, column: 227, scope: !7840)
!7840 = !DILexicalBlockFile(scope: !7832, file: !13, discriminator: 6)
!7841 = !DILocation(line: 1924, column: 245, scope: !7832)
!7842 = !DILocation(line: 1924, column: 255, scope: !7832)
!7843 = !DILocation(line: 1924, column: 280, scope: !7832)
!7844 = !DILocation(line: 1924, column: 211, scope: !7832)
!7845 = !DILocation(line: 1924, column: 299, scope: !7846)
!7846 = !DILexicalBlockFile(scope: !1009, file: !13, discriminator: 7)
!7847 = !DILocation(line: 1924, column: 299, scope: !1008)
!7848 = !DILocation(line: 1924, column: 299, scope: !7849)
!7849 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 8)
!7850 = !DILocation(line: 1924, column: 299, scope: !7851)
!7851 = !DILexicalBlockFile(scope: !1008, file: !13, discriminator: 9)
!7852 = !DILocation(line: 1924, column: 312, scope: !7812)
!7853 = !DILocation(line: 1924, column: 312, scope: !1006)
!7854 = !DILocation(line: 1924, column: 312, scope: !7855)
!7855 = !DILexicalBlockFile(scope: !1006, file: !13, discriminator: 11)
!7856 = !DILocation(line: 1925, column: 5, scope: !910)
!7857 = !DILocation(line: 1925, column: 10, scope: !7858)
!7858 = !DILexicalBlockFile(scope: !1011, file: !13, discriminator: 1)
!7859 = !DILocation(line: 1925, column: 20, scope: !1011)
!7860 = !DILocation(line: 1925, column: 51, scope: !1011)
!7861 = !DILocation(line: 1925, column: 62, scope: !1014)
!7862 = !DILocation(line: 1925, column: 78, scope: !1014)
!7863 = !DILocation(line: 1925, column: 62, scope: !1011)
!7864 = !DILocation(line: 1925, column: 93, scope: !7865)
!7865 = !DILexicalBlockFile(scope: !1014, file: !13, discriminator: 2)
!7866 = !DILocation(line: 1925, column: 98, scope: !7867)
!7867 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 4)
!7868 = !DILocation(line: 1925, column: 108, scope: !1013)
!7869 = !DILocation(line: 1925, column: 138, scope: !1013)
!7870 = !DILocation(line: 1925, column: 164, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !1013, file: !13, line: 1925, column: 161)
!7872 = !DILocation(line: 1925, column: 181, scope: !7871)
!7873 = !DILocation(line: 1925, column: 161, scope: !7871)
!7874 = !DILocation(line: 1925, column: 191, scope: !7871)
!7875 = !DILocation(line: 1925, column: 161, scope: !1013)
!7876 = !DILocation(line: 1925, column: 161, scope: !7877)
!7877 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 5)
!7878 = !DILocation(line: 1925, column: 222, scope: !7879)
!7879 = !DILexicalBlockFile(scope: !7871, file: !13, discriminator: 6)
!7880 = !DILocation(line: 1925, column: 240, scope: !7871)
!7881 = !DILocation(line: 1925, column: 250, scope: !7871)
!7882 = !DILocation(line: 1925, column: 275, scope: !7871)
!7883 = !DILocation(line: 1925, column: 206, scope: !7871)
!7884 = !DILocation(line: 1925, column: 294, scope: !7885)
!7885 = !DILexicalBlockFile(scope: !1014, file: !13, discriminator: 7)
!7886 = !DILocation(line: 1925, column: 294, scope: !1013)
!7887 = !DILocation(line: 1925, column: 294, scope: !7888)
!7888 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 8)
!7889 = !DILocation(line: 1925, column: 294, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !1013, file: !13, discriminator: 9)
!7891 = !DILocation(line: 1925, column: 307, scope: !7812)
!7892 = !DILocation(line: 1925, column: 307, scope: !1011)
!7893 = !DILocation(line: 1925, column: 307, scope: !7894)
!7894 = !DILexicalBlockFile(scope: !1011, file: !13, discriminator: 11)
!7895 = !DILocation(line: 1926, column: 5, scope: !910)
!7896 = !DILocation(line: 1927, column: 1, scope: !910)
!7897 = !DILocation(line: 2675, column: 34, scope: !1015)
!7898 = !DILocation(line: 2675, column: 46, scope: !1015)
!7899 = !DILocation(line: 2677, column: 9, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !1015, file: !13, line: 2677, column: 9)
!7901 = !DILocation(line: 2677, column: 15, scope: !7900)
!7902 = !DILocation(line: 2677, column: 18, scope: !7900)
!7903 = !DILocation(line: 2677, column: 9, scope: !1015)
!7904 = !DILocation(line: 2677, column: 30, scope: !7905)
!7905 = !DILexicalBlockFile(scope: !7906, file: !13, discriminator: 1)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !13, line: 2677, column: 30)
!7907 = distinct !DILexicalBlock(scope: !7900, file: !13, line: 2677, column: 24)
!7908 = !DILocation(line: 2677, column: 36, scope: !7906)
!7909 = !DILocation(line: 2677, column: 30, scope: !7906)
!7910 = !DILocation(line: 2677, column: 30, scope: !7907)
!7911 = !DILocation(line: 2677, column: 64, scope: !7912)
!7912 = !DILexicalBlockFile(scope: !7913, file: !13, discriminator: 2)
!7913 = distinct !DILexicalBlock(scope: !7906, file: !13, line: 2677, column: 46)
!7914 = !DILocation(line: 2677, column: 48, scope: !7913)
!7915 = !DILocation(line: 2677, column: 122, scope: !7913)
!7916 = !DILocation(line: 2677, column: 147, scope: !7917)
!7917 = !DILexicalBlockFile(scope: !7918, file: !13, discriminator: 3)
!7918 = distinct !DILexicalBlock(scope: !7906, file: !13, line: 2677, column: 129)
!7919 = !DILocation(line: 2677, column: 131, scope: !7918)
!7920 = !DILocation(line: 2677, column: 209, scope: !7921)
!7921 = !DILexicalBlockFile(scope: !7907, file: !13, discriminator: 4)
!7922 = !DILocation(line: 2678, column: 29, scope: !1015)
!7923 = !DILocation(line: 2678, column: 35, scope: !1015)
!7924 = !DILocation(line: 2678, column: 43, scope: !1015)
!7925 = !DILocation(line: 2678, column: 12, scope: !1015)
!7926 = !DILocation(line: 2678, column: 5, scope: !1015)
!7927 = !DILocation(line: 2679, column: 1, scope: !1015)
!7928 = !DILocation(line: 1264, column: 35, scope: !1021)
!7929 = !DILocation(line: 1266, column: 5, scope: !1021)
!7930 = !DILocation(line: 1266, column: 15, scope: !1021)
!7931 = !DILocation(line: 1266, column: 25, scope: !1021)
!7932 = !DILocation(line: 1266, column: 29, scope: !1021)
!7933 = !DILocation(line: 1268, column: 9, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1268, column: 9)
!7935 = !DILocation(line: 1268, column: 15, scope: !7934)
!7936 = !DILocation(line: 1268, column: 29, scope: !7934)
!7937 = !DILocation(line: 1268, column: 9, scope: !1021)
!7938 = !DILocation(line: 1269, column: 9, scope: !7934)
!7939 = !DILocation(line: 1271, column: 15, scope: !1021)
!7940 = !DILocation(line: 1271, column: 21, scope: !1021)
!7941 = !DILocation(line: 1271, column: 13, scope: !1021)
!7942 = !DILocation(line: 1272, column: 21, scope: !1021)
!7943 = !DILocation(line: 1272, column: 32, scope: !1021)
!7944 = !DILocation(line: 1272, column: 41, scope: !1021)
!7945 = !DILocation(line: 1273, column: 5, scope: !1021)
!7946 = !DILocation(line: 1273, column: 11, scope: !1021)
!7947 = !DILocation(line: 1273, column: 31, scope: !1021)
!7948 = !DILocation(line: 1274, column: 5, scope: !1021)
!7949 = !DILocation(line: 1274, column: 10, scope: !7950)
!7950 = !DILexicalBlockFile(scope: !1028, file: !13, discriminator: 1)
!7951 = !DILocation(line: 1274, column: 20, scope: !1028)
!7952 = !DILocation(line: 1274, column: 43, scope: !1028)
!7953 = !DILocation(line: 1274, column: 49, scope: !1028)
!7954 = !DILocation(line: 1274, column: 69, scope: !1032)
!7955 = !DILocation(line: 1274, column: 77, scope: !1032)
!7956 = !DILocation(line: 1274, column: 69, scope: !1028)
!7957 = !DILocation(line: 1274, column: 95, scope: !7958)
!7958 = !DILexicalBlockFile(scope: !1031, file: !13, discriminator: 2)
!7959 = !DILocation(line: 1274, column: 101, scope: !1031)
!7960 = !DILocation(line: 1274, column: 116, scope: !1031)
!7961 = !DILocation(line: 1274, column: 130, scope: !1031)
!7962 = !DILocation(line: 1274, column: 135, scope: !7963)
!7963 = !DILexicalBlockFile(scope: !1030, file: !13, discriminator: 4)
!7964 = !DILocation(line: 1274, column: 145, scope: !1030)
!7965 = !DILocation(line: 1274, column: 175, scope: !1030)
!7966 = !DILocation(line: 1274, column: 193, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !1030, file: !13, line: 1274, column: 190)
!7968 = !DILocation(line: 1274, column: 210, scope: !7967)
!7969 = !DILocation(line: 1274, column: 190, scope: !7967)
!7970 = !DILocation(line: 1274, column: 220, scope: !7967)
!7971 = !DILocation(line: 1274, column: 190, scope: !1030)
!7972 = !DILocation(line: 1274, column: 190, scope: !7973)
!7973 = !DILexicalBlockFile(scope: !1030, file: !13, discriminator: 5)
!7974 = !DILocation(line: 1274, column: 251, scope: !7975)
!7975 = !DILexicalBlockFile(scope: !7967, file: !13, discriminator: 6)
!7976 = !DILocation(line: 1274, column: 269, scope: !7967)
!7977 = !DILocation(line: 1274, column: 279, scope: !7967)
!7978 = !DILocation(line: 1274, column: 304, scope: !7967)
!7979 = !DILocation(line: 1274, column: 235, scope: !7967)
!7980 = !DILocation(line: 1274, column: 323, scope: !7981)
!7981 = !DILexicalBlockFile(scope: !1031, file: !13, discriminator: 7)
!7982 = !DILocation(line: 1274, column: 323, scope: !1030)
!7983 = !DILocation(line: 1274, column: 323, scope: !7984)
!7984 = !DILexicalBlockFile(scope: !1030, file: !13, discriminator: 8)
!7985 = !DILocation(line: 1274, column: 336, scope: !7986)
!7986 = !DILexicalBlockFile(scope: !1031, file: !13, discriminator: 9)
!7987 = !DILocation(line: 1274, column: 338, scope: !7988)
!7988 = !DILexicalBlockFile(scope: !7989, file: !13, discriminator: 10)
!7989 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 3)
!7990 = !DILocation(line: 1274, column: 338, scope: !1028)
!7991 = !DILocation(line: 1274, column: 338, scope: !7992)
!7992 = !DILexicalBlockFile(scope: !1028, file: !13, discriminator: 11)
!7993 = !DILocation(line: 1276, column: 23, scope: !1021)
!7994 = !DILocation(line: 1276, column: 42, scope: !1021)
!7995 = !DILocation(line: 1276, column: 9, scope: !1021)
!7996 = !DILocation(line: 1276, column: 7, scope: !1021)
!7997 = !DILocation(line: 1277, column: 5, scope: !1021)
!7998 = !DILocation(line: 1277, column: 10, scope: !7999)
!7999 = !DILexicalBlockFile(scope: !1034, file: !13, discriminator: 1)
!8000 = !DILocation(line: 1277, column: 20, scope: !1034)
!8001 = !DILocation(line: 1277, column: 50, scope: !1034)
!8002 = !DILocation(line: 1277, column: 68, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !1034, file: !13, line: 1277, column: 65)
!8004 = !DILocation(line: 1277, column: 85, scope: !8003)
!8005 = !DILocation(line: 1277, column: 65, scope: !8003)
!8006 = !DILocation(line: 1277, column: 95, scope: !8003)
!8007 = !DILocation(line: 1277, column: 65, scope: !1034)
!8008 = !DILocation(line: 1277, column: 65, scope: !8009)
!8009 = !DILexicalBlockFile(scope: !1034, file: !13, discriminator: 2)
!8010 = !DILocation(line: 1277, column: 126, scope: !8011)
!8011 = !DILexicalBlockFile(scope: !8003, file: !13, discriminator: 3)
!8012 = !DILocation(line: 1277, column: 144, scope: !8003)
!8013 = !DILocation(line: 1277, column: 154, scope: !8003)
!8014 = !DILocation(line: 1277, column: 179, scope: !8003)
!8015 = !DILocation(line: 1277, column: 110, scope: !8003)
!8016 = !DILocation(line: 1277, column: 198, scope: !8017)
!8017 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 4)
!8018 = !DILocation(line: 1277, column: 198, scope: !1034)
!8019 = !DILocation(line: 1277, column: 198, scope: !8020)
!8020 = !DILexicalBlockFile(scope: !1034, file: !13, discriminator: 5)
!8021 = !DILocation(line: 1278, column: 9, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1278, column: 9)
!8023 = !DILocation(line: 1278, column: 11, scope: !8022)
!8024 = !DILocation(line: 1278, column: 9, scope: !1021)
!8025 = !DILocation(line: 1279, column: 9, scope: !8022)
!8026 = !DILocation(line: 1280, column: 9, scope: !1021)
!8027 = !DILocation(line: 1281, column: 5, scope: !1021)
!8028 = !DILocation(line: 1282, column: 42, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1281, column: 8)
!8030 = !DILocation(line: 1282, column: 48, scope: !8029)
!8031 = !DILocation(line: 1283, column: 42, scope: !8029)
!8032 = !DILocation(line: 1283, column: 59, scope: !8029)
!8033 = !DILocation(line: 1282, column: 15, scope: !8029)
!8034 = !DILocation(line: 1282, column: 13, scope: !8029)
!8035 = !DILocation(line: 1284, column: 5, scope: !8029)
!8036 = !DILocation(line: 1284, column: 14, scope: !8037)
!8037 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 1)
!8038 = !DILocation(line: 1284, column: 18, scope: !1021)
!8039 = !DILocation(line: 1284, column: 32, scope: !1021)
!8040 = !DILocation(line: 1284, column: 35, scope: !8041)
!8041 = !DILexicalBlockFile(scope: !1021, file: !13, discriminator: 2)
!8042 = !DILocation(line: 1284, column: 5, scope: !8043)
!8043 = !DILexicalBlockFile(scope: !8029, file: !13, discriminator: 3)
!8044 = !DILocation(line: 1285, column: 5, scope: !1021)
!8045 = !DILocation(line: 1285, column: 10, scope: !8046)
!8046 = !DILexicalBlockFile(scope: !1036, file: !13, discriminator: 1)
!8047 = !DILocation(line: 1285, column: 20, scope: !1036)
!8048 = !DILocation(line: 1285, column: 50, scope: !1036)
!8049 = !DILocation(line: 1285, column: 62, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !1036, file: !13, line: 1285, column: 59)
!8051 = !DILocation(line: 1285, column: 79, scope: !8050)
!8052 = !DILocation(line: 1285, column: 59, scope: !8050)
!8053 = !DILocation(line: 1285, column: 89, scope: !8050)
!8054 = !DILocation(line: 1285, column: 59, scope: !1036)
!8055 = !DILocation(line: 1285, column: 59, scope: !8056)
!8056 = !DILexicalBlockFile(scope: !1036, file: !13, discriminator: 2)
!8057 = !DILocation(line: 1285, column: 120, scope: !8058)
!8058 = !DILexicalBlockFile(scope: !8050, file: !13, discriminator: 3)
!8059 = !DILocation(line: 1285, column: 138, scope: !8050)
!8060 = !DILocation(line: 1285, column: 148, scope: !8050)
!8061 = !DILocation(line: 1285, column: 173, scope: !8050)
!8062 = !DILocation(line: 1285, column: 104, scope: !8050)
!8063 = !DILocation(line: 1285, column: 192, scope: !8017)
!8064 = !DILocation(line: 1285, column: 192, scope: !1036)
!8065 = !DILocation(line: 1285, column: 192, scope: !8066)
!8066 = !DILexicalBlockFile(scope: !1036, file: !13, discriminator: 5)
!8067 = !DILocation(line: 1286, column: 9, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !1021, file: !13, line: 1286, column: 9)
!8069 = !DILocation(line: 1286, column: 13, scope: !8068)
!8070 = !DILocation(line: 1286, column: 9, scope: !1021)
!8071 = !DILocation(line: 1287, column: 9, scope: !8068)
!8072 = !DILocation(line: 1288, column: 5, scope: !1021)
!8073 = !DILocation(line: 1288, column: 10, scope: !8074)
!8074 = !DILexicalBlockFile(scope: !1038, file: !13, discriminator: 1)
!8075 = !DILocation(line: 1288, column: 20, scope: !1038)
!8076 = !DILocation(line: 1288, column: 50, scope: !1038)
!8077 = !DILocation(line: 1288, column: 64, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !1038, file: !13, line: 1288, column: 61)
!8079 = !DILocation(line: 1288, column: 81, scope: !8078)
!8080 = !DILocation(line: 1288, column: 61, scope: !8078)
!8081 = !DILocation(line: 1288, column: 91, scope: !8078)
!8082 = !DILocation(line: 1288, column: 61, scope: !1038)
!8083 = !DILocation(line: 1288, column: 61, scope: !8084)
!8084 = !DILexicalBlockFile(scope: !1038, file: !13, discriminator: 2)
!8085 = !DILocation(line: 1288, column: 122, scope: !8086)
!8086 = !DILexicalBlockFile(scope: !8078, file: !13, discriminator: 3)
!8087 = !DILocation(line: 1288, column: 140, scope: !8078)
!8088 = !DILocation(line: 1288, column: 150, scope: !8078)
!8089 = !DILocation(line: 1288, column: 175, scope: !8078)
!8090 = !DILocation(line: 1288, column: 106, scope: !8078)
!8091 = !DILocation(line: 1288, column: 194, scope: !8017)
!8092 = !DILocation(line: 1288, column: 194, scope: !1038)
!8093 = !DILocation(line: 1288, column: 194, scope: !8094)
!8094 = !DILexicalBlockFile(scope: !1038, file: !13, discriminator: 5)
!8095 = !DILocation(line: 1289, column: 5, scope: !1021)
!8096 = !DILocation(line: 1290, column: 1, scope: !1021)
!8097 = !DILocation(line: 1438, column: 34, scope: !1039)
!8098 = !DILocation(line: 1438, column: 51, scope: !1039)
!8099 = !DILocation(line: 1440, column: 5, scope: !1039)
!8100 = !DILocation(line: 1440, column: 15, scope: !1039)
!8101 = !DILocation(line: 1441, column: 5, scope: !1039)
!8102 = !DILocation(line: 1441, column: 15, scope: !1039)
!8103 = !DILocation(line: 1442, column: 5, scope: !1039)
!8104 = !DILocation(line: 1442, column: 15, scope: !1039)
!8105 = !DILocation(line: 1443, column: 5, scope: !1039)
!8106 = !DILocation(line: 1443, column: 15, scope: !1039)
!8107 = !DILocation(line: 1443, column: 31, scope: !1039)
!8108 = !DILocation(line: 1444, column: 5, scope: !1039)
!8109 = !DILocation(line: 1444, column: 16, scope: !1039)
!8110 = !DILocation(line: 1444, column: 24, scope: !1039)
!8111 = !DILocation(line: 1445, column: 5, scope: !1039)
!8112 = !DILocation(line: 1445, column: 9, scope: !1039)
!8113 = !DILocation(line: 1453, column: 9, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1453, column: 9)
!8115 = !DILocation(line: 1453, column: 15, scope: !8114)
!8116 = !DILocation(line: 1453, column: 23, scope: !8114)
!8117 = !DILocation(line: 1453, column: 9, scope: !1039)
!8118 = !DILocation(line: 1454, column: 9, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8114, file: !13, line: 1453, column: 38)
!8120 = !DILocation(line: 1455, column: 9, scope: !8119)
!8121 = !DILocation(line: 1458, column: 9, scope: !1055)
!8122 = !DILocation(line: 1458, column: 15, scope: !1055)
!8123 = !DILocation(line: 1458, column: 9, scope: !1039)
!8124 = !DILocation(line: 1463, column: 9, scope: !1054)
!8125 = !DILocation(line: 1463, column: 19, scope: !1054)
!8126 = !DILocation(line: 1463, column: 54, scope: !1054)
!8127 = !DILocation(line: 1463, column: 60, scope: !1054)
!8128 = !DILocation(line: 1464, column: 54, scope: !1054)
!8129 = !DILocation(line: 1463, column: 27, scope: !1054)
!8130 = !DILocation(line: 1465, column: 13, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !1054, file: !13, line: 1465, column: 13)
!8132 = !DILocation(line: 1465, column: 19, scope: !8131)
!8133 = !DILocation(line: 1465, column: 13, scope: !1054)
!8134 = !DILocation(line: 1466, column: 13, scope: !8131)
!8135 = !DILocation(line: 1470, column: 32, scope: !1059)
!8136 = !DILocation(line: 1470, column: 13, scope: !1059)
!8137 = !DILocation(line: 1470, column: 72, scope: !1059)
!8138 = !DILocation(line: 1470, column: 13, scope: !1054)
!8139 = !DILocation(line: 1471, column: 13, scope: !1058)
!8140 = !DILocation(line: 1471, column: 18, scope: !8141)
!8141 = !DILexicalBlockFile(scope: !1057, file: !13, discriminator: 1)
!8142 = !DILocation(line: 1471, column: 28, scope: !1057)
!8143 = !DILocation(line: 1471, column: 58, scope: !1057)
!8144 = !DILocation(line: 1471, column: 74, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !1057, file: !13, line: 1471, column: 71)
!8146 = !DILocation(line: 1471, column: 91, scope: !8145)
!8147 = !DILocation(line: 1471, column: 71, scope: !8145)
!8148 = !DILocation(line: 1471, column: 101, scope: !8145)
!8149 = !DILocation(line: 1471, column: 71, scope: !1057)
!8150 = !DILocation(line: 1471, column: 71, scope: !8151)
!8151 = !DILexicalBlockFile(scope: !1057, file: !13, discriminator: 2)
!8152 = !DILocation(line: 1471, column: 132, scope: !8153)
!8153 = !DILexicalBlockFile(scope: !8145, file: !13, discriminator: 3)
!8154 = !DILocation(line: 1471, column: 150, scope: !8145)
!8155 = !DILocation(line: 1471, column: 160, scope: !8145)
!8156 = !DILocation(line: 1471, column: 185, scope: !8145)
!8157 = !DILocation(line: 1471, column: 116, scope: !8145)
!8158 = !DILocation(line: 1471, column: 204, scope: !8159)
!8159 = !DILexicalBlockFile(scope: !1058, file: !13, discriminator: 4)
!8160 = !DILocation(line: 1471, column: 204, scope: !1057)
!8161 = !DILocation(line: 1471, column: 204, scope: !8162)
!8162 = !DILexicalBlockFile(scope: !1057, file: !13, discriminator: 5)
!8163 = !DILocation(line: 1472, column: 13, scope: !1058)
!8164 = !DILocation(line: 1474, column: 25, scope: !1054)
!8165 = !DILocation(line: 1474, column: 39, scope: !1054)
!8166 = !DILocation(line: 1474, column: 48, scope: !1054)
!8167 = !DILocation(line: 1475, column: 25, scope: !1054)
!8168 = !DILocation(line: 1475, column: 38, scope: !1054)
!8169 = !DILocation(line: 1475, column: 47, scope: !1054)
!8170 = !DILocation(line: 1476, column: 9, scope: !1054)
!8171 = !DILocation(line: 1476, column: 14, scope: !8172)
!8172 = !DILexicalBlockFile(scope: !1061, file: !13, discriminator: 1)
!8173 = !DILocation(line: 1476, column: 24, scope: !1061)
!8174 = !DILocation(line: 1476, column: 54, scope: !1061)
!8175 = !DILocation(line: 1476, column: 70, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !1061, file: !13, line: 1476, column: 67)
!8177 = !DILocation(line: 1476, column: 87, scope: !8176)
!8178 = !DILocation(line: 1476, column: 67, scope: !8176)
!8179 = !DILocation(line: 1476, column: 97, scope: !8176)
!8180 = !DILocation(line: 1476, column: 67, scope: !1061)
!8181 = !DILocation(line: 1476, column: 67, scope: !8182)
!8182 = !DILexicalBlockFile(scope: !1061, file: !13, discriminator: 2)
!8183 = !DILocation(line: 1476, column: 128, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !8176, file: !13, discriminator: 3)
!8185 = !DILocation(line: 1476, column: 146, scope: !8176)
!8186 = !DILocation(line: 1476, column: 156, scope: !8176)
!8187 = !DILocation(line: 1476, column: 181, scope: !8176)
!8188 = !DILocation(line: 1476, column: 112, scope: !8176)
!8189 = !DILocation(line: 1476, column: 200, scope: !8190)
!8190 = !DILexicalBlockFile(scope: !1054, file: !13, discriminator: 4)
!8191 = !DILocation(line: 1476, column: 200, scope: !1061)
!8192 = !DILocation(line: 1476, column: 200, scope: !8193)
!8193 = !DILexicalBlockFile(scope: !1061, file: !13, discriminator: 5)
!8194 = !DILocation(line: 1477, column: 5, scope: !1055)
!8195 = !DILocation(line: 1477, column: 5, scope: !8196)
!8196 = !DILexicalBlockFile(scope: !1055, file: !13, discriminator: 1)
!8197 = !DILocation(line: 1477, column: 5, scope: !1054)
!8198 = !DILocation(line: 1480, column: 9, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1480, column: 9)
!8200 = !DILocation(line: 1480, column: 19, scope: !8199)
!8201 = !DILocation(line: 1480, column: 9, scope: !1039)
!8202 = !DILocation(line: 1481, column: 37, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8199, file: !13, line: 1480, column: 24)
!8204 = !DILocation(line: 1481, column: 43, scope: !8203)
!8205 = !DILocation(line: 1481, column: 53, scope: !8203)
!8206 = !DILocation(line: 1481, column: 35, scope: !8203)
!8207 = !DILocation(line: 1481, column: 65, scope: !8208)
!8208 = !DILexicalBlockFile(scope: !8203, file: !13, discriminator: 1)
!8209 = !DILocation(line: 1481, column: 71, scope: !8203)
!8210 = !DILocation(line: 1481, column: 35, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !8203, file: !13, discriminator: 2)
!8212 = !DILocation(line: 1481, column: 92, scope: !8213)
!8213 = !DILexicalBlockFile(scope: !8214, file: !13, discriminator: 4)
!8214 = !DILexicalBlockFile(scope: !8203, file: !13, discriminator: 3)
!8215 = !DILocation(line: 1481, column: 90, scope: !8203)
!8216 = !DILocation(line: 1481, column: 21, scope: !8203)
!8217 = !DILocation(line: 1481, column: 19, scope: !8203)
!8218 = !DILocation(line: 1482, column: 5, scope: !8203)
!8219 = !DILocation(line: 1483, column: 40, scope: !1039)
!8220 = !DILocation(line: 1483, column: 46, scope: !1039)
!8221 = !DILocation(line: 1483, column: 61, scope: !1039)
!8222 = !DILocation(line: 1483, column: 58, scope: !1039)
!8223 = !DILocation(line: 1483, column: 38, scope: !1039)
!8224 = !DILocation(line: 1483, column: 76, scope: !8225)
!8225 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 1)
!8226 = !DILocation(line: 1483, column: 82, scope: !1039)
!8227 = !DILocation(line: 1483, column: 97, scope: !8228)
!8228 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 2)
!8229 = !DILocation(line: 1483, column: 18, scope: !8230)
!8230 = !DILexicalBlockFile(scope: !8231, file: !13, discriminator: 4)
!8231 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 3)
!8232 = !DILocation(line: 1483, column: 16, scope: !1039)
!8233 = !DILocation(line: 1484, column: 9, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1484, column: 9)
!8235 = !DILocation(line: 1484, column: 20, scope: !8234)
!8236 = !DILocation(line: 1484, column: 9, scope: !1039)
!8237 = !DILocation(line: 1485, column: 9, scope: !8234)
!8238 = !DILocation(line: 1486, column: 46, scope: !1039)
!8239 = !DILocation(line: 1486, column: 52, scope: !1039)
!8240 = !DILocation(line: 1487, column: 10, scope: !1039)
!8241 = !DILocation(line: 1487, column: 16, scope: !1039)
!8242 = !DILocation(line: 1487, column: 28, scope: !8225)
!8243 = !DILocation(line: 1487, column: 45, scope: !8228)
!8244 = !DILocation(line: 1488, column: 9, scope: !1039)
!8245 = !DILocation(line: 1486, column: 19, scope: !1039)
!8246 = !DILocation(line: 1486, column: 17, scope: !1039)
!8247 = !DILocation(line: 1489, column: 5, scope: !1039)
!8248 = !DILocation(line: 1489, column: 10, scope: !8249)
!8249 = !DILexicalBlockFile(scope: !1063, file: !13, discriminator: 1)
!8250 = !DILocation(line: 1489, column: 20, scope: !1063)
!8251 = !DILocation(line: 1489, column: 50, scope: !1063)
!8252 = !DILocation(line: 1489, column: 71, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !1063, file: !13, line: 1489, column: 68)
!8254 = !DILocation(line: 1489, column: 88, scope: !8253)
!8255 = !DILocation(line: 1489, column: 68, scope: !8253)
!8256 = !DILocation(line: 1489, column: 98, scope: !8253)
!8257 = !DILocation(line: 1489, column: 68, scope: !1063)
!8258 = !DILocation(line: 1489, column: 68, scope: !8259)
!8259 = !DILexicalBlockFile(scope: !1063, file: !13, discriminator: 2)
!8260 = !DILocation(line: 1489, column: 129, scope: !8261)
!8261 = !DILexicalBlockFile(scope: !8253, file: !13, discriminator: 3)
!8262 = !DILocation(line: 1489, column: 147, scope: !8253)
!8263 = !DILocation(line: 1489, column: 157, scope: !8253)
!8264 = !DILocation(line: 1489, column: 182, scope: !8253)
!8265 = !DILocation(line: 1489, column: 113, scope: !8253)
!8266 = !DILocation(line: 1489, column: 201, scope: !8267)
!8267 = !DILexicalBlockFile(scope: !1039, file: !13, discriminator: 4)
!8268 = !DILocation(line: 1489, column: 201, scope: !1063)
!8269 = !DILocation(line: 1489, column: 201, scope: !8270)
!8270 = !DILexicalBlockFile(scope: !1063, file: !13, discriminator: 5)
!8271 = !DILocation(line: 1490, column: 9, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1490, column: 9)
!8273 = !DILocation(line: 1490, column: 21, scope: !8272)
!8274 = !DILocation(line: 1490, column: 9, scope: !1039)
!8275 = !DILocation(line: 1491, column: 9, scope: !8272)
!8276 = !DILocation(line: 1492, column: 27, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1492, column: 9)
!8278 = !DILocation(line: 1492, column: 42, scope: !8277)
!8279 = !DILocation(line: 1492, column: 53, scope: !8277)
!8280 = !DILocation(line: 1492, column: 62, scope: !8277)
!8281 = !DILocation(line: 1492, column: 79, scope: !8277)
!8282 = !DILocation(line: 1492, column: 9, scope: !1039)
!8283 = !DILocation(line: 1493, column: 22, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8277, file: !13, line: 1492, column: 86)
!8285 = !DILocation(line: 1495, column: 39, scope: !8284)
!8286 = !DILocation(line: 1495, column: 45, scope: !8284)
!8287 = !DILocation(line: 1496, column: 36, scope: !8284)
!8288 = !DILocation(line: 1496, column: 51, scope: !8284)
!8289 = !DILocation(line: 1496, column: 61, scope: !8284)
!8290 = !DILocation(line: 1493, column: 9, scope: !8284)
!8291 = !DILocation(line: 1497, column: 9, scope: !8284)
!8292 = !DILocation(line: 1500, column: 27, scope: !1039)
!8293 = !DILocation(line: 1500, column: 14, scope: !1039)
!8294 = !DILocation(line: 1500, column: 12, scope: !1039)
!8295 = !DILocation(line: 1501, column: 12, scope: !1039)
!8296 = !DILocation(line: 1501, column: 19, scope: !1039)
!8297 = !DILocation(line: 1501, column: 9, scope: !1039)
!8298 = !DILocation(line: 1503, column: 23, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1503, column: 9)
!8300 = !DILocation(line: 1503, column: 29, scope: !8299)
!8301 = !DILocation(line: 1503, column: 40, scope: !8299)
!8302 = !DILocation(line: 1503, column: 49, scope: !8299)
!8303 = !DILocation(line: 1503, column: 9, scope: !1039)
!8304 = !DILocation(line: 1505, column: 13, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8299, file: !13, line: 1503, column: 87)
!8306 = !DILocation(line: 1505, column: 19, scope: !8305)
!8307 = !DILocation(line: 1505, column: 28, scope: !8305)
!8308 = !DILocation(line: 1505, column: 41, scope: !8305)
!8309 = !DILocation(line: 1504, column: 25, scope: !8305)
!8310 = !DILocation(line: 1504, column: 23, scope: !8305)
!8311 = !DILocation(line: 1506, column: 5, scope: !8305)
!8312 = !DILocation(line: 1508, column: 52, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8299, file: !13, line: 1507, column: 10)
!8314 = !DILocation(line: 1508, column: 58, scope: !8313)
!8315 = !DILocation(line: 1509, column: 13, scope: !8313)
!8316 = !DILocation(line: 1509, column: 31, scope: !8313)
!8317 = !DILocation(line: 1509, column: 44, scope: !8313)
!8318 = !DILocation(line: 1508, column: 25, scope: !8313)
!8319 = !DILocation(line: 1508, column: 23, scope: !8313)
!8320 = !DILocation(line: 1512, column: 23, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1512, column: 9)
!8322 = !DILocation(line: 1512, column: 9, scope: !8321)
!8323 = !DILocation(line: 1512, column: 38, scope: !8321)
!8324 = !DILocation(line: 1512, column: 9, scope: !1039)
!8325 = !DILocation(line: 1513, column: 9, scope: !8321)
!8326 = !DILocation(line: 1514, column: 37, scope: !1039)
!8327 = !DILocation(line: 1514, column: 43, scope: !1039)
!8328 = !DILocation(line: 1514, column: 5, scope: !1039)
!8329 = !DILocation(line: 1515, column: 62, scope: !1039)
!8330 = !DILocation(line: 1515, column: 44, scope: !1039)
!8331 = !DILocation(line: 1515, column: 79, scope: !1039)
!8332 = !DILocation(line: 1515, column: 12, scope: !1039)
!8333 = !DILocation(line: 1516, column: 9, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1516, column: 9)
!8335 = !DILocation(line: 1516, column: 16, scope: !8334)
!8336 = !DILocation(line: 1516, column: 9, scope: !1039)
!8337 = !DILocation(line: 1517, column: 35, scope: !8334)
!8338 = !DILocation(line: 1517, column: 26, scope: !8334)
!8339 = !DILocation(line: 1517, column: 44, scope: !8334)
!8340 = !DILocation(line: 1517, column: 42, scope: !8334)
!8341 = !DILocation(line: 1517, column: 9, scope: !8334)
!8342 = !DILocation(line: 1517, column: 15, scope: !8334)
!8343 = !DILocation(line: 1517, column: 24, scope: !8334)
!8344 = !DILocation(line: 1519, column: 9, scope: !8334)
!8345 = !DILocation(line: 1519, column: 15, scope: !8334)
!8346 = !DILocation(line: 1519, column: 24, scope: !8334)
!8347 = !DILocation(line: 1520, column: 9, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !1039, file: !13, line: 1520, column: 9)
!8349 = !DILocation(line: 1520, column: 16, scope: !8348)
!8350 = !DILocation(line: 1520, column: 9, scope: !1039)
!8351 = !DILocation(line: 1521, column: 13, scope: !8348)
!8352 = !DILocation(line: 1521, column: 9, scope: !8348)
!8353 = !DILocation(line: 1523, column: 9, scope: !1066)
!8354 = !DILocation(line: 1523, column: 15, scope: !1066)
!8355 = !DILocation(line: 1523, column: 9, scope: !1039)
!8356 = !DILocation(line: 1527, column: 9, scope: !1065)
!8357 = !DILocation(line: 1527, column: 19, scope: !1065)
!8358 = !DILocation(line: 1527, column: 45, scope: !1065)
!8359 = !DILocation(line: 1527, column: 57, scope: !1065)
!8360 = !DILocation(line: 1527, column: 32, scope: !1065)
!8361 = !DILocation(line: 1528, column: 13, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !1065, file: !13, line: 1528, column: 13)
!8363 = !DILocation(line: 1528, column: 24, scope: !8362)
!8364 = !DILocation(line: 1528, column: 13, scope: !1065)
!8365 = !DILocation(line: 1529, column: 13, scope: !8362)
!8366 = !DILocation(line: 1530, column: 31, scope: !1070)
!8367 = !DILocation(line: 1530, column: 45, scope: !1070)
!8368 = !DILocation(line: 1530, column: 56, scope: !1070)
!8369 = !DILocation(line: 1530, column: 65, scope: !1070)
!8370 = !DILocation(line: 1530, column: 82, scope: !1070)
!8371 = !DILocation(line: 1530, column: 13, scope: !1065)
!8372 = !DILocation(line: 1531, column: 26, scope: !1069)
!8373 = !DILocation(line: 1534, column: 40, scope: !1069)
!8374 = !DILocation(line: 1534, column: 54, scope: !1069)
!8375 = !DILocation(line: 1534, column: 64, scope: !1069)
!8376 = !DILocation(line: 1531, column: 13, scope: !1069)
!8377 = !DILocation(line: 1535, column: 13, scope: !1069)
!8378 = !DILocation(line: 1535, column: 18, scope: !8379)
!8379 = !DILexicalBlockFile(scope: !1068, file: !13, discriminator: 1)
!8380 = !DILocation(line: 1535, column: 28, scope: !1068)
!8381 = !DILocation(line: 1535, column: 58, scope: !1068)
!8382 = !DILocation(line: 1535, column: 79, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !1068, file: !13, line: 1535, column: 76)
!8384 = !DILocation(line: 1535, column: 96, scope: !8383)
!8385 = !DILocation(line: 1535, column: 76, scope: !8383)
!8386 = !DILocation(line: 1535, column: 106, scope: !8383)
!8387 = !DILocation(line: 1535, column: 76, scope: !1068)
!8388 = !DILocation(line: 1535, column: 76, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !1068, file: !13, discriminator: 2)
!8390 = !DILocation(line: 1535, column: 137, scope: !8391)
!8391 = !DILexicalBlockFile(scope: !8383, file: !13, discriminator: 3)
!8392 = !DILocation(line: 1535, column: 155, scope: !8383)
!8393 = !DILocation(line: 1535, column: 165, scope: !8383)
!8394 = !DILocation(line: 1535, column: 190, scope: !8383)
!8395 = !DILocation(line: 1535, column: 121, scope: !8383)
!8396 = !DILocation(line: 1535, column: 209, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !1069, file: !13, discriminator: 4)
!8398 = !DILocation(line: 1535, column: 209, scope: !1068)
!8399 = !DILocation(line: 1535, column: 209, scope: !8400)
!8400 = !DILexicalBlockFile(scope: !1068, file: !13, discriminator: 5)
!8401 = !DILocation(line: 1536, column: 13, scope: !1069)
!8402 = !DILocation(line: 1538, column: 9, scope: !1065)
!8403 = !DILocation(line: 1538, column: 14, scope: !8404)
!8404 = !DILexicalBlockFile(scope: !1072, file: !13, discriminator: 1)
!8405 = !DILocation(line: 1538, column: 24, scope: !1072)
!8406 = !DILocation(line: 1538, column: 54, scope: !1072)
!8407 = !DILocation(line: 1538, column: 75, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !1072, file: !13, line: 1538, column: 72)
!8409 = !DILocation(line: 1538, column: 92, scope: !8408)
!8410 = !DILocation(line: 1538, column: 72, scope: !8408)
!8411 = !DILocation(line: 1538, column: 102, scope: !8408)
!8412 = !DILocation(line: 1538, column: 72, scope: !1072)
!8413 = !DILocation(line: 1538, column: 72, scope: !8414)
!8414 = !DILexicalBlockFile(scope: !1072, file: !13, discriminator: 2)
!8415 = !DILocation(line: 1538, column: 133, scope: !8416)
!8416 = !DILexicalBlockFile(scope: !8408, file: !13, discriminator: 3)
!8417 = !DILocation(line: 1538, column: 151, scope: !8408)
!8418 = !DILocation(line: 1538, column: 161, scope: !8408)
!8419 = !DILocation(line: 1538, column: 186, scope: !8408)
!8420 = !DILocation(line: 1538, column: 117, scope: !8408)
!8421 = !DILocation(line: 1538, column: 205, scope: !8422)
!8422 = !DILexicalBlockFile(scope: !1065, file: !13, discriminator: 4)
!8423 = !DILocation(line: 1538, column: 205, scope: !1072)
!8424 = !DILocation(line: 1538, column: 205, scope: !8425)
!8425 = !DILexicalBlockFile(scope: !1072, file: !13, discriminator: 5)
!8426 = !DILocation(line: 1539, column: 9, scope: !1065)
!8427 = !DILocation(line: 1539, column: 14, scope: !8428)
!8428 = !DILexicalBlockFile(scope: !1074, file: !13, discriminator: 1)
!8429 = !DILocation(line: 1539, column: 24, scope: !1074)
!8430 = !DILocation(line: 1539, column: 47, scope: !1074)
!8431 = !DILocation(line: 1539, column: 53, scope: !1074)
!8432 = !DILocation(line: 1539, column: 68, scope: !1078)
!8433 = !DILocation(line: 1539, column: 76, scope: !1078)
!8434 = !DILocation(line: 1539, column: 68, scope: !1074)
!8435 = !DILocation(line: 1539, column: 94, scope: !8436)
!8436 = !DILexicalBlockFile(scope: !1077, file: !13, discriminator: 2)
!8437 = !DILocation(line: 1539, column: 100, scope: !1077)
!8438 = !DILocation(line: 1539, column: 110, scope: !1077)
!8439 = !DILocation(line: 1539, column: 124, scope: !1077)
!8440 = !DILocation(line: 1539, column: 129, scope: !8441)
!8441 = !DILexicalBlockFile(scope: !1076, file: !13, discriminator: 4)
!8442 = !DILocation(line: 1539, column: 139, scope: !1076)
!8443 = !DILocation(line: 1539, column: 169, scope: !1076)
!8444 = !DILocation(line: 1539, column: 187, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !1076, file: !13, line: 1539, column: 184)
!8446 = !DILocation(line: 1539, column: 204, scope: !8445)
!8447 = !DILocation(line: 1539, column: 184, scope: !8445)
!8448 = !DILocation(line: 1539, column: 214, scope: !8445)
!8449 = !DILocation(line: 1539, column: 184, scope: !1076)
!8450 = !DILocation(line: 1539, column: 184, scope: !8451)
!8451 = !DILexicalBlockFile(scope: !1076, file: !13, discriminator: 5)
!8452 = !DILocation(line: 1539, column: 245, scope: !8453)
!8453 = !DILexicalBlockFile(scope: !8445, file: !13, discriminator: 6)
!8454 = !DILocation(line: 1539, column: 263, scope: !8445)
!8455 = !DILocation(line: 1539, column: 273, scope: !8445)
!8456 = !DILocation(line: 1539, column: 298, scope: !8445)
!8457 = !DILocation(line: 1539, column: 229, scope: !8445)
!8458 = !DILocation(line: 1539, column: 317, scope: !8459)
!8459 = !DILexicalBlockFile(scope: !1077, file: !13, discriminator: 7)
!8460 = !DILocation(line: 1539, column: 317, scope: !1076)
!8461 = !DILocation(line: 1539, column: 317, scope: !8462)
!8462 = !DILexicalBlockFile(scope: !1076, file: !13, discriminator: 8)
!8463 = !DILocation(line: 1539, column: 330, scope: !8464)
!8464 = !DILexicalBlockFile(scope: !1077, file: !13, discriminator: 9)
!8465 = !DILocation(line: 1539, column: 332, scope: !8466)
!8466 = !DILexicalBlockFile(scope: !8467, file: !13, discriminator: 10)
!8467 = !DILexicalBlockFile(scope: !1065, file: !13, discriminator: 3)
!8468 = !DILocation(line: 1539, column: 332, scope: !1074)
!8469 = !DILocation(line: 1539, column: 332, scope: !8470)
!8470 = !DILexicalBlockFile(scope: !1074, file: !13, discriminator: 11)
!8471 = !DILocation(line: 1540, column: 53, scope: !1065)
!8472 = !DILocation(line: 1540, column: 64, scope: !1065)
!8473 = !DILocation(line: 1540, column: 26, scope: !1065)
!8474 = !DILocation(line: 1540, column: 9, scope: !1065)
!8475 = !DILocation(line: 1540, column: 15, scope: !1065)
!8476 = !DILocation(line: 1540, column: 24, scope: !1065)
!8477 = !DILocation(line: 1541, column: 5, scope: !1066)
!8478 = !DILocation(line: 1541, column: 5, scope: !8479)
!8479 = !DILexicalBlockFile(scope: !1066, file: !13, discriminator: 1)
!8480 = !DILocation(line: 1541, column: 5, scope: !1065)
!8481 = !DILocation(line: 1542, column: 5, scope: !1039)
!8482 = !DILocation(line: 1542, column: 10, scope: !8483)
!8483 = !DILexicalBlockFile(scope: !1080, file: !13, discriminator: 1)
!8484 = !DILocation(line: 1542, column: 20, scope: !1080)
!8485 = !DILocation(line: 1542, column: 50, scope: !1080)
!8486 = !DILocation(line: 1542, column: 72, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !1080, file: !13, line: 1542, column: 69)
!8488 = !DILocation(line: 1542, column: 89, scope: !8487)
!8489 = !DILocation(line: 1542, column: 69, scope: !8487)
!8490 = !DILocation(line: 1542, column: 99, scope: !8487)
!8491 = !DILocation(line: 1542, column: 69, scope: !1080)
!8492 = !DILocation(line: 1542, column: 69, scope: !8493)
!8493 = !DILexicalBlockFile(scope: !1080, file: !13, discriminator: 2)
!8494 = !DILocation(line: 1542, column: 130, scope: !8495)
!8495 = !DILexicalBlockFile(scope: !8487, file: !13, discriminator: 3)
!8496 = !DILocation(line: 1542, column: 148, scope: !8487)
!8497 = !DILocation(line: 1542, column: 158, scope: !8487)
!8498 = !DILocation(line: 1542, column: 183, scope: !8487)
!8499 = !DILocation(line: 1542, column: 114, scope: !8487)
!8500 = !DILocation(line: 1542, column: 202, scope: !8267)
!8501 = !DILocation(line: 1542, column: 202, scope: !1080)
!8502 = !DILocation(line: 1542, column: 202, scope: !8503)
!8503 = !DILexicalBlockFile(scope: !1080, file: !13, discriminator: 5)
!8504 = !DILocation(line: 1544, column: 13, scope: !1039)
!8505 = !DILocation(line: 1544, column: 17, scope: !1039)
!8506 = !DILocation(line: 1544, column: 5, scope: !1039)
!8507 = !DILocation(line: 1547, column: 5, scope: !1039)
!8508 = !DILocation(line: 1547, column: 10, scope: !8509)
!8509 = !DILexicalBlockFile(scope: !1082, file: !13, discriminator: 1)
!8510 = !DILocation(line: 1547, column: 20, scope: !1082)
!8511 = !DILocation(line: 1547, column: 51, scope: !1082)
!8512 = !DILocation(line: 1547, column: 68, scope: !1085)
!8513 = !DILocation(line: 1547, column: 84, scope: !1085)
!8514 = !DILocation(line: 1547, column: 68, scope: !1082)
!8515 = !DILocation(line: 1547, column: 99, scope: !8516)
!8516 = !DILexicalBlockFile(scope: !1085, file: !13, discriminator: 2)
!8517 = !DILocation(line: 1547, column: 104, scope: !8518)
!8518 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 4)
!8519 = !DILocation(line: 1547, column: 114, scope: !1084)
!8520 = !DILocation(line: 1547, column: 144, scope: !1084)
!8521 = !DILocation(line: 1547, column: 170, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !1084, file: !13, line: 1547, column: 167)
!8523 = !DILocation(line: 1547, column: 187, scope: !8522)
!8524 = !DILocation(line: 1547, column: 167, scope: !8522)
!8525 = !DILocation(line: 1547, column: 197, scope: !8522)
!8526 = !DILocation(line: 1547, column: 167, scope: !1084)
!8527 = !DILocation(line: 1547, column: 167, scope: !8528)
!8528 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 5)
!8529 = !DILocation(line: 1547, column: 228, scope: !8530)
!8530 = !DILexicalBlockFile(scope: !8522, file: !13, discriminator: 6)
!8531 = !DILocation(line: 1547, column: 246, scope: !8522)
!8532 = !DILocation(line: 1547, column: 256, scope: !8522)
!8533 = !DILocation(line: 1547, column: 281, scope: !8522)
!8534 = !DILocation(line: 1547, column: 212, scope: !8522)
!8535 = !DILocation(line: 1547, column: 300, scope: !8536)
!8536 = !DILexicalBlockFile(scope: !1085, file: !13, discriminator: 7)
!8537 = !DILocation(line: 1547, column: 300, scope: !1084)
!8538 = !DILocation(line: 1547, column: 300, scope: !8539)
!8539 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 8)
!8540 = !DILocation(line: 1547, column: 300, scope: !8541)
!8541 = !DILexicalBlockFile(scope: !1084, file: !13, discriminator: 9)
!8542 = !DILocation(line: 1547, column: 313, scope: !8543)
!8543 = !DILexicalBlockFile(scope: !8231, file: !13, discriminator: 10)
!8544 = !DILocation(line: 1547, column: 313, scope: !1082)
!8545 = !DILocation(line: 1547, column: 313, scope: !8546)
!8546 = !DILexicalBlockFile(scope: !1082, file: !13, discriminator: 11)
!8547 = !DILocation(line: 1548, column: 5, scope: !1039)
!8548 = !DILocation(line: 1548, column: 10, scope: !8549)
!8549 = !DILexicalBlockFile(scope: !1087, file: !13, discriminator: 1)
!8550 = !DILocation(line: 1548, column: 20, scope: !1087)
!8551 = !DILocation(line: 1548, column: 51, scope: !1087)
!8552 = !DILocation(line: 1548, column: 67, scope: !1090)
!8553 = !DILocation(line: 1548, column: 83, scope: !1090)
!8554 = !DILocation(line: 1548, column: 67, scope: !1087)
!8555 = !DILocation(line: 1548, column: 98, scope: !8556)
!8556 = !DILexicalBlockFile(scope: !1090, file: !13, discriminator: 2)
!8557 = !DILocation(line: 1548, column: 103, scope: !8558)
!8558 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 4)
!8559 = !DILocation(line: 1548, column: 113, scope: !1089)
!8560 = !DILocation(line: 1548, column: 143, scope: !1089)
!8561 = !DILocation(line: 1548, column: 169, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !1089, file: !13, line: 1548, column: 166)
!8563 = !DILocation(line: 1548, column: 186, scope: !8562)
!8564 = !DILocation(line: 1548, column: 166, scope: !8562)
!8565 = !DILocation(line: 1548, column: 196, scope: !8562)
!8566 = !DILocation(line: 1548, column: 166, scope: !1089)
!8567 = !DILocation(line: 1548, column: 166, scope: !8568)
!8568 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 5)
!8569 = !DILocation(line: 1548, column: 227, scope: !8570)
!8570 = !DILexicalBlockFile(scope: !8562, file: !13, discriminator: 6)
!8571 = !DILocation(line: 1548, column: 245, scope: !8562)
!8572 = !DILocation(line: 1548, column: 255, scope: !8562)
!8573 = !DILocation(line: 1548, column: 280, scope: !8562)
!8574 = !DILocation(line: 1548, column: 211, scope: !8562)
!8575 = !DILocation(line: 1548, column: 299, scope: !8576)
!8576 = !DILexicalBlockFile(scope: !1090, file: !13, discriminator: 7)
!8577 = !DILocation(line: 1548, column: 299, scope: !1089)
!8578 = !DILocation(line: 1548, column: 299, scope: !8579)
!8579 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 8)
!8580 = !DILocation(line: 1548, column: 299, scope: !8581)
!8581 = !DILexicalBlockFile(scope: !1089, file: !13, discriminator: 9)
!8582 = !DILocation(line: 1548, column: 312, scope: !8543)
!8583 = !DILocation(line: 1548, column: 312, scope: !1087)
!8584 = !DILocation(line: 1548, column: 312, scope: !8585)
!8585 = !DILexicalBlockFile(scope: !1087, file: !13, discriminator: 11)
!8586 = !DILocation(line: 1549, column: 5, scope: !1039)
!8587 = !DILocation(line: 1549, column: 10, scope: !8588)
!8588 = !DILexicalBlockFile(scope: !1092, file: !13, discriminator: 1)
!8589 = !DILocation(line: 1549, column: 20, scope: !1092)
!8590 = !DILocation(line: 1549, column: 51, scope: !1092)
!8591 = !DILocation(line: 1549, column: 69, scope: !1095)
!8592 = !DILocation(line: 1549, column: 85, scope: !1095)
!8593 = !DILocation(line: 1549, column: 69, scope: !1092)
!8594 = !DILocation(line: 1549, column: 100, scope: !8595)
!8595 = !DILexicalBlockFile(scope: !1095, file: !13, discriminator: 2)
!8596 = !DILocation(line: 1549, column: 105, scope: !8597)
!8597 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 4)
!8598 = !DILocation(line: 1549, column: 115, scope: !1094)
!8599 = !DILocation(line: 1549, column: 145, scope: !1094)
!8600 = !DILocation(line: 1549, column: 171, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !1094, file: !13, line: 1549, column: 168)
!8602 = !DILocation(line: 1549, column: 188, scope: !8601)
!8603 = !DILocation(line: 1549, column: 168, scope: !8601)
!8604 = !DILocation(line: 1549, column: 198, scope: !8601)
!8605 = !DILocation(line: 1549, column: 168, scope: !1094)
!8606 = !DILocation(line: 1549, column: 168, scope: !8607)
!8607 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 5)
!8608 = !DILocation(line: 1549, column: 229, scope: !8609)
!8609 = !DILexicalBlockFile(scope: !8601, file: !13, discriminator: 6)
!8610 = !DILocation(line: 1549, column: 247, scope: !8601)
!8611 = !DILocation(line: 1549, column: 257, scope: !8601)
!8612 = !DILocation(line: 1549, column: 282, scope: !8601)
!8613 = !DILocation(line: 1549, column: 213, scope: !8601)
!8614 = !DILocation(line: 1549, column: 301, scope: !8615)
!8615 = !DILexicalBlockFile(scope: !1095, file: !13, discriminator: 7)
!8616 = !DILocation(line: 1549, column: 301, scope: !1094)
!8617 = !DILocation(line: 1549, column: 301, scope: !8618)
!8618 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 8)
!8619 = !DILocation(line: 1549, column: 301, scope: !8620)
!8620 = !DILexicalBlockFile(scope: !1094, file: !13, discriminator: 9)
!8621 = !DILocation(line: 1549, column: 314, scope: !8543)
!8622 = !DILocation(line: 1549, column: 314, scope: !1092)
!8623 = !DILocation(line: 1549, column: 314, scope: !8624)
!8624 = !DILexicalBlockFile(scope: !1092, file: !13, discriminator: 11)
!8625 = !DILocation(line: 1550, column: 5, scope: !1039)
!8626 = !DILocation(line: 1551, column: 1, scope: !1039)
!8627 = !DILocation(line: 1394, column: 41, scope: !1096)
!8628 = !DILocation(line: 1394, column: 57, scope: !1096)
!8629 = !DILocation(line: 1396, column: 5, scope: !1096)
!8630 = !DILocation(line: 1396, column: 10, scope: !8631)
!8631 = !DILexicalBlockFile(scope: !1103, file: !13, discriminator: 1)
!8632 = !DILocation(line: 1396, column: 20, scope: !1103)
!8633 = !DILocation(line: 1396, column: 43, scope: !1103)
!8634 = !DILocation(line: 1396, column: 49, scope: !1103)
!8635 = !DILocation(line: 1396, column: 69, scope: !1107)
!8636 = !DILocation(line: 1396, column: 77, scope: !1107)
!8637 = !DILocation(line: 1396, column: 69, scope: !1103)
!8638 = !DILocation(line: 1396, column: 95, scope: !8639)
!8639 = !DILexicalBlockFile(scope: !1106, file: !13, discriminator: 2)
!8640 = !DILocation(line: 1396, column: 101, scope: !1106)
!8641 = !DILocation(line: 1396, column: 116, scope: !1106)
!8642 = !DILocation(line: 1396, column: 130, scope: !1106)
!8643 = !DILocation(line: 1396, column: 135, scope: !8644)
!8644 = !DILexicalBlockFile(scope: !1105, file: !13, discriminator: 4)
!8645 = !DILocation(line: 1396, column: 145, scope: !1105)
!8646 = !DILocation(line: 1396, column: 175, scope: !1105)
!8647 = !DILocation(line: 1396, column: 193, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !1105, file: !13, line: 1396, column: 190)
!8649 = !DILocation(line: 1396, column: 210, scope: !8648)
!8650 = !DILocation(line: 1396, column: 190, scope: !8648)
!8651 = !DILocation(line: 1396, column: 220, scope: !8648)
!8652 = !DILocation(line: 1396, column: 190, scope: !1105)
!8653 = !DILocation(line: 1396, column: 190, scope: !8654)
!8654 = !DILexicalBlockFile(scope: !1105, file: !13, discriminator: 5)
!8655 = !DILocation(line: 1396, column: 251, scope: !8656)
!8656 = !DILexicalBlockFile(scope: !8648, file: !13, discriminator: 6)
!8657 = !DILocation(line: 1396, column: 269, scope: !8648)
!8658 = !DILocation(line: 1396, column: 279, scope: !8648)
!8659 = !DILocation(line: 1396, column: 304, scope: !8648)
!8660 = !DILocation(line: 1396, column: 235, scope: !8648)
!8661 = !DILocation(line: 1396, column: 323, scope: !8662)
!8662 = !DILexicalBlockFile(scope: !1106, file: !13, discriminator: 7)
!8663 = !DILocation(line: 1396, column: 323, scope: !1105)
!8664 = !DILocation(line: 1396, column: 323, scope: !8665)
!8665 = !DILexicalBlockFile(scope: !1105, file: !13, discriminator: 8)
!8666 = !DILocation(line: 1396, column: 336, scope: !8667)
!8667 = !DILexicalBlockFile(scope: !1106, file: !13, discriminator: 9)
!8668 = !DILocation(line: 1396, column: 338, scope: !8669)
!8669 = !DILexicalBlockFile(scope: !8670, file: !13, discriminator: 10)
!8670 = !DILexicalBlockFile(scope: !1096, file: !13, discriminator: 3)
!8671 = !DILocation(line: 1396, column: 338, scope: !1103)
!8672 = !DILocation(line: 1397, column: 27, scope: !1096)
!8673 = !DILocation(line: 1397, column: 5, scope: !1096)
!8674 = !DILocation(line: 1397, column: 11, scope: !1096)
!8675 = !DILocation(line: 1397, column: 25, scope: !1096)
!8676 = !DILocation(line: 1398, column: 5, scope: !1096)
!8677 = !DILocation(line: 1398, column: 11, scope: !1096)
!8678 = !DILocation(line: 1398, column: 30, scope: !1096)
!8679 = !DILocation(line: 1399, column: 1, scope: !1096)
!8680 = !DILocation(line: 1246, column: 30, scope: !1108)
!8681 = !DILocation(line: 1248, column: 5, scope: !1108)
!8682 = !DILocation(line: 1248, column: 15, scope: !1108)
!8683 = !DILocation(line: 1248, column: 24, scope: !1108)
!8684 = !DILocation(line: 1249, column: 9, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !1108, file: !13, line: 1249, column: 9)
!8686 = !DILocation(line: 1249, column: 15, scope: !8685)
!8687 = !DILocation(line: 1249, column: 18, scope: !8685)
!8688 = !DILocation(line: 1249, column: 9, scope: !1108)
!8689 = !DILocation(line: 1249, column: 30, scope: !8690)
!8690 = !DILexicalBlockFile(scope: !8691, file: !13, discriminator: 1)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !13, line: 1249, column: 30)
!8692 = distinct !DILexicalBlock(scope: !8685, file: !13, line: 1249, column: 24)
!8693 = !DILocation(line: 1249, column: 36, scope: !8691)
!8694 = !DILocation(line: 1249, column: 30, scope: !8691)
!8695 = !DILocation(line: 1249, column: 30, scope: !8692)
!8696 = !DILocation(line: 1249, column: 64, scope: !8697)
!8697 = !DILexicalBlockFile(scope: !8698, file: !13, discriminator: 2)
!8698 = distinct !DILexicalBlock(scope: !8691, file: !13, line: 1249, column: 46)
!8699 = !DILocation(line: 1249, column: 48, scope: !8698)
!8700 = !DILocation(line: 1249, column: 122, scope: !8698)
!8701 = !DILocation(line: 1249, column: 147, scope: !8702)
!8702 = !DILexicalBlockFile(scope: !8703, file: !13, discriminator: 3)
!8703 = distinct !DILexicalBlock(scope: !8691, file: !13, line: 1249, column: 129)
!8704 = !DILocation(line: 1249, column: 131, scope: !8703)
!8705 = !DILocation(line: 1249, column: 209, scope: !8706)
!8706 = !DILexicalBlockFile(scope: !8692, file: !13, discriminator: 4)
!8707 = !DILocation(line: 1249, column: 209, scope: !8692)
!8708 = !DILocation(line: 1250, column: 50, scope: !1108)
!8709 = !DILocation(line: 1250, column: 38, scope: !1108)
!8710 = !DILocation(line: 1250, column: 56, scope: !1108)
!8711 = !DILocation(line: 1250, column: 11, scope: !1108)
!8712 = !DILocation(line: 1250, column: 9, scope: !1108)
!8713 = !DILocation(line: 1251, column: 9, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !1108, file: !13, line: 1251, column: 9)
!8715 = !DILocation(line: 1251, column: 13, scope: !8714)
!8716 = !DILocation(line: 1251, column: 9, scope: !1108)
!8717 = !DILocation(line: 1252, column: 9, scope: !8714)
!8718 = !DILocation(line: 1253, column: 5, scope: !1108)
!8719 = !DILocation(line: 1253, column: 10, scope: !8720)
!8720 = !DILexicalBlockFile(scope: !1114, file: !13, discriminator: 1)
!8721 = !DILocation(line: 1253, column: 20, scope: !1114)
!8722 = !DILocation(line: 1253, column: 50, scope: !1114)
!8723 = !DILocation(line: 1253, column: 64, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !1114, file: !13, line: 1253, column: 61)
!8725 = !DILocation(line: 1253, column: 81, scope: !8724)
!8726 = !DILocation(line: 1253, column: 61, scope: !8724)
!8727 = !DILocation(line: 1253, column: 91, scope: !8724)
!8728 = !DILocation(line: 1253, column: 61, scope: !1114)
!8729 = !DILocation(line: 1253, column: 61, scope: !8730)
!8730 = !DILexicalBlockFile(scope: !1114, file: !13, discriminator: 2)
!8731 = !DILocation(line: 1253, column: 122, scope: !8732)
!8732 = !DILexicalBlockFile(scope: !8724, file: !13, discriminator: 3)
!8733 = !DILocation(line: 1253, column: 140, scope: !8724)
!8734 = !DILocation(line: 1253, column: 150, scope: !8724)
!8735 = !DILocation(line: 1253, column: 175, scope: !8724)
!8736 = !DILocation(line: 1253, column: 106, scope: !8724)
!8737 = !DILocation(line: 1253, column: 194, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !1108, file: !13, discriminator: 4)
!8739 = !DILocation(line: 1253, column: 194, scope: !1114)
!8740 = !DILocation(line: 1253, column: 194, scope: !8741)
!8741 = !DILexicalBlockFile(scope: !1114, file: !13, discriminator: 5)
!8742 = !DILocation(line: 1254, column: 14, scope: !1108)
!8743 = !DILocation(line: 1254, column: 20, scope: !1108)
!8744 = !DILocation(line: 1254, column: 12, scope: !1108)
!8745 = !DILocation(line: 1255, column: 5, scope: !1108)
!8746 = !DILocation(line: 1255, column: 11, scope: !1108)
!8747 = !DILocation(line: 1255, column: 18, scope: !1108)
!8748 = !DILocation(line: 1256, column: 5, scope: !1108)
!8749 = !DILocation(line: 1256, column: 11, scope: !1108)
!8750 = !DILocation(line: 1256, column: 20, scope: !1108)
!8751 = !DILocation(line: 1257, column: 5, scope: !1108)
!8752 = !DILocation(line: 1257, column: 11, scope: !1108)
!8753 = !DILocation(line: 1257, column: 14, scope: !1108)
!8754 = !DILocation(line: 1258, column: 12, scope: !1108)
!8755 = !DILocation(line: 1258, column: 5, scope: !1108)
!8756 = !DILocation(line: 1259, column: 1, scope: !1108)
!8757 = !DILocation(line: 1293, column: 29, scope: !1115)
!8758 = !DILocation(line: 1293, column: 45, scope: !1115)
!8759 = !DILocation(line: 1295, column: 5, scope: !1115)
!8760 = !DILocation(line: 1295, column: 15, scope: !1115)
!8761 = !DILocation(line: 1296, column: 5, scope: !1115)
!8762 = !DILocation(line: 1296, column: 15, scope: !1115)
!8763 = !DILocation(line: 1297, column: 5, scope: !1115)
!8764 = !DILocation(line: 1297, column: 15, scope: !1115)
!8765 = !DILocation(line: 1298, column: 5, scope: !1115)
!8766 = !DILocation(line: 1298, column: 16, scope: !1115)
!8767 = !DILocation(line: 1299, column: 5, scope: !1115)
!8768 = !DILocation(line: 1299, column: 9, scope: !1115)
!8769 = !DILocation(line: 1300, column: 5, scope: !1115)
!8770 = !DILocation(line: 1300, column: 9, scope: !1115)
!8771 = !DILocation(line: 1300, column: 24, scope: !1115)
!8772 = !DILocation(line: 1302, column: 9, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1302, column: 9)
!8774 = !DILocation(line: 1302, column: 15, scope: !8773)
!8775 = !DILocation(line: 1302, column: 18, scope: !8773)
!8776 = !DILocation(line: 1302, column: 9, scope: !1115)
!8777 = !DILocation(line: 1302, column: 30, scope: !8778)
!8778 = !DILexicalBlockFile(scope: !8779, file: !13, discriminator: 1)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !13, line: 1302, column: 30)
!8780 = distinct !DILexicalBlock(scope: !8773, file: !13, line: 1302, column: 24)
!8781 = !DILocation(line: 1302, column: 36, scope: !8779)
!8782 = !DILocation(line: 1302, column: 30, scope: !8779)
!8783 = !DILocation(line: 1302, column: 30, scope: !8780)
!8784 = !DILocation(line: 1302, column: 64, scope: !8785)
!8785 = !DILexicalBlockFile(scope: !8786, file: !13, discriminator: 2)
!8786 = distinct !DILexicalBlock(scope: !8779, file: !13, line: 1302, column: 46)
!8787 = !DILocation(line: 1302, column: 48, scope: !8786)
!8788 = !DILocation(line: 1302, column: 122, scope: !8786)
!8789 = !DILocation(line: 1302, column: 147, scope: !8790)
!8790 = !DILexicalBlockFile(scope: !8791, file: !13, discriminator: 3)
!8791 = distinct !DILexicalBlock(scope: !8779, file: !13, line: 1302, column: 129)
!8792 = !DILocation(line: 1302, column: 131, scope: !8791)
!8793 = !DILocation(line: 1302, column: 209, scope: !8794)
!8794 = !DILexicalBlockFile(scope: !8780, file: !13, discriminator: 4)
!8795 = !DILocation(line: 1302, column: 209, scope: !8780)
!8796 = !DILocation(line: 1304, column: 34, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1304, column: 9)
!8798 = !DILocation(line: 1304, column: 10, scope: !8797)
!8799 = !DILocation(line: 1304, column: 9, scope: !1115)
!8800 = !DILocation(line: 1305, column: 9, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8797, file: !13, line: 1304, column: 59)
!8802 = !DILocation(line: 1308, column: 43, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1308, column: 9)
!8804 = !DILocation(line: 1308, column: 27, scope: !8803)
!8805 = !DILocation(line: 1308, column: 50, scope: !8803)
!8806 = !DILocation(line: 1308, column: 56, scope: !8803)
!8807 = !DILocation(line: 1308, column: 25, scope: !8803)
!8808 = !DILocation(line: 1308, column: 25, scope: !8809)
!8809 = !DILexicalBlockFile(scope: !8803, file: !13, discriminator: 1)
!8810 = !DILocation(line: 1308, column: 99, scope: !8811)
!8811 = !DILexicalBlockFile(scope: !8803, file: !13, discriminator: 2)
!8812 = !DILocation(line: 1308, column: 69, scope: !8803)
!8813 = !DILocation(line: 1308, column: 108, scope: !8814)
!8814 = !DILexicalBlockFile(scope: !8815, file: !13, discriminator: 4)
!8815 = !DILexicalBlockFile(scope: !8803, file: !13, discriminator: 3)
!8816 = !DILocation(line: 1308, column: 9, scope: !1115)
!8817 = !DILocation(line: 1309, column: 9, scope: !8803)
!8818 = !DILocation(line: 1311, column: 5, scope: !1115)
!8819 = !DILocation(line: 1311, column: 10, scope: !8820)
!8820 = !DILexicalBlockFile(scope: !1129, file: !13, discriminator: 1)
!8821 = !DILocation(line: 1311, column: 14, scope: !1129)
!8822 = !DILocation(line: 1311, column: 17, scope: !1129)
!8823 = !DILocation(line: 1311, column: 27, scope: !1129)
!8824 = !DILocation(line: 1311, column: 51, scope: !1136)
!8825 = !DILocation(line: 1311, column: 39, scope: !1136)
!8826 = !DILocation(line: 1311, column: 59, scope: !1136)
!8827 = !DILocation(line: 1311, column: 68, scope: !1136)
!8828 = !DILocation(line: 1311, column: 37, scope: !1129)
!8829 = !DILocation(line: 1311, column: 100, scope: !8830)
!8830 = !DILexicalBlockFile(scope: !1134, file: !13, discriminator: 2)
!8831 = !DILocation(line: 1311, column: 106, scope: !1134)
!8832 = !DILocation(line: 1311, column: 110, scope: !1134)
!8833 = !DILocation(line: 1311, column: 100, scope: !1135)
!8834 = !DILocation(line: 1311, column: 146, scope: !8835)
!8835 = !DILexicalBlockFile(scope: !1134, file: !13, discriminator: 4)
!8836 = !DILocation(line: 1311, column: 152, scope: !1134)
!8837 = !DILocation(line: 1311, column: 129, scope: !1134)
!8838 = !DILocation(line: 1311, column: 127, scope: !1134)
!8839 = !DILocation(line: 1311, column: 125, scope: !1134)
!8840 = !DILocation(line: 1311, column: 197, scope: !8841)
!8841 = !DILexicalBlockFile(scope: !1133, file: !13, discriminator: 5)
!8842 = !DILocation(line: 1311, column: 172, scope: !1133)
!8843 = !DILocation(line: 1311, column: 170, scope: !1133)
!8844 = !DILocation(line: 1311, column: 220, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !1133, file: !13, line: 1311, column: 220)
!8846 = !DILocation(line: 1311, column: 225, scope: !8845)
!8847 = !DILocation(line: 1311, column: 220, scope: !1133)
!8848 = !DILocation(line: 1311, column: 240, scope: !8849)
!8849 = !DILexicalBlockFile(scope: !8845, file: !13, discriminator: 7)
!8850 = !DILocation(line: 1311, column: 240, scope: !8845)
!8851 = !DILocation(line: 1311, column: 279, scope: !8852)
!8852 = !DILexicalBlockFile(scope: !1133, file: !13, discriminator: 8)
!8853 = !DILocation(line: 1311, column: 263, scope: !1133)
!8854 = !DILocation(line: 1311, column: 261, scope: !1133)
!8855 = !DILocation(line: 1311, column: 286, scope: !1133)
!8856 = !DILocation(line: 1311, column: 291, scope: !8857)
!8857 = !DILexicalBlockFile(scope: !1132, file: !13, discriminator: 10)
!8858 = !DILocation(line: 1311, column: 301, scope: !1132)
!8859 = !DILocation(line: 1311, column: 331, scope: !1132)
!8860 = !DILocation(line: 1311, column: 346, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !1132, file: !13, line: 1311, column: 343)
!8862 = !DILocation(line: 1311, column: 363, scope: !8861)
!8863 = !DILocation(line: 1311, column: 343, scope: !8861)
!8864 = !DILocation(line: 1311, column: 373, scope: !8861)
!8865 = !DILocation(line: 1311, column: 343, scope: !1132)
!8866 = !DILocation(line: 1311, column: 343, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !1132, file: !13, discriminator: 11)
!8868 = !DILocation(line: 1311, column: 404, scope: !8869)
!8869 = !DILexicalBlockFile(scope: !8861, file: !13, discriminator: 12)
!8870 = !DILocation(line: 1311, column: 422, scope: !8861)
!8871 = !DILocation(line: 1311, column: 432, scope: !8861)
!8872 = !DILocation(line: 1311, column: 457, scope: !8861)
!8873 = !DILocation(line: 1311, column: 388, scope: !8861)
!8874 = !DILocation(line: 1311, column: 476, scope: !8875)
!8875 = !DILexicalBlockFile(scope: !1133, file: !13, discriminator: 13)
!8876 = !DILocation(line: 1311, column: 476, scope: !1132)
!8877 = !DILocation(line: 1311, column: 476, scope: !8878)
!8878 = !DILexicalBlockFile(scope: !1132, file: !13, discriminator: 14)
!8879 = !DILocation(line: 1311, column: 493, scope: !8880)
!8880 = !DILexicalBlockFile(scope: !8881, file: !13, discriminator: 15)
!8881 = distinct !DILexicalBlock(scope: !1133, file: !13, line: 1311, column: 493)
!8882 = !DILocation(line: 1311, column: 495, scope: !8881)
!8883 = !DILocation(line: 1311, column: 493, scope: !1133)
!8884 = !DILocation(line: 1311, column: 500, scope: !8885)
!8885 = !DILexicalBlockFile(scope: !8881, file: !13, discriminator: 16)
!8886 = !DILocation(line: 1311, column: 500, scope: !8881)
!8887 = !DILocation(line: 1311, column: 525, scope: !8888)
!8888 = !DILexicalBlockFile(scope: !8889, file: !13, discriminator: 6)
!8889 = distinct !DILexicalBlock(scope: !1135, file: !13, line: 1311, column: 525)
!8890 = !DILocation(line: 1311, column: 527, scope: !8889)
!8891 = !DILocation(line: 1311, column: 525, scope: !1135)
!8892 = !DILocation(line: 1311, column: 550, scope: !8893)
!8893 = !DILexicalBlockFile(scope: !8894, file: !13, discriminator: 18)
!8894 = distinct !DILexicalBlock(scope: !8889, file: !13, line: 1311, column: 532)
!8895 = !DILocation(line: 1311, column: 534, scope: !8894)
!8896 = !DILocation(line: 1311, column: 602, scope: !8894)
!8897 = !DILocation(line: 1311, column: 623, scope: !8898)
!8898 = !DILexicalBlockFile(scope: !1135, file: !13, discriminator: 19)
!8899 = !DILocation(line: 1311, column: 669, scope: !8900)
!8900 = !DILexicalBlockFile(scope: !8901, file: !13, discriminator: 3)
!8901 = distinct !DILexicalBlock(scope: !1136, file: !13, line: 1311, column: 634)
!8902 = !DILocation(line: 1311, column: 657, scope: !8901)
!8903 = !DILocation(line: 1311, column: 634, scope: !8901)
!8904 = !DILocation(line: 1311, column: 707, scope: !8901)
!8905 = !DILocation(line: 1311, column: 634, scope: !1136)
!8906 = !DILocation(line: 1311, column: 722, scope: !8907)
!8907 = !DILexicalBlockFile(scope: !8901, file: !13, discriminator: 22)
!8908 = !DILocation(line: 1311, column: 722, scope: !8901)
!8909 = !DILocation(line: 1311, column: 741, scope: !8910)
!8910 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 21)
!8911 = !DILocation(line: 1311, column: 741, scope: !8912)
!8912 = !DILexicalBlockFile(scope: !8913, file: !13, discriminator: 24)
!8913 = !DILexicalBlockFile(scope: !8914, file: !13, discriminator: 23)
!8914 = !DILexicalBlockFile(scope: !8915, file: !13, discriminator: 20)
!8915 = !DILexicalBlockFile(scope: !8916, file: !13, discriminator: 17)
!8916 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 9)
!8917 = !DILocation(line: 1311, column: 741, scope: !1129)
!8918 = !DILocation(line: 1311, column: 741, scope: !8919)
!8919 = !DILexicalBlockFile(scope: !1129, file: !13, discriminator: 25)
!8920 = !DILocation(line: 1313, column: 9, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1313, column: 9)
!8922 = !DILocation(line: 1313, column: 15, scope: !8921)
!8923 = !DILocation(line: 1313, column: 23, scope: !8921)
!8924 = !DILocation(line: 1313, column: 9, scope: !1115)
!8925 = !DILocation(line: 1314, column: 16, scope: !8921)
!8926 = !DILocation(line: 1314, column: 9, scope: !8921)
!8927 = !DILocation(line: 1316, column: 21, scope: !1115)
!8928 = !DILocation(line: 1316, column: 29, scope: !1115)
!8929 = !DILocation(line: 1316, column: 38, scope: !1115)
!8930 = !DILocation(line: 1318, column: 63, scope: !1115)
!8931 = !DILocation(line: 1318, column: 45, scope: !1115)
!8932 = !DILocation(line: 1318, column: 71, scope: !1115)
!8933 = !DILocation(line: 1318, column: 13, scope: !1115)
!8934 = !DILocation(line: 1320, column: 10, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1320, column: 9)
!8936 = !DILocation(line: 1320, column: 16, scope: !8935)
!8937 = !DILocation(line: 1320, column: 31, scope: !8935)
!8938 = !DILocation(line: 1320, column: 34, scope: !8939)
!8939 = !DILexicalBlockFile(scope: !8935, file: !13, discriminator: 1)
!8940 = !DILocation(line: 1320, column: 40, scope: !8935)
!8941 = !DILocation(line: 1320, column: 48, scope: !8935)
!8942 = !DILocation(line: 1320, column: 63, scope: !8935)
!8943 = !DILocation(line: 1320, column: 66, scope: !8944)
!8944 = !DILexicalBlockFile(scope: !8945, file: !13, discriminator: 3)
!8945 = !DILexicalBlockFile(scope: !8935, file: !13, discriminator: 2)
!8946 = !DILocation(line: 1320, column: 72, scope: !8935)
!8947 = !DILocation(line: 1320, column: 66, scope: !8935)
!8948 = !DILocation(line: 1320, column: 9, scope: !1115)
!8949 = !DILocation(line: 1321, column: 32, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8935, file: !13, line: 1321, column: 13)
!8951 = !DILocation(line: 1321, column: 95, scope: !8950)
!8952 = !DILocation(line: 1321, column: 77, scope: !8950)
!8953 = !DILocation(line: 1321, column: 103, scope: !8950)
!8954 = !DILocation(line: 1321, column: 13, scope: !8950)
!8955 = !DILocation(line: 1321, column: 115, scope: !8950)
!8956 = !DILocation(line: 1321, column: 13, scope: !8935)
!8957 = !DILocation(line: 1322, column: 19, scope: !8950)
!8958 = !DILocation(line: 1322, column: 13, scope: !8950)
!8959 = !DILocation(line: 1321, column: 119, scope: !8960)
!8960 = !DILexicalBlockFile(scope: !8950, file: !13, discriminator: 1)
!8961 = !DILocation(line: 1324, column: 9, scope: !1139)
!8962 = !DILocation(line: 1324, column: 15, scope: !1139)
!8963 = !DILocation(line: 1324, column: 18, scope: !8964)
!8964 = !DILexicalBlockFile(scope: !1139, file: !13, discriminator: 1)
!8965 = !DILocation(line: 1324, column: 24, scope: !1139)
!8966 = !DILocation(line: 1324, column: 18, scope: !1139)
!8967 = !DILocation(line: 1324, column: 39, scope: !1139)
!8968 = !DILocation(line: 1324, column: 42, scope: !8969)
!8969 = !DILexicalBlockFile(scope: !1139, file: !13, discriminator: 2)
!8970 = !DILocation(line: 1324, column: 48, scope: !1139)
!8971 = !DILocation(line: 1324, column: 56, scope: !1139)
!8972 = !DILocation(line: 1324, column: 9, scope: !1115)
!8973 = !DILocation(line: 1325, column: 9, scope: !1138)
!8974 = !DILocation(line: 1325, column: 19, scope: !1138)
!8975 = !DILocation(line: 1326, column: 13, scope: !1138)
!8976 = !DILocation(line: 1326, column: 46, scope: !1138)
!8977 = !DILocation(line: 1326, column: 52, scope: !1138)
!8978 = !DILocation(line: 1325, column: 29, scope: !1138)
!8979 = !DILocation(line: 1327, column: 9, scope: !1138)
!8980 = !DILocation(line: 1327, column: 14, scope: !8981)
!8981 = !DILexicalBlockFile(scope: !1141, file: !13, discriminator: 1)
!8982 = !DILocation(line: 1327, column: 24, scope: !1141)
!8983 = !DILocation(line: 1327, column: 54, scope: !1141)
!8984 = !DILocation(line: 1327, column: 69, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !1141, file: !13, line: 1327, column: 66)
!8986 = !DILocation(line: 1327, column: 86, scope: !8985)
!8987 = !DILocation(line: 1327, column: 66, scope: !8985)
!8988 = !DILocation(line: 1327, column: 96, scope: !8985)
!8989 = !DILocation(line: 1327, column: 66, scope: !1141)
!8990 = !DILocation(line: 1327, column: 66, scope: !8991)
!8991 = !DILexicalBlockFile(scope: !1141, file: !13, discriminator: 2)
!8992 = !DILocation(line: 1327, column: 127, scope: !8993)
!8993 = !DILexicalBlockFile(scope: !8985, file: !13, discriminator: 3)
!8994 = !DILocation(line: 1327, column: 145, scope: !8985)
!8995 = !DILocation(line: 1327, column: 155, scope: !8985)
!8996 = !DILocation(line: 1327, column: 180, scope: !8985)
!8997 = !DILocation(line: 1327, column: 111, scope: !8985)
!8998 = !DILocation(line: 1327, column: 199, scope: !8999)
!8999 = !DILexicalBlockFile(scope: !1138, file: !13, discriminator: 4)
!9000 = !DILocation(line: 1327, column: 199, scope: !1141)
!9001 = !DILocation(line: 1327, column: 199, scope: !9002)
!9002 = !DILexicalBlockFile(scope: !1141, file: !13, discriminator: 5)
!9003 = !DILocation(line: 1328, column: 13, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !1138, file: !13, line: 1328, column: 13)
!9005 = !DILocation(line: 1328, column: 21, scope: !9004)
!9006 = !DILocation(line: 1328, column: 13, scope: !1138)
!9007 = !DILocation(line: 1329, column: 13, scope: !9004)
!9008 = !DILocation(line: 1330, column: 16, scope: !1138)
!9009 = !DILocation(line: 1330, column: 14, scope: !1138)
!9010 = !DILocation(line: 1331, column: 5, scope: !1139)
!9011 = !DILocation(line: 1331, column: 5, scope: !8964)
!9012 = !DILocation(line: 1331, column: 5, scope: !1138)
!9013 = !DILocation(line: 1333, column: 9, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1333, column: 9)
!9015 = !DILocation(line: 1333, column: 15, scope: !9014)
!9016 = !DILocation(line: 1333, column: 9, scope: !1115)
!9017 = !DILocation(line: 1334, column: 24, scope: !9014)
!9018 = !DILocation(line: 1334, column: 9, scope: !9014)
!9019 = !DILocation(line: 1335, column: 9, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1335, column: 9)
!9021 = !DILocation(line: 1335, column: 15, scope: !9020)
!9022 = !DILocation(line: 1335, column: 30, scope: !9020)
!9023 = !DILocation(line: 1336, column: 10, scope: !9020)
!9024 = !DILocation(line: 1336, column: 16, scope: !9020)
!9025 = !DILocation(line: 1337, column: 29, scope: !9020)
!9026 = !DILocation(line: 1337, column: 92, scope: !9020)
!9027 = !DILocation(line: 1337, column: 74, scope: !9020)
!9028 = !DILocation(line: 1337, column: 100, scope: !9020)
!9029 = !DILocation(line: 1337, column: 10, scope: !9020)
!9030 = !DILocation(line: 1337, column: 112, scope: !9020)
!9031 = !DILocation(line: 1335, column: 9, scope: !1115)
!9032 = !DILocation(line: 1338, column: 19, scope: !9020)
!9033 = !DILocation(line: 1338, column: 9, scope: !9020)
!9034 = !DILocation(line: 1341, column: 9, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1341, column: 9)
!9036 = !DILocation(line: 1341, column: 15, scope: !9035)
!9037 = !DILocation(line: 1341, column: 26, scope: !9035)
!9038 = !DILocation(line: 1341, column: 9, scope: !1115)
!9039 = !DILocation(line: 1342, column: 15, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9035, file: !13, line: 1341, column: 41)
!9041 = !DILocation(line: 1342, column: 21, scope: !9040)
!9042 = !DILocation(line: 1342, column: 46, scope: !9040)
!9043 = !DILocation(line: 1342, column: 33, scope: !9040)
!9044 = !DILocation(line: 1342, column: 52, scope: !9040)
!9045 = !DILocation(line: 1342, column: 13, scope: !9040)
!9046 = !DILocation(line: 1342, column: 11, scope: !9040)
!9047 = !DILocation(line: 1343, column: 9, scope: !9040)
!9048 = !DILocation(line: 1343, column: 15, scope: !9040)
!9049 = !DILocation(line: 1343, column: 40, scope: !9040)
!9050 = !DILocation(line: 1344, column: 5, scope: !9040)
!9051 = !DILocation(line: 1346, column: 40, scope: !9035)
!9052 = !DILocation(line: 1346, column: 46, scope: !9035)
!9053 = !DILocation(line: 1347, column: 40, scope: !9035)
!9054 = !DILocation(line: 1347, column: 58, scope: !9035)
!9055 = !DILocation(line: 1346, column: 13, scope: !9035)
!9056 = !DILocation(line: 1346, column: 11, scope: !9035)
!9057 = !DILocation(line: 1348, column: 5, scope: !1115)
!9058 = !DILocation(line: 1348, column: 10, scope: !9059)
!9059 = !DILexicalBlockFile(scope: !1143, file: !13, discriminator: 1)
!9060 = !DILocation(line: 1348, column: 20, scope: !1143)
!9061 = !DILocation(line: 1348, column: 50, scope: !1143)
!9062 = !DILocation(line: 1348, column: 65, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !1143, file: !13, line: 1348, column: 62)
!9064 = !DILocation(line: 1348, column: 82, scope: !9063)
!9065 = !DILocation(line: 1348, column: 62, scope: !9063)
!9066 = !DILocation(line: 1348, column: 92, scope: !9063)
!9067 = !DILocation(line: 1348, column: 62, scope: !1143)
!9068 = !DILocation(line: 1348, column: 62, scope: !9069)
!9069 = !DILexicalBlockFile(scope: !1143, file: !13, discriminator: 2)
!9070 = !DILocation(line: 1348, column: 123, scope: !9071)
!9071 = !DILexicalBlockFile(scope: !9063, file: !13, discriminator: 3)
!9072 = !DILocation(line: 1348, column: 141, scope: !9063)
!9073 = !DILocation(line: 1348, column: 151, scope: !9063)
!9074 = !DILocation(line: 1348, column: 176, scope: !9063)
!9075 = !DILocation(line: 1348, column: 107, scope: !9063)
!9076 = !DILocation(line: 1348, column: 195, scope: !9077)
!9077 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 4)
!9078 = !DILocation(line: 1348, column: 195, scope: !1143)
!9079 = !DILocation(line: 1348, column: 195, scope: !9080)
!9080 = !DILexicalBlockFile(scope: !1143, file: !13, discriminator: 5)
!9081 = !DILocation(line: 1349, column: 9, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1349, column: 9)
!9083 = !DILocation(line: 1349, column: 11, scope: !9082)
!9084 = !DILocation(line: 1349, column: 9, scope: !1115)
!9085 = !DILocation(line: 1350, column: 9, scope: !9082)
!9086 = !DILocation(line: 1352, column: 9, scope: !1149)
!9087 = !DILocation(line: 1352, column: 15, scope: !1149)
!9088 = !DILocation(line: 1352, column: 29, scope: !1149)
!9089 = !DILocation(line: 1352, column: 9, scope: !1115)
!9090 = !DILocation(line: 1353, column: 31, scope: !1148)
!9091 = !DILocation(line: 1353, column: 9, scope: !1148)
!9092 = !DILocation(line: 1353, column: 15, scope: !1148)
!9093 = !DILocation(line: 1353, column: 29, scope: !1148)
!9094 = !DILocation(line: 1354, column: 13, scope: !1147)
!9095 = !DILocation(line: 1354, column: 19, scope: !1147)
!9096 = !DILocation(line: 1354, column: 33, scope: !1147)
!9097 = !DILocation(line: 1354, column: 13, scope: !1148)
!9098 = !DILocation(line: 1355, column: 13, scope: !1146)
!9099 = !DILocation(line: 1355, column: 18, scope: !9100)
!9100 = !DILexicalBlockFile(scope: !1145, file: !13, discriminator: 1)
!9101 = !DILocation(line: 1355, column: 28, scope: !1145)
!9102 = !DILocation(line: 1355, column: 58, scope: !1145)
!9103 = !DILocation(line: 1355, column: 70, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !1145, file: !13, line: 1355, column: 67)
!9105 = !DILocation(line: 1355, column: 87, scope: !9104)
!9106 = !DILocation(line: 1355, column: 67, scope: !9104)
!9107 = !DILocation(line: 1355, column: 97, scope: !9104)
!9108 = !DILocation(line: 1355, column: 67, scope: !1145)
!9109 = !DILocation(line: 1355, column: 67, scope: !9110)
!9110 = !DILexicalBlockFile(scope: !1145, file: !13, discriminator: 2)
!9111 = !DILocation(line: 1355, column: 128, scope: !9112)
!9112 = !DILexicalBlockFile(scope: !9104, file: !13, discriminator: 3)
!9113 = !DILocation(line: 1355, column: 146, scope: !9104)
!9114 = !DILocation(line: 1355, column: 156, scope: !9104)
!9115 = !DILocation(line: 1355, column: 181, scope: !9104)
!9116 = !DILocation(line: 1355, column: 112, scope: !9104)
!9117 = !DILocation(line: 1355, column: 200, scope: !9118)
!9118 = !DILexicalBlockFile(scope: !1146, file: !13, discriminator: 4)
!9119 = !DILocation(line: 1355, column: 200, scope: !1145)
!9120 = !DILocation(line: 1355, column: 200, scope: !9121)
!9121 = !DILexicalBlockFile(scope: !1145, file: !13, discriminator: 5)
!9122 = !DILocation(line: 1356, column: 13, scope: !1146)
!9123 = !DILocation(line: 1358, column: 9, scope: !1148)
!9124 = !DILocation(line: 1358, column: 15, scope: !1148)
!9125 = !DILocation(line: 1358, column: 35, scope: !1148)
!9126 = !DILocation(line: 1359, column: 5, scope: !1148)
!9127 = !DILocation(line: 1360, column: 23, scope: !1153)
!9128 = !DILocation(line: 1360, column: 29, scope: !1153)
!9129 = !DILocation(line: 1360, column: 44, scope: !1153)
!9130 = !DILocation(line: 1360, column: 9, scope: !1153)
!9131 = !DILocation(line: 1360, column: 47, scope: !1153)
!9132 = !DILocation(line: 1360, column: 9, scope: !1115)
!9133 = !DILocation(line: 1361, column: 9, scope: !1152)
!9134 = !DILocation(line: 1361, column: 14, scope: !9135)
!9135 = !DILexicalBlockFile(scope: !1151, file: !13, discriminator: 1)
!9136 = !DILocation(line: 1361, column: 24, scope: !1151)
!9137 = !DILocation(line: 1361, column: 54, scope: !1151)
!9138 = !DILocation(line: 1361, column: 66, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !1151, file: !13, line: 1361, column: 63)
!9140 = !DILocation(line: 1361, column: 83, scope: !9139)
!9141 = !DILocation(line: 1361, column: 63, scope: !9139)
!9142 = !DILocation(line: 1361, column: 93, scope: !9139)
!9143 = !DILocation(line: 1361, column: 63, scope: !1151)
!9144 = !DILocation(line: 1361, column: 63, scope: !9145)
!9145 = !DILexicalBlockFile(scope: !1151, file: !13, discriminator: 2)
!9146 = !DILocation(line: 1361, column: 124, scope: !9147)
!9147 = !DILexicalBlockFile(scope: !9139, file: !13, discriminator: 3)
!9148 = !DILocation(line: 1361, column: 142, scope: !9139)
!9149 = !DILocation(line: 1361, column: 152, scope: !9139)
!9150 = !DILocation(line: 1361, column: 177, scope: !9139)
!9151 = !DILocation(line: 1361, column: 108, scope: !9139)
!9152 = !DILocation(line: 1361, column: 196, scope: !9153)
!9153 = !DILexicalBlockFile(scope: !1152, file: !13, discriminator: 4)
!9154 = !DILocation(line: 1361, column: 196, scope: !1151)
!9155 = !DILocation(line: 1361, column: 196, scope: !9156)
!9156 = !DILexicalBlockFile(scope: !1151, file: !13, discriminator: 5)
!9157 = !DILocation(line: 1362, column: 9, scope: !1152)
!9158 = !DILocation(line: 1364, column: 65, scope: !1115)
!9159 = !DILocation(line: 1364, column: 50, scope: !1115)
!9160 = !DILocation(line: 1364, column: 70, scope: !1115)
!9161 = !{!2198, !1900, i64 16}
!9162 = !DILocation(line: 1364, column: 5, scope: !1115)
!9163 = !DILocation(line: 1364, column: 11, scope: !1115)
!9164 = !DILocation(line: 1364, column: 31, scope: !1115)
!9165 = !DILocation(line: 1365, column: 5, scope: !1115)
!9166 = !DILocation(line: 1365, column: 10, scope: !9167)
!9167 = !DILexicalBlockFile(scope: !1155, file: !13, discriminator: 1)
!9168 = !DILocation(line: 1365, column: 20, scope: !1155)
!9169 = !DILocation(line: 1365, column: 50, scope: !1155)
!9170 = !DILocation(line: 1365, column: 62, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !1155, file: !13, line: 1365, column: 59)
!9172 = !DILocation(line: 1365, column: 79, scope: !9171)
!9173 = !DILocation(line: 1365, column: 59, scope: !9171)
!9174 = !DILocation(line: 1365, column: 89, scope: !9171)
!9175 = !DILocation(line: 1365, column: 59, scope: !1155)
!9176 = !DILocation(line: 1365, column: 59, scope: !9177)
!9177 = !DILexicalBlockFile(scope: !1155, file: !13, discriminator: 2)
!9178 = !DILocation(line: 1365, column: 120, scope: !9179)
!9179 = !DILexicalBlockFile(scope: !9171, file: !13, discriminator: 3)
!9180 = !DILocation(line: 1365, column: 138, scope: !9171)
!9181 = !DILocation(line: 1365, column: 148, scope: !9171)
!9182 = !DILocation(line: 1365, column: 173, scope: !9171)
!9183 = !DILocation(line: 1365, column: 104, scope: !9171)
!9184 = !DILocation(line: 1365, column: 192, scope: !9077)
!9185 = !DILocation(line: 1365, column: 192, scope: !1155)
!9186 = !DILocation(line: 1365, column: 192, scope: !9187)
!9187 = !DILexicalBlockFile(scope: !1155, file: !13, discriminator: 5)
!9188 = !DILocation(line: 1366, column: 9, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !1115, file: !13, line: 1366, column: 9)
!9190 = !DILocation(line: 1366, column: 15, scope: !9189)
!9191 = !DILocation(line: 1366, column: 37, scope: !9189)
!9192 = !DILocation(line: 1366, column: 43, scope: !9189)
!9193 = !DILocation(line: 1366, column: 35, scope: !9189)
!9194 = !DILocation(line: 1366, column: 54, scope: !9189)
!9195 = !DILocation(line: 1366, column: 57, scope: !9196)
!9196 = !DILexicalBlockFile(scope: !9189, file: !13, discriminator: 1)
!9197 = !DILocation(line: 1366, column: 67, scope: !9189)
!9198 = !DILocation(line: 1367, column: 9, scope: !9189)
!9199 = !DILocation(line: 1366, column: 9, scope: !1115)
!9200 = !DILocation(line: 1368, column: 39, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !13, line: 1368, column: 13)
!9202 = distinct !DILexicalBlock(scope: !9189, file: !13, line: 1367, column: 25)
!9203 = !DILocation(line: 1368, column: 13, scope: !9201)
!9204 = !DILocation(line: 1368, column: 45, scope: !9201)
!9205 = !DILocation(line: 1368, column: 13, scope: !9202)
!9206 = !DILocation(line: 1369, column: 13, scope: !9201)
!9207 = !DILocation(line: 1370, column: 5, scope: !9202)
!9208 = !DILocation(line: 1372, column: 9, scope: !1159)
!9209 = !DILocation(line: 1372, column: 9, scope: !1115)
!9210 = !DILocation(line: 1373, column: 42, scope: !1158)
!9211 = !DILocation(line: 1373, column: 48, scope: !1158)
!9212 = !DILocation(line: 1373, column: 56, scope: !1158)
!9213 = !DILocation(line: 1373, column: 15, scope: !1158)
!9214 = !DILocation(line: 1373, column: 13, scope: !1158)
!9215 = !DILocation(line: 1374, column: 13, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !1158, file: !13, line: 1374, column: 13)
!9217 = !DILocation(line: 1374, column: 17, scope: !9216)
!9218 = !DILocation(line: 1374, column: 13, scope: !1158)
!9219 = !DILocation(line: 1375, column: 13, scope: !9216)
!9220 = !DILocation(line: 1376, column: 9, scope: !1158)
!9221 = !DILocation(line: 1376, column: 14, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !1157, file: !13, discriminator: 1)
!9223 = !DILocation(line: 1376, column: 24, scope: !1157)
!9224 = !DILocation(line: 1376, column: 54, scope: !1157)
!9225 = !DILocation(line: 1376, column: 68, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !1157, file: !13, line: 1376, column: 65)
!9227 = !DILocation(line: 1376, column: 85, scope: !9226)
!9228 = !DILocation(line: 1376, column: 65, scope: !9226)
!9229 = !DILocation(line: 1376, column: 95, scope: !9226)
!9230 = !DILocation(line: 1376, column: 65, scope: !1157)
!9231 = !DILocation(line: 1376, column: 65, scope: !9232)
!9232 = !DILexicalBlockFile(scope: !1157, file: !13, discriminator: 2)
!9233 = !DILocation(line: 1376, column: 126, scope: !9234)
!9234 = !DILexicalBlockFile(scope: !9226, file: !13, discriminator: 3)
!9235 = !DILocation(line: 1376, column: 144, scope: !9226)
!9236 = !DILocation(line: 1376, column: 154, scope: !9226)
!9237 = !DILocation(line: 1376, column: 179, scope: !9226)
!9238 = !DILocation(line: 1376, column: 110, scope: !9226)
!9239 = !DILocation(line: 1376, column: 198, scope: !9240)
!9240 = !DILexicalBlockFile(scope: !1158, file: !13, discriminator: 4)
!9241 = !DILocation(line: 1376, column: 198, scope: !1157)
!9242 = !DILocation(line: 1376, column: 198, scope: !9243)
!9243 = !DILexicalBlockFile(scope: !1157, file: !13, discriminator: 5)
!9244 = !DILocation(line: 1377, column: 5, scope: !1158)
!9245 = !DILocation(line: 1379, column: 5, scope: !1115)
!9246 = !DILocation(line: 1379, column: 10, scope: !9247)
!9247 = !DILexicalBlockFile(scope: !1161, file: !13, discriminator: 1)
!9248 = !DILocation(line: 1379, column: 20, scope: !1161)
!9249 = !DILocation(line: 1379, column: 43, scope: !1161)
!9250 = !DILocation(line: 1379, column: 49, scope: !1161)
!9251 = !DILocation(line: 1379, column: 64, scope: !1165)
!9252 = !DILocation(line: 1379, column: 72, scope: !1165)
!9253 = !DILocation(line: 1379, column: 64, scope: !1161)
!9254 = !DILocation(line: 1379, column: 90, scope: !9255)
!9255 = !DILexicalBlockFile(scope: !1164, file: !13, discriminator: 2)
!9256 = !DILocation(line: 1379, column: 96, scope: !1164)
!9257 = !DILocation(line: 1379, column: 106, scope: !1164)
!9258 = !DILocation(line: 1379, column: 120, scope: !1164)
!9259 = !DILocation(line: 1379, column: 125, scope: !9260)
!9260 = !DILexicalBlockFile(scope: !1163, file: !13, discriminator: 4)
!9261 = !DILocation(line: 1379, column: 135, scope: !1163)
!9262 = !DILocation(line: 1379, column: 165, scope: !1163)
!9263 = !DILocation(line: 1379, column: 183, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !1163, file: !13, line: 1379, column: 180)
!9265 = !DILocation(line: 1379, column: 200, scope: !9264)
!9266 = !DILocation(line: 1379, column: 180, scope: !9264)
!9267 = !DILocation(line: 1379, column: 210, scope: !9264)
!9268 = !DILocation(line: 1379, column: 180, scope: !1163)
!9269 = !DILocation(line: 1379, column: 180, scope: !9270)
!9270 = !DILexicalBlockFile(scope: !1163, file: !13, discriminator: 5)
!9271 = !DILocation(line: 1379, column: 241, scope: !9272)
!9272 = !DILexicalBlockFile(scope: !9264, file: !13, discriminator: 6)
!9273 = !DILocation(line: 1379, column: 259, scope: !9264)
!9274 = !DILocation(line: 1379, column: 269, scope: !9264)
!9275 = !DILocation(line: 1379, column: 294, scope: !9264)
!9276 = !DILocation(line: 1379, column: 225, scope: !9264)
!9277 = !DILocation(line: 1379, column: 313, scope: !9278)
!9278 = !DILexicalBlockFile(scope: !1164, file: !13, discriminator: 7)
!9279 = !DILocation(line: 1379, column: 313, scope: !1163)
!9280 = !DILocation(line: 1379, column: 313, scope: !9281)
!9281 = !DILexicalBlockFile(scope: !1163, file: !13, discriminator: 8)
!9282 = !DILocation(line: 1379, column: 326, scope: !9283)
!9283 = !DILexicalBlockFile(scope: !1164, file: !13, discriminator: 9)
!9284 = !DILocation(line: 1379, column: 328, scope: !9285)
!9285 = !DILexicalBlockFile(scope: !9286, file: !13, discriminator: 10)
!9286 = !DILexicalBlockFile(scope: !1115, file: !13, discriminator: 3)
!9287 = !DILocation(line: 1379, column: 328, scope: !1161)
!9288 = !DILocation(line: 1379, column: 328, scope: !9289)
!9289 = !DILexicalBlockFile(scope: !1161, file: !13, discriminator: 11)
!9290 = !DILocation(line: 1381, column: 9, scope: !1169)
!9291 = !DILocation(line: 1381, column: 15, scope: !1169)
!9292 = !DILocation(line: 1381, column: 9, scope: !1115)
!9293 = !DILocation(line: 1382, column: 44, scope: !1168)
!9294 = !DILocation(line: 1382, column: 50, scope: !1168)
!9295 = !DILocation(line: 1382, column: 15, scope: !1168)
!9296 = !DILocation(line: 1382, column: 13, scope: !1168)
!9297 = !DILocation(line: 1383, column: 13, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !1168, file: !13, line: 1383, column: 13)
!9299 = !DILocation(line: 1383, column: 17, scope: !9298)
!9300 = !DILocation(line: 1383, column: 13, scope: !1168)
!9301 = !DILocation(line: 1384, column: 13, scope: !9298)
!9302 = !DILocation(line: 1385, column: 9, scope: !1168)
!9303 = !DILocation(line: 1385, column: 14, scope: !9304)
!9304 = !DILexicalBlockFile(scope: !1167, file: !13, discriminator: 1)
!9305 = !DILocation(line: 1385, column: 24, scope: !1167)
!9306 = !DILocation(line: 1385, column: 54, scope: !1167)
!9307 = !DILocation(line: 1385, column: 68, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !1167, file: !13, line: 1385, column: 65)
!9309 = !DILocation(line: 1385, column: 85, scope: !9308)
!9310 = !DILocation(line: 1385, column: 65, scope: !9308)
!9311 = !DILocation(line: 1385, column: 95, scope: !9308)
!9312 = !DILocation(line: 1385, column: 65, scope: !1167)
!9313 = !DILocation(line: 1385, column: 65, scope: !9314)
!9314 = !DILexicalBlockFile(scope: !1167, file: !13, discriminator: 2)
!9315 = !DILocation(line: 1385, column: 126, scope: !9316)
!9316 = !DILexicalBlockFile(scope: !9308, file: !13, discriminator: 3)
!9317 = !DILocation(line: 1385, column: 144, scope: !9308)
!9318 = !DILocation(line: 1385, column: 154, scope: !9308)
!9319 = !DILocation(line: 1385, column: 179, scope: !9308)
!9320 = !DILocation(line: 1385, column: 110, scope: !9308)
!9321 = !DILocation(line: 1385, column: 198, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !1168, file: !13, discriminator: 4)
!9323 = !DILocation(line: 1385, column: 198, scope: !1167)
!9324 = !DILocation(line: 1385, column: 198, scope: !9325)
!9325 = !DILexicalBlockFile(scope: !1167, file: !13, discriminator: 5)
!9326 = !DILocation(line: 1386, column: 5, scope: !1168)
!9327 = !DILocation(line: 1388, column: 31, scope: !1115)
!9328 = !DILocation(line: 1388, column: 12, scope: !1115)
!9329 = !DILocation(line: 1388, column: 5, scope: !1115)
!9330 = !DILocation(line: 1389, column: 1, scope: !1115)
!9331 = !DILocation(line: 1554, column: 28, scope: !1170)
!9332 = !DILocation(line: 1554, column: 44, scope: !1170)
!9333 = !DILocation(line: 1556, column: 5, scope: !1170)
!9334 = !DILocation(line: 1556, column: 16, scope: !1170)
!9335 = !DILocation(line: 1557, column: 5, scope: !1170)
!9336 = !DILocation(line: 1557, column: 15, scope: !1170)
!9337 = !DILocation(line: 1557, column: 37, scope: !1170)
!9338 = !DILocation(line: 1559, column: 9, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1559, column: 9)
!9340 = !DILocation(line: 1559, column: 15, scope: !9339)
!9341 = !DILocation(line: 1559, column: 18, scope: !9339)
!9342 = !DILocation(line: 1559, column: 9, scope: !1170)
!9343 = !DILocation(line: 1559, column: 30, scope: !9344)
!9344 = !DILexicalBlockFile(scope: !9345, file: !13, discriminator: 1)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !13, line: 1559, column: 30)
!9346 = distinct !DILexicalBlock(scope: !9339, file: !13, line: 1559, column: 24)
!9347 = !DILocation(line: 1559, column: 36, scope: !9345)
!9348 = !DILocation(line: 1559, column: 30, scope: !9345)
!9349 = !DILocation(line: 1559, column: 30, scope: !9346)
!9350 = !DILocation(line: 1559, column: 64, scope: !9351)
!9351 = !DILexicalBlockFile(scope: !9352, file: !13, discriminator: 2)
!9352 = distinct !DILexicalBlock(scope: !9345, file: !13, line: 1559, column: 46)
!9353 = !DILocation(line: 1559, column: 48, scope: !9352)
!9354 = !DILocation(line: 1559, column: 122, scope: !9352)
!9355 = !DILocation(line: 1559, column: 147, scope: !9356)
!9356 = !DILexicalBlockFile(scope: !9357, file: !13, discriminator: 3)
!9357 = distinct !DILexicalBlock(scope: !9345, file: !13, line: 1559, column: 129)
!9358 = !DILocation(line: 1559, column: 131, scope: !9357)
!9359 = !DILocation(line: 1559, column: 209, scope: !9360)
!9360 = !DILexicalBlockFile(scope: !9346, file: !13, discriminator: 4)
!9361 = !DILocation(line: 1559, column: 209, scope: !9346)
!9362 = !DILocation(line: 1561, column: 34, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1561, column: 9)
!9364 = !DILocation(line: 1561, column: 10, scope: !9363)
!9365 = !DILocation(line: 1561, column: 9, scope: !1170)
!9366 = !DILocation(line: 1562, column: 9, scope: !9363)
!9367 = !DILocation(line: 1564, column: 5, scope: !1170)
!9368 = !DILocation(line: 1564, column: 10, scope: !9369)
!9369 = !DILexicalBlockFile(scope: !1178, file: !13, discriminator: 1)
!9370 = !DILocation(line: 1564, column: 14, scope: !1178)
!9371 = !DILocation(line: 1564, column: 17, scope: !1178)
!9372 = !DILocation(line: 1564, column: 27, scope: !1178)
!9373 = !DILocation(line: 1564, column: 51, scope: !1185)
!9374 = !DILocation(line: 1564, column: 39, scope: !1185)
!9375 = !DILocation(line: 1564, column: 59, scope: !1185)
!9376 = !DILocation(line: 1564, column: 68, scope: !1185)
!9377 = !DILocation(line: 1564, column: 37, scope: !1178)
!9378 = !DILocation(line: 1564, column: 100, scope: !9379)
!9379 = !DILexicalBlockFile(scope: !1183, file: !13, discriminator: 2)
!9380 = !DILocation(line: 1564, column: 106, scope: !1183)
!9381 = !DILocation(line: 1564, column: 110, scope: !1183)
!9382 = !DILocation(line: 1564, column: 100, scope: !1184)
!9383 = !DILocation(line: 1564, column: 146, scope: !9384)
!9384 = !DILexicalBlockFile(scope: !1183, file: !13, discriminator: 4)
!9385 = !DILocation(line: 1564, column: 152, scope: !1183)
!9386 = !DILocation(line: 1564, column: 129, scope: !1183)
!9387 = !DILocation(line: 1564, column: 127, scope: !1183)
!9388 = !DILocation(line: 1564, column: 125, scope: !1183)
!9389 = !DILocation(line: 1564, column: 197, scope: !9390)
!9390 = !DILexicalBlockFile(scope: !1182, file: !13, discriminator: 5)
!9391 = !DILocation(line: 1564, column: 172, scope: !1182)
!9392 = !DILocation(line: 1564, column: 170, scope: !1182)
!9393 = !DILocation(line: 1564, column: 220, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !1182, file: !13, line: 1564, column: 220)
!9395 = !DILocation(line: 1564, column: 225, scope: !9394)
!9396 = !DILocation(line: 1564, column: 220, scope: !1182)
!9397 = !DILocation(line: 1564, column: 240, scope: !9398)
!9398 = !DILexicalBlockFile(scope: !9394, file: !13, discriminator: 7)
!9399 = !DILocation(line: 1564, column: 240, scope: !9394)
!9400 = !DILocation(line: 1564, column: 279, scope: !9401)
!9401 = !DILexicalBlockFile(scope: !1182, file: !13, discriminator: 8)
!9402 = !DILocation(line: 1564, column: 263, scope: !1182)
!9403 = !DILocation(line: 1564, column: 261, scope: !1182)
!9404 = !DILocation(line: 1564, column: 286, scope: !1182)
!9405 = !DILocation(line: 1564, column: 291, scope: !9406)
!9406 = !DILexicalBlockFile(scope: !1181, file: !13, discriminator: 10)
!9407 = !DILocation(line: 1564, column: 301, scope: !1181)
!9408 = !DILocation(line: 1564, column: 331, scope: !1181)
!9409 = !DILocation(line: 1564, column: 346, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !1181, file: !13, line: 1564, column: 343)
!9411 = !DILocation(line: 1564, column: 363, scope: !9410)
!9412 = !DILocation(line: 1564, column: 343, scope: !9410)
!9413 = !DILocation(line: 1564, column: 373, scope: !9410)
!9414 = !DILocation(line: 1564, column: 343, scope: !1181)
!9415 = !DILocation(line: 1564, column: 343, scope: !9416)
!9416 = !DILexicalBlockFile(scope: !1181, file: !13, discriminator: 11)
!9417 = !DILocation(line: 1564, column: 404, scope: !9418)
!9418 = !DILexicalBlockFile(scope: !9410, file: !13, discriminator: 12)
!9419 = !DILocation(line: 1564, column: 422, scope: !9410)
!9420 = !DILocation(line: 1564, column: 432, scope: !9410)
!9421 = !DILocation(line: 1564, column: 457, scope: !9410)
!9422 = !DILocation(line: 1564, column: 388, scope: !9410)
!9423 = !DILocation(line: 1564, column: 476, scope: !9424)
!9424 = !DILexicalBlockFile(scope: !1182, file: !13, discriminator: 13)
!9425 = !DILocation(line: 1564, column: 476, scope: !1181)
!9426 = !DILocation(line: 1564, column: 476, scope: !9427)
!9427 = !DILexicalBlockFile(scope: !1181, file: !13, discriminator: 14)
!9428 = !DILocation(line: 1564, column: 493, scope: !9429)
!9429 = !DILexicalBlockFile(scope: !9430, file: !13, discriminator: 15)
!9430 = distinct !DILexicalBlock(scope: !1182, file: !13, line: 1564, column: 493)
!9431 = !DILocation(line: 1564, column: 495, scope: !9430)
!9432 = !DILocation(line: 1564, column: 493, scope: !1182)
!9433 = !DILocation(line: 1564, column: 500, scope: !9434)
!9434 = !DILexicalBlockFile(scope: !9430, file: !13, discriminator: 16)
!9435 = !DILocation(line: 1564, column: 500, scope: !9430)
!9436 = !DILocation(line: 1564, column: 525, scope: !9437)
!9437 = !DILexicalBlockFile(scope: !9438, file: !13, discriminator: 6)
!9438 = distinct !DILexicalBlock(scope: !1184, file: !13, line: 1564, column: 525)
!9439 = !DILocation(line: 1564, column: 527, scope: !9438)
!9440 = !DILocation(line: 1564, column: 525, scope: !1184)
!9441 = !DILocation(line: 1564, column: 550, scope: !9442)
!9442 = !DILexicalBlockFile(scope: !9443, file: !13, discriminator: 18)
!9443 = distinct !DILexicalBlock(scope: !9438, file: !13, line: 1564, column: 532)
!9444 = !DILocation(line: 1564, column: 534, scope: !9443)
!9445 = !DILocation(line: 1564, column: 602, scope: !9443)
!9446 = !DILocation(line: 1564, column: 623, scope: !9447)
!9447 = !DILexicalBlockFile(scope: !1184, file: !13, discriminator: 19)
!9448 = !DILocation(line: 1564, column: 669, scope: !9449)
!9449 = !DILexicalBlockFile(scope: !9450, file: !13, discriminator: 3)
!9450 = distinct !DILexicalBlock(scope: !1185, file: !13, line: 1564, column: 634)
!9451 = !DILocation(line: 1564, column: 657, scope: !9450)
!9452 = !DILocation(line: 1564, column: 634, scope: !9450)
!9453 = !DILocation(line: 1564, column: 707, scope: !9450)
!9454 = !DILocation(line: 1564, column: 634, scope: !1185)
!9455 = !DILocation(line: 1564, column: 722, scope: !9456)
!9456 = !DILexicalBlockFile(scope: !9450, file: !13, discriminator: 22)
!9457 = !DILocation(line: 1564, column: 722, scope: !9450)
!9458 = !DILocation(line: 1564, column: 741, scope: !9459)
!9459 = !DILexicalBlockFile(scope: !1170, file: !13, discriminator: 21)
!9460 = !DILocation(line: 1564, column: 741, scope: !9461)
!9461 = !DILexicalBlockFile(scope: !9462, file: !13, discriminator: 24)
!9462 = !DILexicalBlockFile(scope: !9463, file: !13, discriminator: 23)
!9463 = !DILexicalBlockFile(scope: !9464, file: !13, discriminator: 20)
!9464 = !DILexicalBlockFile(scope: !9465, file: !13, discriminator: 17)
!9465 = !DILexicalBlockFile(scope: !1170, file: !13, discriminator: 9)
!9466 = !DILocation(line: 1564, column: 741, scope: !1178)
!9467 = !DILocation(line: 1564, column: 741, scope: !9468)
!9468 = !DILexicalBlockFile(scope: !1178, file: !13, discriminator: 25)
!9469 = !DILocation(line: 1566, column: 9, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1566, column: 9)
!9471 = !DILocation(line: 1566, column: 15, scope: !9470)
!9472 = !DILocation(line: 1566, column: 23, scope: !9470)
!9473 = !DILocation(line: 1566, column: 9, scope: !1170)
!9474 = !DILocation(line: 1567, column: 16, scope: !9470)
!9475 = !DILocation(line: 1567, column: 9, scope: !9470)
!9476 = !DILocation(line: 1569, column: 35, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !1170, file: !13, line: 1569, column: 9)
!9478 = !DILocation(line: 1569, column: 9, scope: !9477)
!9479 = !DILocation(line: 1569, column: 41, scope: !9477)
!9480 = !DILocation(line: 1569, column: 9, scope: !1170)
!9481 = !DILocation(line: 1570, column: 9, scope: !9477)
!9482 = !DILocation(line: 1572, column: 9, scope: !1188)
!9483 = !DILocation(line: 1572, column: 11, scope: !1188)
!9484 = !DILocation(line: 1572, column: 9, scope: !1170)
!9485 = !DILocation(line: 1574, column: 9, scope: !1187)
!9486 = !DILocation(line: 1574, column: 19, scope: !1187)
!9487 = !DILocation(line: 1574, column: 56, scope: !1187)
!9488 = !DILocation(line: 1574, column: 62, scope: !1187)
!9489 = !DILocation(line: 1574, column: 27, scope: !1187)
!9490 = !DILocation(line: 1575, column: 9, scope: !1187)
!9491 = !DILocation(line: 1575, column: 19, scope: !1187)
!9492 = !DILocation(line: 1576, column: 13, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1576, column: 13)
!9494 = !DILocation(line: 1576, column: 19, scope: !9493)
!9495 = !DILocation(line: 1576, column: 13, scope: !1187)
!9496 = !DILocation(line: 1577, column: 13, scope: !9493)
!9497 = !DILocation(line: 1579, column: 27, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1579, column: 13)
!9499 = !DILocation(line: 1579, column: 33, scope: !9498)
!9500 = !DILocation(line: 1579, column: 44, scope: !9498)
!9501 = !DILocation(line: 1579, column: 53, scope: !9498)
!9502 = !DILocation(line: 1579, column: 13, scope: !1187)
!9503 = !DILocation(line: 1580, column: 59, scope: !9498)
!9504 = !DILocation(line: 1580, column: 65, scope: !9498)
!9505 = !DILocation(line: 1581, column: 59, scope: !9498)
!9506 = !DILocation(line: 1580, column: 23, scope: !9498)
!9507 = !DILocation(line: 1580, column: 21, scope: !9498)
!9508 = !DILocation(line: 1580, column: 13, scope: !9498)
!9509 = !DILocation(line: 1584, column: 17, scope: !9498)
!9510 = !DILocation(line: 1584, column: 23, scope: !9498)
!9511 = !DILocation(line: 1584, column: 32, scope: !9498)
!9512 = !DILocation(line: 1584, column: 50, scope: !9498)
!9513 = !DILocation(line: 1583, column: 23, scope: !9498)
!9514 = !DILocation(line: 1583, column: 21, scope: !9498)
!9515 = !DILocation(line: 1585, column: 9, scope: !1187)
!9516 = !DILocation(line: 1585, column: 14, scope: !9517)
!9517 = !DILexicalBlockFile(scope: !1191, file: !13, discriminator: 1)
!9518 = !DILocation(line: 1585, column: 24, scope: !1191)
!9519 = !DILocation(line: 1585, column: 54, scope: !1191)
!9520 = !DILocation(line: 1585, column: 70, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !1191, file: !13, line: 1585, column: 67)
!9522 = !DILocation(line: 1585, column: 87, scope: !9521)
!9523 = !DILocation(line: 1585, column: 67, scope: !9521)
!9524 = !DILocation(line: 1585, column: 97, scope: !9521)
!9525 = !DILocation(line: 1585, column: 67, scope: !1191)
!9526 = !DILocation(line: 1585, column: 67, scope: !9527)
!9527 = !DILexicalBlockFile(scope: !1191, file: !13, discriminator: 2)
!9528 = !DILocation(line: 1585, column: 128, scope: !9529)
!9529 = !DILexicalBlockFile(scope: !9521, file: !13, discriminator: 3)
!9530 = !DILocation(line: 1585, column: 146, scope: !9521)
!9531 = !DILocation(line: 1585, column: 156, scope: !9521)
!9532 = !DILocation(line: 1585, column: 181, scope: !9521)
!9533 = !DILocation(line: 1585, column: 112, scope: !9521)
!9534 = !DILocation(line: 1585, column: 200, scope: !9535)
!9535 = !DILexicalBlockFile(scope: !1187, file: !13, discriminator: 4)
!9536 = !DILocation(line: 1585, column: 200, scope: !1191)
!9537 = !DILocation(line: 1585, column: 200, scope: !9538)
!9538 = !DILexicalBlockFile(scope: !1191, file: !13, discriminator: 5)
!9539 = !DILocation(line: 1586, column: 27, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1586, column: 13)
!9541 = !DILocation(line: 1586, column: 13, scope: !9540)
!9542 = !DILocation(line: 1586, column: 36, scope: !9540)
!9543 = !DILocation(line: 1586, column: 13, scope: !1187)
!9544 = !DILocation(line: 1587, column: 13, scope: !9540)
!9545 = !DILocation(line: 1589, column: 50, scope: !1187)
!9546 = !DILocation(line: 1589, column: 18, scope: !1187)
!9547 = !DILocation(line: 1589, column: 16, scope: !1187)
!9548 = !DILocation(line: 1591, column: 13, scope: !1195)
!9549 = !DILocation(line: 1591, column: 20, scope: !1195)
!9550 = !DILocation(line: 1591, column: 13, scope: !1187)
!9551 = !DILocation(line: 1592, column: 13, scope: !1194)
!9552 = !DILocation(line: 1592, column: 18, scope: !9553)
!9553 = !DILexicalBlockFile(scope: !1193, file: !13, discriminator: 1)
!9554 = !DILocation(line: 1592, column: 28, scope: !1193)
!9555 = !DILocation(line: 1592, column: 58, scope: !1193)
!9556 = !DILocation(line: 1592, column: 76, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !1193, file: !13, line: 1592, column: 73)
!9558 = !DILocation(line: 1592, column: 93, scope: !9557)
!9559 = !DILocation(line: 1592, column: 73, scope: !9557)
!9560 = !DILocation(line: 1592, column: 103, scope: !9557)
!9561 = !DILocation(line: 1592, column: 73, scope: !1193)
!9562 = !DILocation(line: 1592, column: 73, scope: !9563)
!9563 = !DILexicalBlockFile(scope: !1193, file: !13, discriminator: 2)
!9564 = !DILocation(line: 1592, column: 134, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9557, file: !13, discriminator: 3)
!9566 = !DILocation(line: 1592, column: 152, scope: !9557)
!9567 = !DILocation(line: 1592, column: 162, scope: !9557)
!9568 = !DILocation(line: 1592, column: 187, scope: !9557)
!9569 = !DILocation(line: 1592, column: 118, scope: !9557)
!9570 = !DILocation(line: 1592, column: 206, scope: !9571)
!9571 = !DILexicalBlockFile(scope: !1194, file: !13, discriminator: 4)
!9572 = !DILocation(line: 1592, column: 206, scope: !1193)
!9573 = !DILocation(line: 1592, column: 206, scope: !9574)
!9574 = !DILexicalBlockFile(scope: !1193, file: !13, discriminator: 5)
!9575 = !DILocation(line: 1593, column: 13, scope: !1194)
!9576 = !DILocation(line: 1596, column: 41, scope: !1187)
!9577 = !DILocation(line: 1596, column: 9, scope: !1187)
!9578 = !DILocation(line: 1597, column: 13, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !1187, file: !13, line: 1597, column: 13)
!9580 = !DILocation(line: 1597, column: 20, scope: !9579)
!9581 = !DILocation(line: 1597, column: 13, scope: !1187)
!9582 = !DILocation(line: 1598, column: 13, scope: !9579)
!9583 = !DILocation(line: 1600, column: 9, scope: !1187)
!9584 = !DILocation(line: 1600, column: 14, scope: !9585)
!9585 = !DILexicalBlockFile(scope: !1197, file: !13, discriminator: 1)
!9586 = !DILocation(line: 1600, column: 24, scope: !1197)
!9587 = !DILocation(line: 1600, column: 47, scope: !1197)
!9588 = !DILocation(line: 1600, column: 53, scope: !1197)
!9589 = !DILocation(line: 1600, column: 68, scope: !1201)
!9590 = !DILocation(line: 1600, column: 76, scope: !1201)
!9591 = !DILocation(line: 1600, column: 68, scope: !1197)
!9592 = !DILocation(line: 1600, column: 94, scope: !9593)
!9593 = !DILexicalBlockFile(scope: !1200, file: !13, discriminator: 2)
!9594 = !DILocation(line: 1600, column: 100, scope: !1200)
!9595 = !DILocation(line: 1600, column: 110, scope: !1200)
!9596 = !DILocation(line: 1600, column: 124, scope: !1200)
!9597 = !DILocation(line: 1600, column: 129, scope: !9598)
!9598 = !DILexicalBlockFile(scope: !1199, file: !13, discriminator: 4)
!9599 = !DILocation(line: 1600, column: 139, scope: !1199)
!9600 = !DILocation(line: 1600, column: 169, scope: !1199)
!9601 = !DILocation(line: 1600, column: 187, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !1199, file: !13, line: 1600, column: 184)
!9603 = !DILocation(line: 1600, column: 204, scope: !9602)
!9604 = !DILocation(line: 1600, column: 184, scope: !9602)
!9605 = !DILocation(line: 1600, column: 214, scope: !9602)
!9606 = !DILocation(line: 1600, column: 184, scope: !1199)
!9607 = !DILocation(line: 1600, column: 184, scope: !9608)
!9608 = !DILexicalBlockFile(scope: !1199, file: !13, discriminator: 5)
!9609 = !DILocation(line: 1600, column: 245, scope: !9610)
!9610 = !DILexicalBlockFile(scope: !9602, file: !13, discriminator: 6)
!9611 = !DILocation(line: 1600, column: 263, scope: !9602)
!9612 = !DILocation(line: 1600, column: 273, scope: !9602)
!9613 = !DILocation(line: 1600, column: 298, scope: !9602)
!9614 = !DILocation(line: 1600, column: 229, scope: !9602)
!9615 = !DILocation(line: 1600, column: 317, scope: !9616)
!9616 = !DILexicalBlockFile(scope: !1200, file: !13, discriminator: 7)
!9617 = !DILocation(line: 1600, column: 317, scope: !1199)
!9618 = !DILocation(line: 1600, column: 317, scope: !9619)
!9619 = !DILexicalBlockFile(scope: !1199, file: !13, discriminator: 8)
!9620 = !DILocation(line: 1600, column: 330, scope: !9621)
!9621 = !DILexicalBlockFile(scope: !1200, file: !13, discriminator: 9)
!9622 = !DILocation(line: 1600, column: 332, scope: !9623)
!9623 = !DILexicalBlockFile(scope: !9624, file: !13, discriminator: 10)
!9624 = !DILexicalBlockFile(scope: !1187, file: !13, discriminator: 3)
!9625 = !DILocation(line: 1600, column: 332, scope: !1197)
!9626 = !DILocation(line: 1600, column: 332, scope: !9627)
!9627 = !DILexicalBlockFile(scope: !1197, file: !13, discriminator: 11)
!9628 = !DILocation(line: 1601, column: 16, scope: !1187)
!9629 = !DILocation(line: 1601, column: 9, scope: !1187)
!9630 = !DILocation(line: 1602, column: 5, scope: !1188)
!9631 = !DILocation(line: 1604, column: 9, scope: !1203)
!9632 = !DILocation(line: 1604, column: 13, scope: !1203)
!9633 = !DILocation(line: 1605, column: 9, scope: !1203)
!9634 = !DILocation(line: 1605, column: 20, scope: !1203)
!9635 = !DILocation(line: 1605, column: 32, scope: !1203)
!9636 = !DILocation(line: 1607, column: 50, scope: !1203)
!9637 = !DILocation(line: 1607, column: 56, scope: !1203)
!9638 = !DILocation(line: 1607, column: 18, scope: !1203)
!9639 = !DILocation(line: 1607, column: 16, scope: !1203)
!9640 = !DILocation(line: 1608, column: 13, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1608, column: 13)
!9642 = !DILocation(line: 1608, column: 20, scope: !9641)
!9643 = !DILocation(line: 1608, column: 13, scope: !1203)
!9644 = !DILocation(line: 1609, column: 13, scope: !9641)
!9645 = !DILocation(line: 1610, column: 47, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !1203, file: !13, line: 1610, column: 13)
!9647 = !DILocation(line: 1610, column: 31, scope: !9646)
!9648 = !DILocation(line: 1610, column: 56, scope: !9646)
!9649 = !DILocation(line: 1610, column: 62, scope: !9646)
!9650 = !DILocation(line: 1610, column: 29, scope: !9646)
!9651 = !DILocation(line: 1610, column: 29, scope: !9652)
!9652 = !DILexicalBlockFile(scope: !9646, file: !13, discriminator: 1)
!9653 = !DILocation(line: 1610, column: 105, scope: !9654)
!9654 = !DILexicalBlockFile(scope: !9646, file: !13, discriminator: 2)
!9655 = !DILocation(line: 1610, column: 75, scope: !9646)
!9656 = !DILocation(line: 1610, column: 116, scope: !9657)
!9657 = !DILexicalBlockFile(scope: !9658, file: !13, discriminator: 4)
!9658 = !DILexicalBlockFile(scope: !9646, file: !13, discriminator: 3)
!9659 = !DILocation(line: 1610, column: 13, scope: !1203)
!9660 = !DILocation(line: 1611, column: 13, scope: !9646)
!9661 = !DILocation(line: 1612, column: 70, scope: !1203)
!9662 = !DILocation(line: 1612, column: 52, scope: !1203)
!9663 = !DILocation(line: 1612, column: 80, scope: !1203)
!9664 = !DILocation(line: 1612, column: 19, scope: !1203)
!9665 = !DILocation(line: 1615, column: 9, scope: !1203)
!9666 = !DILocation(line: 1615, column: 16, scope: !9667)
!9667 = !DILexicalBlockFile(scope: !9668, file: !13, discriminator: 2)
!9668 = !DILexicalBlockFile(scope: !1203, file: !13, discriminator: 1)
!9669 = !DILocation(line: 1615, column: 26, scope: !1203)
!9670 = !DILocation(line: 1616, column: 44, scope: !1207)
!9671 = !DILocation(line: 1616, column: 50, scope: !1207)
!9672 = !DILocation(line: 1616, column: 19, scope: !1207)
!9673 = !DILocation(line: 1616, column: 17, scope: !1207)
!9674 = !DILocation(line: 1617, column: 17, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1617, column: 17)
!9676 = !DILocation(line: 1617, column: 21, scope: !9675)
!9677 = !DILocation(line: 1617, column: 17, scope: !1207)
!9678 = !DILocation(line: 1620, column: 21, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !13, line: 1620, column: 21)
!9680 = distinct !DILexicalBlock(scope: !9675, file: !13, line: 1617, column: 26)
!9681 = !DILocation(line: 1620, column: 21, scope: !9680)
!9682 = !DILocation(line: 1621, column: 21, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9679, file: !13, line: 1620, column: 41)
!9684 = !DILocation(line: 1623, column: 17, scope: !9680)
!9685 = !DILocation(line: 1625, column: 17, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1625, column: 17)
!9687 = !DILocation(line: 1625, column: 21, scope: !9686)
!9688 = !DILocation(line: 1625, column: 17, scope: !1207)
!9689 = !DILocation(line: 1626, column: 17, scope: !9686)
!9690 = !DILocation(line: 1627, column: 17, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1627, column: 17)
!9692 = !DILocation(line: 1627, column: 24, scope: !9691)
!9693 = !DILocation(line: 1627, column: 17, scope: !1207)
!9694 = !DILocation(line: 1628, column: 26, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9691, file: !13, line: 1627, column: 39)
!9696 = !DILocation(line: 1628, column: 24, scope: !9695)
!9697 = !DILocation(line: 1629, column: 21, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9695, file: !13, line: 1629, column: 21)
!9699 = !DILocation(line: 1629, column: 28, scope: !9698)
!9700 = !DILocation(line: 1629, column: 21, scope: !9695)
!9701 = !DILocation(line: 1630, column: 21, scope: !9698)
!9702 = !DILocation(line: 1631, column: 13, scope: !9695)
!9703 = !DILocation(line: 1632, column: 65, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1632, column: 17)
!9705 = !DILocation(line: 1632, column: 47, scope: !9704)
!9706 = !DILocation(line: 1632, column: 75, scope: !9704)
!9707 = !DILocation(line: 1632, column: 83, scope: !9704)
!9708 = !DILocation(line: 1632, column: 87, scope: !9704)
!9709 = !DILocation(line: 1633, column: 31, scope: !9704)
!9710 = !DILocation(line: 1633, column: 39, scope: !9704)
!9711 = !DILocation(line: 1633, column: 17, scope: !9704)
!9712 = !DILocation(line: 1633, column: 47, scope: !9704)
!9713 = !DILocation(line: 1632, column: 17, scope: !1207)
!9714 = !DILocation(line: 1634, column: 17, scope: !9704)
!9715 = !DILocation(line: 1635, column: 13, scope: !1207)
!9716 = !DILocation(line: 1635, column: 18, scope: !9717)
!9717 = !DILexicalBlockFile(scope: !1206, file: !13, discriminator: 1)
!9718 = !DILocation(line: 1635, column: 28, scope: !1206)
!9719 = !DILocation(line: 1635, column: 58, scope: !1206)
!9720 = !DILocation(line: 1635, column: 75, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !1206, file: !13, line: 1635, column: 72)
!9722 = !DILocation(line: 1635, column: 92, scope: !9721)
!9723 = !DILocation(line: 1635, column: 72, scope: !9721)
!9724 = !DILocation(line: 1635, column: 102, scope: !9721)
!9725 = !DILocation(line: 1635, column: 72, scope: !1206)
!9726 = !DILocation(line: 1635, column: 72, scope: !9727)
!9727 = !DILexicalBlockFile(scope: !1206, file: !13, discriminator: 2)
!9728 = !DILocation(line: 1635, column: 133, scope: !9729)
!9729 = !DILexicalBlockFile(scope: !9721, file: !13, discriminator: 3)
!9730 = !DILocation(line: 1635, column: 151, scope: !9721)
!9731 = !DILocation(line: 1635, column: 161, scope: !9721)
!9732 = !DILocation(line: 1635, column: 186, scope: !9721)
!9733 = !DILocation(line: 1635, column: 117, scope: !9721)
!9734 = !DILocation(line: 1635, column: 205, scope: !9735)
!9735 = !DILexicalBlockFile(scope: !1207, file: !13, discriminator: 4)
!9736 = !DILocation(line: 1635, column: 205, scope: !1206)
!9737 = !DILocation(line: 1635, column: 205, scope: !9738)
!9738 = !DILexicalBlockFile(scope: !1206, file: !13, discriminator: 5)
!9739 = !DILocation(line: 1636, column: 54, scope: !1207)
!9740 = !DILocation(line: 1636, column: 60, scope: !1207)
!9741 = !DILocation(line: 1636, column: 22, scope: !1207)
!9742 = !DILocation(line: 1636, column: 20, scope: !1207)
!9743 = !DILocation(line: 1637, column: 17, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !1207, file: !13, line: 1637, column: 17)
!9745 = !DILocation(line: 1637, column: 24, scope: !9744)
!9746 = !DILocation(line: 1637, column: 17, scope: !1207)
!9747 = !DILocation(line: 1638, column: 17, scope: !9744)
!9748 = !DILocation(line: 1639, column: 74, scope: !1207)
!9749 = !DILocation(line: 1639, column: 56, scope: !1207)
!9750 = !DILocation(line: 1639, column: 84, scope: !1207)
!9751 = !DILocation(line: 1639, column: 23, scope: !1207)
!9752 = !DILocation(line: 1641, column: 13, scope: !1211)
!9753 = !DILocation(line: 1641, column: 20, scope: !1211)
!9754 = !DILocation(line: 1641, column: 13, scope: !1203)
!9755 = !DILocation(line: 1642, column: 17, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1642, column: 17)
!9757 = !DILocation(line: 1642, column: 24, scope: !9756)
!9758 = !DILocation(line: 1642, column: 38, scope: !9756)
!9759 = !DILocation(line: 1642, column: 55, scope: !9760)
!9760 = !DILexicalBlockFile(scope: !9756, file: !13, discriminator: 1)
!9761 = !DILocation(line: 1642, column: 63, scope: !9756)
!9762 = !DILocation(line: 1642, column: 41, scope: !9756)
!9763 = !DILocation(line: 1642, column: 71, scope: !9756)
!9764 = !DILocation(line: 1642, column: 17, scope: !1210)
!9765 = !DILocation(line: 1643, column: 17, scope: !9756)
!9766 = !DILocation(line: 1644, column: 13, scope: !1210)
!9767 = !DILocation(line: 1644, column: 18, scope: !9768)
!9768 = !DILexicalBlockFile(scope: !1209, file: !13, discriminator: 1)
!9769 = !DILocation(line: 1644, column: 28, scope: !1209)
!9770 = !DILocation(line: 1644, column: 51, scope: !1209)
!9771 = !DILocation(line: 1644, column: 64, scope: !1215)
!9772 = !DILocation(line: 1644, column: 72, scope: !1215)
!9773 = !DILocation(line: 1644, column: 64, scope: !1209)
!9774 = !DILocation(line: 1644, column: 98, scope: !9775)
!9775 = !DILexicalBlockFile(scope: !1214, file: !13, discriminator: 2)
!9776 = !DILocation(line: 1644, column: 112, scope: !1214)
!9777 = !DILocation(line: 1644, column: 117, scope: !9778)
!9778 = !DILexicalBlockFile(scope: !1213, file: !13, discriminator: 4)
!9779 = !DILocation(line: 1644, column: 127, scope: !1213)
!9780 = !DILocation(line: 1644, column: 157, scope: !1213)
!9781 = !DILocation(line: 1644, column: 175, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !1213, file: !13, line: 1644, column: 172)
!9783 = !DILocation(line: 1644, column: 192, scope: !9782)
!9784 = !DILocation(line: 1644, column: 172, scope: !9782)
!9785 = !DILocation(line: 1644, column: 202, scope: !9782)
!9786 = !DILocation(line: 1644, column: 172, scope: !1213)
!9787 = !DILocation(line: 1644, column: 172, scope: !9788)
!9788 = !DILexicalBlockFile(scope: !1213, file: !13, discriminator: 5)
!9789 = !DILocation(line: 1644, column: 233, scope: !9790)
!9790 = !DILexicalBlockFile(scope: !9782, file: !13, discriminator: 6)
!9791 = !DILocation(line: 1644, column: 251, scope: !9782)
!9792 = !DILocation(line: 1644, column: 261, scope: !9782)
!9793 = !DILocation(line: 1644, column: 286, scope: !9782)
!9794 = !DILocation(line: 1644, column: 217, scope: !9782)
!9795 = !DILocation(line: 1644, column: 305, scope: !9796)
!9796 = !DILexicalBlockFile(scope: !1214, file: !13, discriminator: 7)
!9797 = !DILocation(line: 1644, column: 305, scope: !1213)
!9798 = !DILocation(line: 1644, column: 305, scope: !9799)
!9799 = !DILexicalBlockFile(scope: !1213, file: !13, discriminator: 8)
!9800 = !DILocation(line: 1644, column: 318, scope: !9801)
!9801 = !DILexicalBlockFile(scope: !1214, file: !13, discriminator: 9)
!9802 = !DILocation(line: 1644, column: 320, scope: !9803)
!9803 = !DILexicalBlockFile(scope: !9804, file: !13, discriminator: 10)
!9804 = !DILexicalBlockFile(scope: !1210, file: !13, discriminator: 3)
!9805 = !DILocation(line: 1644, column: 320, scope: !1209)
!9806 = !DILocation(line: 1644, column: 320, scope: !9807)
!9807 = !DILexicalBlockFile(scope: !1209, file: !13, discriminator: 11)
!9808 = !DILocation(line: 1645, column: 37, scope: !1210)
!9809 = !DILocation(line: 1645, column: 54, scope: !1210)
!9810 = !DILocation(line: 1645, column: 22, scope: !1210)
!9811 = !DILocation(line: 1645, column: 20, scope: !1210)
!9812 = !DILocation(line: 1646, column: 17, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !1210, file: !13, line: 1646, column: 17)
!9814 = !DILocation(line: 1646, column: 24, scope: !9813)
!9815 = !DILocation(line: 1646, column: 17, scope: !1210)
!9816 = !DILocation(line: 1647, column: 17, scope: !9813)
!9817 = !DILocation(line: 1648, column: 13, scope: !1210)
!9818 = !DILocation(line: 1648, column: 18, scope: !9819)
!9819 = !DILexicalBlockFile(scope: !1217, file: !13, discriminator: 1)
!9820 = !DILocation(line: 1648, column: 28, scope: !1217)
!9821 = !DILocation(line: 1648, column: 51, scope: !1217)
!9822 = !DILocation(line: 1648, column: 64, scope: !1221)
!9823 = !DILocation(line: 1648, column: 72, scope: !1221)
!9824 = !DILocation(line: 1648, column: 64, scope: !1217)
!9825 = !DILocation(line: 1648, column: 98, scope: !9826)
!9826 = !DILexicalBlockFile(scope: !1220, file: !13, discriminator: 2)
!9827 = !DILocation(line: 1648, column: 112, scope: !1220)
!9828 = !DILocation(line: 1648, column: 117, scope: !9829)
!9829 = !DILexicalBlockFile(scope: !1219, file: !13, discriminator: 4)
!9830 = !DILocation(line: 1648, column: 127, scope: !1219)
!9831 = !DILocation(line: 1648, column: 157, scope: !1219)
!9832 = !DILocation(line: 1648, column: 175, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !1219, file: !13, line: 1648, column: 172)
!9834 = !DILocation(line: 1648, column: 192, scope: !9833)
!9835 = !DILocation(line: 1648, column: 172, scope: !9833)
!9836 = !DILocation(line: 1648, column: 202, scope: !9833)
!9837 = !DILocation(line: 1648, column: 172, scope: !1219)
!9838 = !DILocation(line: 1648, column: 172, scope: !9839)
!9839 = !DILexicalBlockFile(scope: !1219, file: !13, discriminator: 5)
!9840 = !DILocation(line: 1648, column: 233, scope: !9841)
!9841 = !DILexicalBlockFile(scope: !9833, file: !13, discriminator: 6)
!9842 = !DILocation(line: 1648, column: 251, scope: !9833)
!9843 = !DILocation(line: 1648, column: 261, scope: !9833)
!9844 = !DILocation(line: 1648, column: 286, scope: !9833)
!9845 = !DILocation(line: 1648, column: 217, scope: !9833)
!9846 = !DILocation(line: 1648, column: 305, scope: !9847)
!9847 = !DILexicalBlockFile(scope: !1220, file: !13, discriminator: 7)
!9848 = !DILocation(line: 1648, column: 305, scope: !1219)
!9849 = !DILocation(line: 1648, column: 305, scope: !9850)
!9850 = !DILexicalBlockFile(scope: !1219, file: !13, discriminator: 8)
!9851 = !DILocation(line: 1648, column: 318, scope: !9852)
!9852 = !DILexicalBlockFile(scope: !1220, file: !13, discriminator: 9)
!9853 = !DILocation(line: 1648, column: 320, scope: !9803)
!9854 = !DILocation(line: 1648, column: 320, scope: !1217)
!9855 = !DILocation(line: 1648, column: 320, scope: !9856)
!9856 = !DILexicalBlockFile(scope: !1217, file: !13, discriminator: 11)
!9857 = !DILocation(line: 1649, column: 9, scope: !1210)
!9858 = !DILocation(line: 1650, column: 16, scope: !1203)
!9859 = !DILocation(line: 1650, column: 9, scope: !1203)
!9860 = !DILocation(line: 1651, column: 5, scope: !1188)
!9861 = !DILocation(line: 1653, column: 5, scope: !1170)
!9862 = !DILocation(line: 1653, column: 10, scope: !9863)
!9863 = !DILexicalBlockFile(scope: !1223, file: !13, discriminator: 1)
!9864 = !DILocation(line: 1653, column: 20, scope: !1223)
!9865 = !DILocation(line: 1653, column: 51, scope: !1223)
!9866 = !DILocation(line: 1653, column: 64, scope: !1226)
!9867 = !DILocation(line: 1653, column: 80, scope: !1226)
!9868 = !DILocation(line: 1653, column: 64, scope: !1223)
!9869 = !DILocation(line: 1653, column: 95, scope: !9870)
!9870 = !DILexicalBlockFile(scope: !1226, file: !13, discriminator: 2)
!9871 = !DILocation(line: 1653, column: 100, scope: !9872)
!9872 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 4)
!9873 = !DILocation(line: 1653, column: 110, scope: !1225)
!9874 = !DILocation(line: 1653, column: 140, scope: !1225)
!9875 = !DILocation(line: 1653, column: 166, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !1225, file: !13, line: 1653, column: 163)
!9877 = !DILocation(line: 1653, column: 183, scope: !9876)
!9878 = !DILocation(line: 1653, column: 163, scope: !9876)
!9879 = !DILocation(line: 1653, column: 193, scope: !9876)
!9880 = !DILocation(line: 1653, column: 163, scope: !1225)
!9881 = !DILocation(line: 1653, column: 163, scope: !9882)
!9882 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 5)
!9883 = !DILocation(line: 1653, column: 224, scope: !9884)
!9884 = !DILexicalBlockFile(scope: !9876, file: !13, discriminator: 6)
!9885 = !DILocation(line: 1653, column: 242, scope: !9876)
!9886 = !DILocation(line: 1653, column: 252, scope: !9876)
!9887 = !DILocation(line: 1653, column: 277, scope: !9876)
!9888 = !DILocation(line: 1653, column: 208, scope: !9876)
!9889 = !DILocation(line: 1653, column: 296, scope: !9890)
!9890 = !DILexicalBlockFile(scope: !1226, file: !13, discriminator: 7)
!9891 = !DILocation(line: 1653, column: 296, scope: !1225)
!9892 = !DILocation(line: 1653, column: 296, scope: !9893)
!9893 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 8)
!9894 = !DILocation(line: 1653, column: 296, scope: !9895)
!9895 = !DILexicalBlockFile(scope: !1225, file: !13, discriminator: 9)
!9896 = !DILocation(line: 1653, column: 309, scope: !9897)
!9897 = !DILexicalBlockFile(scope: !9898, file: !13, discriminator: 10)
!9898 = !DILexicalBlockFile(scope: !1170, file: !13, discriminator: 3)
!9899 = !DILocation(line: 1653, column: 309, scope: !1223)
!9900 = !DILocation(line: 1653, column: 309, scope: !9901)
!9901 = !DILexicalBlockFile(scope: !1223, file: !13, discriminator: 11)
!9902 = !DILocation(line: 1654, column: 5, scope: !1170)
!9903 = !DILocation(line: 1654, column: 10, scope: !9904)
!9904 = !DILexicalBlockFile(scope: !1228, file: !13, discriminator: 1)
!9905 = !DILocation(line: 1654, column: 20, scope: !1228)
!9906 = !DILocation(line: 1654, column: 51, scope: !1228)
!9907 = !DILocation(line: 1654, column: 64, scope: !1231)
!9908 = !DILocation(line: 1654, column: 80, scope: !1231)
!9909 = !DILocation(line: 1654, column: 64, scope: !1228)
!9910 = !DILocation(line: 1654, column: 95, scope: !9911)
!9911 = !DILexicalBlockFile(scope: !1231, file: !13, discriminator: 2)
!9912 = !DILocation(line: 1654, column: 100, scope: !9913)
!9913 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 4)
!9914 = !DILocation(line: 1654, column: 110, scope: !1230)
!9915 = !DILocation(line: 1654, column: 140, scope: !1230)
!9916 = !DILocation(line: 1654, column: 166, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !1230, file: !13, line: 1654, column: 163)
!9918 = !DILocation(line: 1654, column: 183, scope: !9917)
!9919 = !DILocation(line: 1654, column: 163, scope: !9917)
!9920 = !DILocation(line: 1654, column: 193, scope: !9917)
!9921 = !DILocation(line: 1654, column: 163, scope: !1230)
!9922 = !DILocation(line: 1654, column: 163, scope: !9923)
!9923 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 5)
!9924 = !DILocation(line: 1654, column: 224, scope: !9925)
!9925 = !DILexicalBlockFile(scope: !9917, file: !13, discriminator: 6)
!9926 = !DILocation(line: 1654, column: 242, scope: !9917)
!9927 = !DILocation(line: 1654, column: 252, scope: !9917)
!9928 = !DILocation(line: 1654, column: 277, scope: !9917)
!9929 = !DILocation(line: 1654, column: 208, scope: !9917)
!9930 = !DILocation(line: 1654, column: 296, scope: !9931)
!9931 = !DILexicalBlockFile(scope: !1231, file: !13, discriminator: 7)
!9932 = !DILocation(line: 1654, column: 296, scope: !1230)
!9933 = !DILocation(line: 1654, column: 296, scope: !9934)
!9934 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 8)
!9935 = !DILocation(line: 1654, column: 296, scope: !9936)
!9936 = !DILexicalBlockFile(scope: !1230, file: !13, discriminator: 9)
!9937 = !DILocation(line: 1654, column: 309, scope: !9897)
!9938 = !DILocation(line: 1654, column: 309, scope: !1228)
!9939 = !DILocation(line: 1654, column: 309, scope: !9940)
!9940 = !DILexicalBlockFile(scope: !1228, file: !13, discriminator: 11)
!9941 = !DILocation(line: 1655, column: 5, scope: !1170)
!9942 = !DILocation(line: 1656, column: 1, scope: !1170)
!9943 = !DILocation(line: 1930, column: 32, scope: !1238)
!9944 = !DILocation(line: 1930, column: 48, scope: !1238)
!9945 = !DILocation(line: 1932, column: 5, scope: !1238)
!9946 = !DILocation(line: 1932, column: 16, scope: !1238)
!9947 = !DILocation(line: 1934, column: 9, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !1238, file: !13, line: 1934, column: 9)
!9949 = !DILocation(line: 1934, column: 15, scope: !9948)
!9950 = !DILocation(line: 1934, column: 18, scope: !9948)
!9951 = !DILocation(line: 1934, column: 9, scope: !1238)
!9952 = !DILocation(line: 1934, column: 30, scope: !9953)
!9953 = !DILexicalBlockFile(scope: !9954, file: !13, discriminator: 1)
!9954 = distinct !DILexicalBlock(scope: !9955, file: !13, line: 1934, column: 30)
!9955 = distinct !DILexicalBlock(scope: !9948, file: !13, line: 1934, column: 24)
!9956 = !DILocation(line: 1934, column: 36, scope: !9954)
!9957 = !DILocation(line: 1934, column: 30, scope: !9954)
!9958 = !DILocation(line: 1934, column: 30, scope: !9955)
!9959 = !DILocation(line: 1934, column: 64, scope: !9960)
!9960 = !DILexicalBlockFile(scope: !9961, file: !13, discriminator: 2)
!9961 = distinct !DILexicalBlock(scope: !9954, file: !13, line: 1934, column: 46)
!9962 = !DILocation(line: 1934, column: 48, scope: !9961)
!9963 = !DILocation(line: 1934, column: 122, scope: !9961)
!9964 = !DILocation(line: 1934, column: 147, scope: !9965)
!9965 = !DILexicalBlockFile(scope: !9966, file: !13, discriminator: 3)
!9966 = distinct !DILexicalBlock(scope: !9954, file: !13, line: 1934, column: 129)
!9967 = !DILocation(line: 1934, column: 131, scope: !9966)
!9968 = !DILocation(line: 1934, column: 209, scope: !9969)
!9969 = !DILexicalBlockFile(scope: !9955, file: !13, discriminator: 4)
!9970 = !DILocation(line: 1934, column: 209, scope: !9955)
!9971 = !DILocation(line: 1935, column: 34, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !1238, file: !13, line: 1935, column: 9)
!9973 = !DILocation(line: 1935, column: 10, scope: !9972)
!9974 = !DILocation(line: 1935, column: 9, scope: !1238)
!9975 = !DILocation(line: 1936, column: 9, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !13, line: 1935, column: 64)
!9977 = !DILocation(line: 1938, column: 36, scope: !1238)
!9978 = !DILocation(line: 1938, column: 42, scope: !1238)
!9979 = !DILocation(line: 1938, column: 12, scope: !1238)
!9980 = !DILocation(line: 1938, column: 5, scope: !1238)
!9981 = !DILocation(line: 1939, column: 1, scope: !1238)
!9982 = !DILocation(line: 2566, column: 29, scope: !1243)
!9983 = !DILocation(line: 2566, column: 45, scope: !1243)
!9984 = !DILocation(line: 2568, column: 9, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !1243, file: !13, line: 2568, column: 9)
!9986 = !DILocation(line: 2568, column: 15, scope: !9985)
!9987 = !DILocation(line: 2568, column: 18, scope: !9985)
!9988 = !DILocation(line: 2568, column: 9, scope: !1243)
!9989 = !DILocation(line: 2568, column: 30, scope: !9990)
!9990 = !DILexicalBlockFile(scope: !9991, file: !13, discriminator: 1)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !13, line: 2568, column: 30)
!9992 = distinct !DILexicalBlock(scope: !9985, file: !13, line: 2568, column: 24)
!9993 = !DILocation(line: 2568, column: 36, scope: !9991)
!9994 = !DILocation(line: 2568, column: 30, scope: !9991)
!9995 = !DILocation(line: 2568, column: 30, scope: !9992)
!9996 = !DILocation(line: 2568, column: 64, scope: !9997)
!9997 = !DILexicalBlockFile(scope: !9998, file: !13, discriminator: 2)
!9998 = distinct !DILexicalBlock(scope: !9991, file: !13, line: 2568, column: 46)
!9999 = !DILocation(line: 2568, column: 48, scope: !9998)
!10000 = !DILocation(line: 2568, column: 122, scope: !9998)
!10001 = !DILocation(line: 2568, column: 147, scope: !10002)
!10002 = !DILexicalBlockFile(scope: !10003, file: !13, discriminator: 3)
!10003 = distinct !DILexicalBlock(scope: !9991, file: !13, line: 2568, column: 129)
!10004 = !DILocation(line: 2568, column: 131, scope: !10003)
!10005 = !DILocation(line: 2568, column: 209, scope: !10006)
!10006 = !DILexicalBlockFile(scope: !9992, file: !13, discriminator: 4)
!10007 = !DILocation(line: 2569, column: 5, scope: !1243)
!10008 = !DILocation(line: 2569, column: 10, scope: !10009)
!10009 = !DILexicalBlockFile(scope: !1248, file: !13, discriminator: 1)
!10010 = !DILocation(line: 2569, column: 14, scope: !1248)
!10011 = !DILocation(line: 2569, column: 17, scope: !1248)
!10012 = !DILocation(line: 2569, column: 27, scope: !1248)
!10013 = !DILocation(line: 2569, column: 51, scope: !1255)
!10014 = !DILocation(line: 2569, column: 39, scope: !1255)
!10015 = !DILocation(line: 2569, column: 59, scope: !1255)
!10016 = !DILocation(line: 2569, column: 68, scope: !1255)
!10017 = !DILocation(line: 2569, column: 37, scope: !1248)
!10018 = !DILocation(line: 2569, column: 100, scope: !10019)
!10019 = !DILexicalBlockFile(scope: !1253, file: !13, discriminator: 2)
!10020 = !DILocation(line: 2569, column: 106, scope: !1253)
!10021 = !DILocation(line: 2569, column: 110, scope: !1253)
!10022 = !DILocation(line: 2569, column: 100, scope: !1254)
!10023 = !DILocation(line: 2569, column: 146, scope: !10024)
!10024 = !DILexicalBlockFile(scope: !1253, file: !13, discriminator: 4)
!10025 = !DILocation(line: 2569, column: 152, scope: !1253)
!10026 = !DILocation(line: 2569, column: 129, scope: !1253)
!10027 = !DILocation(line: 2569, column: 127, scope: !1253)
!10028 = !DILocation(line: 2569, column: 125, scope: !1253)
!10029 = !DILocation(line: 2569, column: 197, scope: !10030)
!10030 = !DILexicalBlockFile(scope: !1252, file: !13, discriminator: 5)
!10031 = !DILocation(line: 2569, column: 172, scope: !1252)
!10032 = !DILocation(line: 2569, column: 170, scope: !1252)
!10033 = !DILocation(line: 2569, column: 220, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !1252, file: !13, line: 2569, column: 220)
!10035 = !DILocation(line: 2569, column: 225, scope: !10034)
!10036 = !DILocation(line: 2569, column: 220, scope: !1252)
!10037 = !DILocation(line: 2569, column: 240, scope: !10038)
!10038 = !DILexicalBlockFile(scope: !10034, file: !13, discriminator: 7)
!10039 = !DILocation(line: 2569, column: 240, scope: !10034)
!10040 = !DILocation(line: 2569, column: 279, scope: !10041)
!10041 = !DILexicalBlockFile(scope: !1252, file: !13, discriminator: 8)
!10042 = !DILocation(line: 2569, column: 263, scope: !1252)
!10043 = !DILocation(line: 2569, column: 261, scope: !1252)
!10044 = !DILocation(line: 2569, column: 286, scope: !1252)
!10045 = !DILocation(line: 2569, column: 291, scope: !10046)
!10046 = !DILexicalBlockFile(scope: !1251, file: !13, discriminator: 10)
!10047 = !DILocation(line: 2569, column: 301, scope: !1251)
!10048 = !DILocation(line: 2569, column: 331, scope: !1251)
!10049 = !DILocation(line: 2569, column: 346, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !1251, file: !13, line: 2569, column: 343)
!10051 = !DILocation(line: 2569, column: 363, scope: !10050)
!10052 = !DILocation(line: 2569, column: 343, scope: !10050)
!10053 = !DILocation(line: 2569, column: 373, scope: !10050)
!10054 = !DILocation(line: 2569, column: 343, scope: !1251)
!10055 = !DILocation(line: 2569, column: 343, scope: !10056)
!10056 = !DILexicalBlockFile(scope: !1251, file: !13, discriminator: 11)
!10057 = !DILocation(line: 2569, column: 404, scope: !10058)
!10058 = !DILexicalBlockFile(scope: !10050, file: !13, discriminator: 12)
!10059 = !DILocation(line: 2569, column: 422, scope: !10050)
!10060 = !DILocation(line: 2569, column: 432, scope: !10050)
!10061 = !DILocation(line: 2569, column: 457, scope: !10050)
!10062 = !DILocation(line: 2569, column: 388, scope: !10050)
!10063 = !DILocation(line: 2569, column: 476, scope: !10064)
!10064 = !DILexicalBlockFile(scope: !1252, file: !13, discriminator: 13)
!10065 = !DILocation(line: 2569, column: 476, scope: !1251)
!10066 = !DILocation(line: 2569, column: 476, scope: !10067)
!10067 = !DILexicalBlockFile(scope: !1251, file: !13, discriminator: 14)
!10068 = !DILocation(line: 2569, column: 493, scope: !10069)
!10069 = !DILexicalBlockFile(scope: !10070, file: !13, discriminator: 15)
!10070 = distinct !DILexicalBlock(scope: !1252, file: !13, line: 2569, column: 493)
!10071 = !DILocation(line: 2569, column: 495, scope: !10070)
!10072 = !DILocation(line: 2569, column: 493, scope: !1252)
!10073 = !DILocation(line: 2569, column: 500, scope: !10074)
!10074 = !DILexicalBlockFile(scope: !10070, file: !13, discriminator: 16)
!10075 = !DILocation(line: 2569, column: 500, scope: !10070)
!10076 = !DILocation(line: 2569, column: 525, scope: !10077)
!10077 = !DILexicalBlockFile(scope: !10078, file: !13, discriminator: 6)
!10078 = distinct !DILexicalBlock(scope: !1254, file: !13, line: 2569, column: 525)
!10079 = !DILocation(line: 2569, column: 527, scope: !10078)
!10080 = !DILocation(line: 2569, column: 525, scope: !1254)
!10081 = !DILocation(line: 2569, column: 550, scope: !10082)
!10082 = !DILexicalBlockFile(scope: !10083, file: !13, discriminator: 18)
!10083 = distinct !DILexicalBlock(scope: !10078, file: !13, line: 2569, column: 532)
!10084 = !DILocation(line: 2569, column: 534, scope: !10083)
!10085 = !DILocation(line: 2569, column: 602, scope: !10083)
!10086 = !DILocation(line: 2569, column: 623, scope: !10087)
!10087 = !DILexicalBlockFile(scope: !1254, file: !13, discriminator: 19)
!10088 = !DILocation(line: 2569, column: 669, scope: !10089)
!10089 = !DILexicalBlockFile(scope: !10090, file: !13, discriminator: 3)
!10090 = distinct !DILexicalBlock(scope: !1255, file: !13, line: 2569, column: 634)
!10091 = !DILocation(line: 2569, column: 657, scope: !10090)
!10092 = !DILocation(line: 2569, column: 634, scope: !10090)
!10093 = !DILocation(line: 2569, column: 707, scope: !10090)
!10094 = !DILocation(line: 2569, column: 634, scope: !1255)
!10095 = !DILocation(line: 2569, column: 722, scope: !10096)
!10096 = !DILexicalBlockFile(scope: !10090, file: !13, discriminator: 22)
!10097 = !DILocation(line: 2569, column: 722, scope: !10090)
!10098 = !DILocation(line: 2569, column: 741, scope: !10099)
!10099 = !DILexicalBlockFile(scope: !1243, file: !13, discriminator: 21)
!10100 = !DILocation(line: 2569, column: 741, scope: !10101)
!10101 = !DILexicalBlockFile(scope: !10102, file: !13, discriminator: 24)
!10102 = !DILexicalBlockFile(scope: !10103, file: !13, discriminator: 23)
!10103 = !DILexicalBlockFile(scope: !10104, file: !13, discriminator: 20)
!10104 = !DILexicalBlockFile(scope: !10105, file: !13, discriminator: 17)
!10105 = !DILexicalBlockFile(scope: !1243, file: !13, discriminator: 9)
!10106 = !DILocation(line: 2569, column: 741, scope: !1248)
!10107 = !DILocation(line: 2570, column: 21, scope: !1243)
!10108 = !DILocation(line: 2570, column: 27, scope: !1243)
!10109 = !DILocation(line: 2570, column: 5, scope: !1243)
!10110 = !DILocation(line: 2570, column: 11, scope: !1243)
!10111 = !DILocation(line: 2570, column: 19, scope: !1243)
!10112 = !DILocation(line: 2571, column: 35, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !1243, file: !13, line: 2571, column: 9)
!10114 = !DILocation(line: 2571, column: 9, scope: !10113)
!10115 = !DILocation(line: 2571, column: 41, scope: !10113)
!10116 = !DILocation(line: 2571, column: 9, scope: !1243)
!10117 = !DILocation(line: 2572, column: 9, scope: !10113)
!10118 = !DILocation(line: 2573, column: 41, scope: !1243)
!10119 = !DILocation(line: 2573, column: 47, scope: !1243)
!10120 = !DILocation(line: 2573, column: 12, scope: !1243)
!10121 = !DILocation(line: 2573, column: 5, scope: !1243)
!10122 = !DILocation(line: 2574, column: 1, scope: !1243)
!10123 = !DILocation(line: 2577, column: 29, scope: !1256)
!10124 = !DILocation(line: 2577, column: 45, scope: !1256)
!10125 = !DILocation(line: 2579, column: 5, scope: !1256)
!10126 = !DILocation(line: 2579, column: 15, scope: !1256)
!10127 = !DILocation(line: 2580, column: 5, scope: !1256)
!10128 = !DILocation(line: 2580, column: 9, scope: !1256)
!10129 = !DILocation(line: 2581, column: 9, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2581, column: 9)
!10131 = !DILocation(line: 2581, column: 15, scope: !10130)
!10132 = !DILocation(line: 2581, column: 18, scope: !10130)
!10133 = !DILocation(line: 2581, column: 9, scope: !1256)
!10134 = !DILocation(line: 2581, column: 30, scope: !10135)
!10135 = !DILexicalBlockFile(scope: !10136, file: !13, discriminator: 1)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !13, line: 2581, column: 30)
!10137 = distinct !DILexicalBlock(scope: !10130, file: !13, line: 2581, column: 24)
!10138 = !DILocation(line: 2581, column: 36, scope: !10136)
!10139 = !DILocation(line: 2581, column: 30, scope: !10136)
!10140 = !DILocation(line: 2581, column: 30, scope: !10137)
!10141 = !DILocation(line: 2581, column: 64, scope: !10142)
!10142 = !DILexicalBlockFile(scope: !10143, file: !13, discriminator: 2)
!10143 = distinct !DILexicalBlock(scope: !10136, file: !13, line: 2581, column: 46)
!10144 = !DILocation(line: 2581, column: 48, scope: !10143)
!10145 = !DILocation(line: 2581, column: 122, scope: !10143)
!10146 = !DILocation(line: 2581, column: 147, scope: !10147)
!10147 = !DILexicalBlockFile(scope: !10148, file: !13, discriminator: 3)
!10148 = distinct !DILexicalBlock(scope: !10136, file: !13, line: 2581, column: 129)
!10149 = !DILocation(line: 2581, column: 131, scope: !10148)
!10150 = !DILocation(line: 2581, column: 209, scope: !10151)
!10151 = !DILexicalBlockFile(scope: !10137, file: !13, discriminator: 4)
!10152 = !DILocation(line: 2581, column: 209, scope: !10137)
!10153 = !DILocation(line: 2583, column: 36, scope: !1256)
!10154 = !DILocation(line: 2583, column: 11, scope: !1256)
!10155 = !DILocation(line: 2583, column: 9, scope: !1256)
!10156 = !DILocation(line: 2584, column: 9, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2584, column: 9)
!10158 = !DILocation(line: 2584, column: 13, scope: !10157)
!10159 = !DILocation(line: 2584, column: 9, scope: !1256)
!10160 = !DILocation(line: 2585, column: 9, scope: !10157)
!10161 = !DILocation(line: 2586, column: 25, scope: !1256)
!10162 = !DILocation(line: 2586, column: 9, scope: !1256)
!10163 = !DILocation(line: 2586, column: 7, scope: !1256)
!10164 = !DILocation(line: 2587, column: 5, scope: !1256)
!10165 = !DILocation(line: 2587, column: 10, scope: !10166)
!10166 = !DILexicalBlockFile(scope: !1263, file: !13, discriminator: 1)
!10167 = !DILocation(line: 2587, column: 20, scope: !1263)
!10168 = !DILocation(line: 2587, column: 50, scope: !1263)
!10169 = !DILocation(line: 2587, column: 64, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !1263, file: !13, line: 2587, column: 61)
!10171 = !DILocation(line: 2587, column: 81, scope: !10170)
!10172 = !DILocation(line: 2587, column: 61, scope: !10170)
!10173 = !DILocation(line: 2587, column: 91, scope: !10170)
!10174 = !DILocation(line: 2587, column: 61, scope: !1263)
!10175 = !DILocation(line: 2587, column: 61, scope: !10176)
!10176 = !DILexicalBlockFile(scope: !1263, file: !13, discriminator: 2)
!10177 = !DILocation(line: 2587, column: 122, scope: !10178)
!10178 = !DILexicalBlockFile(scope: !10170, file: !13, discriminator: 3)
!10179 = !DILocation(line: 2587, column: 140, scope: !10170)
!10180 = !DILocation(line: 2587, column: 150, scope: !10170)
!10181 = !DILocation(line: 2587, column: 175, scope: !10170)
!10182 = !DILocation(line: 2587, column: 106, scope: !10170)
!10183 = !DILocation(line: 2587, column: 194, scope: !10184)
!10184 = !DILexicalBlockFile(scope: !1256, file: !13, discriminator: 4)
!10185 = !DILocation(line: 2587, column: 194, scope: !1263)
!10186 = !DILocation(line: 2587, column: 194, scope: !10187)
!10187 = !DILexicalBlockFile(scope: !1263, file: !13, discriminator: 5)
!10188 = !DILocation(line: 2588, column: 9, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !1256, file: !13, line: 2588, column: 9)
!10190 = !DILocation(line: 2588, column: 11, scope: !10189)
!10191 = !DILocation(line: 2588, column: 9, scope: !1256)
!10192 = !DILocation(line: 2589, column: 9, scope: !10189)
!10193 = !DILocation(line: 2591, column: 9, scope: !1266)
!10194 = !DILocation(line: 2591, column: 11, scope: !1266)
!10195 = !DILocation(line: 2591, column: 9, scope: !1256)
!10196 = !DILocation(line: 2592, column: 62, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !1266, file: !13, line: 2591, column: 16)
!10198 = !DILocation(line: 2592, column: 9, scope: !10197)
!10199 = !DILocation(line: 2595, column: 9, scope: !1265)
!10200 = !DILocation(line: 2595, column: 19, scope: !1265)
!10201 = !DILocation(line: 2595, column: 38, scope: !1265)
!10202 = !DILocation(line: 2595, column: 44, scope: !1265)
!10203 = !DILocation(line: 2596, column: 13, scope: !1273)
!10204 = !DILocation(line: 2596, column: 19, scope: !1273)
!10205 = !DILocation(line: 2596, column: 13, scope: !1265)
!10206 = !DILocation(line: 2597, column: 48, scope: !1272)
!10207 = !DILocation(line: 2597, column: 54, scope: !1272)
!10208 = !DILocation(line: 2597, column: 88, scope: !1272)
!10209 = !DILocation(line: 2597, column: 19, scope: !1272)
!10210 = !DILocation(line: 2597, column: 17, scope: !1272)
!10211 = !DILocation(line: 2598, column: 17, scope: !1271)
!10212 = !DILocation(line: 2598, column: 17, scope: !1272)
!10213 = !DILocation(line: 2599, column: 17, scope: !1271)
!10214 = !DILocation(line: 2599, column: 22, scope: !10215)
!10215 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 1)
!10216 = !DILocation(line: 2599, column: 32, scope: !1270)
!10217 = !DILocation(line: 2599, column: 62, scope: !1270)
!10218 = !DILocation(line: 2599, column: 76, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !1270, file: !13, line: 2599, column: 73)
!10220 = !DILocation(line: 2599, column: 93, scope: !10219)
!10221 = !DILocation(line: 2599, column: 73, scope: !10219)
!10222 = !DILocation(line: 2599, column: 103, scope: !10219)
!10223 = !DILocation(line: 2599, column: 73, scope: !1270)
!10224 = !DILocation(line: 2599, column: 73, scope: !10225)
!10225 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 2)
!10226 = !DILocation(line: 2599, column: 134, scope: !10227)
!10227 = !DILexicalBlockFile(scope: !10219, file: !13, discriminator: 3)
!10228 = !DILocation(line: 2599, column: 152, scope: !10219)
!10229 = !DILocation(line: 2599, column: 162, scope: !10219)
!10230 = !DILocation(line: 2599, column: 187, scope: !10219)
!10231 = !DILocation(line: 2599, column: 118, scope: !10219)
!10232 = !DILocation(line: 2599, column: 206, scope: !10233)
!10233 = !DILexicalBlockFile(scope: !1271, file: !13, discriminator: 4)
!10234 = !DILocation(line: 2599, column: 206, scope: !1270)
!10235 = !DILocation(line: 2599, column: 206, scope: !10236)
!10236 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 5)
!10237 = !DILocation(line: 2599, column: 206, scope: !10238)
!10238 = !DILexicalBlockFile(scope: !1270, file: !13, discriminator: 6)
!10239 = !DILocation(line: 2601, column: 17, scope: !1271)
!10240 = !DILocation(line: 2602, column: 9, scope: !1272)
!10241 = !DILocation(line: 2603, column: 56, scope: !1265)
!10242 = !DILocation(line: 2603, column: 44, scope: !1265)
!10243 = !DILocation(line: 2603, column: 15, scope: !1265)
!10244 = !DILocation(line: 2603, column: 13, scope: !1265)
!10245 = !DILocation(line: 2604, column: 13, scope: !1276)
!10246 = !DILocation(line: 2604, column: 17, scope: !1276)
!10247 = !DILocation(line: 2604, column: 13, scope: !1265)
!10248 = !DILocation(line: 2605, column: 13, scope: !1276)
!10249 = !DILocation(line: 2607, column: 13, scope: !1276)
!10250 = !DILocation(line: 2607, column: 18, scope: !10251)
!10251 = !DILexicalBlockFile(scope: !1275, file: !13, discriminator: 1)
!10252 = !DILocation(line: 2607, column: 28, scope: !1275)
!10253 = !DILocation(line: 2607, column: 58, scope: !1275)
!10254 = !DILocation(line: 2607, column: 72, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !1275, file: !13, line: 2607, column: 69)
!10256 = !DILocation(line: 2607, column: 89, scope: !10255)
!10257 = !DILocation(line: 2607, column: 69, scope: !10255)
!10258 = !DILocation(line: 2607, column: 99, scope: !10255)
!10259 = !DILocation(line: 2607, column: 69, scope: !1275)
!10260 = !DILocation(line: 2607, column: 69, scope: !10261)
!10261 = !DILexicalBlockFile(scope: !1275, file: !13, discriminator: 2)
!10262 = !DILocation(line: 2607, column: 130, scope: !10263)
!10263 = !DILexicalBlockFile(scope: !10255, file: !13, discriminator: 3)
!10264 = !DILocation(line: 2607, column: 148, scope: !10255)
!10265 = !DILocation(line: 2607, column: 158, scope: !10255)
!10266 = !DILocation(line: 2607, column: 183, scope: !10255)
!10267 = !DILocation(line: 2607, column: 114, scope: !10255)
!10268 = !DILocation(line: 2607, column: 202, scope: !10269)
!10269 = !DILexicalBlockFile(scope: !1276, file: !13, discriminator: 4)
!10270 = !DILocation(line: 2607, column: 202, scope: !1275)
!10271 = !DILocation(line: 2607, column: 202, scope: !10272)
!10272 = !DILexicalBlockFile(scope: !1275, file: !13, discriminator: 5)
!10273 = !DILocation(line: 2609, column: 44, scope: !1265)
!10274 = !DILocation(line: 2609, column: 50, scope: !1265)
!10275 = !DILocation(line: 2609, column: 15, scope: !1265)
!10276 = !DILocation(line: 2609, column: 13, scope: !1265)
!10277 = !DILocation(line: 2610, column: 13, scope: !1282)
!10278 = !DILocation(line: 2610, column: 17, scope: !1282)
!10279 = !DILocation(line: 2610, column: 13, scope: !1265)
!10280 = !DILocation(line: 2611, column: 17, scope: !1280)
!10281 = !DILocation(line: 2611, column: 21, scope: !1280)
!10282 = !DILocation(line: 2611, column: 17, scope: !1281)
!10283 = !DILocation(line: 2612, column: 17, scope: !1279)
!10284 = !DILocation(line: 2612, column: 22, scope: !10285)
!10285 = !DILexicalBlockFile(scope: !1278, file: !13, discriminator: 1)
!10286 = !DILocation(line: 2612, column: 32, scope: !1278)
!10287 = !DILocation(line: 2612, column: 55, scope: !1278)
!10288 = !DILocation(line: 2612, column: 65, scope: !1286)
!10289 = !DILocation(line: 2612, column: 73, scope: !1286)
!10290 = !DILocation(line: 2612, column: 65, scope: !1278)
!10291 = !DILocation(line: 2612, column: 96, scope: !10292)
!10292 = !DILexicalBlockFile(scope: !1285, file: !13, discriminator: 2)
!10293 = !DILocation(line: 2612, column: 110, scope: !1285)
!10294 = !DILocation(line: 2612, column: 115, scope: !10295)
!10295 = !DILexicalBlockFile(scope: !1284, file: !13, discriminator: 4)
!10296 = !DILocation(line: 2612, column: 125, scope: !1284)
!10297 = !DILocation(line: 2612, column: 155, scope: !1284)
!10298 = !DILocation(line: 2612, column: 173, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !1284, file: !13, line: 2612, column: 170)
!10300 = !DILocation(line: 2612, column: 190, scope: !10299)
!10301 = !DILocation(line: 2612, column: 170, scope: !10299)
!10302 = !DILocation(line: 2612, column: 200, scope: !10299)
!10303 = !DILocation(line: 2612, column: 170, scope: !1284)
!10304 = !DILocation(line: 2612, column: 170, scope: !10305)
!10305 = !DILexicalBlockFile(scope: !1284, file: !13, discriminator: 5)
!10306 = !DILocation(line: 2612, column: 231, scope: !10307)
!10307 = !DILexicalBlockFile(scope: !10299, file: !13, discriminator: 6)
!10308 = !DILocation(line: 2612, column: 249, scope: !10299)
!10309 = !DILocation(line: 2612, column: 259, scope: !10299)
!10310 = !DILocation(line: 2612, column: 284, scope: !10299)
!10311 = !DILocation(line: 2612, column: 215, scope: !10299)
!10312 = !DILocation(line: 2612, column: 303, scope: !10313)
!10313 = !DILexicalBlockFile(scope: !1285, file: !13, discriminator: 7)
!10314 = !DILocation(line: 2612, column: 303, scope: !1284)
!10315 = !DILocation(line: 2612, column: 303, scope: !10316)
!10316 = !DILexicalBlockFile(scope: !1284, file: !13, discriminator: 8)
!10317 = !DILocation(line: 2612, column: 316, scope: !10318)
!10318 = !DILexicalBlockFile(scope: !1285, file: !13, discriminator: 9)
!10319 = !DILocation(line: 2612, column: 318, scope: !10320)
!10320 = !DILexicalBlockFile(scope: !10321, file: !13, discriminator: 10)
!10321 = !DILexicalBlockFile(scope: !1279, file: !13, discriminator: 3)
!10322 = !DILocation(line: 2612, column: 318, scope: !1278)
!10323 = !DILocation(line: 2612, column: 318, scope: !10324)
!10324 = !DILexicalBlockFile(scope: !1278, file: !13, discriminator: 11)
!10325 = !DILocation(line: 2613, column: 31, scope: !1279)
!10326 = !DILocation(line: 2613, column: 36, scope: !1279)
!10327 = !DILocation(line: 2613, column: 41, scope: !1279)
!10328 = !DILocation(line: 2613, column: 17, scope: !1279)
!10329 = !DILocation(line: 2614, column: 13, scope: !1279)
!10330 = !DILocation(line: 2616, column: 17, scope: !1288)
!10331 = !DILocation(line: 2616, column: 27, scope: !1288)
!10332 = !DILocation(line: 2617, column: 17, scope: !1288)
!10333 = !DILocation(line: 2617, column: 22, scope: !10334)
!10334 = !DILexicalBlockFile(scope: !1290, file: !13, discriminator: 1)
!10335 = !DILocation(line: 2617, column: 32, scope: !1290)
!10336 = !DILocation(line: 2617, column: 62, scope: !1290)
!10337 = !DILocation(line: 2617, column: 76, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !1290, file: !13, line: 2617, column: 73)
!10339 = !DILocation(line: 2617, column: 93, scope: !10338)
!10340 = !DILocation(line: 2617, column: 73, scope: !10338)
!10341 = !DILocation(line: 2617, column: 103, scope: !10338)
!10342 = !DILocation(line: 2617, column: 73, scope: !1290)
!10343 = !DILocation(line: 2617, column: 73, scope: !10344)
!10344 = !DILexicalBlockFile(scope: !1290, file: !13, discriminator: 2)
!10345 = !DILocation(line: 2617, column: 134, scope: !10346)
!10346 = !DILexicalBlockFile(scope: !10338, file: !13, discriminator: 3)
!10347 = !DILocation(line: 2617, column: 152, scope: !10338)
!10348 = !DILocation(line: 2617, column: 162, scope: !10338)
!10349 = !DILocation(line: 2617, column: 187, scope: !10338)
!10350 = !DILocation(line: 2617, column: 118, scope: !10338)
!10351 = !DILocation(line: 2617, column: 206, scope: !10352)
!10352 = !DILexicalBlockFile(scope: !1288, file: !13, discriminator: 4)
!10353 = !DILocation(line: 2617, column: 206, scope: !1290)
!10354 = !DILocation(line: 2617, column: 206, scope: !10355)
!10355 = !DILexicalBlockFile(scope: !1290, file: !13, discriminator: 5)
!10356 = !DILocation(line: 2618, column: 17, scope: !1288)
!10357 = !DILocation(line: 2618, column: 22, scope: !10358)
!10358 = !DILexicalBlockFile(scope: !1292, file: !13, discriminator: 1)
!10359 = !DILocation(line: 2618, column: 32, scope: !1292)
!10360 = !DILocation(line: 2618, column: 63, scope: !1292)
!10361 = !DILocation(line: 2618, column: 72, scope: !1295)
!10362 = !DILocation(line: 2618, column: 88, scope: !1295)
!10363 = !DILocation(line: 2618, column: 72, scope: !1292)
!10364 = !DILocation(line: 2618, column: 103, scope: !10365)
!10365 = !DILexicalBlockFile(scope: !1295, file: !13, discriminator: 2)
!10366 = !DILocation(line: 2618, column: 108, scope: !10367)
!10367 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 4)
!10368 = !DILocation(line: 2618, column: 118, scope: !1294)
!10369 = !DILocation(line: 2618, column: 148, scope: !1294)
!10370 = !DILocation(line: 2618, column: 174, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !1294, file: !13, line: 2618, column: 171)
!10372 = !DILocation(line: 2618, column: 191, scope: !10371)
!10373 = !DILocation(line: 2618, column: 171, scope: !10371)
!10374 = !DILocation(line: 2618, column: 201, scope: !10371)
!10375 = !DILocation(line: 2618, column: 171, scope: !1294)
!10376 = !DILocation(line: 2618, column: 171, scope: !10377)
!10377 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 5)
!10378 = !DILocation(line: 2618, column: 232, scope: !10379)
!10379 = !DILexicalBlockFile(scope: !10371, file: !13, discriminator: 6)
!10380 = !DILocation(line: 2618, column: 250, scope: !10371)
!10381 = !DILocation(line: 2618, column: 260, scope: !10371)
!10382 = !DILocation(line: 2618, column: 285, scope: !10371)
!10383 = !DILocation(line: 2618, column: 216, scope: !10371)
!10384 = !DILocation(line: 2618, column: 304, scope: !10385)
!10385 = !DILexicalBlockFile(scope: !1295, file: !13, discriminator: 7)
!10386 = !DILocation(line: 2618, column: 304, scope: !1294)
!10387 = !DILocation(line: 2618, column: 304, scope: !10388)
!10388 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 8)
!10389 = !DILocation(line: 2618, column: 304, scope: !10390)
!10390 = !DILexicalBlockFile(scope: !1294, file: !13, discriminator: 9)
!10391 = !DILocation(line: 2618, column: 317, scope: !10392)
!10392 = !DILexicalBlockFile(scope: !10393, file: !13, discriminator: 10)
!10393 = !DILexicalBlockFile(scope: !1288, file: !13, discriminator: 3)
!10394 = !DILocation(line: 2618, column: 317, scope: !1292)
!10395 = !DILocation(line: 2618, column: 317, scope: !10396)
!10396 = !DILexicalBlockFile(scope: !1292, file: !13, discriminator: 11)
!10397 = !DILocation(line: 2619, column: 17, scope: !1288)
!10398 = !DILocation(line: 2620, column: 17, scope: !1288)
!10399 = !DILocation(line: 2621, column: 40, scope: !1288)
!10400 = !DILocation(line: 2621, column: 46, scope: !1288)
!10401 = !DILocation(line: 2621, column: 17, scope: !1288)
!10402 = !DILocation(line: 2622, column: 31, scope: !1288)
!10403 = !DILocation(line: 2622, column: 36, scope: !1288)
!10404 = !DILocation(line: 2622, column: 42, scope: !1288)
!10405 = !DILocation(line: 2622, column: 17, scope: !1288)
!10406 = !DILocation(line: 2623, column: 13, scope: !1280)
!10407 = !DILocation(line: 2624, column: 9, scope: !1281)
!10408 = !DILocation(line: 2625, column: 16, scope: !1265)
!10409 = !DILocation(line: 2625, column: 9, scope: !1265)
!10410 = !DILocation(line: 2626, column: 5, scope: !1266)
!10411 = !DILocation(line: 2627, column: 1, scope: !1256)
!10412 = !DILocation(line: 2523, column: 30, scope: !1296)
!10413 = !DILocation(line: 2523, column: 46, scope: !1296)
!10414 = !DILocation(line: 2525, column: 9, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !1296, file: !13, line: 2525, column: 9)
!10416 = !DILocation(line: 2525, column: 15, scope: !10415)
!10417 = !DILocation(line: 2525, column: 18, scope: !10415)
!10418 = !DILocation(line: 2525, column: 9, scope: !1296)
!10419 = !DILocation(line: 2525, column: 30, scope: !10420)
!10420 = !DILexicalBlockFile(scope: !10421, file: !13, discriminator: 1)
!10421 = distinct !DILexicalBlock(scope: !10422, file: !13, line: 2525, column: 30)
!10422 = distinct !DILexicalBlock(scope: !10415, file: !13, line: 2525, column: 24)
!10423 = !DILocation(line: 2525, column: 36, scope: !10421)
!10424 = !DILocation(line: 2525, column: 30, scope: !10421)
!10425 = !DILocation(line: 2525, column: 30, scope: !10422)
!10426 = !DILocation(line: 2525, column: 64, scope: !10427)
!10427 = !DILexicalBlockFile(scope: !10428, file: !13, discriminator: 2)
!10428 = distinct !DILexicalBlock(scope: !10421, file: !13, line: 2525, column: 46)
!10429 = !DILocation(line: 2525, column: 48, scope: !10428)
!10430 = !DILocation(line: 2525, column: 122, scope: !10428)
!10431 = !DILocation(line: 2525, column: 147, scope: !10432)
!10432 = !DILexicalBlockFile(scope: !10433, file: !13, discriminator: 3)
!10433 = distinct !DILexicalBlock(scope: !10421, file: !13, line: 2525, column: 129)
!10434 = !DILocation(line: 2525, column: 131, scope: !10433)
!10435 = !DILocation(line: 2525, column: 209, scope: !10436)
!10436 = !DILexicalBlockFile(scope: !10422, file: !13, discriminator: 4)
!10437 = !DILocation(line: 2526, column: 41, scope: !1296)
!10438 = !DILocation(line: 2526, column: 47, scope: !1296)
!10439 = !DILocation(line: 2526, column: 12, scope: !1296)
!10440 = !DILocation(line: 2526, column: 5, scope: !1296)
!10441 = !DILocation(line: 2527, column: 1, scope: !1296)
!10442 = !DILocation(line: 2530, column: 32, scope: !1300)
!10443 = !DILocation(line: 2530, column: 48, scope: !1300)
!10444 = !DILocation(line: 2532, column: 9, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !1300, file: !13, line: 2532, column: 9)
!10446 = !DILocation(line: 2532, column: 15, scope: !10445)
!10447 = !DILocation(line: 2532, column: 18, scope: !10445)
!10448 = !DILocation(line: 2532, column: 9, scope: !1300)
!10449 = !DILocation(line: 2532, column: 30, scope: !10450)
!10450 = !DILexicalBlockFile(scope: !10451, file: !13, discriminator: 1)
!10451 = distinct !DILexicalBlock(scope: !10452, file: !13, line: 2532, column: 30)
!10452 = distinct !DILexicalBlock(scope: !10445, file: !13, line: 2532, column: 24)
!10453 = !DILocation(line: 2532, column: 36, scope: !10451)
!10454 = !DILocation(line: 2532, column: 30, scope: !10451)
!10455 = !DILocation(line: 2532, column: 30, scope: !10452)
!10456 = !DILocation(line: 2532, column: 64, scope: !10457)
!10457 = !DILexicalBlockFile(scope: !10458, file: !13, discriminator: 2)
!10458 = distinct !DILexicalBlock(scope: !10451, file: !13, line: 2532, column: 46)
!10459 = !DILocation(line: 2532, column: 48, scope: !10458)
!10460 = !DILocation(line: 2532, column: 122, scope: !10458)
!10461 = !DILocation(line: 2532, column: 147, scope: !10462)
!10462 = !DILexicalBlockFile(scope: !10463, file: !13, discriminator: 3)
!10463 = distinct !DILexicalBlock(scope: !10451, file: !13, line: 2532, column: 129)
!10464 = !DILocation(line: 2532, column: 131, scope: !10463)
!10465 = !DILocation(line: 2532, column: 209, scope: !10466)
!10466 = !DILexicalBlockFile(scope: !10452, file: !13, discriminator: 4)
!10467 = !DILocation(line: 2533, column: 41, scope: !1300)
!10468 = !DILocation(line: 2533, column: 47, scope: !1300)
!10469 = !DILocation(line: 2533, column: 12, scope: !1300)
!10470 = !DILocation(line: 2533, column: 5, scope: !1300)
!10471 = !DILocation(line: 2534, column: 1, scope: !1300)
!10472 = !DILocation(line: 2537, column: 32, scope: !1304)
!10473 = !DILocation(line: 2537, column: 48, scope: !1304)
!10474 = !DILocation(line: 2539, column: 9, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !1304, file: !13, line: 2539, column: 9)
!10476 = !DILocation(line: 2539, column: 15, scope: !10475)
!10477 = !DILocation(line: 2539, column: 18, scope: !10475)
!10478 = !DILocation(line: 2539, column: 9, scope: !1304)
!10479 = !DILocation(line: 2539, column: 30, scope: !10480)
!10480 = !DILexicalBlockFile(scope: !10481, file: !13, discriminator: 1)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !13, line: 2539, column: 30)
!10482 = distinct !DILexicalBlock(scope: !10475, file: !13, line: 2539, column: 24)
!10483 = !DILocation(line: 2539, column: 36, scope: !10481)
!10484 = !DILocation(line: 2539, column: 30, scope: !10481)
!10485 = !DILocation(line: 2539, column: 30, scope: !10482)
!10486 = !DILocation(line: 2539, column: 64, scope: !10487)
!10487 = !DILexicalBlockFile(scope: !10488, file: !13, discriminator: 2)
!10488 = distinct !DILexicalBlock(scope: !10481, file: !13, line: 2539, column: 46)
!10489 = !DILocation(line: 2539, column: 48, scope: !10488)
!10490 = !DILocation(line: 2539, column: 122, scope: !10488)
!10491 = !DILocation(line: 2539, column: 147, scope: !10492)
!10492 = !DILexicalBlockFile(scope: !10493, file: !13, discriminator: 3)
!10493 = distinct !DILexicalBlock(scope: !10481, file: !13, line: 2539, column: 129)
!10494 = !DILocation(line: 2539, column: 131, scope: !10493)
!10495 = !DILocation(line: 2539, column: 209, scope: !10496)
!10496 = !DILexicalBlockFile(scope: !10482, file: !13, discriminator: 4)
!10497 = !DILocation(line: 2540, column: 41, scope: !1304)
!10498 = !DILocation(line: 2540, column: 47, scope: !1304)
!10499 = !DILocation(line: 2540, column: 12, scope: !1304)
!10500 = !DILocation(line: 2540, column: 5, scope: !1304)
!10501 = !DILocation(line: 2541, column: 1, scope: !1304)
!10502 = !DILocation(line: 2544, column: 32, scope: !1308)
!10503 = !DILocation(line: 2544, column: 48, scope: !1308)
!10504 = !DILocation(line: 2546, column: 9, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !1308, file: !13, line: 2546, column: 9)
!10506 = !DILocation(line: 2546, column: 15, scope: !10505)
!10507 = !DILocation(line: 2546, column: 18, scope: !10505)
!10508 = !DILocation(line: 2546, column: 9, scope: !1308)
!10509 = !DILocation(line: 2546, column: 30, scope: !10510)
!10510 = !DILexicalBlockFile(scope: !10511, file: !13, discriminator: 1)
!10511 = distinct !DILexicalBlock(scope: !10512, file: !13, line: 2546, column: 30)
!10512 = distinct !DILexicalBlock(scope: !10505, file: !13, line: 2546, column: 24)
!10513 = !DILocation(line: 2546, column: 36, scope: !10511)
!10514 = !DILocation(line: 2546, column: 30, scope: !10511)
!10515 = !DILocation(line: 2546, column: 30, scope: !10512)
!10516 = !DILocation(line: 2546, column: 64, scope: !10517)
!10517 = !DILexicalBlockFile(scope: !10518, file: !13, discriminator: 2)
!10518 = distinct !DILexicalBlock(scope: !10511, file: !13, line: 2546, column: 46)
!10519 = !DILocation(line: 2546, column: 48, scope: !10518)
!10520 = !DILocation(line: 2546, column: 122, scope: !10518)
!10521 = !DILocation(line: 2546, column: 147, scope: !10522)
!10522 = !DILexicalBlockFile(scope: !10523, file: !13, discriminator: 3)
!10523 = distinct !DILexicalBlock(scope: !10511, file: !13, line: 2546, column: 129)
!10524 = !DILocation(line: 2546, column: 131, scope: !10523)
!10525 = !DILocation(line: 2546, column: 209, scope: !10526)
!10526 = !DILexicalBlockFile(scope: !10512, file: !13, discriminator: 4)
!10527 = !DILocation(line: 2547, column: 41, scope: !1308)
!10528 = !DILocation(line: 2547, column: 47, scope: !1308)
!10529 = !DILocation(line: 2547, column: 12, scope: !1308)
!10530 = !DILocation(line: 2547, column: 5, scope: !1308)
!10531 = !DILocation(line: 2548, column: 1, scope: !1308)
!10532 = !DILocation(line: 2551, column: 30, scope: !1312)
!10533 = !DILocation(line: 2551, column: 46, scope: !1312)
!10534 = !DILocation(line: 2553, column: 9, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !1312, file: !13, line: 2553, column: 9)
!10536 = !DILocation(line: 2553, column: 15, scope: !10535)
!10537 = !DILocation(line: 2553, column: 18, scope: !10535)
!10538 = !DILocation(line: 2553, column: 9, scope: !1312)
!10539 = !DILocation(line: 2553, column: 30, scope: !10540)
!10540 = !DILexicalBlockFile(scope: !10541, file: !13, discriminator: 1)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !13, line: 2553, column: 30)
!10542 = distinct !DILexicalBlock(scope: !10535, file: !13, line: 2553, column: 24)
!10543 = !DILocation(line: 2553, column: 36, scope: !10541)
!10544 = !DILocation(line: 2553, column: 30, scope: !10541)
!10545 = !DILocation(line: 2553, column: 30, scope: !10542)
!10546 = !DILocation(line: 2553, column: 64, scope: !10547)
!10547 = !DILexicalBlockFile(scope: !10548, file: !13, discriminator: 2)
!10548 = distinct !DILexicalBlock(scope: !10541, file: !13, line: 2553, column: 46)
!10549 = !DILocation(line: 2553, column: 48, scope: !10548)
!10550 = !DILocation(line: 2553, column: 122, scope: !10548)
!10551 = !DILocation(line: 2553, column: 147, scope: !10552)
!10552 = !DILexicalBlockFile(scope: !10553, file: !13, discriminator: 3)
!10553 = distinct !DILexicalBlock(scope: !10541, file: !13, line: 2553, column: 129)
!10554 = !DILocation(line: 2553, column: 131, scope: !10553)
!10555 = !DILocation(line: 2553, column: 209, scope: !10556)
!10556 = !DILexicalBlockFile(scope: !10542, file: !13, discriminator: 4)
!10557 = !DILocation(line: 2554, column: 41, scope: !1312)
!10558 = !DILocation(line: 2554, column: 47, scope: !1312)
!10559 = !DILocation(line: 2554, column: 12, scope: !1312)
!10560 = !DILocation(line: 2554, column: 5, scope: !1312)
!10561 = !DILocation(line: 2555, column: 1, scope: !1312)
!10562 = !DILocation(line: 2558, column: 32, scope: !1316)
!10563 = !DILocation(line: 2558, column: 48, scope: !1316)
!10564 = !DILocation(line: 2560, column: 18, scope: !1316)
!10565 = !DILocation(line: 2561, column: 64, scope: !1316)
!10566 = !DILocation(line: 2561, column: 52, scope: !1316)
!10567 = !DILocation(line: 2561, column: 72, scope: !1316)
!10568 = !DILocation(line: 2561, column: 82, scope: !1316)
!10569 = !DILocation(line: 2560, column: 5, scope: !1316)
!10570 = !DILocation(line: 2562, column: 5, scope: !1316)
!10571 = !DILocation(line: 2064, column: 28, scope: !1320)
!10572 = !DILocation(line: 2064, column: 44, scope: !1320)
!10573 = !DILocation(line: 2066, column: 5, scope: !1320)
!10574 = !DILocation(line: 2066, column: 15, scope: !1320)
!10575 = !DILocation(line: 2066, column: 27, scope: !1320)
!10576 = !DILocation(line: 2067, column: 5, scope: !1320)
!10577 = !DILocation(line: 2067, column: 17, scope: !1320)
!10578 = !DILocation(line: 2068, column: 5, scope: !1320)
!10579 = !DILocation(line: 2068, column: 9, scope: !1320)
!10580 = !DILocation(line: 2069, column: 5, scope: !1320)
!10581 = !DILocation(line: 2069, column: 15, scope: !1320)
!10582 = !DILocation(line: 2070, column: 5, scope: !1320)
!10583 = !DILocation(line: 2070, column: 9, scope: !1320)
!10584 = !DILocation(line: 2072, column: 9, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2072, column: 9)
!10586 = !DILocation(line: 2072, column: 15, scope: !10585)
!10587 = !DILocation(line: 2072, column: 18, scope: !10585)
!10588 = !DILocation(line: 2072, column: 9, scope: !1320)
!10589 = !DILocation(line: 2072, column: 30, scope: !10590)
!10590 = !DILexicalBlockFile(scope: !10591, file: !13, discriminator: 1)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !13, line: 2072, column: 30)
!10592 = distinct !DILexicalBlock(scope: !10585, file: !13, line: 2072, column: 24)
!10593 = !DILocation(line: 2072, column: 36, scope: !10591)
!10594 = !DILocation(line: 2072, column: 30, scope: !10591)
!10595 = !DILocation(line: 2072, column: 30, scope: !10592)
!10596 = !DILocation(line: 2072, column: 64, scope: !10597)
!10597 = !DILexicalBlockFile(scope: !10598, file: !13, discriminator: 2)
!10598 = distinct !DILexicalBlock(scope: !10591, file: !13, line: 2072, column: 46)
!10599 = !DILocation(line: 2072, column: 48, scope: !10598)
!10600 = !DILocation(line: 2072, column: 122, scope: !10598)
!10601 = !DILocation(line: 2072, column: 147, scope: !10602)
!10602 = !DILexicalBlockFile(scope: !10603, file: !13, discriminator: 3)
!10603 = distinct !DILexicalBlock(scope: !10591, file: !13, line: 2072, column: 129)
!10604 = !DILocation(line: 2072, column: 131, scope: !10603)
!10605 = !DILocation(line: 2072, column: 209, scope: !10606)
!10606 = !DILexicalBlockFile(scope: !10592, file: !13, discriminator: 4)
!10607 = !DILocation(line: 2072, column: 209, scope: !10592)
!10608 = !DILocation(line: 2074, column: 34, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2074, column: 9)
!10610 = !DILocation(line: 2074, column: 10, scope: !10609)
!10611 = !DILocation(line: 2074, column: 9, scope: !1320)
!10612 = !DILocation(line: 2075, column: 9, scope: !10609)
!10613 = !DILocation(line: 2076, column: 5, scope: !1320)
!10614 = !DILocation(line: 2076, column: 10, scope: !10615)
!10615 = !DILexicalBlockFile(scope: !1341, file: !13, discriminator: 1)
!10616 = !DILocation(line: 2076, column: 14, scope: !1341)
!10617 = !DILocation(line: 2076, column: 17, scope: !1341)
!10618 = !DILocation(line: 2076, column: 27, scope: !1341)
!10619 = !DILocation(line: 2076, column: 51, scope: !1348)
!10620 = !DILocation(line: 2076, column: 39, scope: !1348)
!10621 = !DILocation(line: 2076, column: 59, scope: !1348)
!10622 = !DILocation(line: 2076, column: 68, scope: !1348)
!10623 = !DILocation(line: 2076, column: 37, scope: !1341)
!10624 = !DILocation(line: 2076, column: 100, scope: !10625)
!10625 = !DILexicalBlockFile(scope: !1346, file: !13, discriminator: 2)
!10626 = !DILocation(line: 2076, column: 106, scope: !1346)
!10627 = !DILocation(line: 2076, column: 110, scope: !1346)
!10628 = !DILocation(line: 2076, column: 100, scope: !1347)
!10629 = !DILocation(line: 2076, column: 146, scope: !10630)
!10630 = !DILexicalBlockFile(scope: !1346, file: !13, discriminator: 4)
!10631 = !DILocation(line: 2076, column: 152, scope: !1346)
!10632 = !DILocation(line: 2076, column: 129, scope: !1346)
!10633 = !DILocation(line: 2076, column: 127, scope: !1346)
!10634 = !DILocation(line: 2076, column: 125, scope: !1346)
!10635 = !DILocation(line: 2076, column: 197, scope: !10636)
!10636 = !DILexicalBlockFile(scope: !1345, file: !13, discriminator: 5)
!10637 = !DILocation(line: 2076, column: 172, scope: !1345)
!10638 = !DILocation(line: 2076, column: 170, scope: !1345)
!10639 = !DILocation(line: 2076, column: 220, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !1345, file: !13, line: 2076, column: 220)
!10641 = !DILocation(line: 2076, column: 225, scope: !10640)
!10642 = !DILocation(line: 2076, column: 220, scope: !1345)
!10643 = !DILocation(line: 2076, column: 240, scope: !10644)
!10644 = !DILexicalBlockFile(scope: !10640, file: !13, discriminator: 7)
!10645 = !DILocation(line: 2076, column: 240, scope: !10640)
!10646 = !DILocation(line: 2076, column: 279, scope: !10647)
!10647 = !DILexicalBlockFile(scope: !1345, file: !13, discriminator: 8)
!10648 = !DILocation(line: 2076, column: 263, scope: !1345)
!10649 = !DILocation(line: 2076, column: 261, scope: !1345)
!10650 = !DILocation(line: 2076, column: 286, scope: !1345)
!10651 = !DILocation(line: 2076, column: 291, scope: !10652)
!10652 = !DILexicalBlockFile(scope: !1344, file: !13, discriminator: 10)
!10653 = !DILocation(line: 2076, column: 301, scope: !1344)
!10654 = !DILocation(line: 2076, column: 331, scope: !1344)
!10655 = !DILocation(line: 2076, column: 346, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !1344, file: !13, line: 2076, column: 343)
!10657 = !DILocation(line: 2076, column: 363, scope: !10656)
!10658 = !DILocation(line: 2076, column: 343, scope: !10656)
!10659 = !DILocation(line: 2076, column: 373, scope: !10656)
!10660 = !DILocation(line: 2076, column: 343, scope: !1344)
!10661 = !DILocation(line: 2076, column: 343, scope: !10662)
!10662 = !DILexicalBlockFile(scope: !1344, file: !13, discriminator: 11)
!10663 = !DILocation(line: 2076, column: 404, scope: !10664)
!10664 = !DILexicalBlockFile(scope: !10656, file: !13, discriminator: 12)
!10665 = !DILocation(line: 2076, column: 422, scope: !10656)
!10666 = !DILocation(line: 2076, column: 432, scope: !10656)
!10667 = !DILocation(line: 2076, column: 457, scope: !10656)
!10668 = !DILocation(line: 2076, column: 388, scope: !10656)
!10669 = !DILocation(line: 2076, column: 476, scope: !10670)
!10670 = !DILexicalBlockFile(scope: !1345, file: !13, discriminator: 13)
!10671 = !DILocation(line: 2076, column: 476, scope: !1344)
!10672 = !DILocation(line: 2076, column: 476, scope: !10673)
!10673 = !DILexicalBlockFile(scope: !1344, file: !13, discriminator: 14)
!10674 = !DILocation(line: 2076, column: 493, scope: !10675)
!10675 = !DILexicalBlockFile(scope: !10676, file: !13, discriminator: 15)
!10676 = distinct !DILexicalBlock(scope: !1345, file: !13, line: 2076, column: 493)
!10677 = !DILocation(line: 2076, column: 495, scope: !10676)
!10678 = !DILocation(line: 2076, column: 493, scope: !1345)
!10679 = !DILocation(line: 2076, column: 500, scope: !10680)
!10680 = !DILexicalBlockFile(scope: !10676, file: !13, discriminator: 16)
!10681 = !DILocation(line: 2076, column: 500, scope: !10676)
!10682 = !DILocation(line: 2076, column: 525, scope: !10683)
!10683 = !DILexicalBlockFile(scope: !10684, file: !13, discriminator: 6)
!10684 = distinct !DILexicalBlock(scope: !1347, file: !13, line: 2076, column: 525)
!10685 = !DILocation(line: 2076, column: 527, scope: !10684)
!10686 = !DILocation(line: 2076, column: 525, scope: !1347)
!10687 = !DILocation(line: 2076, column: 550, scope: !10688)
!10688 = !DILexicalBlockFile(scope: !10689, file: !13, discriminator: 18)
!10689 = distinct !DILexicalBlock(scope: !10684, file: !13, line: 2076, column: 532)
!10690 = !DILocation(line: 2076, column: 534, scope: !10689)
!10691 = !DILocation(line: 2076, column: 602, scope: !10689)
!10692 = !DILocation(line: 2076, column: 623, scope: !10693)
!10693 = !DILexicalBlockFile(scope: !1347, file: !13, discriminator: 19)
!10694 = !DILocation(line: 2076, column: 669, scope: !10695)
!10695 = !DILexicalBlockFile(scope: !10696, file: !13, discriminator: 3)
!10696 = distinct !DILexicalBlock(scope: !1348, file: !13, line: 2076, column: 634)
!10697 = !DILocation(line: 2076, column: 657, scope: !10696)
!10698 = !DILocation(line: 2076, column: 634, scope: !10696)
!10699 = !DILocation(line: 2076, column: 707, scope: !10696)
!10700 = !DILocation(line: 2076, column: 634, scope: !1348)
!10701 = !DILocation(line: 2076, column: 722, scope: !10702)
!10702 = !DILexicalBlockFile(scope: !10696, file: !13, discriminator: 22)
!10703 = !DILocation(line: 2076, column: 722, scope: !10696)
!10704 = !DILocation(line: 2076, column: 741, scope: !10705)
!10705 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 21)
!10706 = !DILocation(line: 2076, column: 741, scope: !10707)
!10707 = !DILexicalBlockFile(scope: !10708, file: !13, discriminator: 24)
!10708 = !DILexicalBlockFile(scope: !10709, file: !13, discriminator: 23)
!10709 = !DILexicalBlockFile(scope: !10710, file: !13, discriminator: 20)
!10710 = !DILexicalBlockFile(scope: !10711, file: !13, discriminator: 17)
!10711 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 9)
!10712 = !DILocation(line: 2076, column: 741, scope: !1341)
!10713 = !DILocation(line: 2076, column: 741, scope: !10714)
!10714 = !DILexicalBlockFile(scope: !1341, file: !13, discriminator: 25)
!10715 = !DILocation(line: 2078, column: 21, scope: !1320)
!10716 = !DILocation(line: 2078, column: 34, scope: !1320)
!10717 = !DILocation(line: 2078, column: 43, scope: !1320)
!10718 = !DILocation(line: 2080, column: 10, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2080, column: 9)
!10720 = !DILocation(line: 2080, column: 16, scope: !10719)
!10721 = !DILocation(line: 2080, column: 9, scope: !1320)
!10722 = !DILocation(line: 2081, column: 9, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10719, file: !13, line: 2080, column: 26)
!10724 = !DILocation(line: 2082, column: 9, scope: !10723)
!10725 = !DILocation(line: 2085, column: 9, scope: !1352)
!10726 = !DILocation(line: 2085, column: 16, scope: !1352)
!10727 = !DILocation(line: 2085, column: 9, scope: !1320)
!10728 = !DILocation(line: 2087, column: 40, scope: !1351)
!10729 = !DILocation(line: 2087, column: 51, scope: !1351)
!10730 = !DILocation(line: 2087, column: 15, scope: !1351)
!10731 = !DILocation(line: 2087, column: 13, scope: !1351)
!10732 = !DILocation(line: 2088, column: 13, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2088, column: 13)
!10734 = !DILocation(line: 2088, column: 17, scope: !10733)
!10735 = !DILocation(line: 2088, column: 13, scope: !1351)
!10736 = !DILocation(line: 2089, column: 13, scope: !10733)
!10737 = !DILocation(line: 2091, column: 13, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2091, column: 13)
!10739 = !DILocation(line: 2091, column: 17, scope: !10738)
!10740 = !DILocation(line: 2091, column: 13, scope: !1351)
!10741 = !DILocation(line: 2092, column: 13, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10738, file: !13, line: 2091, column: 23)
!10743 = !DILocation(line: 2093, column: 13, scope: !10742)
!10744 = !DILocation(line: 2099, column: 9, scope: !1351)
!10745 = !DILocation(line: 2099, column: 14, scope: !10746)
!10746 = !DILexicalBlockFile(scope: !1350, file: !13, discriminator: 1)
!10747 = !DILocation(line: 2099, column: 24, scope: !1350)
!10748 = !DILocation(line: 2099, column: 54, scope: !1350)
!10749 = !DILocation(line: 2099, column: 74, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !1350, file: !13, line: 2099, column: 71)
!10751 = !DILocation(line: 2099, column: 91, scope: !10750)
!10752 = !DILocation(line: 2099, column: 71, scope: !10750)
!10753 = !DILocation(line: 2099, column: 101, scope: !10750)
!10754 = !DILocation(line: 2099, column: 71, scope: !1350)
!10755 = !DILocation(line: 2099, column: 71, scope: !10756)
!10756 = !DILexicalBlockFile(scope: !1350, file: !13, discriminator: 2)
!10757 = !DILocation(line: 2099, column: 132, scope: !10758)
!10758 = !DILexicalBlockFile(scope: !10750, file: !13, discriminator: 3)
!10759 = !DILocation(line: 2099, column: 150, scope: !10750)
!10760 = !DILocation(line: 2099, column: 160, scope: !10750)
!10761 = !DILocation(line: 2099, column: 185, scope: !10750)
!10762 = !DILocation(line: 2099, column: 116, scope: !10750)
!10763 = !DILocation(line: 2099, column: 204, scope: !10764)
!10764 = !DILexicalBlockFile(scope: !1351, file: !13, discriminator: 4)
!10765 = !DILocation(line: 2099, column: 204, scope: !1350)
!10766 = !DILocation(line: 2099, column: 204, scope: !10767)
!10767 = !DILexicalBlockFile(scope: !1350, file: !13, discriminator: 5)
!10768 = !DILocation(line: 2100, column: 62, scope: !1351)
!10769 = !DILocation(line: 2100, column: 50, scope: !1351)
!10770 = !DILocation(line: 2100, column: 21, scope: !1351)
!10771 = !DILocation(line: 2100, column: 19, scope: !1351)
!10772 = !DILocation(line: 2101, column: 13, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !1351, file: !13, line: 2101, column: 13)
!10774 = !DILocation(line: 2101, column: 23, scope: !10773)
!10775 = !DILocation(line: 2101, column: 13, scope: !1351)
!10776 = !DILocation(line: 2102, column: 13, scope: !10773)
!10777 = !DILocation(line: 2103, column: 5, scope: !1351)
!10778 = !DILocation(line: 2104, column: 14, scope: !1356)
!10779 = !DILocation(line: 2104, column: 21, scope: !1356)
!10780 = !DILocation(line: 2104, column: 14, scope: !1352)
!10781 = !DILocation(line: 2106, column: 40, scope: !1355)
!10782 = !DILocation(line: 2106, column: 51, scope: !1355)
!10783 = !DILocation(line: 2106, column: 15, scope: !1355)
!10784 = !DILocation(line: 2106, column: 13, scope: !1355)
!10785 = !DILocation(line: 2107, column: 13, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2107, column: 13)
!10787 = !DILocation(line: 2107, column: 17, scope: !10786)
!10788 = !DILocation(line: 2107, column: 13, scope: !1355)
!10789 = !DILocation(line: 2108, column: 13, scope: !10786)
!10790 = !DILocation(line: 2110, column: 13, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2110, column: 13)
!10792 = !DILocation(line: 2110, column: 17, scope: !10791)
!10793 = !DILocation(line: 2110, column: 13, scope: !1355)
!10794 = !DILocation(line: 2111, column: 13, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10791, file: !13, line: 2110, column: 23)
!10796 = !DILocation(line: 2112, column: 13, scope: !10795)
!10797 = !DILocation(line: 2115, column: 56, scope: !1355)
!10798 = !DILocation(line: 2115, column: 44, scope: !1355)
!10799 = !DILocation(line: 2115, column: 15, scope: !1355)
!10800 = !DILocation(line: 2115, column: 13, scope: !1355)
!10801 = !DILocation(line: 2116, column: 13, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !1355, file: !13, line: 2116, column: 13)
!10803 = !DILocation(line: 2116, column: 17, scope: !10802)
!10804 = !DILocation(line: 2116, column: 13, scope: !1355)
!10805 = !DILocation(line: 2117, column: 13, scope: !10802)
!10806 = !DILocation(line: 2118, column: 9, scope: !1355)
!10807 = !DILocation(line: 2118, column: 14, scope: !10808)
!10808 = !DILexicalBlockFile(scope: !1354, file: !13, discriminator: 1)
!10809 = !DILocation(line: 2118, column: 24, scope: !1354)
!10810 = !DILocation(line: 2118, column: 54, scope: !1354)
!10811 = !DILocation(line: 2118, column: 68, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !1354, file: !13, line: 2118, column: 65)
!10813 = !DILocation(line: 2118, column: 85, scope: !10812)
!10814 = !DILocation(line: 2118, column: 65, scope: !10812)
!10815 = !DILocation(line: 2118, column: 95, scope: !10812)
!10816 = !DILocation(line: 2118, column: 65, scope: !1354)
!10817 = !DILocation(line: 2118, column: 65, scope: !10818)
!10818 = !DILexicalBlockFile(scope: !1354, file: !13, discriminator: 2)
!10819 = !DILocation(line: 2118, column: 126, scope: !10820)
!10820 = !DILexicalBlockFile(scope: !10812, file: !13, discriminator: 3)
!10821 = !DILocation(line: 2118, column: 144, scope: !10812)
!10822 = !DILocation(line: 2118, column: 154, scope: !10812)
!10823 = !DILocation(line: 2118, column: 179, scope: !10812)
!10824 = !DILocation(line: 2118, column: 110, scope: !10812)
!10825 = !DILocation(line: 2118, column: 198, scope: !10826)
!10826 = !DILexicalBlockFile(scope: !1355, file: !13, discriminator: 4)
!10827 = !DILocation(line: 2118, column: 198, scope: !1354)
!10828 = !DILocation(line: 2118, column: 198, scope: !10829)
!10829 = !DILexicalBlockFile(scope: !1354, file: !13, discriminator: 5)
!10830 = !DILocation(line: 2120, column: 41, scope: !1355)
!10831 = !DILocation(line: 2120, column: 9, scope: !1355)
!10832 = !DILocation(line: 2121, column: 9, scope: !1355)
!10833 = !DILocation(line: 2121, column: 14, scope: !10834)
!10834 = !DILexicalBlockFile(scope: !1358, file: !13, discriminator: 1)
!10835 = !DILocation(line: 2121, column: 24, scope: !1358)
!10836 = !DILocation(line: 2121, column: 47, scope: !1358)
!10837 = !DILocation(line: 2121, column: 53, scope: !1358)
!10838 = !DILocation(line: 2121, column: 68, scope: !1362)
!10839 = !DILocation(line: 2121, column: 76, scope: !1362)
!10840 = !DILocation(line: 2121, column: 68, scope: !1358)
!10841 = !DILocation(line: 2121, column: 94, scope: !10842)
!10842 = !DILexicalBlockFile(scope: !1361, file: !13, discriminator: 2)
!10843 = !DILocation(line: 2121, column: 100, scope: !1361)
!10844 = !DILocation(line: 2121, column: 110, scope: !1361)
!10845 = !DILocation(line: 2121, column: 124, scope: !1361)
!10846 = !DILocation(line: 2121, column: 129, scope: !10847)
!10847 = !DILexicalBlockFile(scope: !1360, file: !13, discriminator: 4)
!10848 = !DILocation(line: 2121, column: 139, scope: !1360)
!10849 = !DILocation(line: 2121, column: 169, scope: !1360)
!10850 = !DILocation(line: 2121, column: 187, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !1360, file: !13, line: 2121, column: 184)
!10852 = !DILocation(line: 2121, column: 204, scope: !10851)
!10853 = !DILocation(line: 2121, column: 184, scope: !10851)
!10854 = !DILocation(line: 2121, column: 214, scope: !10851)
!10855 = !DILocation(line: 2121, column: 184, scope: !1360)
!10856 = !DILocation(line: 2121, column: 184, scope: !10857)
!10857 = !DILexicalBlockFile(scope: !1360, file: !13, discriminator: 5)
!10858 = !DILocation(line: 2121, column: 245, scope: !10859)
!10859 = !DILexicalBlockFile(scope: !10851, file: !13, discriminator: 6)
!10860 = !DILocation(line: 2121, column: 263, scope: !10851)
!10861 = !DILocation(line: 2121, column: 273, scope: !10851)
!10862 = !DILocation(line: 2121, column: 298, scope: !10851)
!10863 = !DILocation(line: 2121, column: 229, scope: !10851)
!10864 = !DILocation(line: 2121, column: 317, scope: !10865)
!10865 = !DILexicalBlockFile(scope: !1361, file: !13, discriminator: 7)
!10866 = !DILocation(line: 2121, column: 317, scope: !1360)
!10867 = !DILocation(line: 2121, column: 317, scope: !10868)
!10868 = !DILexicalBlockFile(scope: !1360, file: !13, discriminator: 8)
!10869 = !DILocation(line: 2121, column: 330, scope: !10870)
!10870 = !DILexicalBlockFile(scope: !1361, file: !13, discriminator: 9)
!10871 = !DILocation(line: 2121, column: 332, scope: !10872)
!10872 = !DILexicalBlockFile(scope: !10873, file: !13, discriminator: 10)
!10873 = !DILexicalBlockFile(scope: !1355, file: !13, discriminator: 3)
!10874 = !DILocation(line: 2121, column: 332, scope: !1358)
!10875 = !DILocation(line: 2121, column: 332, scope: !10876)
!10876 = !DILexicalBlockFile(scope: !1358, file: !13, discriminator: 11)
!10877 = !DILocation(line: 2122, column: 13, scope: !1366)
!10878 = !DILocation(line: 2122, column: 19, scope: !1366)
!10879 = !DILocation(line: 2122, column: 13, scope: !1355)
!10880 = !DILocation(line: 2123, column: 48, scope: !1365)
!10881 = !DILocation(line: 2123, column: 54, scope: !1365)
!10882 = !DILocation(line: 2123, column: 19, scope: !1365)
!10883 = !DILocation(line: 2123, column: 17, scope: !1365)
!10884 = !DILocation(line: 2124, column: 17, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !1365, file: !13, line: 2124, column: 17)
!10886 = !DILocation(line: 2124, column: 21, scope: !10885)
!10887 = !DILocation(line: 2124, column: 17, scope: !1365)
!10888 = !DILocation(line: 2125, column: 17, scope: !10885)
!10889 = !DILocation(line: 2126, column: 13, scope: !1365)
!10890 = !DILocation(line: 2126, column: 18, scope: !10891)
!10891 = !DILexicalBlockFile(scope: !1364, file: !13, discriminator: 1)
!10892 = !DILocation(line: 2126, column: 28, scope: !1364)
!10893 = !DILocation(line: 2126, column: 58, scope: !1364)
!10894 = !DILocation(line: 2126, column: 72, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !1364, file: !13, line: 2126, column: 69)
!10896 = !DILocation(line: 2126, column: 89, scope: !10895)
!10897 = !DILocation(line: 2126, column: 69, scope: !10895)
!10898 = !DILocation(line: 2126, column: 99, scope: !10895)
!10899 = !DILocation(line: 2126, column: 69, scope: !1364)
!10900 = !DILocation(line: 2126, column: 69, scope: !10901)
!10901 = !DILexicalBlockFile(scope: !1364, file: !13, discriminator: 2)
!10902 = !DILocation(line: 2126, column: 130, scope: !10903)
!10903 = !DILexicalBlockFile(scope: !10895, file: !13, discriminator: 3)
!10904 = !DILocation(line: 2126, column: 148, scope: !10895)
!10905 = !DILocation(line: 2126, column: 158, scope: !10895)
!10906 = !DILocation(line: 2126, column: 183, scope: !10895)
!10907 = !DILocation(line: 2126, column: 114, scope: !10895)
!10908 = !DILocation(line: 2126, column: 202, scope: !10909)
!10909 = !DILexicalBlockFile(scope: !1365, file: !13, discriminator: 4)
!10910 = !DILocation(line: 2126, column: 202, scope: !1364)
!10911 = !DILocation(line: 2126, column: 202, scope: !10912)
!10912 = !DILexicalBlockFile(scope: !1364, file: !13, discriminator: 5)
!10913 = !DILocation(line: 2127, column: 9, scope: !1365)
!10914 = !DILocation(line: 2129, column: 44, scope: !1355)
!10915 = !DILocation(line: 2129, column: 50, scope: !1355)
!10916 = !DILocation(line: 2129, column: 15, scope: !1355)
!10917 = !DILocation(line: 2129, column: 13, scope: !1355)
!10918 = !DILocation(line: 2130, column: 9, scope: !1355)
!10919 = !DILocation(line: 2130, column: 14, scope: !10920)
!10920 = !DILexicalBlockFile(scope: !1368, file: !13, discriminator: 1)
!10921 = !DILocation(line: 2130, column: 24, scope: !1368)
!10922 = !DILocation(line: 2130, column: 55, scope: !1368)
!10923 = !DILocation(line: 2130, column: 71, scope: !1371)
!10924 = !DILocation(line: 2130, column: 87, scope: !1371)
!10925 = !DILocation(line: 2130, column: 71, scope: !1368)
!10926 = !DILocation(line: 2130, column: 102, scope: !10927)
!10927 = !DILexicalBlockFile(scope: !1371, file: !13, discriminator: 2)
!10928 = !DILocation(line: 2130, column: 107, scope: !10929)
!10929 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 4)
!10930 = !DILocation(line: 2130, column: 117, scope: !1370)
!10931 = !DILocation(line: 2130, column: 147, scope: !1370)
!10932 = !DILocation(line: 2130, column: 173, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !1370, file: !13, line: 2130, column: 170)
!10934 = !DILocation(line: 2130, column: 190, scope: !10933)
!10935 = !DILocation(line: 2130, column: 170, scope: !10933)
!10936 = !DILocation(line: 2130, column: 200, scope: !10933)
!10937 = !DILocation(line: 2130, column: 170, scope: !1370)
!10938 = !DILocation(line: 2130, column: 170, scope: !10939)
!10939 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 5)
!10940 = !DILocation(line: 2130, column: 231, scope: !10941)
!10941 = !DILexicalBlockFile(scope: !10933, file: !13, discriminator: 6)
!10942 = !DILocation(line: 2130, column: 249, scope: !10933)
!10943 = !DILocation(line: 2130, column: 259, scope: !10933)
!10944 = !DILocation(line: 2130, column: 284, scope: !10933)
!10945 = !DILocation(line: 2130, column: 215, scope: !10933)
!10946 = !DILocation(line: 2130, column: 303, scope: !10947)
!10947 = !DILexicalBlockFile(scope: !1371, file: !13, discriminator: 7)
!10948 = !DILocation(line: 2130, column: 303, scope: !1370)
!10949 = !DILocation(line: 2130, column: 303, scope: !10950)
!10950 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 8)
!10951 = !DILocation(line: 2130, column: 303, scope: !10952)
!10952 = !DILexicalBlockFile(scope: !1370, file: !13, discriminator: 9)
!10953 = !DILocation(line: 2130, column: 316, scope: !10872)
!10954 = !DILocation(line: 2130, column: 316, scope: !1368)
!10955 = !DILocation(line: 2130, column: 316, scope: !10956)
!10956 = !DILexicalBlockFile(scope: !1368, file: !13, discriminator: 11)
!10957 = !DILocation(line: 2131, column: 16, scope: !1355)
!10958 = !DILocation(line: 2131, column: 9, scope: !1355)
!10959 = !DILocation(line: 2133, column: 14, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !1356, file: !13, line: 2133, column: 14)
!10961 = !DILocation(line: 2133, column: 21, scope: !10960)
!10962 = !DILocation(line: 2133, column: 14, scope: !1356)
!10963 = !DILocation(line: 2134, column: 22, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10960, file: !13, line: 2133, column: 27)
!10965 = !DILocation(line: 2135, column: 66, scope: !10964)
!10966 = !DILocation(line: 2134, column: 9, scope: !10964)
!10967 = !DILocation(line: 2136, column: 9, scope: !10964)
!10968 = !DILocation(line: 2139, column: 36, scope: !1320)
!10969 = !DILocation(line: 2139, column: 47, scope: !1320)
!10970 = !DILocation(line: 2139, column: 11, scope: !1320)
!10971 = !DILocation(line: 2139, column: 9, scope: !1320)
!10972 = !DILocation(line: 2140, column: 9, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2140, column: 9)
!10974 = !DILocation(line: 2140, column: 13, scope: !10973)
!10975 = !DILocation(line: 2140, column: 9, scope: !1320)
!10976 = !DILocation(line: 2141, column: 9, scope: !10973)
!10977 = !DILocation(line: 2143, column: 9, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2143, column: 9)
!10979 = !DILocation(line: 2143, column: 13, scope: !10978)
!10980 = !DILocation(line: 2143, column: 9, scope: !1320)
!10981 = !DILocation(line: 2144, column: 22, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10978, file: !13, line: 2143, column: 19)
!10983 = !DILocation(line: 2145, column: 51, scope: !10982)
!10984 = !DILocation(line: 2144, column: 9, scope: !10982)
!10985 = !DILocation(line: 2146, column: 9, scope: !10982)
!10986 = !DILocation(line: 2149, column: 50, scope: !1320)
!10987 = !DILocation(line: 2149, column: 38, scope: !1320)
!10988 = !DILocation(line: 2149, column: 56, scope: !1320)
!10989 = !DILocation(line: 2149, column: 11, scope: !1320)
!10990 = !DILocation(line: 2149, column: 9, scope: !1320)
!10991 = !DILocation(line: 2150, column: 9, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2150, column: 9)
!10993 = !DILocation(line: 2150, column: 13, scope: !10992)
!10994 = !DILocation(line: 2150, column: 9, scope: !1320)
!10995 = !DILocation(line: 2151, column: 9, scope: !10992)
!10996 = !DILocation(line: 2152, column: 5, scope: !1320)
!10997 = !DILocation(line: 2152, column: 10, scope: !10998)
!10998 = !DILexicalBlockFile(scope: !1373, file: !13, discriminator: 1)
!10999 = !DILocation(line: 2152, column: 20, scope: !1373)
!11000 = !DILocation(line: 2152, column: 50, scope: !1373)
!11001 = !DILocation(line: 2152, column: 64, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !1373, file: !13, line: 2152, column: 61)
!11003 = !DILocation(line: 2152, column: 81, scope: !11002)
!11004 = !DILocation(line: 2152, column: 61, scope: !11002)
!11005 = !DILocation(line: 2152, column: 91, scope: !11002)
!11006 = !DILocation(line: 2152, column: 61, scope: !1373)
!11007 = !DILocation(line: 2152, column: 61, scope: !11008)
!11008 = !DILexicalBlockFile(scope: !1373, file: !13, discriminator: 2)
!11009 = !DILocation(line: 2152, column: 122, scope: !11010)
!11010 = !DILexicalBlockFile(scope: !11002, file: !13, discriminator: 3)
!11011 = !DILocation(line: 2152, column: 140, scope: !11002)
!11012 = !DILocation(line: 2152, column: 150, scope: !11002)
!11013 = !DILocation(line: 2152, column: 175, scope: !11002)
!11014 = !DILocation(line: 2152, column: 106, scope: !11002)
!11015 = !DILocation(line: 2152, column: 194, scope: !11016)
!11016 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 4)
!11017 = !DILocation(line: 2152, column: 194, scope: !1373)
!11018 = !DILocation(line: 2152, column: 194, scope: !11019)
!11019 = !DILexicalBlockFile(scope: !1373, file: !13, discriminator: 5)
!11020 = !DILocation(line: 2157, column: 45, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2157, column: 9)
!11022 = !DILocation(line: 2157, column: 9, scope: !11021)
!11023 = !DILocation(line: 2157, column: 56, scope: !11021)
!11024 = !DILocation(line: 2157, column: 9, scope: !1320)
!11025 = !DILocation(line: 2158, column: 9, scope: !11021)
!11026 = !DILocation(line: 2161, column: 40, scope: !1320)
!11027 = !{!11028, !1900, i64 0}
!11028 = !{!"", !1900, i64 0, !1884, i64 8, !1884, i64 12, !1884, i64 16, !1878, i64 20}
!11029 = !DILocation(line: 2161, column: 14, scope: !1320)
!11030 = !DILocation(line: 2161, column: 12, scope: !1320)
!11031 = !DILocation(line: 2162, column: 9, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2162, column: 9)
!11033 = !DILocation(line: 2162, column: 16, scope: !11032)
!11034 = !DILocation(line: 2162, column: 9, scope: !1320)
!11035 = !DILocation(line: 2163, column: 9, scope: !11032)
!11036 = !DILocation(line: 2164, column: 38, scope: !1320)
!11037 = !DILocation(line: 2164, column: 44, scope: !1320)
!11038 = !DILocation(line: 2165, column: 38, scope: !1320)
!11039 = !DILocation(line: 2165, column: 54, scope: !1320)
!11040 = !DILocation(line: 2164, column: 11, scope: !1320)
!11041 = !DILocation(line: 2164, column: 9, scope: !1320)
!11042 = !DILocation(line: 2166, column: 5, scope: !1320)
!11043 = !DILocation(line: 2166, column: 10, scope: !11044)
!11044 = !DILexicalBlockFile(scope: !1375, file: !13, discriminator: 1)
!11045 = !DILocation(line: 2166, column: 20, scope: !1375)
!11046 = !DILocation(line: 2166, column: 50, scope: !1375)
!11047 = !DILocation(line: 2166, column: 67, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !1375, file: !13, line: 2166, column: 64)
!11049 = !DILocation(line: 2166, column: 84, scope: !11048)
!11050 = !DILocation(line: 2166, column: 64, scope: !11048)
!11051 = !DILocation(line: 2166, column: 94, scope: !11048)
!11052 = !DILocation(line: 2166, column: 64, scope: !1375)
!11053 = !DILocation(line: 2166, column: 64, scope: !11054)
!11054 = !DILexicalBlockFile(scope: !1375, file: !13, discriminator: 2)
!11055 = !DILocation(line: 2166, column: 125, scope: !11056)
!11056 = !DILexicalBlockFile(scope: !11048, file: !13, discriminator: 3)
!11057 = !DILocation(line: 2166, column: 143, scope: !11048)
!11058 = !DILocation(line: 2166, column: 153, scope: !11048)
!11059 = !DILocation(line: 2166, column: 178, scope: !11048)
!11060 = !DILocation(line: 2166, column: 109, scope: !11048)
!11061 = !DILocation(line: 2166, column: 197, scope: !11016)
!11062 = !DILocation(line: 2166, column: 197, scope: !1375)
!11063 = !DILocation(line: 2166, column: 197, scope: !11064)
!11064 = !DILexicalBlockFile(scope: !1375, file: !13, discriminator: 5)
!11065 = !DILocation(line: 2167, column: 9, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2167, column: 9)
!11067 = !DILocation(line: 2167, column: 13, scope: !11066)
!11068 = !DILocation(line: 2167, column: 9, scope: !1320)
!11069 = !DILocation(line: 2168, column: 9, scope: !11066)
!11070 = !DILocation(line: 2169, column: 5, scope: !1320)
!11071 = !DILocation(line: 2169, column: 10, scope: !11072)
!11072 = !DILexicalBlockFile(scope: !1377, file: !13, discriminator: 1)
!11073 = !DILocation(line: 2169, column: 20, scope: !1377)
!11074 = !DILocation(line: 2169, column: 50, scope: !1377)
!11075 = !DILocation(line: 2169, column: 64, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !1377, file: !13, line: 2169, column: 61)
!11077 = !DILocation(line: 2169, column: 81, scope: !11076)
!11078 = !DILocation(line: 2169, column: 61, scope: !11076)
!11079 = !DILocation(line: 2169, column: 91, scope: !11076)
!11080 = !DILocation(line: 2169, column: 61, scope: !1377)
!11081 = !DILocation(line: 2169, column: 61, scope: !11082)
!11082 = !DILexicalBlockFile(scope: !1377, file: !13, discriminator: 2)
!11083 = !DILocation(line: 2169, column: 122, scope: !11084)
!11084 = !DILexicalBlockFile(scope: !11076, file: !13, discriminator: 3)
!11085 = !DILocation(line: 2169, column: 140, scope: !11076)
!11086 = !DILocation(line: 2169, column: 150, scope: !11076)
!11087 = !DILocation(line: 2169, column: 175, scope: !11076)
!11088 = !DILocation(line: 2169, column: 106, scope: !11076)
!11089 = !DILocation(line: 2169, column: 194, scope: !11016)
!11090 = !DILocation(line: 2169, column: 194, scope: !1377)
!11091 = !DILocation(line: 2169, column: 194, scope: !11092)
!11092 = !DILexicalBlockFile(scope: !1377, file: !13, discriminator: 5)
!11093 = !DILocation(line: 2171, column: 37, scope: !1320)
!11094 = !DILocation(line: 2171, column: 5, scope: !1320)
!11095 = !DILocation(line: 2172, column: 5, scope: !1320)
!11096 = !DILocation(line: 2172, column: 10, scope: !11097)
!11097 = !DILexicalBlockFile(scope: !1379, file: !13, discriminator: 1)
!11098 = !DILocation(line: 2172, column: 20, scope: !1379)
!11099 = !DILocation(line: 2172, column: 43, scope: !1379)
!11100 = !DILocation(line: 2172, column: 49, scope: !1379)
!11101 = !DILocation(line: 2172, column: 64, scope: !1383)
!11102 = !DILocation(line: 2172, column: 72, scope: !1383)
!11103 = !DILocation(line: 2172, column: 64, scope: !1379)
!11104 = !DILocation(line: 2172, column: 90, scope: !11105)
!11105 = !DILexicalBlockFile(scope: !1382, file: !13, discriminator: 2)
!11106 = !DILocation(line: 2172, column: 96, scope: !1382)
!11107 = !DILocation(line: 2172, column: 106, scope: !1382)
!11108 = !DILocation(line: 2172, column: 120, scope: !1382)
!11109 = !DILocation(line: 2172, column: 125, scope: !11110)
!11110 = !DILexicalBlockFile(scope: !1381, file: !13, discriminator: 4)
!11111 = !DILocation(line: 2172, column: 135, scope: !1381)
!11112 = !DILocation(line: 2172, column: 165, scope: !1381)
!11113 = !DILocation(line: 2172, column: 183, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !1381, file: !13, line: 2172, column: 180)
!11115 = !DILocation(line: 2172, column: 200, scope: !11114)
!11116 = !DILocation(line: 2172, column: 180, scope: !11114)
!11117 = !DILocation(line: 2172, column: 210, scope: !11114)
!11118 = !DILocation(line: 2172, column: 180, scope: !1381)
!11119 = !DILocation(line: 2172, column: 180, scope: !11120)
!11120 = !DILexicalBlockFile(scope: !1381, file: !13, discriminator: 5)
!11121 = !DILocation(line: 2172, column: 241, scope: !11122)
!11122 = !DILexicalBlockFile(scope: !11114, file: !13, discriminator: 6)
!11123 = !DILocation(line: 2172, column: 259, scope: !11114)
!11124 = !DILocation(line: 2172, column: 269, scope: !11114)
!11125 = !DILocation(line: 2172, column: 294, scope: !11114)
!11126 = !DILocation(line: 2172, column: 225, scope: !11114)
!11127 = !DILocation(line: 2172, column: 313, scope: !11128)
!11128 = !DILexicalBlockFile(scope: !1382, file: !13, discriminator: 7)
!11129 = !DILocation(line: 2172, column: 313, scope: !1381)
!11130 = !DILocation(line: 2172, column: 313, scope: !11131)
!11131 = !DILexicalBlockFile(scope: !1381, file: !13, discriminator: 8)
!11132 = !DILocation(line: 2172, column: 326, scope: !11133)
!11133 = !DILexicalBlockFile(scope: !1382, file: !13, discriminator: 9)
!11134 = !DILocation(line: 2172, column: 328, scope: !11135)
!11135 = !DILexicalBlockFile(scope: !11136, file: !13, discriminator: 10)
!11136 = !DILexicalBlockFile(scope: !1320, file: !13, discriminator: 3)
!11137 = !DILocation(line: 2172, column: 328, scope: !1379)
!11138 = !DILocation(line: 2172, column: 328, scope: !11139)
!11139 = !DILexicalBlockFile(scope: !1379, file: !13, discriminator: 11)
!11140 = !DILocation(line: 2175, column: 9, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2175, column: 9)
!11142 = !DILocation(line: 2175, column: 15, scope: !11141)
!11143 = !DILocation(line: 2175, column: 9, scope: !1320)
!11144 = !DILocation(line: 2176, column: 45, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !13, line: 2176, column: 13)
!11146 = distinct !DILexicalBlock(scope: !11141, file: !13, line: 2175, column: 24)
!11147 = !DILocation(line: 2176, column: 13, scope: !11145)
!11148 = !DILocation(line: 2176, column: 60, scope: !11145)
!11149 = !DILocation(line: 2176, column: 13, scope: !11146)
!11150 = !DILocation(line: 2177, column: 13, scope: !11145)
!11151 = !DILocation(line: 2178, column: 5, scope: !11146)
!11152 = !DILocation(line: 2180, column: 16, scope: !1386)
!11153 = !{!11028, !1884, i64 16}
!11154 = !DILocation(line: 2180, column: 9, scope: !1386)
!11155 = !DILocation(line: 2180, column: 9, scope: !1320)
!11156 = !DILocation(line: 2182, column: 9, scope: !1385)
!11157 = !DILocation(line: 2182, column: 19, scope: !1385)
!11158 = !DILocation(line: 2183, column: 13, scope: !1385)
!11159 = !DILocation(line: 2183, column: 19, scope: !1385)
!11160 = !DILocation(line: 2183, column: 51, scope: !1385)
!11161 = !{!11028, !1884, i64 12}
!11162 = !DILocation(line: 2182, column: 33, scope: !1385)
!11163 = !DILocation(line: 2184, column: 9, scope: !1385)
!11164 = !DILocation(line: 2184, column: 19, scope: !1385)
!11165 = !DILocation(line: 2186, column: 13, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2186, column: 13)
!11167 = !DILocation(line: 2186, column: 25, scope: !11166)
!11168 = !DILocation(line: 2186, column: 13, scope: !1385)
!11169 = !DILocation(line: 2187, column: 13, scope: !11166)
!11170 = !DILocation(line: 2189, column: 31, scope: !1391)
!11171 = !DILocation(line: 2189, column: 46, scope: !1391)
!11172 = !DILocation(line: 2189, column: 57, scope: !1391)
!11173 = !DILocation(line: 2189, column: 66, scope: !1391)
!11174 = !DILocation(line: 2189, column: 83, scope: !1391)
!11175 = !DILocation(line: 2189, column: 13, scope: !1385)
!11176 = !DILocation(line: 2190, column: 26, scope: !1390)
!11177 = !DILocation(line: 2193, column: 40, scope: !1390)
!11178 = !DILocation(line: 2193, column: 55, scope: !1390)
!11179 = !DILocation(line: 2193, column: 65, scope: !1390)
!11180 = !DILocation(line: 2190, column: 13, scope: !1390)
!11181 = !DILocation(line: 2194, column: 13, scope: !1390)
!11182 = !DILocation(line: 2194, column: 18, scope: !11183)
!11183 = !DILexicalBlockFile(scope: !1389, file: !13, discriminator: 1)
!11184 = !DILocation(line: 2194, column: 28, scope: !1389)
!11185 = !DILocation(line: 2194, column: 58, scope: !1389)
!11186 = !DILocation(line: 2194, column: 80, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !1389, file: !13, line: 2194, column: 77)
!11188 = !DILocation(line: 2194, column: 97, scope: !11187)
!11189 = !DILocation(line: 2194, column: 77, scope: !11187)
!11190 = !DILocation(line: 2194, column: 107, scope: !11187)
!11191 = !DILocation(line: 2194, column: 77, scope: !1389)
!11192 = !DILocation(line: 2194, column: 77, scope: !11193)
!11193 = !DILexicalBlockFile(scope: !1389, file: !13, discriminator: 2)
!11194 = !DILocation(line: 2194, column: 138, scope: !11195)
!11195 = !DILexicalBlockFile(scope: !11187, file: !13, discriminator: 3)
!11196 = !DILocation(line: 2194, column: 156, scope: !11187)
!11197 = !DILocation(line: 2194, column: 166, scope: !11187)
!11198 = !DILocation(line: 2194, column: 191, scope: !11187)
!11199 = !DILocation(line: 2194, column: 122, scope: !11187)
!11200 = !DILocation(line: 2194, column: 210, scope: !11201)
!11201 = !DILexicalBlockFile(scope: !1390, file: !13, discriminator: 4)
!11202 = !DILocation(line: 2194, column: 210, scope: !1389)
!11203 = !DILocation(line: 2194, column: 210, scope: !11204)
!11204 = !DILexicalBlockFile(scope: !1389, file: !13, discriminator: 5)
!11205 = !DILocation(line: 2195, column: 13, scope: !1390)
!11206 = !DILocation(line: 2198, column: 60, scope: !1385)
!11207 = !{!11028, !1884, i64 8}
!11208 = !DILocation(line: 2198, column: 71, scope: !1385)
!11209 = !DILocation(line: 2198, column: 26, scope: !1385)
!11210 = !DILocation(line: 2198, column: 9, scope: !1385)
!11211 = !DILocation(line: 2198, column: 15, scope: !1385)
!11212 = !DILocation(line: 2198, column: 24, scope: !1385)
!11213 = !DILocation(line: 2199, column: 13, scope: !1395)
!11214 = !DILocation(line: 2199, column: 19, scope: !1395)
!11215 = !DILocation(line: 2199, column: 28, scope: !1395)
!11216 = !DILocation(line: 2199, column: 13, scope: !1385)
!11217 = !DILocation(line: 2200, column: 13, scope: !1394)
!11218 = !DILocation(line: 2200, column: 18, scope: !11219)
!11219 = !DILexicalBlockFile(scope: !1393, file: !13, discriminator: 1)
!11220 = !DILocation(line: 2200, column: 28, scope: !1393)
!11221 = !DILocation(line: 2200, column: 58, scope: !1393)
!11222 = !DILocation(line: 2200, column: 80, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !1393, file: !13, line: 2200, column: 77)
!11224 = !DILocation(line: 2200, column: 97, scope: !11223)
!11225 = !DILocation(line: 2200, column: 77, scope: !11223)
!11226 = !DILocation(line: 2200, column: 107, scope: !11223)
!11227 = !DILocation(line: 2200, column: 77, scope: !1393)
!11228 = !DILocation(line: 2200, column: 77, scope: !11229)
!11229 = !DILexicalBlockFile(scope: !1393, file: !13, discriminator: 2)
!11230 = !DILocation(line: 2200, column: 138, scope: !11231)
!11231 = !DILexicalBlockFile(scope: !11223, file: !13, discriminator: 3)
!11232 = !DILocation(line: 2200, column: 156, scope: !11223)
!11233 = !DILocation(line: 2200, column: 166, scope: !11223)
!11234 = !DILocation(line: 2200, column: 191, scope: !11223)
!11235 = !DILocation(line: 2200, column: 122, scope: !11223)
!11236 = !DILocation(line: 2200, column: 210, scope: !11237)
!11237 = !DILexicalBlockFile(scope: !1394, file: !13, discriminator: 4)
!11238 = !DILocation(line: 2200, column: 210, scope: !1393)
!11239 = !DILocation(line: 2200, column: 210, scope: !11240)
!11240 = !DILexicalBlockFile(scope: !1393, file: !13, discriminator: 5)
!11241 = !DILocation(line: 2201, column: 13, scope: !1394)
!11242 = !DILocation(line: 2204, column: 48, scope: !1385)
!11243 = !DILocation(line: 2204, column: 54, scope: !1385)
!11244 = !DILocation(line: 2205, column: 19, scope: !1385)
!11245 = !DILocation(line: 2205, column: 44, scope: !1385)
!11246 = !{!11028, !1878, i64 20}
!11247 = !DILocation(line: 2205, column: 32, scope: !1385)
!11248 = !DILocation(line: 2204, column: 19, scope: !1385)
!11249 = !DILocation(line: 2204, column: 17, scope: !1385)
!11250 = !DILocation(line: 2207, column: 27, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2207, column: 13)
!11252 = !DILocation(line: 2207, column: 13, scope: !11251)
!11253 = !DILocation(line: 2207, column: 36, scope: !11251)
!11254 = !DILocation(line: 2207, column: 13, scope: !1385)
!11255 = !DILocation(line: 2208, column: 13, scope: !11251)
!11256 = !DILocation(line: 2210, column: 41, scope: !1385)
!11257 = !DILocation(line: 2210, column: 47, scope: !1385)
!11258 = !DILocation(line: 2210, column: 9, scope: !1385)
!11259 = !DILocation(line: 2213, column: 33, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !1385, file: !13, line: 2213, column: 13)
!11261 = !DILocation(line: 2213, column: 39, scope: !11260)
!11262 = !DILocation(line: 2213, column: 13, scope: !11260)
!11263 = !DILocation(line: 2213, column: 63, scope: !11260)
!11264 = !DILocation(line: 2213, column: 56, scope: !11260)
!11265 = !DILocation(line: 2213, column: 54, scope: !11260)
!11266 = !DILocation(line: 2213, column: 13, scope: !1385)
!11267 = !DILocation(line: 2214, column: 29, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11260, file: !13, line: 2213, column: 78)
!11269 = !DILocation(line: 2214, column: 13, scope: !11268)
!11270 = !DILocation(line: 2215, column: 13, scope: !11268)
!11271 = !DILocation(line: 2217, column: 43, scope: !1385)
!11272 = !DILocation(line: 2217, column: 36, scope: !1385)
!11273 = !DILocation(line: 2217, column: 9, scope: !1385)
!11274 = !DILocation(line: 2217, column: 15, scope: !1385)
!11275 = !DILocation(line: 2217, column: 34, scope: !1385)
!11276 = !DILocation(line: 2218, column: 5, scope: !1386)
!11277 = !DILocation(line: 2218, column: 5, scope: !11278)
!11278 = !DILexicalBlockFile(scope: !1386, file: !13, discriminator: 1)
!11279 = !DILocation(line: 2218, column: 5, scope: !1385)
!11280 = !DILocation(line: 2220, column: 60, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !1386, file: !13, line: 2219, column: 10)
!11282 = !DILocation(line: 2220, column: 26, scope: !11281)
!11283 = !DILocation(line: 2220, column: 9, scope: !11281)
!11284 = !DILocation(line: 2220, column: 15, scope: !11281)
!11285 = !DILocation(line: 2220, column: 24, scope: !11281)
!11286 = !DILocation(line: 2221, column: 13, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11281, file: !13, line: 2221, column: 13)
!11288 = !DILocation(line: 2221, column: 19, scope: !11287)
!11289 = !DILocation(line: 2221, column: 28, scope: !11287)
!11290 = !DILocation(line: 2221, column: 13, scope: !11281)
!11291 = !DILocation(line: 2222, column: 13, scope: !11287)
!11292 = !DILocation(line: 2226, column: 9, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !1320, file: !13, line: 2226, column: 9)
!11294 = !DILocation(line: 2226, column: 15, scope: !11293)
!11295 = !DILocation(line: 2226, column: 9, scope: !1320)
!11296 = !DILocation(line: 2227, column: 45, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !13, line: 2227, column: 13)
!11298 = distinct !DILexicalBlock(scope: !11293, file: !13, line: 2226, column: 24)
!11299 = !DILocation(line: 2227, column: 13, scope: !11297)
!11300 = !DILocation(line: 2227, column: 60, scope: !11297)
!11301 = !DILocation(line: 2227, column: 13, scope: !11298)
!11302 = !DILocation(line: 2228, column: 13, scope: !11297)
!11303 = !DILocation(line: 2229, column: 5, scope: !11298)
!11304 = !DILocation(line: 2230, column: 12, scope: !1320)
!11305 = !DILocation(line: 2230, column: 5, scope: !1320)
!11306 = !DILocation(line: 2232, column: 5, scope: !1320)
!11307 = !DILocation(line: 2232, column: 10, scope: !11308)
!11308 = !DILexicalBlockFile(scope: !1397, file: !13, discriminator: 1)
!11309 = !DILocation(line: 2232, column: 20, scope: !1397)
!11310 = !DILocation(line: 2232, column: 51, scope: !1397)
!11311 = !DILocation(line: 2232, column: 67, scope: !1400)
!11312 = !DILocation(line: 2232, column: 83, scope: !1400)
!11313 = !DILocation(line: 2232, column: 67, scope: !1397)
!11314 = !DILocation(line: 2232, column: 98, scope: !11315)
!11315 = !DILexicalBlockFile(scope: !1400, file: !13, discriminator: 2)
!11316 = !DILocation(line: 2232, column: 103, scope: !11317)
!11317 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 4)
!11318 = !DILocation(line: 2232, column: 113, scope: !1399)
!11319 = !DILocation(line: 2232, column: 143, scope: !1399)
!11320 = !DILocation(line: 2232, column: 169, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !1399, file: !13, line: 2232, column: 166)
!11322 = !DILocation(line: 2232, column: 186, scope: !11321)
!11323 = !DILocation(line: 2232, column: 166, scope: !11321)
!11324 = !DILocation(line: 2232, column: 196, scope: !11321)
!11325 = !DILocation(line: 2232, column: 166, scope: !1399)
!11326 = !DILocation(line: 2232, column: 166, scope: !11327)
!11327 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 5)
!11328 = !DILocation(line: 2232, column: 227, scope: !11329)
!11329 = !DILexicalBlockFile(scope: !11321, file: !13, discriminator: 6)
!11330 = !DILocation(line: 2232, column: 245, scope: !11321)
!11331 = !DILocation(line: 2232, column: 255, scope: !11321)
!11332 = !DILocation(line: 2232, column: 280, scope: !11321)
!11333 = !DILocation(line: 2232, column: 211, scope: !11321)
!11334 = !DILocation(line: 2232, column: 299, scope: !11335)
!11335 = !DILexicalBlockFile(scope: !1400, file: !13, discriminator: 7)
!11336 = !DILocation(line: 2232, column: 299, scope: !1399)
!11337 = !DILocation(line: 2232, column: 299, scope: !11338)
!11338 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 8)
!11339 = !DILocation(line: 2232, column: 299, scope: !11340)
!11340 = !DILexicalBlockFile(scope: !1399, file: !13, discriminator: 9)
!11341 = !DILocation(line: 2232, column: 312, scope: !11135)
!11342 = !DILocation(line: 2232, column: 312, scope: !1397)
!11343 = !DILocation(line: 2232, column: 312, scope: !11344)
!11344 = !DILexicalBlockFile(scope: !1397, file: !13, discriminator: 11)
!11345 = !DILocation(line: 2233, column: 5, scope: !1320)
!11346 = !DILocation(line: 2235, column: 1, scope: !1320)
!11347 = !DILocation(line: 2238, column: 28, scope: !1435)
!11348 = !DILocation(line: 2238, column: 44, scope: !1435)
!11349 = !DILocation(line: 2240, column: 5, scope: !1435)
!11350 = !DILocation(line: 2240, column: 15, scope: !1435)
!11351 = !DILocation(line: 2241, column: 5, scope: !1435)
!11352 = !DILocation(line: 2241, column: 15, scope: !1435)
!11353 = !DILocation(line: 2242, column: 5, scope: !1435)
!11354 = !DILocation(line: 2242, column: 17, scope: !1435)
!11355 = !DILocation(line: 2243, column: 5, scope: !1435)
!11356 = !DILocation(line: 2243, column: 15, scope: !1435)
!11357 = !DILocation(line: 2244, column: 5, scope: !1435)
!11358 = !DILocation(line: 2244, column: 16, scope: !1435)
!11359 = !DILocation(line: 2244, column: 31, scope: !1435)
!11360 = !DILocation(line: 2245, column: 5, scope: !1435)
!11361 = !DILocation(line: 2245, column: 16, scope: !1435)
!11362 = !DILocation(line: 2245, column: 28, scope: !1435)
!11363 = !DILocation(line: 2246, column: 5, scope: !1435)
!11364 = !DILocation(line: 2246, column: 15, scope: !1435)
!11365 = !DILocation(line: 2247, column: 5, scope: !1435)
!11366 = !DILocation(line: 2247, column: 11, scope: !1435)
!11367 = !DILocation(line: 2247, column: 19, scope: !1435)
!11368 = !DILocation(line: 2248, column: 5, scope: !1435)
!11369 = !DILocation(line: 2248, column: 11, scope: !1435)
!11370 = !DILocation(line: 2249, column: 5, scope: !1435)
!11371 = !DILocation(line: 2249, column: 16, scope: !1435)
!11372 = !DILocation(line: 2250, column: 5, scope: !1435)
!11373 = !DILocation(line: 2250, column: 9, scope: !1435)
!11374 = !DILocation(line: 2252, column: 9, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2252, column: 9)
!11376 = !DILocation(line: 2252, column: 15, scope: !11375)
!11377 = !DILocation(line: 2252, column: 18, scope: !11375)
!11378 = !DILocation(line: 2252, column: 9, scope: !1435)
!11379 = !DILocation(line: 2252, column: 30, scope: !11380)
!11380 = !DILexicalBlockFile(scope: !11381, file: !13, discriminator: 1)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !13, line: 2252, column: 30)
!11382 = distinct !DILexicalBlock(scope: !11375, file: !13, line: 2252, column: 24)
!11383 = !DILocation(line: 2252, column: 36, scope: !11381)
!11384 = !DILocation(line: 2252, column: 30, scope: !11381)
!11385 = !DILocation(line: 2252, column: 30, scope: !11382)
!11386 = !DILocation(line: 2252, column: 64, scope: !11387)
!11387 = !DILexicalBlockFile(scope: !11388, file: !13, discriminator: 2)
!11388 = distinct !DILexicalBlock(scope: !11381, file: !13, line: 2252, column: 46)
!11389 = !DILocation(line: 2252, column: 48, scope: !11388)
!11390 = !DILocation(line: 2252, column: 122, scope: !11388)
!11391 = !DILocation(line: 2252, column: 147, scope: !11392)
!11392 = !DILexicalBlockFile(scope: !11393, file: !13, discriminator: 3)
!11393 = distinct !DILexicalBlock(scope: !11381, file: !13, line: 2252, column: 129)
!11394 = !DILocation(line: 2252, column: 131, scope: !11393)
!11395 = !DILocation(line: 2252, column: 209, scope: !11396)
!11396 = !DILexicalBlockFile(scope: !11382, file: !13, discriminator: 4)
!11397 = !DILocation(line: 2252, column: 209, scope: !11382)
!11398 = !DILocation(line: 2253, column: 5, scope: !1435)
!11399 = !DILocation(line: 2253, column: 10, scope: !11400)
!11400 = !DILexicalBlockFile(scope: !1454, file: !13, discriminator: 1)
!11401 = !DILocation(line: 2253, column: 14, scope: !1454)
!11402 = !DILocation(line: 2253, column: 17, scope: !1454)
!11403 = !DILocation(line: 2253, column: 27, scope: !1454)
!11404 = !DILocation(line: 2253, column: 51, scope: !1461)
!11405 = !DILocation(line: 2253, column: 39, scope: !1461)
!11406 = !DILocation(line: 2253, column: 59, scope: !1461)
!11407 = !DILocation(line: 2253, column: 68, scope: !1461)
!11408 = !DILocation(line: 2253, column: 37, scope: !1454)
!11409 = !DILocation(line: 2253, column: 100, scope: !11410)
!11410 = !DILexicalBlockFile(scope: !1459, file: !13, discriminator: 2)
!11411 = !DILocation(line: 2253, column: 106, scope: !1459)
!11412 = !DILocation(line: 2253, column: 110, scope: !1459)
!11413 = !DILocation(line: 2253, column: 100, scope: !1460)
!11414 = !DILocation(line: 2253, column: 146, scope: !11415)
!11415 = !DILexicalBlockFile(scope: !1459, file: !13, discriminator: 4)
!11416 = !DILocation(line: 2253, column: 152, scope: !1459)
!11417 = !DILocation(line: 2253, column: 129, scope: !1459)
!11418 = !DILocation(line: 2253, column: 127, scope: !1459)
!11419 = !DILocation(line: 2253, column: 125, scope: !1459)
!11420 = !DILocation(line: 2253, column: 197, scope: !11421)
!11421 = !DILexicalBlockFile(scope: !1458, file: !13, discriminator: 5)
!11422 = !DILocation(line: 2253, column: 172, scope: !1458)
!11423 = !DILocation(line: 2253, column: 170, scope: !1458)
!11424 = !DILocation(line: 2253, column: 220, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !1458, file: !13, line: 2253, column: 220)
!11426 = !DILocation(line: 2253, column: 225, scope: !11425)
!11427 = !DILocation(line: 2253, column: 220, scope: !1458)
!11428 = !DILocation(line: 2253, column: 240, scope: !11429)
!11429 = !DILexicalBlockFile(scope: !11425, file: !13, discriminator: 7)
!11430 = !DILocation(line: 2253, column: 240, scope: !11425)
!11431 = !DILocation(line: 2253, column: 279, scope: !11432)
!11432 = !DILexicalBlockFile(scope: !1458, file: !13, discriminator: 8)
!11433 = !DILocation(line: 2253, column: 263, scope: !1458)
!11434 = !DILocation(line: 2253, column: 261, scope: !1458)
!11435 = !DILocation(line: 2253, column: 286, scope: !1458)
!11436 = !DILocation(line: 2253, column: 291, scope: !11437)
!11437 = !DILexicalBlockFile(scope: !1457, file: !13, discriminator: 10)
!11438 = !DILocation(line: 2253, column: 301, scope: !1457)
!11439 = !DILocation(line: 2253, column: 331, scope: !1457)
!11440 = !DILocation(line: 2253, column: 346, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !1457, file: !13, line: 2253, column: 343)
!11442 = !DILocation(line: 2253, column: 363, scope: !11441)
!11443 = !DILocation(line: 2253, column: 343, scope: !11441)
!11444 = !DILocation(line: 2253, column: 373, scope: !11441)
!11445 = !DILocation(line: 2253, column: 343, scope: !1457)
!11446 = !DILocation(line: 2253, column: 343, scope: !11447)
!11447 = !DILexicalBlockFile(scope: !1457, file: !13, discriminator: 11)
!11448 = !DILocation(line: 2253, column: 404, scope: !11449)
!11449 = !DILexicalBlockFile(scope: !11441, file: !13, discriminator: 12)
!11450 = !DILocation(line: 2253, column: 422, scope: !11441)
!11451 = !DILocation(line: 2253, column: 432, scope: !11441)
!11452 = !DILocation(line: 2253, column: 457, scope: !11441)
!11453 = !DILocation(line: 2253, column: 388, scope: !11441)
!11454 = !DILocation(line: 2253, column: 476, scope: !11455)
!11455 = !DILexicalBlockFile(scope: !1458, file: !13, discriminator: 13)
!11456 = !DILocation(line: 2253, column: 476, scope: !1457)
!11457 = !DILocation(line: 2253, column: 476, scope: !11458)
!11458 = !DILexicalBlockFile(scope: !1457, file: !13, discriminator: 14)
!11459 = !DILocation(line: 2253, column: 493, scope: !11460)
!11460 = !DILexicalBlockFile(scope: !11461, file: !13, discriminator: 15)
!11461 = distinct !DILexicalBlock(scope: !1458, file: !13, line: 2253, column: 493)
!11462 = !DILocation(line: 2253, column: 495, scope: !11461)
!11463 = !DILocation(line: 2253, column: 493, scope: !1458)
!11464 = !DILocation(line: 2253, column: 500, scope: !11465)
!11465 = !DILexicalBlockFile(scope: !11461, file: !13, discriminator: 16)
!11466 = !DILocation(line: 2253, column: 500, scope: !11461)
!11467 = !DILocation(line: 2253, column: 525, scope: !11468)
!11468 = !DILexicalBlockFile(scope: !11469, file: !13, discriminator: 6)
!11469 = distinct !DILexicalBlock(scope: !1460, file: !13, line: 2253, column: 525)
!11470 = !DILocation(line: 2253, column: 527, scope: !11469)
!11471 = !DILocation(line: 2253, column: 525, scope: !1460)
!11472 = !DILocation(line: 2253, column: 550, scope: !11473)
!11473 = !DILexicalBlockFile(scope: !11474, file: !13, discriminator: 18)
!11474 = distinct !DILexicalBlock(scope: !11469, file: !13, line: 2253, column: 532)
!11475 = !DILocation(line: 2253, column: 534, scope: !11474)
!11476 = !DILocation(line: 2253, column: 602, scope: !11474)
!11477 = !DILocation(line: 2253, column: 623, scope: !11478)
!11478 = !DILexicalBlockFile(scope: !1460, file: !13, discriminator: 19)
!11479 = !DILocation(line: 2253, column: 669, scope: !11480)
!11480 = !DILexicalBlockFile(scope: !11481, file: !13, discriminator: 3)
!11481 = distinct !DILexicalBlock(scope: !1461, file: !13, line: 2253, column: 634)
!11482 = !DILocation(line: 2253, column: 657, scope: !11481)
!11483 = !DILocation(line: 2253, column: 634, scope: !11481)
!11484 = !DILocation(line: 2253, column: 707, scope: !11481)
!11485 = !DILocation(line: 2253, column: 634, scope: !1461)
!11486 = !DILocation(line: 2253, column: 722, scope: !11487)
!11487 = !DILexicalBlockFile(scope: !11481, file: !13, discriminator: 22)
!11488 = !DILocation(line: 2253, column: 722, scope: !11481)
!11489 = !DILocation(line: 2253, column: 741, scope: !11490)
!11490 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 21)
!11491 = !DILocation(line: 2253, column: 741, scope: !11492)
!11492 = !DILexicalBlockFile(scope: !11493, file: !13, discriminator: 24)
!11493 = !DILexicalBlockFile(scope: !11494, file: !13, discriminator: 23)
!11494 = !DILexicalBlockFile(scope: !11495, file: !13, discriminator: 20)
!11495 = !DILexicalBlockFile(scope: !11496, file: !13, discriminator: 17)
!11496 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 9)
!11497 = !DILocation(line: 2253, column: 741, scope: !1454)
!11498 = !DILocation(line: 2253, column: 741, scope: !11499)
!11499 = !DILexicalBlockFile(scope: !1454, file: !13, discriminator: 25)
!11500 = !DILocation(line: 2255, column: 10, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2255, column: 9)
!11502 = !DILocation(line: 2255, column: 16, scope: !11501)
!11503 = !DILocation(line: 2255, column: 9, scope: !1435)
!11504 = !DILocation(line: 2256, column: 9, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !13, line: 2255, column: 26)
!11506 = !DILocation(line: 2257, column: 9, scope: !11505)
!11507 = !DILocation(line: 2259, column: 10, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2259, column: 9)
!11509 = !DILocation(line: 2259, column: 16, scope: !11508)
!11510 = !DILocation(line: 2259, column: 9, scope: !1435)
!11511 = !DILocation(line: 2260, column: 25, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11508, file: !13, line: 2259, column: 25)
!11513 = !DILocation(line: 2260, column: 9, scope: !11512)
!11514 = !DILocation(line: 2262, column: 9, scope: !11512)
!11515 = !DILocation(line: 2265, column: 35, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2265, column: 9)
!11517 = !DILocation(line: 2265, column: 9, scope: !11516)
!11518 = !DILocation(line: 2265, column: 41, scope: !11516)
!11519 = !DILocation(line: 2265, column: 9, scope: !1435)
!11520 = !DILocation(line: 2266, column: 9, scope: !11516)
!11521 = !DILocation(line: 2267, column: 52, scope: !1435)
!11522 = !DILocation(line: 2267, column: 40, scope: !1435)
!11523 = !DILocation(line: 2267, column: 11, scope: !1435)
!11524 = !DILocation(line: 2267, column: 9, scope: !1435)
!11525 = !DILocation(line: 2268, column: 9, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2268, column: 9)
!11527 = !DILocation(line: 2268, column: 13, scope: !11526)
!11528 = !DILocation(line: 2268, column: 9, scope: !1435)
!11529 = !DILocation(line: 2269, column: 9, scope: !11526)
!11530 = !DILocation(line: 2270, column: 5, scope: !1435)
!11531 = !DILocation(line: 2270, column: 10, scope: !11532)
!11532 = !DILexicalBlockFile(scope: !1463, file: !13, discriminator: 1)
!11533 = !DILocation(line: 2270, column: 20, scope: !1463)
!11534 = !DILocation(line: 2270, column: 50, scope: !1463)
!11535 = !DILocation(line: 2270, column: 64, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !1463, file: !13, line: 2270, column: 61)
!11537 = !DILocation(line: 2270, column: 81, scope: !11536)
!11538 = !DILocation(line: 2270, column: 61, scope: !11536)
!11539 = !DILocation(line: 2270, column: 91, scope: !11536)
!11540 = !DILocation(line: 2270, column: 61, scope: !1463)
!11541 = !DILocation(line: 2270, column: 61, scope: !11542)
!11542 = !DILexicalBlockFile(scope: !1463, file: !13, discriminator: 2)
!11543 = !DILocation(line: 2270, column: 122, scope: !11544)
!11544 = !DILexicalBlockFile(scope: !11536, file: !13, discriminator: 3)
!11545 = !DILocation(line: 2270, column: 140, scope: !11536)
!11546 = !DILocation(line: 2270, column: 150, scope: !11536)
!11547 = !DILocation(line: 2270, column: 175, scope: !11536)
!11548 = !DILocation(line: 2270, column: 106, scope: !11536)
!11549 = !DILocation(line: 2270, column: 194, scope: !11550)
!11550 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 4)
!11551 = !DILocation(line: 2270, column: 194, scope: !1463)
!11552 = !DILocation(line: 2270, column: 194, scope: !11553)
!11553 = !DILexicalBlockFile(scope: !1463, file: !13, discriminator: 5)
!11554 = !DILocation(line: 2272, column: 43, scope: !1435)
!11555 = !DILocation(line: 2272, column: 49, scope: !1435)
!11556 = !DILocation(line: 2272, column: 14, scope: !1435)
!11557 = !DILocation(line: 2272, column: 12, scope: !1435)
!11558 = !DILocation(line: 2273, column: 9, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2273, column: 9)
!11560 = !DILocation(line: 2273, column: 16, scope: !11559)
!11561 = !DILocation(line: 2273, column: 9, scope: !1435)
!11562 = !DILocation(line: 2274, column: 9, scope: !11559)
!11563 = !DILocation(line: 2276, column: 9, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2276, column: 9)
!11565 = !DILocation(line: 2276, column: 15, scope: !11564)
!11566 = !DILocation(line: 2276, column: 23, scope: !11564)
!11567 = !DILocation(line: 2276, column: 37, scope: !11564)
!11568 = !DILocation(line: 2276, column: 40, scope: !11569)
!11569 = !DILexicalBlockFile(scope: !11564, file: !13, discriminator: 1)
!11570 = !DILocation(line: 2276, column: 46, scope: !11564)
!11571 = !DILocation(line: 2276, column: 55, scope: !11564)
!11572 = !DILocation(line: 2276, column: 9, scope: !1435)
!11573 = !DILocation(line: 2278, column: 16, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11564, file: !13, line: 2276, column: 70)
!11575 = !DILocation(line: 2278, column: 9, scope: !11574)
!11576 = !DILocation(line: 2284, column: 38, scope: !1435)
!11577 = !DILocation(line: 2284, column: 24, scope: !1435)
!11578 = !DILocation(line: 2284, column: 12, scope: !1435)
!11579 = !DILocation(line: 2284, column: 22, scope: !1435)
!11580 = !DILocation(line: 2286, column: 5, scope: !1435)
!11581 = !DILocation(line: 2286, column: 10, scope: !11582)
!11582 = !DILexicalBlockFile(scope: !1465, file: !13, discriminator: 1)
!11583 = !DILocation(line: 2286, column: 20, scope: !1465)
!11584 = !DILocation(line: 2286, column: 50, scope: !1465)
!11585 = !DILocation(line: 2286, column: 67, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !1465, file: !13, line: 2286, column: 64)
!11587 = !DILocation(line: 2286, column: 84, scope: !11586)
!11588 = !DILocation(line: 2286, column: 64, scope: !11586)
!11589 = !DILocation(line: 2286, column: 94, scope: !11586)
!11590 = !DILocation(line: 2286, column: 64, scope: !1465)
!11591 = !DILocation(line: 2286, column: 64, scope: !11592)
!11592 = !DILexicalBlockFile(scope: !1465, file: !13, discriminator: 2)
!11593 = !DILocation(line: 2286, column: 125, scope: !11594)
!11594 = !DILexicalBlockFile(scope: !11586, file: !13, discriminator: 3)
!11595 = !DILocation(line: 2286, column: 143, scope: !11586)
!11596 = !DILocation(line: 2286, column: 153, scope: !11586)
!11597 = !DILocation(line: 2286, column: 178, scope: !11586)
!11598 = !DILocation(line: 2286, column: 109, scope: !11586)
!11599 = !DILocation(line: 2286, column: 197, scope: !11550)
!11600 = !DILocation(line: 2286, column: 197, scope: !1465)
!11601 = !DILocation(line: 2286, column: 197, scope: !11602)
!11602 = !DILexicalBlockFile(scope: !1465, file: !13, discriminator: 5)
!11603 = !DILocation(line: 2287, column: 9, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2287, column: 9)
!11605 = !DILocation(line: 2287, column: 9, scope: !1435)
!11606 = !DILocation(line: 2288, column: 9, scope: !11604)
!11607 = !DILocation(line: 2291, column: 29, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2291, column: 9)
!11609 = !DILocation(line: 2291, column: 35, scope: !11608)
!11610 = !DILocation(line: 2291, column: 61, scope: !11608)
!11611 = !DILocation(line: 2291, column: 10, scope: !11608)
!11612 = !DILocation(line: 2291, column: 9, scope: !1435)
!11613 = !DILocation(line: 2292, column: 9, scope: !11608)
!11614 = !DILocation(line: 2296, column: 56, scope: !1435)
!11615 = !DILocation(line: 2296, column: 41, scope: !1435)
!11616 = !DILocation(line: 2296, column: 70, scope: !1435)
!11617 = !DILocation(line: 2296, column: 12, scope: !1435)
!11618 = !DILocation(line: 2296, column: 22, scope: !1435)
!11619 = !DILocation(line: 2299, column: 9, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2299, column: 9)
!11621 = !DILocation(line: 2299, column: 15, scope: !11620)
!11622 = !DILocation(line: 2299, column: 34, scope: !11620)
!11623 = !DILocation(line: 2299, column: 9, scope: !1435)
!11624 = !DILocation(line: 2301, column: 16, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11620, file: !13, line: 2299, column: 40)
!11626 = !DILocation(line: 2301, column: 9, scope: !11625)
!11627 = !DILocation(line: 2304, column: 21, scope: !1435)
!11628 = !DILocation(line: 2304, column: 27, scope: !1435)
!11629 = !DILocation(line: 2304, column: 19, scope: !1435)
!11630 = !DILocation(line: 2307, column: 46, scope: !1435)
!11631 = !DILocation(line: 2307, column: 52, scope: !1435)
!11632 = !DILocation(line: 2308, column: 46, scope: !1435)
!11633 = !DILocation(line: 2307, column: 19, scope: !1435)
!11634 = !DILocation(line: 2307, column: 17, scope: !1435)
!11635 = !DILocation(line: 2309, column: 9, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2309, column: 9)
!11637 = !DILocation(line: 2309, column: 21, scope: !11636)
!11638 = !DILocation(line: 2309, column: 9, scope: !1435)
!11639 = !DILocation(line: 2310, column: 9, scope: !11636)
!11640 = !DILocation(line: 2335, column: 32, scope: !1435)
!11641 = !DILocation(line: 2335, column: 38, scope: !1435)
!11642 = !DILocation(line: 2335, column: 49, scope: !1435)
!11643 = !DILocation(line: 2335, column: 47, scope: !1435)
!11644 = !DILocation(line: 2335, column: 18, scope: !1435)
!11645 = !DILocation(line: 2335, column: 16, scope: !1435)
!11646 = !DILocation(line: 2336, column: 15, scope: !1435)
!11647 = !DILocation(line: 2338, column: 48, scope: !1435)
!11648 = !DILocation(line: 2338, column: 30, scope: !1435)
!11649 = !DILocation(line: 2338, column: 62, scope: !1435)
!11650 = !DILocation(line: 2338, column: 28, scope: !1435)
!11651 = !DILocation(line: 2338, column: 11, scope: !1435)
!11652 = !DILocation(line: 2339, column: 5, scope: !1435)
!11653 = !DILocation(line: 2339, column: 12, scope: !11654)
!11654 = !DILexicalBlockFile(scope: !11655, file: !13, discriminator: 2)
!11655 = !DILexicalBlockFile(scope: !1435, file: !13, discriminator: 1)
!11656 = !DILocation(line: 2339, column: 23, scope: !1435)
!11657 = !DILocation(line: 2341, column: 45, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !1468, file: !13, line: 2341, column: 13)
!11659 = !DILocation(line: 2341, column: 13, scope: !11658)
!11660 = !DILocation(line: 2341, column: 60, scope: !11658)
!11661 = !DILocation(line: 2341, column: 13, scope: !1468)
!11662 = !DILocation(line: 2342, column: 13, scope: !11658)
!11663 = !DILocation(line: 2343, column: 9, scope: !1468)
!11664 = !DILocation(line: 2343, column: 14, scope: !11665)
!11665 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 1)
!11666 = !DILocation(line: 2343, column: 24, scope: !1467)
!11667 = !DILocation(line: 2343, column: 65, scope: !1467)
!11668 = !DILocation(line: 2343, column: 71, scope: !1467)
!11669 = !DILocation(line: 2343, column: 100, scope: !1467)
!11670 = !DILocation(line: 2343, column: 107, scope: !1467)
!11671 = !DILocation(line: 2343, column: 35, scope: !1467)
!11672 = !DILocation(line: 2343, column: 138, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !1467, file: !13, line: 2343, column: 124)
!11674 = !DILocation(line: 2343, column: 124, scope: !11673)
!11675 = !DILocation(line: 2343, column: 148, scope: !11673)
!11676 = !DILocation(line: 2343, column: 124, scope: !1467)
!11677 = !DILocation(line: 2343, column: 153, scope: !11673)
!11678 = !DILocation(line: 2343, column: 228, scope: !11679)
!11679 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 2)
!11680 = !DILocation(line: 2343, column: 210, scope: !1467)
!11681 = !DILocation(line: 2343, column: 240, scope: !1467)
!11682 = !DILocation(line: 2343, column: 178, scope: !1467)
!11683 = !DILocation(line: 2343, column: 249, scope: !1467)
!11684 = !DILocation(line: 2343, column: 254, scope: !11685)
!11685 = !DILexicalBlockFile(scope: !1470, file: !13, discriminator: 4)
!11686 = !DILocation(line: 2343, column: 264, scope: !1470)
!11687 = !DILocation(line: 2343, column: 294, scope: !1470)
!11688 = !DILocation(line: 2343, column: 313, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !1470, file: !13, line: 2343, column: 310)
!11690 = !DILocation(line: 2343, column: 330, scope: !11689)
!11691 = !DILocation(line: 2343, column: 310, scope: !11689)
!11692 = !DILocation(line: 2343, column: 340, scope: !11689)
!11693 = !DILocation(line: 2343, column: 310, scope: !1470)
!11694 = !DILocation(line: 2343, column: 310, scope: !11695)
!11695 = !DILexicalBlockFile(scope: !1470, file: !13, discriminator: 5)
!11696 = !DILocation(line: 2343, column: 371, scope: !11697)
!11697 = !DILexicalBlockFile(scope: !11689, file: !13, discriminator: 6)
!11698 = !DILocation(line: 2343, column: 389, scope: !11689)
!11699 = !DILocation(line: 2343, column: 399, scope: !11689)
!11700 = !DILocation(line: 2343, column: 424, scope: !11689)
!11701 = !DILocation(line: 2343, column: 355, scope: !11689)
!11702 = !DILocation(line: 2343, column: 443, scope: !11703)
!11703 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 7)
!11704 = !DILocation(line: 2343, column: 443, scope: !1470)
!11705 = !DILocation(line: 2343, column: 443, scope: !11706)
!11706 = !DILexicalBlockFile(scope: !1470, file: !13, discriminator: 8)
!11707 = !DILocation(line: 2343, column: 456, scope: !11708)
!11708 = !DILexicalBlockFile(scope: !1468, file: !13, discriminator: 9)
!11709 = !DILocation(line: 2343, column: 456, scope: !11710)
!11710 = !DILexicalBlockFile(scope: !11711, file: !13, discriminator: 10)
!11711 = !DILexicalBlockFile(scope: !1468, file: !13, discriminator: 3)
!11712 = !DILocation(line: 2343, column: 456, scope: !1467)
!11713 = !DILocation(line: 2343, column: 456, scope: !11714)
!11714 = !DILexicalBlockFile(scope: !1467, file: !13, discriminator: 11)
!11715 = !DILocation(line: 2344, column: 13, scope: !1474)
!11716 = !DILocation(line: 2344, column: 30, scope: !1474)
!11717 = !DILocation(line: 2344, column: 27, scope: !1474)
!11718 = !DILocation(line: 2344, column: 13, scope: !1468)
!11719 = !DILocation(line: 2345, column: 13, scope: !1473)
!11720 = !DILocation(line: 2345, column: 18, scope: !11721)
!11721 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 1)
!11722 = !DILocation(line: 2345, column: 28, scope: !1472)
!11723 = !DILocation(line: 2345, column: 64, scope: !1472)
!11724 = !DILocation(line: 2345, column: 70, scope: !1472)
!11725 = !DILocation(line: 2345, column: 79, scope: !1472)
!11726 = !DILocation(line: 2345, column: 37, scope: !1472)
!11727 = !DILocation(line: 2345, column: 116, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !1472, file: !13, line: 2345, column: 116)
!11729 = !DILocation(line: 2345, column: 123, scope: !11728)
!11730 = !DILocation(line: 2345, column: 116, scope: !1472)
!11731 = !DILocation(line: 2345, column: 138, scope: !11728)
!11732 = !DILocation(line: 2345, column: 173, scope: !11733)
!11733 = !DILexicalBlockFile(scope: !1478, file: !13, discriminator: 2)
!11734 = !DILocation(line: 2345, column: 154, scope: !1478)
!11735 = !DILocation(line: 2345, column: 153, scope: !1472)
!11736 = !DILocation(line: 2345, column: 235, scope: !11737)
!11737 = !DILexicalBlockFile(scope: !1477, file: !13, discriminator: 5)
!11738 = !DILocation(line: 2345, column: 240, scope: !11739)
!11739 = !DILexicalBlockFile(scope: !1476, file: !13, discriminator: 6)
!11740 = !DILocation(line: 2345, column: 250, scope: !1476)
!11741 = !DILocation(line: 2345, column: 280, scope: !1476)
!11742 = !DILocation(line: 2345, column: 297, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !1476, file: !13, line: 2345, column: 294)
!11744 = !DILocation(line: 2345, column: 314, scope: !11743)
!11745 = !DILocation(line: 2345, column: 294, scope: !11743)
!11746 = !DILocation(line: 2345, column: 324, scope: !11743)
!11747 = !DILocation(line: 2345, column: 294, scope: !1476)
!11748 = !DILocation(line: 2345, column: 294, scope: !11749)
!11749 = !DILexicalBlockFile(scope: !1476, file: !13, discriminator: 7)
!11750 = !DILocation(line: 2345, column: 355, scope: !11751)
!11751 = !DILexicalBlockFile(scope: !11743, file: !13, discriminator: 8)
!11752 = !DILocation(line: 2345, column: 373, scope: !11743)
!11753 = !DILocation(line: 2345, column: 383, scope: !11743)
!11754 = !DILocation(line: 2345, column: 408, scope: !11743)
!11755 = !DILocation(line: 2345, column: 339, scope: !11743)
!11756 = !DILocation(line: 2345, column: 427, scope: !11757)
!11757 = !DILexicalBlockFile(scope: !1477, file: !13, discriminator: 9)
!11758 = !DILocation(line: 2345, column: 427, scope: !1476)
!11759 = !DILocation(line: 2345, column: 427, scope: !11760)
!11760 = !DILexicalBlockFile(scope: !1476, file: !13, discriminator: 10)
!11761 = !DILocation(line: 2345, column: 440, scope: !1477)
!11762 = !DILocation(line: 2345, column: 453, scope: !11763)
!11763 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 4)
!11764 = !DILocation(line: 2345, column: 458, scope: !11765)
!11765 = !DILexicalBlockFile(scope: !1480, file: !13, discriminator: 12)
!11766 = !DILocation(line: 2345, column: 468, scope: !1480)
!11767 = !DILocation(line: 2345, column: 498, scope: !1480)
!11768 = !DILocation(line: 2345, column: 515, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !1480, file: !13, line: 2345, column: 512)
!11770 = !DILocation(line: 2345, column: 532, scope: !11769)
!11771 = !DILocation(line: 2345, column: 512, scope: !11769)
!11772 = !DILocation(line: 2345, column: 542, scope: !11769)
!11773 = !DILocation(line: 2345, column: 512, scope: !1480)
!11774 = !DILocation(line: 2345, column: 512, scope: !11775)
!11775 = !DILexicalBlockFile(scope: !1480, file: !13, discriminator: 13)
!11776 = !DILocation(line: 2345, column: 573, scope: !11777)
!11777 = !DILexicalBlockFile(scope: !11769, file: !13, discriminator: 14)
!11778 = !DILocation(line: 2345, column: 591, scope: !11769)
!11779 = !DILocation(line: 2345, column: 601, scope: !11769)
!11780 = !DILocation(line: 2345, column: 626, scope: !11769)
!11781 = !DILocation(line: 2345, column: 557, scope: !11769)
!11782 = !DILocation(line: 2345, column: 645, scope: !11783)
!11783 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 15)
!11784 = !DILocation(line: 2345, column: 645, scope: !1480)
!11785 = !DILocation(line: 2345, column: 645, scope: !11786)
!11786 = !DILexicalBlockFile(scope: !1480, file: !13, discriminator: 16)
!11787 = !DILocation(line: 2345, column: 658, scope: !11788)
!11788 = !DILexicalBlockFile(scope: !1473, file: !13, discriminator: 17)
!11789 = !DILocation(line: 2345, column: 658, scope: !11790)
!11790 = !DILexicalBlockFile(scope: !11791, file: !13, discriminator: 18)
!11791 = !DILexicalBlockFile(scope: !11792, file: !13, discriminator: 11)
!11792 = !DILexicalBlockFile(scope: !1473, file: !13, discriminator: 3)
!11793 = !DILocation(line: 2345, column: 658, scope: !1472)
!11794 = !DILocation(line: 2345, column: 658, scope: !11795)
!11795 = !DILexicalBlockFile(scope: !1472, file: !13, discriminator: 19)
!11796 = !DILocation(line: 2346, column: 17, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !1473, file: !13, line: 2346, column: 17)
!11798 = !DILocation(line: 2346, column: 32, scope: !11797)
!11799 = !DILocation(line: 2346, column: 17, scope: !1473)
!11800 = !DILocation(line: 2348, column: 36, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11797, file: !13, line: 2346, column: 38)
!11802 = !DILocation(line: 2348, column: 24, scope: !11801)
!11803 = !DILocation(line: 2348, column: 34, scope: !11801)
!11804 = !DILocation(line: 2349, column: 34, scope: !11801)
!11805 = !DILocation(line: 2349, column: 31, scope: !11801)
!11806 = !DILocation(line: 2350, column: 17, scope: !11801)
!11807 = !DILocation(line: 2353, column: 27, scope: !1473)
!11808 = !DILocation(line: 2353, column: 24, scope: !1473)
!11809 = !DILocation(line: 2354, column: 23, scope: !1473)
!11810 = !DILocation(line: 2355, column: 9, scope: !1473)
!11811 = !DILocation(line: 2358, column: 27, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !1474, file: !13, line: 2356, column: 14)
!11813 = !DILocation(line: 2358, column: 24, scope: !11812)
!11814 = !DILocation(line: 2359, column: 23, scope: !11812)
!11815 = !DILocation(line: 2362, column: 9, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2362, column: 9)
!11817 = !DILocation(line: 2362, column: 20, scope: !11816)
!11818 = !DILocation(line: 2362, column: 9, scope: !1435)
!11819 = !DILocation(line: 2363, column: 20, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11816, file: !13, line: 2362, column: 26)
!11821 = !DILocation(line: 2364, column: 45, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11820, file: !13, line: 2364, column: 13)
!11823 = !DILocation(line: 2364, column: 13, scope: !11822)
!11824 = !DILocation(line: 2364, column: 60, scope: !11822)
!11825 = !DILocation(line: 2364, column: 13, scope: !11820)
!11826 = !DILocation(line: 2365, column: 13, scope: !11822)
!11827 = !DILocation(line: 2366, column: 5, scope: !11820)
!11828 = !DILocation(line: 2369, column: 25, scope: !1435)
!11829 = !DILocation(line: 2369, column: 12, scope: !1435)
!11830 = !DILocation(line: 2369, column: 22, scope: !1435)
!11831 = !DILocation(line: 2370, column: 34, scope: !1435)
!11832 = !DILocation(line: 2370, column: 28, scope: !1435)
!11833 = !DILocation(line: 2370, column: 12, scope: !1435)
!11834 = !DILocation(line: 2370, column: 26, scope: !1435)
!11835 = !DILocation(line: 2371, column: 9, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2371, column: 9)
!11837 = !DILocation(line: 2371, column: 23, scope: !11836)
!11838 = !DILocation(line: 2371, column: 9, scope: !1435)
!11839 = !DILocation(line: 2372, column: 9, scope: !11836)
!11840 = !DILocation(line: 2380, column: 19, scope: !1435)
!11841 = !DILocation(line: 2381, column: 48, scope: !1435)
!11842 = !DILocation(line: 2381, column: 30, scope: !1435)
!11843 = !DILocation(line: 2381, column: 62, scope: !1435)
!11844 = !DILocation(line: 2381, column: 28, scope: !1435)
!11845 = !DILocation(line: 2381, column: 11, scope: !1435)
!11846 = !DILocation(line: 2382, column: 17, scope: !1435)
!11847 = !DILocation(line: 2382, column: 56, scope: !1435)
!11848 = !DILocation(line: 2382, column: 41, scope: !1435)
!11849 = !DILocation(line: 2382, column: 70, scope: !1435)
!11850 = !DILocation(line: 2382, column: 23, scope: !1435)
!11851 = !DILocation(line: 2382, column: 15, scope: !1435)
!11852 = !DILocation(line: 2383, column: 14, scope: !1435)
!11853 = !DILocation(line: 2383, column: 11, scope: !1435)
!11854 = !DILocation(line: 2384, column: 5, scope: !1435)
!11855 = !DILocation(line: 2384, column: 12, scope: !11654)
!11856 = !DILocation(line: 2384, column: 20, scope: !1435)
!11857 = !DILocation(line: 2384, column: 18, scope: !1435)
!11858 = !DILocation(line: 2385, column: 9, scope: !1482)
!11859 = !DILocation(line: 2385, column: 20, scope: !1482)
!11860 = !DILocation(line: 2387, column: 9, scope: !1482)
!11861 = !DILocation(line: 2387, column: 14, scope: !11862)
!11862 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 1)
!11863 = !DILocation(line: 2387, column: 24, scope: !1484)
!11864 = !DILocation(line: 2387, column: 65, scope: !1484)
!11865 = !DILocation(line: 2387, column: 71, scope: !1484)
!11866 = !DILocation(line: 2387, column: 100, scope: !1484)
!11867 = !DILocation(line: 2387, column: 35, scope: !1484)
!11868 = !DILocation(line: 2387, column: 141, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !1484, file: !13, line: 2387, column: 127)
!11870 = !DILocation(line: 2387, column: 127, scope: !11869)
!11871 = !DILocation(line: 2387, column: 151, scope: !11869)
!11872 = !DILocation(line: 2387, column: 127, scope: !1484)
!11873 = !DILocation(line: 2387, column: 156, scope: !11869)
!11874 = !DILocation(line: 2387, column: 219, scope: !11875)
!11875 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 2)
!11876 = !DILocation(line: 2387, column: 201, scope: !1484)
!11877 = !DILocation(line: 2387, column: 231, scope: !1484)
!11878 = !DILocation(line: 2387, column: 169, scope: !1484)
!11879 = !DILocation(line: 2387, column: 240, scope: !1484)
!11880 = !DILocation(line: 2387, column: 245, scope: !11881)
!11881 = !DILexicalBlockFile(scope: !1486, file: !13, discriminator: 4)
!11882 = !DILocation(line: 2387, column: 255, scope: !1486)
!11883 = !DILocation(line: 2387, column: 285, scope: !1486)
!11884 = !DILocation(line: 2387, column: 304, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !1486, file: !13, line: 2387, column: 301)
!11886 = !DILocation(line: 2387, column: 321, scope: !11885)
!11887 = !DILocation(line: 2387, column: 301, scope: !11885)
!11888 = !DILocation(line: 2387, column: 331, scope: !11885)
!11889 = !DILocation(line: 2387, column: 301, scope: !1486)
!11890 = !DILocation(line: 2387, column: 301, scope: !11891)
!11891 = !DILexicalBlockFile(scope: !1486, file: !13, discriminator: 5)
!11892 = !DILocation(line: 2387, column: 362, scope: !11893)
!11893 = !DILexicalBlockFile(scope: !11885, file: !13, discriminator: 6)
!11894 = !DILocation(line: 2387, column: 380, scope: !11885)
!11895 = !DILocation(line: 2387, column: 390, scope: !11885)
!11896 = !DILocation(line: 2387, column: 415, scope: !11885)
!11897 = !DILocation(line: 2387, column: 346, scope: !11885)
!11898 = !DILocation(line: 2387, column: 434, scope: !11899)
!11899 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 7)
!11900 = !DILocation(line: 2387, column: 434, scope: !1486)
!11901 = !DILocation(line: 2387, column: 434, scope: !11902)
!11902 = !DILexicalBlockFile(scope: !1486, file: !13, discriminator: 8)
!11903 = !DILocation(line: 2387, column: 447, scope: !11904)
!11904 = !DILexicalBlockFile(scope: !1482, file: !13, discriminator: 9)
!11905 = !DILocation(line: 2387, column: 447, scope: !11906)
!11906 = !DILexicalBlockFile(scope: !11907, file: !13, discriminator: 10)
!11907 = !DILexicalBlockFile(scope: !1482, file: !13, discriminator: 3)
!11908 = !DILocation(line: 2387, column: 447, scope: !1484)
!11909 = !DILocation(line: 2387, column: 447, scope: !11910)
!11910 = !DILexicalBlockFile(scope: !1484, file: !13, discriminator: 11)
!11911 = !DILocation(line: 2389, column: 26, scope: !1482)
!11912 = !DILocation(line: 2389, column: 23, scope: !1482)
!11913 = !DILocation(line: 2390, column: 16, scope: !1482)
!11914 = !DILocation(line: 2390, column: 30, scope: !1482)
!11915 = !DILocation(line: 2391, column: 9, scope: !1482)
!11916 = !DILocation(line: 2391, column: 14, scope: !11917)
!11917 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 1)
!11918 = !DILocation(line: 2391, column: 24, scope: !1488)
!11919 = !DILocation(line: 2391, column: 60, scope: !1488)
!11920 = !DILocation(line: 2391, column: 66, scope: !1488)
!11921 = !DILocation(line: 2391, column: 75, scope: !1488)
!11922 = !DILocation(line: 2391, column: 33, scope: !1488)
!11923 = !DILocation(line: 2391, column: 112, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !1488, file: !13, line: 2391, column: 112)
!11925 = !DILocation(line: 2391, column: 119, scope: !11924)
!11926 = !DILocation(line: 2391, column: 112, scope: !1488)
!11927 = !DILocation(line: 2391, column: 134, scope: !11924)
!11928 = !DILocation(line: 2391, column: 169, scope: !11929)
!11929 = !DILexicalBlockFile(scope: !1492, file: !13, discriminator: 2)
!11930 = !DILocation(line: 2391, column: 150, scope: !1492)
!11931 = !DILocation(line: 2391, column: 149, scope: !1488)
!11932 = !DILocation(line: 2391, column: 231, scope: !11933)
!11933 = !DILexicalBlockFile(scope: !1491, file: !13, discriminator: 5)
!11934 = !DILocation(line: 2391, column: 236, scope: !11935)
!11935 = !DILexicalBlockFile(scope: !1490, file: !13, discriminator: 6)
!11936 = !DILocation(line: 2391, column: 246, scope: !1490)
!11937 = !DILocation(line: 2391, column: 276, scope: !1490)
!11938 = !DILocation(line: 2391, column: 293, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !1490, file: !13, line: 2391, column: 290)
!11940 = !DILocation(line: 2391, column: 310, scope: !11939)
!11941 = !DILocation(line: 2391, column: 290, scope: !11939)
!11942 = !DILocation(line: 2391, column: 320, scope: !11939)
!11943 = !DILocation(line: 2391, column: 290, scope: !1490)
!11944 = !DILocation(line: 2391, column: 290, scope: !11945)
!11945 = !DILexicalBlockFile(scope: !1490, file: !13, discriminator: 7)
!11946 = !DILocation(line: 2391, column: 351, scope: !11947)
!11947 = !DILexicalBlockFile(scope: !11939, file: !13, discriminator: 8)
!11948 = !DILocation(line: 2391, column: 369, scope: !11939)
!11949 = !DILocation(line: 2391, column: 379, scope: !11939)
!11950 = !DILocation(line: 2391, column: 404, scope: !11939)
!11951 = !DILocation(line: 2391, column: 335, scope: !11939)
!11952 = !DILocation(line: 2391, column: 423, scope: !11953)
!11953 = !DILexicalBlockFile(scope: !1491, file: !13, discriminator: 9)
!11954 = !DILocation(line: 2391, column: 423, scope: !1490)
!11955 = !DILocation(line: 2391, column: 423, scope: !11956)
!11956 = !DILexicalBlockFile(scope: !1490, file: !13, discriminator: 10)
!11957 = !DILocation(line: 2391, column: 436, scope: !1491)
!11958 = !DILocation(line: 2391, column: 449, scope: !11959)
!11959 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 4)
!11960 = !DILocation(line: 2391, column: 454, scope: !11961)
!11961 = !DILexicalBlockFile(scope: !1494, file: !13, discriminator: 12)
!11962 = !DILocation(line: 2391, column: 464, scope: !1494)
!11963 = !DILocation(line: 2391, column: 494, scope: !1494)
!11964 = !DILocation(line: 2391, column: 511, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !1494, file: !13, line: 2391, column: 508)
!11966 = !DILocation(line: 2391, column: 528, scope: !11965)
!11967 = !DILocation(line: 2391, column: 508, scope: !11965)
!11968 = !DILocation(line: 2391, column: 538, scope: !11965)
!11969 = !DILocation(line: 2391, column: 508, scope: !1494)
!11970 = !DILocation(line: 2391, column: 508, scope: !11971)
!11971 = !DILexicalBlockFile(scope: !1494, file: !13, discriminator: 13)
!11972 = !DILocation(line: 2391, column: 569, scope: !11973)
!11973 = !DILexicalBlockFile(scope: !11965, file: !13, discriminator: 14)
!11974 = !DILocation(line: 2391, column: 587, scope: !11965)
!11975 = !DILocation(line: 2391, column: 597, scope: !11965)
!11976 = !DILocation(line: 2391, column: 622, scope: !11965)
!11977 = !DILocation(line: 2391, column: 553, scope: !11965)
!11978 = !DILocation(line: 2391, column: 641, scope: !11979)
!11979 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 15)
!11980 = !DILocation(line: 2391, column: 641, scope: !1494)
!11981 = !DILocation(line: 2391, column: 641, scope: !11982)
!11982 = !DILexicalBlockFile(scope: !1494, file: !13, discriminator: 16)
!11983 = !DILocation(line: 2391, column: 654, scope: !11984)
!11984 = !DILexicalBlockFile(scope: !1482, file: !13, discriminator: 17)
!11985 = !DILocation(line: 2391, column: 654, scope: !11986)
!11986 = !DILexicalBlockFile(scope: !11987, file: !13, discriminator: 18)
!11987 = !DILexicalBlockFile(scope: !11907, file: !13, discriminator: 11)
!11988 = !DILocation(line: 2391, column: 654, scope: !1488)
!11989 = !DILocation(line: 2391, column: 654, scope: !11990)
!11990 = !DILexicalBlockFile(scope: !1488, file: !13, discriminator: 19)
!11991 = !DILocation(line: 2393, column: 13, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2393, column: 13)
!11993 = !DILocation(line: 2393, column: 28, scope: !11992)
!11994 = !DILocation(line: 2393, column: 33, scope: !11992)
!11995 = !DILocation(line: 2393, column: 36, scope: !11996)
!11996 = !DILexicalBlockFile(scope: !11992, file: !13, discriminator: 1)
!11997 = !DILocation(line: 2393, column: 53, scope: !11992)
!11998 = !DILocation(line: 2393, column: 50, scope: !11992)
!11999 = !DILocation(line: 2393, column: 13, scope: !1482)
!12000 = !DILocation(line: 2395, column: 40, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11992, file: !13, line: 2393, column: 68)
!12002 = !DILocation(line: 2395, column: 33, scope: !12001)
!12003 = !DILocation(line: 2395, column: 20, scope: !12001)
!12004 = !DILocation(line: 2395, column: 30, scope: !12001)
!12005 = !DILocation(line: 2396, column: 30, scope: !12001)
!12006 = !DILocation(line: 2396, column: 27, scope: !12001)
!12007 = !DILocation(line: 2397, column: 32, scope: !12001)
!12008 = !DILocation(line: 2397, column: 20, scope: !12001)
!12009 = !DILocation(line: 2397, column: 30, scope: !12001)
!12010 = !DILocation(line: 2398, column: 20, scope: !12001)
!12011 = !DILocation(line: 2398, column: 34, scope: !12001)
!12012 = !DILocation(line: 2399, column: 27, scope: !12001)
!12013 = !DILocation(line: 2400, column: 9, scope: !12001)
!12014 = !DILocation(line: 2401, column: 13, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !1482, file: !13, line: 2401, column: 13)
!12016 = !DILocation(line: 2401, column: 30, scope: !12015)
!12017 = !DILocation(line: 2401, column: 27, scope: !12015)
!12018 = !DILocation(line: 2401, column: 13, scope: !1482)
!12019 = !DILocation(line: 2402, column: 13, scope: !12015)
!12020 = !DILocation(line: 2403, column: 14, scope: !1482)
!12021 = !DILocation(line: 2404, column: 5, scope: !1435)
!12022 = !DILocation(line: 2404, column: 5, scope: !11655)
!12023 = !DILocation(line: 2405, column: 9, scope: !1497)
!12024 = !DILocation(line: 2405, column: 18, scope: !1497)
!12025 = !DILocation(line: 2405, column: 15, scope: !1497)
!12026 = !DILocation(line: 2405, column: 9, scope: !1435)
!12027 = !DILocation(line: 2407, column: 9, scope: !1496)
!12028 = !DILocation(line: 2407, column: 19, scope: !1496)
!12029 = !DILocation(line: 2408, column: 13, scope: !1496)
!12030 = !DILocation(line: 2408, column: 19, scope: !1496)
!12031 = !DILocation(line: 2407, column: 29, scope: !1496)
!12032 = !DILocation(line: 2409, column: 27, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !1496, file: !13, line: 2409, column: 13)
!12034 = !DILocation(line: 2409, column: 13, scope: !12033)
!12035 = !DILocation(line: 2409, column: 36, scope: !12033)
!12036 = !DILocation(line: 2409, column: 13, scope: !1496)
!12037 = !DILocation(line: 2410, column: 13, scope: !12033)
!12038 = !DILocation(line: 2411, column: 74, scope: !1496)
!12039 = !DILocation(line: 2411, column: 56, scope: !1496)
!12040 = !DILocation(line: 2411, column: 85, scope: !1496)
!12041 = !DILocation(line: 2411, column: 23, scope: !1496)
!12042 = !DILocation(line: 2412, column: 9, scope: !1496)
!12043 = !DILocation(line: 2412, column: 14, scope: !12044)
!12044 = !DILexicalBlockFile(scope: !1499, file: !13, discriminator: 1)
!12045 = !DILocation(line: 2412, column: 24, scope: !1499)
!12046 = !DILocation(line: 2412, column: 54, scope: !1499)
!12047 = !DILocation(line: 2412, column: 72, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !1499, file: !13, line: 2412, column: 69)
!12049 = !DILocation(line: 2412, column: 89, scope: !12048)
!12050 = !DILocation(line: 2412, column: 69, scope: !12048)
!12051 = !DILocation(line: 2412, column: 99, scope: !12048)
!12052 = !DILocation(line: 2412, column: 69, scope: !1499)
!12053 = !DILocation(line: 2412, column: 69, scope: !12054)
!12054 = !DILexicalBlockFile(scope: !1499, file: !13, discriminator: 2)
!12055 = !DILocation(line: 2412, column: 130, scope: !12056)
!12056 = !DILexicalBlockFile(scope: !12048, file: !13, discriminator: 3)
!12057 = !DILocation(line: 2412, column: 148, scope: !12048)
!12058 = !DILocation(line: 2412, column: 158, scope: !12048)
!12059 = !DILocation(line: 2412, column: 183, scope: !12048)
!12060 = !DILocation(line: 2412, column: 114, scope: !12048)
!12061 = !DILocation(line: 2412, column: 202, scope: !12062)
!12062 = !DILexicalBlockFile(scope: !1496, file: !13, discriminator: 4)
!12063 = !DILocation(line: 2412, column: 202, scope: !1499)
!12064 = !DILocation(line: 2412, column: 202, scope: !12065)
!12065 = !DILexicalBlockFile(scope: !1499, file: !13, discriminator: 5)
!12066 = !DILocation(line: 2413, column: 16, scope: !1496)
!12067 = !DILocation(line: 2413, column: 25, scope: !1496)
!12068 = !DILocation(line: 2415, column: 13, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !1496, file: !13, line: 2415, column: 13)
!12070 = !DILocation(line: 2415, column: 29, scope: !12069)
!12071 = !DILocation(line: 2415, column: 27, scope: !12069)
!12072 = !DILocation(line: 2415, column: 13, scope: !1496)
!12073 = !DILocation(line: 2416, column: 29, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12069, file: !13, line: 2415, column: 44)
!12075 = !DILocation(line: 2416, column: 13, scope: !12074)
!12076 = !DILocation(line: 2418, column: 13, scope: !12074)
!12077 = !DILocation(line: 2420, column: 5, scope: !1497)
!12078 = !DILocation(line: 2420, column: 5, scope: !12079)
!12079 = !DILexicalBlockFile(scope: !1497, file: !13, discriminator: 1)
!12080 = !DILocation(line: 2420, column: 5, scope: !1496)
!12081 = !DILocation(line: 2405, column: 18, scope: !12079)
!12082 = !DILocation(line: 2423, column: 40, scope: !1435)
!12083 = !DILocation(line: 2423, column: 46, scope: !1435)
!12084 = !DILocation(line: 2423, column: 78, scope: !1435)
!12085 = !DILocation(line: 2423, column: 11, scope: !1435)
!12086 = !DILocation(line: 2423, column: 9, scope: !1435)
!12087 = !DILocation(line: 2424, column: 5, scope: !1435)
!12088 = !DILocation(line: 2424, column: 10, scope: !12089)
!12089 = !DILexicalBlockFile(scope: !1501, file: !13, discriminator: 1)
!12090 = !DILocation(line: 2424, column: 20, scope: !1501)
!12091 = !DILocation(line: 2424, column: 50, scope: !1501)
!12092 = !DILocation(line: 2424, column: 72, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !1501, file: !13, line: 2424, column: 69)
!12094 = !DILocation(line: 2424, column: 89, scope: !12093)
!12095 = !DILocation(line: 2424, column: 69, scope: !12093)
!12096 = !DILocation(line: 2424, column: 99, scope: !12093)
!12097 = !DILocation(line: 2424, column: 69, scope: !1501)
!12098 = !DILocation(line: 2424, column: 69, scope: !12099)
!12099 = !DILexicalBlockFile(scope: !1501, file: !13, discriminator: 2)
!12100 = !DILocation(line: 2424, column: 130, scope: !12101)
!12101 = !DILexicalBlockFile(scope: !12093, file: !13, discriminator: 3)
!12102 = !DILocation(line: 2424, column: 148, scope: !12093)
!12103 = !DILocation(line: 2424, column: 158, scope: !12093)
!12104 = !DILocation(line: 2424, column: 183, scope: !12093)
!12105 = !DILocation(line: 2424, column: 114, scope: !12093)
!12106 = !DILocation(line: 2424, column: 202, scope: !11550)
!12107 = !DILocation(line: 2424, column: 202, scope: !1501)
!12108 = !DILocation(line: 2424, column: 202, scope: !12109)
!12109 = !DILexicalBlockFile(scope: !1501, file: !13, discriminator: 5)
!12110 = !DILocation(line: 2425, column: 9, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !1435, file: !13, line: 2425, column: 9)
!12112 = !DILocation(line: 2425, column: 13, scope: !12111)
!12113 = !DILocation(line: 2425, column: 9, scope: !1435)
!12114 = !DILocation(line: 2426, column: 9, scope: !12111)
!12115 = !DILocation(line: 2427, column: 5, scope: !1435)
!12116 = !DILocation(line: 2427, column: 10, scope: !12117)
!12117 = !DILexicalBlockFile(scope: !1503, file: !13, discriminator: 1)
!12118 = !DILocation(line: 2427, column: 20, scope: !1503)
!12119 = !DILocation(line: 2427, column: 50, scope: !1503)
!12120 = !DILocation(line: 2427, column: 64, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !1503, file: !13, line: 2427, column: 61)
!12122 = !DILocation(line: 2427, column: 81, scope: !12121)
!12123 = !DILocation(line: 2427, column: 61, scope: !12121)
!12124 = !DILocation(line: 2427, column: 91, scope: !12121)
!12125 = !DILocation(line: 2427, column: 61, scope: !1503)
!12126 = !DILocation(line: 2427, column: 61, scope: !12127)
!12127 = !DILexicalBlockFile(scope: !1503, file: !13, discriminator: 2)
!12128 = !DILocation(line: 2427, column: 122, scope: !12129)
!12129 = !DILexicalBlockFile(scope: !12121, file: !13, discriminator: 3)
!12130 = !DILocation(line: 2427, column: 140, scope: !12121)
!12131 = !DILocation(line: 2427, column: 150, scope: !12121)
!12132 = !DILocation(line: 2427, column: 175, scope: !12121)
!12133 = !DILocation(line: 2427, column: 106, scope: !12121)
!12134 = !DILocation(line: 2427, column: 194, scope: !11550)
!12135 = !DILocation(line: 2427, column: 194, scope: !1503)
!12136 = !DILocation(line: 2427, column: 194, scope: !12137)
!12137 = !DILexicalBlockFile(scope: !1503, file: !13, discriminator: 5)
!12138 = !DILocation(line: 2430, column: 34, scope: !1435)
!12139 = !DILocation(line: 2430, column: 28, scope: !1435)
!12140 = !DILocation(line: 2430, column: 12, scope: !1435)
!12141 = !DILocation(line: 2430, column: 26, scope: !1435)
!12142 = !DILocation(line: 2431, column: 12, scope: !1435)
!12143 = !DILocation(line: 2431, column: 5, scope: !1435)
!12144 = !DILocation(line: 2434, column: 9, scope: !1506)
!12145 = !DILocation(line: 2434, column: 9, scope: !1435)
!12146 = !DILocation(line: 2435, column: 9, scope: !1505)
!12147 = !DILocation(line: 2435, column: 19, scope: !1505)
!12148 = !DILocation(line: 2435, column: 26, scope: !1505)
!12149 = !DILocation(line: 2435, column: 34, scope: !1505)
!12150 = !DILocation(line: 2436, column: 9, scope: !1505)
!12151 = !DILocation(line: 2438, column: 44, scope: !1505)
!12152 = !DILocation(line: 2438, column: 50, scope: !1505)
!12153 = !DILocation(line: 2438, column: 82, scope: !1505)
!12154 = !DILocation(line: 2438, column: 15, scope: !1505)
!12155 = !DILocation(line: 2438, column: 13, scope: !1505)
!12156 = !DILocation(line: 2439, column: 9, scope: !1505)
!12157 = !DILocation(line: 2439, column: 14, scope: !12158)
!12158 = !DILexicalBlockFile(scope: !1510, file: !13, discriminator: 1)
!12159 = !DILocation(line: 2439, column: 24, scope: !1510)
!12160 = !DILocation(line: 2439, column: 54, scope: !1510)
!12161 = !DILocation(line: 2439, column: 76, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !1510, file: !13, line: 2439, column: 73)
!12163 = !DILocation(line: 2439, column: 93, scope: !12162)
!12164 = !DILocation(line: 2439, column: 73, scope: !12162)
!12165 = !DILocation(line: 2439, column: 103, scope: !12162)
!12166 = !DILocation(line: 2439, column: 73, scope: !1510)
!12167 = !DILocation(line: 2439, column: 73, scope: !12168)
!12168 = !DILexicalBlockFile(scope: !1510, file: !13, discriminator: 2)
!12169 = !DILocation(line: 2439, column: 134, scope: !12170)
!12170 = !DILexicalBlockFile(scope: !12162, file: !13, discriminator: 3)
!12171 = !DILocation(line: 2439, column: 152, scope: !12162)
!12172 = !DILocation(line: 2439, column: 162, scope: !12162)
!12173 = !DILocation(line: 2439, column: 187, scope: !12162)
!12174 = !DILocation(line: 2439, column: 118, scope: !12162)
!12175 = !DILocation(line: 2439, column: 206, scope: !12176)
!12176 = !DILexicalBlockFile(scope: !1505, file: !13, discriminator: 4)
!12177 = !DILocation(line: 2439, column: 206, scope: !1510)
!12178 = !DILocation(line: 2439, column: 206, scope: !12179)
!12179 = !DILexicalBlockFile(scope: !1510, file: !13, discriminator: 5)
!12180 = !DILocation(line: 2440, column: 13, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !1505, file: !13, line: 2440, column: 13)
!12182 = !DILocation(line: 2440, column: 17, scope: !12181)
!12183 = !DILocation(line: 2440, column: 13, scope: !1505)
!12184 = !DILocation(line: 2441, column: 13, scope: !12181)
!12185 = !DILocation(line: 2442, column: 9, scope: !1505)
!12186 = !DILocation(line: 2442, column: 14, scope: !12187)
!12187 = !DILexicalBlockFile(scope: !1512, file: !13, discriminator: 1)
!12188 = !DILocation(line: 2442, column: 24, scope: !1512)
!12189 = !DILocation(line: 2442, column: 54, scope: !1512)
!12190 = !DILocation(line: 2442, column: 68, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !1512, file: !13, line: 2442, column: 65)
!12192 = !DILocation(line: 2442, column: 85, scope: !12191)
!12193 = !DILocation(line: 2442, column: 65, scope: !12191)
!12194 = !DILocation(line: 2442, column: 95, scope: !12191)
!12195 = !DILocation(line: 2442, column: 65, scope: !1512)
!12196 = !DILocation(line: 2442, column: 65, scope: !12197)
!12197 = !DILexicalBlockFile(scope: !1512, file: !13, discriminator: 2)
!12198 = !DILocation(line: 2442, column: 126, scope: !12199)
!12199 = !DILexicalBlockFile(scope: !12191, file: !13, discriminator: 3)
!12200 = !DILocation(line: 2442, column: 144, scope: !12191)
!12201 = !DILocation(line: 2442, column: 154, scope: !12191)
!12202 = !DILocation(line: 2442, column: 179, scope: !12191)
!12203 = !DILocation(line: 2442, column: 110, scope: !12191)
!12204 = !DILocation(line: 2442, column: 198, scope: !12176)
!12205 = !DILocation(line: 2442, column: 198, scope: !1512)
!12206 = !DILocation(line: 2442, column: 198, scope: !12207)
!12207 = !DILexicalBlockFile(scope: !1512, file: !13, discriminator: 5)
!12208 = !DILocation(line: 2444, column: 23, scope: !1505)
!12209 = !DILocation(line: 2444, column: 29, scope: !1505)
!12210 = !DILocation(line: 2444, column: 36, scope: !1505)
!12211 = !DILocation(line: 2444, column: 9, scope: !1505)
!12212 = !DILocation(line: 2445, column: 5, scope: !1506)
!12213 = !DILocation(line: 2445, column: 5, scope: !12214)
!12214 = !DILexicalBlockFile(scope: !1506, file: !13, discriminator: 1)
!12215 = !DILocation(line: 2445, column: 5, scope: !1505)
!12216 = !DILocation(line: 2446, column: 5, scope: !1435)
!12217 = !DILocation(line: 2447, column: 1, scope: !1435)
!12218 = !DILocation(line: 2450, column: 32, scope: !1519)
!12219 = !DILocation(line: 2450, column: 48, scope: !1519)
!12220 = !DILocation(line: 2452, column: 5, scope: !1519)
!12221 = !DILocation(line: 2452, column: 15, scope: !1519)
!12222 = !DILocation(line: 2453, column: 5, scope: !1519)
!12223 = !DILocation(line: 2453, column: 15, scope: !1519)
!12224 = !DILocation(line: 2455, column: 9, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2455, column: 9)
!12226 = !DILocation(line: 2455, column: 15, scope: !12225)
!12227 = !DILocation(line: 2455, column: 18, scope: !12225)
!12228 = !DILocation(line: 2455, column: 9, scope: !1519)
!12229 = !DILocation(line: 2455, column: 30, scope: !12230)
!12230 = !DILexicalBlockFile(scope: !12231, file: !13, discriminator: 1)
!12231 = distinct !DILexicalBlock(scope: !12232, file: !13, line: 2455, column: 30)
!12232 = distinct !DILexicalBlock(scope: !12225, file: !13, line: 2455, column: 24)
!12233 = !DILocation(line: 2455, column: 36, scope: !12231)
!12234 = !DILocation(line: 2455, column: 30, scope: !12231)
!12235 = !DILocation(line: 2455, column: 30, scope: !12232)
!12236 = !DILocation(line: 2455, column: 64, scope: !12237)
!12237 = !DILexicalBlockFile(scope: !12238, file: !13, discriminator: 2)
!12238 = distinct !DILexicalBlock(scope: !12231, file: !13, line: 2455, column: 46)
!12239 = !DILocation(line: 2455, column: 48, scope: !12238)
!12240 = !DILocation(line: 2455, column: 122, scope: !12238)
!12241 = !DILocation(line: 2455, column: 147, scope: !12242)
!12242 = !DILexicalBlockFile(scope: !12243, file: !13, discriminator: 3)
!12243 = distinct !DILexicalBlock(scope: !12231, file: !13, line: 2455, column: 129)
!12244 = !DILocation(line: 2455, column: 131, scope: !12243)
!12245 = !DILocation(line: 2455, column: 209, scope: !12246)
!12246 = !DILexicalBlockFile(scope: !12232, file: !13, discriminator: 4)
!12247 = !DILocation(line: 2455, column: 209, scope: !12232)
!12248 = !DILocation(line: 2456, column: 34, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2456, column: 9)
!12250 = !DILocation(line: 2456, column: 10, scope: !12249)
!12251 = !DILocation(line: 2456, column: 9, scope: !1519)
!12252 = !DILocation(line: 2457, column: 9, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12249, file: !13, line: 2456, column: 62)
!12254 = !DILocation(line: 2460, column: 51, scope: !1519)
!12255 = !DILocation(line: 2460, column: 38, scope: !1519)
!12256 = !DILocation(line: 2460, column: 57, scope: !1519)
!12257 = !DILocation(line: 2460, column: 11, scope: !1519)
!12258 = !DILocation(line: 2460, column: 9, scope: !1519)
!12259 = !DILocation(line: 2461, column: 9, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !1519, file: !13, line: 2461, column: 9)
!12261 = !DILocation(line: 2461, column: 13, scope: !12260)
!12262 = !DILocation(line: 2461, column: 9, scope: !1519)
!12263 = !DILocation(line: 2462, column: 9, scope: !12260)
!12264 = !DILocation(line: 2463, column: 5, scope: !1519)
!12265 = !DILocation(line: 2463, column: 10, scope: !12266)
!12266 = !DILexicalBlockFile(scope: !1526, file: !13, discriminator: 1)
!12267 = !DILocation(line: 2463, column: 20, scope: !1526)
!12268 = !DILocation(line: 2463, column: 50, scope: !1526)
!12269 = !DILocation(line: 2463, column: 64, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !1526, file: !13, line: 2463, column: 61)
!12271 = !DILocation(line: 2463, column: 81, scope: !12270)
!12272 = !DILocation(line: 2463, column: 61, scope: !12270)
!12273 = !DILocation(line: 2463, column: 91, scope: !12270)
!12274 = !DILocation(line: 2463, column: 61, scope: !1526)
!12275 = !DILocation(line: 2463, column: 61, scope: !12276)
!12276 = !DILexicalBlockFile(scope: !1526, file: !13, discriminator: 2)
!12277 = !DILocation(line: 2463, column: 122, scope: !12278)
!12278 = !DILexicalBlockFile(scope: !12270, file: !13, discriminator: 3)
!12279 = !DILocation(line: 2463, column: 140, scope: !12270)
!12280 = !DILocation(line: 2463, column: 150, scope: !12270)
!12281 = !DILocation(line: 2463, column: 175, scope: !12270)
!12282 = !DILocation(line: 2463, column: 106, scope: !12270)
!12283 = !DILocation(line: 2463, column: 194, scope: !12284)
!12284 = !DILexicalBlockFile(scope: !1519, file: !13, discriminator: 4)
!12285 = !DILocation(line: 2463, column: 194, scope: !1526)
!12286 = !DILocation(line: 2463, column: 194, scope: !12287)
!12287 = !DILexicalBlockFile(scope: !1526, file: !13, discriminator: 5)
!12288 = !DILocation(line: 2465, column: 39, scope: !1519)
!12289 = !DILocation(line: 2465, column: 45, scope: !1519)
!12290 = !DILocation(line: 2465, column: 53, scope: !1519)
!12291 = !DILocation(line: 2465, column: 73, scope: !1519)
!12292 = !DILocation(line: 2465, column: 12, scope: !1519)
!12293 = !DILocation(line: 2465, column: 5, scope: !1519)
!12294 = !DILocation(line: 2466, column: 1, scope: !1519)
!12295 = !DILocation(line: 1402, column: 41, scope: !1232)
!12296 = !DILocation(line: 1402, column: 58, scope: !1232)
!12297 = !DILocation(line: 1404, column: 5, scope: !1232)
!12298 = !DILocation(line: 1404, column: 15, scope: !1232)
!12299 = !DILocation(line: 1405, column: 5, scope: !1232)
!12300 = !DILocation(line: 1405, column: 16, scope: !1232)
!12301 = !DILocation(line: 1407, column: 9, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !1232, file: !13, line: 1407, column: 9)
!12303 = !DILocation(line: 1407, column: 15, scope: !12302)
!12304 = !DILocation(line: 1407, column: 29, scope: !12302)
!12305 = !DILocation(line: 1407, column: 9, scope: !1232)
!12306 = !DILocation(line: 1408, column: 16, scope: !12302)
!12307 = !DILocation(line: 1408, column: 9, scope: !12302)
!12308 = !DILocation(line: 1411, column: 62, scope: !1232)
!12309 = !DILocation(line: 1411, column: 68, scope: !1232)
!12310 = !DILocation(line: 1411, column: 44, scope: !1232)
!12311 = !DILocation(line: 1411, column: 85, scope: !1232)
!12312 = !DILocation(line: 1412, column: 16, scope: !1232)
!12313 = !DILocation(line: 1412, column: 22, scope: !1232)
!12314 = !DILocation(line: 1412, column: 14, scope: !1232)
!12315 = !DILocation(line: 1411, column: 11, scope: !1232)
!12316 = !DILocation(line: 1416, column: 9, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !1232, file: !13, line: 1416, column: 9)
!12318 = !DILocation(line: 1416, column: 11, scope: !12317)
!12319 = !DILocation(line: 1416, column: 15, scope: !12317)
!12320 = !DILocation(line: 1416, column: 18, scope: !12321)
!12321 = !DILexicalBlockFile(scope: !12317, file: !13, discriminator: 1)
!12322 = !DILocation(line: 1416, column: 22, scope: !12317)
!12323 = !DILocation(line: 1416, column: 20, scope: !12317)
!12324 = !DILocation(line: 1416, column: 9, scope: !1232)
!12325 = !DILocation(line: 1417, column: 13, scope: !12317)
!12326 = !DILocation(line: 1417, column: 11, scope: !12317)
!12327 = !DILocation(line: 1417, column: 9, scope: !12317)
!12328 = !DILocation(line: 1419, column: 9, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !1232, file: !13, line: 1419, column: 9)
!12330 = !DILocation(line: 1419, column: 15, scope: !12329)
!12331 = !DILocation(line: 1419, column: 34, scope: !12329)
!12332 = !DILocation(line: 1419, column: 38, scope: !12329)
!12333 = !DILocation(line: 1419, column: 41, scope: !12334)
!12334 = !DILexicalBlockFile(scope: !12329, file: !13, discriminator: 1)
!12335 = !DILocation(line: 1419, column: 45, scope: !12329)
!12336 = !DILocation(line: 1419, column: 43, scope: !12329)
!12337 = !DILocation(line: 1419, column: 9, scope: !1232)
!12338 = !DILocation(line: 1420, column: 37, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12329, file: !13, line: 1419, column: 52)
!12340 = !DILocation(line: 1420, column: 43, scope: !12339)
!12341 = !DILocation(line: 1421, column: 37, scope: !12339)
!12342 = !DILocation(line: 1421, column: 43, scope: !12339)
!12343 = !DILocation(line: 1422, column: 37, scope: !12339)
!12344 = !DILocation(line: 1422, column: 43, scope: !12339)
!12345 = !DILocation(line: 1422, column: 64, scope: !12339)
!12346 = !DILocation(line: 1422, column: 62, scope: !12339)
!12347 = !DILocation(line: 1420, column: 17, scope: !12339)
!12348 = !DILocation(line: 1420, column: 15, scope: !12339)
!12349 = !DILocation(line: 1423, column: 13, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12339, file: !13, line: 1423, column: 13)
!12351 = !DILocation(line: 1423, column: 19, scope: !12350)
!12352 = !DILocation(line: 1423, column: 13, scope: !12339)
!12353 = !DILocation(line: 1424, column: 13, scope: !12350)
!12354 = !DILocation(line: 1425, column: 5, scope: !12339)
!12355 = !DILocation(line: 1427, column: 17, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12329, file: !13, line: 1426, column: 10)
!12357 = !DILocation(line: 1427, column: 23, scope: !12356)
!12358 = !DILocation(line: 1427, column: 15, scope: !12356)
!12359 = !DILocation(line: 1428, column: 25, scope: !12356)
!12360 = !DILocation(line: 1428, column: 34, scope: !12356)
!12361 = !DILocation(line: 1428, column: 43, scope: !12356)
!12362 = !DILocation(line: 1431, column: 33, scope: !1232)
!12363 = !DILocation(line: 1431, column: 5, scope: !1232)
!12364 = !DILocation(line: 1431, column: 11, scope: !1232)
!12365 = !DILocation(line: 1431, column: 30, scope: !1232)
!12366 = !DILocation(line: 1432, column: 12, scope: !1232)
!12367 = !DILocation(line: 1432, column: 5, scope: !1232)
!12368 = !DILocation(line: 1433, column: 1, scope: !1232)
!12369 = !DILocation(line: 1984, column: 41, scope: !1401)
!12370 = !DILocation(line: 1984, column: 59, scope: !1401)
!12371 = !DILocation(line: 1986, column: 5, scope: !1401)
!12372 = !DILocation(line: 1986, column: 19, scope: !1401)
!12373 = !DILocation(line: 1987, column: 5, scope: !1401)
!12374 = !DILocation(line: 1987, column: 19, scope: !1401)
!12375 = !DILocation(line: 1987, column: 62, scope: !1401)
!12376 = !DILocation(line: 1987, column: 48, scope: !1401)
!12377 = !DILocation(line: 1987, column: 32, scope: !1401)
!12378 = !DILocation(line: 1988, column: 9, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !1401, file: !13, line: 1988, column: 9)
!12380 = !DILocation(line: 1988, column: 20, scope: !12379)
!12381 = !DILocation(line: 1988, column: 9, scope: !1401)
!12382 = !DILocation(line: 1989, column: 9, scope: !12379)
!12383 = !DILocation(line: 1991, column: 29, scope: !1416)
!12384 = !DILocation(line: 1991, column: 41, scope: !1416)
!12385 = !DILocation(line: 1991, column: 9, scope: !1416)
!12386 = !DILocation(line: 1992, column: 35, scope: !1416)
!12387 = !DILocation(line: 1991, column: 9, scope: !1401)
!12388 = !DILocation(line: 1993, column: 9, scope: !1415)
!12389 = !DILocation(line: 1993, column: 14, scope: !12390)
!12390 = !DILexicalBlockFile(scope: !1414, file: !13, discriminator: 1)
!12391 = !DILocation(line: 1993, column: 24, scope: !1414)
!12392 = !DILocation(line: 1993, column: 54, scope: !1414)
!12393 = !DILocation(line: 1993, column: 41, scope: !1414)
!12394 = !DILocation(line: 1993, column: 75, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !1414, file: !13, line: 1993, column: 72)
!12396 = !DILocation(line: 1993, column: 92, scope: !12395)
!12397 = !DILocation(line: 1993, column: 72, scope: !12395)
!12398 = !DILocation(line: 1993, column: 102, scope: !12395)
!12399 = !DILocation(line: 1993, column: 72, scope: !1414)
!12400 = !DILocation(line: 1993, column: 72, scope: !12401)
!12401 = !DILexicalBlockFile(scope: !1414, file: !13, discriminator: 2)
!12402 = !DILocation(line: 1993, column: 133, scope: !12403)
!12403 = !DILexicalBlockFile(scope: !12395, file: !13, discriminator: 3)
!12404 = !DILocation(line: 1993, column: 151, scope: !12395)
!12405 = !DILocation(line: 1993, column: 161, scope: !12395)
!12406 = !DILocation(line: 1993, column: 186, scope: !12395)
!12407 = !DILocation(line: 1993, column: 117, scope: !12395)
!12408 = !DILocation(line: 1993, column: 205, scope: !12409)
!12409 = !DILexicalBlockFile(scope: !1415, file: !13, discriminator: 4)
!12410 = !DILocation(line: 1993, column: 205, scope: !1414)
!12411 = !DILocation(line: 1993, column: 205, scope: !12412)
!12412 = !DILexicalBlockFile(scope: !1414, file: !13, discriminator: 5)
!12413 = !DILocation(line: 1994, column: 9, scope: !1415)
!12414 = !DILocation(line: 1996, column: 5, scope: !1401)
!12415 = !DILocation(line: 1996, column: 10, scope: !12416)
!12416 = !DILexicalBlockFile(scope: !1418, file: !13, discriminator: 1)
!12417 = !DILocation(line: 1996, column: 20, scope: !1418)
!12418 = !DILocation(line: 1996, column: 50, scope: !1418)
!12419 = !DILocation(line: 1996, column: 37, scope: !1418)
!12420 = !DILocation(line: 1996, column: 71, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !1418, file: !13, line: 1996, column: 68)
!12422 = !DILocation(line: 1996, column: 88, scope: !12421)
!12423 = !DILocation(line: 1996, column: 68, scope: !12421)
!12424 = !DILocation(line: 1996, column: 98, scope: !12421)
!12425 = !DILocation(line: 1996, column: 68, scope: !1418)
!12426 = !DILocation(line: 1996, column: 68, scope: !12427)
!12427 = !DILexicalBlockFile(scope: !1418, file: !13, discriminator: 2)
!12428 = !DILocation(line: 1996, column: 129, scope: !12429)
!12429 = !DILexicalBlockFile(scope: !12421, file: !13, discriminator: 3)
!12430 = !DILocation(line: 1996, column: 147, scope: !12421)
!12431 = !DILocation(line: 1996, column: 157, scope: !12421)
!12432 = !DILocation(line: 1996, column: 182, scope: !12421)
!12433 = !DILocation(line: 1996, column: 113, scope: !12421)
!12434 = !DILocation(line: 1996, column: 201, scope: !12435)
!12435 = !DILexicalBlockFile(scope: !1401, file: !13, discriminator: 4)
!12436 = !DILocation(line: 1996, column: 201, scope: !1418)
!12437 = !DILocation(line: 1996, column: 201, scope: !12438)
!12438 = !DILexicalBlockFile(scope: !1418, file: !13, discriminator: 5)
!12439 = !DILocation(line: 1998, column: 13, scope: !1401)
!12440 = !DILocation(line: 1998, column: 21, scope: !1401)
!12441 = !DILocation(line: 1998, column: 5, scope: !1401)
!12442 = !DILocation(line: 1998, column: 32, scope: !1401)
!12443 = !DILocation(line: 1998, column: 39, scope: !1401)
!12444 = !DILocation(line: 1999, column: 13, scope: !1401)
!12445 = !DILocation(line: 1999, column: 21, scope: !1401)
!12446 = !DILocation(line: 1999, column: 5, scope: !1401)
!12447 = !DILocation(line: 1999, column: 32, scope: !1401)
!12448 = !DILocation(line: 1999, column: 39, scope: !1401)
!12449 = !DILocation(line: 2000, column: 13, scope: !1401)
!12450 = !DILocation(line: 2000, column: 21, scope: !1401)
!12451 = !DILocation(line: 2000, column: 5, scope: !1401)
!12452 = !DILocation(line: 2000, column: 36, scope: !1401)
!12453 = !DILocation(line: 2000, column: 43, scope: !1401)
!12454 = !DILocation(line: 2001, column: 13, scope: !1401)
!12455 = !DILocation(line: 2001, column: 21, scope: !1401)
!12456 = !DILocation(line: 2001, column: 5, scope: !1401)
!12457 = !DILocation(line: 2001, column: 36, scope: !1401)
!12458 = !DILocation(line: 2001, column: 43, scope: !1401)
!12459 = !DILocation(line: 2002, column: 13, scope: !1401)
!12460 = !DILocation(line: 2002, column: 21, scope: !1401)
!12461 = !DILocation(line: 2002, column: 31, scope: !1401)
!12462 = !DILocation(line: 2002, column: 38, scope: !1401)
!12463 = !DILocation(line: 2002, column: 5, scope: !1401)
!12464 = !DILocation(line: 2004, column: 5, scope: !1401)
!12465 = !DILocation(line: 2005, column: 1, scope: !1401)
!12466 = !DILocation(line: 2023, column: 41, scope: !1419)
!12467 = !DILocation(line: 2023, column: 60, scope: !1419)
!12468 = !DILocation(line: 2025, column: 5, scope: !1419)
!12469 = !DILocation(line: 2025, column: 15, scope: !1419)
!12470 = !DILocation(line: 2032, column: 9, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !1419, file: !13, line: 2032, column: 9)
!12472 = !DILocation(line: 2032, column: 17, scope: !12471)
!12473 = !DILocation(line: 2032, column: 27, scope: !12471)
!12474 = !DILocation(line: 2032, column: 32, scope: !12471)
!12475 = !DILocation(line: 2032, column: 35, scope: !12476)
!12476 = !DILexicalBlockFile(scope: !12471, file: !13, discriminator: 1)
!12477 = !DILocation(line: 2032, column: 43, scope: !12471)
!12478 = !DILocation(line: 2032, column: 53, scope: !12471)
!12479 = !DILocation(line: 2032, column: 9, scope: !1419)
!12480 = !DILocation(line: 2033, column: 42, scope: !12471)
!12481 = !DILocation(line: 2033, column: 48, scope: !12471)
!12482 = !DILocation(line: 2033, column: 57, scope: !12471)
!12483 = !DILocation(line: 2033, column: 15, scope: !12471)
!12484 = !DILocation(line: 2033, column: 13, scope: !12471)
!12485 = !DILocation(line: 2033, column: 9, scope: !12471)
!12486 = !DILocation(line: 2035, column: 44, scope: !12471)
!12487 = !DILocation(line: 2035, column: 50, scope: !12471)
!12488 = !DILocation(line: 2036, column: 52, scope: !12471)
!12489 = !DILocation(line: 2036, column: 60, scope: !12471)
!12490 = !DILocation(line: 2035, column: 15, scope: !12471)
!12491 = !DILocation(line: 2035, column: 13, scope: !12471)
!12492 = !DILocation(line: 2037, column: 9, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !1419, file: !13, line: 2037, column: 9)
!12494 = !DILocation(line: 2037, column: 13, scope: !12493)
!12495 = !DILocation(line: 2037, column: 9, scope: !1419)
!12496 = !DILocation(line: 2038, column: 9, scope: !12493)
!12497 = !DILocation(line: 2039, column: 5, scope: !1419)
!12498 = !DILocation(line: 2039, column: 10, scope: !12499)
!12499 = !DILexicalBlockFile(scope: !1427, file: !13, discriminator: 1)
!12500 = !DILocation(line: 2039, column: 20, scope: !1427)
!12501 = !DILocation(line: 2039, column: 50, scope: !1427)
!12502 = !DILocation(line: 2039, column: 64, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !1427, file: !13, line: 2039, column: 61)
!12504 = !DILocation(line: 2039, column: 81, scope: !12503)
!12505 = !DILocation(line: 2039, column: 61, scope: !12503)
!12506 = !DILocation(line: 2039, column: 91, scope: !12503)
!12507 = !DILocation(line: 2039, column: 61, scope: !1427)
!12508 = !DILocation(line: 2039, column: 61, scope: !12509)
!12509 = !DILexicalBlockFile(scope: !1427, file: !13, discriminator: 2)
!12510 = !DILocation(line: 2039, column: 122, scope: !12511)
!12511 = !DILexicalBlockFile(scope: !12503, file: !13, discriminator: 3)
!12512 = !DILocation(line: 2039, column: 140, scope: !12503)
!12513 = !DILocation(line: 2039, column: 150, scope: !12503)
!12514 = !DILocation(line: 2039, column: 175, scope: !12503)
!12515 = !DILocation(line: 2039, column: 106, scope: !12503)
!12516 = !DILocation(line: 2039, column: 194, scope: !12517)
!12517 = !DILexicalBlockFile(scope: !1419, file: !13, discriminator: 4)
!12518 = !DILocation(line: 2039, column: 194, scope: !1427)
!12519 = !DILocation(line: 2039, column: 194, scope: !12520)
!12520 = !DILexicalBlockFile(scope: !1427, file: !13, discriminator: 5)
!12521 = !DILocation(line: 2040, column: 5, scope: !1419)
!12522 = !DILocation(line: 2041, column: 1, scope: !1419)
!12523 = !DILocation(line: 2044, column: 41, scope: !1428)
!12524 = !DILocation(line: 2044, column: 60, scope: !1428)
!12525 = !DILocation(line: 2046, column: 5, scope: !1428)
!12526 = !DILocation(line: 2046, column: 15, scope: !1428)
!12527 = !DILocation(line: 2048, column: 9, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !1428, file: !13, line: 2048, column: 9)
!12529 = !DILocation(line: 2048, column: 17, scope: !12528)
!12530 = !DILocation(line: 2048, column: 27, scope: !12528)
!12531 = !DILocation(line: 2048, column: 32, scope: !12528)
!12532 = !DILocation(line: 2048, column: 35, scope: !12533)
!12533 = !DILexicalBlockFile(scope: !12528, file: !13, discriminator: 1)
!12534 = !DILocation(line: 2048, column: 43, scope: !12528)
!12535 = !DILocation(line: 2048, column: 53, scope: !12528)
!12536 = !DILocation(line: 2048, column: 9, scope: !1428)
!12537 = !DILocation(line: 2049, column: 42, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12528, file: !13, line: 2048, column: 59)
!12539 = !DILocation(line: 2049, column: 48, scope: !12538)
!12540 = !DILocation(line: 2049, column: 57, scope: !12538)
!12541 = !DILocation(line: 2049, column: 15, scope: !12538)
!12542 = !DILocation(line: 2049, column: 13, scope: !12538)
!12543 = !DILocation(line: 2050, column: 9, scope: !12538)
!12544 = !DILocation(line: 2050, column: 15, scope: !12538)
!12545 = !DILocation(line: 2050, column: 40, scope: !12538)
!12546 = !DILocation(line: 2051, column: 5, scope: !12538)
!12547 = !DILocation(line: 2053, column: 42, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12528, file: !13, line: 2052, column: 10)
!12549 = !DILocation(line: 2053, column: 48, scope: !12548)
!12550 = !DILocation(line: 2053, column: 57, scope: !12548)
!12551 = !DILocation(line: 2054, column: 42, scope: !12548)
!12552 = !DILocation(line: 2053, column: 15, scope: !12548)
!12553 = !DILocation(line: 2053, column: 13, scope: !12548)
!12554 = !DILocation(line: 2055, column: 9, scope: !12548)
!12555 = !DILocation(line: 2055, column: 15, scope: !12548)
!12556 = !DILocation(line: 2055, column: 40, scope: !12548)
!12557 = !DILocation(line: 2057, column: 9, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !1428, file: !13, line: 2057, column: 9)
!12559 = !DILocation(line: 2057, column: 13, scope: !12558)
!12560 = !DILocation(line: 2057, column: 9, scope: !1428)
!12561 = !DILocation(line: 2058, column: 9, scope: !12558)
!12562 = !DILocation(line: 2059, column: 5, scope: !1428)
!12563 = !DILocation(line: 2059, column: 10, scope: !12564)
!12564 = !DILexicalBlockFile(scope: !1434, file: !13, discriminator: 1)
!12565 = !DILocation(line: 2059, column: 20, scope: !1434)
!12566 = !DILocation(line: 2059, column: 50, scope: !1434)
!12567 = !DILocation(line: 2059, column: 64, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !1434, file: !13, line: 2059, column: 61)
!12569 = !DILocation(line: 2059, column: 81, scope: !12568)
!12570 = !DILocation(line: 2059, column: 61, scope: !12568)
!12571 = !DILocation(line: 2059, column: 91, scope: !12568)
!12572 = !DILocation(line: 2059, column: 61, scope: !1434)
!12573 = !DILocation(line: 2059, column: 61, scope: !12574)
!12574 = !DILexicalBlockFile(scope: !1434, file: !13, discriminator: 2)
!12575 = !DILocation(line: 2059, column: 122, scope: !12576)
!12576 = !DILexicalBlockFile(scope: !12568, file: !13, discriminator: 3)
!12577 = !DILocation(line: 2059, column: 140, scope: !12568)
!12578 = !DILocation(line: 2059, column: 150, scope: !12568)
!12579 = !DILocation(line: 2059, column: 175, scope: !12568)
!12580 = !DILocation(line: 2059, column: 106, scope: !12568)
!12581 = !DILocation(line: 2059, column: 194, scope: !12582)
!12582 = !DILexicalBlockFile(scope: !1428, file: !13, discriminator: 4)
!12583 = !DILocation(line: 2059, column: 194, scope: !1434)
!12584 = !DILocation(line: 2059, column: 194, scope: !12585)
!12585 = !DILexicalBlockFile(scope: !1434, file: !13, discriminator: 5)
!12586 = !DILocation(line: 2060, column: 5, scope: !1428)
!12587 = !DILocation(line: 2061, column: 1, scope: !1428)
!12588 = !DILocation(line: 2008, column: 41, scope: !1513)
!12589 = !DILocation(line: 2010, column: 5, scope: !1513)
!12590 = !DILocation(line: 2010, column: 19, scope: !1513)
!12591 = !DILocation(line: 2012, column: 12, scope: !1513)
!12592 = !DILocation(line: 2012, column: 19, scope: !1513)
!12593 = !DILocation(line: 2012, column: 25, scope: !1513)
!12594 = !DILocation(line: 2012, column: 33, scope: !1513)
!12595 = !DILocation(line: 2012, column: 5, scope: !1513)
!12596 = !DILocation(line: 2013, column: 12, scope: !1513)
!12597 = !DILocation(line: 2013, column: 19, scope: !1513)
!12598 = !DILocation(line: 2013, column: 42, scope: !1513)
!12599 = !DILocation(line: 2013, column: 50, scope: !1513)
!12600 = !DILocation(line: 2013, column: 5, scope: !1513)
!12601 = !DILocation(line: 2014, column: 12, scope: !1513)
!12602 = !DILocation(line: 2014, column: 19, scope: !1513)
!12603 = !DILocation(line: 2014, column: 56, scope: !1513)
!12604 = !DILocation(line: 2014, column: 64, scope: !1513)
!12605 = !DILocation(line: 2014, column: 5, scope: !1513)
!12606 = !DILocation(line: 2015, column: 12, scope: !1513)
!12607 = !DILocation(line: 2015, column: 19, scope: !1513)
!12608 = !DILocation(line: 2015, column: 60, scope: !1513)
!12609 = !DILocation(line: 2015, column: 68, scope: !1513)
!12610 = !DILocation(line: 2015, column: 5, scope: !1513)
!12611 = !DILocation(line: 2016, column: 12, scope: !1513)
!12612 = !DILocation(line: 2016, column: 19, scope: !1513)
!12613 = !DILocation(line: 2016, column: 60, scope: !1513)
!12614 = !DILocation(line: 2016, column: 68, scope: !1513)
!12615 = !DILocation(line: 2016, column: 5, scope: !1513)
!12616 = !DILocation(line: 2018, column: 34, scope: !1513)
!12617 = !DILocation(line: 2018, column: 12, scope: !1513)
!12618 = !DILocation(line: 2020, column: 1, scope: !1513)
!12619 = !DILocation(line: 2018, column: 5, scope: !1513)
!12620 = !DILocation(line: 2668, column: 32, scope: !1527)
!12621 = !DILocation(line: 2668, column: 44, scope: !1527)
!12622 = !DILocation(line: 2670, column: 9, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !1527, file: !13, line: 2670, column: 9)
!12624 = !DILocation(line: 2670, column: 15, scope: !12623)
!12625 = !DILocation(line: 2670, column: 18, scope: !12623)
!12626 = !DILocation(line: 2670, column: 9, scope: !1527)
!12627 = !DILocation(line: 2670, column: 30, scope: !12628)
!12628 = !DILexicalBlockFile(scope: !12629, file: !13, discriminator: 1)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !13, line: 2670, column: 30)
!12630 = distinct !DILexicalBlock(scope: !12623, file: !13, line: 2670, column: 24)
!12631 = !DILocation(line: 2670, column: 36, scope: !12629)
!12632 = !DILocation(line: 2670, column: 30, scope: !12629)
!12633 = !DILocation(line: 2670, column: 30, scope: !12630)
!12634 = !DILocation(line: 2670, column: 64, scope: !12635)
!12635 = !DILexicalBlockFile(scope: !12636, file: !13, discriminator: 2)
!12636 = distinct !DILexicalBlock(scope: !12629, file: !13, line: 2670, column: 46)
!12637 = !DILocation(line: 2670, column: 48, scope: !12636)
!12638 = !DILocation(line: 2670, column: 122, scope: !12636)
!12639 = !DILocation(line: 2670, column: 147, scope: !12640)
!12640 = !DILexicalBlockFile(scope: !12641, file: !13, discriminator: 3)
!12641 = distinct !DILexicalBlock(scope: !12629, file: !13, line: 2670, column: 129)
!12642 = !DILocation(line: 2670, column: 131, scope: !12641)
!12643 = !DILocation(line: 2670, column: 209, scope: !12644)
!12644 = !DILexicalBlockFile(scope: !12630, file: !13, discriminator: 4)
!12645 = !DILocation(line: 2671, column: 32, scope: !1527)
!12646 = !DILocation(line: 2671, column: 38, scope: !1527)
!12647 = !DILocation(line: 2671, column: 12, scope: !1527)
!12648 = !DILocation(line: 2671, column: 5, scope: !1527)
!12649 = !DILocation(line: 2672, column: 1, scope: !1527)
!12650 = !DILocation(line: 2682, column: 36, scope: !1531)
!12651 = !DILocation(line: 2682, column: 48, scope: !1531)
!12652 = !DILocation(line: 2684, column: 5, scope: !1531)
!12653 = !DILocation(line: 2684, column: 15, scope: !1531)
!12654 = !DILocation(line: 2685, column: 9, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !1531, file: !13, line: 2685, column: 9)
!12656 = !DILocation(line: 2685, column: 15, scope: !12655)
!12657 = !DILocation(line: 2685, column: 18, scope: !12655)
!12658 = !DILocation(line: 2685, column: 9, scope: !1531)
!12659 = !DILocation(line: 2685, column: 30, scope: !12660)
!12660 = !DILexicalBlockFile(scope: !12661, file: !13, discriminator: 1)
!12661 = distinct !DILexicalBlock(scope: !12662, file: !13, line: 2685, column: 30)
!12662 = distinct !DILexicalBlock(scope: !12655, file: !13, line: 2685, column: 24)
!12663 = !DILocation(line: 2685, column: 36, scope: !12661)
!12664 = !DILocation(line: 2685, column: 30, scope: !12661)
!12665 = !DILocation(line: 2685, column: 30, scope: !12662)
!12666 = !DILocation(line: 2685, column: 64, scope: !12667)
!12667 = !DILexicalBlockFile(scope: !12668, file: !13, discriminator: 2)
!12668 = distinct !DILexicalBlock(scope: !12661, file: !13, line: 2685, column: 46)
!12669 = !DILocation(line: 2685, column: 48, scope: !12668)
!12670 = !DILocation(line: 2685, column: 122, scope: !12668)
!12671 = !DILocation(line: 2685, column: 147, scope: !12672)
!12672 = !DILexicalBlockFile(scope: !12673, file: !13, discriminator: 3)
!12673 = distinct !DILexicalBlock(scope: !12661, file: !13, line: 2685, column: 129)
!12674 = !DILocation(line: 2685, column: 131, scope: !12673)
!12675 = !DILocation(line: 2685, column: 209, scope: !12676)
!12676 = !DILexicalBlockFile(scope: !12662, file: !13, discriminator: 4)
!12677 = !DILocation(line: 2685, column: 209, scope: !12662)
!12678 = !DILocation(line: 2686, column: 9, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !1531, file: !13, line: 2686, column: 9)
!12680 = !DILocation(line: 2686, column: 15, scope: !12679)
!12681 = !DILocation(line: 2686, column: 23, scope: !12679)
!12682 = !DILocation(line: 2686, column: 9, scope: !1531)
!12683 = !DILocation(line: 2687, column: 62, scope: !12679)
!12684 = !DILocation(line: 2687, column: 9, scope: !12679)
!12685 = !DILocation(line: 2688, column: 28, scope: !1531)
!12686 = !DILocation(line: 2688, column: 34, scope: !1531)
!12687 = !DILocation(line: 2688, column: 43, scope: !1531)
!12688 = !DILocation(line: 2688, column: 11, scope: !1531)
!12689 = !DILocation(line: 2688, column: 9, scope: !1531)
!12690 = !DILocation(line: 2689, column: 9, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !1531, file: !13, line: 2689, column: 9)
!12692 = !DILocation(line: 2689, column: 13, scope: !12691)
!12693 = !DILocation(line: 2689, column: 9, scope: !1531)
!12694 = !DILocation(line: 2690, column: 36, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !13, line: 2690, column: 13)
!12696 = distinct !DILexicalBlock(scope: !12691, file: !13, line: 2689, column: 28)
!12697 = !DILocation(line: 2690, column: 13, scope: !12695)
!12698 = !DILocation(line: 2690, column: 13, scope: !12696)
!12699 = !DILocation(line: 2691, column: 13, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12695, file: !13, line: 2690, column: 59)
!12701 = !DILocation(line: 2692, column: 66, scope: !12700)
!12702 = !DILocation(line: 2692, column: 13, scope: !12700)
!12703 = !DILocation(line: 2695, column: 13, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12695, file: !13, line: 2694, column: 14)
!12705 = !DILocation(line: 2698, column: 12, scope: !1531)
!12706 = !DILocation(line: 2698, column: 5, scope: !1531)
!12707 = !DILocation(line: 2699, column: 1, scope: !1531)
!12708 = !DILocation(line: 2702, column: 34, scope: !1536)
!12709 = !DILocation(line: 2702, column: 46, scope: !1536)
!12710 = !DILocation(line: 2704, column: 9, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !1536, file: !13, line: 2704, column: 9)
!12712 = !DILocation(line: 2704, column: 15, scope: !12711)
!12713 = !DILocation(line: 2704, column: 18, scope: !12711)
!12714 = !DILocation(line: 2704, column: 9, scope: !1536)
!12715 = !DILocation(line: 2704, column: 30, scope: !12716)
!12716 = !DILexicalBlockFile(scope: !12717, file: !13, discriminator: 1)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !13, line: 2704, column: 30)
!12718 = distinct !DILexicalBlock(scope: !12711, file: !13, line: 2704, column: 24)
!12719 = !DILocation(line: 2704, column: 36, scope: !12717)
!12720 = !DILocation(line: 2704, column: 30, scope: !12717)
!12721 = !DILocation(line: 2704, column: 30, scope: !12718)
!12722 = !DILocation(line: 2704, column: 64, scope: !12723)
!12723 = !DILexicalBlockFile(scope: !12724, file: !13, discriminator: 2)
!12724 = distinct !DILexicalBlock(scope: !12717, file: !13, line: 2704, column: 46)
!12725 = !DILocation(line: 2704, column: 48, scope: !12724)
!12726 = !DILocation(line: 2704, column: 122, scope: !12724)
!12727 = !DILocation(line: 2704, column: 147, scope: !12728)
!12728 = !DILexicalBlockFile(scope: !12729, file: !13, discriminator: 3)
!12729 = distinct !DILexicalBlock(scope: !12717, file: !13, line: 2704, column: 129)
!12730 = !DILocation(line: 2704, column: 131, scope: !12729)
!12731 = !DILocation(line: 2704, column: 209, scope: !12732)
!12732 = !DILexicalBlockFile(scope: !12718, file: !13, discriminator: 4)
!12733 = !DILocation(line: 2705, column: 68, scope: !1536)
!12734 = !DILocation(line: 2705, column: 74, scope: !1536)
!12735 = !DILocation(line: 2705, column: 50, scope: !1536)
!12736 = !DILocation(line: 2705, column: 84, scope: !1536)
!12737 = !DILocation(line: 2705, column: 48, scope: !1536)
!12738 = !DILocation(line: 2705, column: 12, scope: !1536)
!12739 = !DILocation(line: 2705, column: 5, scope: !1536)
!12740 = !DILocation(line: 2706, column: 1, scope: !1536)
!12741 = !DILocation(line: 2709, column: 38, scope: !1540)
!12742 = !DILocation(line: 2709, column: 50, scope: !1540)
!12743 = !DILocation(line: 2711, column: 9, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !1540, file: !13, line: 2711, column: 9)
!12745 = !DILocation(line: 2711, column: 15, scope: !12744)
!12746 = !DILocation(line: 2711, column: 18, scope: !12744)
!12747 = !DILocation(line: 2711, column: 9, scope: !1540)
!12748 = !DILocation(line: 2711, column: 30, scope: !12749)
!12749 = !DILexicalBlockFile(scope: !12750, file: !13, discriminator: 1)
!12750 = distinct !DILexicalBlock(scope: !12751, file: !13, line: 2711, column: 30)
!12751 = distinct !DILexicalBlock(scope: !12744, file: !13, line: 2711, column: 24)
!12752 = !DILocation(line: 2711, column: 36, scope: !12750)
!12753 = !DILocation(line: 2711, column: 30, scope: !12750)
!12754 = !DILocation(line: 2711, column: 30, scope: !12751)
!12755 = !DILocation(line: 2711, column: 64, scope: !12756)
!12756 = !DILexicalBlockFile(scope: !12757, file: !13, discriminator: 2)
!12757 = distinct !DILexicalBlock(scope: !12750, file: !13, line: 2711, column: 46)
!12758 = !DILocation(line: 2711, column: 48, scope: !12757)
!12759 = !DILocation(line: 2711, column: 122, scope: !12757)
!12760 = !DILocation(line: 2711, column: 147, scope: !12761)
!12761 = !DILexicalBlockFile(scope: !12762, file: !13, discriminator: 3)
!12762 = distinct !DILexicalBlock(scope: !12750, file: !13, line: 2711, column: 129)
!12763 = !DILocation(line: 2711, column: 131, scope: !12762)
!12764 = !DILocation(line: 2711, column: 209, scope: !12765)
!12765 = !DILexicalBlockFile(scope: !12751, file: !13, discriminator: 4)
!12766 = !DILocation(line: 2712, column: 31, scope: !1540)
!12767 = !DILocation(line: 2712, column: 37, scope: !1540)
!12768 = !DILocation(line: 2712, column: 12, scope: !1540)
!12769 = !DILocation(line: 2712, column: 5, scope: !1540)
!12770 = !DILocation(line: 2713, column: 1, scope: !1540)
!12771 = !DILocation(line: 2716, column: 38, scope: !1544)
!12772 = !DILocation(line: 2716, column: 54, scope: !1544)
!12773 = !DILocation(line: 2716, column: 65, scope: !1544)
!12774 = !DILocation(line: 2718, column: 5, scope: !1544)
!12775 = !DILocation(line: 2718, column: 16, scope: !1544)
!12776 = !DILocation(line: 2719, column: 9, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !1544, file: !13, line: 2719, column: 9)
!12778 = !DILocation(line: 2719, column: 15, scope: !12777)
!12779 = !DILocation(line: 2719, column: 18, scope: !12777)
!12780 = !DILocation(line: 2719, column: 9, scope: !1544)
!12781 = !DILocation(line: 2719, column: 30, scope: !12782)
!12782 = !DILexicalBlockFile(scope: !12783, file: !13, discriminator: 1)
!12783 = distinct !DILexicalBlock(scope: !12784, file: !13, line: 2719, column: 30)
!12784 = distinct !DILexicalBlock(scope: !12777, file: !13, line: 2719, column: 24)
!12785 = !DILocation(line: 2719, column: 36, scope: !12783)
!12786 = !DILocation(line: 2719, column: 30, scope: !12783)
!12787 = !DILocation(line: 2719, column: 30, scope: !12784)
!12788 = !DILocation(line: 2719, column: 64, scope: !12789)
!12789 = !DILexicalBlockFile(scope: !12790, file: !13, discriminator: 2)
!12790 = distinct !DILexicalBlock(scope: !12783, file: !13, line: 2719, column: 46)
!12791 = !DILocation(line: 2719, column: 48, scope: !12790)
!12792 = !DILocation(line: 2719, column: 122, scope: !12790)
!12793 = !DILocation(line: 2719, column: 147, scope: !12794)
!12794 = !DILexicalBlockFile(scope: !12795, file: !13, discriminator: 3)
!12795 = distinct !DILexicalBlock(scope: !12783, file: !13, line: 2719, column: 129)
!12796 = !DILocation(line: 2719, column: 131, scope: !12795)
!12797 = !DILocation(line: 2719, column: 209, scope: !12798)
!12798 = !DILexicalBlockFile(scope: !12784, file: !13, discriminator: 4)
!12799 = !DILocation(line: 2719, column: 209, scope: !12784)
!12800 = !DILocation(line: 2720, column: 28, scope: !1544)
!12801 = !DILocation(line: 2720, column: 33, scope: !1544)
!12802 = !DILocation(line: 2720, column: 9, scope: !1544)
!12803 = !DILocation(line: 2720, column: 7, scope: !1544)
!12804 = !DILocation(line: 2721, column: 9, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !1544, file: !13, line: 2721, column: 9)
!12806 = !DILocation(line: 2721, column: 11, scope: !12805)
!12807 = !DILocation(line: 2721, column: 17, scope: !12805)
!12808 = !DILocation(line: 2721, column: 20, scope: !12809)
!12809 = !DILexicalBlockFile(scope: !12805, file: !13, discriminator: 1)
!12810 = !DILocation(line: 2721, column: 9, scope: !1544)
!12811 = !DILocation(line: 2722, column: 9, scope: !12805)
!12812 = !DILocation(line: 2723, column: 9, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !1544, file: !13, line: 2723, column: 9)
!12814 = !DILocation(line: 2723, column: 11, scope: !12813)
!12815 = !DILocation(line: 2723, column: 9, scope: !1544)
!12816 = !DILocation(line: 2724, column: 25, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12813, file: !13, line: 2723, column: 17)
!12818 = !DILocation(line: 2724, column: 9, scope: !12817)
!12819 = !DILocation(line: 2726, column: 9, scope: !12817)
!12820 = !DILocation(line: 2728, column: 24, scope: !1544)
!12821 = !DILocation(line: 2728, column: 5, scope: !1544)
!12822 = !DILocation(line: 2728, column: 11, scope: !1544)
!12823 = !DILocation(line: 2728, column: 22, scope: !1544)
!12824 = !DILocation(line: 2729, column: 5, scope: !1544)
!12825 = !DILocation(line: 2730, column: 1, scope: !1544)
!12826 = !DILocation(line: 750, column: 22, scope: !1737)
!12827 = !DILocation(line: 750, column: 38, scope: !1737)
!12828 = !DILocation(line: 752, column: 37, scope: !1737)
!12829 = !DILocation(line: 752, column: 78, scope: !1737)
!12830 = !DILocation(line: 752, column: 84, scope: !1737)
!12831 = !DILocation(line: 752, column: 60, scope: !1737)
!12832 = !DILocation(line: 752, column: 94, scope: !1737)
!12833 = !DILocation(line: 752, column: 58, scope: !1737)
!12834 = !DILocation(line: 752, column: 12, scope: !1737)
!12835 = !DILocation(line: 752, column: 5, scope: !1737)
!12836 = !DILocation(line: 820, column: 23, scope: !1741)
!12837 = !DILocation(line: 820, column: 39, scope: !1741)
!12838 = !DILocation(line: 822, column: 38, scope: !1741)
!12839 = !DILocation(line: 822, column: 79, scope: !1741)
!12840 = !DILocation(line: 822, column: 85, scope: !1741)
!12841 = !DILocation(line: 822, column: 61, scope: !1741)
!12842 = !DILocation(line: 822, column: 95, scope: !1741)
!12843 = !DILocation(line: 822, column: 59, scope: !1741)
!12844 = !DILocation(line: 822, column: 12, scope: !1741)
!12845 = !DILocation(line: 822, column: 5, scope: !1741)
!12846 = !DILocation(line: 814, column: 21, scope: !1745)
!12847 = !DILocation(line: 814, column: 37, scope: !1745)
!12848 = !DILocation(line: 816, column: 36, scope: !1745)
!12849 = !DILocation(line: 816, column: 77, scope: !1745)
!12850 = !DILocation(line: 816, column: 83, scope: !1745)
!12851 = !DILocation(line: 816, column: 59, scope: !1745)
!12852 = !DILocation(line: 816, column: 93, scope: !1745)
!12853 = !DILocation(line: 816, column: 57, scope: !1745)
!12854 = !DILocation(line: 816, column: 12, scope: !1745)
!12855 = !DILocation(line: 816, column: 5, scope: !1745)
!12856 = !DILocation(line: 756, column: 24, scope: !1749)
!12857 = !DILocation(line: 756, column: 40, scope: !1749)
!12858 = !DILocation(line: 758, column: 35, scope: !1749)
!12859 = !DILocation(line: 759, column: 70, scope: !1749)
!12860 = !DILocation(line: 759, column: 76, scope: !1749)
!12861 = !DILocation(line: 759, column: 52, scope: !1749)
!12862 = !DILocation(line: 759, column: 86, scope: !1749)
!12863 = !DILocation(line: 759, column: 50, scope: !1749)
!12864 = !DILocation(line: 758, column: 12, scope: !1749)
!12865 = !DILocation(line: 758, column: 5, scope: !1749)
!12866 = !DILocation(line: 763, column: 24, scope: !1753)
!12867 = !DILocation(line: 763, column: 40, scope: !1753)
!12868 = !DILocation(line: 765, column: 35, scope: !1753)
!12869 = !DILocation(line: 766, column: 70, scope: !1753)
!12870 = !DILocation(line: 766, column: 76, scope: !1753)
!12871 = !DILocation(line: 766, column: 52, scope: !1753)
!12872 = !DILocation(line: 766, column: 86, scope: !1753)
!12873 = !DILocation(line: 766, column: 50, scope: !1753)
!12874 = !DILocation(line: 765, column: 12, scope: !1753)
!12875 = !DILocation(line: 765, column: 5, scope: !1753)
!12876 = !DILocation(line: 770, column: 22, scope: !1757)
!12877 = !DILocation(line: 770, column: 38, scope: !1757)
!12878 = !DILocation(line: 772, column: 10, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !1757, file: !13, line: 772, column: 9)
!12880 = !DILocation(line: 772, column: 16, scope: !12879)
!12881 = !DILocation(line: 772, column: 9, scope: !1757)
!12882 = !DILocation(line: 777, column: 31, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12879, file: !13, line: 772, column: 42)
!12884 = !DILocation(line: 777, column: 37, scope: !12883)
!12885 = !DILocation(line: 777, column: 16, scope: !12883)
!12886 = !DILocation(line: 777, column: 9, scope: !12883)
!12887 = !DILocation(line: 780, column: 35, scope: !1757)
!12888 = !DILocation(line: 781, column: 70, scope: !1757)
!12889 = !DILocation(line: 781, column: 76, scope: !1757)
!12890 = !DILocation(line: 781, column: 52, scope: !1757)
!12891 = !DILocation(line: 781, column: 86, scope: !1757)
!12892 = !DILocation(line: 781, column: 50, scope: !1757)
!12893 = !DILocation(line: 780, column: 12, scope: !1757)
!12894 = !DILocation(line: 780, column: 5, scope: !1757)
!12895 = !DILocation(line: 782, column: 1, scope: !1757)
!12896 = !DILocation(line: 785, column: 24, scope: !1761)
!12897 = !DILocation(line: 785, column: 40, scope: !1761)
!12898 = !DILocation(line: 787, column: 35, scope: !1761)
!12899 = !DILocation(line: 788, column: 70, scope: !1761)
!12900 = !DILocation(line: 788, column: 76, scope: !1761)
!12901 = !DILocation(line: 788, column: 52, scope: !1761)
!12902 = !DILocation(line: 788, column: 86, scope: !1761)
!12903 = !DILocation(line: 788, column: 50, scope: !1761)
!12904 = !DILocation(line: 787, column: 12, scope: !1761)
!12905 = !DILocation(line: 787, column: 5, scope: !1761)
!12906 = !DILocation(line: 792, column: 24, scope: !1765)
!12907 = !DILocation(line: 792, column: 40, scope: !1765)
!12908 = !DILocation(line: 794, column: 35, scope: !1765)
!12909 = !DILocation(line: 795, column: 70, scope: !1765)
!12910 = !DILocation(line: 795, column: 76, scope: !1765)
!12911 = !DILocation(line: 795, column: 52, scope: !1765)
!12912 = !DILocation(line: 795, column: 86, scope: !1765)
!12913 = !DILocation(line: 795, column: 50, scope: !1765)
!12914 = !DILocation(line: 794, column: 12, scope: !1765)
!12915 = !DILocation(line: 794, column: 5, scope: !1765)
!12916 = !DILocation(line: 799, column: 22, scope: !1769)
!12917 = !DILocation(line: 799, column: 38, scope: !1769)
!12918 = !DILocation(line: 801, column: 10, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !1769, file: !13, line: 801, column: 9)
!12920 = !DILocation(line: 801, column: 16, scope: !12919)
!12921 = !DILocation(line: 801, column: 9, scope: !1769)
!12922 = !DILocation(line: 806, column: 31, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12919, file: !13, line: 801, column: 42)
!12924 = !DILocation(line: 806, column: 37, scope: !12923)
!12925 = !DILocation(line: 806, column: 16, scope: !12923)
!12926 = !DILocation(line: 806, column: 9, scope: !12923)
!12927 = !DILocation(line: 809, column: 35, scope: !1769)
!12928 = !DILocation(line: 810, column: 70, scope: !1769)
!12929 = !DILocation(line: 810, column: 76, scope: !1769)
!12930 = !DILocation(line: 810, column: 52, scope: !1769)
!12931 = !DILocation(line: 810, column: 86, scope: !1769)
!12932 = !DILocation(line: 810, column: 50, scope: !1769)
!12933 = !DILocation(line: 809, column: 12, scope: !1769)
!12934 = !DILocation(line: 809, column: 5, scope: !1769)
!12935 = !DILocation(line: 811, column: 1, scope: !1769)
