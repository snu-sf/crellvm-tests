; ModuleID = 'programs_new/Python-new/_testbuffer.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type opaque
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.NDArrayObject = type { %struct._object, i32, %struct.ndbuf, %struct.ndbuf* }
%struct.ndbuf = type { %struct.ndbuf*, %struct.ndbuf*, i64, i64, i8*, i32, i64, %struct.bufferinfo }
%struct.PyPartialStructObject = type { %struct._object, i64, i64 }
%struct.StaticArrayObject = type { %struct._object, i32 }

@structmodule = global %struct._object* null, align 8
@Struct = global %struct._object* null, align 8
@calcsize = global %struct._object* null, align 8
@simple_format = global %struct._object* null, align 8
@_testbuffermodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i32 0, i32 0), i8* null, i64 -1, %struct.PyMethodDef* getelementptr inbounds ([8 x %struct.PyMethodDef], [8 x %struct.PyMethodDef]* @_testbuffer_functions, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@PyType_Type = external global %struct._typeobject, align 8
@NDArray_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i64 168, i64 0, void (%struct._object*)* bitcast (void (%struct.NDArrayObject*)* @ndarray_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @ndarray_as_sequence, %struct.PyMappingMethods* @ndarray_as_mapping, i64 (%struct._object*)* @ndarray_hash, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @ndarray_as_buffer, i64 262144, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([7 x %struct.PyMethodDef], [7 x %struct.PyMethodDef]* @ndarray_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([15 x %struct.PyGetSetDef], [15 x %struct.PyGetSetDef]* @ndarray_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @ndarray_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @ndarray_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str = private unnamed_addr constant [8 x i8] c"ndarray\00", align 1
@StaticArray_Type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i64 24, i64 0, void (%struct._object*)* bitcast (void (%struct.StaticArrayObject*)* @staticarray_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @staticarray_as_buffer, i64 262144, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @staticarray_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @staticarray_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"staticarray\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Struct\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"calcsize\00", align 1
@simple_fmt = internal global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), align 8
@.str.5 = private unnamed_addr constant [12 x i8] c"ND_MAX_NDIM\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"ND_VAREXPORT\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"ND_WRITABLE\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"ND_FORTRAN\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"ND_SCALAR\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"ND_PIL\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"ND_GETBUF_FAIL\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"ND_GETBUF_UNDEFINED\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"ND_REDIRECT\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"PyBUF_SIMPLE\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"PyBUF_WRITABLE\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"PyBUF_FORMAT\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"PyBUF_ND\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"PyBUF_STRIDES\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"PyBUF_INDIRECT\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"PyBUF_C_CONTIGUOUS\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"PyBUF_F_CONTIGUOUS\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"PyBUF_ANY_CONTIGUOUS\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"PyBUF_FULL\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"PyBUF_FULL_RO\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"PyBUF_RECORDS\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"PyBUF_RECORDS_RO\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"PyBUF_STRIDED\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"PyBUF_STRIDED_RO\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"PyBUF_CONTIG\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"PyBUF_CONTIG_RO\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"PyBUF_READ\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"PyBUF_WRITE\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"_testbuffer\00", align 1
@_testbuffer_functions = internal global [8 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @slice_indices, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @get_pointer, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @get_sizeof_void_p to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @get_contiguous, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @py_buffer_to_contiguous, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @is_contiguous, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @cmp_contig, i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@.str.34 = private unnamed_addr constant [14 x i8] c"slice_indices\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"get_pointer\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"get_sizeof_void_p\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"get_contiguous\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"py_buffer_to_contiguous\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"is_contiguous\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"cmp_contig\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"On\00", align 1
@PySlice_Type = external global %struct._typeobject, align 8
@PyExc_TypeError = external global %struct._object*, align 8
@.str.42 = private unnamed_addr constant [38 x i8] c"first argument must be a slice object\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"OO\00", align 1
@.str.44 = private unnamed_addr constant [30 x i8] c"seq must be a list or a tuple\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.45 = private unnamed_addr constant [25 x i8] c"get_pointer(): ndim > %d\00", align 1
@.str.46 = private unnamed_addr constant [36 x i8] c"get_pointer(): len(indices) != ndim\00", align 1
@.str.47 = private unnamed_addr constant [49 x i8] c"get_pointer(): invalid index %zd at position %zd\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"unpack_from\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"sO\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"OOO\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"buffertype must be PyBUF_READ or PyBUF_WRITE\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"invalid buffer type\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"order must be a string\00", align 1
@.str.55 = private unnamed_addr constant [33 x i8] c"invalid order, must be C, F or A\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"OOi\00", align 1
@.str.57 = private unnamed_addr constant [61 x i8] c"is_contiguous: object does not implement the buffer protocol\00", align 1
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.58 = private unnamed_addr constant [66 x i8] c"cmp_contig: first argument does not implement the buffer protocol\00", align 1
@.str.59 = private unnamed_addr constant [67 x i8] c"cmp_contig: second argument does not implement the buffer protocol\00", align 1
@ndarray_as_sequence = internal global %struct.PySequenceMethods { i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null, %struct._object* (%struct._object*, i64)* bitcast (%struct._object* (%struct.NDArrayObject*, i64)* @ndarray_item to %struct._object* (%struct._object*, i64)*), i8* null, i32 (%struct._object*, i64, %struct._object*)* null, i8* null, i32 (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null }, align 8
@ndarray_as_mapping = internal global %struct.PyMappingMethods { i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.NDArrayObject*, %struct._object*)* @ndarray_subscript to %struct._object* (%struct._object*, %struct._object*)*), i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.NDArrayObject*, %struct._object*, %struct._object*)* @ndarray_ass_subscript to i32 (%struct._object*, %struct._object*, %struct._object*)*) }, align 8
@ndarray_as_buffer = internal global %struct.PyBufferProcs { i32 (%struct._object*, %struct.bufferinfo*, i32)* bitcast (i32 (%struct.NDArrayObject*, %struct.bufferinfo*, i32)* @ndarray_getbuf to i32 (%struct._object*, %struct.bufferinfo*, i32)*), void (%struct._object*, %struct.bufferinfo*)* bitcast (i32 (%struct.NDArrayObject*, %struct.bufferinfo*)* @ndarray_releasebuf to void (%struct._object*, %struct.bufferinfo*)*) }, align 8
@ndarray_methods = internal global [7 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @ndarray_tolist, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @ndarray_tobytes, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @ndarray_push to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @ndarray_pop, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @ndarray_add_suboffsets, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.81, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @ndarray_memoryview_from_buffer, i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@ndarray_getset = internal global [15 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_flags to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_offset to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_obj to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_nbytes to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_readonly to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_itemsize to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_format to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_ndim to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_shape to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_strides to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.122, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_suboffsets to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.123, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*, %struct._object*)* @ndarray_c_contig to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.124, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*, %struct._object*)* @ndarray_fortran_contig to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.125, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*, %struct._object*)* @ndarray_contig to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* null, i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.60 = private unnamed_addr constant [27 x i8] c"invalid indexing of scalar\00", align 1
@PyExc_IndexError = external global %struct._object*, align 8
@.str.61 = private unnamed_addr constant [20 x i8] c"index out of bounds\00", align 1
@_Py_EllipsisObject = external global %struct._object, align 8
@.str.62 = private unnamed_addr constant [35 x i8] c"cannot index memory using \22%.200s\22\00", align 1
@.str.63 = private unnamed_addr constant [24 x i8] c"ndarray is not writable\00", align 1
@.str.64 = private unnamed_addr constant [31 x i8] c"ndarray data cannot be deleted\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"pack_into\00", align 1
@PyFloat_Type = external global %struct._typeobject, align 8
@.str.66 = private unnamed_addr constant [55 x i8] c"mismatch between initializer element and format string\00", align 1
@.str.67 = private unnamed_addr constant [64 x i8] c"ndarray assignment: lvalue and rvalue have different structures\00", align 1
@.str.68 = private unnamed_addr constant [36 x i8] c"cannot hash writable ndarray object\00", align 1
@PyExc_BufferError = external global %struct._object*, align 8
@.str.69 = private unnamed_addr constant [54 x i8] c"re-exporter does not provide format, shape or strides\00", align 1
@.str.70 = private unnamed_addr constant [38 x i8] c"ND_GETBUF_FAIL: forced test exception\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"ndarray is not C-contiguous\00", align 1
@.str.72 = private unnamed_addr constant [34 x i8] c"ndarray is not Fortran contiguous\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"ndarray is not contiguous\00", align 1
@.str.74 = private unnamed_addr constant [49 x i8] c"ndarray cannot be represented without suboffsets\00", align 1
@.str.75 = private unnamed_addr constant [69 x i8] c"ndarray: cannot cast to unsigned bytes if the format flag is present\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"tolist\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"tobytes\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"push\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"pop\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"add_suboffsets\00", align 1
@.str.81 = private unnamed_addr constant [23 x i8] c"memoryview_from_buffer\00", align 1
@.str.82 = private unnamed_addr constant [62 x i8] c"ndarray: tolist() does not support format=NULL, use tobytes()\00", align 1
@ndarray_push.kwlist = internal global [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), i8* null], align 16
@.str.83 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"shape\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"strides\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.89 = private unnamed_addr constant [8 x i8] c"OO|OnOi\00", align 1
@.str.90 = private unnamed_addr constant [58 x i8] c"ND_VAREXPORT flag can only be used during object creation\00", align 1
@.str.91 = private unnamed_addr constant [46 x i8] c"structure of re-exporting object is immutable\00", align 1
@.str.92 = private unnamed_addr constant [47 x i8] c"cannot change structure: %zd exported buffer%s\00", align 1
@.str.93 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.94 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@.str.95 = private unnamed_addr constant [32 x i8] c"shape must be a list or a tuple\00", align 1
@.str.96 = private unnamed_addr constant [24 x i8] c"ndim must not exceed %d\00", align 1
@.str.97 = private unnamed_addr constant [34 x i8] c"strides must be a list or a tuple\00", align 1
@.str.98 = private unnamed_addr constant [48 x i8] c"ND_FORTRAN cannot be used together with strides\00", align 1
@.str.99 = private unnamed_addr constant [27 x i8] c"len(shape) != len(strides)\00", align 1
@.str.100 = private unnamed_addr constant [26 x i8] c"itemsize must not be zero\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"(O)\00", align 1
@.str.102 = private unnamed_addr constant [32 x i8] c"items must be a list or a tuple\00", align 1
@.str.103 = private unnamed_addr constant [44 x i8] c"initializer list or tuple must not be empty\00", align 1
@.str.104 = private unnamed_addr constant [38 x i8] c"offset must be a multiple of itemsize\00", align 1
@.str.105 = private unnamed_addr constant [21 x i8] c"offset out of bounds\00", align 1
@.str.106 = private unnamed_addr constant [51 x i8] c"ndim = 0 cannot be used in conjunction with ND_PIL\00", align 1
@.str.107 = private unnamed_addr constant [32 x i8] c"elements of %s must be integers\00", align 1
@.str.108 = private unnamed_addr constant [40 x i8] c"elements of shape must be integers >= 0\00", align 1
@.str.109 = private unnamed_addr constant [39 x i8] c"strides must be a multiple of itemsize\00", align 1
@.str.110 = private unnamed_addr constant [49 x i8] c"invalid combination of buffer, shape and strides\00", align 1
@.str.111 = private unnamed_addr constant [28 x i8] c"list only has a single base\00", align 1
@.str.112 = private unnamed_addr constant [41 x i8] c"cannot add suboffsets to PIL-style array\00", align 1
@.str.113 = private unnamed_addr constant [47 x i8] c"cannot add suboffsets to array without strides\00", align 1
@ndarray_memoryview_from_buffer.format = internal global [129 x i8] zeroinitializer, align 16
@ndarray_memoryview_from_buffer.shape = internal global [128 x i64] zeroinitializer, align 16
@ndarray_memoryview_from_buffer.strides = internal global [128 x i64] zeroinitializer, align 16
@ndarray_memoryview_from_buffer.suboffsets = internal global [128 x i64] zeroinitializer, align 16
@ndarray_memoryview_from_buffer.info = internal global %struct.bufferinfo zeroinitializer, align 8
@.str.114 = private unnamed_addr constant [103 x i8] c"memoryview_from_buffer(): ndarray must be original exporter or consumer from ndarray/original exporter\00", align 1
@infobuf = internal global i8* null, align 8
@.str.115 = private unnamed_addr constant [59 x i8] c"memoryview_from_buffer: format is limited to %d characters\00", align 1
@.str.116 = private unnamed_addr constant [46 x i8] c"memoryview_from_buffer: ndim is limited to %d\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"nbytes\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"itemsize\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"ndim\00", align 1
@.str.122 = private unnamed_addr constant [11 x i8] c"suboffsets\00", align 1
@.str.123 = private unnamed_addr constant [13 x i8] c"c_contiguous\00", align 1
@.str.124 = private unnamed_addr constant [13 x i8] c"f_contiguous\00", align 1
@.str.125 = private unnamed_addr constant [11 x i8] c"contiguous\00", align 1
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.126 = private unnamed_addr constant [54 x i8] c"results from PyBuffer_IsContiguous() and flags differ\00", align 1
@ndarray_init.kwlist = internal global [8 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i8* null], align 16
@.str.127 = private unnamed_addr constant [7 x i8] c"getbuf\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"O|OOnOii\00", align 1
@.str.129 = private unnamed_addr constant [83 x i8] c"construction from exporter object only takes 'obj', 'getbuf' and 'flags' arguments\00", align 1
@.str.130 = private unnamed_addr constant [65 x i8] c"getbuf argument only valid for construction from exporter object\00", align 1
@.str.131 = private unnamed_addr constant [74 x i8] c"shape is a required argument when constructing from list, tuple or scalar\00", align 1
@staticarray_as_buffer = internal global %struct.PyBufferProcs { i32 (%struct._object*, %struct.bufferinfo*, i32)* bitcast (i32 (%struct.StaticArrayObject*, %struct.bufferinfo*, i32)* @staticarray_getbuf to i32 (%struct._object*, %struct.bufferinfo*, i32)*), void (%struct._object*, %struct.bufferinfo*)* null }, align 8
@static_buffer = internal global %struct.bufferinfo { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @static_mem, i32 0, i32 0), %struct._object* null, i64 12, i64 1, i32 1, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i64* getelementptr inbounds ([1 x i64], [1 x i64]* @static_shape, i32 0, i32 0), i64* getelementptr inbounds ([1 x i64], [1 x i64]* @static_strides, i32 0, i32 0), i64* null, i8* null }, align 8
@static_mem = internal global [12 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B", align 1
@static_shape = internal global [1 x i64] [i64 12], align 8
@static_strides = internal global [1 x i64] [i64 1], align 8
@staticarray_init.kwlist = internal global [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.132, i32 0, i32 0), i8* null], align 16
@.str.132 = private unnamed_addr constant [12 x i8] c"legacy_mode\00", align 1
@.str.133 = private unnamed_addr constant [3 x i8] c"|O\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__testbuffer() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct._object** %m to i8*, !dbg !1359
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1359
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !415, metadata !1360), !dbg !1361
  %call = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @_testbuffermodule, i32 1013), !dbg !1362
  store %struct._object* %call, %struct._object** %m, align 8, !dbg !1363, !tbaa !1364
  %1 = load %struct._object*, %struct._object** %m, align 8, !dbg !1368, !tbaa !1364
  %cmp = icmp eq %struct._object* %1, null, !dbg !1370
  br i1 %cmp, label %if.then, label %if.end, !dbg !1371

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1372
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1372

if.end:                                           ; preds = %entry
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @NDArray_Type, i32 0, i32 0, i32 0, i32 1), align 8, !dbg !1373, !tbaa !1374
  %2 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @NDArray_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !1377, !tbaa !1378
  %inc = add i64 %2, 1, !dbg !1377
  store i64 %inc, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @NDArray_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !1377, !tbaa !1378
  %3 = load %struct._object*, %struct._object** %m, align 8, !dbg !1379, !tbaa !1364
  %call1 = call i32 @PyModule_AddObject(%struct._object* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @NDArray_Type, i32 0, i32 0, i32 0)), !dbg !1380
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StaticArray_Type, i32 0, i32 0, i32 0, i32 1), align 8, !dbg !1381, !tbaa !1374
  %4 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StaticArray_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !1382, !tbaa !1378
  %inc2 = add i64 %4, 1, !dbg !1382
  store i64 %inc2, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StaticArray_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !1382, !tbaa !1378
  %5 = load %struct._object*, %struct._object** %m, align 8, !dbg !1383, !tbaa !1364
  %call3 = call i32 @PyModule_AddObject(%struct._object* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @StaticArray_Type, i32 0, i32 0, i32 0)), !dbg !1384
  %call4 = call %struct._object* @PyImport_ImportModule(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0)), !dbg !1385
  store %struct._object* %call4, %struct._object** @structmodule, align 8, !dbg !1386, !tbaa !1364
  %6 = load %struct._object*, %struct._object** @structmodule, align 8, !dbg !1387, !tbaa !1364
  %cmp5 = icmp eq %struct._object* %6, null, !dbg !1389
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !1390

if.then.6:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !1391
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1391

if.end.7:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** @structmodule, align 8, !dbg !1392, !tbaa !1364
  %call8 = call %struct._object* @PyObject_GetAttrString(%struct._object* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)), !dbg !1393
  store %struct._object* %call8, %struct._object** @Struct, align 8, !dbg !1394, !tbaa !1364
  %8 = load %struct._object*, %struct._object** @structmodule, align 8, !dbg !1395, !tbaa !1364
  %call9 = call %struct._object* @PyObject_GetAttrString(%struct._object* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0)), !dbg !1396
  store %struct._object* %call9, %struct._object** @calcsize, align 8, !dbg !1397, !tbaa !1364
  %9 = load %struct._object*, %struct._object** @Struct, align 8, !dbg !1398, !tbaa !1364
  %cmp10 = icmp eq %struct._object* %9, null, !dbg !1400
  br i1 %cmp10, label %if.then.12, label %lor.lhs.false, !dbg !1401

lor.lhs.false:                                    ; preds = %if.end.7
  %10 = load %struct._object*, %struct._object** @calcsize, align 8, !dbg !1402, !tbaa !1364
  %cmp11 = icmp eq %struct._object* %10, null, !dbg !1404
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !1405

if.then.12:                                       ; preds = %lor.lhs.false, %if.end.7
  store %struct._object* null, %struct._object** %retval, !dbg !1406
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1406

if.end.13:                                        ; preds = %lor.lhs.false
  %11 = load i8*, i8** @simple_fmt, align 8, !dbg !1407, !tbaa !1364
  %call14 = call %struct._object* @PyUnicode_FromString(i8* %11), !dbg !1408
  store %struct._object* %call14, %struct._object** @simple_format, align 8, !dbg !1409, !tbaa !1364
  %12 = load %struct._object*, %struct._object** @simple_format, align 8, !dbg !1410, !tbaa !1364
  %cmp15 = icmp eq %struct._object* %12, null, !dbg !1412
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !1413

if.then.16:                                       ; preds = %if.end.13
  store %struct._object* null, %struct._object** %retval, !dbg !1414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1414

if.end.17:                                        ; preds = %if.end.13
  %13 = load %struct._object*, %struct._object** %m, align 8, !dbg !1415, !tbaa !1364
  %call18 = call i32 @PyModule_AddIntConstant(%struct._object* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i64 128), !dbg !1416
  %14 = load %struct._object*, %struct._object** %m, align 8, !dbg !1417, !tbaa !1364
  %call19 = call i32 @PyModule_AddIntConstant(%struct._object* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), i64 1), !dbg !1418
  %15 = load %struct._object*, %struct._object** %m, align 8, !dbg !1419, !tbaa !1364
  %call20 = call i32 @PyModule_AddIntConstant(%struct._object* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0), i64 2), !dbg !1420
  %16 = load %struct._object*, %struct._object** %m, align 8, !dbg !1421, !tbaa !1364
  %call21 = call i32 @PyModule_AddIntConstant(%struct._object* %16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i64 4), !dbg !1422
  %17 = load %struct._object*, %struct._object** %m, align 8, !dbg !1423, !tbaa !1364
  %call22 = call i32 @PyModule_AddIntConstant(%struct._object* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i64 8), !dbg !1424
  %18 = load %struct._object*, %struct._object** %m, align 8, !dbg !1425, !tbaa !1364
  %call23 = call i32 @PyModule_AddIntConstant(%struct._object* %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i64 16), !dbg !1426
  %19 = load %struct._object*, %struct._object** %m, align 8, !dbg !1427, !tbaa !1364
  %call24 = call i32 @PyModule_AddIntConstant(%struct._object* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i64 64), !dbg !1428
  %20 = load %struct._object*, %struct._object** %m, align 8, !dbg !1429, !tbaa !1364
  %call25 = call i32 @PyModule_AddIntConstant(%struct._object* %20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i64 128), !dbg !1430
  %21 = load %struct._object*, %struct._object** %m, align 8, !dbg !1431, !tbaa !1364
  %call26 = call i32 @PyModule_AddIntConstant(%struct._object* %21, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i32 0, i32 0), i64 32), !dbg !1432
  %22 = load %struct._object*, %struct._object** %m, align 8, !dbg !1433, !tbaa !1364
  %call27 = call i32 @PyModule_AddIntConstant(%struct._object* %22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i64 0), !dbg !1434
  %23 = load %struct._object*, %struct._object** %m, align 8, !dbg !1435, !tbaa !1364
  %call28 = call i32 @PyModule_AddIntConstant(%struct._object* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i64 1), !dbg !1436
  %24 = load %struct._object*, %struct._object** %m, align 8, !dbg !1437, !tbaa !1364
  %call29 = call i32 @PyModule_AddIntConstant(%struct._object* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), i64 4), !dbg !1438
  %25 = load %struct._object*, %struct._object** %m, align 8, !dbg !1439, !tbaa !1364
  %call30 = call i32 @PyModule_AddIntConstant(%struct._object* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i32 0, i32 0), i64 8), !dbg !1440
  %26 = load %struct._object*, %struct._object** %m, align 8, !dbg !1441, !tbaa !1364
  %call31 = call i32 @PyModule_AddIntConstant(%struct._object* %26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i32 0, i32 0), i64 24), !dbg !1442
  %27 = load %struct._object*, %struct._object** %m, align 8, !dbg !1443, !tbaa !1364
  %call32 = call i32 @PyModule_AddIntConstant(%struct._object* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i64 280), !dbg !1444
  %28 = load %struct._object*, %struct._object** %m, align 8, !dbg !1445, !tbaa !1364
  %call33 = call i32 @PyModule_AddIntConstant(%struct._object* %28, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i32 0, i32 0), i64 56), !dbg !1446
  %29 = load %struct._object*, %struct._object** %m, align 8, !dbg !1447, !tbaa !1364
  %call34 = call i32 @PyModule_AddIntConstant(%struct._object* %29, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i32 0, i32 0), i64 88), !dbg !1448
  %30 = load %struct._object*, %struct._object** %m, align 8, !dbg !1449, !tbaa !1364
  %call35 = call i32 @PyModule_AddIntConstant(%struct._object* %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i32 0, i32 0), i64 152), !dbg !1450
  %31 = load %struct._object*, %struct._object** %m, align 8, !dbg !1451, !tbaa !1364
  %call36 = call i32 @PyModule_AddIntConstant(%struct._object* %31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i64 285), !dbg !1452
  %32 = load %struct._object*, %struct._object** %m, align 8, !dbg !1453, !tbaa !1364
  %call37 = call i32 @PyModule_AddIntConstant(%struct._object* %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i64 284), !dbg !1454
  %33 = load %struct._object*, %struct._object** %m, align 8, !dbg !1455, !tbaa !1364
  %call38 = call i32 @PyModule_AddIntConstant(%struct._object* %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i32 0, i32 0), i64 29), !dbg !1456
  %34 = load %struct._object*, %struct._object** %m, align 8, !dbg !1457, !tbaa !1364
  %call39 = call i32 @PyModule_AddIntConstant(%struct._object* %34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0), i64 28), !dbg !1458
  %35 = load %struct._object*, %struct._object** %m, align 8, !dbg !1459, !tbaa !1364
  %call40 = call i32 @PyModule_AddIntConstant(%struct._object* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0), i64 25), !dbg !1460
  %36 = load %struct._object*, %struct._object** %m, align 8, !dbg !1461, !tbaa !1364
  %call41 = call i32 @PyModule_AddIntConstant(%struct._object* %36, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i64 24), !dbg !1462
  %37 = load %struct._object*, %struct._object** %m, align 8, !dbg !1463, !tbaa !1364
  %call42 = call i32 @PyModule_AddIntConstant(%struct._object* %37, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i32 0, i32 0), i64 9), !dbg !1464
  %38 = load %struct._object*, %struct._object** %m, align 8, !dbg !1465, !tbaa !1364
  %call43 = call i32 @PyModule_AddIntConstant(%struct._object* %38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i64 8), !dbg !1466
  %39 = load %struct._object*, %struct._object** %m, align 8, !dbg !1467, !tbaa !1364
  %call44 = call i32 @PyModule_AddIntConstant(%struct._object* %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i64 256), !dbg !1468
  %40 = load %struct._object*, %struct._object** %m, align 8, !dbg !1469, !tbaa !1364
  %call45 = call i32 @PyModule_AddIntConstant(%struct._object* %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i64 512), !dbg !1470
  %41 = load %struct._object*, %struct._object** %m, align 8, !dbg !1471, !tbaa !1364
  store %struct._object* %41, %struct._object** %retval, !dbg !1472
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1472

cleanup:                                          ; preds = %if.end.17, %if.then.16, %if.then.12, %if.then.6, %if.then
  %42 = bitcast %struct._object** %m to i8*, !dbg !1473
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !1473
  %43 = load %struct._object*, %struct._object** %retval, !dbg !1473
  ret %struct._object* %43, !dbg !1473
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyImport_ImportModule(i8*) #3

declare %struct._object* @PyObject_GetAttrString(%struct._object*, i8*) #3

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare i32 @PyModule_AddIntConstant(%struct._object*, i8*, i64) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @slice_indices(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %key = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %s = alloca [4 x i64], align 16
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !418, metadata !1360), !dbg !1474
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !419, metadata !1360), !dbg !1475
  %0 = bitcast %struct._object** %ret to i8*, !dbg !1476
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1476
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !420, metadata !1360), !dbg !1477
  %1 = bitcast %struct._object** %key to i8*, !dbg !1476
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1476
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !421, metadata !1360), !dbg !1478
  %2 = bitcast %struct._object** %tmp to i8*, !dbg !1476
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1476
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !422, metadata !1360), !dbg !1479
  %3 = bitcast [4 x i64]* %s to i8*, !dbg !1480
  call void @llvm.lifetime.start(i64 32, i8* %3) #1, !dbg !1480
  call void @llvm.dbg.declare(metadata [4 x i64]* %s, metadata !423, metadata !1360), !dbg !1481
  %4 = bitcast i64* %i to i8*, !dbg !1482
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1482
  call void @llvm.dbg.declare(metadata i64* %i, metadata !427, metadata !1360), !dbg !1483
  %5 = bitcast i64* %len to i8*, !dbg !1482
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !1482
  call void @llvm.dbg.declare(metadata i64* %len, metadata !428, metadata !1360), !dbg !1484
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1485, !tbaa !1364
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), %struct._object** %key, i64* %len), !dbg !1487
  %tobool = icmp ne i32 %call, 0, !dbg !1487
  br i1 %tobool, label %if.end, label %if.then, !dbg !1488

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1489

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %key, align 8, !dbg !1491, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !1493
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1493, !tbaa !1374
  %cmp = icmp eq %struct._typeobject* %8, @PySlice_Type, !dbg !1494
  br i1 %cmp, label %if.end.5, label %if.then.4, !dbg !1495

if.then.4:                                        ; preds = %if.end
  %9 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1496, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.42, i32 0, i32 0)), !dbg !1498
  store %struct._object* null, %struct._object** %retval, !dbg !1499
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1499

if.end.5:                                         ; preds = %if.end
  %10 = load %struct._object*, %struct._object** %key, align 8, !dbg !1500, !tbaa !1364
  %11 = load i64, i64* %len, align 8, !dbg !1502, !tbaa !1503
  %arrayidx = getelementptr [4 x i64], [4 x i64]* %s, i32 0, i64 0, !dbg !1504
  %arrayidx6 = getelementptr [4 x i64], [4 x i64]* %s, i32 0, i64 1, !dbg !1505
  %arrayidx7 = getelementptr [4 x i64], [4 x i64]* %s, i32 0, i64 2, !dbg !1506
  %arrayidx8 = getelementptr [4 x i64], [4 x i64]* %s, i32 0, i64 3, !dbg !1507
  %call9 = call i32 @PySlice_GetIndicesEx(%struct._object* %10, i64 %11, i64* %arrayidx, i64* %arrayidx6, i64* %arrayidx7, i64* %arrayidx8), !dbg !1508
  %cmp10 = icmp slt i32 %call9, 0, !dbg !1509
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !1510

if.then.11:                                       ; preds = %if.end.5
  store %struct._object* null, %struct._object** %retval, !dbg !1511
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1511

if.end.12:                                        ; preds = %if.end.5
  %call13 = call %struct._object* @PyTuple_New(i64 4), !dbg !1513
  store %struct._object* %call13, %struct._object** %ret, align 8, !dbg !1514, !tbaa !1364
  %12 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1515, !tbaa !1364
  %cmp14 = icmp eq %struct._object* %12, null, !dbg !1517
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !1518

if.then.15:                                       ; preds = %if.end.12
  store %struct._object* null, %struct._object** %retval, !dbg !1519
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1519

if.end.16:                                        ; preds = %if.end.12
  store i64 0, i64* %i, align 8, !dbg !1520, !tbaa !1503
  br label %for.cond, !dbg !1522

for.cond:                                         ; preds = %for.inc, %if.end.16
  %13 = load i64, i64* %i, align 8, !dbg !1523, !tbaa !1503
  %cmp17 = icmp slt i64 %13, 4, !dbg !1527
  br i1 %cmp17, label %for.body, label %for.end, !dbg !1528

for.body:                                         ; preds = %for.cond
  %14 = load i64, i64* %i, align 8, !dbg !1529, !tbaa !1503
  %arrayidx18 = getelementptr [4 x i64], [4 x i64]* %s, i32 0, i64 %14, !dbg !1531
  %15 = load i64, i64* %arrayidx18, align 8, !dbg !1531, !tbaa !1503
  %call19 = call %struct._object* @PyLong_FromSsize_t(i64 %15), !dbg !1532
  store %struct._object* %call19, %struct._object** %tmp, align 8, !dbg !1533, !tbaa !1364
  %16 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !1534, !tbaa !1364
  %cmp20 = icmp eq %struct._object* %16, null, !dbg !1536
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !1537

if.then.21:                                       ; preds = %for.body
  br label %error, !dbg !1538

if.end.22:                                        ; preds = %for.body
  %17 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !1539, !tbaa !1364
  %18 = load i64, i64* %i, align 8, !dbg !1540, !tbaa !1503
  %19 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1541, !tbaa !1364
  %20 = bitcast %struct._object* %19 to %struct.PyTupleObject*, !dbg !1542
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %20, i32 0, i32 1, !dbg !1543
  %arrayidx23 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %18, !dbg !1544
  store %struct._object* %17, %struct._object** %arrayidx23, align 8, !dbg !1545, !tbaa !1364
  br label %for.inc, !dbg !1546

for.inc:                                          ; preds = %if.end.22
  %21 = load i64, i64* %i, align 8, !dbg !1547, !tbaa !1503
  %inc = add i64 %21, 1, !dbg !1547
  store i64 %inc, i64* %i, align 8, !dbg !1547, !tbaa !1503
  br label %for.cond, !dbg !1548

for.end:                                          ; preds = %for.cond
  %22 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1549, !tbaa !1364
  store %struct._object* %22, %struct._object** %retval, !dbg !1550
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1550

error:                                            ; preds = %if.then.21
  br label %do.body, !dbg !1551

do.body:                                          ; preds = %error
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1552
  call void @llvm.lifetime.start(i64 8, i8* %23) #1, !dbg !1552
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !429, metadata !1360), !dbg !1554
  %24 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1555, !tbaa !1364
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !1554, !tbaa !1364
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1556, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !1558
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !1559, !tbaa !1378
  %dec = add i64 %26, -1, !dbg !1559
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !1559, !tbaa !1378
  %cmp25 = icmp ne i64 %dec, 0, !dbg !1560
  br i1 %cmp25, label %if.then.26, label %if.else, !dbg !1561

if.then.26:                                       ; preds = %do.body
  br label %if.end.28, !dbg !1562

if.else:                                          ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1564, !tbaa !1364
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !1566
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !1566, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !1567
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1567, !tbaa !1568
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1572, !tbaa !1364
  call void %29(%struct._object* %30), !dbg !1573
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.26
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1574
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !1574
  br label %do.cond, !dbg !1576

do.cond:                                          ; preds = %if.end.28
  br label %do.end, !dbg !1577

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !1579
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1579

cleanup:                                          ; preds = %do.end, %for.end, %if.then.15, %if.then.11, %if.then.4, %if.then
  %32 = bitcast i64* %len to i8*, !dbg !1580
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !1580
  %33 = bitcast i64* %i to i8*, !dbg !1580
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !1580
  %34 = bitcast [4 x i64]* %s to i8*, !dbg !1580
  call void @llvm.lifetime.end(i64 32, i8* %34) #1, !dbg !1580
  %35 = bitcast %struct._object** %tmp to i8*, !dbg !1580
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !1580
  %36 = bitcast %struct._object** %key to i8*, !dbg !1580
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !1580
  %37 = bitcast %struct._object** %ret to i8*, !dbg !1580
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !1580
  %38 = load %struct._object*, %struct._object** %retval, !dbg !1580
  ret %struct._object* %38, !dbg !1580
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_pointer(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %bufobj = alloca %struct._object*, align 8
  %seq = alloca %struct._object*, align 8
  %view = alloca %struct.bufferinfo, align 8
  %indices = alloca [128 x i64], align 16
  %i = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %x = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !433, metadata !1360), !dbg !1581
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !434, metadata !1360), !dbg !1582
  %0 = bitcast %struct._object** %ret to i8*, !dbg !1583
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1583
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !435, metadata !1360), !dbg !1584
  store %struct._object* null, %struct._object** %ret, align 8, !dbg !1584, !tbaa !1364
  %1 = bitcast %struct._object** %bufobj to i8*, !dbg !1583
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1583
  call void @llvm.dbg.declare(metadata %struct._object** %bufobj, metadata !436, metadata !1360), !dbg !1585
  %2 = bitcast %struct._object** %seq to i8*, !dbg !1583
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1583
  call void @llvm.dbg.declare(metadata %struct._object** %seq, metadata !437, metadata !1360), !dbg !1586
  %3 = bitcast %struct.bufferinfo* %view to i8*, !dbg !1587
  call void @llvm.lifetime.start(i64 80, i8* %3) #1, !dbg !1587
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %view, metadata !438, metadata !1360), !dbg !1588
  %4 = bitcast [128 x i64]* %indices to i8*, !dbg !1589
  call void @llvm.lifetime.start(i64 1024, i8* %4) #1, !dbg !1589
  call void @llvm.dbg.declare(metadata [128 x i64]* %indices, metadata !439, metadata !1360), !dbg !1590
  %5 = bitcast i64* %i to i8*, !dbg !1591
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !1591
  call void @llvm.dbg.declare(metadata i64* %i, metadata !443, metadata !1360), !dbg !1592
  %6 = bitcast i8** %ptr to i8*, !dbg !1593
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !1593
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !444, metadata !1360), !dbg !1594
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1595, !tbaa !1364
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), %struct._object** %bufobj, %struct._object** %seq), !dbg !1597
  %tobool = icmp ne i32 %call, 0, !dbg !1597
  br i1 %tobool, label %if.end, label %if.then, !dbg !1598

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1599
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.59, !dbg !1599

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1601, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !1603
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1603, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 19, !dbg !1604
  %10 = load i64, i64* %tp_flags, align 8, !dbg !1604, !tbaa !1605
  %and = and i64 %10, 33554432, !dbg !1606
  %cmp = icmp ne i64 %and, 0, !dbg !1607
  br i1 %cmp, label %if.end.6, label %land.lhs.true, !dbg !1608

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1609, !tbaa !1364
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !1611
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !1611, !tbaa !1374
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 19, !dbg !1612
  %13 = load i64, i64* %tp_flags2, align 8, !dbg !1612, !tbaa !1605
  %and3 = and i64 %13, 67108864, !dbg !1613
  %cmp4 = icmp ne i64 %and3, 0, !dbg !1614
  br i1 %cmp4, label %if.end.6, label %if.then.5, !dbg !1615

if.then.5:                                        ; preds = %land.lhs.true
  %14 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1616, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.44, i32 0, i32 0)), !dbg !1619
  store %struct._object* null, %struct._object** %retval, !dbg !1620
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.59, !dbg !1620

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %15 = load %struct._object*, %struct._object** %bufobj, align 8, !dbg !1621, !tbaa !1364
  %call7 = call i32 @PyObject_GetBuffer(%struct._object* %15, %struct.bufferinfo* %view, i32 284), !dbg !1623
  %cmp8 = icmp slt i32 %call7, 0, !dbg !1624
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !1625

if.then.9:                                        ; preds = %if.end.6
  store %struct._object* null, %struct._object** %retval, !dbg !1626
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.59, !dbg !1626

if.end.10:                                        ; preds = %if.end.6
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !1627
  %16 = load i32, i32* %ndim, align 4, !dbg !1627, !tbaa !1629
  %cmp11 = icmp sgt i32 %16, 128, !dbg !1631
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !1632

if.then.12:                                       ; preds = %if.end.10
  %17 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1633, !tbaa !1364
  %call13 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.45, i32 0, i32 0), i32 128), !dbg !1635
  br label %out, !dbg !1636

if.end.14:                                        ; preds = %if.end.10
  %18 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1637, !tbaa !1364
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !1639
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !1639, !tbaa !1374
  %tp_flags16 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 19, !dbg !1640
  %20 = load i64, i64* %tp_flags16, align 8, !dbg !1640, !tbaa !1605
  %and17 = and i64 %20, 33554432, !dbg !1641
  %cmp18 = icmp ne i64 %and17, 0, !dbg !1642
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !1643

cond.true:                                        ; preds = %if.end.14
  %21 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1644, !tbaa !1364
  %22 = bitcast %struct._object* %21 to %struct.PyVarObject*, !dbg !1646
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1, !dbg !1647
  %23 = load i64, i64* %ob_size, align 8, !dbg !1647, !tbaa !1648
  br label %cond.end, !dbg !1643

cond.false:                                       ; preds = %if.end.14
  %24 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1649, !tbaa !1364
  %25 = bitcast %struct._object* %24 to %struct.PyVarObject*, !dbg !1651
  %ob_size19 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1, !dbg !1652
  %26 = load i64, i64* %ob_size19, align 8, !dbg !1652, !tbaa !1648
  br label %cond.end, !dbg !1643

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %23, %cond.true ], [ %26, %cond.false ], !dbg !1643
  %ndim20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !1653
  %27 = load i32, i32* %ndim20, align 4, !dbg !1653, !tbaa !1629
  %conv = sext i32 %27 to i64, !dbg !1656
  %cmp21 = icmp ne i64 %cond, %conv, !dbg !1657
  br i1 %cmp21, label %if.then.23, label %if.end.24, !dbg !1658

if.then.23:                                       ; preds = %cond.end
  %28 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1659, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %28, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46, i32 0, i32 0)), !dbg !1661
  br label %out, !dbg !1662

if.end.24:                                        ; preds = %cond.end
  store i64 0, i64* %i, align 8, !dbg !1663, !tbaa !1503
  br label %for.cond, !dbg !1664

for.cond:                                         ; preds = %for.inc, %if.end.24
  %29 = load i64, i64* %i, align 8, !dbg !1665, !tbaa !1503
  %ndim25 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 5, !dbg !1668
  %30 = load i32, i32* %ndim25, align 4, !dbg !1668, !tbaa !1629
  %conv26 = sext i32 %30 to i64, !dbg !1669
  %cmp27 = icmp slt i64 %29, %conv26, !dbg !1670
  br i1 %cmp27, label %for.body, label %for.end, !dbg !1671

for.body:                                         ; preds = %for.cond
  %31 = bitcast %struct._object** %x to i8*, !dbg !1672
  call void @llvm.lifetime.start(i64 8, i8* %31) #1, !dbg !1672
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !445, metadata !1360), !dbg !1673
  %32 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1674, !tbaa !1364
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !1675
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !1675, !tbaa !1374
  %tp_flags30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 19, !dbg !1676
  %34 = load i64, i64* %tp_flags30, align 8, !dbg !1676, !tbaa !1605
  %and31 = and i64 %34, 33554432, !dbg !1677
  %cmp32 = icmp ne i64 %and31, 0, !dbg !1678
  br i1 %cmp32, label %cond.true.34, label %cond.false.35, !dbg !1679

cond.true.34:                                     ; preds = %for.body
  %35 = load i64, i64* %i, align 8, !dbg !1680, !tbaa !1503
  %36 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1682, !tbaa !1364
  %37 = bitcast %struct._object* %36 to %struct.PyListObject*, !dbg !1683
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %37, i32 0, i32 1, !dbg !1684
  %38 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !1684, !tbaa !1685
  %arrayidx = getelementptr %struct._object*, %struct._object** %38, i64 %35, !dbg !1687
  %39 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !1687, !tbaa !1364
  br label %cond.end.38, !dbg !1679

cond.false.35:                                    ; preds = %for.body
  %40 = load i64, i64* %i, align 8, !dbg !1688, !tbaa !1503
  %41 = load %struct._object*, %struct._object** %seq, align 8, !dbg !1690, !tbaa !1364
  %42 = bitcast %struct._object* %41 to %struct.PyTupleObject*, !dbg !1691
  %ob_item36 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %42, i32 0, i32 1, !dbg !1692
  %arrayidx37 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item36, i32 0, i64 %40, !dbg !1693
  %43 = load %struct._object*, %struct._object** %arrayidx37, align 8, !dbg !1693, !tbaa !1364
  br label %cond.end.38, !dbg !1679

cond.end.38:                                      ; preds = %cond.false.35, %cond.true.34
  %cond39 = phi %struct._object* [ %39, %cond.true.34 ], [ %43, %cond.false.35 ], !dbg !1679
  store %struct._object* %cond39, %struct._object** %x, align 8, !dbg !1694, !tbaa !1364
  %44 = load %struct._object*, %struct._object** %x, align 8, !dbg !1697, !tbaa !1364
  %call40 = call i64 @PyLong_AsSsize_t(%struct._object* %44), !dbg !1698
  %45 = load i64, i64* %i, align 8, !dbg !1699, !tbaa !1503
  %arrayidx41 = getelementptr [128 x i64], [128 x i64]* %indices, i32 0, i64 %45, !dbg !1700
  store i64 %call40, i64* %arrayidx41, align 8, !dbg !1701, !tbaa !1503
  %call42 = call %struct._object* @PyErr_Occurred(), !dbg !1702
  %tobool43 = icmp ne %struct._object* %call42, null, !dbg !1702
  br i1 %tobool43, label %if.then.44, label %if.end.45, !dbg !1704

if.then.44:                                       ; preds = %cond.end.38
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1705

if.end.45:                                        ; preds = %cond.end.38
  %46 = load i64, i64* %i, align 8, !dbg !1706, !tbaa !1503
  %arrayidx46 = getelementptr [128 x i64], [128 x i64]* %indices, i32 0, i64 %46, !dbg !1708
  %47 = load i64, i64* %arrayidx46, align 8, !dbg !1708, !tbaa !1503
  %cmp47 = icmp slt i64 %47, 0, !dbg !1709
  br i1 %cmp47, label %if.then.53, label %lor.lhs.false, !dbg !1710

lor.lhs.false:                                    ; preds = %if.end.45
  %48 = load i64, i64* %i, align 8, !dbg !1711, !tbaa !1503
  %arrayidx49 = getelementptr [128 x i64], [128 x i64]* %indices, i32 0, i64 %48, !dbg !1713
  %49 = load i64, i64* %arrayidx49, align 8, !dbg !1713, !tbaa !1503
  %50 = load i64, i64* %i, align 8, !dbg !1714, !tbaa !1503
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 7, !dbg !1715
  %51 = load i64*, i64** %shape, align 8, !dbg !1715, !tbaa !1716
  %arrayidx50 = getelementptr i64, i64* %51, i64 %50, !dbg !1717
  %52 = load i64, i64* %arrayidx50, align 8, !dbg !1717, !tbaa !1503
  %cmp51 = icmp sge i64 %49, %52, !dbg !1718
  br i1 %cmp51, label %if.then.53, label %if.end.56, !dbg !1719

if.then.53:                                       ; preds = %lor.lhs.false, %if.end.45
  %53 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1720, !tbaa !1364
  %54 = load i64, i64* %i, align 8, !dbg !1722, !tbaa !1503
  %arrayidx54 = getelementptr [128 x i64], [128 x i64]* %indices, i32 0, i64 %54, !dbg !1723
  %55 = load i64, i64* %arrayidx54, align 8, !dbg !1723, !tbaa !1503
  %56 = load i64, i64* %i, align 8, !dbg !1724, !tbaa !1503
  %call55 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %53, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.47, i32 0, i32 0), i64 %55, i64 %56), !dbg !1725
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1726

if.end.56:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %cleanup.dest.slot, !dbg !1727
  br label %cleanup, !dbg !1727

cleanup:                                          ; preds = %if.end.56, %if.then.53, %if.then.44
  %57 = bitcast %struct._object** %x to i8*, !dbg !1728
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !1728
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %out, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !1729

for.inc:                                          ; preds = %cleanup.cont
  %58 = load i64, i64* %i, align 8, !dbg !1730, !tbaa !1503
  %inc = add i64 %58, 1, !dbg !1730
  store i64 %inc, i64* %i, align 8, !dbg !1730, !tbaa !1503
  br label %for.cond, !dbg !1731

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [128 x i64], [128 x i64]* %indices, i32 0, i32 0, !dbg !1732
  %call57 = call i8* @PyBuffer_GetPointer(%struct.bufferinfo* %view, i64* %arraydecay), !dbg !1733
  store i8* %call57, i8** %ptr, align 8, !dbg !1734, !tbaa !1364
  %59 = load i8*, i8** %ptr, align 8, !dbg !1735, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 6, !dbg !1736
  %60 = load i8*, i8** %format, align 8, !dbg !1736, !tbaa !1737
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 3, !dbg !1738
  %61 = load i64, i64* %itemsize, align 8, !dbg !1738, !tbaa !1739
  %call58 = call %struct._object* @unpack_single(i8* %59, i8* %60, i64 %61), !dbg !1740
  store %struct._object* %call58, %struct._object** %ret, align 8, !dbg !1741, !tbaa !1364
  br label %out, !dbg !1742

out:                                              ; preds = %LeafBlock.1, %for.end, %if.then.23, %if.then.12
  call void @PyBuffer_Release(%struct.bufferinfo* %view), !dbg !1743
  %62 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1744, !tbaa !1364
  store %struct._object* %62, %struct._object** %retval, !dbg !1745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.59, !dbg !1745

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.59

cleanup.59:                                       ; preds = %NewDefault, %out, %if.then.9, %if.then.5, %if.then
  %63 = bitcast i8** %ptr to i8*, !dbg !1746
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !1746
  %64 = bitcast i64* %i to i8*, !dbg !1746
  call void @llvm.lifetime.end(i64 8, i8* %64) #1, !dbg !1746
  %65 = bitcast [128 x i64]* %indices to i8*, !dbg !1746
  call void @llvm.lifetime.end(i64 1024, i8* %65) #1, !dbg !1746
  %66 = bitcast %struct.bufferinfo* %view to i8*, !dbg !1746
  call void @llvm.lifetime.end(i64 80, i8* %66) #1, !dbg !1746
  %67 = bitcast %struct._object** %seq to i8*, !dbg !1746
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !1746
  %68 = bitcast %struct._object** %bufobj to i8*, !dbg !1746
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !1746
  %69 = bitcast %struct._object** %ret to i8*, !dbg !1746
  call void @llvm.lifetime.end(i64 8, i8* %69) #1, !dbg !1746
  %70 = load %struct._object*, %struct._object** %retval, !dbg !1746
  ret %struct._object* %70, !dbg !1746
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_sizeof_void_p(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !474, metadata !1360), !dbg !1747
  %call = call %struct._object* @PyLong_FromSize_t(i64 8), !dbg !1748
  ret %struct._object* %call, !dbg !1749
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_contiguous(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %buffertype = alloca %struct._object*, align 8
  %order = alloca %struct._object*, align 8
  %type = alloca i64, align 8
  %ord = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !477, metadata !1360), !dbg !1750
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !478, metadata !1360), !dbg !1751
  %0 = bitcast %struct._object** %obj to i8*, !dbg !1752
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1752
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !479, metadata !1360), !dbg !1753
  %1 = bitcast %struct._object** %buffertype to i8*, !dbg !1754
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1754
  call void @llvm.dbg.declare(metadata %struct._object** %buffertype, metadata !480, metadata !1360), !dbg !1755
  %2 = bitcast %struct._object** %order to i8*, !dbg !1756
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1756
  call void @llvm.dbg.declare(metadata %struct._object** %order, metadata !481, metadata !1360), !dbg !1757
  %3 = bitcast i64* %type to i8*, !dbg !1758
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !1758
  call void @llvm.dbg.declare(metadata i64* %type, metadata !482, metadata !1360), !dbg !1759
  call void @llvm.lifetime.start(i64 1, i8* %ord) #1, !dbg !1760
  call void @llvm.dbg.declare(metadata i8* %ord, metadata !483, metadata !1360), !dbg !1761
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1762, !tbaa !1364
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), %struct._object** %obj, %struct._object** %buffertype, %struct._object** %order), !dbg !1764
  %tobool = icmp ne i32 %call, 0, !dbg !1764
  br i1 %tobool, label %if.end, label %if.then, !dbg !1765

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1766
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1766

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %buffertype, align 8, !dbg !1768, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !1770
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1770, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !1771
  %7 = load i64, i64* %tp_flags, align 8, !dbg !1771, !tbaa !1605
  %and = and i64 %7, 16777216, !dbg !1772
  %cmp = icmp ne i64 %and, 0, !dbg !1773
  br i1 %cmp, label %if.end.2, label %if.then.1, !dbg !1774

if.then.1:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1775, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.52, i32 0, i32 0)), !dbg !1777
  store %struct._object* null, %struct._object** %retval, !dbg !1778
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1778

if.end.2:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %buffertype, align 8, !dbg !1779, !tbaa !1364
  %call3 = call i64 @PyLong_AsLong(%struct._object* %9), !dbg !1780
  store i64 %call3, i64* %type, align 8, !dbg !1781, !tbaa !1503
  %10 = load i64, i64* %type, align 8, !dbg !1782, !tbaa !1503
  %cmp4 = icmp eq i64 %10, -1, !dbg !1784
  br i1 %cmp4, label %land.lhs.true, label %if.end.8, !dbg !1785

land.lhs.true:                                    ; preds = %if.end.2
  %call5 = call %struct._object* @PyErr_Occurred(), !dbg !1786
  %tobool6 = icmp ne %struct._object* %call5, null, !dbg !1786
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !1788

if.then.7:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !1789
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1789

if.end.8:                                         ; preds = %land.lhs.true, %if.end.2
  %11 = load i64, i64* %type, align 8, !dbg !1791, !tbaa !1503
  %cmp9 = icmp ne i64 %11, 256, !dbg !1793
  br i1 %cmp9, label %land.lhs.true.10, label %if.end.13, !dbg !1794

land.lhs.true.10:                                 ; preds = %if.end.8
  %12 = load i64, i64* %type, align 8, !dbg !1795, !tbaa !1503
  %cmp11 = icmp ne i64 %12, 512, !dbg !1797
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !1798

if.then.12:                                       ; preds = %land.lhs.true.10
  %13 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !1799, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.53, i32 0, i32 0)), !dbg !1801
  store %struct._object* null, %struct._object** %retval, !dbg !1802
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1802

if.end.13:                                        ; preds = %land.lhs.true.10, %if.end.8
  %14 = load %struct._object*, %struct._object** %order, align 8, !dbg !1803, !tbaa !1364
  %call14 = call signext i8 @get_ascii_order(%struct._object* %14), !dbg !1804
  store i8 %call14, i8* %ord, align 1, !dbg !1805, !tbaa !1806
  %15 = load i8, i8* %ord, align 1, !dbg !1807, !tbaa !1806
  %conv = sext i8 %15 to i32, !dbg !1807
  %cmp15 = icmp eq i32 %conv, 127, !dbg !1809
  br i1 %cmp15, label %if.then.17, label %if.end.18, !dbg !1810

if.then.17:                                       ; preds = %if.end.13
  store %struct._object* null, %struct._object** %retval, !dbg !1811
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1811

if.end.18:                                        ; preds = %if.end.13
  %16 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1812, !tbaa !1364
  %17 = load i64, i64* %type, align 8, !dbg !1813, !tbaa !1503
  %conv19 = trunc i64 %17 to i32, !dbg !1814
  %18 = load i8, i8* %ord, align 1, !dbg !1815, !tbaa !1806
  %call20 = call %struct._object* @PyMemoryView_GetContiguous(%struct._object* %16, i32 %conv19, i8 signext %18), !dbg !1816
  store %struct._object* %call20, %struct._object** %retval, !dbg !1817
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1817

cleanup:                                          ; preds = %if.end.18, %if.then.17, %if.then.12, %if.then.7, %if.then.1, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %ord) #1, !dbg !1818
  %19 = bitcast i64* %type to i8*, !dbg !1818
  call void @llvm.lifetime.end(i64 8, i8* %19) #1, !dbg !1818
  %20 = bitcast %struct._object** %order to i8*, !dbg !1818
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !1818
  %21 = bitcast %struct._object** %buffertype to i8*, !dbg !1818
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !1818
  %22 = bitcast %struct._object** %obj to i8*, !dbg !1818
  call void @llvm.lifetime.end(i64 8, i8* %22) #1, !dbg !1818
  %23 = load %struct._object*, %struct._object** %retval, !dbg !1818
  ret %struct._object* %23, !dbg !1818
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @py_buffer_to_contiguous(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %order = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %flags = alloca i32, align 4
  %ord = alloca i8, align 1
  %view = alloca %struct.bufferinfo, align 8
  %buf = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !495, metadata !1360), !dbg !1819
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !496, metadata !1360), !dbg !1820
  %0 = bitcast %struct._object** %obj to i8*, !dbg !1821
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1821
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !497, metadata !1360), !dbg !1822
  %1 = bitcast %struct._object** %order to i8*, !dbg !1823
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1823
  call void @llvm.dbg.declare(metadata %struct._object** %order, metadata !498, metadata !1360), !dbg !1824
  %2 = bitcast %struct._object** %ret to i8*, !dbg !1825
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1825
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !499, metadata !1360), !dbg !1826
  store %struct._object* null, %struct._object** %ret, align 8, !dbg !1826, !tbaa !1364
  %3 = bitcast i32* %flags to i8*, !dbg !1827
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1827
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !500, metadata !1360), !dbg !1828
  call void @llvm.lifetime.start(i64 1, i8* %ord) #1, !dbg !1829
  call void @llvm.dbg.declare(metadata i8* %ord, metadata !501, metadata !1360), !dbg !1830
  %4 = bitcast %struct.bufferinfo* %view to i8*, !dbg !1831
  call void @llvm.lifetime.start(i64 80, i8* %4) #1, !dbg !1831
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %view, metadata !502, metadata !1360), !dbg !1832
  %5 = bitcast i8** %buf to i8*, !dbg !1833
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !1833
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !503, metadata !1360), !dbg !1834
  store i8* null, i8** %buf, align 8, !dbg !1834, !tbaa !1364
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1835, !tbaa !1364
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), %struct._object** %obj, %struct._object** %order, i32* %flags), !dbg !1837
  %tobool = icmp ne i32 %call, 0, !dbg !1837
  br i1 %tobool, label %if.end, label %if.then, !dbg !1838

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1839
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1839

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1841, !tbaa !1364
  %8 = load i32, i32* %flags, align 4, !dbg !1843, !tbaa !1844
  %call1 = call i32 @PyObject_GetBuffer(%struct._object* %7, %struct.bufferinfo* %view, i32 %8), !dbg !1845
  %cmp = icmp slt i32 %call1, 0, !dbg !1846
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !1847

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !1848
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1848

if.end.3:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %order, align 8, !dbg !1850, !tbaa !1364
  %call4 = call signext i8 @get_ascii_order(%struct._object* %9), !dbg !1851
  store i8 %call4, i8* %ord, align 1, !dbg !1852, !tbaa !1806
  %10 = load i8, i8* %ord, align 1, !dbg !1853, !tbaa !1806
  %conv = sext i8 %10 to i32, !dbg !1853
  %cmp5 = icmp eq i32 %conv, 127, !dbg !1855
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !1856

if.then.7:                                        ; preds = %if.end.3
  br label %out, !dbg !1857

if.end.8:                                         ; preds = %if.end.3
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2, !dbg !1859
  %11 = load i64, i64* %len, align 8, !dbg !1859, !tbaa !1860
  %call9 = call i8* @PyMem_Malloc(i64 %11), !dbg !1861
  store i8* %call9, i8** %buf, align 8, !dbg !1862, !tbaa !1364
  %12 = load i8*, i8** %buf, align 8, !dbg !1863, !tbaa !1364
  %cmp10 = icmp eq i8* %12, null, !dbg !1865
  br i1 %cmp10, label %if.then.12, label %if.end.14, !dbg !1866

if.then.12:                                       ; preds = %if.end.8
  %call13 = call %struct._object* @PyErr_NoMemory(), !dbg !1867
  br label %out, !dbg !1869

if.end.14:                                        ; preds = %if.end.8
  %13 = load i8*, i8** %buf, align 8, !dbg !1870, !tbaa !1364
  %len15 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2, !dbg !1872
  %14 = load i64, i64* %len15, align 8, !dbg !1872, !tbaa !1860
  %15 = load i8, i8* %ord, align 1, !dbg !1873, !tbaa !1806
  %call16 = call i32 @PyBuffer_ToContiguous(i8* %13, %struct.bufferinfo* %view, i64 %14, i8 signext %15), !dbg !1874
  %cmp17 = icmp slt i32 %call16, 0, !dbg !1875
  br i1 %cmp17, label %if.then.19, label %if.end.20, !dbg !1876

if.then.19:                                       ; preds = %if.end.14
  br label %out, !dbg !1877

if.end.20:                                        ; preds = %if.end.14
  %16 = load i8*, i8** %buf, align 8, !dbg !1879, !tbaa !1364
  %len21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2, !dbg !1880
  %17 = load i64, i64* %len21, align 8, !dbg !1880, !tbaa !1860
  %call22 = call %struct._object* @PyBytes_FromStringAndSize(i8* %16, i64 %17), !dbg !1881
  store %struct._object* %call22, %struct._object** %ret, align 8, !dbg !1882, !tbaa !1364
  br label %out, !dbg !1883

out:                                              ; preds = %if.end.20, %if.then.19, %if.then.12, %if.then.7
  call void @PyBuffer_Release(%struct.bufferinfo* %view), !dbg !1884
  br label %do.body, !dbg !1885

do.body:                                          ; preds = %out
  %18 = load i8*, i8** %buf, align 8, !dbg !1886, !tbaa !1364
  %tobool23 = icmp ne i8* %18, null, !dbg !1886
  br i1 %tobool23, label %if.then.24, label %if.end.25, !dbg !1890

if.then.24:                                       ; preds = %do.body
  %19 = load i8*, i8** %buf, align 8, !dbg !1891, !tbaa !1364
  call void @PyMem_Free(i8* %19), !dbg !1893
  br label %if.end.25, !dbg !1893

if.end.25:                                        ; preds = %if.then.24, %do.body
  br label %do.cond, !dbg !1894

do.cond:                                          ; preds = %if.end.25
  br label %do.end, !dbg !1897

do.end:                                           ; preds = %do.cond
  %20 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1899, !tbaa !1364
  store %struct._object* %20, %struct._object** %retval, !dbg !1900
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1900

cleanup:                                          ; preds = %do.end, %if.then.2, %if.then
  %21 = bitcast i8** %buf to i8*, !dbg !1901
  call void @llvm.lifetime.end(i64 8, i8* %21) #1, !dbg !1901
  %22 = bitcast %struct.bufferinfo* %view to i8*, !dbg !1901
  call void @llvm.lifetime.end(i64 80, i8* %22) #1, !dbg !1901
  call void @llvm.lifetime.end(i64 1, i8* %ord) #1, !dbg !1901
  %23 = bitcast i32* %flags to i8*, !dbg !1901
  call void @llvm.lifetime.end(i64 4, i8* %23) #1, !dbg !1901
  %24 = bitcast %struct._object** %ret to i8*, !dbg !1901
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !1901
  %25 = bitcast %struct._object** %order to i8*, !dbg !1901
  call void @llvm.lifetime.end(i64 8, i8* %25) #1, !dbg !1901
  %26 = bitcast %struct._object** %obj to i8*, !dbg !1901
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !1901
  %27 = load %struct._object*, %struct._object** %retval, !dbg !1901
  ret %struct._object* %27, !dbg !1901
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @is_contiguous(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %order = alloca %struct._object*, align 8
  %ret = alloca %struct._object*, align 8
  %view = alloca %struct.bufferinfo, align 8
  %ord = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !506, metadata !1360), !dbg !1902
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !507, metadata !1360), !dbg !1903
  %0 = bitcast %struct._object** %obj to i8*, !dbg !1904
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1904
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !508, metadata !1360), !dbg !1905
  %1 = bitcast %struct._object** %order to i8*, !dbg !1906
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1906
  call void @llvm.dbg.declare(metadata %struct._object** %order, metadata !509, metadata !1360), !dbg !1907
  %2 = bitcast %struct._object** %ret to i8*, !dbg !1908
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !1908
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !510, metadata !1360), !dbg !1909
  store %struct._object* null, %struct._object** %ret, align 8, !dbg !1909, !tbaa !1364
  %3 = bitcast %struct.bufferinfo* %view to i8*, !dbg !1910
  call void @llvm.lifetime.start(i64 80, i8* %3) #1, !dbg !1910
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %view, metadata !511, metadata !1360), !dbg !1911
  call void @llvm.lifetime.start(i64 1, i8* %ord) #1, !dbg !1912
  call void @llvm.dbg.declare(metadata i8* %ord, metadata !512, metadata !1360), !dbg !1913
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1914, !tbaa !1364
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), %struct._object** %obj, %struct._object** %order), !dbg !1916
  %tobool = icmp ne i32 %call, 0, !dbg !1916
  br i1 %tobool, label %if.end, label %if.then, !dbg !1917

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1918
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1918

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1920, !tbaa !1364
  %call1 = call i32 @PyObject_GetBuffer(%struct._object* %5, %struct.bufferinfo* %view, i32 284), !dbg !1922
  %cmp = icmp slt i32 %call1, 0, !dbg !1923
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !1924

if.then.2:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1925, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.57, i32 0, i32 0)), !dbg !1927
  store %struct._object* null, %struct._object** %retval, !dbg !1928
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1928

if.end.3:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %order, align 8, !dbg !1929, !tbaa !1364
  %call4 = call signext i8 @get_ascii_order(%struct._object* %7), !dbg !1930
  store i8 %call4, i8* %ord, align 1, !dbg !1931, !tbaa !1806
  %8 = load i8, i8* %ord, align 1, !dbg !1932, !tbaa !1806
  %conv = sext i8 %8 to i32, !dbg !1932
  %cmp5 = icmp eq i32 %conv, 127, !dbg !1934
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !1935

if.then.7:                                        ; preds = %if.end.3
  br label %release, !dbg !1936

if.end.8:                                         ; preds = %if.end.3
  %9 = load i8, i8* %ord, align 1, !dbg !1938, !tbaa !1806
  %call9 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %view, i8 signext %9), !dbg !1939
  %tobool10 = icmp ne i32 %call9, 0, !dbg !1939
  %cond = select i1 %tobool10, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !1939
  store %struct._object* %cond, %struct._object** %ret, align 8, !dbg !1940, !tbaa !1364
  %10 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1941, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !1942
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !1943, !tbaa !1378
  %inc = add i64 %11, 1, !dbg !1943
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !1943, !tbaa !1378
  br label %release, !dbg !1944

release:                                          ; preds = %if.end.8, %if.then.7
  call void @PyBuffer_Release(%struct.bufferinfo* %view), !dbg !1945
  %12 = load %struct._object*, %struct._object** %ret, align 8, !dbg !1946, !tbaa !1364
  store %struct._object* %12, %struct._object** %retval, !dbg !1947
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1947

cleanup:                                          ; preds = %release, %if.then.2, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %ord) #1, !dbg !1948
  %13 = bitcast %struct.bufferinfo* %view to i8*, !dbg !1948
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1948
  %14 = bitcast %struct._object** %ret to i8*, !dbg !1948
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1948
  %15 = bitcast %struct._object** %order to i8*, !dbg !1948
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !1948
  %16 = bitcast %struct._object** %obj to i8*, !dbg !1948
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !1948
  %17 = load %struct._object*, %struct._object** %retval, !dbg !1948
  ret %struct._object* %17, !dbg !1948
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @cmp_contig(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %b1 = alloca %struct._object*, align 8
  %b2 = alloca %struct._object*, align 8
  %v1 = alloca %struct.bufferinfo, align 8
  %v2 = alloca %struct.bufferinfo, align 8
  %ret = alloca %struct._object*, align 8
  %equal = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !515, metadata !1360), !dbg !1949
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !516, metadata !1360), !dbg !1950
  %0 = bitcast %struct._object** %b1 to i8*, !dbg !1951
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1951
  call void @llvm.dbg.declare(metadata %struct._object** %b1, metadata !517, metadata !1360), !dbg !1952
  %1 = bitcast %struct._object** %b2 to i8*, !dbg !1951
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1951
  call void @llvm.dbg.declare(metadata %struct._object** %b2, metadata !518, metadata !1360), !dbg !1953
  %2 = bitcast %struct.bufferinfo* %v1 to i8*, !dbg !1954
  call void @llvm.lifetime.start(i64 80, i8* %2) #1, !dbg !1954
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %v1, metadata !519, metadata !1360), !dbg !1955
  %3 = bitcast %struct.bufferinfo* %v2 to i8*, !dbg !1954
  call void @llvm.lifetime.start(i64 80, i8* %3) #1, !dbg !1954
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %v2, metadata !520, metadata !1360), !dbg !1956
  %4 = bitcast %struct._object** %ret to i8*, !dbg !1957
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1957
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !521, metadata !1360), !dbg !1958
  %5 = bitcast i32* %equal to i8*, !dbg !1959
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %equal, metadata !522, metadata !1360), !dbg !1960
  store i32 0, i32* %equal, align 4, !dbg !1960, !tbaa !1844
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1961, !tbaa !1364
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), %struct._object** %b1, %struct._object** %b2), !dbg !1963
  %tobool = icmp ne i32 %call, 0, !dbg !1963
  br i1 %tobool, label %if.end, label %if.then, !dbg !1964

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1965
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1965

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %b1, align 8, !dbg !1967, !tbaa !1364
  %call1 = call i32 @PyObject_GetBuffer(%struct._object* %7, %struct.bufferinfo* %v1, i32 284), !dbg !1969
  %cmp = icmp slt i32 %call1, 0, !dbg !1970
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !1971

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1972, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.58, i32 0, i32 0)), !dbg !1974
  store %struct._object* null, %struct._object** %retval, !dbg !1975
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1975

if.end.3:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %b2, align 8, !dbg !1976, !tbaa !1364
  %call4 = call i32 @PyObject_GetBuffer(%struct._object* %9, %struct.bufferinfo* %v2, i32 284), !dbg !1978
  %cmp5 = icmp slt i32 %call4, 0, !dbg !1979
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !1980

if.then.6:                                        ; preds = %if.end.3
  %10 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !1981, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.59, i32 0, i32 0)), !dbg !1983
  call void @PyBuffer_Release(%struct.bufferinfo* %v1), !dbg !1984
  store %struct._object* null, %struct._object** %retval, !dbg !1985
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1985

if.end.7:                                         ; preds = %if.end.3
  %call8 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %v1, i8 signext 67), !dbg !1986
  %tobool9 = icmp ne i32 %call8, 0, !dbg !1986
  br i1 %tobool9, label %land.lhs.true, label %land.lhs.true.12, !dbg !1988

land.lhs.true:                                    ; preds = %if.end.7
  %call10 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %v2, i8 signext 67), !dbg !1989
  %tobool11 = icmp ne i32 %call10, 0, !dbg !1989
  br i1 %tobool11, label %if.end.19, label %land.lhs.true.12, !dbg !1991

land.lhs.true.12:                                 ; preds = %land.lhs.true, %if.end.7
  %call13 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %v1, i8 signext 70), !dbg !1992
  %tobool14 = icmp ne i32 %call13, 0, !dbg !1992
  br i1 %tobool14, label %land.lhs.true.15, label %if.then.18, !dbg !1993

land.lhs.true.15:                                 ; preds = %land.lhs.true.12
  %call16 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %v2, i8 signext 70), !dbg !1994
  %tobool17 = icmp ne i32 %call16, 0, !dbg !1994
  br i1 %tobool17, label %if.end.19, label %if.then.18, !dbg !1995

if.then.18:                                       ; preds = %land.lhs.true.15, %land.lhs.true.12
  br label %result, !dbg !1996

if.end.19:                                        ; preds = %land.lhs.true.15, %land.lhs.true
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 2, !dbg !1998
  %11 = load i64, i64* %len, align 8, !dbg !1998, !tbaa !1860
  %len20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 2, !dbg !2000
  %12 = load i64, i64* %len20, align 8, !dbg !2000, !tbaa !1860
  %cmp21 = icmp ne i64 %11, %12, !dbg !2001
  br i1 %cmp21, label %if.then.67, label %lor.lhs.false, !dbg !2002

lor.lhs.false:                                    ; preds = %if.end.19
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 3, !dbg !2003
  %13 = load i64, i64* %itemsize, align 8, !dbg !2003, !tbaa !1739
  %itemsize22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 3, !dbg !2004
  %14 = load i64, i64* %itemsize22, align 8, !dbg !2004, !tbaa !1739
  %cmp23 = icmp ne i64 %13, %14, !dbg !2005
  br i1 %cmp23, label %if.then.67, label %lor.lhs.false.24, !dbg !2006

lor.lhs.false.24:                                 ; preds = %lor.lhs.false
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 5, !dbg !2007
  %15 = load i32, i32* %ndim, align 4, !dbg !2007, !tbaa !1629
  %ndim25 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 5, !dbg !2008
  %16 = load i32, i32* %ndim25, align 4, !dbg !2008, !tbaa !1629
  %cmp26 = icmp ne i32 %15, %16, !dbg !2009
  br i1 %cmp26, label %if.then.67, label %lor.lhs.false.27, !dbg !2010

lor.lhs.false.27:                                 ; preds = %lor.lhs.false.24
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 6, !dbg !2011
  %17 = load i8*, i8** %format, align 8, !dbg !2011, !tbaa !1737
  %format28 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 6, !dbg !2012
  %18 = load i8*, i8** %format28, align 8, !dbg !2012, !tbaa !1737
  %call29 = call i32 @fmtcmp(i8* %17, i8* %18), !dbg !2013
  %tobool30 = icmp ne i32 %call29, 0, !dbg !2013
  br i1 %tobool30, label %lor.lhs.false.31, label %if.then.67, !dbg !2014

lor.lhs.false.31:                                 ; preds = %lor.lhs.false.27
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 7, !dbg !2015
  %19 = load i64*, i64** %shape, align 8, !dbg !2015, !tbaa !1716
  %tobool32 = icmp ne i64* %19, null, !dbg !2016
  %lnot = xor i1 %tobool32, true, !dbg !2016
  %lnot33 = xor i1 %lnot, true, !dbg !2017
  %lnot.ext = zext i1 %lnot33 to i32, !dbg !2017
  %shape34 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 7, !dbg !2018
  %20 = load i64*, i64** %shape34, align 8, !dbg !2018, !tbaa !1716
  %tobool35 = icmp ne i64* %20, null, !dbg !2019
  %lnot36 = xor i1 %tobool35, true, !dbg !2019
  %lnot38 = xor i1 %lnot36, true, !dbg !2020
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !2020
  %cmp40 = icmp ne i32 %lnot.ext, %lnot.ext39, !dbg !2021
  br i1 %cmp40, label %if.then.67, label %lor.lhs.false.41, !dbg !2022

lor.lhs.false.41:                                 ; preds = %lor.lhs.false.31
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 8, !dbg !2023
  %21 = load i64*, i64** %strides, align 8, !dbg !2023, !tbaa !2024
  %tobool42 = icmp ne i64* %21, null, !dbg !2025
  %lnot43 = xor i1 %tobool42, true, !dbg !2025
  %lnot45 = xor i1 %lnot43, true, !dbg !2026
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !2026
  %strides47 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 8, !dbg !2027
  %22 = load i64*, i64** %strides47, align 8, !dbg !2027, !tbaa !2024
  %tobool48 = icmp ne i64* %22, null, !dbg !2028
  %lnot49 = xor i1 %tobool48, true, !dbg !2028
  %lnot51 = xor i1 %lnot49, true, !dbg !2029
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !2029
  %cmp53 = icmp ne i32 %lnot.ext46, %lnot.ext52, !dbg !2030
  br i1 %cmp53, label %if.then.67, label %lor.lhs.false.54, !dbg !2031

lor.lhs.false.54:                                 ; preds = %lor.lhs.false.41
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 9, !dbg !2032
  %23 = load i64*, i64** %suboffsets, align 8, !dbg !2032, !tbaa !2033
  %tobool55 = icmp ne i64* %23, null, !dbg !2034
  %lnot56 = xor i1 %tobool55, true, !dbg !2034
  %lnot58 = xor i1 %lnot56, true, !dbg !2035
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !2035
  %suboffsets60 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 9, !dbg !2036
  %24 = load i64*, i64** %suboffsets60, align 8, !dbg !2036, !tbaa !2033
  %tobool61 = icmp ne i64* %24, null, !dbg !2037
  %lnot62 = xor i1 %tobool61, true, !dbg !2037
  %lnot64 = xor i1 %lnot62, true, !dbg !2038
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !2038
  %cmp66 = icmp ne i32 %lnot.ext59, %lnot.ext65, !dbg !2039
  br i1 %cmp66, label %if.then.67, label %if.end.68, !dbg !2040

if.then.67:                                       ; preds = %lor.lhs.false.54, %lor.lhs.false.41, %lor.lhs.false.31, %lor.lhs.false.27, %lor.lhs.false.24, %lor.lhs.false, %if.end.19
  br label %result, !dbg !2041

if.end.68:                                        ; preds = %lor.lhs.false.54
  %shape69 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 7, !dbg !2043
  %25 = load i64*, i64** %shape69, align 8, !dbg !2043, !tbaa !1716
  %tobool70 = icmp ne i64* %25, null, !dbg !2045
  br i1 %tobool70, label %land.lhs.true.71, label %lor.lhs.false.77, !dbg !2046

land.lhs.true.71:                                 ; preds = %if.end.68
  %shape72 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 7, !dbg !2047
  %26 = load i64*, i64** %shape72, align 8, !dbg !2047, !tbaa !1716
  %shape73 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 7, !dbg !2049
  %27 = load i64*, i64** %shape73, align 8, !dbg !2049, !tbaa !1716
  %ndim74 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 5, !dbg !2050
  %28 = load i32, i32* %ndim74, align 4, !dbg !2050, !tbaa !1629
  %conv = sext i32 %28 to i64, !dbg !2051
  %call75 = call i32 @arraycmp(i64* %26, i64* %27, i64* null, i64 %conv), !dbg !2052
  %tobool76 = icmp ne i32 %call75, 0, !dbg !2052
  br i1 %tobool76, label %lor.lhs.false.77, label %if.then.98, !dbg !2053

lor.lhs.false.77:                                 ; preds = %land.lhs.true.71, %if.end.68
  %strides78 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 8, !dbg !2054
  %29 = load i64*, i64** %strides78, align 8, !dbg !2054, !tbaa !2024
  %tobool79 = icmp ne i64* %29, null, !dbg !2055
  br i1 %tobool79, label %land.lhs.true.80, label %lor.lhs.false.88, !dbg !2056

land.lhs.true.80:                                 ; preds = %lor.lhs.false.77
  %strides81 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 8, !dbg !2057
  %30 = load i64*, i64** %strides81, align 8, !dbg !2057, !tbaa !2024
  %strides82 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 8, !dbg !2058
  %31 = load i64*, i64** %strides82, align 8, !dbg !2058, !tbaa !2024
  %shape83 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 7, !dbg !2059
  %32 = load i64*, i64** %shape83, align 8, !dbg !2059, !tbaa !1716
  %ndim84 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 5, !dbg !2060
  %33 = load i32, i32* %ndim84, align 4, !dbg !2060, !tbaa !1629
  %conv85 = sext i32 %33 to i64, !dbg !2061
  %call86 = call i32 @arraycmp(i64* %30, i64* %31, i64* %32, i64 %conv85), !dbg !2062
  %tobool87 = icmp ne i32 %call86, 0, !dbg !2062
  br i1 %tobool87, label %lor.lhs.false.88, label %if.then.98, !dbg !2063

lor.lhs.false.88:                                 ; preds = %land.lhs.true.80, %lor.lhs.false.77
  %suboffsets89 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 9, !dbg !2064
  %34 = load i64*, i64** %suboffsets89, align 8, !dbg !2064, !tbaa !2033
  %tobool90 = icmp ne i64* %34, null, !dbg !2065
  br i1 %tobool90, label %land.lhs.true.91, label %if.end.99, !dbg !2066

land.lhs.true.91:                                 ; preds = %lor.lhs.false.88
  %suboffsets92 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 9, !dbg !2067
  %35 = load i64*, i64** %suboffsets92, align 8, !dbg !2067, !tbaa !2033
  %suboffsets93 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 9, !dbg !2068
  %36 = load i64*, i64** %suboffsets93, align 8, !dbg !2068, !tbaa !2033
  %ndim94 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 5, !dbg !2069
  %37 = load i32, i32* %ndim94, align 4, !dbg !2069, !tbaa !1629
  %conv95 = sext i32 %37 to i64, !dbg !2070
  %call96 = call i32 @arraycmp(i64* %35, i64* %36, i64* null, i64 %conv95), !dbg !2071
  %tobool97 = icmp ne i32 %call96, 0, !dbg !2071
  br i1 %tobool97, label %if.end.99, label %if.then.98, !dbg !2072

if.then.98:                                       ; preds = %land.lhs.true.91, %land.lhs.true.80, %land.lhs.true.71
  br label %result, !dbg !2073

if.end.99:                                        ; preds = %land.lhs.true.91, %lor.lhs.false.88
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 0, !dbg !2075
  %38 = load i8*, i8** %buf, align 8, !dbg !2075, !tbaa !2077
  %buf100 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v2, i32 0, i32 0, !dbg !2078
  %39 = load i8*, i8** %buf100, align 8, !dbg !2078, !tbaa !2077
  %len101 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %v1, i32 0, i32 2, !dbg !2079
  %40 = load i64, i64* %len101, align 8, !dbg !2079, !tbaa !1860
  %call102 = call i32 @memcmp(i8* %38, i8* %39, i64 %40) #6, !dbg !2080
  %cmp103 = icmp ne i32 %call102, 0, !dbg !2081
  br i1 %cmp103, label %if.then.105, label %if.end.106, !dbg !2082

if.then.105:                                      ; preds = %if.end.99
  br label %result, !dbg !2083

if.end.106:                                       ; preds = %if.end.99
  store i32 1, i32* %equal, align 4, !dbg !2085, !tbaa !1844
  br label %result, !dbg !2086

result:                                           ; preds = %if.end.106, %if.then.105, %if.then.98, %if.then.67, %if.then.18
  call void @PyBuffer_Release(%struct.bufferinfo* %v1), !dbg !2087
  call void @PyBuffer_Release(%struct.bufferinfo* %v2), !dbg !2088
  %41 = load i32, i32* %equal, align 4, !dbg !2089, !tbaa !1844
  %tobool107 = icmp ne i32 %41, 0, !dbg !2089
  %cond = select i1 %tobool107, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !2089
  store %struct._object* %cond, %struct._object** %ret, align 8, !dbg !2090, !tbaa !1364
  %42 = load %struct._object*, %struct._object** %ret, align 8, !dbg !2091, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !2092
  %43 = load i64, i64* %ob_refcnt, align 8, !dbg !2093, !tbaa !1378
  %inc = add i64 %43, 1, !dbg !2093
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2093, !tbaa !1378
  %44 = load %struct._object*, %struct._object** %ret, align 8, !dbg !2094, !tbaa !1364
  store %struct._object* %44, %struct._object** %retval, !dbg !2095
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2095

cleanup:                                          ; preds = %result, %if.then.6, %if.then.2, %if.then
  %45 = bitcast i32* %equal to i8*, !dbg !2096
  call void @llvm.lifetime.end(i64 4, i8* %45) #1, !dbg !2096
  %46 = bitcast %struct._object** %ret to i8*, !dbg !2096
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !2096
  %47 = bitcast %struct.bufferinfo* %v2 to i8*, !dbg !2096
  call void @llvm.lifetime.end(i64 80, i8* %47) #1, !dbg !2096
  %48 = bitcast %struct.bufferinfo* %v1 to i8*, !dbg !2096
  call void @llvm.lifetime.end(i64 80, i8* %48) #1, !dbg !2096
  %49 = bitcast %struct._object** %b2 to i8*, !dbg !2096
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !2096
  %50 = bitcast %struct._object** %b1 to i8*, !dbg !2096
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !2096
  %51 = load %struct._object*, %struct._object** %retval, !dbg !2096
  ret %struct._object* %51, !dbg !2096
}

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare i32 @PySlice_GetIndicesEx(%struct._object*, i64, i64*, i64*, i64*, i64*) #3

declare %struct._object* @PyTuple_New(i64) #3

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #3

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare i64 @PyLong_AsSsize_t(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare i8* @PyBuffer_GetPointer(%struct.bufferinfo*, i64*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @unpack_single(i8* %ptr, i8* %fmt, i64 %itemsize) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %itemsize.addr = alloca i64, align 8
  %x = alloca %struct._object*, align 8
  %unpack_from = alloca %struct._object*, align 8
  %mview = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %_py_decref_tmp44 = alloca %struct._object*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !453, metadata !1360), !dbg !2097
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !454, metadata !1360), !dbg !2098
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !455, metadata !1360), !dbg !2099
  %0 = bitcast %struct._object** %x to i8*, !dbg !2100
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2100
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !456, metadata !1360), !dbg !2101
  %1 = bitcast %struct._object** %unpack_from to i8*, !dbg !2100
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2100
  call void @llvm.dbg.declare(metadata %struct._object** %unpack_from, metadata !457, metadata !1360), !dbg !2102
  %2 = bitcast %struct._object** %mview to i8*, !dbg !2100
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2100
  call void @llvm.dbg.declare(metadata %struct._object** %mview, metadata !458, metadata !1360), !dbg !2103
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !2104, !tbaa !1364
  %cmp = icmp eq i8* %3, null, !dbg !2106
  br i1 %cmp, label %if.then, label %if.end, !dbg !2107

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i8** %fmt.addr, align 8, !dbg !2108, !tbaa !1364
  store i64 1, i64* %itemsize.addr, align 8, !dbg !2110, !tbaa !1503
  br label %if.end, !dbg !2111

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct._object*, %struct._object** @structmodule, align 8, !dbg !2112, !tbaa !1364
  %call = call %struct._object* @PyObject_GetAttrString(%struct._object* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)), !dbg !2113
  store %struct._object* %call, %struct._object** %unpack_from, align 8, !dbg !2114, !tbaa !1364
  %5 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !2115, !tbaa !1364
  %cmp1 = icmp eq %struct._object* %5, null, !dbg !2117
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !2118

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !2119
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2119

if.end.3:                                         ; preds = %if.end
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !2120, !tbaa !1364
  %7 = load i64, i64* %itemsize.addr, align 8, !dbg !2121, !tbaa !1503
  %call4 = call %struct._object* @PyMemoryView_FromMemory(i8* %6, i64 %7, i32 256), !dbg !2122
  store %struct._object* %call4, %struct._object** %mview, align 8, !dbg !2123, !tbaa !1364
  %8 = load %struct._object*, %struct._object** %mview, align 8, !dbg !2124, !tbaa !1364
  %cmp5 = icmp eq %struct._object* %8, null, !dbg !2125
  br i1 %cmp5, label %if.then.6, label %if.end.10, !dbg !2126

if.then.6:                                        ; preds = %if.end.3
  br label %do.body, !dbg !2127

do.body:                                          ; preds = %if.then.6
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2128
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !2128
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !459, metadata !1360), !dbg !2130
  %10 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !2131, !tbaa !1364
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !2130, !tbaa !1364
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2132, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !2134
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !2135, !tbaa !1378
  %dec = add i64 %12, -1, !dbg !2135
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2135, !tbaa !1378
  %cmp7 = icmp ne i64 %dec, 0, !dbg !2136
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !2137

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2138

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2140, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !2142
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2142, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !2143
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2143, !tbaa !1568
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2144, !tbaa !1364
  call void %15(%struct._object* %16), !dbg !2145
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2146
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !2146
  br label %do.cond, !dbg !2148

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2149

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !2151
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2151

if.end.10:                                        ; preds = %if.end.3
  %18 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !2152, !tbaa !1364
  %19 = load i8*, i8** %fmt.addr, align 8, !dbg !2153, !tbaa !1364
  %20 = load %struct._object*, %struct._object** %mview, align 8, !dbg !2154, !tbaa !1364
  %call11 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i32 0, i32 0), i8* %19, %struct._object* %20), !dbg !2155
  store %struct._object* %call11, %struct._object** %x, align 8, !dbg !2156, !tbaa !1364
  br label %do.body.12, !dbg !2157

do.body.12:                                       ; preds = %if.end.10
  %21 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !2158
  call void @llvm.lifetime.start(i64 8, i8* %21) #1, !dbg !2158
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp13, metadata !463, metadata !1360), !dbg !2160
  %22 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !2161, !tbaa !1364
  store %struct._object* %22, %struct._object** %_py_decref_tmp13, align 8, !dbg !2160, !tbaa !1364
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !2162, !tbaa !1364
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !2164
  %24 = load i64, i64* %ob_refcnt14, align 8, !dbg !2165, !tbaa !1378
  %dec15 = add i64 %24, -1, !dbg !2165
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !2165, !tbaa !1378
  %cmp16 = icmp ne i64 %dec15, 0, !dbg !2166
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !2167

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21, !dbg !2168

if.else.18:                                       ; preds = %do.body.12
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !2170, !tbaa !1364
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !2172
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !2172, !tbaa !1374
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !2173
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !2173, !tbaa !1568
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !2174, !tbaa !1364
  call void %27(%struct._object* %28), !dbg !2175
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %29 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !2176
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !2176
  br label %do.cond.22, !dbg !2178

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !2179

do.end.23:                                        ; preds = %do.cond.22
  br label %do.body.24, !dbg !2181

do.body.24:                                       ; preds = %do.end.23
  %30 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !2182
  call void @llvm.lifetime.start(i64 8, i8* %30) #1, !dbg !2182
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp25, metadata !465, metadata !1360), !dbg !2184
  %31 = load %struct._object*, %struct._object** %mview, align 8, !dbg !2185, !tbaa !1364
  store %struct._object* %31, %struct._object** %_py_decref_tmp25, align 8, !dbg !2184, !tbaa !1364
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !2186, !tbaa !1364
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !2188
  %33 = load i64, i64* %ob_refcnt26, align 8, !dbg !2189, !tbaa !1378
  %dec27 = add i64 %33, -1, !dbg !2189
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !2189, !tbaa !1378
  %cmp28 = icmp ne i64 %dec27, 0, !dbg !2190
  br i1 %cmp28, label %if.then.29, label %if.else.30, !dbg !2191

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33, !dbg !2192

if.else.30:                                       ; preds = %do.body.24
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !2194, !tbaa !1364
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !2196
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !2196, !tbaa !1374
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !2197
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8, !dbg !2197, !tbaa !1568
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !2198, !tbaa !1364
  call void %36(%struct._object* %37), !dbg !2199
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  %38 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !2200
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !2200
  br label %do.cond.34, !dbg !2201

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !2202

do.end.35:                                        ; preds = %do.cond.34
  %39 = load %struct._object*, %struct._object** %x, align 8, !dbg !2204, !tbaa !1364
  %cmp36 = icmp eq %struct._object* %39, null, !dbg !2206
  br i1 %cmp36, label %if.then.37, label %if.end.38, !dbg !2207

if.then.37:                                       ; preds = %do.end.35
  store %struct._object* null, %struct._object** %retval, !dbg !2208
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2208

if.end.38:                                        ; preds = %do.end.35
  %40 = load %struct._object*, %struct._object** %x, align 8, !dbg !2209, !tbaa !1364
  %41 = bitcast %struct._object* %40 to %struct.PyVarObject*, !dbg !2210
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %41, i32 0, i32 1, !dbg !2211
  %42 = load i64, i64* %ob_size, align 8, !dbg !2211, !tbaa !1648
  %cmp39 = icmp eq i64 %42, 1, !dbg !2212
  br i1 %cmp39, label %if.then.40, label %if.end.55, !dbg !2213

if.then.40:                                       ; preds = %if.end.38
  %43 = bitcast %struct._object** %tmp to i8*, !dbg !2214
  call void @llvm.lifetime.start(i64 8, i8* %43) #1, !dbg !2214
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !467, metadata !1360), !dbg !2215
  %44 = load %struct._object*, %struct._object** %x, align 8, !dbg !2216, !tbaa !1364
  %45 = bitcast %struct._object* %44 to %struct.PyTupleObject*, !dbg !2217
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %45, i32 0, i32 1, !dbg !2218
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !2219
  %46 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !2219, !tbaa !1364
  store %struct._object* %46, %struct._object** %tmp, align 8, !dbg !2215, !tbaa !1364
  %47 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !2220, !tbaa !1364
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !2221
  %48 = load i64, i64* %ob_refcnt41, align 8, !dbg !2222, !tbaa !1378
  %inc = add i64 %48, 1, !dbg !2222
  store i64 %inc, i64* %ob_refcnt41, align 8, !dbg !2222, !tbaa !1378
  br label %do.body.42, !dbg !2223

do.body.42:                                       ; preds = %if.then.40
  %49 = bitcast %struct._object** %_py_decref_tmp44 to i8*, !dbg !2224
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !2224
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp44, metadata !470, metadata !1360), !dbg !2226
  %50 = load %struct._object*, %struct._object** %x, align 8, !dbg !2227, !tbaa !1364
  store %struct._object* %50, %struct._object** %_py_decref_tmp44, align 8, !dbg !2226, !tbaa !1364
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !2228, !tbaa !1364
  %ob_refcnt45 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !2230
  %52 = load i64, i64* %ob_refcnt45, align 8, !dbg !2231, !tbaa !1378
  %dec46 = add i64 %52, -1, !dbg !2231
  store i64 %dec46, i64* %ob_refcnt45, align 8, !dbg !2231, !tbaa !1378
  %cmp47 = icmp ne i64 %dec46, 0, !dbg !2232
  br i1 %cmp47, label %if.then.48, label %if.else.49, !dbg !2233

if.then.48:                                       ; preds = %do.body.42
  br label %if.end.52, !dbg !2234

if.else.49:                                       ; preds = %do.body.42
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !2236, !tbaa !1364
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !2238
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !2238, !tbaa !1374
  %tp_dealloc51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !2239
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc51, align 8, !dbg !2239, !tbaa !1568
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !2240, !tbaa !1364
  call void %55(%struct._object* %56), !dbg !2241
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.49, %if.then.48
  %57 = bitcast %struct._object** %_py_decref_tmp44 to i8*, !dbg !2242
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !2242
  br label %do.cond.53, !dbg !2244

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !2245

do.end.54:                                        ; preds = %do.cond.53
  %58 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !2247, !tbaa !1364
  store %struct._object* %58, %struct._object** %retval, !dbg !2248
  store i32 1, i32* %cleanup.dest.slot
  %59 = bitcast %struct._object** %tmp to i8*, !dbg !2249
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !2249
  br label %cleanup

if.end.55:                                        ; preds = %if.end.38
  %60 = load %struct._object*, %struct._object** %x, align 8, !dbg !2250, !tbaa !1364
  store %struct._object* %60, %struct._object** %retval, !dbg !2251
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2251

cleanup:                                          ; preds = %if.end.55, %do.end.54, %if.then.37, %do.end, %if.then.2
  %61 = bitcast %struct._object** %mview to i8*, !dbg !2252
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !2252
  %62 = bitcast %struct._object** %unpack_from to i8*, !dbg !2252
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !2252
  %63 = bitcast %struct._object** %x to i8*, !dbg !2252
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !2252
  %64 = load %struct._object*, %struct._object** %retval, !dbg !2252
  ret %struct._object* %64, !dbg !2252
}

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

declare %struct._object* @PyMemoryView_FromMemory(i8*, i64, i32) #3

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

declare %struct._object* @PyLong_FromSize_t(i64) #3

declare i64 @PyLong_AsLong(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal signext i8 @get_ascii_order(%struct._object* %order) #0 {
entry:
  %retval = alloca i8, align 1
  %order.addr = alloca %struct._object*, align 8
  %ascii_order = alloca %struct._object*, align 8
  %ord = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %order, %struct._object** %order.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %order.addr, metadata !488, metadata !1360), !dbg !2253
  %0 = bitcast %struct._object** %ascii_order to i8*, !dbg !2254
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2254
  call void @llvm.dbg.declare(metadata %struct._object** %ascii_order, metadata !489, metadata !1360), !dbg !2255
  call void @llvm.lifetime.start(i64 1, i8* %ord) #1, !dbg !2256
  call void @llvm.dbg.declare(metadata i8* %ord, metadata !490, metadata !1360), !dbg !2257
  %1 = load %struct._object*, %struct._object** %order.addr, align 8, !dbg !2258, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !2260
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2260, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19, !dbg !2261
  %3 = load i64, i64* %tp_flags, align 8, !dbg !2261, !tbaa !1605
  %and = and i64 %3, 268435456, !dbg !2262
  %cmp = icmp ne i64 %and, 0, !dbg !2263
  br i1 %cmp, label %if.end, label %if.then, !dbg !2264

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2265, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i32 0, i32 0)), !dbg !2267
  store i8 127, i8* %retval, !dbg !2268
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2268

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %order.addr, align 8, !dbg !2269, !tbaa !1364
  %call = call %struct._object* @PyUnicode_AsASCIIString(%struct._object* %5), !dbg !2270
  store %struct._object* %call, %struct._object** %ascii_order, align 8, !dbg !2271, !tbaa !1364
  %6 = load %struct._object*, %struct._object** %ascii_order, align 8, !dbg !2272, !tbaa !1364
  %cmp1 = icmp eq %struct._object* %6, null, !dbg !2274
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !2275

if.then.2:                                        ; preds = %if.end
  store i8 127, i8* %retval, !dbg !2276
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2276

if.end.3:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %ascii_order, align 8, !dbg !2278, !tbaa !1364
  %8 = bitcast %struct._object* %7 to %struct.PyBytesObject*, !dbg !2279
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %8, i32 0, i32 2, !dbg !2280
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !2281
  %arrayidx = getelementptr i8, i8* %arraydecay, i64 0, !dbg !2282
  %9 = load i8, i8* %arrayidx, align 1, !dbg !2282, !tbaa !1806
  store i8 %9, i8* %ord, align 1, !dbg !2283, !tbaa !1806
  br label %do.body, !dbg !2284

do.body:                                          ; preds = %if.end.3
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2285
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !2285
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !491, metadata !1360), !dbg !2287
  %11 = load %struct._object*, %struct._object** %ascii_order, align 8, !dbg !2288, !tbaa !1364
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !2287, !tbaa !1364
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2289, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !2291
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !2292, !tbaa !1378
  %dec = add i64 %13, -1, !dbg !2292
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2292, !tbaa !1378
  %cmp4 = icmp ne i64 %dec, 0, !dbg !2293
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !2294

if.then.5:                                        ; preds = %do.body
  br label %if.end.7, !dbg !2295

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2297, !tbaa !1364
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !2299
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !2299, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !2300
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2300, !tbaa !1568
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2301, !tbaa !1364
  call void %16(%struct._object* %17), !dbg !2302
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.5
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2303
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !2303
  br label %do.cond, !dbg !2305

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !2306

do.end:                                           ; preds = %do.cond
  %19 = load i8, i8* %ord, align 1, !dbg !2308, !tbaa !1806
  %conv = sext i8 %19 to i32, !dbg !2308
  %cmp8 = icmp ne i32 %conv, 67, !dbg !2310
  br i1 %cmp8, label %land.lhs.true, label %if.end.18, !dbg !2311

land.lhs.true:                                    ; preds = %do.end
  %20 = load i8, i8* %ord, align 1, !dbg !2312, !tbaa !1806
  %conv10 = sext i8 %20 to i32, !dbg !2312
  %cmp11 = icmp ne i32 %conv10, 70, !dbg !2314
  br i1 %cmp11, label %land.lhs.true.13, label %if.end.18, !dbg !2315

land.lhs.true.13:                                 ; preds = %land.lhs.true
  %21 = load i8, i8* %ord, align 1, !dbg !2316, !tbaa !1806
  %conv14 = sext i8 %21 to i32, !dbg !2316
  %cmp15 = icmp ne i32 %conv14, 65, !dbg !2318
  br i1 %cmp15, label %if.then.17, label %if.end.18, !dbg !2319

if.then.17:                                       ; preds = %land.lhs.true.13
  %22 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2320, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i32 0, i32 0)), !dbg !2322
  store i8 127, i8* %retval, !dbg !2323
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2323

if.end.18:                                        ; preds = %land.lhs.true.13, %land.lhs.true, %do.end
  %23 = load i8, i8* %ord, align 1, !dbg !2324, !tbaa !1806
  store i8 %23, i8* %retval, !dbg !2325
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2325

cleanup:                                          ; preds = %if.end.18, %if.then.17, %if.then.2, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %ord) #1, !dbg !2326
  %24 = bitcast %struct._object** %ascii_order to i8*, !dbg !2326
  call void @llvm.lifetime.end(i64 8, i8* %24) #1, !dbg !2326
  %25 = load i8, i8* %retval, !dbg !2326
  ret i8 %25, !dbg !2326
}

declare %struct._object* @PyMemoryView_GetContiguous(%struct._object*, i32, i8 signext) #3

declare %struct._object* @PyUnicode_AsASCIIString(%struct._object*) #3

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

declare i32 @PyBuffer_ToContiguous(i8*, %struct.bufferinfo*, i64, i8 signext) #3

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare void @PyMem_Free(i8*) #3

declare i32 @PyBuffer_IsContiguous(%struct.bufferinfo*, i8 signext) #3

; Function Attrs: nounwind uwtable
define internal i32 @fmtcmp(i8* %fmt1, i8* %fmt2) #0 {
entry:
  %retval = alloca i32, align 4
  %fmt1.addr = alloca i8*, align 8
  %fmt2.addr = alloca i8*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp38 = alloca i32, align 4
  %__s1_len49 = alloca i64, align 8
  %__s2_len51 = alloca i64, align 8
  %tmp52 = alloca i32, align 4
  %__s158 = alloca i8*, align 8
  %__result60 = alloca i32, align 4
  %tmp98 = alloca i32, align 4
  %__s1_len109 = alloca i64, align 8
  %__s2_len111 = alloca i64, align 8
  %tmp112 = alloca i32, align 4
  store i8* %fmt1, i8** %fmt1.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %fmt1.addr, metadata !527, metadata !1360), !dbg !2327
  store i8* %fmt2, i8** %fmt2.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %fmt2.addr, metadata !528, metadata !1360), !dbg !2328
  %0 = load i8*, i8** %fmt1.addr, align 8, !dbg !2329, !tbaa !1364
  %cmp = icmp eq i8* %0, null, !dbg !2330
  br i1 %cmp, label %if.then, label %if.end.41, !dbg !2331

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %fmt2.addr, align 8, !dbg !2332, !tbaa !1364
  %cmp1 = icmp eq i8* %1, null, !dbg !2333
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !2334

lor.rhs:                                          ; preds = %if.then
  %2 = bitcast i64* %__s1_len to i8*, !dbg !2335
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2335
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !529, metadata !1360), !dbg !2337
  %3 = bitcast i64* %__s2_len to i8*, !dbg !2338
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2338
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !533, metadata !1360), !dbg !2339
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i64 1) to i64), i64 ptrtoint ([2 x i8]* @.str.48 to i64)), i64 1), label %land.lhs.true, label %cond.false, !dbg !2340

land.lhs.true:                                    ; preds = %lor.rhs
  store i64 1, i64* %__s2_len, align 8, !dbg !2341, !tbaa !1503
  %4 = load i64, i64* %__s2_len, align 8, !dbg !2343, !tbaa !1503
  %cmp2 = icmp ult i64 %4, 4, !dbg !2344
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2345

cond.true:                                        ; preds = %land.lhs.true
  %5 = bitcast i8** %__s1 to i8*, !dbg !2346
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !2346
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !534, metadata !1360), !dbg !2348
  %6 = load i8*, i8** %fmt2.addr, align 8, !dbg !2349, !tbaa !1364
  store i8* %6, i8** %__s1, align 8, !dbg !2348, !tbaa !1364
  %7 = bitcast i32* %__result to i8*, !dbg !2350
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !2350
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !536, metadata !1360), !dbg !2351
  %8 = load i8*, i8** %__s1, align 8, !dbg !2352, !tbaa !1364
  %arrayidx = getelementptr i8, i8* %8, i64 0, !dbg !2352
  %9 = load i8, i8* %arrayidx, align 1, !dbg !2352, !tbaa !1806
  %conv = zext i8 %9 to i32, !dbg !2352
  %10 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), align 1, !dbg !2353, !tbaa !1806
  %conv5 = zext i8 %10 to i32, !dbg !2353
  %sub = sub i32 %conv, %conv5, !dbg !2354
  store i32 %sub, i32* %__result, align 4, !dbg !2351, !tbaa !1844
  %11 = load i64, i64* %__s2_len, align 8, !dbg !2355, !tbaa !1503
  %cmp6 = icmp ugt i64 %11, 0, !dbg !2357
  br i1 %cmp6, label %land.lhs.true.8, label %if.end.37, !dbg !2358

land.lhs.true.8:                                  ; preds = %cond.true
  %12 = load i32, i32* %__result, align 4, !dbg !2359, !tbaa !1844
  %cmp9 = icmp eq i32 %12, 0, !dbg !2361
  br i1 %cmp9, label %if.then.11, label %if.end.37, !dbg !2362

if.then.11:                                       ; preds = %land.lhs.true.8
  %13 = load i8*, i8** %__s1, align 8, !dbg !2363, !tbaa !1364
  %arrayidx12 = getelementptr i8, i8* %13, i64 1, !dbg !2363
  %14 = load i8, i8* %arrayidx12, align 1, !dbg !2363, !tbaa !1806
  %conv13 = zext i8 %14 to i32, !dbg !2363
  %15 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i64 1), align 1, !dbg !2366, !tbaa !1806
  %conv14 = zext i8 %15 to i32, !dbg !2366
  %sub15 = sub i32 %conv13, %conv14, !dbg !2367
  store i32 %sub15, i32* %__result, align 4, !dbg !2368, !tbaa !1844
  %16 = load i64, i64* %__s2_len, align 8, !dbg !2369, !tbaa !1503
  %cmp16 = icmp ugt i64 %16, 1, !dbg !2371
  br i1 %cmp16, label %land.lhs.true.18, label %if.end.36, !dbg !2372

land.lhs.true.18:                                 ; preds = %if.then.11
  %17 = load i32, i32* %__result, align 4, !dbg !2373, !tbaa !1844
  %cmp19 = icmp eq i32 %17, 0, !dbg !2375
  br i1 %cmp19, label %if.then.21, label %if.end.36, !dbg !2376

if.then.21:                                       ; preds = %land.lhs.true.18
  %18 = load i8*, i8** %__s1, align 8, !dbg !2377, !tbaa !1364
  %arrayidx22 = getelementptr i8, i8* %18, i64 2, !dbg !2377
  %19 = load i8, i8* %arrayidx22, align 1, !dbg !2377, !tbaa !1806
  %conv23 = zext i8 %19 to i32, !dbg !2377
  %20 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i64 2), align 1, !dbg !2380, !tbaa !1806
  %conv24 = zext i8 %20 to i32, !dbg !2380
  %sub25 = sub i32 %conv23, %conv24, !dbg !2381
  store i32 %sub25, i32* %__result, align 4, !dbg !2382, !tbaa !1844
  %21 = load i64, i64* %__s2_len, align 8, !dbg !2383, !tbaa !1503
  %cmp26 = icmp ugt i64 %21, 2, !dbg !2385
  br i1 %cmp26, label %land.lhs.true.28, label %if.end, !dbg !2386

land.lhs.true.28:                                 ; preds = %if.then.21
  %22 = load i32, i32* %__result, align 4, !dbg !2387, !tbaa !1844
  %cmp29 = icmp eq i32 %22, 0, !dbg !2389
  br i1 %cmp29, label %if.then.31, label %if.end, !dbg !2390

if.then.31:                                       ; preds = %land.lhs.true.28
  %23 = load i8*, i8** %__s1, align 8, !dbg !2391, !tbaa !1364
  %arrayidx32 = getelementptr i8, i8* %23, i64 3, !dbg !2391
  %24 = load i8, i8* %arrayidx32, align 1, !dbg !2391, !tbaa !1806
  %conv33 = zext i8 %24 to i32, !dbg !2391
  %25 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i64 3), align 1, !dbg !2393, !tbaa !1806
  %conv34 = zext i8 %25 to i32, !dbg !2393
  %sub35 = sub i32 %conv33, %conv34, !dbg !2394
  store i32 %sub35, i32* %__result, align 4, !dbg !2395, !tbaa !1844
  br label %if.end, !dbg !2396

if.end:                                           ; preds = %if.then.31, %land.lhs.true.28, %if.then.21
  br label %if.end.36, !dbg !2397

if.end.36:                                        ; preds = %if.end, %land.lhs.true.18, %if.then.11
  br label %if.end.37, !dbg !2401

if.end.37:                                        ; preds = %if.end.36, %land.lhs.true.8, %cond.true
  %26 = load i32, i32* %__result, align 4, !dbg !2405, !tbaa !1844
  store i32 %26, i32* %tmp38, !dbg !2409, !tbaa !1844
  %27 = bitcast i32* %__result to i8*, !dbg !2410
  call void @llvm.lifetime.end(i64 4, i8* %27) #1, !dbg !2410
  %28 = bitcast i8** %__s1 to i8*, !dbg !2410
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !2410
  %29 = load i32, i32* %tmp38, !dbg !2411, !tbaa !1844
  br label %cond.end, !dbg !2345

cond.false:                                       ; preds = %land.lhs.true, %lor.rhs
  %30 = load i8*, i8** %fmt2.addr, align 8, !dbg !2412, !tbaa !1364
  %call = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #1, !dbg !2415
  br label %cond.end, !dbg !2345

cond.end:                                         ; preds = %cond.false, %if.end.37
  %cond = phi i32 [ %29, %if.end.37 ], [ %call, %cond.false ], !dbg !2345
  store i32 %cond, i32* %tmp, !dbg !2416, !tbaa !1844
  %31 = bitcast i64* %__s2_len to i8*, !dbg !2419
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !2419
  %32 = bitcast i64* %__s1_len to i8*, !dbg !2419
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !2419
  %33 = load i32, i32* %tmp, !dbg !2420, !tbaa !1844
  %cmp39 = icmp eq i32 %33, 0, !dbg !2421
  br label %lor.end, !dbg !2334

lor.end:                                          ; preds = %cond.end, %if.then
  %34 = phi i1 [ true, %if.then ], [ %cmp39, %cond.end ]
  %lor.ext = zext i1 %34 to i32, !dbg !2422
  store i32 %lor.ext, i32* %retval, !dbg !2425
  br label %return, !dbg !2425

if.end.41:                                        ; preds = %entry
  %35 = load i8*, i8** %fmt2.addr, align 8, !dbg !2426, !tbaa !1364
  %cmp42 = icmp eq i8* %35, null, !dbg !2427
  br i1 %cmp42, label %if.then.44, label %if.end.107, !dbg !2428

if.then.44:                                       ; preds = %if.end.41
  %36 = load i8*, i8** %fmt1.addr, align 8, !dbg !2429, !tbaa !1364
  %cmp45 = icmp eq i8* %36, null, !dbg !2430
  br i1 %cmp45, label %lor.end.105, label %lor.rhs.47, !dbg !2431

lor.rhs.47:                                       ; preds = %if.then.44
  %37 = bitcast i64* %__s1_len49 to i8*, !dbg !2432
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !2432
  call void @llvm.dbg.declare(metadata i64* %__s1_len49, metadata !537, metadata !1360), !dbg !2434
  %38 = bitcast i64* %__s2_len51 to i8*, !dbg !2435
  call void @llvm.lifetime.start(i64 8, i8* %38) #1, !dbg !2435
  call void @llvm.dbg.declare(metadata i64* %__s2_len51, metadata !541, metadata !1360), !dbg !2436
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i64 1) to i64), i64 ptrtoint ([2 x i8]* @.str.48 to i64)), i64 1), label %land.lhs.true.53, label %cond.false.99, !dbg !2437

land.lhs.true.53:                                 ; preds = %lor.rhs.47
  store i64 1, i64* %__s2_len51, align 8, !dbg !2438, !tbaa !1503
  %39 = load i64, i64* %__s2_len51, align 8, !dbg !2440, !tbaa !1503
  %cmp54 = icmp ult i64 %39, 4, !dbg !2441
  br i1 %cmp54, label %cond.true.56, label %cond.false.99, !dbg !2442

cond.true.56:                                     ; preds = %land.lhs.true.53
  %40 = bitcast i8** %__s158 to i8*, !dbg !2443
  call void @llvm.lifetime.start(i64 8, i8* %40) #1, !dbg !2443
  call void @llvm.dbg.declare(metadata i8** %__s158, metadata !542, metadata !1360), !dbg !2445
  %41 = load i8*, i8** %fmt1.addr, align 8, !dbg !2446, !tbaa !1364
  store i8* %41, i8** %__s158, align 8, !dbg !2445, !tbaa !1364
  %42 = bitcast i32* %__result60 to i8*, !dbg !2447
  call void @llvm.lifetime.start(i64 4, i8* %42) #1, !dbg !2447
  call void @llvm.dbg.declare(metadata i32* %__result60, metadata !544, metadata !1360), !dbg !2448
  %43 = load i8*, i8** %__s158, align 8, !dbg !2449, !tbaa !1364
  %arrayidx61 = getelementptr i8, i8* %43, i64 0, !dbg !2449
  %44 = load i8, i8* %arrayidx61, align 1, !dbg !2449, !tbaa !1806
  %conv62 = zext i8 %44 to i32, !dbg !2449
  %45 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), align 1, !dbg !2450, !tbaa !1806
  %conv63 = zext i8 %45 to i32, !dbg !2450
  %sub64 = sub i32 %conv62, %conv63, !dbg !2451
  store i32 %sub64, i32* %__result60, align 4, !dbg !2448, !tbaa !1844
  %46 = load i64, i64* %__s2_len51, align 8, !dbg !2452, !tbaa !1503
  %cmp65 = icmp ugt i64 %46, 0, !dbg !2454
  br i1 %cmp65, label %land.lhs.true.67, label %if.end.97, !dbg !2455

land.lhs.true.67:                                 ; preds = %cond.true.56
  %47 = load i32, i32* %__result60, align 4, !dbg !2456, !tbaa !1844
  %cmp68 = icmp eq i32 %47, 0, !dbg !2458
  br i1 %cmp68, label %if.then.70, label %if.end.97, !dbg !2459

if.then.70:                                       ; preds = %land.lhs.true.67
  %48 = load i8*, i8** %__s158, align 8, !dbg !2460, !tbaa !1364
  %arrayidx71 = getelementptr i8, i8* %48, i64 1, !dbg !2460
  %49 = load i8, i8* %arrayidx71, align 1, !dbg !2460, !tbaa !1806
  %conv72 = zext i8 %49 to i32, !dbg !2460
  %50 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i64 1), align 1, !dbg !2463, !tbaa !1806
  %conv73 = zext i8 %50 to i32, !dbg !2463
  %sub74 = sub i32 %conv72, %conv73, !dbg !2464
  store i32 %sub74, i32* %__result60, align 4, !dbg !2465, !tbaa !1844
  %51 = load i64, i64* %__s2_len51, align 8, !dbg !2466, !tbaa !1503
  %cmp75 = icmp ugt i64 %51, 1, !dbg !2468
  br i1 %cmp75, label %land.lhs.true.77, label %if.end.96, !dbg !2469

land.lhs.true.77:                                 ; preds = %if.then.70
  %52 = load i32, i32* %__result60, align 4, !dbg !2470, !tbaa !1844
  %cmp78 = icmp eq i32 %52, 0, !dbg !2472
  br i1 %cmp78, label %if.then.80, label %if.end.96, !dbg !2473

if.then.80:                                       ; preds = %land.lhs.true.77
  %53 = load i8*, i8** %__s158, align 8, !dbg !2474, !tbaa !1364
  %arrayidx81 = getelementptr i8, i8* %53, i64 2, !dbg !2474
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !2474, !tbaa !1806
  %conv82 = zext i8 %54 to i32, !dbg !2474
  %55 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i64 2), align 1, !dbg !2477, !tbaa !1806
  %conv83 = zext i8 %55 to i32, !dbg !2477
  %sub84 = sub i32 %conv82, %conv83, !dbg !2478
  store i32 %sub84, i32* %__result60, align 4, !dbg !2479, !tbaa !1844
  %56 = load i64, i64* %__s2_len51, align 8, !dbg !2480, !tbaa !1503
  %cmp85 = icmp ugt i64 %56, 2, !dbg !2482
  br i1 %cmp85, label %land.lhs.true.87, label %if.end.95, !dbg !2483

land.lhs.true.87:                                 ; preds = %if.then.80
  %57 = load i32, i32* %__result60, align 4, !dbg !2484, !tbaa !1844
  %cmp88 = icmp eq i32 %57, 0, !dbg !2486
  br i1 %cmp88, label %if.then.90, label %if.end.95, !dbg !2487

if.then.90:                                       ; preds = %land.lhs.true.87
  %58 = load i8*, i8** %__s158, align 8, !dbg !2488, !tbaa !1364
  %arrayidx91 = getelementptr i8, i8* %58, i64 3, !dbg !2488
  %59 = load i8, i8* %arrayidx91, align 1, !dbg !2488, !tbaa !1806
  %conv92 = zext i8 %59 to i32, !dbg !2488
  %60 = load i8, i8* getelementptr (i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i64 3), align 1, !dbg !2490, !tbaa !1806
  %conv93 = zext i8 %60 to i32, !dbg !2490
  %sub94 = sub i32 %conv92, %conv93, !dbg !2491
  store i32 %sub94, i32* %__result60, align 4, !dbg !2492, !tbaa !1844
  br label %if.end.95, !dbg !2493

if.end.95:                                        ; preds = %if.then.90, %land.lhs.true.87, %if.then.80
  br label %if.end.96, !dbg !2494

if.end.96:                                        ; preds = %if.end.95, %land.lhs.true.77, %if.then.70
  br label %if.end.97, !dbg !2498

if.end.97:                                        ; preds = %if.end.96, %land.lhs.true.67, %cond.true.56
  %61 = load i32, i32* %__result60, align 4, !dbg !2502, !tbaa !1844
  store i32 %61, i32* %tmp98, !dbg !2506, !tbaa !1844
  %62 = bitcast i32* %__result60 to i8*, !dbg !2507
  call void @llvm.lifetime.end(i64 4, i8* %62) #1, !dbg !2507
  %63 = bitcast i8** %__s158 to i8*, !dbg !2507
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !2507
  %64 = load i32, i32* %tmp98, !dbg !2508, !tbaa !1844
  br label %cond.end.101, !dbg !2442

cond.false.99:                                    ; preds = %land.lhs.true.53, %lor.rhs.47
  %65 = load i8*, i8** %fmt1.addr, align 8, !dbg !2509, !tbaa !1364
  %call100 = call i32 @strcmp(i8* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #1, !dbg !2512
  br label %cond.end.101, !dbg !2442

cond.end.101:                                     ; preds = %cond.false.99, %if.end.97
  %cond102 = phi i32 [ %64, %if.end.97 ], [ %call100, %cond.false.99 ], !dbg !2442
  store i32 %cond102, i32* %tmp52, !dbg !2513, !tbaa !1844
  %66 = bitcast i64* %__s2_len51 to i8*, !dbg !2516
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !2516
  %67 = bitcast i64* %__s1_len49 to i8*, !dbg !2516
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !2516
  %68 = load i32, i32* %tmp52, !dbg !2517, !tbaa !1844
  %cmp103 = icmp eq i32 %68, 0, !dbg !2518
  br label %lor.end.105, !dbg !2431

lor.end.105:                                      ; preds = %cond.end.101, %if.then.44
  %69 = phi i1 [ true, %if.then.44 ], [ %cmp103, %cond.end.101 ]
  %lor.ext106 = zext i1 %69 to i32, !dbg !2519
  store i32 %lor.ext106, i32* %retval, !dbg !2522
  br label %return, !dbg !2522

if.end.107:                                       ; preds = %if.end.41
  %70 = bitcast i64* %__s1_len109 to i8*, !dbg !2523
  call void @llvm.lifetime.start(i64 8, i8* %70) #1, !dbg !2523
  call void @llvm.dbg.declare(metadata i64* %__s1_len109, metadata !545, metadata !1360), !dbg !2524
  %71 = bitcast i64* %__s2_len111 to i8*, !dbg !2523
  call void @llvm.lifetime.start(i64 8, i8* %71) #1, !dbg !2523
  call void @llvm.dbg.declare(metadata i64* %__s2_len111, metadata !547, metadata !1360), !dbg !2525
  %72 = load i8*, i8** %fmt1.addr, align 8, !dbg !2526, !tbaa !1364
  %73 = load i8*, i8** %fmt2.addr, align 8, !dbg !2527, !tbaa !1364
  %call113 = call i32 @strcmp(i8* %72, i8* %73) #1, !dbg !2528
  store i32 %call113, i32* %tmp112, !dbg !2523, !tbaa !1844
  %74 = bitcast i64* %__s2_len111 to i8*, !dbg !2529
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !2529
  %75 = bitcast i64* %__s1_len109 to i8*, !dbg !2529
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !2529
  %76 = load i32, i32* %tmp112, !dbg !2530, !tbaa !1844
  %cmp114 = icmp eq i32 %76, 0, !dbg !2531
  %conv115 = zext i1 %cmp114 to i32, !dbg !2531
  store i32 %conv115, i32* %retval, !dbg !2532
  br label %return, !dbg !2532

return:                                           ; preds = %if.end.107, %lor.end.105, %lor.end
  %77 = load i32, i32* %retval, !dbg !2533
  ret i32 %77, !dbg !2533
}

; Function Attrs: nounwind uwtable
define internal i32 @arraycmp(i64* %a1, i64* %a2, i64* %shape, i64 %ndim) #0 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i64*, align 8
  %a2.addr = alloca i64*, align 8
  %shape.addr = alloca i64*, align 8
  %ndim.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %a1, i64** %a1.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %a1.addr, metadata !554, metadata !1360), !dbg !2534
  store i64* %a2, i64** %a2.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %a2.addr, metadata !555, metadata !1360), !dbg !2535
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !556, metadata !1360), !dbg !2536
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !557, metadata !1360), !dbg !2537
  %0 = bitcast i64* %i to i8*, !dbg !2538
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2538
  call void @llvm.dbg.declare(metadata i64* %i, metadata !558, metadata !1360), !dbg !2539
  %1 = load i64, i64* %ndim.addr, align 8, !dbg !2540, !tbaa !1503
  %cmp = icmp eq i64 %1, 1, !dbg !2542
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2543

land.lhs.true:                                    ; preds = %entry
  %2 = load i64*, i64** %shape.addr, align 8, !dbg !2544, !tbaa !1364
  %tobool = icmp ne i64* %2, null, !dbg !2544
  br i1 %tobool, label %land.lhs.true.1, label %if.end, !dbg !2546

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %3 = load i64*, i64** %shape.addr, align 8, !dbg !2547, !tbaa !1364
  %arrayidx = getelementptr i64, i64* %3, i64 0, !dbg !2547
  %4 = load i64, i64* %arrayidx, align 8, !dbg !2547, !tbaa !1503
  %cmp2 = icmp eq i64 %4, 1, !dbg !2549
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2550

if.then:                                          ; preds = %land.lhs.true.1
  store i32 1, i32* %retval, !dbg !2551
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2551

if.end:                                           ; preds = %land.lhs.true.1, %land.lhs.true, %entry
  store i64 0, i64* %i, align 8, !dbg !2553, !tbaa !1503
  br label %for.cond, !dbg !2555

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i64, i64* %i, align 8, !dbg !2556, !tbaa !1503
  %6 = load i64, i64* %ndim.addr, align 8, !dbg !2560, !tbaa !1503
  %cmp3 = icmp slt i64 %5, %6, !dbg !2561
  br i1 %cmp3, label %for.body, label %for.end, !dbg !2562

for.body:                                         ; preds = %for.cond
  %7 = load i64, i64* %i, align 8, !dbg !2563, !tbaa !1503
  %8 = load i64*, i64** %a1.addr, align 8, !dbg !2566, !tbaa !1364
  %arrayidx4 = getelementptr i64, i64* %8, i64 %7, !dbg !2566
  %9 = load i64, i64* %arrayidx4, align 8, !dbg !2566, !tbaa !1503
  %10 = load i64, i64* %i, align 8, !dbg !2567, !tbaa !1503
  %11 = load i64*, i64** %a2.addr, align 8, !dbg !2568, !tbaa !1364
  %arrayidx5 = getelementptr i64, i64* %11, i64 %10, !dbg !2568
  %12 = load i64, i64* %arrayidx5, align 8, !dbg !2568, !tbaa !1503
  %cmp6 = icmp ne i64 %9, %12, !dbg !2569
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !2570

if.then.7:                                        ; preds = %for.body
  store i32 0, i32* %retval, !dbg !2571
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2571

if.end.8:                                         ; preds = %for.body
  br label %for.inc, !dbg !2573

for.inc:                                          ; preds = %if.end.8
  %13 = load i64, i64* %i, align 8, !dbg !2574, !tbaa !1503
  %inc = add i64 %13, 1, !dbg !2574
  store i64 %inc, i64* %i, align 8, !dbg !2574, !tbaa !1503
  br label %for.cond, !dbg !2575

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, !dbg !2576
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2576

cleanup:                                          ; preds = %for.end, %if.then.7, %if.then
  %14 = bitcast i64* %i to i8*, !dbg !2577
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !2577
  %15 = load i32, i32* %retval, !dbg !2577
  ret i32 %15, !dbg !2577
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: nounwind uwtable
define internal void @ndarray_dealloc(%struct.NDArrayObject* %self) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !563, metadata !1360), !dbg !2578
  %0 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2579, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %0, i32 0, i32 3, !dbg !2580
  %1 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !2580, !tbaa !2581
  %tobool = icmp ne %struct.ndbuf* %1, null, !dbg !2579
  br i1 %tobool, label %if.then, label %if.end.29, !dbg !2584

if.then:                                          ; preds = %entry
  %2 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2585, !tbaa !1364
  %head1 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %2, i32 0, i32 3, !dbg !2586
  %3 = load %struct.ndbuf*, %struct.ndbuf** %head1, align 8, !dbg !2586, !tbaa !2581
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2587, !tbaa !1364
  %staticbuf = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 2, !dbg !2588
  %cmp = icmp eq %struct.ndbuf* %3, %staticbuf, !dbg !2589
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !2590

if.then.2:                                        ; preds = %if.then
  %5 = bitcast %struct.bufferinfo** %base to i8*, !dbg !2591
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !2591
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !564, metadata !1360), !dbg !2592
  %6 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2593, !tbaa !1364
  %head3 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %6, i32 0, i32 3, !dbg !2594
  %7 = load %struct.ndbuf*, %struct.ndbuf** %head3, align 8, !dbg !2594, !tbaa !2581
  %base4 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %7, i32 0, i32 7, !dbg !2595
  store %struct.bufferinfo* %base4, %struct.bufferinfo** %base, align 8, !dbg !2592, !tbaa !1364
  %8 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2596, !tbaa !1364
  %head5 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %8, i32 0, i32 3, !dbg !2598
  %9 = load %struct.ndbuf*, %struct.ndbuf** %head5, align 8, !dbg !2598, !tbaa !2581
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %9, i32 0, i32 5, !dbg !2599
  %10 = load i32, i32* %flags, align 4, !dbg !2599, !tbaa !2600
  %and = and i32 %10, 512, !dbg !2601
  %tobool6 = icmp ne i32 %and, 0, !dbg !2601
  br i1 %tobool6, label %if.then.7, label %if.end.25, !dbg !2602

if.then.7:                                        ; preds = %if.then.2
  br label %do.body, !dbg !2603

do.body:                                          ; preds = %if.then.7
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2605, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 7, !dbg !2609
  %12 = load i64*, i64** %shape, align 8, !dbg !2609, !tbaa !1716
  %tobool8 = icmp ne i64* %12, null, !dbg !2610
  br i1 %tobool8, label %if.then.9, label %if.end, !dbg !2611

if.then.9:                                        ; preds = %do.body
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2612, !tbaa !1364
  %shape10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 7, !dbg !2614
  %14 = load i64*, i64** %shape10, align 8, !dbg !2614, !tbaa !1716
  %15 = bitcast i64* %14 to i8*, !dbg !2615
  call void @PyMem_Free(i8* %15), !dbg !2616
  br label %if.end, !dbg !2616

if.end:                                           ; preds = %if.then.9, %do.body
  br label %do.cond, !dbg !2617

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2620

do.end:                                           ; preds = %do.cond
  br label %do.body.11, !dbg !2622

do.body.11:                                       ; preds = %do.end
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2623, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 8, !dbg !2627
  %17 = load i64*, i64** %strides, align 8, !dbg !2627, !tbaa !2024
  %tobool12 = icmp ne i64* %17, null, !dbg !2628
  br i1 %tobool12, label %if.then.13, label %if.end.15, !dbg !2629

if.then.13:                                       ; preds = %do.body.11
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2630, !tbaa !1364
  %strides14 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 8, !dbg !2632
  %19 = load i64*, i64** %strides14, align 8, !dbg !2632, !tbaa !2024
  %20 = bitcast i64* %19 to i8*, !dbg !2633
  call void @PyMem_Free(i8* %20), !dbg !2634
  br label %if.end.15, !dbg !2634

if.end.15:                                        ; preds = %if.then.13, %do.body.11
  br label %do.cond.16, !dbg !2635

do.cond.16:                                       ; preds = %if.end.15
  br label %do.end.17, !dbg !2638

do.end.17:                                        ; preds = %do.cond.16
  br label %do.body.18, !dbg !2640

do.body.18:                                       ; preds = %do.end.17
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2641, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 9, !dbg !2645
  %22 = load i64*, i64** %suboffsets, align 8, !dbg !2645, !tbaa !2033
  %tobool19 = icmp ne i64* %22, null, !dbg !2646
  br i1 %tobool19, label %if.then.20, label %if.end.22, !dbg !2647

if.then.20:                                       ; preds = %do.body.18
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2648, !tbaa !1364
  %suboffsets21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 9, !dbg !2650
  %24 = load i64*, i64** %suboffsets21, align 8, !dbg !2650, !tbaa !2033
  %25 = bitcast i64* %24 to i8*, !dbg !2651
  call void @PyMem_Free(i8* %25), !dbg !2652
  br label %if.end.22, !dbg !2652

if.end.22:                                        ; preds = %if.then.20, %do.body.18
  br label %do.cond.23, !dbg !2653

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !2656

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !2658

if.end.25:                                        ; preds = %do.end.24, %if.then.2
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2659, !tbaa !1364
  call void @PyBuffer_Release(%struct.bufferinfo* %26), !dbg !2660
  %27 = bitcast %struct.bufferinfo** %base to i8*, !dbg !2661
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !2661
  br label %if.end.28, !dbg !2662

if.else:                                          ; preds = %if.then
  br label %while.cond, !dbg !2663

while.cond:                                       ; preds = %while.body, %if.else
  %28 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2665, !tbaa !1364
  %head26 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %28, i32 0, i32 3, !dbg !2668
  %29 = load %struct.ndbuf*, %struct.ndbuf** %head26, align 8, !dbg !2668, !tbaa !2581
  %tobool27 = icmp ne %struct.ndbuf* %29, null, !dbg !2663
  br i1 %tobool27, label %while.body, label %while.end, !dbg !2663

while.body:                                       ; preds = %while.cond
  %30 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2669, !tbaa !1364
  call void @ndbuf_pop(%struct.NDArrayObject* %30), !dbg !2670
  br label %while.cond, !dbg !2663

while.end:                                        ; preds = %while.cond
  br label %if.end.28

if.end.28:                                        ; preds = %while.end, %if.end.25
  br label %if.end.29, !dbg !2671

if.end.29:                                        ; preds = %if.end.28, %entry
  %31 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !2672, !tbaa !1364
  %32 = bitcast %struct.NDArrayObject* %31 to i8*, !dbg !2672
  call void @PyObject_Free(i8* %32), !dbg !2673
  ret void, !dbg !2674
}

; Function Attrs: nounwind uwtable
define internal i64 @ndarray_hash(%struct._object* %self) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %bytes = alloca %struct._object*, align 8
  %hash = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !804, metadata !1360), !dbg !2675
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !2676
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2676
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !805, metadata !1360), !dbg !2677
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2678, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !2679
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !2677, !tbaa !1364
  %3 = bitcast %struct.bufferinfo** %view to i8*, !dbg !2680
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2680
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !808, metadata !1360), !dbg !2681
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2682, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 3, !dbg !2683
  %5 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !2683, !tbaa !2581
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 7, !dbg !2684
  store %struct.bufferinfo* %base, %struct.bufferinfo** %view, align 8, !dbg !2681, !tbaa !1364
  %6 = bitcast %struct._object** %bytes to i8*, !dbg !2685
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !2685
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !811, metadata !1360), !dbg !2686
  %7 = bitcast i64* %hash to i8*, !dbg !2687
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !2687
  call void @llvm.dbg.declare(metadata i64* %hash, metadata !812, metadata !1360), !dbg !2688
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2689, !tbaa !1364
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 4, !dbg !2691
  %9 = load i32, i32* %readonly, align 4, !dbg !2691, !tbaa !2692
  %tobool = icmp ne i32 %9, 0, !dbg !2689
  br i1 %tobool, label %if.end, label %if.then, !dbg !2693

if.then:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !2694, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.68, i32 0, i32 0)), !dbg !2696
  store i64 -1, i64* %retval, !dbg !2697
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2697

if.end:                                           ; preds = %entry
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2698, !tbaa !1364
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 1, !dbg !2700
  %12 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2700, !tbaa !2701
  %cmp = icmp ne %struct._object* %12, null, !dbg !2702
  br i1 %cmp, label %land.lhs.true, label %if.end.4, !dbg !2703

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !2704, !tbaa !1364
  %obj1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 1, !dbg !2706
  %14 = load %struct._object*, %struct._object** %obj1, align 8, !dbg !2706, !tbaa !2701
  %call = call i64 @PyObject_Hash(%struct._object* %14), !dbg !2707
  %cmp2 = icmp eq i64 %call, -1, !dbg !2708
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !2709

if.then.3:                                        ; preds = %land.lhs.true
  store i64 -1, i64* %retval, !dbg !2710
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2710

if.end.4:                                         ; preds = %land.lhs.true, %if.end
  %15 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2712, !tbaa !1364
  %call5 = call %struct._object* @ndarray_tobytes(%struct._object* %15, %struct._object* null), !dbg !2713
  store %struct._object* %call5, %struct._object** %bytes, align 8, !dbg !2714, !tbaa !1364
  %16 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !2715, !tbaa !1364
  %cmp6 = icmp eq %struct._object* %16, null, !dbg !2717
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !2718

if.then.7:                                        ; preds = %if.end.4
  store i64 -1, i64* %retval, !dbg !2719
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2719

if.end.8:                                         ; preds = %if.end.4
  %17 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !2721, !tbaa !1364
  %call9 = call i64 @PyObject_Hash(%struct._object* %17), !dbg !2722
  store i64 %call9, i64* %hash, align 8, !dbg !2723, !tbaa !1503
  br label %do.body, !dbg !2724

do.body:                                          ; preds = %if.end.8
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2725
  call void @llvm.lifetime.start(i64 8, i8* %18) #1, !dbg !2725
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !813, metadata !1360), !dbg !2727
  %19 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !2728, !tbaa !1364
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !2727, !tbaa !1364
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2729, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !2731
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !2732, !tbaa !1378
  %dec = add i64 %21, -1, !dbg !2732
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2732, !tbaa !1378
  %cmp10 = icmp ne i64 %dec, 0, !dbg !2733
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !2734

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !2735

if.else:                                          ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2737, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !2739
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2739, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !2740
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2740, !tbaa !1568
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2741, !tbaa !1364
  call void %24(%struct._object* %25), !dbg !2742
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2743
  call void @llvm.lifetime.end(i64 8, i8* %26) #1, !dbg !2743
  br label %do.cond, !dbg !2745

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !2746

do.end:                                           ; preds = %do.cond
  %27 = load i64, i64* %hash, align 8, !dbg !2748, !tbaa !1503
  store i64 %27, i64* %retval, !dbg !2749
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2749

cleanup:                                          ; preds = %do.end, %if.then.7, %if.then.3, %if.then
  %28 = bitcast i64* %hash to i8*, !dbg !2750
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !2750
  %29 = bitcast %struct._object** %bytes to i8*, !dbg !2750
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !2750
  %30 = bitcast %struct.bufferinfo** %view to i8*, !dbg !2750
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !2750
  %31 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !2750
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !2750
  %32 = load i64, i64* %retval, !dbg !2750
  ret i64 %32, !dbg !2750
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @ndarray_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %v = alloca %struct._object*, align 8
  %shape = alloca %struct._object*, align 8
  %strides = alloca %struct._object*, align 8
  %offset = alloca i64, align 8
  %format = alloca %struct._object*, align 8
  %flags = alloca i32, align 4
  %getbuf = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1238, metadata !1360), !dbg !2751
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1239, metadata !1360), !dbg !2752
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1240, metadata !1360), !dbg !2753
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !2754
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2754
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1241, metadata !1360), !dbg !2755
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2756, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !2757
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !2755, !tbaa !1364
  %3 = bitcast %struct._object** %v to i8*, !dbg !2758
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2758
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1242, metadata !1360), !dbg !2759
  store %struct._object* null, %struct._object** %v, align 8, !dbg !2759, !tbaa !1364
  %4 = bitcast %struct._object** %shape to i8*, !dbg !2760
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !2760
  call void @llvm.dbg.declare(metadata %struct._object** %shape, metadata !1243, metadata !1360), !dbg !2761
  store %struct._object* null, %struct._object** %shape, align 8, !dbg !2761, !tbaa !1364
  %5 = bitcast %struct._object** %strides to i8*, !dbg !2762
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !2762
  call void @llvm.dbg.declare(metadata %struct._object** %strides, metadata !1244, metadata !1360), !dbg !2763
  store %struct._object* null, %struct._object** %strides, align 8, !dbg !2763, !tbaa !1364
  %6 = bitcast i64* %offset to i8*, !dbg !2764
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !2764
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1245, metadata !1360), !dbg !2765
  store i64 0, i64* %offset, align 8, !dbg !2765, !tbaa !1503
  %7 = bitcast %struct._object** %format to i8*, !dbg !2766
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !2766
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !1246, metadata !1360), !dbg !2767
  %8 = load %struct._object*, %struct._object** @simple_format, align 8, !dbg !2768, !tbaa !1364
  store %struct._object* %8, %struct._object** %format, align 8, !dbg !2767, !tbaa !1364
  %9 = bitcast i32* %flags to i8*, !dbg !2769
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1247, metadata !1360), !dbg !2770
  store i32 0, i32* %flags, align 4, !dbg !2770, !tbaa !1844
  %10 = bitcast i32* %getbuf to i8*, !dbg !2771
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !2771
  call void @llvm.dbg.declare(metadata i32* %getbuf, metadata !1248, metadata !1360), !dbg !2772
  store i32 65536, i32* %getbuf, align 4, !dbg !2772, !tbaa !1844
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !2773, !tbaa !1364
  %12 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !2775, !tbaa !1364
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %11, %struct._object* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i32 0, i32 0), i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @ndarray_init.kwlist, i32 0, i32 0), %struct._object** %v, %struct._object** %shape, %struct._object** %strides, i64* %offset, %struct._object** %format, i32* %flags, i32* %getbuf), !dbg !2776
  %tobool = icmp ne i32 %call, 0, !dbg !2776
  br i1 %tobool, label %if.end, label %if.then, !dbg !2777

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2778
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2778

if.end:                                           ; preds = %entry
  %13 = load %struct._object*, %struct._object** %v, align 8, !dbg !2779, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !2781
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2781, !tbaa !1374
  %tp_as_buffer = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 18, !dbg !2782
  %15 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer, align 8, !dbg !2782, !tbaa !2783
  %cmp = icmp ne %struct.PyBufferProcs* %15, null, !dbg !2784
  br i1 %cmp, label %land.lhs.true, label %if.end.24, !dbg !2785

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %v, align 8, !dbg !2786, !tbaa !1364
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !2788
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !2788, !tbaa !1374
  %tp_as_buffer2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 18, !dbg !2789
  %18 = load %struct.PyBufferProcs*, %struct.PyBufferProcs** %tp_as_buffer2, align 8, !dbg !2789, !tbaa !2783
  %bf_getbuffer = getelementptr inbounds %struct.PyBufferProcs, %struct.PyBufferProcs* %18, i32 0, i32 0, !dbg !2790
  %19 = load i32 (%struct._object*, %struct.bufferinfo*, i32)*, i32 (%struct._object*, %struct.bufferinfo*, i32)** %bf_getbuffer, align 8, !dbg !2790, !tbaa !2791
  %cmp3 = icmp ne i32 (%struct._object*, %struct.bufferinfo*, i32)* %19, null, !dbg !2793
  br i1 %cmp3, label %land.lhs.true.4, label %if.end.24, !dbg !2794

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %20 = load %struct._object*, %struct._object** %shape, align 8, !dbg !2795, !tbaa !1364
  %cmp5 = icmp eq %struct._object* %20, null, !dbg !2797
  br i1 %cmp5, label %if.then.6, label %if.end.24, !dbg !2798

if.then.6:                                        ; preds = %land.lhs.true.4
  %21 = load %struct._object*, %struct._object** %strides, align 8, !dbg !2799, !tbaa !1364
  %tobool7 = icmp ne %struct._object* %21, null, !dbg !2799
  br i1 %tobool7, label %if.then.15, label %lor.lhs.false, !dbg !2802

lor.lhs.false:                                    ; preds = %if.then.6
  %22 = load i64, i64* %offset, align 8, !dbg !2803, !tbaa !1503
  %tobool8 = icmp ne i64 %22, 0, !dbg !2803
  br i1 %tobool8, label %if.then.15, label %lor.lhs.false.9, !dbg !2805

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %23 = load %struct._object*, %struct._object** %format, align 8, !dbg !2806, !tbaa !1364
  %24 = load %struct._object*, %struct._object** @simple_format, align 8, !dbg !2808, !tbaa !1364
  %cmp10 = icmp ne %struct._object* %23, %24, !dbg !2809
  br i1 %cmp10, label %if.then.15, label %lor.lhs.false.11, !dbg !2810

lor.lhs.false.11:                                 ; preds = %lor.lhs.false.9
  %25 = load i32, i32* %flags, align 4, !dbg !2811, !tbaa !1844
  %cmp12 = icmp eq i32 %25, 0, !dbg !2812
  br i1 %cmp12, label %if.end.16, label %lor.lhs.false.13, !dbg !2813

lor.lhs.false.13:                                 ; preds = %lor.lhs.false.11
  %26 = load i32, i32* %flags, align 4, !dbg !2814, !tbaa !1844
  %cmp14 = icmp eq i32 %26, 32, !dbg !2815
  br i1 %cmp14, label %if.end.16, label %if.then.15, !dbg !2816

if.then.15:                                       ; preds = %lor.lhs.false.13, %lor.lhs.false.9, %lor.lhs.false, %if.then.6
  %27 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2817, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %27, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.129, i32 0, i32 0)), !dbg !2819
  store i32 -1, i32* %retval, !dbg !2820
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2820

if.end.16:                                        ; preds = %lor.lhs.false.13, %lor.lhs.false.11
  %28 = load i32, i32* %getbuf, align 4, !dbg !2821, !tbaa !1844
  %cmp17 = icmp eq i32 %28, 65536, !dbg !2822
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !2823

cond.true:                                        ; preds = %if.end.16
  br label %cond.end, !dbg !2824

cond.false:                                       ; preds = %if.end.16
  %29 = load i32, i32* %getbuf, align 4, !dbg !2826, !tbaa !1844
  br label %cond.end, !dbg !2823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 284, %cond.true ], [ %29, %cond.false ], !dbg !2823
  store i32 %cond, i32* %getbuf, align 4, !dbg !2828, !tbaa !1844
  %30 = load %struct._object*, %struct._object** %v, align 8, !dbg !2831, !tbaa !1364
  %31 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2833, !tbaa !1364
  %32 = load i32, i32* %getbuf, align 4, !dbg !2834, !tbaa !1844
  %call18 = call i32 @ndarray_init_staticbuf(%struct._object* %30, %struct.NDArrayObject* %31, i32 %32), !dbg !2835
  %cmp19 = icmp slt i32 %call18, 0, !dbg !2836
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !2837

if.then.20:                                       ; preds = %cond.end
  store i32 -1, i32* %retval, !dbg !2838
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2838

if.end.21:                                        ; preds = %cond.end
  %33 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2839, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %33, i32 0, i32 3, !dbg !2840
  %34 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !2840, !tbaa !2581
  call void @init_flags(%struct.ndbuf* %34), !dbg !2841
  %35 = load i32, i32* %flags, align 4, !dbg !2842, !tbaa !1844
  %36 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2843, !tbaa !1364
  %head22 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %36, i32 0, i32 3, !dbg !2844
  %37 = load %struct.ndbuf*, %struct.ndbuf** %head22, align 8, !dbg !2844, !tbaa !2581
  %flags23 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %37, i32 0, i32 5, !dbg !2845
  %38 = load i32, i32* %flags23, align 4, !dbg !2846, !tbaa !2600
  %or = or i32 %38, %35, !dbg !2846
  store i32 %or, i32* %flags23, align 4, !dbg !2846, !tbaa !2600
  store i32 0, i32* %retval, !dbg !2847
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2847

if.end.24:                                        ; preds = %land.lhs.true.4, %land.lhs.true, %if.end
  %39 = load i32, i32* %getbuf, align 4, !dbg !2848, !tbaa !1844
  %cmp25 = icmp ne i32 %39, 65536, !dbg !2850
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !2851

if.then.26:                                       ; preds = %if.end.24
  %40 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2852, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %40, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.130, i32 0, i32 0)), !dbg !2854
  store i32 -1, i32* %retval, !dbg !2855
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2855

if.end.27:                                        ; preds = %if.end.24
  %41 = load %struct._object*, %struct._object** %shape, align 8, !dbg !2856, !tbaa !1364
  %cmp28 = icmp eq %struct._object* %41, null, !dbg !2858
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !2859

if.then.29:                                       ; preds = %if.end.27
  %42 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !2860, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %42, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.131, i32 0, i32 0)), !dbg !2862
  store i32 -1, i32* %retval, !dbg !2863
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2863

if.end.30:                                        ; preds = %if.end.27
  %43 = load i32, i32* %flags, align 4, !dbg !2864, !tbaa !1844
  %and = and i32 %43, 1, !dbg !2866
  %tobool31 = icmp ne i32 %and, 0, !dbg !2866
  br i1 %tobool31, label %if.then.32, label %if.end.36, !dbg !2867

if.then.32:                                       ; preds = %if.end.30
  %44 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2868, !tbaa !1364
  %flags33 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %44, i32 0, i32 1, !dbg !2870
  %45 = load i32, i32* %flags33, align 4, !dbg !2871, !tbaa !2872
  %or34 = or i32 %45, 1, !dbg !2871
  store i32 %or34, i32* %flags33, align 4, !dbg !2871, !tbaa !2872
  %46 = load i32, i32* %flags, align 4, !dbg !2873, !tbaa !1844
  %and35 = and i32 %46, -2, !dbg !2873
  store i32 %and35, i32* %flags, align 4, !dbg !2873, !tbaa !1844
  br label %if.end.36, !dbg !2874

if.end.36:                                        ; preds = %if.then.32, %if.end.30
  %47 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2875, !tbaa !1364
  %48 = load %struct._object*, %struct._object** %v, align 8, !dbg !2876, !tbaa !1364
  %49 = load %struct._object*, %struct._object** %shape, align 8, !dbg !2877, !tbaa !1364
  %50 = load %struct._object*, %struct._object** %strides, align 8, !dbg !2878, !tbaa !1364
  %51 = load i64, i64* %offset, align 8, !dbg !2879, !tbaa !1503
  %52 = load %struct._object*, %struct._object** %format, align 8, !dbg !2880, !tbaa !1364
  %53 = load i32, i32* %flags, align 4, !dbg !2881, !tbaa !1844
  %call37 = call i32 @ndarray_push_base(%struct.NDArrayObject* %47, %struct._object* %48, %struct._object* %49, %struct._object* %50, i64 %51, %struct._object* %52, i32 %53), !dbg !2882
  store i32 %call37, i32* %retval, !dbg !2883
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2883

cleanup:                                          ; preds = %if.end.36, %if.then.29, %if.then.26, %if.end.21, %if.then.20, %if.then.15, %if.then
  %54 = bitcast i32* %getbuf to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 4, i8* %54) #1, !dbg !2884
  %55 = bitcast i32* %flags to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 4, i8* %55) #1, !dbg !2884
  %56 = bitcast %struct._object** %format to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !2884
  %57 = bitcast i64* %offset to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !2884
  %58 = bitcast %struct._object** %strides to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !2884
  %59 = bitcast %struct._object** %shape to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !2884
  %60 = bitcast %struct._object** %v to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !2884
  %61 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !2884
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !2884
  %62 = load i32, i32* %retval, !dbg !2884
  ret i32 %62, !dbg !2884
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1255, metadata !1360), !dbg !2885
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1256, metadata !1360), !dbg !2886
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1257, metadata !1360), !dbg !2887
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !2888
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2888
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1258, metadata !1360), !dbg !2889
  %call = call %struct._object* @_PyObject_New(%struct._typeobject* @NDArray_Type), !dbg !2890
  %1 = bitcast %struct._object* %call to %struct.NDArrayObject*, !dbg !2891
  store %struct.NDArrayObject* %1, %struct.NDArrayObject** %nd, align 8, !dbg !2892, !tbaa !1364
  %2 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2893, !tbaa !1364
  %cmp = icmp eq %struct.NDArrayObject* %2, null, !dbg !2895
  br i1 %cmp, label %if.then, label %if.end, !dbg !2896

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2897
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2897

if.end:                                           ; preds = %entry
  %3 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2898, !tbaa !1364
  %flags = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %3, i32 0, i32 1, !dbg !2899
  store i32 0, i32* %flags, align 4, !dbg !2900, !tbaa !2872
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2901, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 3, !dbg !2902
  store %struct.ndbuf* null, %struct.ndbuf** %head, align 8, !dbg !2903, !tbaa !2581
  %5 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !2904, !tbaa !1364
  %6 = bitcast %struct.NDArrayObject* %5 to %struct._object*, !dbg !2905
  store %struct._object* %6, %struct._object** %retval, !dbg !2906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2906

cleanup:                                          ; preds = %if.end, %if.then
  %7 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !2907
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !2907
  %8 = load %struct._object*, %struct._object** %retval, !dbg !2907
  ret %struct._object* %8, !dbg !2907
}

; Function Attrs: nounwind uwtable
define internal void @ndbuf_pop(%struct.NDArrayObject* %nd) #0 {
entry:
  %nd.addr = alloca %struct.NDArrayObject*, align 8
  store %struct.NDArrayObject* %nd, %struct.NDArrayObject** %nd.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd.addr, metadata !571, metadata !1360), !dbg !2908
  %0 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !2909, !tbaa !1364
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !2910, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !2911
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !2911, !tbaa !2581
  call void @ndbuf_delete(%struct.NDArrayObject* %0, %struct.ndbuf* %2), !dbg !2912
  ret void, !dbg !2913
}

declare void @PyObject_Free(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @ndbuf_delete(%struct.NDArrayObject* %nd, %struct.ndbuf* %elt) #0 {
entry:
  %nd.addr = alloca %struct.NDArrayObject*, align 8
  %elt.addr = alloca %struct.ndbuf*, align 8
  store %struct.NDArrayObject* %nd, %struct.NDArrayObject** %nd.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd.addr, metadata !576, metadata !1360), !dbg !2914
  store %struct.ndbuf* %elt, %struct.ndbuf** %elt.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %elt.addr, metadata !577, metadata !1360), !dbg !2915
  %0 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2916, !tbaa !1364
  %prev = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %0, i32 0, i32 1, !dbg !2918
  %1 = load %struct.ndbuf*, %struct.ndbuf** %prev, align 8, !dbg !2918, !tbaa !2919
  %tobool = icmp ne %struct.ndbuf* %1, null, !dbg !2916
  br i1 %tobool, label %if.then, label %if.else, !dbg !2920

if.then:                                          ; preds = %entry
  %2 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2921, !tbaa !1364
  %next = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 0, !dbg !2922
  %3 = load %struct.ndbuf*, %struct.ndbuf** %next, align 8, !dbg !2922, !tbaa !2923
  %4 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2924, !tbaa !1364
  %prev1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %4, i32 0, i32 1, !dbg !2925
  %5 = load %struct.ndbuf*, %struct.ndbuf** %prev1, align 8, !dbg !2925, !tbaa !2919
  %next2 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 0, !dbg !2926
  store %struct.ndbuf* %3, %struct.ndbuf** %next2, align 8, !dbg !2927, !tbaa !2923
  br label %if.end, !dbg !2924

if.else:                                          ; preds = %entry
  %6 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2928, !tbaa !1364
  %next3 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %6, i32 0, i32 0, !dbg !2929
  %7 = load %struct.ndbuf*, %struct.ndbuf** %next3, align 8, !dbg !2929, !tbaa !2923
  %8 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !2930, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %8, i32 0, i32 3, !dbg !2931
  store %struct.ndbuf* %7, %struct.ndbuf** %head, align 8, !dbg !2932, !tbaa !2581
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2933, !tbaa !1364
  %next4 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %9, i32 0, i32 0, !dbg !2935
  %10 = load %struct.ndbuf*, %struct.ndbuf** %next4, align 8, !dbg !2935, !tbaa !2923
  %tobool5 = icmp ne %struct.ndbuf* %10, null, !dbg !2933
  br i1 %tobool5, label %if.then.6, label %if.end.10, !dbg !2936

if.then.6:                                        ; preds = %if.end
  %11 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2937, !tbaa !1364
  %prev7 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %11, i32 0, i32 1, !dbg !2938
  %12 = load %struct.ndbuf*, %struct.ndbuf** %prev7, align 8, !dbg !2938, !tbaa !2919
  %13 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2939, !tbaa !1364
  %next8 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %13, i32 0, i32 0, !dbg !2940
  %14 = load %struct.ndbuf*, %struct.ndbuf** %next8, align 8, !dbg !2940, !tbaa !2923
  %prev9 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %14, i32 0, i32 1, !dbg !2941
  store %struct.ndbuf* %12, %struct.ndbuf** %prev9, align 8, !dbg !2942, !tbaa !2919
  br label %if.end.10, !dbg !2939

if.end.10:                                        ; preds = %if.then.6, %if.end
  %15 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !2943, !tbaa !1364
  call void @ndbuf_free(%struct.ndbuf* %15), !dbg !2944
  ret void, !dbg !2945
}

; Function Attrs: nounwind uwtable
define internal void @ndbuf_free(%struct.ndbuf* %ndbuf) #0 {
entry:
  %ndbuf.addr = alloca %struct.ndbuf*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.ndbuf* %ndbuf, %struct.ndbuf** %ndbuf.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf.addr, metadata !582, metadata !1360), !dbg !2946
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !2947
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2947
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !583, metadata !1360), !dbg !2948
  %1 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !2949, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %1, i32 0, i32 7, !dbg !2950
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !2948, !tbaa !1364
  br label %do.body, !dbg !2951

do.body:                                          ; preds = %entry
  %2 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !2952, !tbaa !1364
  %data = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 4, !dbg !2956
  %3 = load i8*, i8** %data, align 8, !dbg !2956, !tbaa !2957
  %tobool = icmp ne i8* %3, null, !dbg !2958
  br i1 %tobool, label %if.then, label %if.end, !dbg !2959

if.then:                                          ; preds = %do.body
  %4 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !2960, !tbaa !1364
  %data2 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %4, i32 0, i32 4, !dbg !2962
  %5 = load i8*, i8** %data2, align 8, !dbg !2962, !tbaa !2957
  call void @PyMem_Free(i8* %5), !dbg !2963
  br label %if.end, !dbg !2963

if.end:                                           ; preds = %if.then, %do.body
  br label %do.cond, !dbg !2964

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2967

do.end:                                           ; preds = %do.cond
  br label %do.body.3, !dbg !2969

do.body.3:                                        ; preds = %do.end
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2970, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 6, !dbg !2974
  %7 = load i8*, i8** %format, align 8, !dbg !2974, !tbaa !1737
  %tobool4 = icmp ne i8* %7, null, !dbg !2975
  br i1 %tobool4, label %if.then.5, label %if.end.7, !dbg !2976

if.then.5:                                        ; preds = %do.body.3
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2977, !tbaa !1364
  %format6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 6, !dbg !2979
  %9 = load i8*, i8** %format6, align 8, !dbg !2979, !tbaa !1737
  call void @PyMem_Free(i8* %9), !dbg !2980
  br label %if.end.7, !dbg !2980

if.end.7:                                         ; preds = %if.then.5, %do.body.3
  br label %do.cond.8, !dbg !2981

do.cond.8:                                        ; preds = %if.end.7
  br label %do.end.9, !dbg !2984

do.end.9:                                         ; preds = %do.cond.8
  br label %do.body.10, !dbg !2986

do.body.10:                                       ; preds = %do.end.9
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2987, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %10, i32 0, i32 7, !dbg !2991
  %11 = load i64*, i64** %shape, align 8, !dbg !2991, !tbaa !1716
  %tobool11 = icmp ne i64* %11, null, !dbg !2992
  br i1 %tobool11, label %if.then.12, label %if.end.14, !dbg !2993

if.then.12:                                       ; preds = %do.body.10
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !2994, !tbaa !1364
  %shape13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 7, !dbg !2996
  %13 = load i64*, i64** %shape13, align 8, !dbg !2996, !tbaa !1716
  %14 = bitcast i64* %13 to i8*, !dbg !2997
  call void @PyMem_Free(i8* %14), !dbg !2998
  br label %if.end.14, !dbg !2998

if.end.14:                                        ; preds = %if.then.12, %do.body.10
  br label %do.cond.15, !dbg !2999

do.cond.15:                                       ; preds = %if.end.14
  br label %do.end.16, !dbg !3002

do.end.16:                                        ; preds = %do.cond.15
  br label %do.body.17, !dbg !3004

do.body.17:                                       ; preds = %do.end.16
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3005, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 8, !dbg !3009
  %16 = load i64*, i64** %strides, align 8, !dbg !3009, !tbaa !2024
  %tobool18 = icmp ne i64* %16, null, !dbg !3010
  br i1 %tobool18, label %if.then.19, label %if.end.21, !dbg !3011

if.then.19:                                       ; preds = %do.body.17
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3012, !tbaa !1364
  %strides20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 8, !dbg !3014
  %18 = load i64*, i64** %strides20, align 8, !dbg !3014, !tbaa !2024
  %19 = bitcast i64* %18 to i8*, !dbg !3015
  call void @PyMem_Free(i8* %19), !dbg !3016
  br label %if.end.21, !dbg !3016

if.end.21:                                        ; preds = %if.then.19, %do.body.17
  br label %do.cond.22, !dbg !3017

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !3020

do.end.23:                                        ; preds = %do.cond.22
  br label %do.body.24, !dbg !3022

do.body.24:                                       ; preds = %do.end.23
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3023, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 9, !dbg !3027
  %21 = load i64*, i64** %suboffsets, align 8, !dbg !3027, !tbaa !2033
  %tobool25 = icmp ne i64* %21, null, !dbg !3028
  br i1 %tobool25, label %if.then.26, label %if.end.28, !dbg !3029

if.then.26:                                       ; preds = %do.body.24
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3030, !tbaa !1364
  %suboffsets27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 9, !dbg !3032
  %23 = load i64*, i64** %suboffsets27, align 8, !dbg !3032, !tbaa !2033
  %24 = bitcast i64* %23 to i8*, !dbg !3033
  call void @PyMem_Free(i8* %24), !dbg !3034
  br label %if.end.28, !dbg !3034

if.end.28:                                        ; preds = %if.then.26, %do.body.24
  br label %do.cond.29, !dbg !3035

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !3038

do.end.30:                                        ; preds = %do.cond.29
  %25 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3040, !tbaa !1364
  %26 = bitcast %struct.ndbuf* %25 to i8*, !dbg !3040
  call void @PyMem_Free(i8* %26), !dbg !3041
  %27 = bitcast %struct.bufferinfo** %base to i8*, !dbg !3042
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !3042
  ret void, !dbg !3042
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_item(%struct.NDArrayObject* %self, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %index.addr = alloca i64, align 8
  %ndbuf = alloca %struct.ndbuf*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %nd = alloca %struct.NDArrayObject*, align 8
  %subview = alloca %struct.bufferinfo*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !588, metadata !1360), !dbg !3043
  store i64 %index, i64* %index.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !589, metadata !1360), !dbg !3044
  %0 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !3045
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3045
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !590, metadata !1360), !dbg !3046
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3047, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !3048
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !3048, !tbaa !2581
  store %struct.ndbuf* %2, %struct.ndbuf** %ndbuf, align 8, !dbg !3046, !tbaa !1364
  %3 = bitcast %struct.bufferinfo** %base to i8*, !dbg !3049
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3049
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !591, metadata !1360), !dbg !3050
  %4 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !3051, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %4, i32 0, i32 7, !dbg !3052
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !3050, !tbaa !1364
  %5 = bitcast i8** %ptr to i8*, !dbg !3053
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3053
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !592, metadata !1360), !dbg !3054
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3055, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 5, !dbg !3057
  %7 = load i32, i32* %ndim, align 4, !dbg !3057, !tbaa !1629
  %cmp = icmp eq i32 %7, 0, !dbg !3058
  br i1 %cmp, label %if.then, label %if.end, !dbg !3059

if.then:                                          ; preds = %entry
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3060, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i32 0, i32 0)), !dbg !3062
  store %struct._object* null, %struct._object** %retval, !dbg !3063
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !3063

if.end:                                           ; preds = %entry
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3064, !tbaa !1364
  %10 = load i64, i64* %index.addr, align 8, !dbg !3065, !tbaa !1503
  %call = call i8* @ptr_from_index(%struct.bufferinfo* %9, i64 %10), !dbg !3066
  store i8* %call, i8** %ptr, align 8, !dbg !3067, !tbaa !1364
  %11 = load i8*, i8** %ptr, align 8, !dbg !3068, !tbaa !1364
  %cmp2 = icmp eq i8* %11, null, !dbg !3070
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !3071

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3072
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !3072

if.end.4:                                         ; preds = %if.end
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3073, !tbaa !1364
  %ndim5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 5, !dbg !3074
  %13 = load i32, i32* %ndim5, align 4, !dbg !3074, !tbaa !1629
  %cmp6 = icmp eq i32 %13, 1, !dbg !3075
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !3076

if.then.7:                                        ; preds = %if.end.4
  %14 = load i8*, i8** %ptr, align 8, !dbg !3077, !tbaa !1364
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3079, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 6, !dbg !3080
  %16 = load i8*, i8** %format, align 8, !dbg !3080, !tbaa !1737
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3081, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 3, !dbg !3082
  %18 = load i64, i64* %itemsize, align 8, !dbg !3082, !tbaa !1739
  %call8 = call %struct._object* @unpack_single(i8* %14, i8* %16, i64 %18), !dbg !3083
  store %struct._object* %call8, %struct._object** %retval, !dbg !3084
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !3084

if.else:                                          ; preds = %if.end.4
  %19 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !3085
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !3085
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !593, metadata !1360), !dbg !3086
  %20 = bitcast %struct.bufferinfo** %subview to i8*, !dbg !3087
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !3087
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %subview, metadata !596, metadata !1360), !dbg !3088
  %call9 = call %struct._object* @ndarray_new(%struct._typeobject* @NDArray_Type, %struct._object* null, %struct._object* null), !dbg !3089
  %21 = bitcast %struct._object* %call9 to %struct.NDArrayObject*, !dbg !3090
  store %struct.NDArrayObject* %21, %struct.NDArrayObject** %nd, align 8, !dbg !3091, !tbaa !1364
  %22 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3092, !tbaa !1364
  %cmp10 = icmp eq %struct.NDArrayObject* %22, null, !dbg !3094
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !3095

if.then.11:                                       ; preds = %if.else
  store %struct._object* null, %struct._object** %retval, !dbg !3096
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3096

if.end.12:                                        ; preds = %if.else
  %23 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3097, !tbaa !1364
  %24 = bitcast %struct.NDArrayObject* %23 to %struct._object*, !dbg !3098
  %25 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3099, !tbaa !1364
  %call13 = call i32 @ndarray_init_staticbuf(%struct._object* %24, %struct.NDArrayObject* %25, i32 284), !dbg !3100
  %cmp14 = icmp slt i32 %call13, 0, !dbg !3101
  br i1 %cmp14, label %if.then.15, label %if.end.20, !dbg !3102

if.then.15:                                       ; preds = %if.end.12
  br label %do.body, !dbg !3103

do.body:                                          ; preds = %if.then.15
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3104
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !3104
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !597, metadata !1360), !dbg !3106
  %27 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3107, !tbaa !1364
  %28 = bitcast %struct.NDArrayObject* %27 to %struct._object*, !dbg !3108
  store %struct._object* %28, %struct._object** %_py_decref_tmp, align 8, !dbg !3106, !tbaa !1364
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3109, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !3111
  %30 = load i64, i64* %ob_refcnt, align 8, !dbg !3112, !tbaa !1378
  %dec = add i64 %30, -1, !dbg !3112
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3112, !tbaa !1378
  %cmp16 = icmp ne i64 %dec, 0, !dbg !3113
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !3114

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !3115

if.else.18:                                       ; preds = %do.body
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3117, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !3119
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3119, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !3120
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3120, !tbaa !1568
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3121, !tbaa !1364
  call void %33(%struct._object* %34), !dbg !3122
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.18, %if.then.17
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3123
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !3123
  br label %do.cond, !dbg !3125

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !3126

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !3128
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3128

if.end.20:                                        ; preds = %if.end.12
  %36 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3129, !tbaa !1364
  %staticbuf = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %36, i32 0, i32 2, !dbg !3130
  %base21 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %staticbuf, i32 0, i32 7, !dbg !3131
  store %struct.bufferinfo* %base21, %struct.bufferinfo** %subview, align 8, !dbg !3132, !tbaa !1364
  %37 = load i8*, i8** %ptr, align 8, !dbg !3133, !tbaa !1364
  %38 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3134, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %38, i32 0, i32 0, !dbg !3135
  store i8* %37, i8** %buf, align 8, !dbg !3136, !tbaa !2077
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3137, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 7, !dbg !3138
  %40 = load i64*, i64** %shape, align 8, !dbg !3138, !tbaa !1716
  %arrayidx = getelementptr i64, i64* %40, i64 0, !dbg !3137
  %41 = load i64, i64* %arrayidx, align 8, !dbg !3137, !tbaa !1503
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3139, !tbaa !1364
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 2, !dbg !3140
  %43 = load i64, i64* %len, align 8, !dbg !3141, !tbaa !1860
  %div = sdiv i64 %43, %41, !dbg !3141
  store i64 %div, i64* %len, align 8, !dbg !3141, !tbaa !1860
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3142, !tbaa !1364
  %ndim22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 5, !dbg !3143
  %45 = load i32, i32* %ndim22, align 4, !dbg !3144, !tbaa !1629
  %dec23 = add i32 %45, -1, !dbg !3144
  store i32 %dec23, i32* %ndim22, align 4, !dbg !3144, !tbaa !1629
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3145, !tbaa !1364
  %shape24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 7, !dbg !3146
  %47 = load i64*, i64** %shape24, align 8, !dbg !3147, !tbaa !1716
  %incdec.ptr = getelementptr i64, i64* %47, i32 1, !dbg !3147
  store i64* %incdec.ptr, i64** %shape24, align 8, !dbg !3147, !tbaa !1716
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3148, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 8, !dbg !3150
  %49 = load i64*, i64** %strides, align 8, !dbg !3150, !tbaa !2024
  %tobool = icmp ne i64* %49, null, !dbg !3148
  br i1 %tobool, label %if.then.25, label %if.end.28, !dbg !3151

if.then.25:                                       ; preds = %if.end.20
  %50 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3152, !tbaa !1364
  %strides26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %50, i32 0, i32 8, !dbg !3154
  %51 = load i64*, i64** %strides26, align 8, !dbg !3155, !tbaa !2024
  %incdec.ptr27 = getelementptr i64, i64* %51, i32 1, !dbg !3155
  store i64* %incdec.ptr27, i64** %strides26, align 8, !dbg !3155, !tbaa !2024
  br label %if.end.28, !dbg !3156

if.end.28:                                        ; preds = %if.then.25, %if.end.20
  %52 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3157, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %52, i32 0, i32 9, !dbg !3159
  %53 = load i64*, i64** %suboffsets, align 8, !dbg !3159, !tbaa !2033
  %tobool29 = icmp ne i64* %53, null, !dbg !3157
  br i1 %tobool29, label %if.then.30, label %if.end.33, !dbg !3160

if.then.30:                                       ; preds = %if.end.28
  %54 = load %struct.bufferinfo*, %struct.bufferinfo** %subview, align 8, !dbg !3161, !tbaa !1364
  %suboffsets31 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %54, i32 0, i32 9, !dbg !3163
  %55 = load i64*, i64** %suboffsets31, align 8, !dbg !3164, !tbaa !2033
  %incdec.ptr32 = getelementptr i64, i64* %55, i32 1, !dbg !3164
  store i64* %incdec.ptr32, i64** %suboffsets31, align 8, !dbg !3164, !tbaa !2033
  br label %if.end.33, !dbg !3165

if.end.33:                                        ; preds = %if.then.30, %if.end.28
  %56 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3166, !tbaa !1364
  %staticbuf34 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %56, i32 0, i32 2, !dbg !3167
  call void @init_flags(%struct.ndbuf* %staticbuf34), !dbg !3168
  %57 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3169, !tbaa !1364
  %58 = bitcast %struct.NDArrayObject* %57 to %struct._object*, !dbg !3170
  store %struct._object* %58, %struct._object** %retval, !dbg !3171
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3171

cleanup:                                          ; preds = %if.end.33, %do.end, %if.then.11
  %59 = bitcast %struct.bufferinfo** %subview to i8*, !dbg !3172
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !3172
  %60 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !3172
  call void @llvm.lifetime.end(i64 8, i8* %60) #1, !dbg !3172
  br label %cleanup.36

cleanup.36:                                       ; preds = %cleanup, %if.then.7, %if.then.3, %if.then
  %61 = bitcast i8** %ptr to i8*, !dbg !3173
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !3173
  %62 = bitcast %struct.bufferinfo** %base to i8*, !dbg !3173
  call void @llvm.lifetime.end(i64 8, i8* %62) #1, !dbg !3173
  %63 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !3173
  call void @llvm.lifetime.end(i64 8, i8* %63) #1, !dbg !3173
  %64 = load %struct._object*, %struct._object** %retval, !dbg !3173
  ret %struct._object* %64, !dbg !3173
}

; Function Attrs: nounwind uwtable
define internal i8* @ptr_from_index(%struct.bufferinfo* %base, i64 %index) #0 {
entry:
  %retval = alloca i8*, align 8
  %base.addr = alloca %struct.bufferinfo*, align 8
  %index.addr = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %nitems = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %base, %struct.bufferinfo** %base.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base.addr, metadata !605, metadata !1360), !dbg !3174
  store i64 %index, i64* %index.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !606, metadata !1360), !dbg !3175
  %0 = bitcast i8** %ptr to i8*, !dbg !3176
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3176
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !607, metadata !1360), !dbg !3177
  %1 = bitcast i64* %nitems to i8*, !dbg !3178
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3178
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !608, metadata !1360), !dbg !3179
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3180, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %2, i32 0, i32 7, !dbg !3182
  %3 = load i64*, i64** %shape, align 8, !dbg !3182, !tbaa !1716
  %tobool = icmp ne i64* %3, null, !dbg !3180
  br i1 %tobool, label %if.then, label %if.else, !dbg !3183

if.then:                                          ; preds = %entry
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3184, !tbaa !1364
  %shape1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 7, !dbg !3185
  %5 = load i64*, i64** %shape1, align 8, !dbg !3185, !tbaa !1716
  %arrayidx = getelementptr i64, i64* %5, i64 0, !dbg !3184
  %6 = load i64, i64* %arrayidx, align 8, !dbg !3184, !tbaa !1503
  store i64 %6, i64* %nitems, align 8, !dbg !3186, !tbaa !1503
  br label %if.end, !dbg !3187

if.else:                                          ; preds = %entry
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3188, !tbaa !1364
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 2, !dbg !3190
  %8 = load i64, i64* %len, align 8, !dbg !3190, !tbaa !1860
  store i64 %8, i64* %nitems, align 8, !dbg !3191, !tbaa !1503
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i64, i64* %index.addr, align 8, !dbg !3192, !tbaa !1503
  %cmp = icmp slt i64 %9, 0, !dbg !3194
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !3195

if.then.2:                                        ; preds = %if.end
  %10 = load i64, i64* %nitems, align 8, !dbg !3196, !tbaa !1503
  %11 = load i64, i64* %index.addr, align 8, !dbg !3198, !tbaa !1503
  %add = add i64 %11, %10, !dbg !3198
  store i64 %add, i64* %index.addr, align 8, !dbg !3198, !tbaa !1503
  br label %if.end.3, !dbg !3199

if.end.3:                                         ; preds = %if.then.2, %if.end
  %12 = load i64, i64* %index.addr, align 8, !dbg !3200, !tbaa !1503
  %cmp4 = icmp slt i64 %12, 0, !dbg !3202
  br i1 %cmp4, label %if.then.6, label %lor.lhs.false, !dbg !3203

lor.lhs.false:                                    ; preds = %if.end.3
  %13 = load i64, i64* %index.addr, align 8, !dbg !3204, !tbaa !1503
  %14 = load i64, i64* %nitems, align 8, !dbg !3206, !tbaa !1503
  %cmp5 = icmp sge i64 %13, %14, !dbg !3207
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !3208

if.then.6:                                        ; preds = %lor.lhs.false, %if.end.3
  %15 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !3209, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i32 0, i32 0)), !dbg !3211
  store i8* null, i8** %retval, !dbg !3212
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3212

if.end.7:                                         ; preds = %lor.lhs.false
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3213, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !3214
  %17 = load i8*, i8** %buf, align 8, !dbg !3214, !tbaa !2077
  store i8* %17, i8** %ptr, align 8, !dbg !3215, !tbaa !1364
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3216, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 8, !dbg !3218
  %19 = load i64*, i64** %strides, align 8, !dbg !3218, !tbaa !2024
  %cmp8 = icmp eq i64* %19, null, !dbg !3219
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !3220

if.then.9:                                        ; preds = %if.end.7
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3221, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 3, !dbg !3222
  %21 = load i64, i64* %itemsize, align 8, !dbg !3222, !tbaa !1739
  %22 = load i64, i64* %index.addr, align 8, !dbg !3223, !tbaa !1503
  %mul = mul i64 %21, %22, !dbg !3224
  %23 = load i8*, i8** %ptr, align 8, !dbg !3225, !tbaa !1364
  %add.ptr = getelementptr i8, i8* %23, i64 %mul, !dbg !3225
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !3225, !tbaa !1364
  br label %if.end.15, !dbg !3226

if.else.10:                                       ; preds = %if.end.7
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3227, !tbaa !1364
  %strides11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 8, !dbg !3228
  %25 = load i64*, i64** %strides11, align 8, !dbg !3228, !tbaa !2024
  %arrayidx12 = getelementptr i64, i64* %25, i64 0, !dbg !3227
  %26 = load i64, i64* %arrayidx12, align 8, !dbg !3227, !tbaa !1503
  %27 = load i64, i64* %index.addr, align 8, !dbg !3229, !tbaa !1503
  %mul13 = mul i64 %26, %27, !dbg !3230
  %28 = load i8*, i8** %ptr, align 8, !dbg !3231, !tbaa !1364
  %add.ptr14 = getelementptr i8, i8* %28, i64 %mul13, !dbg !3231
  store i8* %add.ptr14, i8** %ptr, align 8, !dbg !3231, !tbaa !1364
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.10, %if.then.9
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3232, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 9, !dbg !3233
  %30 = load i64*, i64** %suboffsets, align 8, !dbg !3233, !tbaa !2033
  %tobool16 = icmp ne i64* %30, null, !dbg !3232
  br i1 %tobool16, label %land.lhs.true, label %cond.false, !dbg !3234

land.lhs.true:                                    ; preds = %if.end.15
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3235, !tbaa !1364
  %suboffsets17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 9, !dbg !3237
  %32 = load i64*, i64** %suboffsets17, align 8, !dbg !3237, !tbaa !2033
  %arrayidx18 = getelementptr i64, i64* %32, i64 0, !dbg !3238
  %33 = load i64, i64* %arrayidx18, align 8, !dbg !3238, !tbaa !1503
  %cmp19 = icmp sge i64 %33, 0, !dbg !3239
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !3240

cond.true:                                        ; preds = %land.lhs.true
  %34 = load i8*, i8** %ptr, align 8, !dbg !3241, !tbaa !1364
  %35 = bitcast i8* %34 to i8**, !dbg !3243
  %36 = load i8*, i8** %35, align 8, !dbg !3244, !tbaa !1364
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3245, !tbaa !1364
  %suboffsets20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 9, !dbg !3246
  %38 = load i64*, i64** %suboffsets20, align 8, !dbg !3246, !tbaa !2033
  %arrayidx21 = getelementptr i64, i64* %38, i64 0, !dbg !3245
  %39 = load i64, i64* %arrayidx21, align 8, !dbg !3245, !tbaa !1503
  %add.ptr22 = getelementptr i8, i8* %36, i64 %39, !dbg !3247
  br label %cond.end, !dbg !3240

cond.false:                                       ; preds = %land.lhs.true, %if.end.15
  %40 = load i8*, i8** %ptr, align 8, !dbg !3248, !tbaa !1364
  br label %cond.end, !dbg !3240

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr22, %cond.true ], [ %40, %cond.false ], !dbg !3240
  store i8* %cond, i8** %ptr, align 8, !dbg !3251, !tbaa !1364
  %41 = load i8*, i8** %ptr, align 8, !dbg !3254, !tbaa !1364
  store i8* %41, i8** %retval, !dbg !3255
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3255

cleanup:                                          ; preds = %cond.end, %if.then.6
  %42 = bitcast i64* %nitems to i8*, !dbg !3256
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !3256
  %43 = bitcast i8** %ptr to i8*, !dbg !3256
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !3256
  %44 = load i8*, i8** %retval, !dbg !3256
  ret i8* %44, !dbg !3256
}

; Function Attrs: nounwind uwtable
define internal i32 @ndarray_init_staticbuf(%struct._object* %exporter, %struct.NDArrayObject* %nd, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %exporter.addr = alloca %struct._object*, align 8
  %nd.addr = alloca %struct.NDArrayObject*, align 8
  %flags.addr = alloca i32, align 4
  %base = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %exporter, %struct._object** %exporter.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %exporter.addr, metadata !613, metadata !1360), !dbg !3257
  store %struct.NDArrayObject* %nd, %struct.NDArrayObject** %nd.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd.addr, metadata !614, metadata !1360), !dbg !3258
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !615, metadata !1360), !dbg !3259
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !3260
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3260
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !616, metadata !1360), !dbg !3261
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3262, !tbaa !1364
  %staticbuf = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 2, !dbg !3263
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %staticbuf, i32 0, i32 7, !dbg !3264
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !3261, !tbaa !1364
  %2 = load %struct._object*, %struct._object** %exporter.addr, align 8, !dbg !3265, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3267, !tbaa !1364
  %4 = load i32, i32* %flags.addr, align 4, !dbg !3268, !tbaa !1844
  %call = call i32 @PyObject_GetBuffer(%struct._object* %2, %struct.bufferinfo* %3, i32 %4), !dbg !3269
  %cmp = icmp slt i32 %call, 0, !dbg !3270
  br i1 %cmp, label %if.then, label %if.end, !dbg !3271

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3272
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3272

if.end:                                           ; preds = %entry
  %5 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3273, !tbaa !1364
  %staticbuf2 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %5, i32 0, i32 2, !dbg !3274
  %6 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3275, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %6, i32 0, i32 3, !dbg !3276
  store %struct.ndbuf* %staticbuf2, %struct.ndbuf** %head, align 8, !dbg !3277, !tbaa !2581
  %7 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3278, !tbaa !1364
  %head3 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %7, i32 0, i32 3, !dbg !3279
  %8 = load %struct.ndbuf*, %struct.ndbuf** %head3, align 8, !dbg !3279, !tbaa !2581
  %next = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %8, i32 0, i32 0, !dbg !3280
  store %struct.ndbuf* null, %struct.ndbuf** %next, align 8, !dbg !3281, !tbaa !2923
  %9 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3282, !tbaa !1364
  %head4 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %9, i32 0, i32 3, !dbg !3283
  %10 = load %struct.ndbuf*, %struct.ndbuf** %head4, align 8, !dbg !3283, !tbaa !2581
  %prev = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %10, i32 0, i32 1, !dbg !3284
  store %struct.ndbuf* null, %struct.ndbuf** %prev, align 8, !dbg !3285, !tbaa !2919
  %11 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3286, !tbaa !1364
  %head5 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %11, i32 0, i32 3, !dbg !3287
  %12 = load %struct.ndbuf*, %struct.ndbuf** %head5, align 8, !dbg !3287, !tbaa !2581
  %len = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %12, i32 0, i32 2, !dbg !3288
  store i64 -1, i64* %len, align 8, !dbg !3289, !tbaa !3290
  %13 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3291, !tbaa !1364
  %head6 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %13, i32 0, i32 3, !dbg !3292
  %14 = load %struct.ndbuf*, %struct.ndbuf** %head6, align 8, !dbg !3292, !tbaa !2581
  %offset = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %14, i32 0, i32 3, !dbg !3293
  store i64 -1, i64* %offset, align 8, !dbg !3294, !tbaa !3295
  %15 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3296, !tbaa !1364
  %head7 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %15, i32 0, i32 3, !dbg !3297
  %16 = load %struct.ndbuf*, %struct.ndbuf** %head7, align 8, !dbg !3297, !tbaa !2581
  %data = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %16, i32 0, i32 4, !dbg !3298
  store i8* null, i8** %data, align 8, !dbg !3299, !tbaa !2957
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3300, !tbaa !1364
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 4, !dbg !3301
  %18 = load i32, i32* %readonly, align 4, !dbg !3301, !tbaa !2692
  %tobool = icmp ne i32 %18, 0, !dbg !3300
  %cond = select i1 %tobool, i32 0, i32 2, !dbg !3300
  %19 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3302, !tbaa !1364
  %head8 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %19, i32 0, i32 3, !dbg !3303
  %20 = load %struct.ndbuf*, %struct.ndbuf** %head8, align 8, !dbg !3303, !tbaa !2581
  %flags9 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %20, i32 0, i32 5, !dbg !3304
  store i32 %cond, i32* %flags9, align 4, !dbg !3305, !tbaa !2600
  %21 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !3306, !tbaa !1364
  %head10 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %21, i32 0, i32 3, !dbg !3307
  %22 = load %struct.ndbuf*, %struct.ndbuf** %head10, align 8, !dbg !3307, !tbaa !2581
  %exports = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %22, i32 0, i32 6, !dbg !3308
  store i64 0, i64* %exports, align 8, !dbg !3309, !tbaa !3310
  store i32 0, i32* %retval, !dbg !3311
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3311

cleanup:                                          ; preds = %if.end, %if.then
  %23 = bitcast %struct.bufferinfo** %base to i8*, !dbg !3312
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !3312
  %24 = load i32, i32* %retval, !dbg !3312
  ret i32 %24, !dbg !3312
}

; Function Attrs: nounwind uwtable
define internal void @init_flags(%struct.ndbuf* %ndbuf) #0 {
entry:
  %ndbuf.addr = alloca %struct.ndbuf*, align 8
  store %struct.ndbuf* %ndbuf, %struct.ndbuf** %ndbuf.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf.addr, metadata !619, metadata !1360), !dbg !3313
  %0 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3314, !tbaa !1364
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %0, i32 0, i32 7, !dbg !3316
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %base, i32 0, i32 5, !dbg !3317
  %1 = load i32, i32* %ndim, align 4, !dbg !3317, !tbaa !3318
  %cmp = icmp eq i32 %1, 0, !dbg !3319
  br i1 %cmp, label %if.then, label %if.end, !dbg !3320

if.then:                                          ; preds = %entry
  %2 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3321, !tbaa !1364
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 5, !dbg !3322
  %3 = load i32, i32* %flags, align 4, !dbg !3323, !tbaa !2600
  %or = or i32 %3, 8, !dbg !3323
  store i32 %or, i32* %flags, align 4, !dbg !3323, !tbaa !2600
  br label %if.end, !dbg !3321

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3324, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %4, i32 0, i32 7, !dbg !3326
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %base1, i32 0, i32 9, !dbg !3327
  %5 = load i64*, i64** %suboffsets, align 8, !dbg !3327, !tbaa !3328
  %tobool = icmp ne i64* %5, null, !dbg !3324
  br i1 %tobool, label %if.then.2, label %if.end.5, !dbg !3329

if.then.2:                                        ; preds = %if.end
  %6 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3330, !tbaa !1364
  %flags3 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %6, i32 0, i32 5, !dbg !3331
  %7 = load i32, i32* %flags3, align 4, !dbg !3332, !tbaa !2600
  %or4 = or i32 %7, 16, !dbg !3332
  store i32 %or4, i32* %flags3, align 4, !dbg !3332, !tbaa !2600
  br label %if.end.5, !dbg !3330

if.end.5:                                         ; preds = %if.then.2, %if.end
  %8 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3333, !tbaa !1364
  %base6 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %8, i32 0, i32 7, !dbg !3335
  %call = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %base6, i8 signext 67), !dbg !3336
  %tobool7 = icmp ne i32 %call, 0, !dbg !3336
  br i1 %tobool7, label %if.then.8, label %if.end.11, !dbg !3337

if.then.8:                                        ; preds = %if.end.5
  %9 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3338, !tbaa !1364
  %flags9 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %9, i32 0, i32 5, !dbg !3339
  %10 = load i32, i32* %flags9, align 4, !dbg !3340, !tbaa !2600
  %or10 = or i32 %10, 256, !dbg !3340
  store i32 %or10, i32* %flags9, align 4, !dbg !3340, !tbaa !2600
  br label %if.end.11, !dbg !3338

if.end.11:                                        ; preds = %if.then.8, %if.end.5
  %11 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3341, !tbaa !1364
  %base12 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %11, i32 0, i32 7, !dbg !3343
  %call13 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %base12, i8 signext 70), !dbg !3344
  %tobool14 = icmp ne i32 %call13, 0, !dbg !3344
  br i1 %tobool14, label %if.then.15, label %if.end.18, !dbg !3345

if.then.15:                                       ; preds = %if.end.11
  %12 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !3346, !tbaa !1364
  %flags16 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %12, i32 0, i32 5, !dbg !3347
  %13 = load i32, i32* %flags16, align 4, !dbg !3348, !tbaa !2600
  %or17 = or i32 %13, 4, !dbg !3348
  store i32 %or17, i32* %flags16, align 4, !dbg !3348, !tbaa !2600
  br label %if.end.18, !dbg !3346

if.end.18:                                        ; preds = %if.then.15, %if.end.11
  ret void, !dbg !3349
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_subscript(%struct.NDArrayObject* %self, %struct._object* %key) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %key.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %ndbuf = alloca %struct.ndbuf*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  %index = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %_py_decref_tmp89 = alloca %struct._object*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !624, metadata !1360), !dbg !3350
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !625, metadata !1360), !dbg !3351
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !3352
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3352
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !626, metadata !1360), !dbg !3353
  %1 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !3354
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3354
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !627, metadata !1360), !dbg !3355
  %2 = bitcast %struct.bufferinfo** %base to i8*, !dbg !3356
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3356
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !628, metadata !1360), !dbg !3357
  %3 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3358, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %3, i32 0, i32 3, !dbg !3359
  %4 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !3359, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %4, i32 0, i32 7, !dbg !3360
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !3357, !tbaa !1364
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3361, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !3363
  %6 = load i32, i32* %ndim, align 4, !dbg !3363, !tbaa !1629
  %cmp = icmp eq i32 %6, 0, !dbg !3364
  br i1 %cmp, label %if.then, label %if.end, !dbg !3365

if.then:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3366, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !3369
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3369, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !3370
  %9 = load i64, i64* %tp_flags, align 8, !dbg !3370, !tbaa !1605
  %and = and i64 %9, 67108864, !dbg !3371
  %cmp2 = icmp ne i64 %and, 0, !dbg !3372
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !3373

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3374, !tbaa !1364
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !3376
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !3377
  %12 = load i64, i64* %ob_size, align 8, !dbg !3377, !tbaa !1648
  %cmp3 = icmp eq i64 %12, 0, !dbg !3378
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !3379

if.then.4:                                        ; preds = %land.lhs.true
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3380, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 0, !dbg !3382
  %14 = load i8*, i8** %buf, align 8, !dbg !3382, !tbaa !2077
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3383, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 6, !dbg !3384
  %16 = load i8*, i8** %format, align 8, !dbg !3384, !tbaa !1737
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3385, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 3, !dbg !3386
  %18 = load i64, i64* %itemsize, align 8, !dbg !3386, !tbaa !1739
  %call = call %struct._object* @unpack_single(i8* %14, i8* %16, i64 %18), !dbg !3387
  store %struct._object* %call, %struct._object** %retval, !dbg !3388
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3388

if.else:                                          ; preds = %land.lhs.true, %if.then
  %19 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3389, !tbaa !1364
  %cmp5 = icmp eq %struct._object* %19, @_Py_EllipsisObject, !dbg !3391
  br i1 %cmp5, label %if.then.6, label %if.else.7, !dbg !3392

if.then.6:                                        ; preds = %if.else
  %20 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3393, !tbaa !1364
  %21 = bitcast %struct.NDArrayObject* %20 to %struct._object*, !dbg !3395
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !3396
  %22 = load i64, i64* %ob_refcnt, align 8, !dbg !3397, !tbaa !1378
  %inc = add i64 %22, 1, !dbg !3397
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !3397, !tbaa !1378
  %23 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3398, !tbaa !1364
  %24 = bitcast %struct.NDArrayObject* %23 to %struct._object*, !dbg !3399
  store %struct._object* %24, %struct._object** %retval, !dbg !3400
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3400

if.else.7:                                        ; preds = %if.else
  %25 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3401, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i32 0, i32 0)), !dbg !3403
  store %struct._object* null, %struct._object** %retval, !dbg !3404
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3404

if.end:                                           ; preds = %entry
  %26 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3405, !tbaa !1364
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !3406
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !3406, !tbaa !1374
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 10, !dbg !3407
  %28 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !3407, !tbaa !3408
  %cmp9 = icmp ne %struct.PyNumberMethods* %28, null, !dbg !3409
  br i1 %cmp9, label %land.lhs.true.10, label %if.end.22, !dbg !3410

land.lhs.true.10:                                 ; preds = %if.end
  %29 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3411, !tbaa !1364
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !3413
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !3413, !tbaa !1374
  %tp_as_number12 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 10, !dbg !3414
  %31 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number12, align 8, !dbg !3414, !tbaa !3408
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %31, i32 0, i32 33, !dbg !3415
  %32 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !3415, !tbaa !3416
  %cmp13 = icmp ne %struct._object* (%struct._object*)* %32, null, !dbg !3418
  br i1 %cmp13, label %if.then.14, label %if.end.22, !dbg !3419

if.then.14:                                       ; preds = %land.lhs.true.10
  %33 = bitcast i64* %index to i8*, !dbg !3420
  call void @llvm.lifetime.start(i64 8, i8* %33) #1, !dbg !3420
  call void @llvm.dbg.declare(metadata i64* %index, metadata !629, metadata !1360), !dbg !3421
  %34 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3422, !tbaa !1364
  %call15 = call i64 @PyLong_AsSsize_t(%struct._object* %34), !dbg !3423
  store i64 %call15, i64* %index, align 8, !dbg !3421, !tbaa !1503
  %35 = load i64, i64* %index, align 8, !dbg !3424, !tbaa !1503
  %cmp16 = icmp eq i64 %35, -1, !dbg !3426
  br i1 %cmp16, label %land.lhs.true.17, label %if.end.20, !dbg !3427

land.lhs.true.17:                                 ; preds = %if.then.14
  %call18 = call %struct._object* @PyErr_Occurred(), !dbg !3428
  %tobool = icmp ne %struct._object* %call18, null, !dbg !3428
  br i1 %tobool, label %if.then.19, label %if.end.20, !dbg !3430

if.then.19:                                       ; preds = %land.lhs.true.17
  store %struct._object* null, %struct._object** %retval, !dbg !3431
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3431

if.end.20:                                        ; preds = %land.lhs.true.17, %if.then.14
  %36 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3432, !tbaa !1364
  %37 = load i64, i64* %index, align 8, !dbg !3433, !tbaa !1503
  %call21 = call %struct._object* @ndarray_item(%struct.NDArrayObject* %36, i64 %37), !dbg !3434
  store %struct._object* %call21, %struct._object** %retval, !dbg !3435
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3435

cleanup:                                          ; preds = %if.end.20, %if.then.19
  %38 = bitcast i64* %index to i8*, !dbg !3436
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !3436
  br label %cleanup.101

if.end.22:                                        ; preds = %land.lhs.true.10, %if.end
  %call23 = call %struct._object* @ndarray_new(%struct._typeobject* @NDArray_Type, %struct._object* null, %struct._object* null), !dbg !3437
  %39 = bitcast %struct._object* %call23 to %struct.NDArrayObject*, !dbg !3438
  store %struct.NDArrayObject* %39, %struct.NDArrayObject** %nd, align 8, !dbg !3439, !tbaa !1364
  %40 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3440, !tbaa !1364
  %cmp24 = icmp eq %struct.NDArrayObject* %40, null, !dbg !3442
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !3443

if.then.25:                                       ; preds = %if.end.22
  store %struct._object* null, %struct._object** %retval, !dbg !3444
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3444

if.end.26:                                        ; preds = %if.end.22
  %41 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3445, !tbaa !1364
  %42 = bitcast %struct.NDArrayObject* %41 to %struct._object*, !dbg !3446
  %43 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3447, !tbaa !1364
  %call27 = call i32 @ndarray_init_staticbuf(%struct._object* %42, %struct.NDArrayObject* %43, i32 284), !dbg !3448
  %cmp28 = icmp slt i32 %call27, 0, !dbg !3449
  br i1 %cmp28, label %if.then.29, label %if.end.36, !dbg !3450

if.then.29:                                       ; preds = %if.end.26
  br label %do.body, !dbg !3451

do.body:                                          ; preds = %if.then.29
  %44 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3452
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !3452
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !632, metadata !1360), !dbg !3454
  %45 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3455, !tbaa !1364
  %46 = bitcast %struct.NDArrayObject* %45 to %struct._object*, !dbg !3456
  store %struct._object* %46, %struct._object** %_py_decref_tmp, align 8, !dbg !3454, !tbaa !1364
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3457, !tbaa !1364
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !3459
  %48 = load i64, i64* %ob_refcnt30, align 8, !dbg !3460, !tbaa !1378
  %dec = add i64 %48, -1, !dbg !3460
  store i64 %dec, i64* %ob_refcnt30, align 8, !dbg !3460, !tbaa !1378
  %cmp31 = icmp ne i64 %dec, 0, !dbg !3461
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !3462

if.then.32:                                       ; preds = %do.body
  br label %if.end.35, !dbg !3463

if.else.33:                                       ; preds = %do.body
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3465, !tbaa !1364
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !3467
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !3467, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4, !dbg !3468
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3468, !tbaa !1568
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3469, !tbaa !1364
  call void %51(%struct._object* %52), !dbg !3470
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.33, %if.then.32
  %53 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3471
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !3471
  br label %do.cond, !dbg !3473

do.cond:                                          ; preds = %if.end.35
  br label %do.end, !dbg !3474

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !3476
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3476

if.end.36:                                        ; preds = %if.end.26
  %54 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3477, !tbaa !1364
  %head37 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %54, i32 0, i32 3, !dbg !3478
  %55 = load %struct.ndbuf*, %struct.ndbuf** %head37, align 8, !dbg !3478, !tbaa !2581
  store %struct.ndbuf* %55, %struct.ndbuf** %ndbuf, align 8, !dbg !3479, !tbaa !1364
  %56 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !3480, !tbaa !1364
  %base38 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %56, i32 0, i32 7, !dbg !3481
  store %struct.bufferinfo* %base38, %struct.bufferinfo** %base, align 8, !dbg !3482, !tbaa !1364
  %57 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3483, !tbaa !1364
  %call39 = call i32 @copy_structure(%struct.bufferinfo* %57), !dbg !3484
  %cmp40 = icmp slt i32 %call39, 0, !dbg !3485
  br i1 %cmp40, label %if.then.41, label %if.end.54, !dbg !3486

if.then.41:                                       ; preds = %if.end.36
  br label %do.body.42, !dbg !3487

do.body.42:                                       ; preds = %if.then.41
  %58 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !3488
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !3488
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp43, metadata !636, metadata !1360), !dbg !3490
  %59 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3491, !tbaa !1364
  %60 = bitcast %struct.NDArrayObject* %59 to %struct._object*, !dbg !3492
  store %struct._object* %60, %struct._object** %_py_decref_tmp43, align 8, !dbg !3490, !tbaa !1364
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !3493, !tbaa !1364
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !3495
  %62 = load i64, i64* %ob_refcnt44, align 8, !dbg !3496, !tbaa !1378
  %dec45 = add i64 %62, -1, !dbg !3496
  store i64 %dec45, i64* %ob_refcnt44, align 8, !dbg !3496, !tbaa !1378
  %cmp46 = icmp ne i64 %dec45, 0, !dbg !3497
  br i1 %cmp46, label %if.then.47, label %if.else.48, !dbg !3498

if.then.47:                                       ; preds = %do.body.42
  br label %if.end.51, !dbg !3499

if.else.48:                                       ; preds = %do.body.42
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !3501, !tbaa !1364
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !3503
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8, !dbg !3503, !tbaa !1374
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !3504
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8, !dbg !3504, !tbaa !1568
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !3505, !tbaa !1364
  call void %65(%struct._object* %66), !dbg !3506
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  %67 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !3507
  call void @llvm.lifetime.end(i64 8, i8* %67) #1, !dbg !3507
  br label %do.cond.52, !dbg !3509

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !3510

do.end.53:                                        ; preds = %do.cond.52
  store %struct._object* null, %struct._object** %retval, !dbg !3512
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3512

if.end.54:                                        ; preds = %if.end.36
  %68 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !3513, !tbaa !1364
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %68, i32 0, i32 5, !dbg !3514
  %69 = load i32, i32* %flags, align 4, !dbg !3515, !tbaa !2600
  %or = or i32 %69, 512, !dbg !3515
  store i32 %or, i32* %flags, align 4, !dbg !3515, !tbaa !2600
  %70 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3516, !tbaa !1364
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !3517
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !3517, !tbaa !1374
  %cmp56 = icmp eq %struct._typeobject* %71, @PySlice_Type, !dbg !3518
  br i1 %cmp56, label %if.then.57, label %if.else.62, !dbg !3519

if.then.57:                                       ; preds = %if.end.54
  %72 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3520, !tbaa !1364
  %73 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3523, !tbaa !1364
  %call58 = call i32 @init_slice(%struct.bufferinfo* %72, %struct._object* %73, i32 0), !dbg !3524
  %cmp59 = icmp slt i32 %call58, 0, !dbg !3525
  br i1 %cmp59, label %if.then.60, label %if.end.61, !dbg !3526

if.then.60:                                       ; preds = %if.then.57
  br label %err_occurred, !dbg !3527

if.end.61:                                        ; preds = %if.then.57
  br label %if.end.85, !dbg !3528

if.else.62:                                       ; preds = %if.end.54
  %74 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3529, !tbaa !1364
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !3530
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !3530, !tbaa !1374
  %tp_flags64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 19, !dbg !3531
  %76 = load i64, i64* %tp_flags64, align 8, !dbg !3531, !tbaa !1605
  %and65 = and i64 %76, 67108864, !dbg !3532
  %cmp66 = icmp ne i64 %and65, 0, !dbg !3533
  br i1 %cmp66, label %if.then.67, label %if.else.83, !dbg !3534

if.then.67:                                       ; preds = %if.else.62
  %77 = bitcast %struct._object** %tuple to i8*, !dbg !3535
  call void @llvm.lifetime.start(i64 8, i8* %77) #1, !dbg !3535
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !640, metadata !1360), !dbg !3536
  %78 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3537, !tbaa !1364
  store %struct._object* %78, %struct._object** %tuple, align 8, !dbg !3536, !tbaa !1364
  %79 = bitcast i64* %i to i8*, !dbg !3538
  call void @llvm.lifetime.start(i64 8, i8* %79) #1, !dbg !3538
  call void @llvm.dbg.declare(metadata i64* %i, metadata !644, metadata !1360), !dbg !3539
  %80 = bitcast i64* %n to i8*, !dbg !3538
  call void @llvm.lifetime.start(i64 8, i8* %80) #1, !dbg !3538
  call void @llvm.dbg.declare(metadata i64* %n, metadata !645, metadata !1360), !dbg !3540
  %81 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3541, !tbaa !1364
  %82 = bitcast %struct._object* %81 to %struct.PyVarObject*, !dbg !3542
  %ob_size68 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %82, i32 0, i32 1, !dbg !3543
  %83 = load i64, i64* %ob_size68, align 8, !dbg !3543, !tbaa !1648
  store i64 %83, i64* %n, align 8, !dbg !3544, !tbaa !1503
  store i64 0, i64* %i, align 8, !dbg !3545, !tbaa !1503
  br label %for.cond, !dbg !3547

for.cond:                                         ; preds = %for.inc, %if.then.67
  %84 = load i64, i64* %i, align 8, !dbg !3548, !tbaa !1503
  %85 = load i64, i64* %n, align 8, !dbg !3552, !tbaa !1503
  %cmp69 = icmp slt i64 %84, %85, !dbg !3553
  br i1 %cmp69, label %for.body, label %for.end, !dbg !3554

for.body:                                         ; preds = %for.cond
  %86 = load i64, i64* %i, align 8, !dbg !3555, !tbaa !1503
  %87 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3557, !tbaa !1364
  %88 = bitcast %struct._object* %87 to %struct.PyTupleObject*, !dbg !3558
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %88, i32 0, i32 1, !dbg !3559
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %86, !dbg !3560
  %89 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !3560, !tbaa !1364
  store %struct._object* %89, %struct._object** %key.addr, align 8, !dbg !3561, !tbaa !1364
  %90 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3562, !tbaa !1364
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1, !dbg !3564
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !3564, !tbaa !1374
  %cmp71 = icmp eq %struct._typeobject* %91, @PySlice_Type, !dbg !3565
  br i1 %cmp71, label %if.end.73, label %if.then.72, !dbg !3566

if.then.72:                                       ; preds = %for.body
  store i32 10, i32* %cleanup.dest.slot
  br label %cleanup.80, !dbg !3567

if.end.73:                                        ; preds = %for.body
  %92 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3568, !tbaa !1364
  %93 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3570, !tbaa !1364
  %94 = load i64, i64* %i, align 8, !dbg !3571, !tbaa !1503
  %conv = trunc i64 %94 to i32, !dbg !3572
  %call74 = call i32 @init_slice(%struct.bufferinfo* %92, %struct._object* %93, i32 %conv), !dbg !3573
  %cmp75 = icmp slt i32 %call74, 0, !dbg !3574
  br i1 %cmp75, label %if.then.77, label %if.end.78, !dbg !3575

if.then.77:                                       ; preds = %if.end.73
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup.80, !dbg !3576

if.end.78:                                        ; preds = %if.end.73
  br label %for.inc, !dbg !3577

for.inc:                                          ; preds = %if.end.78
  %95 = load i64, i64* %i, align 8, !dbg !3578, !tbaa !1503
  %inc79 = add i64 %95, 1, !dbg !3578
  store i64 %inc79, i64* %i, align 8, !dbg !3578, !tbaa !1503
  br label %for.cond, !dbg !3579

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !3580
  br label %cleanup.80, !dbg !3580

cleanup.80:                                       ; preds = %for.end, %if.then.77, %if.then.72
  %96 = bitcast i64* %n to i8*, !dbg !3581
  call void @llvm.lifetime.end(i64 8, i8* %96) #1, !dbg !3581
  %97 = bitcast i64* %i to i8*, !dbg !3581
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !3581
  %98 = bitcast %struct._object** %tuple to i8*, !dbg !3581
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !3581
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.5

NodeBlock.5:                                      ; preds = %cleanup.80
  %Pivot.6 = icmp slt i32 %cleanup.dest, 6
  br i1 %Pivot.6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.5
  %Pivot = icmp slt i32 %cleanup.dest, 10
  br i1 %Pivot, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %cleanup.dest, 10
  br i1 %SwitchLeaf4, label %type_error, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 6
  br i1 %SwitchLeaf2, label %err_occurred, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.5
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.84, !dbg !3583

if.else.83:                                       ; preds = %if.else.62
  br label %type_error, !dbg !3584

if.end.84:                                        ; preds = %cleanup.cont
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %if.end.61
  %99 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !3586, !tbaa !1364
  call void @init_len(%struct.bufferinfo* %99), !dbg !3587
  %100 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !3588, !tbaa !1364
  call void @init_flags(%struct.ndbuf* %100), !dbg !3589
  %101 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3590, !tbaa !1364
  %102 = bitcast %struct.NDArrayObject* %101 to %struct._object*, !dbg !3591
  store %struct._object* %102, %struct._object** %retval, !dbg !3592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3592

type_error:                                       ; preds = %LeafBlock.3, %if.else.83
  %103 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3593, !tbaa !1364
  %104 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3594, !tbaa !1364
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !3595
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !3595, !tbaa !1374
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 1, !dbg !3596
  %106 = load i8*, i8** %tp_name, align 8, !dbg !3596, !tbaa !3597
  %call87 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %103, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.62, i32 0, i32 0), i8* %106), !dbg !3598
  br label %err_occurred, !dbg !3598

err_occurred:                                     ; preds = %LeafBlock.1, %type_error, %if.then.60
  br label %do.body.88, !dbg !3599

do.body.88:                                       ; preds = %err_occurred
  %107 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !3600
  call void @llvm.lifetime.start(i64 8, i8* %107) #1, !dbg !3600
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp89, metadata !646, metadata !1360), !dbg !3602
  %108 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3603, !tbaa !1364
  %109 = bitcast %struct.NDArrayObject* %108 to %struct._object*, !dbg !3604
  store %struct._object* %109, %struct._object** %_py_decref_tmp89, align 8, !dbg !3602, !tbaa !1364
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !3605, !tbaa !1364
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 0, !dbg !3607
  %111 = load i64, i64* %ob_refcnt90, align 8, !dbg !3608, !tbaa !1378
  %dec91 = add i64 %111, -1, !dbg !3608
  store i64 %dec91, i64* %ob_refcnt90, align 8, !dbg !3608, !tbaa !1378
  %cmp92 = icmp ne i64 %dec91, 0, !dbg !3609
  br i1 %cmp92, label %if.then.94, label %if.else.95, !dbg !3610

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98, !dbg !3611

if.else.95:                                       ; preds = %do.body.88
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !3613, !tbaa !1364
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 1, !dbg !3615
  %113 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8, !dbg !3615, !tbaa !1374
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %113, i32 0, i32 4, !dbg !3616
  %114 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8, !dbg !3616, !tbaa !1568
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !3617, !tbaa !1364
  call void %114(%struct._object* %115), !dbg !3618
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  %116 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !3619
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !3619
  br label %do.cond.99, !dbg !3621

do.cond.99:                                       ; preds = %if.end.98
  br label %do.end.100, !dbg !3622

do.end.100:                                       ; preds = %do.cond.99
  store %struct._object* null, %struct._object** %retval, !dbg !3624
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !3624

NewDefault:                                       ; preds = %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %cleanup.101

cleanup.101:                                      ; preds = %NewDefault, %do.end.100, %if.end.85, %do.end.53, %do.end, %if.then.25, %cleanup, %if.else.7, %if.then.6, %if.then.4
  %117 = bitcast %struct.bufferinfo** %base to i8*, !dbg !3625
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !3625
  %118 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !3625
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !3625
  %119 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !3625
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !3625
  %120 = load %struct._object*, %struct._object** %retval, !dbg !3625
  ret %struct._object* %120, !dbg !3625
}

; Function Attrs: nounwind uwtable
define internal i32 @ndarray_ass_subscript(%struct.NDArrayObject* %self, %struct._object* %key, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %key.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %dest = alloca %struct.bufferinfo*, align 8
  %src = alloca %struct.bufferinfo, align 8
  %ptr = alloca i8*, align 8
  %index = alloca i64, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !681, metadata !1360), !dbg !3626
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !682, metadata !1360), !dbg !3627
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !683, metadata !1360), !dbg !3628
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !3629
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3629
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !684, metadata !1360), !dbg !3630
  %1 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !3631
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3631
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest, metadata !685, metadata !1360), !dbg !3632
  %2 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3633, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %2, i32 0, i32 3, !dbg !3634
  %3 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !3634, !tbaa !2581
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %3, i32 0, i32 7, !dbg !3635
  store %struct.bufferinfo* %base, %struct.bufferinfo** %dest, align 8, !dbg !3632, !tbaa !1364
  %4 = bitcast %struct.bufferinfo* %src to i8*, !dbg !3636
  call void @llvm.lifetime.start(i64 80, i8* %4) #1, !dbg !3636
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %src, metadata !686, metadata !1360), !dbg !3637
  %5 = bitcast i8** %ptr to i8*, !dbg !3638
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3638
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !687, metadata !1360), !dbg !3639
  %6 = bitcast i64* %index to i8*, !dbg !3640
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !3640
  call void @llvm.dbg.declare(metadata i64* %index, metadata !688, metadata !1360), !dbg !3641
  %7 = bitcast i32* %ret to i8*, !dbg !3642
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !3642
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !689, metadata !1360), !dbg !3643
  store i32 -1, i32* %ret, align 4, !dbg !3643, !tbaa !1844
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3644, !tbaa !1364
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 4, !dbg !3646
  %9 = load i32, i32* %readonly, align 4, !dbg !3646, !tbaa !2692
  %tobool = icmp ne i32 %9, 0, !dbg !3644
  br i1 %tobool, label %if.then, label %if.end, !dbg !3647

if.then:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3648, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i32 0, i32 0)), !dbg !3650
  store i32 -1, i32* %retval, !dbg !3651
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3651

if.end:                                           ; preds = %entry
  %11 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !3652, !tbaa !1364
  %cmp = icmp eq %struct._object* %11, null, !dbg !3654
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !3655

if.then.1:                                        ; preds = %if.end
  %12 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3656, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i32 0, i32 0)), !dbg !3658
  store i32 -1, i32* %retval, !dbg !3659
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3659

if.end.2:                                         ; preds = %if.end
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3660, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 5, !dbg !3662
  %14 = load i32, i32* %ndim, align 4, !dbg !3662, !tbaa !1629
  %cmp3 = icmp eq i32 %14, 0, !dbg !3663
  br i1 %cmp3, label %if.then.4, label %if.end.9, !dbg !3664

if.then.4:                                        ; preds = %if.end.2
  %15 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3665, !tbaa !1364
  %cmp5 = icmp eq %struct._object* %15, @_Py_EllipsisObject, !dbg !3668
  br i1 %cmp5, label %if.then.8, label %lor.lhs.false, !dbg !3669

lor.lhs.false:                                    ; preds = %if.then.4
  %16 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3670, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !3671
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3671, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 19, !dbg !3672
  %18 = load i64, i64* %tp_flags, align 8, !dbg !3672, !tbaa !1605
  %and = and i64 %18, 67108864, !dbg !3673
  %cmp6 = icmp ne i64 %and, 0, !dbg !3674
  br i1 %cmp6, label %land.lhs.true, label %if.else, !dbg !3675

land.lhs.true:                                    ; preds = %lor.lhs.false
  %19 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3676, !tbaa !1364
  %20 = bitcast %struct._object* %19 to %struct.PyVarObject*, !dbg !3678
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %20, i32 0, i32 1, !dbg !3679
  %21 = load i64, i64* %ob_size, align 8, !dbg !3679, !tbaa !1648
  %cmp7 = icmp eq i64 %21, 0, !dbg !3680
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !3681

if.then.8:                                        ; preds = %land.lhs.true, %if.then.4
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3682, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 0, !dbg !3684
  %23 = load i8*, i8** %buf, align 8, !dbg !3684, !tbaa !2077
  store i8* %23, i8** %ptr, align 8, !dbg !3685, !tbaa !1364
  %24 = load i8*, i8** %ptr, align 8, !dbg !3686, !tbaa !1364
  %25 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !3687, !tbaa !1364
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3688, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 6, !dbg !3689
  %27 = load i8*, i8** %format, align 8, !dbg !3689, !tbaa !1737
  %28 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3690, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %28, i32 0, i32 3, !dbg !3691
  %29 = load i64, i64* %itemsize, align 8, !dbg !3691, !tbaa !1739
  %call = call i32 @pack_single(i8* %24, %struct._object* %25, i8* %27, i64 %29), !dbg !3692
  store i32 %call, i32* %retval, !dbg !3693
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3693

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %30 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3694, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %30, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i32 0, i32 0)), !dbg !3696
  store i32 -1, i32* %retval, !dbg !3697
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3697

if.end.9:                                         ; preds = %if.end.2
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3698, !tbaa !1364
  %ndim10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 5, !dbg !3700
  %32 = load i32, i32* %ndim10, align 4, !dbg !3700, !tbaa !1629
  %cmp11 = icmp eq i32 %32, 1, !dbg !3701
  br i1 %cmp11, label %land.lhs.true.12, label %if.end.35, !dbg !3702

land.lhs.true.12:                                 ; preds = %if.end.9
  %33 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3703, !tbaa !1364
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !3705
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !3705, !tbaa !1374
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 10, !dbg !3706
  %35 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !3706, !tbaa !3408
  %cmp14 = icmp ne %struct.PyNumberMethods* %35, null, !dbg !3707
  br i1 %cmp14, label %land.lhs.true.15, label %if.end.35, !dbg !3708

land.lhs.true.15:                                 ; preds = %land.lhs.true.12
  %36 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3709, !tbaa !1364
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !3711
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !3711, !tbaa !1374
  %tp_as_number17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 10, !dbg !3712
  %38 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number17, align 8, !dbg !3712, !tbaa !3408
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %38, i32 0, i32 33, !dbg !3713
  %39 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !3713, !tbaa !3416
  %cmp18 = icmp ne %struct._object* (%struct._object*)* %39, null, !dbg !3714
  br i1 %cmp18, label %if.then.19, label %if.end.35, !dbg !3715

if.then.19:                                       ; preds = %land.lhs.true.15
  %40 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3716, !tbaa !1364
  %call20 = call i64 @PyLong_AsSsize_t(%struct._object* %40), !dbg !3718
  store i64 %call20, i64* %index, align 8, !dbg !3719, !tbaa !1503
  %41 = load i64, i64* %index, align 8, !dbg !3720, !tbaa !1503
  %cmp21 = icmp eq i64 %41, -1, !dbg !3722
  br i1 %cmp21, label %land.lhs.true.22, label %if.else.26, !dbg !3723

land.lhs.true.22:                                 ; preds = %if.then.19
  %call23 = call %struct._object* @PyErr_Occurred(), !dbg !3724
  %tobool24 = icmp ne %struct._object* %call23, null, !dbg !3724
  br i1 %tobool24, label %if.then.25, label %if.else.26, !dbg !3726

if.then.25:                                       ; preds = %land.lhs.true.22
  store i32 -1, i32* %retval, !dbg !3727
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3727

if.else.26:                                       ; preds = %land.lhs.true.22, %if.then.19
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3728, !tbaa !1364
  %43 = load i64, i64* %index, align 8, !dbg !3730, !tbaa !1503
  %call27 = call i8* @ptr_from_index(%struct.bufferinfo* %42, i64 %43), !dbg !3731
  store i8* %call27, i8** %ptr, align 8, !dbg !3732, !tbaa !1364
  %44 = load i8*, i8** %ptr, align 8, !dbg !3733, !tbaa !1364
  %cmp28 = icmp eq i8* %44, null, !dbg !3735
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !3736

if.then.29:                                       ; preds = %if.else.26
  store i32 -1, i32* %retval, !dbg !3737
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3737

if.end.30:                                        ; preds = %if.else.26
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30
  %45 = load i8*, i8** %ptr, align 8, !dbg !3738, !tbaa !1364
  %46 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !3739, !tbaa !1364
  %47 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3740, !tbaa !1364
  %format32 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %47, i32 0, i32 6, !dbg !3741
  %48 = load i8*, i8** %format32, align 8, !dbg !3741, !tbaa !1737
  %49 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3742, !tbaa !1364
  %itemsize33 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %49, i32 0, i32 3, !dbg !3743
  %50 = load i64, i64* %itemsize33, align 8, !dbg !3743, !tbaa !1739
  %call34 = call i32 @pack_single(i8* %45, %struct._object* %46, i8* %48, i64 %50), !dbg !3744
  store i32 %call34, i32* %retval, !dbg !3745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3745

if.end.35:                                        ; preds = %land.lhs.true.15, %land.lhs.true.12, %if.end.9
  %51 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !3746, !tbaa !1364
  %call36 = call i32 @PyObject_GetBuffer(%struct._object* %51, %struct.bufferinfo* %src, i32 284), !dbg !3748
  %cmp37 = icmp eq i32 %call36, -1, !dbg !3749
  br i1 %cmp37, label %if.then.38, label %if.end.39, !dbg !3750

if.then.38:                                       ; preds = %if.end.35
  store i32 -1, i32* %retval, !dbg !3751
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3751

if.end.39:                                        ; preds = %if.end.35
  %52 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !3752, !tbaa !1364
  %53 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3753, !tbaa !1364
  %call40 = call %struct._object* @ndarray_subscript(%struct.NDArrayObject* %52, %struct._object* %53), !dbg !3754
  %54 = bitcast %struct._object* %call40 to %struct.NDArrayObject*, !dbg !3755
  store %struct.NDArrayObject* %54, %struct.NDArrayObject** %nd, align 8, !dbg !3756, !tbaa !1364
  %55 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3757, !tbaa !1364
  %cmp41 = icmp ne %struct.NDArrayObject* %55, null, !dbg !3758
  br i1 %cmp41, label %if.then.42, label %if.end.51, !dbg !3759

if.then.42:                                       ; preds = %if.end.39
  %56 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3760, !tbaa !1364
  %head43 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %56, i32 0, i32 3, !dbg !3761
  %57 = load %struct.ndbuf*, %struct.ndbuf** %head43, align 8, !dbg !3761, !tbaa !2581
  %base44 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %57, i32 0, i32 7, !dbg !3762
  store %struct.bufferinfo* %base44, %struct.bufferinfo** %dest, align 8, !dbg !3763, !tbaa !1364
  %58 = load %struct.bufferinfo*, %struct.bufferinfo** %dest, align 8, !dbg !3764, !tbaa !1364
  %call45 = call i32 @copy_buffer(%struct.bufferinfo* %58, %struct.bufferinfo* %src), !dbg !3765
  store i32 %call45, i32* %ret, align 4, !dbg !3766, !tbaa !1844
  br label %do.body, !dbg !3767

do.body:                                          ; preds = %if.then.42
  %59 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3768
  call void @llvm.lifetime.start(i64 8, i8* %59) #1, !dbg !3768
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !690, metadata !1360), !dbg !3770
  %60 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !3771, !tbaa !1364
  %61 = bitcast %struct.NDArrayObject* %60 to %struct._object*, !dbg !3772
  store %struct._object* %61, %struct._object** %_py_decref_tmp, align 8, !dbg !3770, !tbaa !1364
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3773, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !3775
  %63 = load i64, i64* %ob_refcnt, align 8, !dbg !3776, !tbaa !1378
  %dec = add i64 %63, -1, !dbg !3776
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3776, !tbaa !1378
  %cmp46 = icmp ne i64 %dec, 0, !dbg !3777
  br i1 %cmp46, label %if.then.47, label %if.else.48, !dbg !3778

if.then.47:                                       ; preds = %do.body
  br label %if.end.50, !dbg !3779

if.else.48:                                       ; preds = %do.body
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3781, !tbaa !1364
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !3783
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8, !dbg !3783, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !3784
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3784, !tbaa !1568
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3785, !tbaa !1364
  call void %66(%struct._object* %67), !dbg !3786
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.48, %if.then.47
  %68 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3787
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !3787
  br label %do.cond, !dbg !3789

do.cond:                                          ; preds = %if.end.50
  br label %do.end, !dbg !3790

do.end:                                           ; preds = %do.cond
  br label %if.end.51, !dbg !3792

if.end.51:                                        ; preds = %do.end, %if.end.39
  call void @PyBuffer_Release(%struct.bufferinfo* %src), !dbg !3793
  %69 = load i32, i32* %ret, align 4, !dbg !3794, !tbaa !1844
  store i32 %69, i32* %retval, !dbg !3795
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3795

cleanup:                                          ; preds = %if.end.51, %if.then.38, %if.end.31, %if.then.29, %if.then.25, %if.else, %if.then.8, %if.then.1, %if.then
  %70 = bitcast i32* %ret to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 4, i8* %70) #1, !dbg !3796
  %71 = bitcast i64* %index to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 8, i8* %71) #1, !dbg !3796
  %72 = bitcast i8** %ptr to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !3796
  %73 = bitcast %struct.bufferinfo* %src to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 80, i8* %73) #1, !dbg !3796
  %74 = bitcast %struct.bufferinfo** %dest to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !3796
  %75 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !3796
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !3796
  %76 = load i32, i32* %retval, !dbg !3796
  ret i32 %76, !dbg !3796
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_structure(%struct.bufferinfo* %base) #0 {
entry:
  %retval = alloca i32, align 4
  %base.addr = alloca %struct.bufferinfo*, align 8
  %shape = alloca i64*, align 8
  %strides = alloca i64*, align 8
  %suboffsets = alloca i64*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %base, %struct.bufferinfo** %base.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base.addr, metadata !652, metadata !1360), !dbg !3797
  %0 = bitcast i64** %shape to i8*, !dbg !3798
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3798
  call void @llvm.dbg.declare(metadata i64** %shape, metadata !653, metadata !1360), !dbg !3799
  store i64* null, i64** %shape, align 8, !dbg !3799, !tbaa !1364
  %1 = bitcast i64** %strides to i8*, !dbg !3798
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3798
  call void @llvm.dbg.declare(metadata i64** %strides, metadata !654, metadata !1360), !dbg !3800
  store i64* null, i64** %strides, align 8, !dbg !3800, !tbaa !1364
  %2 = bitcast i64** %suboffsets to i8*, !dbg !3798
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3798
  call void @llvm.dbg.declare(metadata i64** %suboffsets, metadata !655, metadata !1360), !dbg !3801
  store i64* null, i64** %suboffsets, align 8, !dbg !3801, !tbaa !1364
  %3 = bitcast i64* %i to i8*, !dbg !3802
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3802
  call void @llvm.dbg.declare(metadata i64* %i, metadata !656, metadata !1360), !dbg !3803
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3804, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 5, !dbg !3805
  %5 = load i32, i32* %ndim, align 4, !dbg !3805, !tbaa !1629
  %conv = sext i32 %5 to i64, !dbg !3804
  %mul = mul i64 %conv, 8, !dbg !3806
  %call = call i8* @PyMem_Malloc(i64 %mul), !dbg !3807
  %6 = bitcast i8* %call to i64*, !dbg !3807
  store i64* %6, i64** %shape, align 8, !dbg !3808, !tbaa !1364
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3809, !tbaa !1364
  %ndim1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 5, !dbg !3810
  %8 = load i32, i32* %ndim1, align 4, !dbg !3810, !tbaa !1629
  %conv2 = sext i32 %8 to i64, !dbg !3809
  %mul3 = mul i64 %conv2, 8, !dbg !3811
  %call4 = call i8* @PyMem_Malloc(i64 %mul3), !dbg !3812
  %9 = bitcast i8* %call4 to i64*, !dbg !3812
  store i64* %9, i64** %strides, align 8, !dbg !3813, !tbaa !1364
  %10 = load i64*, i64** %shape, align 8, !dbg !3814, !tbaa !1364
  %cmp = icmp eq i64* %10, null, !dbg !3816
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3817

lor.lhs.false:                                    ; preds = %entry
  %11 = load i64*, i64** %strides, align 8, !dbg !3818, !tbaa !1364
  %cmp6 = icmp eq i64* %11, null, !dbg !3820
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3821

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err_nomem, !dbg !3822

if.end:                                           ; preds = %lor.lhs.false
  store i64* null, i64** %suboffsets, align 8, !dbg !3823, !tbaa !1364
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3824, !tbaa !1364
  %suboffsets8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 9, !dbg !3826
  %13 = load i64*, i64** %suboffsets8, align 8, !dbg !3826, !tbaa !2033
  %tobool = icmp ne i64* %13, null, !dbg !3824
  br i1 %tobool, label %if.then.9, label %if.end.18, !dbg !3827

if.then.9:                                        ; preds = %if.end
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3828, !tbaa !1364
  %ndim10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 5, !dbg !3830
  %15 = load i32, i32* %ndim10, align 4, !dbg !3830, !tbaa !1629
  %conv11 = sext i32 %15 to i64, !dbg !3828
  %mul12 = mul i64 %conv11, 8, !dbg !3831
  %call13 = call i8* @PyMem_Malloc(i64 %mul12), !dbg !3832
  %16 = bitcast i8* %call13 to i64*, !dbg !3832
  store i64* %16, i64** %suboffsets, align 8, !dbg !3833, !tbaa !1364
  %17 = load i64*, i64** %suboffsets, align 8, !dbg !3834, !tbaa !1364
  %cmp14 = icmp eq i64* %17, null, !dbg !3836
  br i1 %cmp14, label %if.then.16, label %if.end.17, !dbg !3837

if.then.16:                                       ; preds = %if.then.9
  br label %err_nomem, !dbg !3838

if.end.17:                                        ; preds = %if.then.9
  br label %if.end.18, !dbg !3839

if.end.18:                                        ; preds = %if.end.17, %if.end
  store i64 0, i64* %i, align 8, !dbg !3840, !tbaa !1503
  br label %for.cond, !dbg !3842

for.cond:                                         ; preds = %for.inc, %if.end.18
  %18 = load i64, i64* %i, align 8, !dbg !3843, !tbaa !1503
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3847, !tbaa !1364
  %ndim19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 5, !dbg !3848
  %20 = load i32, i32* %ndim19, align 4, !dbg !3848, !tbaa !1629
  %conv20 = sext i32 %20 to i64, !dbg !3847
  %cmp21 = icmp slt i64 %18, %conv20, !dbg !3849
  br i1 %cmp21, label %for.body, label %for.end, !dbg !3850

for.body:                                         ; preds = %for.cond
  %21 = load i64, i64* %i, align 8, !dbg !3851, !tbaa !1503
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3853, !tbaa !1364
  %shape23 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 7, !dbg !3854
  %23 = load i64*, i64** %shape23, align 8, !dbg !3854, !tbaa !1716
  %arrayidx = getelementptr i64, i64* %23, i64 %21, !dbg !3853
  %24 = load i64, i64* %arrayidx, align 8, !dbg !3853, !tbaa !1503
  %25 = load i64, i64* %i, align 8, !dbg !3855, !tbaa !1503
  %26 = load i64*, i64** %shape, align 8, !dbg !3856, !tbaa !1364
  %arrayidx24 = getelementptr i64, i64* %26, i64 %25, !dbg !3856
  store i64 %24, i64* %arrayidx24, align 8, !dbg !3857, !tbaa !1503
  %27 = load i64, i64* %i, align 8, !dbg !3858, !tbaa !1503
  %28 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3859, !tbaa !1364
  %strides25 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %28, i32 0, i32 8, !dbg !3860
  %29 = load i64*, i64** %strides25, align 8, !dbg !3860, !tbaa !2024
  %arrayidx26 = getelementptr i64, i64* %29, i64 %27, !dbg !3859
  %30 = load i64, i64* %arrayidx26, align 8, !dbg !3859, !tbaa !1503
  %31 = load i64, i64* %i, align 8, !dbg !3861, !tbaa !1503
  %32 = load i64*, i64** %strides, align 8, !dbg !3862, !tbaa !1364
  %arrayidx27 = getelementptr i64, i64* %32, i64 %31, !dbg !3862
  store i64 %30, i64* %arrayidx27, align 8, !dbg !3863, !tbaa !1503
  %33 = load i64*, i64** %suboffsets, align 8, !dbg !3864, !tbaa !1364
  %tobool28 = icmp ne i64* %33, null, !dbg !3864
  br i1 %tobool28, label %if.then.29, label %if.end.33, !dbg !3866

if.then.29:                                       ; preds = %for.body
  %34 = load i64, i64* %i, align 8, !dbg !3867, !tbaa !1503
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3868, !tbaa !1364
  %suboffsets30 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 9, !dbg !3869
  %36 = load i64*, i64** %suboffsets30, align 8, !dbg !3869, !tbaa !2033
  %arrayidx31 = getelementptr i64, i64* %36, i64 %34, !dbg !3868
  %37 = load i64, i64* %arrayidx31, align 8, !dbg !3868, !tbaa !1503
  %38 = load i64, i64* %i, align 8, !dbg !3870, !tbaa !1503
  %39 = load i64*, i64** %suboffsets, align 8, !dbg !3871, !tbaa !1364
  %arrayidx32 = getelementptr i64, i64* %39, i64 %38, !dbg !3871
  store i64 %37, i64* %arrayidx32, align 8, !dbg !3872, !tbaa !1503
  br label %if.end.33, !dbg !3871

if.end.33:                                        ; preds = %if.then.29, %for.body
  br label %for.inc, !dbg !3873

for.inc:                                          ; preds = %if.end.33
  %40 = load i64, i64* %i, align 8, !dbg !3874, !tbaa !1503
  %inc = add i64 %40, 1, !dbg !3874
  store i64 %inc, i64* %i, align 8, !dbg !3874, !tbaa !1503
  br label %for.cond, !dbg !3875

for.end:                                          ; preds = %for.cond
  %41 = load i64*, i64** %shape, align 8, !dbg !3876, !tbaa !1364
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3877, !tbaa !1364
  %shape34 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 7, !dbg !3878
  store i64* %41, i64** %shape34, align 8, !dbg !3879, !tbaa !1716
  %43 = load i64*, i64** %strides, align 8, !dbg !3880, !tbaa !1364
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3881, !tbaa !1364
  %strides35 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 8, !dbg !3882
  store i64* %43, i64** %strides35, align 8, !dbg !3883, !tbaa !2024
  %45 = load i64*, i64** %suboffsets, align 8, !dbg !3884, !tbaa !1364
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3885, !tbaa !1364
  %suboffsets36 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 9, !dbg !3886
  store i64* %45, i64** %suboffsets36, align 8, !dbg !3887, !tbaa !2033
  store i32 0, i32* %retval, !dbg !3888
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3888

err_nomem:                                        ; preds = %if.then.16, %if.then
  %call37 = call %struct._object* @PyErr_NoMemory(), !dbg !3889
  br label %do.body, !dbg !3890

do.body:                                          ; preds = %err_nomem
  %47 = load i64*, i64** %shape, align 8, !dbg !3891, !tbaa !1364
  %tobool38 = icmp ne i64* %47, null, !dbg !3891
  br i1 %tobool38, label %if.then.39, label %if.end.40, !dbg !3895

if.then.39:                                       ; preds = %do.body
  %48 = load i64*, i64** %shape, align 8, !dbg !3896, !tbaa !1364
  %49 = bitcast i64* %48 to i8*, !dbg !3896
  call void @PyMem_Free(i8* %49), !dbg !3898
  br label %if.end.40, !dbg !3898

if.end.40:                                        ; preds = %if.then.39, %do.body
  br label %do.cond, !dbg !3899

do.cond:                                          ; preds = %if.end.40
  br label %do.end, !dbg !3902

do.end:                                           ; preds = %do.cond
  br label %do.body.41, !dbg !3904

do.body.41:                                       ; preds = %do.end
  %50 = load i64*, i64** %strides, align 8, !dbg !3905, !tbaa !1364
  %tobool42 = icmp ne i64* %50, null, !dbg !3905
  br i1 %tobool42, label %if.then.43, label %if.end.44, !dbg !3909

if.then.43:                                       ; preds = %do.body.41
  %51 = load i64*, i64** %strides, align 8, !dbg !3910, !tbaa !1364
  %52 = bitcast i64* %51 to i8*, !dbg !3910
  call void @PyMem_Free(i8* %52), !dbg !3912
  br label %if.end.44, !dbg !3912

if.end.44:                                        ; preds = %if.then.43, %do.body.41
  br label %do.cond.45, !dbg !3913

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !3916

do.end.46:                                        ; preds = %do.cond.45
  br label %do.body.47, !dbg !3918

do.body.47:                                       ; preds = %do.end.46
  %53 = load i64*, i64** %suboffsets, align 8, !dbg !3919, !tbaa !1364
  %tobool48 = icmp ne i64* %53, null, !dbg !3919
  br i1 %tobool48, label %if.then.49, label %if.end.50, !dbg !3923

if.then.49:                                       ; preds = %do.body.47
  %54 = load i64*, i64** %suboffsets, align 8, !dbg !3924, !tbaa !1364
  %55 = bitcast i64* %54 to i8*, !dbg !3924
  call void @PyMem_Free(i8* %55), !dbg !3926
  br label %if.end.50, !dbg !3926

if.end.50:                                        ; preds = %if.then.49, %do.body.47
  br label %do.cond.51, !dbg !3927

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !3930

do.end.52:                                        ; preds = %do.cond.51
  store i32 -1, i32* %retval, !dbg !3932
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3932

cleanup:                                          ; preds = %do.end.52, %for.end
  %56 = bitcast i64* %i to i8*, !dbg !3933
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !3933
  %57 = bitcast i64** %suboffsets to i8*, !dbg !3933
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !3933
  %58 = bitcast i64** %strides to i8*, !dbg !3933
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !3933
  %59 = bitcast i64** %shape to i8*, !dbg !3933
  call void @llvm.lifetime.end(i64 8, i8* %59) #1, !dbg !3933
  %60 = load i32, i32* %retval, !dbg !3933
  ret i32 %60, !dbg !3933
}

; Function Attrs: nounwind uwtable
define internal i32 @init_slice(%struct.bufferinfo* %base, %struct._object* %key, i32 %dim) #0 {
entry:
  %retval = alloca i32, align 4
  %base.addr = alloca %struct.bufferinfo*, align 8
  %key.addr = alloca %struct._object*, align 8
  %dim.addr = alloca i32, align 4
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelength = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %n = alloca i64, align 8
  store %struct.bufferinfo* %base, %struct.bufferinfo** %base.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base.addr, metadata !661, metadata !1360), !dbg !3934
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !662, metadata !1360), !dbg !3935
  store i32 %dim, i32* %dim.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %dim.addr, metadata !663, metadata !1360), !dbg !3936
  %0 = bitcast i64* %start to i8*, !dbg !3937
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3937
  call void @llvm.dbg.declare(metadata i64* %start, metadata !664, metadata !1360), !dbg !3938
  %1 = bitcast i64* %stop to i8*, !dbg !3937
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3937
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !665, metadata !1360), !dbg !3939
  %2 = bitcast i64* %step to i8*, !dbg !3937
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3937
  call void @llvm.dbg.declare(metadata i64* %step, metadata !666, metadata !1360), !dbg !3940
  %3 = bitcast i64* %slicelength to i8*, !dbg !3937
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3937
  call void @llvm.dbg.declare(metadata i64* %slicelength, metadata !667, metadata !1360), !dbg !3941
  %4 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !3942, !tbaa !1364
  %5 = load i32, i32* %dim.addr, align 4, !dbg !3944, !tbaa !1844
  %idxprom = sext i32 %5 to i64, !dbg !3945
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3945, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 7, !dbg !3946
  %7 = load i64*, i64** %shape, align 8, !dbg !3946, !tbaa !1716
  %arrayidx = getelementptr i64, i64* %7, i64 %idxprom, !dbg !3945
  %8 = load i64, i64* %arrayidx, align 8, !dbg !3945, !tbaa !1503
  %call = call i32 @PySlice_GetIndicesEx(%struct._object* %4, i64 %8, i64* %start, i64* %stop, i64* %step, i64* %slicelength), !dbg !3947
  %cmp = icmp slt i32 %call, 0, !dbg !3948
  br i1 %cmp, label %if.then, label %if.end, !dbg !3949

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !3950

if.end:                                           ; preds = %entry
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3952, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 9, !dbg !3953
  %10 = load i64*, i64** %suboffsets, align 8, !dbg !3953, !tbaa !2033
  %cmp1 = icmp eq i64* %10, null, !dbg !3954
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false, !dbg !3955

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i32, i32* %dim.addr, align 4, !dbg !3956, !tbaa !1844
  %cmp2 = icmp eq i32 %11, 0, !dbg !3958
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !3959

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  br label %adjust_buf, !dbg !3960

adjust_buf:                                       ; preds = %LeafBlock, %if.then.3
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3963, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 0, !dbg !3965
  %13 = load i8*, i8** %buf, align 8, !dbg !3965, !tbaa !2077
  %14 = load i32, i32* %dim.addr, align 4, !dbg !3966, !tbaa !1844
  %idxprom4 = sext i32 %14 to i64, !dbg !3967
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3967, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 8, !dbg !3968
  %16 = load i64*, i64** %strides, align 8, !dbg !3968, !tbaa !2024
  %arrayidx5 = getelementptr i64, i64* %16, i64 %idxprom4, !dbg !3967
  %17 = load i64, i64* %arrayidx5, align 8, !dbg !3967, !tbaa !1503
  %18 = load i64, i64* %start, align 8, !dbg !3969, !tbaa !1503
  %mul = mul i64 %17, %18, !dbg !3970
  %add.ptr = getelementptr i8, i8* %13, i64 %mul, !dbg !3971
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3972, !tbaa !1364
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 0, !dbg !3973
  store i8* %add.ptr, i8** %buf6, align 8, !dbg !3974, !tbaa !2077
  br label %if.end.25, !dbg !3975

if.else:                                          ; preds = %lor.lhs.false
  %20 = bitcast i64* %n to i8*, !dbg !3976
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !3976
  call void @llvm.dbg.declare(metadata i64* %n, metadata !668, metadata !1360), !dbg !3977
  %21 = load i32, i32* %dim.addr, align 4, !dbg !3978, !tbaa !1844
  %sub = sub i32 %21, 1, !dbg !3979
  %conv = sext i32 %sub to i64, !dbg !3978
  store i64 %conv, i64* %n, align 8, !dbg !3977, !tbaa !1503
  br label %while.cond, !dbg !3980

while.cond:                                       ; preds = %while.body, %if.else
  %22 = load i64, i64* %n, align 8, !dbg !3981, !tbaa !1503
  %cmp7 = icmp sge i64 %22, 0, !dbg !3984
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !3985

land.rhs:                                         ; preds = %while.cond
  %23 = load i64, i64* %n, align 8, !dbg !3986, !tbaa !1503
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !3988, !tbaa !1364
  %suboffsets9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 9, !dbg !3989
  %25 = load i64*, i64** %suboffsets9, align 8, !dbg !3989, !tbaa !2033
  %arrayidx10 = getelementptr i64, i64* %25, i64 %23, !dbg !3988
  %26 = load i64, i64* %arrayidx10, align 8, !dbg !3988, !tbaa !1503
  %cmp11 = icmp slt i64 %26, 0, !dbg !3990
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %27 = phi i1 [ false, %while.cond ], [ %cmp11, %land.rhs ]
  br i1 %27, label %while.body, label %while.end, !dbg !3991

while.body:                                       ; preds = %land.end
  %28 = load i64, i64* %n, align 8, !dbg !3993, !tbaa !1503
  %dec = add i64 %28, -1, !dbg !3993
  store i64 %dec, i64* %n, align 8, !dbg !3993, !tbaa !1503
  br label %while.cond, !dbg !3980

while.end:                                        ; preds = %land.end
  %29 = load i64, i64* %n, align 8, !dbg !3994, !tbaa !1503
  %cmp13 = icmp slt i64 %29, 0, !dbg !3996
  br i1 %cmp13, label %if.then.15, label %if.end.16, !dbg !3997

if.then.15:                                       ; preds = %while.end
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3998

if.end.16:                                        ; preds = %while.end
  %30 = load i64, i64* %n, align 8, !dbg !3999, !tbaa !1503
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4000, !tbaa !1364
  %suboffsets17 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 9, !dbg !4001
  %32 = load i64*, i64** %suboffsets17, align 8, !dbg !4001, !tbaa !2033
  %arrayidx18 = getelementptr i64, i64* %32, i64 %30, !dbg !4000
  %33 = load i64, i64* %arrayidx18, align 8, !dbg !4000, !tbaa !1503
  %34 = load i32, i32* %dim.addr, align 4, !dbg !4002, !tbaa !1844
  %idxprom19 = sext i32 %34 to i64, !dbg !4003
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4003, !tbaa !1364
  %strides20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 8, !dbg !4004
  %36 = load i64*, i64** %strides20, align 8, !dbg !4004, !tbaa !2024
  %arrayidx21 = getelementptr i64, i64* %36, i64 %idxprom19, !dbg !4003
  %37 = load i64, i64* %arrayidx21, align 8, !dbg !4003, !tbaa !1503
  %38 = load i64, i64* %start, align 8, !dbg !4005, !tbaa !1503
  %mul22 = mul i64 %37, %38, !dbg !4006
  %add = add i64 %33, %mul22, !dbg !4007
  %39 = load i64, i64* %n, align 8, !dbg !4008, !tbaa !1503
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4009, !tbaa !1364
  %suboffsets23 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 9, !dbg !4010
  %41 = load i64*, i64** %suboffsets23, align 8, !dbg !4010, !tbaa !2033
  %arrayidx24 = getelementptr i64, i64* %41, i64 %39, !dbg !4009
  store i64 %add, i64* %arrayidx24, align 8, !dbg !4011, !tbaa !1503
  store i32 0, i32* %cleanup.dest.slot, !dbg !4012
  br label %cleanup, !dbg !4012

cleanup:                                          ; preds = %if.end.16, %if.then.15
  %42 = bitcast i64* %n to i8*, !dbg !4013
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !4013
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf, label %adjust_buf, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.25

if.end.25:                                        ; preds = %cleanup.cont, %adjust_buf
  %43 = load i64, i64* %slicelength, align 8, !dbg !4014, !tbaa !1503
  %44 = load i32, i32* %dim.addr, align 4, !dbg !4015, !tbaa !1844
  %idxprom26 = sext i32 %44 to i64, !dbg !4016
  %45 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4016, !tbaa !1364
  %shape27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %45, i32 0, i32 7, !dbg !4017
  %46 = load i64*, i64** %shape27, align 8, !dbg !4017, !tbaa !1716
  %arrayidx28 = getelementptr i64, i64* %46, i64 %idxprom26, !dbg !4016
  store i64 %43, i64* %arrayidx28, align 8, !dbg !4018, !tbaa !1503
  %47 = load i32, i32* %dim.addr, align 4, !dbg !4019, !tbaa !1844
  %idxprom29 = sext i32 %47 to i64, !dbg !4020
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4020, !tbaa !1364
  %strides30 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 8, !dbg !4021
  %49 = load i64*, i64** %strides30, align 8, !dbg !4021, !tbaa !2024
  %arrayidx31 = getelementptr i64, i64* %49, i64 %idxprom29, !dbg !4020
  %50 = load i64, i64* %arrayidx31, align 8, !dbg !4020, !tbaa !1503
  %51 = load i64, i64* %step, align 8, !dbg !4022, !tbaa !1503
  %mul32 = mul i64 %50, %51, !dbg !4023
  %52 = load i32, i32* %dim.addr, align 4, !dbg !4024, !tbaa !1844
  %idxprom33 = sext i32 %52 to i64, !dbg !4025
  %53 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4025, !tbaa !1364
  %strides34 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %53, i32 0, i32 8, !dbg !4026
  %54 = load i64*, i64** %strides34, align 8, !dbg !4026, !tbaa !2024
  %arrayidx35 = getelementptr i64, i64* %54, i64 %idxprom33, !dbg !4025
  store i64 %mul32, i64* %arrayidx35, align 8, !dbg !4027, !tbaa !1503
  store i32 0, i32* %retval, !dbg !4028
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.36, !dbg !4028

cleanup.36:                                       ; preds = %if.end.25, %if.then
  %55 = bitcast i64* %slicelength to i8*, !dbg !4029
  call void @llvm.lifetime.end(i64 8, i8* %55) #1, !dbg !4029
  %56 = bitcast i64* %step to i8*, !dbg !4029
  call void @llvm.lifetime.end(i64 8, i8* %56) #1, !dbg !4029
  %57 = bitcast i64* %stop to i8*, !dbg !4029
  call void @llvm.lifetime.end(i64 8, i8* %57) #1, !dbg !4029
  %58 = bitcast i64* %start to i8*, !dbg !4029
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !4029
  %59 = load i32, i32* %retval, !dbg !4029
  ret i32 %59, !dbg !4029
}

; Function Attrs: nounwind uwtable
define internal void @init_len(%struct.bufferinfo* %base) #0 {
entry:
  %base.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  store %struct.bufferinfo* %base, %struct.bufferinfo** %base.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base.addr, metadata !675, metadata !1360), !dbg !4030
  %0 = bitcast i64* %i to i8*, !dbg !4031
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4031
  call void @llvm.dbg.declare(metadata i64* %i, metadata !676, metadata !1360), !dbg !4032
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4033, !tbaa !1364
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 2, !dbg !4034
  store i64 1, i64* %len, align 8, !dbg !4035, !tbaa !1860
  store i64 0, i64* %i, align 8, !dbg !4036, !tbaa !1503
  br label %for.cond, !dbg !4038

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !4039, !tbaa !1503
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4043, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !4044
  %4 = load i32, i32* %ndim, align 4, !dbg !4044, !tbaa !1629
  %conv = sext i32 %4 to i64, !dbg !4043
  %cmp = icmp slt i64 %2, %conv, !dbg !4045
  br i1 %cmp, label %for.body, label %for.end, !dbg !4046

for.body:                                         ; preds = %for.cond
  %5 = load i64, i64* %i, align 8, !dbg !4047, !tbaa !1503
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4048, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 7, !dbg !4049
  %7 = load i64*, i64** %shape, align 8, !dbg !4049, !tbaa !1716
  %arrayidx = getelementptr i64, i64* %7, i64 %5, !dbg !4048
  %8 = load i64, i64* %arrayidx, align 8, !dbg !4048, !tbaa !1503
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4050, !tbaa !1364
  %len2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 2, !dbg !4051
  %10 = load i64, i64* %len2, align 8, !dbg !4052, !tbaa !1860
  %mul = mul i64 %10, %8, !dbg !4052
  store i64 %mul, i64* %len2, align 8, !dbg !4052, !tbaa !1860
  br label %for.inc, !dbg !4050

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8, !dbg !4053, !tbaa !1503
  %inc = add i64 %11, 1, !dbg !4053
  store i64 %inc, i64* %i, align 8, !dbg !4053, !tbaa !1503
  br label %for.cond, !dbg !4054

for.end:                                          ; preds = %for.cond
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4055, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 3, !dbg !4056
  %13 = load i64, i64* %itemsize, align 8, !dbg !4056, !tbaa !1739
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %base.addr, align 8, !dbg !4057, !tbaa !1364
  %len3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 2, !dbg !4058
  %15 = load i64, i64* %len3, align 8, !dbg !4059, !tbaa !1860
  %mul4 = mul i64 %15, %13, !dbg !4059
  store i64 %mul4, i64* %len3, align 8, !dbg !4059, !tbaa !1860
  %16 = bitcast i64* %i to i8*, !dbg !4060
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !4060
  ret void, !dbg !4060
}

; Function Attrs: nounwind uwtable
define internal i32 @pack_single(i8* %ptr, %struct._object* %item, i8* %fmt, i64 %itemsize) #0 {
entry:
  %ptr.addr = alloca i8*, align 8
  %item.addr = alloca %struct._object*, align 8
  %fmt.addr = alloca i8*, align 8
  %itemsize.addr = alloca i64, align 8
  %structobj = alloca %struct._object*, align 8
  %pack_into = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %mview = alloca %struct._object*, align 8
  %zero = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %nmemb = alloca i64, align 8
  %ret = alloca i32, align 4
  %x = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp100 = alloca %struct._object*, align 8
  %_py_xdecref_tmp115 = alloca %struct._object*, align 8
  %_py_decref_tmp119 = alloca %struct._object*, align 8
  %_py_xdecref_tmp134 = alloca %struct._object*, align 8
  %_py_decref_tmp138 = alloca %struct._object*, align 8
  %_py_xdecref_tmp153 = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  %_py_xdecref_tmp172 = alloca %struct._object*, align 8
  %_py_decref_tmp176 = alloca %struct._object*, align 8
  %_py_xdecref_tmp191 = alloca %struct._object*, align 8
  %_py_decref_tmp195 = alloca %struct._object*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !698, metadata !1360), !dbg !4061
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !699, metadata !1360), !dbg !4062
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !700, metadata !1360), !dbg !4063
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !701, metadata !1360), !dbg !4064
  %0 = bitcast %struct._object** %structobj to i8*, !dbg !4065
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4065
  call void @llvm.dbg.declare(metadata %struct._object** %structobj, metadata !702, metadata !1360), !dbg !4066
  store %struct._object* null, %struct._object** %structobj, align 8, !dbg !4066, !tbaa !1364
  %1 = bitcast %struct._object** %pack_into to i8*, !dbg !4065
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4065
  call void @llvm.dbg.declare(metadata %struct._object** %pack_into, metadata !703, metadata !1360), !dbg !4067
  store %struct._object* null, %struct._object** %pack_into, align 8, !dbg !4067, !tbaa !1364
  %2 = bitcast %struct._object** %args to i8*, !dbg !4065
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4065
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !704, metadata !1360), !dbg !4068
  store %struct._object* null, %struct._object** %args, align 8, !dbg !4068, !tbaa !1364
  %3 = bitcast %struct._object** %format to i8*, !dbg !4069
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4069
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !705, metadata !1360), !dbg !4070
  store %struct._object* null, %struct._object** %format, align 8, !dbg !4070, !tbaa !1364
  %4 = bitcast %struct._object** %mview to i8*, !dbg !4069
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4069
  call void @llvm.dbg.declare(metadata %struct._object** %mview, metadata !706, metadata !1360), !dbg !4071
  store %struct._object* null, %struct._object** %mview, align 8, !dbg !4071, !tbaa !1364
  %5 = bitcast %struct._object** %zero to i8*, !dbg !4069
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !4069
  call void @llvm.dbg.declare(metadata %struct._object** %zero, metadata !707, metadata !1360), !dbg !4072
  store %struct._object* null, %struct._object** %zero, align 8, !dbg !4072, !tbaa !1364
  %6 = bitcast i64* %i to i8*, !dbg !4073
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !4073
  call void @llvm.dbg.declare(metadata i64* %i, metadata !708, metadata !1360), !dbg !4074
  %7 = bitcast i64* %nmemb to i8*, !dbg !4073
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !4073
  call void @llvm.dbg.declare(metadata i64* %nmemb, metadata !709, metadata !1360), !dbg !4075
  %8 = bitcast i32* %ret to i8*, !dbg !4076
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !4076
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !710, metadata !1360), !dbg !4077
  store i32 -1, i32* %ret, align 4, !dbg !4077, !tbaa !1844
  %9 = bitcast %struct._object** %x to i8*, !dbg !4078
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !4078
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !711, metadata !1360), !dbg !4079
  %10 = load i8*, i8** %fmt.addr, align 8, !dbg !4080, !tbaa !1364
  %cmp = icmp eq i8* %10, null, !dbg !4082
  br i1 %cmp, label %if.then, label %if.end, !dbg !4083

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i8** %fmt.addr, align 8, !dbg !4084, !tbaa !1364
  br label %if.end, !dbg !4086

if.end:                                           ; preds = %if.then, %entry
  %11 = load i8*, i8** %fmt.addr, align 8, !dbg !4087, !tbaa !1364
  %call = call %struct._object* @PyUnicode_FromString(i8* %11), !dbg !4088
  store %struct._object* %call, %struct._object** %format, align 8, !dbg !4089, !tbaa !1364
  %12 = load %struct._object*, %struct._object** %format, align 8, !dbg !4090, !tbaa !1364
  %cmp1 = icmp eq %struct._object* %12, null, !dbg !4092
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !4093

if.then.2:                                        ; preds = %if.end
  br label %out, !dbg !4094

if.end.3:                                         ; preds = %if.end
  %13 = load %struct._object*, %struct._object** @Struct, align 8, !dbg !4095, !tbaa !1364
  %14 = load %struct._object*, %struct._object** %format, align 8, !dbg !4096, !tbaa !1364
  %call4 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %13, %struct._object* %14, i8* null), !dbg !4097
  store %struct._object* %call4, %struct._object** %structobj, align 8, !dbg !4098, !tbaa !1364
  %15 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !4099, !tbaa !1364
  %cmp5 = icmp eq %struct._object* %15, null, !dbg !4101
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !4102

if.then.6:                                        ; preds = %if.end.3
  br label %out, !dbg !4103

if.end.7:                                         ; preds = %if.end.3
  %16 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !4104, !tbaa !1364
  %call8 = call i64 @get_nmemb(%struct._object* %16), !dbg !4105
  store i64 %call8, i64* %nmemb, align 8, !dbg !4106, !tbaa !1503
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !4107, !tbaa !1364
  %18 = load i64, i64* %itemsize.addr, align 8, !dbg !4108, !tbaa !1503
  %call9 = call %struct._object* @PyMemoryView_FromMemory(i8* %17, i64 %18, i32 512), !dbg !4109
  store %struct._object* %call9, %struct._object** %mview, align 8, !dbg !4110, !tbaa !1364
  %19 = load %struct._object*, %struct._object** %mview, align 8, !dbg !4111, !tbaa !1364
  %cmp10 = icmp eq %struct._object* %19, null, !dbg !4113
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !4114

if.then.11:                                       ; preds = %if.end.7
  br label %out, !dbg !4115

if.end.12:                                        ; preds = %if.end.7
  %call13 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !4116
  store %struct._object* %call13, %struct._object** %zero, align 8, !dbg !4117, !tbaa !1364
  %20 = load %struct._object*, %struct._object** %zero, align 8, !dbg !4118, !tbaa !1364
  %cmp14 = icmp eq %struct._object* %20, null, !dbg !4120
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !4121

if.then.15:                                       ; preds = %if.end.12
  br label %out, !dbg !4122

if.end.16:                                        ; preds = %if.end.12
  %21 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !4123, !tbaa !1364
  %call17 = call %struct._object* @PyObject_GetAttrString(%struct._object* %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0)), !dbg !4124
  store %struct._object* %call17, %struct._object** %pack_into, align 8, !dbg !4125, !tbaa !1364
  %22 = load %struct._object*, %struct._object** %pack_into, align 8, !dbg !4126, !tbaa !1364
  %cmp18 = icmp eq %struct._object* %22, null, !dbg !4128
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !4129

if.then.19:                                       ; preds = %if.end.16
  br label %out, !dbg !4130

if.end.20:                                        ; preds = %if.end.16
  %23 = load i64, i64* %nmemb, align 8, !dbg !4131, !tbaa !1503
  %add = add i64 2, %23, !dbg !4132
  %call21 = call %struct._object* @PyTuple_New(i64 %add), !dbg !4133
  store %struct._object* %call21, %struct._object** %args, align 8, !dbg !4134, !tbaa !1364
  %24 = load %struct._object*, %struct._object** %args, align 8, !dbg !4135, !tbaa !1364
  %cmp22 = icmp eq %struct._object* %24, null, !dbg !4137
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !4138

if.then.23:                                       ; preds = %if.end.20
  br label %out, !dbg !4139

if.end.24:                                        ; preds = %if.end.20
  %25 = load %struct._object*, %struct._object** %mview, align 8, !dbg !4140, !tbaa !1364
  %26 = load %struct._object*, %struct._object** %args, align 8, !dbg !4141, !tbaa !1364
  %27 = bitcast %struct._object* %26 to %struct.PyTupleObject*, !dbg !4142
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %27, i32 0, i32 1, !dbg !4143
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !4144
  store %struct._object* %25, %struct._object** %arrayidx, align 8, !dbg !4145, !tbaa !1364
  %28 = load %struct._object*, %struct._object** %zero, align 8, !dbg !4146, !tbaa !1364
  %29 = load %struct._object*, %struct._object** %args, align 8, !dbg !4147, !tbaa !1364
  %30 = bitcast %struct._object* %29 to %struct.PyTupleObject*, !dbg !4148
  %ob_item25 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %30, i32 0, i32 1, !dbg !4149
  %arrayidx26 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item25, i32 0, i64 1, !dbg !4150
  store %struct._object* %28, %struct._object** %arrayidx26, align 8, !dbg !4151, !tbaa !1364
  %31 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4152, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !4154
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4154, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 19, !dbg !4155
  %33 = load i64, i64* %tp_flags, align 8, !dbg !4155, !tbaa !1605
  %and = and i64 %33, 134217728, !dbg !4156
  %cmp27 = icmp ne i64 %and, 0, !dbg !4157
  br i1 %cmp27, label %land.lhs.true, label %lor.lhs.false, !dbg !4158

lor.lhs.false:                                    ; preds = %if.end.24
  %34 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4159, !tbaa !1364
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !4161
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !4161, !tbaa !1374
  %tp_flags29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 19, !dbg !4162
  %36 = load i64, i64* %tp_flags29, align 8, !dbg !4162, !tbaa !1605
  %and30 = and i64 %36, 16777216, !dbg !4163
  %cmp31 = icmp ne i64 %and30, 0, !dbg !4164
  br i1 %cmp31, label %land.lhs.true, label %lor.lhs.false.32, !dbg !4165

lor.lhs.false.32:                                 ; preds = %lor.lhs.false
  %37 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4166, !tbaa !1364
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 1, !dbg !4167
  %38 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !4167, !tbaa !1374
  %cmp34 = icmp eq %struct._typeobject* %38, @PyFloat_Type, !dbg !4168
  br i1 %cmp34, label %land.lhs.true, label %lor.lhs.false.35, !dbg !4169

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.32
  %39 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4170, !tbaa !1364
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !4172
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !4172, !tbaa !1374
  %call37 = call i32 @PyType_IsSubtype(%struct._typeobject* %40, %struct._typeobject* @PyFloat_Type), !dbg !4173
  %tobool = icmp ne i32 %call37, 0, !dbg !4173
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4174

land.lhs.true:                                    ; preds = %lor.lhs.false.35, %lor.lhs.false.32, %lor.lhs.false, %if.end.24
  %41 = load i64, i64* %nmemb, align 8, !dbg !4175, !tbaa !1503
  %cmp38 = icmp eq i64 %41, 1, !dbg !4177
  br i1 %cmp38, label %if.then.39, label %if.else, !dbg !4178

if.then.39:                                       ; preds = %land.lhs.true
  %42 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4179, !tbaa !1364
  %43 = load %struct._object*, %struct._object** %args, align 8, !dbg !4181, !tbaa !1364
  %44 = bitcast %struct._object* %43 to %struct.PyTupleObject*, !dbg !4182
  %ob_item40 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %44, i32 0, i32 1, !dbg !4183
  %arrayidx41 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item40, i32 0, i64 2, !dbg !4184
  store %struct._object* %42, %struct._object** %arrayidx41, align 8, !dbg !4185, !tbaa !1364
  br label %if.end.69, !dbg !4186

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false.35
  %45 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4187, !tbaa !1364
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !4189
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !4189, !tbaa !1374
  %tp_flags43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 19, !dbg !4190
  %47 = load i64, i64* %tp_flags43, align 8, !dbg !4190, !tbaa !1605
  %and44 = and i64 %47, 33554432, !dbg !4191
  %cmp45 = icmp ne i64 %and44, 0, !dbg !4192
  br i1 %cmp45, label %land.lhs.true.51, label %lor.lhs.false.46, !dbg !4193

lor.lhs.false.46:                                 ; preds = %if.else
  %48 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4194, !tbaa !1364
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !4196
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !4196, !tbaa !1374
  %tp_flags48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 19, !dbg !4197
  %50 = load i64, i64* %tp_flags48, align 8, !dbg !4197, !tbaa !1605
  %and49 = and i64 %50, 67108864, !dbg !4198
  %cmp50 = icmp ne i64 %and49, 0, !dbg !4199
  br i1 %cmp50, label %land.lhs.true.51, label %if.else.67, !dbg !4200

land.lhs.true.51:                                 ; preds = %lor.lhs.false.46, %if.else
  %51 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4201, !tbaa !1364
  %call52 = call i64 @PySequence_Size(%struct._object* %51), !dbg !4202
  %52 = load i64, i64* %nmemb, align 8, !dbg !4203, !tbaa !1503
  %cmp53 = icmp eq i64 %call52, %52, !dbg !4204
  br i1 %cmp53, label %if.then.54, label %if.else.67, !dbg !4205

if.then.54:                                       ; preds = %land.lhs.true.51
  store i64 0, i64* %i, align 8, !dbg !4206, !tbaa !1503
  br label %for.cond, !dbg !4209

for.cond:                                         ; preds = %for.inc, %if.then.54
  %53 = load i64, i64* %i, align 8, !dbg !4210, !tbaa !1503
  %54 = load i64, i64* %nmemb, align 8, !dbg !4214, !tbaa !1503
  %cmp55 = icmp slt i64 %53, %54, !dbg !4215
  br i1 %cmp55, label %for.body, label %for.end, !dbg !4216

for.body:                                         ; preds = %for.cond
  %55 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4217, !tbaa !1364
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !4219
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !4219, !tbaa !1374
  %tp_flags57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 19, !dbg !4220
  %57 = load i64, i64* %tp_flags57, align 8, !dbg !4220, !tbaa !1605
  %and58 = and i64 %57, 33554432, !dbg !4221
  %cmp59 = icmp ne i64 %and58, 0, !dbg !4222
  br i1 %cmp59, label %cond.true, label %cond.false, !dbg !4223

cond.true:                                        ; preds = %for.body
  %58 = load i64, i64* %i, align 8, !dbg !4224, !tbaa !1503
  %59 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4226, !tbaa !1364
  %60 = bitcast %struct._object* %59 to %struct.PyListObject*, !dbg !4227
  %ob_item60 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %60, i32 0, i32 1, !dbg !4228
  %61 = load %struct._object**, %struct._object*** %ob_item60, align 8, !dbg !4228, !tbaa !1685
  %arrayidx61 = getelementptr %struct._object*, %struct._object** %61, i64 %58, !dbg !4229
  %62 = load %struct._object*, %struct._object** %arrayidx61, align 8, !dbg !4229, !tbaa !1364
  br label %cond.end, !dbg !4223

cond.false:                                       ; preds = %for.body
  %63 = load i64, i64* %i, align 8, !dbg !4230, !tbaa !1503
  %64 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !4232, !tbaa !1364
  %65 = bitcast %struct._object* %64 to %struct.PyTupleObject*, !dbg !4233
  %ob_item62 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %65, i32 0, i32 1, !dbg !4234
  %arrayidx63 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item62, i32 0, i64 %63, !dbg !4235
  %66 = load %struct._object*, %struct._object** %arrayidx63, align 8, !dbg !4235, !tbaa !1364
  br label %cond.end, !dbg !4223

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %62, %cond.true ], [ %66, %cond.false ], !dbg !4223
  store %struct._object* %cond, %struct._object** %x, align 8, !dbg !4236, !tbaa !1364
  %67 = load %struct._object*, %struct._object** %x, align 8, !dbg !4239, !tbaa !1364
  %68 = load i64, i64* %i, align 8, !dbg !4240, !tbaa !1503
  %add64 = add i64 2, %68, !dbg !4241
  %69 = load %struct._object*, %struct._object** %args, align 8, !dbg !4242, !tbaa !1364
  %70 = bitcast %struct._object* %69 to %struct.PyTupleObject*, !dbg !4243
  %ob_item65 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %70, i32 0, i32 1, !dbg !4244
  %arrayidx66 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item65, i32 0, i64 %add64, !dbg !4245
  store %struct._object* %67, %struct._object** %arrayidx66, align 8, !dbg !4246, !tbaa !1364
  br label %for.inc, !dbg !4247

for.inc:                                          ; preds = %cond.end
  %71 = load i64, i64* %i, align 8, !dbg !4248, !tbaa !1503
  %inc = add i64 %71, 1, !dbg !4248
  store i64 %inc, i64* %i, align 8, !dbg !4248, !tbaa !1503
  br label %for.cond, !dbg !4249

for.end:                                          ; preds = %for.cond
  br label %if.end.68, !dbg !4250

if.else.67:                                       ; preds = %land.lhs.true.51, %lor.lhs.false.46
  %72 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4251, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %72, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.66, i32 0, i32 0)), !dbg !4253
  br label %args_out, !dbg !4254

if.end.68:                                        ; preds = %for.end
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.68, %if.then.39
  %73 = load %struct._object*, %struct._object** %pack_into, align 8, !dbg !4255, !tbaa !1364
  %74 = load %struct._object*, %struct._object** %args, align 8, !dbg !4256, !tbaa !1364
  %call70 = call %struct._object* @PyObject_CallObject(%struct._object* %73, %struct._object* %74), !dbg !4257
  store %struct._object* %call70, %struct._object** %x, align 8, !dbg !4258, !tbaa !1364
  %75 = load %struct._object*, %struct._object** %x, align 8, !dbg !4259, !tbaa !1364
  %cmp71 = icmp ne %struct._object* %75, null, !dbg !4260
  br i1 %cmp71, label %if.then.72, label %if.end.78, !dbg !4261

if.then.72:                                       ; preds = %if.end.69
  br label %do.body, !dbg !4262

do.body:                                          ; preds = %if.then.72
  %76 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4263
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !4263
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !712, metadata !1360), !dbg !4265
  %77 = load %struct._object*, %struct._object** %x, align 8, !dbg !4266, !tbaa !1364
  store %struct._object* %77, %struct._object** %_py_decref_tmp, align 8, !dbg !4265, !tbaa !1364
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4267, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !4269
  %79 = load i64, i64* %ob_refcnt, align 8, !dbg !4270, !tbaa !1378
  %dec = add i64 %79, -1, !dbg !4270
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4270, !tbaa !1378
  %cmp73 = icmp ne i64 %dec, 0, !dbg !4271
  br i1 %cmp73, label %if.then.74, label %if.else.75, !dbg !4272

if.then.74:                                       ; preds = %do.body
  br label %if.end.77, !dbg !4273

if.else.75:                                       ; preds = %do.body
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4275, !tbaa !1364
  %ob_type76 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !4277
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type76, align 8, !dbg !4277, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !4278
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4278, !tbaa !1568
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4279, !tbaa !1364
  call void %82(%struct._object* %83), !dbg !4280
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.75, %if.then.74
  %84 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4281
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !4281
  br label %do.cond, !dbg !4283

do.cond:                                          ; preds = %if.end.77
  br label %do.end, !dbg !4284

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %ret, align 4, !dbg !4286, !tbaa !1844
  br label %if.end.78, !dbg !4287

if.end.78:                                        ; preds = %do.end, %if.end.69
  br label %args_out, !dbg !4288

args_out:                                         ; preds = %if.end.78, %if.else.67
  store i64 0, i64* %i, align 8, !dbg !4290, !tbaa !1503
  br label %for.cond.79, !dbg !4291

for.cond.79:                                      ; preds = %for.inc.93, %args_out
  %85 = load i64, i64* %i, align 8, !dbg !4292, !tbaa !1503
  %86 = load i64, i64* %nmemb, align 8, !dbg !4295, !tbaa !1503
  %add80 = add i64 2, %86, !dbg !4296
  %cmp81 = icmp slt i64 %85, %add80, !dbg !4297
  br i1 %cmp81, label %for.body.82, label %for.end.95, !dbg !4298

for.body.82:                                      ; preds = %for.cond.79
  br label %do.body.83, !dbg !4299

do.body.83:                                       ; preds = %for.body.82
  %87 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !4300
  call void @llvm.lifetime.start(i64 8, i8* %87) #1, !dbg !4300
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !716, metadata !1360), !dbg !4302
  %88 = load i64, i64* %i, align 8, !dbg !4303, !tbaa !1503
  %89 = load %struct._object*, %struct._object** %args, align 8, !dbg !4304, !tbaa !1364
  %90 = bitcast %struct._object* %89 to %struct.PyTupleObject*, !dbg !4305
  %ob_item84 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %90, i32 0, i32 1, !dbg !4306
  %arrayidx85 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item84, i32 0, i64 %88, !dbg !4307
  %91 = load %struct._object*, %struct._object** %arrayidx85, align 8, !dbg !4307, !tbaa !1364
  store %struct._object* %91, %struct._object** %_py_xincref_tmp, align 8, !dbg !4302, !tbaa !1364
  %92 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !4308, !tbaa !1364
  %cmp86 = icmp ne %struct._object* %92, null, !dbg !4310
  br i1 %cmp86, label %if.then.87, label %if.end.90, !dbg !4311

if.then.87:                                       ; preds = %do.body.83
  %93 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !4312, !tbaa !1364
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !4314
  %94 = load i64, i64* %ob_refcnt88, align 8, !dbg !4315, !tbaa !1378
  %inc89 = add i64 %94, 1, !dbg !4315
  store i64 %inc89, i64* %ob_refcnt88, align 8, !dbg !4315, !tbaa !1378
  br label %if.end.90, !dbg !4316

if.end.90:                                        ; preds = %if.then.87, %do.body.83
  %95 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !4317
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !4317
  br label %do.cond.91, !dbg !4320

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !4321

do.end.92:                                        ; preds = %do.cond.91
  br label %for.inc.93, !dbg !4323

for.inc.93:                                       ; preds = %do.end.92
  %96 = load i64, i64* %i, align 8, !dbg !4325, !tbaa !1503
  %inc94 = add i64 %96, 1, !dbg !4325
  store i64 %inc94, i64* %i, align 8, !dbg !4325, !tbaa !1503
  br label %for.cond.79, !dbg !4326

for.end.95:                                       ; preds = %for.cond.79
  br label %do.body.96, !dbg !4327

do.body.96:                                       ; preds = %for.end.95
  %97 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4328
  call void @llvm.lifetime.start(i64 8, i8* %97) #1, !dbg !4328
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !720, metadata !1360), !dbg !4330
  %98 = load %struct._object*, %struct._object** %args, align 8, !dbg !4331, !tbaa !1364
  store %struct._object* %98, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4330, !tbaa !1364
  %99 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4332, !tbaa !1364
  %cmp97 = icmp ne %struct._object* %99, null, !dbg !4333
  br i1 %cmp97, label %if.then.98, label %if.end.111, !dbg !4334

if.then.98:                                       ; preds = %do.body.96
  br label %do.body.99, !dbg !4335

do.body.99:                                       ; preds = %if.then.98
  %100 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !4337
  call void @llvm.lifetime.start(i64 8, i8* %100) #1, !dbg !4337
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp100, metadata !722, metadata !1360), !dbg !4339
  %101 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4340, !tbaa !1364
  store %struct._object* %101, %struct._object** %_py_decref_tmp100, align 8, !dbg !4339, !tbaa !1364
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !4341, !tbaa !1364
  %ob_refcnt101 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !4343
  %103 = load i64, i64* %ob_refcnt101, align 8, !dbg !4344, !tbaa !1378
  %dec102 = add i64 %103, -1, !dbg !4344
  store i64 %dec102, i64* %ob_refcnt101, align 8, !dbg !4344, !tbaa !1378
  %cmp103 = icmp ne i64 %dec102, 0, !dbg !4345
  br i1 %cmp103, label %if.then.104, label %if.else.105, !dbg !4346

if.then.104:                                      ; preds = %do.body.99
  br label %if.end.108, !dbg !4347

if.else.105:                                      ; preds = %do.body.99
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !4349, !tbaa !1364
  %ob_type106 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !4351
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type106, align 8, !dbg !4351, !tbaa !1374
  %tp_dealloc107 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !4352
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc107, align 8, !dbg !4352, !tbaa !1568
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !4353, !tbaa !1364
  call void %106(%struct._object* %107), !dbg !4354
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.105, %if.then.104
  %108 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !4355
  call void @llvm.lifetime.end(i64 8, i8* %108) #1, !dbg !4355
  br label %do.cond.109, !dbg !4357

do.cond.109:                                      ; preds = %if.end.108
  br label %do.end.110, !dbg !4358

do.end.110:                                       ; preds = %do.cond.109
  br label %if.end.111, !dbg !4360

if.end.111:                                       ; preds = %do.end.110, %do.body.96
  %109 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4362
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !4362
  br label %do.cond.112, !dbg !4365

do.cond.112:                                      ; preds = %if.end.111
  br label %do.end.113, !dbg !4366

do.end.113:                                       ; preds = %do.cond.112
  br label %out, !dbg !4368

out:                                              ; preds = %do.end.113, %if.then.23, %if.then.19, %if.then.15, %if.then.11, %if.then.6, %if.then.2
  br label %do.body.114, !dbg !4370

do.body.114:                                      ; preds = %out
  %110 = bitcast %struct._object** %_py_xdecref_tmp115 to i8*, !dbg !4371
  call void @llvm.lifetime.start(i64 8, i8* %110) #1, !dbg !4371
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp115, metadata !725, metadata !1360), !dbg !4373
  %111 = load %struct._object*, %struct._object** %pack_into, align 8, !dbg !4374, !tbaa !1364
  store %struct._object* %111, %struct._object** %_py_xdecref_tmp115, align 8, !dbg !4373, !tbaa !1364
  %112 = load %struct._object*, %struct._object** %_py_xdecref_tmp115, align 8, !dbg !4375, !tbaa !1364
  %cmp116 = icmp ne %struct._object* %112, null, !dbg !4376
  br i1 %cmp116, label %if.then.117, label %if.end.130, !dbg !4377

if.then.117:                                      ; preds = %do.body.114
  br label %do.body.118, !dbg !4378

do.body.118:                                      ; preds = %if.then.117
  %113 = bitcast %struct._object** %_py_decref_tmp119 to i8*, !dbg !4380
  call void @llvm.lifetime.start(i64 8, i8* %113) #1, !dbg !4380
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp119, metadata !727, metadata !1360), !dbg !4382
  %114 = load %struct._object*, %struct._object** %_py_xdecref_tmp115, align 8, !dbg !4383, !tbaa !1364
  store %struct._object* %114, %struct._object** %_py_decref_tmp119, align 8, !dbg !4382, !tbaa !1364
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8, !dbg !4384, !tbaa !1364
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0, !dbg !4386
  %116 = load i64, i64* %ob_refcnt120, align 8, !dbg !4387, !tbaa !1378
  %dec121 = add i64 %116, -1, !dbg !4387
  store i64 %dec121, i64* %ob_refcnt120, align 8, !dbg !4387, !tbaa !1378
  %cmp122 = icmp ne i64 %dec121, 0, !dbg !4388
  br i1 %cmp122, label %if.then.123, label %if.else.124, !dbg !4389

if.then.123:                                      ; preds = %do.body.118
  br label %if.end.127, !dbg !4390

if.else.124:                                      ; preds = %do.body.118
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8, !dbg !4392, !tbaa !1364
  %ob_type125 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1, !dbg !4394
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type125, align 8, !dbg !4394, !tbaa !1374
  %tp_dealloc126 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4, !dbg !4395
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc126, align 8, !dbg !4395, !tbaa !1568
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp119, align 8, !dbg !4396, !tbaa !1364
  call void %119(%struct._object* %120), !dbg !4397
  br label %if.end.127

if.end.127:                                       ; preds = %if.else.124, %if.then.123
  %121 = bitcast %struct._object** %_py_decref_tmp119 to i8*, !dbg !4398
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !4398
  br label %do.cond.128, !dbg !4400

do.cond.128:                                      ; preds = %if.end.127
  br label %do.end.129, !dbg !4401

do.end.129:                                       ; preds = %do.cond.128
  br label %if.end.130, !dbg !4403

if.end.130:                                       ; preds = %do.end.129, %do.body.114
  %122 = bitcast %struct._object** %_py_xdecref_tmp115 to i8*, !dbg !4405
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !4405
  br label %do.cond.131, !dbg !4406

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !4407

do.end.132:                                       ; preds = %do.cond.131
  br label %do.body.133, !dbg !4409

do.body.133:                                      ; preds = %do.end.132
  %123 = bitcast %struct._object** %_py_xdecref_tmp134 to i8*, !dbg !4410
  call void @llvm.lifetime.start(i64 8, i8* %123) #1, !dbg !4410
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp134, metadata !730, metadata !1360), !dbg !4412
  %124 = load %struct._object*, %struct._object** %zero, align 8, !dbg !4413, !tbaa !1364
  store %struct._object* %124, %struct._object** %_py_xdecref_tmp134, align 8, !dbg !4412, !tbaa !1364
  %125 = load %struct._object*, %struct._object** %_py_xdecref_tmp134, align 8, !dbg !4414, !tbaa !1364
  %cmp135 = icmp ne %struct._object* %125, null, !dbg !4415
  br i1 %cmp135, label %if.then.136, label %if.end.149, !dbg !4416

if.then.136:                                      ; preds = %do.body.133
  br label %do.body.137, !dbg !4417

do.body.137:                                      ; preds = %if.then.136
  %126 = bitcast %struct._object** %_py_decref_tmp138 to i8*, !dbg !4419
  call void @llvm.lifetime.start(i64 8, i8* %126) #1, !dbg !4419
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp138, metadata !732, metadata !1360), !dbg !4421
  %127 = load %struct._object*, %struct._object** %_py_xdecref_tmp134, align 8, !dbg !4422, !tbaa !1364
  store %struct._object* %127, %struct._object** %_py_decref_tmp138, align 8, !dbg !4421, !tbaa !1364
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp138, align 8, !dbg !4423, !tbaa !1364
  %ob_refcnt139 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 0, !dbg !4425
  %129 = load i64, i64* %ob_refcnt139, align 8, !dbg !4426, !tbaa !1378
  %dec140 = add i64 %129, -1, !dbg !4426
  store i64 %dec140, i64* %ob_refcnt139, align 8, !dbg !4426, !tbaa !1378
  %cmp141 = icmp ne i64 %dec140, 0, !dbg !4427
  br i1 %cmp141, label %if.then.142, label %if.else.143, !dbg !4428

if.then.142:                                      ; preds = %do.body.137
  br label %if.end.146, !dbg !4429

if.else.143:                                      ; preds = %do.body.137
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp138, align 8, !dbg !4431, !tbaa !1364
  %ob_type144 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 1, !dbg !4433
  %131 = load %struct._typeobject*, %struct._typeobject** %ob_type144, align 8, !dbg !4433, !tbaa !1374
  %tp_dealloc145 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %131, i32 0, i32 4, !dbg !4434
  %132 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc145, align 8, !dbg !4434, !tbaa !1568
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp138, align 8, !dbg !4435, !tbaa !1364
  call void %132(%struct._object* %133), !dbg !4436
  br label %if.end.146

if.end.146:                                       ; preds = %if.else.143, %if.then.142
  %134 = bitcast %struct._object** %_py_decref_tmp138 to i8*, !dbg !4437
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !4437
  br label %do.cond.147, !dbg !4439

do.cond.147:                                      ; preds = %if.end.146
  br label %do.end.148, !dbg !4440

do.end.148:                                       ; preds = %do.cond.147
  br label %if.end.149, !dbg !4442

if.end.149:                                       ; preds = %do.end.148, %do.body.133
  %135 = bitcast %struct._object** %_py_xdecref_tmp134 to i8*, !dbg !4444
  call void @llvm.lifetime.end(i64 8, i8* %135) #1, !dbg !4444
  br label %do.cond.150, !dbg !4445

do.cond.150:                                      ; preds = %if.end.149
  br label %do.end.151, !dbg !4446

do.end.151:                                       ; preds = %do.cond.150
  br label %do.body.152, !dbg !4448

do.body.152:                                      ; preds = %do.end.151
  %136 = bitcast %struct._object** %_py_xdecref_tmp153 to i8*, !dbg !4449
  call void @llvm.lifetime.start(i64 8, i8* %136) #1, !dbg !4449
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp153, metadata !735, metadata !1360), !dbg !4451
  %137 = load %struct._object*, %struct._object** %mview, align 8, !dbg !4452, !tbaa !1364
  store %struct._object* %137, %struct._object** %_py_xdecref_tmp153, align 8, !dbg !4451, !tbaa !1364
  %138 = load %struct._object*, %struct._object** %_py_xdecref_tmp153, align 8, !dbg !4453, !tbaa !1364
  %cmp154 = icmp ne %struct._object* %138, null, !dbg !4454
  br i1 %cmp154, label %if.then.155, label %if.end.168, !dbg !4455

if.then.155:                                      ; preds = %do.body.152
  br label %do.body.156, !dbg !4456

do.body.156:                                      ; preds = %if.then.155
  %139 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !4458
  call void @llvm.lifetime.start(i64 8, i8* %139) #1, !dbg !4458
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp157, metadata !737, metadata !1360), !dbg !4460
  %140 = load %struct._object*, %struct._object** %_py_xdecref_tmp153, align 8, !dbg !4461, !tbaa !1364
  store %struct._object* %140, %struct._object** %_py_decref_tmp157, align 8, !dbg !4460, !tbaa !1364
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !4462, !tbaa !1364
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 0, !dbg !4464
  %142 = load i64, i64* %ob_refcnt158, align 8, !dbg !4465, !tbaa !1378
  %dec159 = add i64 %142, -1, !dbg !4465
  store i64 %dec159, i64* %ob_refcnt158, align 8, !dbg !4465, !tbaa !1378
  %cmp160 = icmp ne i64 %dec159, 0, !dbg !4466
  br i1 %cmp160, label %if.then.161, label %if.else.162, !dbg !4467

if.then.161:                                      ; preds = %do.body.156
  br label %if.end.165, !dbg !4468

if.else.162:                                      ; preds = %do.body.156
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !4470, !tbaa !1364
  %ob_type163 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 1, !dbg !4472
  %144 = load %struct._typeobject*, %struct._typeobject** %ob_type163, align 8, !dbg !4472, !tbaa !1374
  %tp_dealloc164 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %144, i32 0, i32 4, !dbg !4473
  %145 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc164, align 8, !dbg !4473, !tbaa !1568
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !4474, !tbaa !1364
  call void %145(%struct._object* %146), !dbg !4475
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.162, %if.then.161
  %147 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !4476
  call void @llvm.lifetime.end(i64 8, i8* %147) #1, !dbg !4476
  br label %do.cond.166, !dbg !4478

do.cond.166:                                      ; preds = %if.end.165
  br label %do.end.167, !dbg !4479

do.end.167:                                       ; preds = %do.cond.166
  br label %if.end.168, !dbg !4481

if.end.168:                                       ; preds = %do.end.167, %do.body.152
  %148 = bitcast %struct._object** %_py_xdecref_tmp153 to i8*, !dbg !4483
  call void @llvm.lifetime.end(i64 8, i8* %148) #1, !dbg !4483
  br label %do.cond.169, !dbg !4484

do.cond.169:                                      ; preds = %if.end.168
  br label %do.end.170, !dbg !4485

do.end.170:                                       ; preds = %do.cond.169
  br label %do.body.171, !dbg !4487

do.body.171:                                      ; preds = %do.end.170
  %149 = bitcast %struct._object** %_py_xdecref_tmp172 to i8*, !dbg !4488
  call void @llvm.lifetime.start(i64 8, i8* %149) #1, !dbg !4488
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp172, metadata !740, metadata !1360), !dbg !4490
  %150 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !4491, !tbaa !1364
  store %struct._object* %150, %struct._object** %_py_xdecref_tmp172, align 8, !dbg !4490, !tbaa !1364
  %151 = load %struct._object*, %struct._object** %_py_xdecref_tmp172, align 8, !dbg !4492, !tbaa !1364
  %cmp173 = icmp ne %struct._object* %151, null, !dbg !4493
  br i1 %cmp173, label %if.then.174, label %if.end.187, !dbg !4494

if.then.174:                                      ; preds = %do.body.171
  br label %do.body.175, !dbg !4495

do.body.175:                                      ; preds = %if.then.174
  %152 = bitcast %struct._object** %_py_decref_tmp176 to i8*, !dbg !4497
  call void @llvm.lifetime.start(i64 8, i8* %152) #1, !dbg !4497
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp176, metadata !742, metadata !1360), !dbg !4499
  %153 = load %struct._object*, %struct._object** %_py_xdecref_tmp172, align 8, !dbg !4500, !tbaa !1364
  store %struct._object* %153, %struct._object** %_py_decref_tmp176, align 8, !dbg !4499, !tbaa !1364
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp176, align 8, !dbg !4501, !tbaa !1364
  %ob_refcnt177 = getelementptr inbounds %struct._object, %struct._object* %154, i32 0, i32 0, !dbg !4503
  %155 = load i64, i64* %ob_refcnt177, align 8, !dbg !4504, !tbaa !1378
  %dec178 = add i64 %155, -1, !dbg !4504
  store i64 %dec178, i64* %ob_refcnt177, align 8, !dbg !4504, !tbaa !1378
  %cmp179 = icmp ne i64 %dec178, 0, !dbg !4505
  br i1 %cmp179, label %if.then.180, label %if.else.181, !dbg !4506

if.then.180:                                      ; preds = %do.body.175
  br label %if.end.184, !dbg !4507

if.else.181:                                      ; preds = %do.body.175
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp176, align 8, !dbg !4509, !tbaa !1364
  %ob_type182 = getelementptr inbounds %struct._object, %struct._object* %156, i32 0, i32 1, !dbg !4511
  %157 = load %struct._typeobject*, %struct._typeobject** %ob_type182, align 8, !dbg !4511, !tbaa !1374
  %tp_dealloc183 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %157, i32 0, i32 4, !dbg !4512
  %158 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc183, align 8, !dbg !4512, !tbaa !1568
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp176, align 8, !dbg !4513, !tbaa !1364
  call void %158(%struct._object* %159), !dbg !4514
  br label %if.end.184

if.end.184:                                       ; preds = %if.else.181, %if.then.180
  %160 = bitcast %struct._object** %_py_decref_tmp176 to i8*, !dbg !4515
  call void @llvm.lifetime.end(i64 8, i8* %160) #1, !dbg !4515
  br label %do.cond.185, !dbg !4517

do.cond.185:                                      ; preds = %if.end.184
  br label %do.end.186, !dbg !4518

do.end.186:                                       ; preds = %do.cond.185
  br label %if.end.187, !dbg !4520

if.end.187:                                       ; preds = %do.end.186, %do.body.171
  %161 = bitcast %struct._object** %_py_xdecref_tmp172 to i8*, !dbg !4522
  call void @llvm.lifetime.end(i64 8, i8* %161) #1, !dbg !4522
  br label %do.cond.188, !dbg !4523

do.cond.188:                                      ; preds = %if.end.187
  br label %do.end.189, !dbg !4524

do.end.189:                                       ; preds = %do.cond.188
  br label %do.body.190, !dbg !4526

do.body.190:                                      ; preds = %do.end.189
  %162 = bitcast %struct._object** %_py_xdecref_tmp191 to i8*, !dbg !4527
  call void @llvm.lifetime.start(i64 8, i8* %162) #1, !dbg !4527
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp191, metadata !745, metadata !1360), !dbg !4529
  %163 = load %struct._object*, %struct._object** %format, align 8, !dbg !4530, !tbaa !1364
  store %struct._object* %163, %struct._object** %_py_xdecref_tmp191, align 8, !dbg !4529, !tbaa !1364
  %164 = load %struct._object*, %struct._object** %_py_xdecref_tmp191, align 8, !dbg !4531, !tbaa !1364
  %cmp192 = icmp ne %struct._object* %164, null, !dbg !4532
  br i1 %cmp192, label %if.then.193, label %if.end.206, !dbg !4533

if.then.193:                                      ; preds = %do.body.190
  br label %do.body.194, !dbg !4534

do.body.194:                                      ; preds = %if.then.193
  %165 = bitcast %struct._object** %_py_decref_tmp195 to i8*, !dbg !4536
  call void @llvm.lifetime.start(i64 8, i8* %165) #1, !dbg !4536
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp195, metadata !747, metadata !1360), !dbg !4538
  %166 = load %struct._object*, %struct._object** %_py_xdecref_tmp191, align 8, !dbg !4539, !tbaa !1364
  store %struct._object* %166, %struct._object** %_py_decref_tmp195, align 8, !dbg !4538, !tbaa !1364
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp195, align 8, !dbg !4540, !tbaa !1364
  %ob_refcnt196 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 0, !dbg !4542
  %168 = load i64, i64* %ob_refcnt196, align 8, !dbg !4543, !tbaa !1378
  %dec197 = add i64 %168, -1, !dbg !4543
  store i64 %dec197, i64* %ob_refcnt196, align 8, !dbg !4543, !tbaa !1378
  %cmp198 = icmp ne i64 %dec197, 0, !dbg !4544
  br i1 %cmp198, label %if.then.199, label %if.else.200, !dbg !4545

if.then.199:                                      ; preds = %do.body.194
  br label %if.end.203, !dbg !4546

if.else.200:                                      ; preds = %do.body.194
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp195, align 8, !dbg !4548, !tbaa !1364
  %ob_type201 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 1, !dbg !4550
  %170 = load %struct._typeobject*, %struct._typeobject** %ob_type201, align 8, !dbg !4550, !tbaa !1374
  %tp_dealloc202 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %170, i32 0, i32 4, !dbg !4551
  %171 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc202, align 8, !dbg !4551, !tbaa !1568
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp195, align 8, !dbg !4552, !tbaa !1364
  call void %171(%struct._object* %172), !dbg !4553
  br label %if.end.203

if.end.203:                                       ; preds = %if.else.200, %if.then.199
  %173 = bitcast %struct._object** %_py_decref_tmp195 to i8*, !dbg !4554
  call void @llvm.lifetime.end(i64 8, i8* %173) #1, !dbg !4554
  br label %do.cond.204, !dbg !4556

do.cond.204:                                      ; preds = %if.end.203
  br label %do.end.205, !dbg !4557

do.end.205:                                       ; preds = %do.cond.204
  br label %if.end.206, !dbg !4559

if.end.206:                                       ; preds = %do.end.205, %do.body.190
  %174 = bitcast %struct._object** %_py_xdecref_tmp191 to i8*, !dbg !4561
  call void @llvm.lifetime.end(i64 8, i8* %174) #1, !dbg !4561
  br label %do.cond.207, !dbg !4562

do.cond.207:                                      ; preds = %if.end.206
  br label %do.end.208, !dbg !4563

do.end.208:                                       ; preds = %do.cond.207
  %175 = load i32, i32* %ret, align 4, !dbg !4565, !tbaa !1844
  %176 = bitcast %struct._object** %x to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %176) #1, !dbg !4566
  %177 = bitcast i32* %ret to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 4, i8* %177) #1, !dbg !4566
  %178 = bitcast i64* %nmemb to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %178) #1, !dbg !4566
  %179 = bitcast i64* %i to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %179) #1, !dbg !4566
  %180 = bitcast %struct._object** %zero to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %180) #1, !dbg !4566
  %181 = bitcast %struct._object** %mview to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %181) #1, !dbg !4566
  %182 = bitcast %struct._object** %format to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %182) #1, !dbg !4566
  %183 = bitcast %struct._object** %args to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %183) #1, !dbg !4566
  %184 = bitcast %struct._object** %pack_into to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %184) #1, !dbg !4566
  %185 = bitcast %struct._object** %structobj to i8*, !dbg !4566
  call void @llvm.lifetime.end(i64 8, i8* %185) #1, !dbg !4566
  ret i32 %175, !dbg !4567
}

; Function Attrs: nounwind uwtable
define internal i32 @copy_buffer(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %mem = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !757, metadata !1360), !dbg !4568
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !758, metadata !1360), !dbg !4569
  %0 = bitcast i8** %mem to i8*, !dbg !4570
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4570
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !759, metadata !1360), !dbg !4571
  store i8* null, i8** %mem, align 8, !dbg !4571, !tbaa !1364
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4572, !tbaa !1364
  %2 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4574, !tbaa !1364
  %call = call i32 @cmp_structure(%struct.bufferinfo* %1, %struct.bufferinfo* %2), !dbg !4575
  %cmp = icmp slt i32 %call, 0, !dbg !4576
  br i1 %cmp, label %if.then, label %if.end, !dbg !4577

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4578, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.67, i32 0, i32 0)), !dbg !4580
  store i32 -1, i32* %retval, !dbg !4581
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4581

if.end:                                           ; preds = %entry
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4582, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 9, !dbg !4584
  %5 = load i64*, i64** %suboffsets, align 8, !dbg !4584, !tbaa !2033
  %tobool = icmp ne i64* %5, null, !dbg !4582
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !4585

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4586, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 5, !dbg !4588
  %7 = load i32, i32* %ndim, align 4, !dbg !4588, !tbaa !1629
  %sub = sub i32 %7, 1, !dbg !4589
  %idxprom = sext i32 %sub to i64, !dbg !4590
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4590, !tbaa !1364
  %suboffsets1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 9, !dbg !4591
  %9 = load i64*, i64** %suboffsets1, align 8, !dbg !4591, !tbaa !2033
  %arrayidx = getelementptr i64, i64* %9, i64 %idxprom, !dbg !4590
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4590, !tbaa !1503
  %cmp2 = icmp sge i64 %10, 0, !dbg !4592
  br i1 %cmp2, label %if.then.26, label %lor.lhs.false, !dbg !4593

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4594, !tbaa !1364
  %suboffsets3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 9, !dbg !4595
  %12 = load i64*, i64** %suboffsets3, align 8, !dbg !4595, !tbaa !2033
  %tobool4 = icmp ne i64* %12, null, !dbg !4594
  br i1 %tobool4, label %land.lhs.true.5, label %lor.lhs.false.12, !dbg !4596

land.lhs.true.5:                                  ; preds = %lor.lhs.false
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4597, !tbaa !1364
  %ndim6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 5, !dbg !4598
  %14 = load i32, i32* %ndim6, align 4, !dbg !4598, !tbaa !1629
  %sub7 = sub i32 %14, 1, !dbg !4599
  %idxprom8 = sext i32 %sub7 to i64, !dbg !4600
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4600, !tbaa !1364
  %suboffsets9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 9, !dbg !4601
  %16 = load i64*, i64** %suboffsets9, align 8, !dbg !4601, !tbaa !2033
  %arrayidx10 = getelementptr i64, i64* %16, i64 %idxprom8, !dbg !4600
  %17 = load i64, i64* %arrayidx10, align 8, !dbg !4600, !tbaa !1503
  %cmp11 = icmp sge i64 %17, 0, !dbg !4602
  br i1 %cmp11, label %if.then.26, label %lor.lhs.false.12, !dbg !4603

lor.lhs.false.12:                                 ; preds = %land.lhs.true.5, %lor.lhs.false
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4604, !tbaa !1364
  %ndim13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 5, !dbg !4605
  %19 = load i32, i32* %ndim13, align 4, !dbg !4605, !tbaa !1629
  %sub14 = sub i32 %19, 1, !dbg !4606
  %idxprom15 = sext i32 %sub14 to i64, !dbg !4607
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4607, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 8, !dbg !4608
  %21 = load i64*, i64** %strides, align 8, !dbg !4608, !tbaa !2024
  %arrayidx16 = getelementptr i64, i64* %21, i64 %idxprom15, !dbg !4607
  %22 = load i64, i64* %arrayidx16, align 8, !dbg !4607, !tbaa !1503
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4609, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 3, !dbg !4610
  %24 = load i64, i64* %itemsize, align 8, !dbg !4610, !tbaa !1739
  %cmp17 = icmp ne i64 %22, %24, !dbg !4611
  br i1 %cmp17, label %if.then.26, label %lor.lhs.false.18, !dbg !4612

lor.lhs.false.18:                                 ; preds = %lor.lhs.false.12
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4613, !tbaa !1364
  %ndim19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 5, !dbg !4614
  %26 = load i32, i32* %ndim19, align 4, !dbg !4614, !tbaa !1629
  %sub20 = sub i32 %26, 1, !dbg !4615
  %idxprom21 = sext i32 %sub20 to i64, !dbg !4616
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4616, !tbaa !1364
  %strides22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 8, !dbg !4617
  %28 = load i64*, i64** %strides22, align 8, !dbg !4617, !tbaa !2024
  %arrayidx23 = getelementptr i64, i64* %28, i64 %idxprom21, !dbg !4616
  %29 = load i64, i64* %arrayidx23, align 8, !dbg !4616, !tbaa !1503
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4618, !tbaa !1364
  %itemsize24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 3, !dbg !4619
  %31 = load i64, i64* %itemsize24, align 8, !dbg !4619, !tbaa !1739
  %cmp25 = icmp ne i64 %29, %31, !dbg !4620
  br i1 %cmp25, label %if.then.26, label %if.end.37, !dbg !4621

if.then.26:                                       ; preds = %lor.lhs.false.18, %lor.lhs.false.12, %land.lhs.true.5, %land.lhs.true
  %32 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4622, !tbaa !1364
  %ndim27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %32, i32 0, i32 5, !dbg !4624
  %33 = load i32, i32* %ndim27, align 4, !dbg !4624, !tbaa !1629
  %sub28 = sub i32 %33, 1, !dbg !4625
  %idxprom29 = sext i32 %sub28 to i64, !dbg !4626
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4626, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 7, !dbg !4627
  %35 = load i64*, i64** %shape, align 8, !dbg !4627, !tbaa !1716
  %arrayidx30 = getelementptr i64, i64* %35, i64 %idxprom29, !dbg !4626
  %36 = load i64, i64* %arrayidx30, align 8, !dbg !4626, !tbaa !1503
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4628, !tbaa !1364
  %itemsize31 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 3, !dbg !4629
  %38 = load i64, i64* %itemsize31, align 8, !dbg !4629, !tbaa !1739
  %mul = mul i64 %36, %38, !dbg !4630
  %call32 = call i8* @PyMem_Malloc(i64 %mul), !dbg !4631
  store i8* %call32, i8** %mem, align 8, !dbg !4632, !tbaa !1364
  %39 = load i8*, i8** %mem, align 8, !dbg !4633, !tbaa !1364
  %cmp33 = icmp eq i8* %39, null, !dbg !4635
  br i1 %cmp33, label %if.then.34, label %if.end.36, !dbg !4636

if.then.34:                                       ; preds = %if.then.26
  %call35 = call %struct._object* @PyErr_NoMemory(), !dbg !4637
  store i32 -1, i32* %retval, !dbg !4639
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4639

if.end.36:                                        ; preds = %if.then.26
  br label %if.end.37, !dbg !4640

if.end.37:                                        ; preds = %if.end.36, %lor.lhs.false.18
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4641, !tbaa !1364
  %shape38 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 7, !dbg !4642
  %41 = load i64*, i64** %shape38, align 8, !dbg !4642, !tbaa !1716
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4643, !tbaa !1364
  %ndim39 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 5, !dbg !4644
  %43 = load i32, i32* %ndim39, align 4, !dbg !4644, !tbaa !1629
  %conv = sext i32 %43 to i64, !dbg !4643
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4645, !tbaa !1364
  %itemsize40 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 3, !dbg !4646
  %45 = load i64, i64* %itemsize40, align 8, !dbg !4646, !tbaa !1739
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4647, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 0, !dbg !4648
  %47 = load i8*, i8** %buf, align 8, !dbg !4648, !tbaa !2077
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4649, !tbaa !1364
  %strides41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 8, !dbg !4650
  %49 = load i64*, i64** %strides41, align 8, !dbg !4650, !tbaa !2024
  %50 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4651, !tbaa !1364
  %suboffsets42 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %50, i32 0, i32 9, !dbg !4652
  %51 = load i64*, i64** %suboffsets42, align 8, !dbg !4652, !tbaa !2033
  %52 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4653, !tbaa !1364
  %buf43 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %52, i32 0, i32 0, !dbg !4654
  %53 = load i8*, i8** %buf43, align 8, !dbg !4654, !tbaa !2077
  %54 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4655, !tbaa !1364
  %strides44 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %54, i32 0, i32 8, !dbg !4656
  %55 = load i64*, i64** %strides44, align 8, !dbg !4656, !tbaa !2024
  %56 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4657, !tbaa !1364
  %suboffsets45 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %56, i32 0, i32 9, !dbg !4658
  %57 = load i64*, i64** %suboffsets45, align 8, !dbg !4658, !tbaa !2033
  %58 = load i8*, i8** %mem, align 8, !dbg !4659, !tbaa !1364
  call void @copy_rec(i64* %41, i64 %conv, i64 %45, i8* %47, i64* %49, i64* %51, i8* %53, i64* %55, i64* %57, i8* %58), !dbg !4660
  br label %do.body, !dbg !4661

do.body:                                          ; preds = %if.end.37
  %59 = load i8*, i8** %mem, align 8, !dbg !4662, !tbaa !1364
  %tobool46 = icmp ne i8* %59, null, !dbg !4662
  br i1 %tobool46, label %if.then.47, label %if.end.48, !dbg !4666

if.then.47:                                       ; preds = %do.body
  %60 = load i8*, i8** %mem, align 8, !dbg !4667, !tbaa !1364
  call void @PyMem_Free(i8* %60), !dbg !4669
  br label %if.end.48, !dbg !4669

if.end.48:                                        ; preds = %if.then.47, %do.body
  br label %do.cond, !dbg !4670

do.cond:                                          ; preds = %if.end.48
  br label %do.end, !dbg !4673

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !4675
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4675

cleanup:                                          ; preds = %do.end, %if.then.34, %if.then
  %61 = bitcast i8** %mem to i8*, !dbg !4676
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !4676
  %62 = load i32, i32* %retval, !dbg !4676
  ret i32 %62, !dbg !4676
}

declare %struct._object* @PyObject_CallFunctionObjArgs(%struct._object*, ...) #3

; Function Attrs: nounwind uwtable
define internal i64 @get_nmemb(%struct._object* %s) #0 {
entry:
  %s.addr = alloca %struct._object*, align 8
  store %struct._object* %s, %struct._object** %s.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %s.addr, metadata !752, metadata !1360), !dbg !4677
  %0 = load %struct._object*, %struct._object** %s.addr, align 8, !dbg !4678, !tbaa !1364
  %1 = bitcast %struct._object* %0 to %struct.PyPartialStructObject*, !dbg !4679
  %s_len = getelementptr inbounds %struct.PyPartialStructObject, %struct.PyPartialStructObject* %1, i32 0, i32 2, !dbg !4680
  %2 = load i64, i64* %s_len, align 8, !dbg !4680, !tbaa !4681
  ret i64 %2, !dbg !4683
}

declare %struct._object* @PyLong_FromLong(i64) #3

declare i32 @PyType_IsSubtype(%struct._typeobject*, %struct._typeobject*) #3

declare i64 @PySequence_Size(%struct._object*) #3

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @cmp_structure(%struct.bufferinfo* %dest, %struct.bufferinfo* %src) #0 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca %struct.bufferinfo*, align 8
  %src.addr = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.bufferinfo* %dest, %struct.bufferinfo** %dest.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %dest.addr, metadata !762, metadata !1360), !dbg !4684
  store %struct.bufferinfo* %src, %struct.bufferinfo** %src.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src.addr, metadata !763, metadata !1360), !dbg !4685
  %0 = bitcast i64* %i to i8*, !dbg !4686
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4686
  call void @llvm.dbg.declare(metadata i64* %i, metadata !764, metadata !1360), !dbg !4687
  %1 = bitcast i64* %__s1_len to i8*, !dbg !4688
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4688
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !765, metadata !1360), !dbg !4689
  %2 = bitcast i64* %__s2_len to i8*, !dbg !4688
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4688
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !768, metadata !1360), !dbg !4690
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4691, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 6, !dbg !4692
  %4 = load i8*, i8** %format, align 8, !dbg !4692, !tbaa !1737
  %cmp = icmp eq i8* %4, null, !dbg !4693
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4691

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4694

cond.false:                                       ; preds = %entry
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4696, !tbaa !1364
  %format1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 6, !dbg !4698
  %6 = load i8*, i8** %format1, align 8, !dbg !4698, !tbaa !1737
  br label %cond.end, !dbg !4691

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), %cond.true ], [ %6, %cond.false ], !dbg !4691
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4699, !tbaa !1364
  %format2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 6, !dbg !4702
  %8 = load i8*, i8** %format2, align 8, !dbg !4702, !tbaa !1737
  %cmp3 = icmp eq i8* %8, null, !dbg !4703
  br i1 %cmp3, label %cond.true.4, label %cond.false.5, !dbg !4704

cond.true.4:                                      ; preds = %cond.end
  br label %cond.end.7, !dbg !4705

cond.false.5:                                     ; preds = %cond.end
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4707, !tbaa !1364
  %format6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 6, !dbg !4709
  %10 = load i8*, i8** %format6, align 8, !dbg !4709, !tbaa !1737
  br label %cond.end.7, !dbg !4704

cond.end.7:                                       ; preds = %cond.false.5, %cond.true.4
  %cond8 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), %cond.true.4 ], [ %10, %cond.false.5 ], !dbg !4704
  %call = call i32 @strcmp(i8* %cond, i8* %cond8) #1, !dbg !4710
  store i32 %call, i32* %tmp, !dbg !4688, !tbaa !1844
  %11 = bitcast i64* %__s2_len to i8*, !dbg !4713
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !4713
  %12 = bitcast i64* %__s1_len to i8*, !dbg !4713
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !4713
  %13 = load i32, i32* %tmp, !dbg !4714, !tbaa !1844
  %cmp9 = icmp ne i32 %13, 0, !dbg !4715
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !4716

lor.lhs.false:                                    ; preds = %cond.end.7
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4717, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 3, !dbg !4718
  %15 = load i64, i64* %itemsize, align 8, !dbg !4718, !tbaa !1739
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4719, !tbaa !1364
  %itemsize10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 3, !dbg !4720
  %17 = load i64, i64* %itemsize10, align 8, !dbg !4720, !tbaa !1739
  %cmp11 = icmp ne i64 %15, %17, !dbg !4721
  br i1 %cmp11, label %if.then, label %lor.lhs.false.12, !dbg !4722

lor.lhs.false.12:                                 ; preds = %lor.lhs.false
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4723, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 5, !dbg !4724
  %19 = load i32, i32* %ndim, align 4, !dbg !4724, !tbaa !1629
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4725, !tbaa !1364
  %ndim13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 5, !dbg !4726
  %21 = load i32, i32* %ndim13, align 4, !dbg !4726, !tbaa !1629
  %cmp14 = icmp ne i32 %19, %21, !dbg !4727
  br i1 %cmp14, label %if.then, label %if.end, !dbg !4728

if.then:                                          ; preds = %lor.lhs.false.12, %lor.lhs.false, %cond.end.7
  store i32 -1, i32* %retval, !dbg !4729
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4729

if.end:                                           ; preds = %lor.lhs.false.12
  store i64 0, i64* %i, align 8, !dbg !4730, !tbaa !1503
  br label %for.cond, !dbg !4732

for.cond:                                         ; preds = %for.inc, %if.end
  %22 = load i64, i64* %i, align 8, !dbg !4733, !tbaa !1503
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4737, !tbaa !1364
  %ndim15 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 5, !dbg !4738
  %24 = load i32, i32* %ndim15, align 4, !dbg !4738, !tbaa !1629
  %conv = sext i32 %24 to i64, !dbg !4737
  %cmp16 = icmp slt i64 %22, %conv, !dbg !4739
  br i1 %cmp16, label %for.body, label %for.end, !dbg !4740

for.body:                                         ; preds = %for.cond
  %25 = load i64, i64* %i, align 8, !dbg !4741, !tbaa !1503
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4744, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 7, !dbg !4745
  %27 = load i64*, i64** %shape, align 8, !dbg !4745, !tbaa !1716
  %arrayidx = getelementptr i64, i64* %27, i64 %25, !dbg !4744
  %28 = load i64, i64* %arrayidx, align 8, !dbg !4744, !tbaa !1503
  %29 = load i64, i64* %i, align 8, !dbg !4746, !tbaa !1503
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %src.addr, align 8, !dbg !4747, !tbaa !1364
  %shape18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 7, !dbg !4748
  %31 = load i64*, i64** %shape18, align 8, !dbg !4748, !tbaa !1716
  %arrayidx19 = getelementptr i64, i64* %31, i64 %29, !dbg !4747
  %32 = load i64, i64* %arrayidx19, align 8, !dbg !4747, !tbaa !1503
  %cmp20 = icmp ne i64 %28, %32, !dbg !4749
  br i1 %cmp20, label %if.then.22, label %if.end.23, !dbg !4750

if.then.22:                                       ; preds = %for.body
  store i32 -1, i32* %retval, !dbg !4751
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4751

if.end.23:                                        ; preds = %for.body
  %33 = load i64, i64* %i, align 8, !dbg !4752, !tbaa !1503
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %dest.addr, align 8, !dbg !4754, !tbaa !1364
  %shape24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 7, !dbg !4755
  %35 = load i64*, i64** %shape24, align 8, !dbg !4755, !tbaa !1716
  %arrayidx25 = getelementptr i64, i64* %35, i64 %33, !dbg !4754
  %36 = load i64, i64* %arrayidx25, align 8, !dbg !4754, !tbaa !1503
  %cmp26 = icmp eq i64 %36, 0, !dbg !4756
  br i1 %cmp26, label %if.then.28, label %if.end.29, !dbg !4757

if.then.28:                                       ; preds = %if.end.23
  br label %for.end, !dbg !4758

if.end.29:                                        ; preds = %if.end.23
  br label %for.inc, !dbg !4759

for.inc:                                          ; preds = %if.end.29
  %37 = load i64, i64* %i, align 8, !dbg !4760, !tbaa !1503
  %inc = add i64 %37, 1, !dbg !4760
  store i64 %inc, i64* %i, align 8, !dbg !4760, !tbaa !1503
  br label %for.cond, !dbg !4761

for.end:                                          ; preds = %if.then.28, %for.cond
  store i32 0, i32* %retval, !dbg !4762
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4762

cleanup:                                          ; preds = %for.end, %if.then.22, %if.then
  %38 = bitcast i64* %i to i8*, !dbg !4763
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !4763
  %39 = load i32, i32* %retval, !dbg !4763
  ret i32 %39, !dbg !4763
}

; Function Attrs: nounwind uwtable
define internal void @copy_rec(i64* %shape, i64 %ndim, i64 %itemsize, i8* %dptr, i64* %dstrides, i64* %dsuboffsets, i8* %sptr, i64* %sstrides, i64* %ssuboffsets, i8* %mem) #0 {
entry:
  %shape.addr = alloca i64*, align 8
  %ndim.addr = alloca i64, align 8
  %itemsize.addr = alloca i64, align 8
  %dptr.addr = alloca i8*, align 8
  %dstrides.addr = alloca i64*, align 8
  %dsuboffsets.addr = alloca i64*, align 8
  %sptr.addr = alloca i8*, align 8
  %sstrides.addr = alloca i64*, align 8
  %ssuboffsets.addr = alloca i64*, align 8
  %mem.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %p = alloca i8*, align 8
  %xsptr = alloca i8*, align 8
  %xdptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %xdptr50 = alloca i8*, align 8
  %xsptr61 = alloca i8*, align 8
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !773, metadata !1360), !dbg !4764
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !774, metadata !1360), !dbg !4765
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !775, metadata !1360), !dbg !4766
  store i8* %dptr, i8** %dptr.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %dptr.addr, metadata !776, metadata !1360), !dbg !4767
  store i64* %dstrides, i64** %dstrides.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %dstrides.addr, metadata !777, metadata !1360), !dbg !4768
  store i64* %dsuboffsets, i64** %dsuboffsets.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %dsuboffsets.addr, metadata !778, metadata !1360), !dbg !4769
  store i8* %sptr, i8** %sptr.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %sptr.addr, metadata !779, metadata !1360), !dbg !4770
  store i64* %sstrides, i64** %sstrides.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %sstrides.addr, metadata !780, metadata !1360), !dbg !4771
  store i64* %ssuboffsets, i64** %ssuboffsets.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %ssuboffsets.addr, metadata !781, metadata !1360), !dbg !4772
  store i8* %mem, i8** %mem.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !782, metadata !1360), !dbg !4773
  %0 = bitcast i64* %i to i8*, !dbg !4774
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4774
  call void @llvm.dbg.declare(metadata i64* %i, metadata !783, metadata !1360), !dbg !4775
  %1 = load i64, i64* %ndim.addr, align 8, !dbg !4776, !tbaa !1503
  %cmp = icmp eq i64 %1, 1, !dbg !4777
  br i1 %cmp, label %if.then, label %if.end.45, !dbg !4778

if.then:                                          ; preds = %entry
  %2 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4779, !tbaa !1364
  %tobool = icmp ne i64* %2, null, !dbg !4779
  br i1 %tobool, label %land.lhs.true, label %land.lhs.true.2, !dbg !4780

land.lhs.true:                                    ; preds = %if.then
  %3 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4781, !tbaa !1364
  %arrayidx = getelementptr i64, i64* %3, i64 0, !dbg !4781
  %4 = load i64, i64* %arrayidx, align 8, !dbg !4781, !tbaa !1503
  %cmp1 = icmp sge i64 %4, 0, !dbg !4783
  br i1 %cmp1, label %if.else, label %land.lhs.true.2, !dbg !4784

land.lhs.true.2:                                  ; preds = %land.lhs.true, %if.then
  %5 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4785, !tbaa !1364
  %tobool3 = icmp ne i64* %5, null, !dbg !4785
  br i1 %tobool3, label %land.lhs.true.4, label %land.lhs.true.7, !dbg !4788

land.lhs.true.4:                                  ; preds = %land.lhs.true.2
  %6 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4789, !tbaa !1364
  %arrayidx5 = getelementptr i64, i64* %6, i64 0, !dbg !4789
  %7 = load i64, i64* %arrayidx5, align 8, !dbg !4789, !tbaa !1503
  %cmp6 = icmp sge i64 %7, 0, !dbg !4791
  br i1 %cmp6, label %if.else, label %land.lhs.true.7, !dbg !4792

land.lhs.true.7:                                  ; preds = %land.lhs.true.4, %land.lhs.true.2
  %8 = load i64*, i64** %dstrides.addr, align 8, !dbg !4793, !tbaa !1364
  %arrayidx8 = getelementptr i64, i64* %8, i64 0, !dbg !4793
  %9 = load i64, i64* %arrayidx8, align 8, !dbg !4793, !tbaa !1503
  %10 = load i64, i64* %itemsize.addr, align 8, !dbg !4794, !tbaa !1503
  %cmp9 = icmp eq i64 %9, %10, !dbg !4795
  br i1 %cmp9, label %land.lhs.true.10, label %if.else, !dbg !4796

land.lhs.true.10:                                 ; preds = %land.lhs.true.7
  %11 = load i64*, i64** %sstrides.addr, align 8, !dbg !4797, !tbaa !1364
  %arrayidx11 = getelementptr i64, i64* %11, i64 0, !dbg !4797
  %12 = load i64, i64* %arrayidx11, align 8, !dbg !4797, !tbaa !1503
  %13 = load i64, i64* %itemsize.addr, align 8, !dbg !4798, !tbaa !1503
  %cmp12 = icmp eq i64 %12, %13, !dbg !4799
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !4800

if.then.13:                                       ; preds = %land.lhs.true.10
  %14 = load i8*, i8** %dptr.addr, align 8, !dbg !4801, !tbaa !1364
  %15 = load i8*, i8** %sptr.addr, align 8, !dbg !4803, !tbaa !1364
  %16 = load i64*, i64** %shape.addr, align 8, !dbg !4804, !tbaa !1364
  %arrayidx14 = getelementptr i64, i64* %16, i64 0, !dbg !4804
  %17 = load i64, i64* %arrayidx14, align 8, !dbg !4804, !tbaa !1503
  %18 = load i64, i64* %itemsize.addr, align 8, !dbg !4805, !tbaa !1503
  %mul = mul i64 %17, %18, !dbg !4806
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %14, i8* %15, i64 %mul, i32 1, i1 false), !dbg !4807
  br label %if.end, !dbg !4808

if.else:                                          ; preds = %land.lhs.true.10, %land.lhs.true.7, %land.lhs.true.4, %land.lhs.true
  %19 = bitcast i8** %p to i8*, !dbg !4809
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !4809
  call void @llvm.dbg.declare(metadata i8** %p, metadata !784, metadata !1360), !dbg !4810
  store i64 0, i64* %i, align 8, !dbg !4811, !tbaa !1503
  %20 = load i8*, i8** %mem.addr, align 8, !dbg !4812, !tbaa !1364
  store i8* %20, i8** %p, align 8, !dbg !4813, !tbaa !1364
  br label %for.cond, !dbg !4814

for.cond:                                         ; preds = %for.inc, %if.else
  %21 = load i64, i64* %i, align 8, !dbg !4815, !tbaa !1503
  %22 = load i64*, i64** %shape.addr, align 8, !dbg !4818, !tbaa !1364
  %arrayidx15 = getelementptr i64, i64* %22, i64 0, !dbg !4818
  %23 = load i64, i64* %arrayidx15, align 8, !dbg !4818, !tbaa !1503
  %cmp16 = icmp slt i64 %21, %23, !dbg !4819
  br i1 %cmp16, label %for.body, label %for.end, !dbg !4820

for.body:                                         ; preds = %for.cond
  %24 = bitcast i8** %xsptr to i8*, !dbg !4821
  call void @llvm.lifetime.start(i64 8, i8* %24) #1, !dbg !4821
  call void @llvm.dbg.declare(metadata i8** %xsptr, metadata !789, metadata !1360), !dbg !4822
  %25 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4823, !tbaa !1364
  %tobool17 = icmp ne i64* %25, null, !dbg !4823
  br i1 %tobool17, label %land.lhs.true.18, label %cond.false, !dbg !4824

land.lhs.true.18:                                 ; preds = %for.body
  %26 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4825, !tbaa !1364
  %arrayidx19 = getelementptr i64, i64* %26, i64 0, !dbg !4825
  %27 = load i64, i64* %arrayidx19, align 8, !dbg !4825, !tbaa !1503
  %cmp20 = icmp sge i64 %27, 0, !dbg !4827
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !4828

cond.true:                                        ; preds = %land.lhs.true.18
  %28 = load i8*, i8** %sptr.addr, align 8, !dbg !4829, !tbaa !1364
  %29 = bitcast i8* %28 to i8**, !dbg !4831
  %30 = load i8*, i8** %29, align 8, !dbg !4832, !tbaa !1364
  %31 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4833, !tbaa !1364
  %arrayidx21 = getelementptr i64, i64* %31, i64 0, !dbg !4833
  %32 = load i64, i64* %arrayidx21, align 8, !dbg !4833, !tbaa !1503
  %add.ptr = getelementptr i8, i8* %30, i64 %32, !dbg !4834
  br label %cond.end, !dbg !4828

cond.false:                                       ; preds = %land.lhs.true.18, %for.body
  %33 = load i8*, i8** %sptr.addr, align 8, !dbg !4835, !tbaa !1364
  br label %cond.end, !dbg !4828

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %33, %cond.false ], !dbg !4828
  store i8* %cond, i8** %xsptr, align 8, !dbg !4838, !tbaa !1364
  %34 = load i8*, i8** %p, align 8, !dbg !4841, !tbaa !1364
  %35 = load i8*, i8** %xsptr, align 8, !dbg !4842, !tbaa !1364
  %36 = load i64, i64* %itemsize.addr, align 8, !dbg !4843, !tbaa !1503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 %36, i32 1, i1 false), !dbg !4844
  %37 = bitcast i8** %xsptr to i8*, !dbg !4845
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !4845
  br label %for.inc, !dbg !4846

for.inc:                                          ; preds = %cond.end
  %38 = load i64, i64* %itemsize.addr, align 8, !dbg !4847, !tbaa !1503
  %39 = load i8*, i8** %p, align 8, !dbg !4848, !tbaa !1364
  %add.ptr22 = getelementptr i8, i8* %39, i64 %38, !dbg !4848
  store i8* %add.ptr22, i8** %p, align 8, !dbg !4848, !tbaa !1364
  %40 = load i64*, i64** %sstrides.addr, align 8, !dbg !4849, !tbaa !1364
  %arrayidx23 = getelementptr i64, i64* %40, i64 0, !dbg !4849
  %41 = load i64, i64* %arrayidx23, align 8, !dbg !4849, !tbaa !1503
  %42 = load i8*, i8** %sptr.addr, align 8, !dbg !4850, !tbaa !1364
  %add.ptr24 = getelementptr i8, i8* %42, i64 %41, !dbg !4850
  store i8* %add.ptr24, i8** %sptr.addr, align 8, !dbg !4850, !tbaa !1364
  %43 = load i64, i64* %i, align 8, !dbg !4851, !tbaa !1503
  %inc = add i64 %43, 1, !dbg !4851
  store i64 %inc, i64* %i, align 8, !dbg !4851, !tbaa !1503
  br label %for.cond, !dbg !4852

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !4853, !tbaa !1503
  %44 = load i8*, i8** %mem.addr, align 8, !dbg !4854, !tbaa !1364
  store i8* %44, i8** %p, align 8, !dbg !4855, !tbaa !1364
  br label %for.cond.25, !dbg !4856

for.cond.25:                                      ; preds = %for.inc.39, %for.end
  %45 = load i64, i64* %i, align 8, !dbg !4857, !tbaa !1503
  %46 = load i64*, i64** %shape.addr, align 8, !dbg !4860, !tbaa !1364
  %arrayidx26 = getelementptr i64, i64* %46, i64 0, !dbg !4860
  %47 = load i64, i64* %arrayidx26, align 8, !dbg !4860, !tbaa !1503
  %cmp27 = icmp slt i64 %45, %47, !dbg !4861
  br i1 %cmp27, label %for.body.28, label %for.end.44, !dbg !4862

for.body.28:                                      ; preds = %for.cond.25
  %48 = bitcast i8** %xdptr to i8*, !dbg !4863
  call void @llvm.lifetime.start(i64 8, i8* %48) #1, !dbg !4863
  call void @llvm.dbg.declare(metadata i8** %xdptr, metadata !793, metadata !1360), !dbg !4864
  %49 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4865, !tbaa !1364
  %tobool29 = icmp ne i64* %49, null, !dbg !4865
  br i1 %tobool29, label %land.lhs.true.30, label %cond.false.36, !dbg !4866

land.lhs.true.30:                                 ; preds = %for.body.28
  %50 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4867, !tbaa !1364
  %arrayidx31 = getelementptr i64, i64* %50, i64 0, !dbg !4867
  %51 = load i64, i64* %arrayidx31, align 8, !dbg !4867, !tbaa !1503
  %cmp32 = icmp sge i64 %51, 0, !dbg !4869
  br i1 %cmp32, label %cond.true.33, label %cond.false.36, !dbg !4870

cond.true.33:                                     ; preds = %land.lhs.true.30
  %52 = load i8*, i8** %dptr.addr, align 8, !dbg !4871, !tbaa !1364
  %53 = bitcast i8* %52 to i8**, !dbg !4873
  %54 = load i8*, i8** %53, align 8, !dbg !4874, !tbaa !1364
  %55 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4875, !tbaa !1364
  %arrayidx34 = getelementptr i64, i64* %55, i64 0, !dbg !4875
  %56 = load i64, i64* %arrayidx34, align 8, !dbg !4875, !tbaa !1503
  %add.ptr35 = getelementptr i8, i8* %54, i64 %56, !dbg !4876
  br label %cond.end.37, !dbg !4870

cond.false.36:                                    ; preds = %land.lhs.true.30, %for.body.28
  %57 = load i8*, i8** %dptr.addr, align 8, !dbg !4877, !tbaa !1364
  br label %cond.end.37, !dbg !4870

cond.end.37:                                      ; preds = %cond.false.36, %cond.true.33
  %cond38 = phi i8* [ %add.ptr35, %cond.true.33 ], [ %57, %cond.false.36 ], !dbg !4870
  store i8* %cond38, i8** %xdptr, align 8, !dbg !4880, !tbaa !1364
  %58 = load i8*, i8** %xdptr, align 8, !dbg !4883, !tbaa !1364
  %59 = load i8*, i8** %p, align 8, !dbg !4884, !tbaa !1364
  %60 = load i64, i64* %itemsize.addr, align 8, !dbg !4885, !tbaa !1503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 %60, i32 1, i1 false), !dbg !4886
  %61 = bitcast i8** %xdptr to i8*, !dbg !4887
  call void @llvm.lifetime.end(i64 8, i8* %61) #1, !dbg !4887
  br label %for.inc.39, !dbg !4888

for.inc.39:                                       ; preds = %cond.end.37
  %62 = load i64, i64* %itemsize.addr, align 8, !dbg !4889, !tbaa !1503
  %63 = load i8*, i8** %p, align 8, !dbg !4890, !tbaa !1364
  %add.ptr40 = getelementptr i8, i8* %63, i64 %62, !dbg !4890
  store i8* %add.ptr40, i8** %p, align 8, !dbg !4890, !tbaa !1364
  %64 = load i64*, i64** %dstrides.addr, align 8, !dbg !4891, !tbaa !1364
  %arrayidx41 = getelementptr i64, i64* %64, i64 0, !dbg !4891
  %65 = load i64, i64* %arrayidx41, align 8, !dbg !4891, !tbaa !1503
  %66 = load i8*, i8** %dptr.addr, align 8, !dbg !4892, !tbaa !1364
  %add.ptr42 = getelementptr i8, i8* %66, i64 %65, !dbg !4892
  store i8* %add.ptr42, i8** %dptr.addr, align 8, !dbg !4892, !tbaa !1364
  %67 = load i64, i64* %i, align 8, !dbg !4893, !tbaa !1503
  %inc43 = add i64 %67, 1, !dbg !4893
  store i64 %inc43, i64* %i, align 8, !dbg !4893, !tbaa !1503
  br label %for.cond.25, !dbg !4894

for.end.44:                                       ; preds = %for.cond.25
  %68 = bitcast i8** %p to i8*, !dbg !4895
  call void @llvm.lifetime.end(i64 8, i8* %68) #1, !dbg !4895
  br label %if.end

if.end:                                           ; preds = %for.end.44, %if.then.13
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4896

if.end.45:                                        ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !4897, !tbaa !1503
  br label %for.cond.46, !dbg !4898

for.cond.46:                                      ; preds = %for.inc.87, %if.end.45
  %69 = load i64, i64* %i, align 8, !dbg !4899, !tbaa !1503
  %70 = load i64*, i64** %shape.addr, align 8, !dbg !4902, !tbaa !1364
  %arrayidx47 = getelementptr i64, i64* %70, i64 0, !dbg !4902
  %71 = load i64, i64* %arrayidx47, align 8, !dbg !4902, !tbaa !1503
  %cmp48 = icmp slt i64 %69, %71, !dbg !4903
  br i1 %cmp48, label %for.body.49, label %for.end.93, !dbg !4904

for.body.49:                                      ; preds = %for.cond.46
  %72 = bitcast i8** %xdptr50 to i8*, !dbg !4905
  call void @llvm.lifetime.start(i64 8, i8* %72) #1, !dbg !4905
  call void @llvm.dbg.declare(metadata i8** %xdptr50, metadata !797, metadata !1360), !dbg !4906
  %73 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4907, !tbaa !1364
  %tobool51 = icmp ne i64* %73, null, !dbg !4907
  br i1 %tobool51, label %land.lhs.true.52, label %cond.false.58, !dbg !4908

land.lhs.true.52:                                 ; preds = %for.body.49
  %74 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4909, !tbaa !1364
  %arrayidx53 = getelementptr i64, i64* %74, i64 0, !dbg !4909
  %75 = load i64, i64* %arrayidx53, align 8, !dbg !4909, !tbaa !1503
  %cmp54 = icmp sge i64 %75, 0, !dbg !4911
  br i1 %cmp54, label %cond.true.55, label %cond.false.58, !dbg !4912

cond.true.55:                                     ; preds = %land.lhs.true.52
  %76 = load i8*, i8** %dptr.addr, align 8, !dbg !4913, !tbaa !1364
  %77 = bitcast i8* %76 to i8**, !dbg !4915
  %78 = load i8*, i8** %77, align 8, !dbg !4916, !tbaa !1364
  %79 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4917, !tbaa !1364
  %arrayidx56 = getelementptr i64, i64* %79, i64 0, !dbg !4917
  %80 = load i64, i64* %arrayidx56, align 8, !dbg !4917, !tbaa !1503
  %add.ptr57 = getelementptr i8, i8* %78, i64 %80, !dbg !4918
  br label %cond.end.59, !dbg !4912

cond.false.58:                                    ; preds = %land.lhs.true.52, %for.body.49
  %81 = load i8*, i8** %dptr.addr, align 8, !dbg !4919, !tbaa !1364
  br label %cond.end.59, !dbg !4912

cond.end.59:                                      ; preds = %cond.false.58, %cond.true.55
  %cond60 = phi i8* [ %add.ptr57, %cond.true.55 ], [ %81, %cond.false.58 ], !dbg !4912
  store i8* %cond60, i8** %xdptr50, align 8, !dbg !4922, !tbaa !1364
  %82 = bitcast i8** %xsptr61 to i8*, !dbg !4925
  call void @llvm.lifetime.start(i64 8, i8* %82) #1, !dbg !4925
  call void @llvm.dbg.declare(metadata i8** %xsptr61, metadata !801, metadata !1360), !dbg !4926
  %83 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4927, !tbaa !1364
  %tobool62 = icmp ne i64* %83, null, !dbg !4927
  br i1 %tobool62, label %land.lhs.true.63, label %cond.false.69, !dbg !4928

land.lhs.true.63:                                 ; preds = %cond.end.59
  %84 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4929, !tbaa !1364
  %arrayidx64 = getelementptr i64, i64* %84, i64 0, !dbg !4929
  %85 = load i64, i64* %arrayidx64, align 8, !dbg !4929, !tbaa !1503
  %cmp65 = icmp sge i64 %85, 0, !dbg !4930
  br i1 %cmp65, label %cond.true.66, label %cond.false.69, !dbg !4931

cond.true.66:                                     ; preds = %land.lhs.true.63
  %86 = load i8*, i8** %sptr.addr, align 8, !dbg !4932, !tbaa !1364
  %87 = bitcast i8* %86 to i8**, !dbg !4933
  %88 = load i8*, i8** %87, align 8, !dbg !4934, !tbaa !1364
  %89 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4935, !tbaa !1364
  %arrayidx67 = getelementptr i64, i64* %89, i64 0, !dbg !4935
  %90 = load i64, i64* %arrayidx67, align 8, !dbg !4935, !tbaa !1503
  %add.ptr68 = getelementptr i8, i8* %88, i64 %90, !dbg !4936
  br label %cond.end.70, !dbg !4931

cond.false.69:                                    ; preds = %land.lhs.true.63, %cond.end.59
  %91 = load i8*, i8** %sptr.addr, align 8, !dbg !4937, !tbaa !1364
  br label %cond.end.70, !dbg !4931

cond.end.70:                                      ; preds = %cond.false.69, %cond.true.66
  %cond71 = phi i8* [ %add.ptr68, %cond.true.66 ], [ %91, %cond.false.69 ], !dbg !4931
  store i8* %cond71, i8** %xsptr61, align 8, !dbg !4938, !tbaa !1364
  %92 = load i64*, i64** %shape.addr, align 8, !dbg !4939, !tbaa !1364
  %add.ptr72 = getelementptr i64, i64* %92, i64 1, !dbg !4940
  %93 = load i64, i64* %ndim.addr, align 8, !dbg !4941, !tbaa !1503
  %sub = sub i64 %93, 1, !dbg !4942
  %94 = load i64, i64* %itemsize.addr, align 8, !dbg !4943, !tbaa !1503
  %95 = load i8*, i8** %xdptr50, align 8, !dbg !4944, !tbaa !1364
  %96 = load i64*, i64** %dstrides.addr, align 8, !dbg !4945, !tbaa !1364
  %add.ptr73 = getelementptr i64, i64* %96, i64 1, !dbg !4946
  %97 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4947, !tbaa !1364
  %tobool74 = icmp ne i64* %97, null, !dbg !4947
  br i1 %tobool74, label %cond.true.75, label %cond.false.77, !dbg !4947

cond.true.75:                                     ; preds = %cond.end.70
  %98 = load i64*, i64** %dsuboffsets.addr, align 8, !dbg !4948, !tbaa !1364
  %add.ptr76 = getelementptr i64, i64* %98, i64 1, !dbg !4949
  br label %cond.end.78, !dbg !4947

cond.false.77:                                    ; preds = %cond.end.70
  br label %cond.end.78, !dbg !4950

cond.end.78:                                      ; preds = %cond.false.77, %cond.true.75
  %cond79 = phi i64* [ %add.ptr76, %cond.true.75 ], [ null, %cond.false.77 ], !dbg !4947
  %99 = load i8*, i8** %xsptr61, align 8, !dbg !4951, !tbaa !1364
  %100 = load i64*, i64** %sstrides.addr, align 8, !dbg !4952, !tbaa !1364
  %add.ptr80 = getelementptr i64, i64* %100, i64 1, !dbg !4953
  %101 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4954, !tbaa !1364
  %tobool81 = icmp ne i64* %101, null, !dbg !4954
  br i1 %tobool81, label %cond.true.82, label %cond.false.84, !dbg !4954

cond.true.82:                                     ; preds = %cond.end.78
  %102 = load i64*, i64** %ssuboffsets.addr, align 8, !dbg !4955, !tbaa !1364
  %add.ptr83 = getelementptr i64, i64* %102, i64 1, !dbg !4956
  br label %cond.end.85, !dbg !4954

cond.false.84:                                    ; preds = %cond.end.78
  br label %cond.end.85, !dbg !4957

cond.end.85:                                      ; preds = %cond.false.84, %cond.true.82
  %cond86 = phi i64* [ %add.ptr83, %cond.true.82 ], [ null, %cond.false.84 ], !dbg !4954
  %103 = load i8*, i8** %mem.addr, align 8, !dbg !4958, !tbaa !1364
  call void @copy_rec(i64* %add.ptr72, i64 %sub, i64 %94, i8* %95, i64* %add.ptr73, i64* %cond79, i8* %99, i64* %add.ptr80, i64* %cond86, i8* %103), !dbg !4959
  %104 = bitcast i8** %xsptr61 to i8*, !dbg !4960
  call void @llvm.lifetime.end(i64 8, i8* %104) #1, !dbg !4960
  %105 = bitcast i8** %xdptr50 to i8*, !dbg !4960
  call void @llvm.lifetime.end(i64 8, i8* %105) #1, !dbg !4960
  br label %for.inc.87, !dbg !4961

for.inc.87:                                       ; preds = %cond.end.85
  %106 = load i64*, i64** %dstrides.addr, align 8, !dbg !4962, !tbaa !1364
  %arrayidx88 = getelementptr i64, i64* %106, i64 0, !dbg !4962
  %107 = load i64, i64* %arrayidx88, align 8, !dbg !4962, !tbaa !1503
  %108 = load i8*, i8** %dptr.addr, align 8, !dbg !4963, !tbaa !1364
  %add.ptr89 = getelementptr i8, i8* %108, i64 %107, !dbg !4963
  store i8* %add.ptr89, i8** %dptr.addr, align 8, !dbg !4963, !tbaa !1364
  %109 = load i64*, i64** %sstrides.addr, align 8, !dbg !4964, !tbaa !1364
  %arrayidx90 = getelementptr i64, i64* %109, i64 0, !dbg !4964
  %110 = load i64, i64* %arrayidx90, align 8, !dbg !4964, !tbaa !1503
  %111 = load i8*, i8** %sptr.addr, align 8, !dbg !4965, !tbaa !1364
  %add.ptr91 = getelementptr i8, i8* %111, i64 %110, !dbg !4965
  store i8* %add.ptr91, i8** %sptr.addr, align 8, !dbg !4965, !tbaa !1364
  %112 = load i64, i64* %i, align 8, !dbg !4966, !tbaa !1503
  %inc92 = add i64 %112, 1, !dbg !4966
  store i64 %inc92, i64* %i, align 8, !dbg !4966, !tbaa !1503
  br label %for.cond.46, !dbg !4967

for.end.93:                                       ; preds = %for.cond.46
  store i32 0, i32* %cleanup.dest.slot, !dbg !4968
  br label %cleanup, !dbg !4968

cleanup:                                          ; preds = %for.end.93, %if.end
  %113 = bitcast i64* %i to i8*, !dbg !4969
  call void @llvm.lifetime.end(i64 8, i8* %113) #1, !dbg !4969
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !4968

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i64 @PyObject_Hash(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_tobytes(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %ndbuf = alloca %struct.ndbuf*, align 8
  %src = alloca %struct.bufferinfo*, align 8
  %dest = alloca %struct.bufferinfo, align 8
  %ret = alloca %struct._object*, align 8
  %mem = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !817, metadata !1360), !dbg !4971
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !818, metadata !1360), !dbg !4972
  %0 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !4973
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4973
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !819, metadata !1360), !dbg !4974
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !4975, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !4976
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %2, i32 0, i32 3, !dbg !4977
  %3 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !4977, !tbaa !2581
  store %struct.ndbuf* %3, %struct.ndbuf** %ndbuf, align 8, !dbg !4974, !tbaa !1364
  %4 = bitcast %struct.bufferinfo** %src to i8*, !dbg !4978
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4978
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %src, metadata !820, metadata !1360), !dbg !4979
  %5 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !4980, !tbaa !1364
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 7, !dbg !4981
  store %struct.bufferinfo* %base, %struct.bufferinfo** %src, align 8, !dbg !4979, !tbaa !1364
  %6 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !4982
  call void @llvm.lifetime.start(i64 80, i8* %6) #1, !dbg !4982
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %dest, metadata !821, metadata !1360), !dbg !4983
  %7 = bitcast %struct._object** %ret to i8*, !dbg !4984
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !4984
  call void @llvm.dbg.declare(metadata %struct._object** %ret, metadata !822, metadata !1360), !dbg !4985
  store %struct._object* null, %struct._object** %ret, align 8, !dbg !4985, !tbaa !1364
  %8 = bitcast i8** %mem to i8*, !dbg !4986
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !4986
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !823, metadata !1360), !dbg !4987
  %9 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !4988, !tbaa !1364
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %9, i32 0, i32 5, !dbg !4990
  %10 = load i32, i32* %flags, align 4, !dbg !4990, !tbaa !2600
  %and = and i32 %10, 264, !dbg !4991
  %tobool = icmp ne i32 %and, 0, !dbg !4991
  br i1 %tobool, label %if.then, label %if.end, !dbg !4992

if.then:                                          ; preds = %entry
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !4993, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !4994
  %12 = load i8*, i8** %buf, align 8, !dbg !4994, !tbaa !2077
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !4995, !tbaa !1364
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 2, !dbg !4996
  %14 = load i64, i64* %len, align 8, !dbg !4996, !tbaa !1860
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %12, i64 %14), !dbg !4997
  store %struct._object* %call, %struct._object** %retval, !dbg !4998
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4998

if.end:                                           ; preds = %entry
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !4999, !tbaa !1364
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 2, !dbg !5000
  %16 = load i64, i64* %len1, align 8, !dbg !5000, !tbaa !1860
  %call2 = call i8* @PyMem_Malloc(i64 %16), !dbg !5001
  store i8* %call2, i8** %mem, align 8, !dbg !5002, !tbaa !1364
  %17 = load i8*, i8** %mem, align 8, !dbg !5003, !tbaa !1364
  %cmp = icmp eq i8* %17, null, !dbg !5005
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !5006

if.then.3:                                        ; preds = %if.end
  %call4 = call %struct._object* @PyErr_NoMemory(), !dbg !5007
  store %struct._object* null, %struct._object** %retval, !dbg !5009
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5009

if.end.5:                                         ; preds = %if.end
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !5010, !tbaa !1364
  %19 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !5011
  %20 = bitcast %struct.bufferinfo* %18 to i8*, !dbg !5011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 80, i32 8, i1 false), !dbg !5011, !tbaa.struct !5012
  %21 = load i8*, i8** %mem, align 8, !dbg !5013, !tbaa !1364
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 0, !dbg !5014
  store i8* %21, i8** %buf6, align 8, !dbg !5015, !tbaa !2077
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 9, !dbg !5016
  store i64* null, i64** %suboffsets, align 8, !dbg !5017, !tbaa !2033
  %22 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5018, !tbaa !1364
  %call7 = call i64* @strides_from_shape(%struct.ndbuf* %22, i32 0), !dbg !5019
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 8, !dbg !5020
  store i64* %call7, i64** %strides, align 8, !dbg !5021, !tbaa !2024
  %strides8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 8, !dbg !5022
  %23 = load i64*, i64** %strides8, align 8, !dbg !5022, !tbaa !2024
  %cmp9 = icmp eq i64* %23, null, !dbg !5024
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !5025

if.then.10:                                       ; preds = %if.end.5
  br label %out, !dbg !5026

if.end.11:                                        ; preds = %if.end.5
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !5027, !tbaa !1364
  %call12 = call i32 @copy_buffer(%struct.bufferinfo* %dest, %struct.bufferinfo* %24), !dbg !5029
  %cmp13 = icmp slt i32 %call12, 0, !dbg !5030
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !5031

if.then.14:                                       ; preds = %if.end.11
  br label %out, !dbg !5032

if.end.15:                                        ; preds = %if.end.11
  %25 = load i8*, i8** %mem, align 8, !dbg !5033, !tbaa !1364
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %src, align 8, !dbg !5034, !tbaa !1364
  %len16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 2, !dbg !5035
  %27 = load i64, i64* %len16, align 8, !dbg !5035, !tbaa !1860
  %call17 = call %struct._object* @PyBytes_FromStringAndSize(i8* %25, i64 %27), !dbg !5036
  store %struct._object* %call17, %struct._object** %ret, align 8, !dbg !5037, !tbaa !1364
  br label %out, !dbg !5038

out:                                              ; preds = %if.end.15, %if.then.14, %if.then.10
  br label %do.body, !dbg !5039

do.body:                                          ; preds = %out
  %strides18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 8, !dbg !5040
  %28 = load i64*, i64** %strides18, align 8, !dbg !5040, !tbaa !2024
  %tobool19 = icmp ne i64* %28, null, !dbg !5044
  br i1 %tobool19, label %if.then.20, label %if.end.22, !dbg !5045

if.then.20:                                       ; preds = %do.body
  %strides21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %dest, i32 0, i32 8, !dbg !5046
  %29 = load i64*, i64** %strides21, align 8, !dbg !5046, !tbaa !2024
  %30 = bitcast i64* %29 to i8*, !dbg !5048
  call void @PyMem_Free(i8* %30), !dbg !5049
  br label %if.end.22, !dbg !5049

if.end.22:                                        ; preds = %if.then.20, %do.body
  br label %do.cond, !dbg !5050

do.cond:                                          ; preds = %if.end.22
  br label %do.end, !dbg !5053

do.end:                                           ; preds = %do.cond
  %31 = load i8*, i8** %mem, align 8, !dbg !5055, !tbaa !1364
  call void @PyMem_Free(i8* %31), !dbg !5056
  %32 = load %struct._object*, %struct._object** %ret, align 8, !dbg !5057, !tbaa !1364
  store %struct._object* %32, %struct._object** %retval, !dbg !5058
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5058

cleanup:                                          ; preds = %do.end, %if.then.3, %if.then
  %33 = bitcast i8** %mem to i8*, !dbg !5059
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !5059
  %34 = bitcast %struct._object** %ret to i8*, !dbg !5059
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !5059
  %35 = bitcast %struct.bufferinfo* %dest to i8*, !dbg !5059
  call void @llvm.lifetime.end(i64 80, i8* %35) #1, !dbg !5059
  %36 = bitcast %struct.bufferinfo** %src to i8*, !dbg !5059
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !5059
  %37 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !5059
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !5059
  %38 = load %struct._object*, %struct._object** %retval, !dbg !5059
  ret %struct._object* %38, !dbg !5059
}

; Function Attrs: nounwind uwtable
define internal i64* @strides_from_shape(%struct.ndbuf* %ndbuf, i32 %flags) #0 {
entry:
  %retval = alloca i64*, align 8
  %ndbuf.addr = alloca %struct.ndbuf*, align 8
  %flags.addr = alloca i32, align 4
  %base = alloca %struct.bufferinfo*, align 8
  %s = alloca i64*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ndbuf* %ndbuf, %struct.ndbuf** %ndbuf.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf.addr, metadata !830, metadata !1360), !dbg !5060
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !831, metadata !1360), !dbg !5061
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !5062
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5062
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !832, metadata !1360), !dbg !5063
  %1 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !5064, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %1, i32 0, i32 7, !dbg !5065
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !5063, !tbaa !1364
  %2 = bitcast i64** %s to i8*, !dbg !5066
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5066
  call void @llvm.dbg.declare(metadata i64** %s, metadata !833, metadata !1360), !dbg !5067
  %3 = bitcast i64* %i to i8*, !dbg !5066
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5066
  call void @llvm.dbg.declare(metadata i64* %i, metadata !834, metadata !1360), !dbg !5068
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5069, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 5, !dbg !5070
  %5 = load i32, i32* %ndim, align 4, !dbg !5070, !tbaa !1629
  %conv = sext i32 %5 to i64, !dbg !5069
  %mul = mul i64 %conv, 8, !dbg !5071
  %call = call i8* @PyMem_Malloc(i64 %mul), !dbg !5072
  %6 = bitcast i8* %call to i64*, !dbg !5072
  store i64* %6, i64** %s, align 8, !dbg !5073, !tbaa !1364
  %7 = load i64*, i64** %s, align 8, !dbg !5074, !tbaa !1364
  %cmp = icmp eq i64* %7, null, !dbg !5076
  br i1 %cmp, label %if.then, label %if.end, !dbg !5077

if.then:                                          ; preds = %entry
  %call3 = call %struct._object* @PyErr_NoMemory(), !dbg !5078
  store i64* null, i64** %retval, !dbg !5080
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5080

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %flags.addr, align 4, !dbg !5081, !tbaa !1844
  %and = and i32 %8, 4, !dbg !5083
  %tobool = icmp ne i32 %and, 0, !dbg !5083
  br i1 %tobool, label %if.then.4, label %if.else, !dbg !5084

if.then.4:                                        ; preds = %if.end
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5085, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 3, !dbg !5087
  %10 = load i64, i64* %itemsize, align 8, !dbg !5087, !tbaa !1739
  %11 = load i64*, i64** %s, align 8, !dbg !5088, !tbaa !1364
  %arrayidx = getelementptr i64, i64* %11, i64 0, !dbg !5088
  store i64 %10, i64* %arrayidx, align 8, !dbg !5089, !tbaa !1503
  store i64 1, i64* %i, align 8, !dbg !5090, !tbaa !1503
  br label %for.cond, !dbg !5092

for.cond:                                         ; preds = %for.inc, %if.then.4
  %12 = load i64, i64* %i, align 8, !dbg !5093, !tbaa !1503
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5097, !tbaa !1364
  %ndim5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 5, !dbg !5098
  %14 = load i32, i32* %ndim5, align 4, !dbg !5098, !tbaa !1629
  %conv6 = sext i32 %14 to i64, !dbg !5097
  %cmp7 = icmp slt i64 %12, %conv6, !dbg !5099
  br i1 %cmp7, label %for.body, label %for.end, !dbg !5100

for.body:                                         ; preds = %for.cond
  %15 = load i64, i64* %i, align 8, !dbg !5101, !tbaa !1503
  %sub = sub i64 %15, 1, !dbg !5102
  %16 = load i64*, i64** %s, align 8, !dbg !5103, !tbaa !1364
  %arrayidx9 = getelementptr i64, i64* %16, i64 %sub, !dbg !5103
  %17 = load i64, i64* %arrayidx9, align 8, !dbg !5103, !tbaa !1503
  %18 = load i64, i64* %i, align 8, !dbg !5104, !tbaa !1503
  %sub10 = sub i64 %18, 1, !dbg !5105
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5106, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 7, !dbg !5107
  %20 = load i64*, i64** %shape, align 8, !dbg !5107, !tbaa !1716
  %arrayidx11 = getelementptr i64, i64* %20, i64 %sub10, !dbg !5106
  %21 = load i64, i64* %arrayidx11, align 8, !dbg !5106, !tbaa !1503
  %mul12 = mul i64 %17, %21, !dbg !5108
  %22 = load i64, i64* %i, align 8, !dbg !5109, !tbaa !1503
  %23 = load i64*, i64** %s, align 8, !dbg !5110, !tbaa !1364
  %arrayidx13 = getelementptr i64, i64* %23, i64 %22, !dbg !5110
  store i64 %mul12, i64* %arrayidx13, align 8, !dbg !5111, !tbaa !1503
  br label %for.inc, !dbg !5110

for.inc:                                          ; preds = %for.body
  %24 = load i64, i64* %i, align 8, !dbg !5112, !tbaa !1503
  %inc = add i64 %24, 1, !dbg !5112
  store i64 %inc, i64* %i, align 8, !dbg !5112, !tbaa !1503
  br label %for.cond, !dbg !5113

for.end:                                          ; preds = %for.cond
  br label %if.end.33, !dbg !5114

if.else:                                          ; preds = %if.end
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5115, !tbaa !1364
  %itemsize14 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 3, !dbg !5117
  %26 = load i64, i64* %itemsize14, align 8, !dbg !5117, !tbaa !1739
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5118, !tbaa !1364
  %ndim15 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 5, !dbg !5119
  %28 = load i32, i32* %ndim15, align 4, !dbg !5119, !tbaa !1629
  %sub16 = sub i32 %28, 1, !dbg !5120
  %idxprom = sext i32 %sub16 to i64, !dbg !5121
  %29 = load i64*, i64** %s, align 8, !dbg !5121, !tbaa !1364
  %arrayidx17 = getelementptr i64, i64* %29, i64 %idxprom, !dbg !5121
  store i64 %26, i64* %arrayidx17, align 8, !dbg !5122, !tbaa !1503
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5123, !tbaa !1364
  %ndim18 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 5, !dbg !5125
  %31 = load i32, i32* %ndim18, align 4, !dbg !5125, !tbaa !1629
  %sub19 = sub i32 %31, 2, !dbg !5126
  %conv20 = sext i32 %sub19 to i64, !dbg !5123
  store i64 %conv20, i64* %i, align 8, !dbg !5127, !tbaa !1503
  br label %for.cond.21, !dbg !5128

for.cond.21:                                      ; preds = %for.inc.31, %if.else
  %32 = load i64, i64* %i, align 8, !dbg !5129, !tbaa !1503
  %cmp22 = icmp sge i64 %32, 0, !dbg !5133
  br i1 %cmp22, label %for.body.24, label %for.end.32, !dbg !5134

for.body.24:                                      ; preds = %for.cond.21
  %33 = load i64, i64* %i, align 8, !dbg !5135, !tbaa !1503
  %add = add i64 %33, 1, !dbg !5136
  %34 = load i64*, i64** %s, align 8, !dbg !5137, !tbaa !1364
  %arrayidx25 = getelementptr i64, i64* %34, i64 %add, !dbg !5137
  %35 = load i64, i64* %arrayidx25, align 8, !dbg !5137, !tbaa !1503
  %36 = load i64, i64* %i, align 8, !dbg !5138, !tbaa !1503
  %add26 = add i64 %36, 1, !dbg !5139
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5140, !tbaa !1364
  %shape27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 7, !dbg !5141
  %38 = load i64*, i64** %shape27, align 8, !dbg !5141, !tbaa !1716
  %arrayidx28 = getelementptr i64, i64* %38, i64 %add26, !dbg !5140
  %39 = load i64, i64* %arrayidx28, align 8, !dbg !5140, !tbaa !1503
  %mul29 = mul i64 %35, %39, !dbg !5142
  %40 = load i64, i64* %i, align 8, !dbg !5143, !tbaa !1503
  %41 = load i64*, i64** %s, align 8, !dbg !5144, !tbaa !1364
  %arrayidx30 = getelementptr i64, i64* %41, i64 %40, !dbg !5144
  store i64 %mul29, i64* %arrayidx30, align 8, !dbg !5145, !tbaa !1503
  br label %for.inc.31, !dbg !5144

for.inc.31:                                       ; preds = %for.body.24
  %42 = load i64, i64* %i, align 8, !dbg !5146, !tbaa !1503
  %dec = add i64 %42, -1, !dbg !5146
  store i64 %dec, i64* %i, align 8, !dbg !5146, !tbaa !1503
  br label %for.cond.21, !dbg !5147

for.end.32:                                       ; preds = %for.cond.21
  br label %if.end.33

if.end.33:                                        ; preds = %for.end.32, %for.end
  %43 = load i64*, i64** %s, align 8, !dbg !5148, !tbaa !1364
  store i64* %43, i64** %retval, !dbg !5149
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5149

cleanup:                                          ; preds = %if.end.33, %if.then
  %44 = bitcast i64* %i to i8*, !dbg !5150
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !5150
  %45 = bitcast i64** %s to i8*, !dbg !5150
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !5150
  %46 = bitcast %struct.bufferinfo** %base to i8*, !dbg !5150
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !5150
  %47 = load i64*, i64** %retval, !dbg !5150
  ret i64* %47, !dbg !5150
}

; Function Attrs: nounwind uwtable
define internal i32 @ndarray_getbuf(%struct.NDArrayObject* %self, %struct.bufferinfo* %view, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  %flags.addr = alloca i32, align 4
  %ndbuf = alloca %struct.ndbuf*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %baseflags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !839, metadata !1360), !dbg !5151
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !840, metadata !1360), !dbg !5152
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !841, metadata !1360), !dbg !5153
  %0 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !5154
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5154
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !842, metadata !1360), !dbg !5155
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !5156, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !5157
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !5157, !tbaa !2581
  store %struct.ndbuf* %2, %struct.ndbuf** %ndbuf, align 8, !dbg !5155, !tbaa !1364
  %3 = bitcast %struct.bufferinfo** %base to i8*, !dbg !5158
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5158
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !843, metadata !1360), !dbg !5159
  %4 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5160, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %4, i32 0, i32 7, !dbg !5161
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !5159, !tbaa !1364
  %5 = bitcast i32* %baseflags to i8*, !dbg !5162
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !5162
  call void @llvm.dbg.declare(metadata i32* %baseflags, metadata !844, metadata !1360), !dbg !5163
  %6 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5164, !tbaa !1364
  %flags2 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %6, i32 0, i32 5, !dbg !5165
  %7 = load i32, i32* %flags2, align 4, !dbg !5165, !tbaa !2600
  store i32 %7, i32* %baseflags, align 4, !dbg !5163, !tbaa !1844
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5166, !tbaa !1364
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 1, !dbg !5168
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !5168, !tbaa !2701
  %cmp = icmp ne %struct._object* %9, null, !dbg !5169
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5170

land.lhs.true:                                    ; preds = %entry
  %10 = load i32, i32* %baseflags, align 4, !dbg !5171, !tbaa !1844
  %and = and i32 %10, 32, !dbg !5173
  %tobool = icmp ne i32 %and, 0, !dbg !5173
  br i1 %tobool, label %if.then, label %if.end, !dbg !5174

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5175, !tbaa !1364
  %obj3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 1, !dbg !5177
  %12 = load %struct._object*, %struct._object** %obj3, align 8, !dbg !5177, !tbaa !2701
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5178, !tbaa !1364
  %14 = load i32, i32* %flags.addr, align 4, !dbg !5179, !tbaa !1844
  %call = call i32 @PyObject_GetBuffer(%struct._object* %12, %struct.bufferinfo* %13, i32 %14), !dbg !5180
  store i32 %call, i32* %retval, !dbg !5181
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5181

if.end:                                           ; preds = %land.lhs.true, %entry
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5182, !tbaa !1364
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5183, !tbaa !1364
  %17 = bitcast %struct.bufferinfo* %15 to i8*, !dbg !5184
  %18 = bitcast %struct.bufferinfo* %16 to i8*, !dbg !5184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 80, i32 8, i1 false), !dbg !5184, !tbaa.struct !5012
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5185, !tbaa !1364
  %obj4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 1, !dbg !5186
  store %struct._object* null, %struct._object** %obj4, align 8, !dbg !5187, !tbaa !2701
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5188, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 6, !dbg !5190
  %21 = load i8*, i8** %format, align 8, !dbg !5190, !tbaa !1737
  %cmp5 = icmp eq i8* %21, null, !dbg !5191
  br i1 %cmp5, label %if.then.6, label %if.end.8, !dbg !5192

if.then.6:                                        ; preds = %if.end
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5193, !tbaa !1364
  %format7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 6, !dbg !5194
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i8** %format7, align 8, !dbg !5195, !tbaa !1737
  br label %if.end.8, !dbg !5193

if.end.8:                                         ; preds = %if.then.6, %if.end
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5196, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 5, !dbg !5198
  %24 = load i32, i32* %ndim, align 4, !dbg !5198, !tbaa !1629
  %cmp9 = icmp ne i32 %24, 0, !dbg !5199
  br i1 %cmp9, label %land.lhs.true.10, label %if.end.20, !dbg !5200

land.lhs.true.10:                                 ; preds = %if.end.8
  %25 = load i32, i32* %flags.addr, align 4, !dbg !5201, !tbaa !1844
  %and11 = and i32 %25, 8, !dbg !5202
  %cmp12 = icmp eq i32 %and11, 8, !dbg !5203
  br i1 %cmp12, label %land.lhs.true.13, label %lor.lhs.false, !dbg !5204

land.lhs.true.13:                                 ; preds = %land.lhs.true.10
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5205, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 7, !dbg !5207
  %27 = load i64*, i64** %shape, align 8, !dbg !5207, !tbaa !1716
  %cmp14 = icmp eq i64* %27, null, !dbg !5208
  br i1 %cmp14, label %if.then.19, label %lor.lhs.false, !dbg !5209

lor.lhs.false:                                    ; preds = %land.lhs.true.13, %land.lhs.true.10
  %28 = load i32, i32* %flags.addr, align 4, !dbg !5210, !tbaa !1844
  %and15 = and i32 %28, 24, !dbg !5211
  %cmp16 = icmp eq i32 %and15, 24, !dbg !5212
  br i1 %cmp16, label %land.lhs.true.17, label %if.end.20, !dbg !5213

land.lhs.true.17:                                 ; preds = %lor.lhs.false
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5214, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 8, !dbg !5215
  %30 = load i64*, i64** %strides, align 8, !dbg !5215, !tbaa !2024
  %cmp18 = icmp eq i64* %30, null, !dbg !5216
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !5217

if.then.19:                                       ; preds = %land.lhs.true.17, %land.lhs.true.13
  %31 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5218, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.69, i32 0, i32 0)), !dbg !5220
  store i32 -1, i32* %retval, !dbg !5221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5221

if.end.20:                                        ; preds = %land.lhs.true.17, %lor.lhs.false, %if.end.8
  %32 = load i32, i32* %baseflags, align 4, !dbg !5222, !tbaa !1844
  %and21 = and i32 %32, 64, !dbg !5224
  %tobool22 = icmp ne i32 %and21, 0, !dbg !5224
  br i1 %tobool22, label %if.then.23, label %if.end.29, !dbg !5225

if.then.23:                                       ; preds = %if.end.20
  %33 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5226, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %33, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.70, i32 0, i32 0)), !dbg !5228
  %34 = load i32, i32* %baseflags, align 4, !dbg !5229, !tbaa !1844
  %and24 = and i32 %34, 128, !dbg !5231
  %tobool25 = icmp ne i32 %and24, 0, !dbg !5231
  br i1 %tobool25, label %if.then.26, label %if.end.28, !dbg !5232

if.then.26:                                       ; preds = %if.then.23
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5233, !tbaa !1364
  %obj27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 1, !dbg !5234
  store %struct._object* inttoptr (i64 1 to %struct._object*), %struct._object** %obj27, align 8, !dbg !5235, !tbaa !2701
  br label %if.end.28, !dbg !5233

if.end.28:                                        ; preds = %if.then.26, %if.then.23
  store i32 -1, i32* %retval, !dbg !5236
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5236

if.end.29:                                        ; preds = %if.end.20
  %36 = load i32, i32* %flags.addr, align 4, !dbg !5237, !tbaa !1844
  %and30 = and i32 %36, 1, !dbg !5239
  %tobool31 = icmp ne i32 %and30, 0, !dbg !5239
  br i1 %tobool31, label %land.lhs.true.32, label %if.end.35, !dbg !5240

land.lhs.true.32:                                 ; preds = %if.end.29
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5241, !tbaa !1364
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 4, !dbg !5243
  %38 = load i32, i32* %readonly, align 4, !dbg !5243, !tbaa !2692
  %tobool33 = icmp ne i32 %38, 0, !dbg !5244
  br i1 %tobool33, label %if.then.34, label %if.end.35, !dbg !5245

if.then.34:                                       ; preds = %land.lhs.true.32
  %39 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5246, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %39, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i32 0, i32 0)), !dbg !5248
  store i32 -1, i32* %retval, !dbg !5249
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5249

if.end.35:                                        ; preds = %land.lhs.true.32, %if.end.29
  %40 = load i32, i32* %flags.addr, align 4, !dbg !5250, !tbaa !1844
  %and36 = and i32 %40, 4, !dbg !5252
  %tobool37 = icmp ne i32 %and36, 0, !dbg !5252
  br i1 %tobool37, label %if.end.40, label %if.then.38, !dbg !5253

if.then.38:                                       ; preds = %if.end.35
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5254, !tbaa !1364
  %format39 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 6, !dbg !5256
  store i8* null, i8** %format39, align 8, !dbg !5257, !tbaa !1737
  br label %if.end.40, !dbg !5258

if.end.40:                                        ; preds = %if.then.38, %if.end.35
  %42 = load i32, i32* %flags.addr, align 4, !dbg !5259, !tbaa !1844
  %and41 = and i32 %42, 56, !dbg !5261
  %cmp42 = icmp eq i32 %and41, 56, !dbg !5262
  br i1 %cmp42, label %land.lhs.true.43, label %if.end.47, !dbg !5263

land.lhs.true.43:                                 ; preds = %if.end.40
  %43 = load i32, i32* %baseflags, align 4, !dbg !5264, !tbaa !1844
  %and44 = and i32 %43, 264, !dbg !5266
  %tobool45 = icmp ne i32 %and44, 0, !dbg !5266
  br i1 %tobool45, label %if.end.47, label %if.then.46, !dbg !5267

if.then.46:                                       ; preds = %land.lhs.true.43
  %44 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5268, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %44, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i32 0, i32 0)), !dbg !5270
  store i32 -1, i32* %retval, !dbg !5271
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5271

if.end.47:                                        ; preds = %land.lhs.true.43, %if.end.40
  %45 = load i32, i32* %flags.addr, align 4, !dbg !5272, !tbaa !1844
  %and48 = and i32 %45, 88, !dbg !5274
  %cmp49 = icmp eq i32 %and48, 88, !dbg !5275
  br i1 %cmp49, label %land.lhs.true.50, label %if.end.54, !dbg !5276

land.lhs.true.50:                                 ; preds = %if.end.47
  %46 = load i32, i32* %baseflags, align 4, !dbg !5277, !tbaa !1844
  %and51 = and i32 %46, 12, !dbg !5279
  %tobool52 = icmp ne i32 %and51, 0, !dbg !5279
  br i1 %tobool52, label %if.end.54, label %if.then.53, !dbg !5280

if.then.53:                                       ; preds = %land.lhs.true.50
  %47 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5281, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %47, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.72, i32 0, i32 0)), !dbg !5283
  store i32 -1, i32* %retval, !dbg !5284
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5284

if.end.54:                                        ; preds = %land.lhs.true.50, %if.end.47
  %48 = load i32, i32* %flags.addr, align 4, !dbg !5285, !tbaa !1844
  %and55 = and i32 %48, 152, !dbg !5287
  %cmp56 = icmp eq i32 %and55, 152, !dbg !5288
  br i1 %cmp56, label %land.lhs.true.57, label %if.end.61, !dbg !5289

land.lhs.true.57:                                 ; preds = %if.end.54
  %49 = load i32, i32* %baseflags, align 4, !dbg !5290, !tbaa !1844
  %and58 = and i32 %49, 268, !dbg !5292
  %tobool59 = icmp ne i32 %and58, 0, !dbg !5292
  br i1 %tobool59, label %if.end.61, label %if.then.60, !dbg !5293

if.then.60:                                       ; preds = %land.lhs.true.57
  %50 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5294, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %50, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i32 0, i32 0)), !dbg !5296
  store i32 -1, i32* %retval, !dbg !5297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5297

if.end.61:                                        ; preds = %land.lhs.true.57, %if.end.54
  %51 = load i32, i32* %flags.addr, align 4, !dbg !5298, !tbaa !1844
  %and62 = and i32 %51, 280, !dbg !5300
  %cmp63 = icmp eq i32 %and62, 280, !dbg !5301
  br i1 %cmp63, label %if.end.68, label %land.lhs.true.64, !dbg !5302

land.lhs.true.64:                                 ; preds = %if.end.61
  %52 = load i32, i32* %baseflags, align 4, !dbg !5303, !tbaa !1844
  %and65 = and i32 %52, 16, !dbg !5305
  %tobool66 = icmp ne i32 %and65, 0, !dbg !5305
  br i1 %tobool66, label %if.then.67, label %if.end.68, !dbg !5306

if.then.67:                                       ; preds = %land.lhs.true.64
  %53 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5307, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %53, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i32 0, i32 0)), !dbg !5309
  store i32 -1, i32* %retval, !dbg !5310
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5310

if.end.68:                                        ; preds = %land.lhs.true.64, %if.end.61
  %54 = load i32, i32* %flags.addr, align 4, !dbg !5311, !tbaa !1844
  %and69 = and i32 %54, 24, !dbg !5313
  %cmp70 = icmp eq i32 %and69, 24, !dbg !5314
  br i1 %cmp70, label %if.end.77, label %if.then.71, !dbg !5315

if.then.71:                                       ; preds = %if.end.68
  %55 = load i32, i32* %baseflags, align 4, !dbg !5316, !tbaa !1844
  %and72 = and i32 %55, 264, !dbg !5319
  %tobool73 = icmp ne i32 %and72, 0, !dbg !5319
  br i1 %tobool73, label %if.end.75, label %if.then.74, !dbg !5320

if.then.74:                                       ; preds = %if.then.71
  %56 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5321, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i32 0, i32 0)), !dbg !5323
  store i32 -1, i32* %retval, !dbg !5324
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5324

if.end.75:                                        ; preds = %if.then.71
  %57 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5325, !tbaa !1364
  %strides76 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %57, i32 0, i32 8, !dbg !5326
  store i64* null, i64** %strides76, align 8, !dbg !5327, !tbaa !2024
  br label %if.end.77, !dbg !5328

if.end.77:                                        ; preds = %if.end.75, %if.end.68
  %58 = load i32, i32* %flags.addr, align 4, !dbg !5329, !tbaa !1844
  %and78 = and i32 %58, 8, !dbg !5331
  %cmp79 = icmp eq i32 %and78, 8, !dbg !5332
  br i1 %cmp79, label %if.end.88, label %if.then.80, !dbg !5333

if.then.80:                                       ; preds = %if.end.77
  %59 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5334, !tbaa !1364
  %format81 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %59, i32 0, i32 6, !dbg !5337
  %60 = load i8*, i8** %format81, align 8, !dbg !5337, !tbaa !1737
  %cmp82 = icmp ne i8* %60, null, !dbg !5338
  br i1 %cmp82, label %if.then.83, label %if.end.85, !dbg !5339

if.then.83:                                       ; preds = %if.then.80
  %61 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5340, !tbaa !1364
  %call84 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %61, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.75, i32 0, i32 0)), !dbg !5342
  store i32 -1, i32* %retval, !dbg !5343
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5343

if.end.85:                                        ; preds = %if.then.80
  %62 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5344, !tbaa !1364
  %ndim86 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %62, i32 0, i32 5, !dbg !5345
  store i32 1, i32* %ndim86, align 4, !dbg !5346, !tbaa !1629
  %63 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5347, !tbaa !1364
  %shape87 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %63, i32 0, i32 7, !dbg !5348
  store i64* null, i64** %shape87, align 8, !dbg !5349, !tbaa !1716
  br label %if.end.88, !dbg !5350

if.end.88:                                        ; preds = %if.end.85, %if.end.77
  %64 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !5351, !tbaa !1364
  %65 = bitcast %struct.NDArrayObject* %64 to %struct._object*, !dbg !5352
  %66 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5353, !tbaa !1364
  %obj89 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %66, i32 0, i32 1, !dbg !5354
  store %struct._object* %65, %struct._object** %obj89, align 8, !dbg !5355, !tbaa !2701
  %67 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5356, !tbaa !1364
  %obj90 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %67, i32 0, i32 1, !dbg !5357
  %68 = load %struct._object*, %struct._object** %obj90, align 8, !dbg !5357, !tbaa !2701
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !5358
  %69 = load i64, i64* %ob_refcnt, align 8, !dbg !5359, !tbaa !1378
  %inc = add i64 %69, 1, !dbg !5359
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !5359, !tbaa !1378
  %70 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !5360, !tbaa !1364
  %head91 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %70, i32 0, i32 3, !dbg !5361
  %71 = load %struct.ndbuf*, %struct.ndbuf** %head91, align 8, !dbg !5361, !tbaa !2581
  %exports = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %71, i32 0, i32 6, !dbg !5362
  %72 = load i64, i64* %exports, align 8, !dbg !5363, !tbaa !3310
  %inc92 = add i64 %72, 1, !dbg !5363
  store i64 %inc92, i64* %exports, align 8, !dbg !5363, !tbaa !3310
  store i32 0, i32* %retval, !dbg !5364
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5364

cleanup:                                          ; preds = %if.end.88, %if.then.83, %if.then.74, %if.then.67, %if.then.60, %if.then.53, %if.then.46, %if.then.34, %if.end.28, %if.then.19, %if.then
  %73 = bitcast i32* %baseflags to i8*, !dbg !5365
  call void @llvm.lifetime.end(i64 4, i8* %73) #1, !dbg !5365
  %74 = bitcast %struct.bufferinfo** %base to i8*, !dbg !5365
  call void @llvm.lifetime.end(i64 8, i8* %74) #1, !dbg !5365
  %75 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !5365
  call void @llvm.lifetime.end(i64 8, i8* %75) #1, !dbg !5365
  %76 = load i32, i32* %retval, !dbg !5365
  ret i32 %76, !dbg !5365
}

; Function Attrs: nounwind uwtable
define internal i32 @ndarray_releasebuf(%struct.NDArrayObject* %self, %struct.bufferinfo* %view) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  %ndbuf = alloca %struct.ndbuf*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !849, metadata !1360), !dbg !5366
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !850, metadata !1360), !dbg !5367
  %0 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !5368, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %0, i32 0, i32 3, !dbg !5369
  %1 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !5369, !tbaa !2581
  %2 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !5370, !tbaa !1364
  %staticbuf = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %2, i32 0, i32 2, !dbg !5371
  %cmp = icmp eq %struct.ndbuf* %1, %staticbuf, !dbg !5372
  br i1 %cmp, label %if.end.5, label %if.then, !dbg !5373

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !5374
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5374
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !851, metadata !1360), !dbg !5375
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !5376, !tbaa !1364
  %internal = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 10, !dbg !5377
  %5 = load i8*, i8** %internal, align 8, !dbg !5377, !tbaa !5378
  %6 = bitcast i8* %5 to %struct.ndbuf*, !dbg !5376
  store %struct.ndbuf* %6, %struct.ndbuf** %ndbuf, align 8, !dbg !5375, !tbaa !1364
  %7 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5379, !tbaa !1364
  %exports = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %7, i32 0, i32 6, !dbg !5381
  %8 = load i64, i64* %exports, align 8, !dbg !5382, !tbaa !3310
  %dec = add i64 %8, -1, !dbg !5382
  store i64 %dec, i64* %exports, align 8, !dbg !5382, !tbaa !3310
  %cmp1 = icmp eq i64 %dec, 0, !dbg !5383
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !5384

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5385, !tbaa !1364
  %10 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !5387, !tbaa !1364
  %head2 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %10, i32 0, i32 3, !dbg !5388
  %11 = load %struct.ndbuf*, %struct.ndbuf** %head2, align 8, !dbg !5388, !tbaa !2581
  %cmp3 = icmp ne %struct.ndbuf* %9, %11, !dbg !5389
  br i1 %cmp3, label %if.then.4, label %if.end, !dbg !5390

if.then.4:                                        ; preds = %land.lhs.true
  %12 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !5391, !tbaa !1364
  %13 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5392, !tbaa !1364
  call void @ndbuf_delete(%struct.NDArrayObject* %12, %struct.ndbuf* %13), !dbg !5393
  br label %if.end, !dbg !5393

if.end:                                           ; preds = %if.then.4, %land.lhs.true, %if.then
  %14 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !5394
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !5394
  br label %if.end.5, !dbg !5395

if.end.5:                                         ; preds = %if.end, %entry
  ret i32 0, !dbg !5396
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_tolist(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !856, metadata !1360), !dbg !5397
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !857, metadata !1360), !dbg !5398
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5399, !tbaa !1364
  %1 = bitcast %struct._object* %0 to %struct.NDArrayObject*, !dbg !5400
  %call = call %struct._object* @ndarray_as_list(%struct.NDArrayObject* %1), !dbg !5401
  ret %struct._object* %call, !dbg !5402
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_push(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %items = alloca %struct._object*, align 8
  %shape = alloca %struct._object*, align 8
  %strides = alloca %struct._object*, align 8
  %format = alloca %struct._object*, align 8
  %offset = alloca i64, align 8
  %flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !926, metadata !1360), !dbg !5403
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !927, metadata !1360), !dbg !5404
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !928, metadata !1360), !dbg !5405
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5406
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5406
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !929, metadata !1360), !dbg !5407
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5408, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !5409
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !5407, !tbaa !1364
  %3 = bitcast %struct._object** %items to i8*, !dbg !5410
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5410
  call void @llvm.dbg.declare(metadata %struct._object** %items, metadata !930, metadata !1360), !dbg !5411
  store %struct._object* null, %struct._object** %items, align 8, !dbg !5411, !tbaa !1364
  %4 = bitcast %struct._object** %shape to i8*, !dbg !5412
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !5412
  call void @llvm.dbg.declare(metadata %struct._object** %shape, metadata !931, metadata !1360), !dbg !5413
  store %struct._object* null, %struct._object** %shape, align 8, !dbg !5413, !tbaa !1364
  %5 = bitcast %struct._object** %strides to i8*, !dbg !5414
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !5414
  call void @llvm.dbg.declare(metadata %struct._object** %strides, metadata !932, metadata !1360), !dbg !5415
  store %struct._object* null, %struct._object** %strides, align 8, !dbg !5415, !tbaa !1364
  %6 = bitcast %struct._object** %format to i8*, !dbg !5416
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5416
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !933, metadata !1360), !dbg !5417
  %7 = load %struct._object*, %struct._object** @simple_format, align 8, !dbg !5418, !tbaa !1364
  store %struct._object* %7, %struct._object** %format, align 8, !dbg !5417, !tbaa !1364
  %8 = bitcast i64* %offset to i8*, !dbg !5419
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !5419
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !934, metadata !1360), !dbg !5420
  store i64 0, i64* %offset, align 8, !dbg !5420, !tbaa !1503
  %9 = bitcast i32* %flags to i8*, !dbg !5421
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !5421
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !935, metadata !1360), !dbg !5422
  store i32 0, i32* %flags, align 4, !dbg !5422, !tbaa !1844
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5423, !tbaa !1364
  %11 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !5425, !tbaa !1364
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %10, %struct._object* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0), i8** getelementptr inbounds ([7 x i8*], [7 x i8*]* @ndarray_push.kwlist, i32 0, i32 0), %struct._object** %items, %struct._object** %shape, %struct._object** %strides, i64* %offset, %struct._object** %format, i32* %flags), !dbg !5426
  %tobool = icmp ne i32 %call, 0, !dbg !5426
  br i1 %tobool, label %if.end, label %if.then, !dbg !5427

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5428
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5428

if.end:                                           ; preds = %entry
  %12 = load i32, i32* %flags, align 4, !dbg !5429, !tbaa !1844
  %and = and i32 %12, 1, !dbg !5431
  %tobool1 = icmp ne i32 %and, 0, !dbg !5431
  br i1 %tobool1, label %if.then.2, label %if.end.3, !dbg !5432

if.then.2:                                        ; preds = %if.end
  %13 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5433, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.90, i32 0, i32 0)), !dbg !5435
  store %struct._object* null, %struct._object** %retval, !dbg !5436
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5436

if.end.3:                                         ; preds = %if.end
  %14 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5437, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %14, i32 0, i32 3, !dbg !5439
  %15 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !5439, !tbaa !2581
  %16 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5440, !tbaa !1364
  %staticbuf = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %16, i32 0, i32 2, !dbg !5441
  %cmp = icmp eq %struct.ndbuf* %15, %staticbuf, !dbg !5442
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !5443

if.then.4:                                        ; preds = %if.end.3
  %17 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5444, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.91, i32 0, i32 0)), !dbg !5446
  store %struct._object* null, %struct._object** %retval, !dbg !5447
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5447

if.end.5:                                         ; preds = %if.end.3
  %18 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5448, !tbaa !1364
  %flags6 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %18, i32 0, i32 1, !dbg !5450
  %19 = load i32, i32* %flags6, align 4, !dbg !5450, !tbaa !2872
  %and7 = and i32 %19, 1, !dbg !5451
  %tobool8 = icmp ne i32 %and7, 0, !dbg !5451
  br i1 %tobool8, label %if.end.18, label %land.lhs.true, !dbg !5452

land.lhs.true:                                    ; preds = %if.end.5
  %20 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5453, !tbaa !1364
  %head9 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %20, i32 0, i32 3, !dbg !5455
  %21 = load %struct.ndbuf*, %struct.ndbuf** %head9, align 8, !dbg !5455, !tbaa !2581
  %exports = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %21, i32 0, i32 6, !dbg !5456
  %22 = load i64, i64* %exports, align 8, !dbg !5456, !tbaa !3310
  %cmp10 = icmp sgt i64 %22, 0, !dbg !5457
  br i1 %cmp10, label %if.then.11, label %if.end.18, !dbg !5458

if.then.11:                                       ; preds = %land.lhs.true
  %23 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5459, !tbaa !1364
  %24 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5461, !tbaa !1364
  %head12 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %24, i32 0, i32 3, !dbg !5462
  %25 = load %struct.ndbuf*, %struct.ndbuf** %head12, align 8, !dbg !5462, !tbaa !2581
  %exports13 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %25, i32 0, i32 6, !dbg !5463
  %26 = load i64, i64* %exports13, align 8, !dbg !5463, !tbaa !3310
  %27 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5464, !tbaa !1364
  %head14 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %27, i32 0, i32 3, !dbg !5465
  %28 = load %struct.ndbuf*, %struct.ndbuf** %head14, align 8, !dbg !5465, !tbaa !2581
  %exports15 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %28, i32 0, i32 6, !dbg !5466
  %29 = load i64, i64* %exports15, align 8, !dbg !5466, !tbaa !3310
  %cmp16 = icmp eq i64 %29, 1, !dbg !5467
  %cond = select i1 %cmp16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), !dbg !5464
  %call17 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %23, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.92, i32 0, i32 0), i64 %26, i8* %cond), !dbg !5468
  store %struct._object* null, %struct._object** %retval, !dbg !5469
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5469

if.end.18:                                        ; preds = %land.lhs.true, %if.end.5
  %30 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5470, !tbaa !1364
  %31 = load %struct._object*, %struct._object** %items, align 8, !dbg !5472, !tbaa !1364
  %32 = load %struct._object*, %struct._object** %shape, align 8, !dbg !5473, !tbaa !1364
  %33 = load %struct._object*, %struct._object** %strides, align 8, !dbg !5474, !tbaa !1364
  %34 = load i64, i64* %offset, align 8, !dbg !5475, !tbaa !1503
  %35 = load %struct._object*, %struct._object** %format, align 8, !dbg !5476, !tbaa !1364
  %36 = load i32, i32* %flags, align 4, !dbg !5477, !tbaa !1844
  %call19 = call i32 @ndarray_push_base(%struct.NDArrayObject* %30, %struct._object* %31, %struct._object* %32, %struct._object* %33, i64 %34, %struct._object* %35, i32 %36), !dbg !5478
  %cmp20 = icmp slt i32 %call19, 0, !dbg !5479
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !5480

if.then.21:                                       ; preds = %if.end.18
  store %struct._object* null, %struct._object** %retval, !dbg !5481
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5481

if.end.22:                                        ; preds = %if.end.18
  %37 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5482, !tbaa !1378
  %inc = add i64 %37, 1, !dbg !5482
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5482, !tbaa !1378
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5483
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5483

cleanup:                                          ; preds = %if.end.22, %if.then.21, %if.then.11, %if.then.4, %if.then.2, %if.then
  %38 = bitcast i32* %flags to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 4, i8* %38) #1, !dbg !5484
  %39 = bitcast i64* %offset to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !5484
  %40 = bitcast %struct._object** %format to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 8, i8* %40) #1, !dbg !5484
  %41 = bitcast %struct._object** %strides to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 8, i8* %41) #1, !dbg !5484
  %42 = bitcast %struct._object** %shape to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !5484
  %43 = bitcast %struct._object** %items to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !5484
  %44 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !5484
  %45 = load %struct._object*, %struct._object** %retval, !dbg !5484
  ret %struct._object* %45, !dbg !5484
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_pop(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1127, metadata !1360), !dbg !5485
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1128, metadata !1360), !dbg !5486
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5487
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5487
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1129, metadata !1360), !dbg !5488
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5489, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !5490
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !5488, !tbaa !1364
  %3 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5491, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %3, i32 0, i32 3, !dbg !5493
  %4 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !5493, !tbaa !2581
  %5 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5494, !tbaa !1364
  %staticbuf = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %5, i32 0, i32 2, !dbg !5495
  %cmp = icmp eq %struct.ndbuf* %4, %staticbuf, !dbg !5496
  br i1 %cmp, label %if.then, label %if.end, !dbg !5497

if.then:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5498, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.91, i32 0, i32 0)), !dbg !5500
  store %struct._object* null, %struct._object** %retval, !dbg !5501
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5501

if.end:                                           ; preds = %entry
  %7 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5502, !tbaa !1364
  %head1 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %7, i32 0, i32 3, !dbg !5504
  %8 = load %struct.ndbuf*, %struct.ndbuf** %head1, align 8, !dbg !5504, !tbaa !2581
  %exports = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %8, i32 0, i32 6, !dbg !5505
  %9 = load i64, i64* %exports, align 8, !dbg !5505, !tbaa !3310
  %cmp2 = icmp sgt i64 %9, 0, !dbg !5506
  br i1 %cmp2, label %if.then.3, label %if.end.9, !dbg !5507

if.then.3:                                        ; preds = %if.end
  %10 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5508, !tbaa !1364
  %11 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5510, !tbaa !1364
  %head4 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %11, i32 0, i32 3, !dbg !5511
  %12 = load %struct.ndbuf*, %struct.ndbuf** %head4, align 8, !dbg !5511, !tbaa !2581
  %exports5 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %12, i32 0, i32 6, !dbg !5512
  %13 = load i64, i64* %exports5, align 8, !dbg !5512, !tbaa !3310
  %14 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5513, !tbaa !1364
  %head6 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %14, i32 0, i32 3, !dbg !5514
  %15 = load %struct.ndbuf*, %struct.ndbuf** %head6, align 8, !dbg !5514, !tbaa !2581
  %exports7 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %15, i32 0, i32 6, !dbg !5515
  %16 = load i64, i64* %exports7, align 8, !dbg !5515, !tbaa !3310
  %cmp8 = icmp eq i64 %16, 1, !dbg !5516
  %cond = select i1 %cmp8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.94, i32 0, i32 0), !dbg !5513
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %10, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.92, i32 0, i32 0), i64 %13, i8* %cond), !dbg !5517
  store %struct._object* null, %struct._object** %retval, !dbg !5518
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5518

if.end.9:                                         ; preds = %if.end
  %17 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5519, !tbaa !1364
  %head10 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %17, i32 0, i32 3, !dbg !5521
  %18 = load %struct.ndbuf*, %struct.ndbuf** %head10, align 8, !dbg !5521, !tbaa !2581
  %next = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %18, i32 0, i32 0, !dbg !5522
  %19 = load %struct.ndbuf*, %struct.ndbuf** %next, align 8, !dbg !5522, !tbaa !2923
  %cmp11 = icmp eq %struct.ndbuf* %19, null, !dbg !5523
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !5524

if.then.12:                                       ; preds = %if.end.9
  %20 = load %struct._object*, %struct._object** @PyExc_BufferError, align 8, !dbg !5525, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.111, i32 0, i32 0)), !dbg !5527
  store %struct._object* null, %struct._object** %retval, !dbg !5528
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5528

if.end.13:                                        ; preds = %if.end.9
  %21 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5529, !tbaa !1364
  call void @ndbuf_pop(%struct.NDArrayObject* %21), !dbg !5530
  %22 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5531, !tbaa !1378
  %inc = add i64 %22, 1, !dbg !5531
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5531, !tbaa !1378
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5532
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5532

cleanup:                                          ; preds = %if.end.13, %if.then.12, %if.then.3, %if.then
  %23 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5533
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !5533
  %24 = load %struct._object*, %struct._object** %retval, !dbg !5533
  ret %struct._object* %24, !dbg !5533
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_add_suboffsets(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1132, metadata !1360), !dbg !5534
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1133, metadata !1360), !dbg !5535
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5536
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5536
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1134, metadata !1360), !dbg !5537
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5538, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !5539
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !5537, !tbaa !1364
  %3 = bitcast %struct.bufferinfo** %base to i8*, !dbg !5540
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5540
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1135, metadata !1360), !dbg !5541
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5542, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 3, !dbg !5543
  %5 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !5543, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 7, !dbg !5544
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !5541, !tbaa !1364
  %6 = bitcast i64* %i to i8*, !dbg !5545
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5545
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1136, metadata !1360), !dbg !5546
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5547, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 9, !dbg !5549
  %8 = load i64*, i64** %suboffsets, align 8, !dbg !5549, !tbaa !2033
  %cmp = icmp ne i64* %8, null, !dbg !5550
  br i1 %cmp, label %if.then, label %if.end, !dbg !5551

if.then:                                          ; preds = %entry
  %9 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5552, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.112, i32 0, i32 0)), !dbg !5554
  store %struct._object* null, %struct._object** %retval, !dbg !5555
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5555

if.end:                                           ; preds = %entry
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5556, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %10, i32 0, i32 8, !dbg !5558
  %11 = load i64*, i64** %strides, align 8, !dbg !5558, !tbaa !2024
  %cmp2 = icmp eq i64* %11, null, !dbg !5559
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !5560

if.then.3:                                        ; preds = %if.end
  %12 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5561, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.113, i32 0, i32 0)), !dbg !5563
  store %struct._object* null, %struct._object** %retval, !dbg !5564
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5564

if.end.4:                                         ; preds = %if.end
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5565, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 5, !dbg !5566
  %14 = load i32, i32* %ndim, align 4, !dbg !5566, !tbaa !1629
  %conv = sext i32 %14 to i64, !dbg !5565
  %mul = mul i64 %conv, 8, !dbg !5567
  %call = call i8* @PyMem_Malloc(i64 %mul), !dbg !5568
  %15 = bitcast i8* %call to i64*, !dbg !5568
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5569, !tbaa !1364
  %suboffsets5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 9, !dbg !5570
  store i64* %15, i64** %suboffsets5, align 8, !dbg !5571, !tbaa !2033
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5572, !tbaa !1364
  %suboffsets6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 9, !dbg !5574
  %18 = load i64*, i64** %suboffsets6, align 8, !dbg !5574, !tbaa !2033
  %cmp7 = icmp eq i64* %18, null, !dbg !5575
  br i1 %cmp7, label %if.then.9, label %if.end.11, !dbg !5576

if.then.9:                                        ; preds = %if.end.4
  %call10 = call %struct._object* @PyErr_NoMemory(), !dbg !5577
  store %struct._object* null, %struct._object** %retval, !dbg !5579
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5579

if.end.11:                                        ; preds = %if.end.4
  store i64 0, i64* %i, align 8, !dbg !5580, !tbaa !1503
  br label %for.cond, !dbg !5582

for.cond:                                         ; preds = %for.inc, %if.end.11
  %19 = load i64, i64* %i, align 8, !dbg !5583, !tbaa !1503
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5587, !tbaa !1364
  %ndim12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 5, !dbg !5588
  %21 = load i32, i32* %ndim12, align 4, !dbg !5588, !tbaa !1629
  %conv13 = sext i32 %21 to i64, !dbg !5587
  %cmp14 = icmp slt i64 %19, %conv13, !dbg !5589
  br i1 %cmp14, label %for.body, label %for.end, !dbg !5590

for.body:                                         ; preds = %for.cond
  %22 = load i64, i64* %i, align 8, !dbg !5591, !tbaa !1503
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5592, !tbaa !1364
  %suboffsets16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 9, !dbg !5593
  %24 = load i64*, i64** %suboffsets16, align 8, !dbg !5593, !tbaa !2033
  %arrayidx = getelementptr i64, i64* %24, i64 %22, !dbg !5592
  store i64 -1, i64* %arrayidx, align 8, !dbg !5594, !tbaa !1503
  br label %for.inc, !dbg !5592

for.inc:                                          ; preds = %for.body
  %25 = load i64, i64* %i, align 8, !dbg !5595, !tbaa !1503
  %inc = add i64 %25, 1, !dbg !5595
  store i64 %inc, i64* %i, align 8, !dbg !5595, !tbaa !1503
  br label %for.cond, !dbg !5596

for.end:                                          ; preds = %for.cond
  %26 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5597, !tbaa !1378
  %inc17 = add i64 %26, 1, !dbg !5597
  store i64 %inc17, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5597, !tbaa !1378
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5598
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5598

cleanup:                                          ; preds = %for.end, %if.then.9, %if.then.3, %if.then
  %27 = bitcast i64* %i to i8*, !dbg !5599
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !5599
  %28 = bitcast %struct.bufferinfo** %base to i8*, !dbg !5599
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !5599
  %29 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5599
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !5599
  %30 = load %struct._object*, %struct._object** %retval, !dbg !5599
  ret %struct._object* %30, !dbg !5599
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_memoryview_from_buffer(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %view = alloca %struct.bufferinfo*, align 8
  %ndbuf = alloca %struct.ndbuf*, align 8
  %p = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1139, metadata !1360), !dbg !5600
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1140, metadata !1360), !dbg !5601
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5602
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5602
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1141, metadata !1360), !dbg !5603
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !5604, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !5605
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !5603, !tbaa !1364
  %3 = bitcast %struct.bufferinfo** %view to i8*, !dbg !5606
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5606
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view, metadata !1142, metadata !1360), !dbg !5607
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5608, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 3, !dbg !5609
  %5 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !5609, !tbaa !2581
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 7, !dbg !5610
  store %struct.bufferinfo* %base, %struct.bufferinfo** %view, align 8, !dbg !5607, !tbaa !1364
  %6 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !5611
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5611
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !1143, metadata !1360), !dbg !5612
  %7 = bitcast i8** %p to i8*, !dbg !5613
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !5613
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1144, metadata !1360), !dbg !5614
  %8 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5615, !tbaa !1364
  %head1 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %8, i32 0, i32 3, !dbg !5617
  %9 = load %struct.ndbuf*, %struct.ndbuf** %head1, align 8, !dbg !5617, !tbaa !2581
  %10 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5618, !tbaa !1364
  %staticbuf = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %10, i32 0, i32 2, !dbg !5619
  %cmp = icmp eq %struct.ndbuf* %9, %staticbuf, !dbg !5620
  br i1 %cmp, label %if.else, label %if.then, !dbg !5621

if.then:                                          ; preds = %entry
  %11 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !5622, !tbaa !1364
  %head2 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %11, i32 0, i32 3, !dbg !5623
  %12 = load %struct.ndbuf*, %struct.ndbuf** %head2, align 8, !dbg !5623, !tbaa !2581
  store %struct.ndbuf* %12, %struct.ndbuf** %ndbuf, align 8, !dbg !5624, !tbaa !1364
  br label %if.end.13, !dbg !5625

if.else:                                          ; preds = %entry
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5626, !tbaa !1364
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 1, !dbg !5628
  %14 = load %struct._object*, %struct._object** %obj, align 8, !dbg !5628, !tbaa !2701
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !5629
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5629, !tbaa !1374
  %cmp3 = icmp eq %struct._typeobject* %15, @NDArray_Type, !dbg !5630
  br i1 %cmp3, label %land.lhs.true, label %if.else.12, !dbg !5631

land.lhs.true:                                    ; preds = %if.else
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5632, !tbaa !1364
  %obj4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 1, !dbg !5634
  %17 = load %struct._object*, %struct._object** %obj4, align 8, !dbg !5634, !tbaa !2701
  %18 = bitcast %struct._object* %17 to %struct.NDArrayObject*, !dbg !5635
  %head5 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %18, i32 0, i32 3, !dbg !5636
  %19 = load %struct.ndbuf*, %struct.ndbuf** %head5, align 8, !dbg !5636, !tbaa !2581
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5637, !tbaa !1364
  %obj6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 1, !dbg !5638
  %21 = load %struct._object*, %struct._object** %obj6, align 8, !dbg !5638, !tbaa !2701
  %22 = bitcast %struct._object* %21 to %struct.NDArrayObject*, !dbg !5639
  %staticbuf7 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %22, i32 0, i32 2, !dbg !5640
  %cmp8 = icmp eq %struct.ndbuf* %19, %staticbuf7, !dbg !5641
  br i1 %cmp8, label %if.else.12, label %if.then.9, !dbg !5642

if.then.9:                                        ; preds = %land.lhs.true
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5643, !tbaa !1364
  %obj10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 1, !dbg !5644
  %24 = load %struct._object*, %struct._object** %obj10, align 8, !dbg !5644, !tbaa !2701
  %25 = bitcast %struct._object* %24 to %struct.NDArrayObject*, !dbg !5645
  %head11 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %25, i32 0, i32 3, !dbg !5646
  %26 = load %struct.ndbuf*, %struct.ndbuf** %head11, align 8, !dbg !5646, !tbaa !2581
  store %struct.ndbuf* %26, %struct.ndbuf** %ndbuf, align 8, !dbg !5647, !tbaa !1364
  br label %if.end, !dbg !5648

if.else.12:                                       ; preds = %land.lhs.true, %if.else
  %27 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5649, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %27, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.114, i32 0, i32 0)), !dbg !5651
  store %struct._object* null, %struct._object** %retval, !dbg !5652
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5652

if.end:                                           ; preds = %if.then.9
  br label %if.end.13

if.end.13:                                        ; preds = %if.end, %if.then
  %28 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5653, !tbaa !1364
  %29 = bitcast %struct.bufferinfo* %28 to i8*, !dbg !5654
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.bufferinfo* @ndarray_memoryview_from_buffer.info to i8*), i8* %29, i64 80, i32 8, i1 false), !dbg !5654, !tbaa.struct !5012
  %30 = load i8*, i8** @infobuf, align 8, !dbg !5655, !tbaa !1364
  %31 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5656, !tbaa !1364
  %len = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %31, i32 0, i32 2, !dbg !5657
  %32 = load i64, i64* %len, align 8, !dbg !5657, !tbaa !3290
  %call = call i8* @PyMem_Realloc(i8* %30, i64 %32), !dbg !5658
  store i8* %call, i8** %p, align 8, !dbg !5659, !tbaa !1364
  %33 = load i8*, i8** %p, align 8, !dbg !5660, !tbaa !1364
  %cmp14 = icmp eq i8* %33, null, !dbg !5662
  br i1 %cmp14, label %if.then.15, label %if.else.17, !dbg !5663

if.then.15:                                       ; preds = %if.end.13
  %34 = load i8*, i8** @infobuf, align 8, !dbg !5664, !tbaa !1364
  call void @PyMem_Free(i8* %34), !dbg !5666
  %call16 = call %struct._object* @PyErr_NoMemory(), !dbg !5667
  store i8* null, i8** @infobuf, align 8, !dbg !5668, !tbaa !1364
  store %struct._object* null, %struct._object** %retval, !dbg !5669
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5669

if.else.17:                                       ; preds = %if.end.13
  %35 = load i8*, i8** %p, align 8, !dbg !5670, !tbaa !1364
  store i8* %35, i8** @infobuf, align 8, !dbg !5672, !tbaa !1364
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.17
  %36 = load i8*, i8** @infobuf, align 8, !dbg !5673, !tbaa !1364
  %37 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5674, !tbaa !1364
  %data = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %37, i32 0, i32 4, !dbg !5675
  %38 = load i8*, i8** %data, align 8, !dbg !5675, !tbaa !2957
  %39 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5676, !tbaa !1364
  %len19 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %39, i32 0, i32 2, !dbg !5677
  %40 = load i64, i64* %len19, align 8, !dbg !5677, !tbaa !3290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %38, i64 %40, i32 1, i1 false), !dbg !5678
  %41 = load i8*, i8** @infobuf, align 8, !dbg !5679, !tbaa !1364
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5680, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 0, !dbg !5681
  %43 = load i8*, i8** %buf, align 8, !dbg !5681, !tbaa !2077
  %44 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !5682, !tbaa !1364
  %data20 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %44, i32 0, i32 4, !dbg !5683
  %45 = load i8*, i8** %data20, align 8, !dbg !5683, !tbaa !2957
  %sub.ptr.lhs.cast = ptrtoint i8* %43 to i64, !dbg !5684
  %sub.ptr.rhs.cast = ptrtoint i8* %45 to i64, !dbg !5684
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5684
  %add.ptr = getelementptr i8, i8* %41, i64 %sub.ptr.sub, !dbg !5685
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.bufferinfo, %struct.bufferinfo* @ndarray_memoryview_from_buffer.info, i32 0, i32 0), align 8, !dbg !5686, !tbaa !2077
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5687, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 6, !dbg !5689
  %47 = load i8*, i8** %format, align 8, !dbg !5689, !tbaa !1737
  %tobool = icmp ne i8* %47, null, !dbg !5687
  br i1 %tobool, label %if.then.21, label %if.end.30, !dbg !5690

if.then.21:                                       ; preds = %if.end.18
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5691, !tbaa !1364
  %format22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 6, !dbg !5694
  %49 = load i8*, i8** %format22, align 8, !dbg !5694, !tbaa !1737
  %call23 = call i64 @strlen(i8* %49) #6, !dbg !5695
  %cmp24 = icmp ugt i64 %call23, 128, !dbg !5696
  br i1 %cmp24, label %if.then.25, label %if.end.27, !dbg !5697

if.then.25:                                       ; preds = %if.then.21
  %50 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5698, !tbaa !1364
  %call26 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %50, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.115, i32 0, i32 0), i32 128), !dbg !5700
  store %struct._object* null, %struct._object** %retval, !dbg !5701
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5701

if.end.27:                                        ; preds = %if.then.21
  %51 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5702, !tbaa !1364
  %format28 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %51, i32 0, i32 6, !dbg !5703
  %52 = load i8*, i8** %format28, align 8, !dbg !5703, !tbaa !1737
  %call29 = call i8* @strcpy(i8* getelementptr inbounds ([129 x i8], [129 x i8]* @ndarray_memoryview_from_buffer.format, i32 0, i32 0), i8* %52) #1, !dbg !5704
  store i8* getelementptr inbounds ([129 x i8], [129 x i8]* @ndarray_memoryview_from_buffer.format, i32 0, i32 0), i8** getelementptr inbounds (%struct.bufferinfo, %struct.bufferinfo* @ndarray_memoryview_from_buffer.info, i32 0, i32 6), align 8, !dbg !5705, !tbaa !1737
  br label %if.end.30, !dbg !5706

if.end.30:                                        ; preds = %if.end.27, %if.end.18
  %53 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5707, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %53, i32 0, i32 5, !dbg !5709
  %54 = load i32, i32* %ndim, align 4, !dbg !5709, !tbaa !1629
  %cmp31 = icmp sgt i32 %54, 128, !dbg !5710
  br i1 %cmp31, label %if.then.32, label %if.end.34, !dbg !5711

if.then.32:                                       ; preds = %if.end.30
  %55 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5712, !tbaa !1364
  %call33 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %55, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.116, i32 0, i32 0), i32 128), !dbg !5714
  store %struct._object* null, %struct._object** %retval, !dbg !5715
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5715

if.end.34:                                        ; preds = %if.end.30
  %56 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5716, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %56, i32 0, i32 7, !dbg !5718
  %57 = load i64*, i64** %shape, align 8, !dbg !5718, !tbaa !1716
  %tobool35 = icmp ne i64* %57, null, !dbg !5716
  br i1 %tobool35, label %if.then.36, label %if.end.39, !dbg !5719

if.then.36:                                       ; preds = %if.end.34
  %58 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5720, !tbaa !1364
  %shape37 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %58, i32 0, i32 7, !dbg !5722
  %59 = load i64*, i64** %shape37, align 8, !dbg !5722, !tbaa !1716
  %60 = bitcast i64* %59 to i8*, !dbg !5723
  %61 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5724, !tbaa !1364
  %ndim38 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %61, i32 0, i32 5, !dbg !5725
  %62 = load i32, i32* %ndim38, align 4, !dbg !5725, !tbaa !1629
  %conv = sext i32 %62 to i64, !dbg !5724
  %mul = mul i64 %conv, 8, !dbg !5726
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([128 x i64]* @ndarray_memoryview_from_buffer.shape to i8*), i8* %60, i64 %mul, i32 8, i1 false), !dbg !5723
  store i64* getelementptr inbounds ([128 x i64], [128 x i64]* @ndarray_memoryview_from_buffer.shape, i32 0, i32 0), i64** getelementptr inbounds (%struct.bufferinfo, %struct.bufferinfo* @ndarray_memoryview_from_buffer.info, i32 0, i32 7), align 8, !dbg !5727, !tbaa !1716
  br label %if.end.39, !dbg !5728

if.end.39:                                        ; preds = %if.then.36, %if.end.34
  %63 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5729, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %63, i32 0, i32 8, !dbg !5731
  %64 = load i64*, i64** %strides, align 8, !dbg !5731, !tbaa !2024
  %tobool40 = icmp ne i64* %64, null, !dbg !5729
  br i1 %tobool40, label %if.then.41, label %if.end.46, !dbg !5732

if.then.41:                                       ; preds = %if.end.39
  %65 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5733, !tbaa !1364
  %strides42 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %65, i32 0, i32 8, !dbg !5735
  %66 = load i64*, i64** %strides42, align 8, !dbg !5735, !tbaa !2024
  %67 = bitcast i64* %66 to i8*, !dbg !5736
  %68 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5737, !tbaa !1364
  %ndim43 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %68, i32 0, i32 5, !dbg !5738
  %69 = load i32, i32* %ndim43, align 4, !dbg !5738, !tbaa !1629
  %conv44 = sext i32 %69 to i64, !dbg !5737
  %mul45 = mul i64 %conv44, 8, !dbg !5739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([128 x i64]* @ndarray_memoryview_from_buffer.strides to i8*), i8* %67, i64 %mul45, i32 8, i1 false), !dbg !5736
  store i64* getelementptr inbounds ([128 x i64], [128 x i64]* @ndarray_memoryview_from_buffer.strides, i32 0, i32 0), i64** getelementptr inbounds (%struct.bufferinfo, %struct.bufferinfo* @ndarray_memoryview_from_buffer.info, i32 0, i32 8), align 8, !dbg !5740, !tbaa !2024
  br label %if.end.46, !dbg !5741

if.end.46:                                        ; preds = %if.then.41, %if.end.39
  %70 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5742, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %70, i32 0, i32 9, !dbg !5744
  %71 = load i64*, i64** %suboffsets, align 8, !dbg !5744, !tbaa !2033
  %tobool47 = icmp ne i64* %71, null, !dbg !5742
  br i1 %tobool47, label %if.then.48, label %if.end.53, !dbg !5745

if.then.48:                                       ; preds = %if.end.46
  %72 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5746, !tbaa !1364
  %suboffsets49 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %72, i32 0, i32 9, !dbg !5748
  %73 = load i64*, i64** %suboffsets49, align 8, !dbg !5748, !tbaa !2033
  %74 = bitcast i64* %73 to i8*, !dbg !5749
  %75 = load %struct.bufferinfo*, %struct.bufferinfo** %view, align 8, !dbg !5750, !tbaa !1364
  %ndim50 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %75, i32 0, i32 5, !dbg !5751
  %76 = load i32, i32* %ndim50, align 4, !dbg !5751, !tbaa !1629
  %conv51 = sext i32 %76 to i64, !dbg !5750
  %mul52 = mul i64 %conv51, 8, !dbg !5752
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([128 x i64]* @ndarray_memoryview_from_buffer.suboffsets to i8*), i8* %74, i64 %mul52, i32 8, i1 false), !dbg !5749
  store i64* getelementptr inbounds ([128 x i64], [128 x i64]* @ndarray_memoryview_from_buffer.suboffsets, i32 0, i32 0), i64** getelementptr inbounds (%struct.bufferinfo, %struct.bufferinfo* @ndarray_memoryview_from_buffer.info, i32 0, i32 9), align 8, !dbg !5753, !tbaa !2033
  br label %if.end.53, !dbg !5754

if.end.53:                                        ; preds = %if.then.48, %if.end.46
  %call54 = call %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo* @ndarray_memoryview_from_buffer.info), !dbg !5755
  store %struct._object* %call54, %struct._object** %retval, !dbg !5756
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5756

cleanup:                                          ; preds = %if.end.53, %if.then.32, %if.then.25, %if.then.15, %if.else.12
  %77 = bitcast i8** %p to i8*, !dbg !5757
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !5757
  %78 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !5757
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !5757
  %79 = bitcast %struct.bufferinfo** %view to i8*, !dbg !5757
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !5757
  %80 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !5757
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !5757
  %81 = load %struct._object*, %struct._object** %retval, !dbg !5757
  ret %struct._object* %81, !dbg !5757
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_as_list(%struct.NDArrayObject* %nd) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %nd.addr = alloca %struct.NDArrayObject*, align 8
  %structobj = alloca %struct._object*, align 8
  %unpack_from = alloca %struct._object*, align 8
  %lst = alloca %struct._object*, align 8
  %mview = alloca %struct._object*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %shape = alloca i64*, align 8
  %strides = alloca i64*, align 8
  %simple_shape = alloca [1 x i64], align 8
  %simple_strides = alloca [1 x i64], align 8
  %item = alloca i8*, align 8
  %format = alloca %struct._object*, align 8
  %fmt = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp53 = alloca %struct._object*, align 8
  %_py_xdecref_tmp74 = alloca %struct._object*, align 8
  %_py_decref_tmp79 = alloca %struct._object*, align 8
  %_py_xdecref_tmp95 = alloca %struct._object*, align 8
  %_py_decref_tmp100 = alloca %struct._object*, align 8
  store %struct.NDArrayObject* %nd, %struct.NDArrayObject** %nd.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd.addr, metadata !862, metadata !1360), !dbg !5758
  %0 = bitcast %struct._object** %structobj to i8*, !dbg !5759
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5759
  call void @llvm.dbg.declare(metadata %struct._object** %structobj, metadata !863, metadata !1360), !dbg !5760
  store %struct._object* null, %struct._object** %structobj, align 8, !dbg !5760, !tbaa !1364
  %1 = bitcast %struct._object** %unpack_from to i8*, !dbg !5759
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5759
  call void @llvm.dbg.declare(metadata %struct._object** %unpack_from, metadata !864, metadata !1360), !dbg !5761
  store %struct._object* null, %struct._object** %unpack_from, align 8, !dbg !5761, !tbaa !1364
  %2 = bitcast %struct._object** %lst to i8*, !dbg !5762
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5762
  call void @llvm.dbg.declare(metadata %struct._object** %lst, metadata !865, metadata !1360), !dbg !5763
  store %struct._object* null, %struct._object** %lst, align 8, !dbg !5763, !tbaa !1364
  %3 = bitcast %struct._object** %mview to i8*, !dbg !5762
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5762
  call void @llvm.dbg.declare(metadata %struct._object** %mview, metadata !866, metadata !1360), !dbg !5764
  store %struct._object* null, %struct._object** %mview, align 8, !dbg !5764, !tbaa !1364
  %4 = bitcast %struct.bufferinfo** %base to i8*, !dbg !5765
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !5765
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !867, metadata !1360), !dbg !5766
  %5 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !5767, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %5, i32 0, i32 3, !dbg !5768
  %6 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !5768, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %6, i32 0, i32 7, !dbg !5769
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !5766, !tbaa !1364
  %7 = bitcast i64** %shape to i8*, !dbg !5770
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !5770
  call void @llvm.dbg.declare(metadata i64** %shape, metadata !868, metadata !1360), !dbg !5771
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5772, !tbaa !1364
  %shape2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 7, !dbg !5773
  %9 = load i64*, i64** %shape2, align 8, !dbg !5773, !tbaa !1716
  store i64* %9, i64** %shape, align 8, !dbg !5771, !tbaa !1364
  %10 = bitcast i64** %strides to i8*, !dbg !5774
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !5774
  call void @llvm.dbg.declare(metadata i64** %strides, metadata !869, metadata !1360), !dbg !5775
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5776, !tbaa !1364
  %strides3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 8, !dbg !5777
  %12 = load i64*, i64** %strides3, align 8, !dbg !5777, !tbaa !2024
  store i64* %12, i64** %strides, align 8, !dbg !5775, !tbaa !1364
  %13 = bitcast [1 x i64]* %simple_shape to i8*, !dbg !5778
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !5778
  call void @llvm.dbg.declare(metadata [1 x i64]* %simple_shape, metadata !870, metadata !1360), !dbg !5779
  %14 = bitcast [1 x i64]* %simple_strides to i8*, !dbg !5780
  call void @llvm.lifetime.start(i64 8, i8* %14) #1, !dbg !5780
  call void @llvm.dbg.declare(metadata [1 x i64]* %simple_strides, metadata !872, metadata !1360), !dbg !5781
  %15 = bitcast i8** %item to i8*, !dbg !5782
  call void @llvm.lifetime.start(i64 8, i8* %15) #1, !dbg !5782
  call void @llvm.dbg.declare(metadata i8** %item, metadata !873, metadata !1360), !dbg !5783
  store i8* null, i8** %item, align 8, !dbg !5783, !tbaa !1364
  %16 = bitcast %struct._object** %format to i8*, !dbg !5784
  call void @llvm.lifetime.start(i64 8, i8* %16) #1, !dbg !5784
  call void @llvm.dbg.declare(metadata %struct._object** %format, metadata !874, metadata !1360), !dbg !5785
  %17 = bitcast i8** %fmt to i8*, !dbg !5786
  call void @llvm.lifetime.start(i64 8, i8* %17) #1, !dbg !5786
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !875, metadata !1360), !dbg !5787
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5788, !tbaa !1364
  %format4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 6, !dbg !5789
  %19 = load i8*, i8** %format4, align 8, !dbg !5789, !tbaa !1737
  store i8* %19, i8** %fmt, align 8, !dbg !5787, !tbaa !1364
  %20 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !5790, !tbaa !1364
  %head5 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %20, i32 0, i32 3, !dbg !5791
  %21 = load %struct.ndbuf*, %struct.ndbuf** %head5, align 8, !dbg !5791, !tbaa !2581
  %base6 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %21, i32 0, i32 7, !dbg !5792
  store %struct.bufferinfo* %base6, %struct.bufferinfo** %base, align 8, !dbg !5793, !tbaa !1364
  %22 = load i8*, i8** %fmt, align 8, !dbg !5794, !tbaa !1364
  %cmp = icmp eq i8* %22, null, !dbg !5796
  br i1 %cmp, label %if.then, label %if.end, !dbg !5797

if.then:                                          ; preds = %entry
  %23 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !5798, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.82, i32 0, i32 0)), !dbg !5800
  store %struct._object* null, %struct._object** %retval, !dbg !5801
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5801

if.end:                                           ; preds = %entry
  %24 = load i64*, i64** %shape, align 8, !dbg !5802, !tbaa !1364
  %cmp7 = icmp eq i64* %24, null, !dbg !5804
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !5805

if.then.8:                                        ; preds = %if.end
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %simple_shape, i32 0, i32 0, !dbg !5806
  store i64* %arraydecay, i64** %shape, align 8, !dbg !5808, !tbaa !1364
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5809, !tbaa !1364
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 2, !dbg !5810
  %26 = load i64, i64* %len, align 8, !dbg !5810, !tbaa !1860
  %27 = load i64*, i64** %shape, align 8, !dbg !5811, !tbaa !1364
  %arrayidx = getelementptr i64, i64* %27, i64 0, !dbg !5811
  store i64 %26, i64* %arrayidx, align 8, !dbg !5812, !tbaa !1503
  %arraydecay9 = getelementptr inbounds [1 x i64], [1 x i64]* %simple_strides, i32 0, i32 0, !dbg !5813
  store i64* %arraydecay9, i64** %strides, align 8, !dbg !5814, !tbaa !1364
  %28 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5815, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %28, i32 0, i32 3, !dbg !5816
  %29 = load i64, i64* %itemsize, align 8, !dbg !5816, !tbaa !1739
  %30 = load i64*, i64** %strides, align 8, !dbg !5817, !tbaa !1364
  %arrayidx10 = getelementptr i64, i64* %30, i64 0, !dbg !5817
  store i64 %29, i64* %arrayidx10, align 8, !dbg !5818, !tbaa !1503
  br label %if.end.18, !dbg !5819

if.else:                                          ; preds = %if.end
  %31 = load i64*, i64** %strides, align 8, !dbg !5820, !tbaa !1364
  %cmp11 = icmp eq i64* %31, null, !dbg !5822
  br i1 %cmp11, label %if.then.12, label %if.end.17, !dbg !5823

if.then.12:                                       ; preds = %if.else
  %32 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !5824, !tbaa !1364
  %head13 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %32, i32 0, i32 3, !dbg !5826
  %33 = load %struct.ndbuf*, %struct.ndbuf** %head13, align 8, !dbg !5826, !tbaa !2581
  %call = call i64* @strides_from_shape(%struct.ndbuf* %33, i32 0), !dbg !5827
  store i64* %call, i64** %strides, align 8, !dbg !5828, !tbaa !1364
  %34 = load i64*, i64** %strides, align 8, !dbg !5829, !tbaa !1364
  %cmp14 = icmp eq i64* %34, null, !dbg !5831
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !5832

if.then.15:                                       ; preds = %if.then.12
  store %struct._object* null, %struct._object** %retval, !dbg !5833
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5833

if.end.16:                                        ; preds = %if.then.12
  br label %if.end.17, !dbg !5834

if.end.17:                                        ; preds = %if.end.16, %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.8
  %35 = load i8*, i8** %fmt, align 8, !dbg !5835, !tbaa !1364
  %call19 = call %struct._object* @PyUnicode_FromString(i8* %35), !dbg !5836
  store %struct._object* %call19, %struct._object** %format, align 8, !dbg !5837, !tbaa !1364
  %36 = load %struct._object*, %struct._object** %format, align 8, !dbg !5838, !tbaa !1364
  %cmp20 = icmp eq %struct._object* %36, null, !dbg !5840
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !5841

if.then.21:                                       ; preds = %if.end.18
  br label %out, !dbg !5842

if.end.22:                                        ; preds = %if.end.18
  %37 = load %struct._object*, %struct._object** @Struct, align 8, !dbg !5843, !tbaa !1364
  %38 = load %struct._object*, %struct._object** %format, align 8, !dbg !5844, !tbaa !1364
  %call23 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %37, %struct._object* %38, i8* null), !dbg !5845
  store %struct._object* %call23, %struct._object** %structobj, align 8, !dbg !5846, !tbaa !1364
  br label %do.body, !dbg !5847

do.body:                                          ; preds = %if.end.22
  %39 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5848
  call void @llvm.lifetime.start(i64 8, i8* %39) #1, !dbg !5848
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !876, metadata !1360), !dbg !5850
  %40 = load %struct._object*, %struct._object** %format, align 8, !dbg !5851, !tbaa !1364
  store %struct._object* %40, %struct._object** %_py_decref_tmp, align 8, !dbg !5850, !tbaa !1364
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5852, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !5854
  %42 = load i64, i64* %ob_refcnt, align 8, !dbg !5855, !tbaa !1378
  %dec = add i64 %42, -1, !dbg !5855
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5855, !tbaa !1378
  %cmp24 = icmp ne i64 %dec, 0, !dbg !5856
  br i1 %cmp24, label %if.then.25, label %if.else.26, !dbg !5857

if.then.25:                                       ; preds = %do.body
  br label %if.end.27, !dbg !5858

if.else.26:                                       ; preds = %do.body
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5860, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !5862
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5862, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !5863
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5863, !tbaa !1568
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5864, !tbaa !1364
  call void %45(%struct._object* %46), !dbg !5865
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.26, %if.then.25
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5866
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !5866
  br label %do.cond, !dbg !5868

do.cond:                                          ; preds = %if.end.27
  br label %do.end, !dbg !5869

do.end:                                           ; preds = %do.cond
  %48 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !5871, !tbaa !1364
  %cmp28 = icmp eq %struct._object* %48, null, !dbg !5873
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !5874

if.then.29:                                       ; preds = %do.end
  br label %out, !dbg !5875

if.end.30:                                        ; preds = %do.end
  %49 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !5876, !tbaa !1364
  %call31 = call %struct._object* @PyObject_GetAttrString(%struct._object* %49, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)), !dbg !5877
  store %struct._object* %call31, %struct._object** %unpack_from, align 8, !dbg !5878, !tbaa !1364
  %50 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !5879, !tbaa !1364
  %cmp32 = icmp eq %struct._object* %50, null, !dbg !5881
  br i1 %cmp32, label %if.then.33, label %if.end.34, !dbg !5882

if.then.33:                                       ; preds = %if.end.30
  br label %out, !dbg !5883

if.end.34:                                        ; preds = %if.end.30
  %51 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5884, !tbaa !1364
  %itemsize35 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %51, i32 0, i32 3, !dbg !5885
  %52 = load i64, i64* %itemsize35, align 8, !dbg !5885, !tbaa !1739
  %call36 = call i8* @PyMem_Malloc(i64 %52), !dbg !5886
  store i8* %call36, i8** %item, align 8, !dbg !5887, !tbaa !1364
  %53 = load i8*, i8** %item, align 8, !dbg !5888, !tbaa !1364
  %cmp37 = icmp eq i8* %53, null, !dbg !5890
  br i1 %cmp37, label %if.then.38, label %if.end.40, !dbg !5891

if.then.38:                                       ; preds = %if.end.34
  %call39 = call %struct._object* @PyErr_NoMemory(), !dbg !5892
  br label %out, !dbg !5894

if.end.40:                                        ; preds = %if.end.34
  %54 = load i8*, i8** %item, align 8, !dbg !5895, !tbaa !1364
  %55 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5896, !tbaa !1364
  %itemsize41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %55, i32 0, i32 3, !dbg !5897
  %56 = load i64, i64* %itemsize41, align 8, !dbg !5897, !tbaa !1739
  %call42 = call %struct._object* @PyMemoryView_FromMemory(i8* %54, i64 %56, i32 512), !dbg !5898
  store %struct._object* %call42, %struct._object** %mview, align 8, !dbg !5899, !tbaa !1364
  %57 = load %struct._object*, %struct._object** %mview, align 8, !dbg !5900, !tbaa !1364
  %cmp43 = icmp eq %struct._object* %57, null, !dbg !5902
  br i1 %cmp43, label %if.then.44, label %if.end.45, !dbg !5903

if.then.44:                                       ; preds = %if.end.40
  br label %out, !dbg !5904

if.end.45:                                        ; preds = %if.end.40
  %58 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !5905, !tbaa !1364
  %59 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5906, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %59, i32 0, i32 0, !dbg !5907
  %60 = load i8*, i8** %buf, align 8, !dbg !5907, !tbaa !2077
  %61 = load %struct._object*, %struct._object** %mview, align 8, !dbg !5908, !tbaa !1364
  %62 = load i8*, i8** %item, align 8, !dbg !5909, !tbaa !1364
  %63 = load i64*, i64** %shape, align 8, !dbg !5910, !tbaa !1364
  %64 = load i64*, i64** %strides, align 8, !dbg !5911, !tbaa !1364
  %65 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5912, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %65, i32 0, i32 9, !dbg !5913
  %66 = load i64*, i64** %suboffsets, align 8, !dbg !5913, !tbaa !2033
  %67 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5914, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %67, i32 0, i32 5, !dbg !5915
  %68 = load i32, i32* %ndim, align 4, !dbg !5915, !tbaa !1629
  %conv = sext i32 %68 to i64, !dbg !5914
  %69 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !5916, !tbaa !1364
  %itemsize46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %69, i32 0, i32 3, !dbg !5917
  %70 = load i64, i64* %itemsize46, align 8, !dbg !5917, !tbaa !1739
  %call47 = call %struct._object* @unpack_rec(%struct._object* %58, i8* %60, %struct._object* %61, i8* %62, i64* %63, i64* %64, i64* %66, i64 %conv, i64 %70), !dbg !5918
  store %struct._object* %call47, %struct._object** %lst, align 8, !dbg !5919, !tbaa !1364
  br label %out, !dbg !5920

out:                                              ; preds = %if.end.45, %if.then.44, %if.then.38, %if.then.33, %if.then.29, %if.then.21
  br label %do.body.48, !dbg !5921

do.body.48:                                       ; preds = %out
  %71 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5922
  call void @llvm.lifetime.start(i64 8, i8* %71) #1, !dbg !5922
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !878, metadata !1360), !dbg !5924
  %72 = load %struct._object*, %struct._object** %mview, align 8, !dbg !5925, !tbaa !1364
  store %struct._object* %72, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5924, !tbaa !1364
  %73 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5926, !tbaa !1364
  %cmp49 = icmp ne %struct._object* %73, null, !dbg !5927
  br i1 %cmp49, label %if.then.51, label %if.end.65, !dbg !5928

if.then.51:                                       ; preds = %do.body.48
  br label %do.body.52, !dbg !5929

do.body.52:                                       ; preds = %if.then.51
  %74 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !5931
  call void @llvm.lifetime.start(i64 8, i8* %74) #1, !dbg !5931
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp53, metadata !880, metadata !1360), !dbg !5933
  %75 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5934, !tbaa !1364
  store %struct._object* %75, %struct._object** %_py_decref_tmp53, align 8, !dbg !5933, !tbaa !1364
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !5935, !tbaa !1364
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !5937
  %77 = load i64, i64* %ob_refcnt54, align 8, !dbg !5938, !tbaa !1378
  %dec55 = add i64 %77, -1, !dbg !5938
  store i64 %dec55, i64* %ob_refcnt54, align 8, !dbg !5938, !tbaa !1378
  %cmp56 = icmp ne i64 %dec55, 0, !dbg !5939
  br i1 %cmp56, label %if.then.58, label %if.else.59, !dbg !5940

if.then.58:                                       ; preds = %do.body.52
  br label %if.end.62, !dbg !5941

if.else.59:                                       ; preds = %do.body.52
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !5943, !tbaa !1364
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !5945
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !5945, !tbaa !1374
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !5946
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !5946, !tbaa !1568
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !5947, !tbaa !1364
  call void %80(%struct._object* %81), !dbg !5948
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %82 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !5949
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !5949
  br label %do.cond.63, !dbg !5951

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !5952

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !5954

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %83 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5956
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !5956
  br label %do.cond.66, !dbg !5959

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !5960

do.end.67:                                        ; preds = %do.cond.66
  br label %do.body.68, !dbg !5962

do.body.68:                                       ; preds = %do.end.67
  %84 = load i8*, i8** %item, align 8, !dbg !5963, !tbaa !1364
  %tobool = icmp ne i8* %84, null, !dbg !5963
  br i1 %tobool, label %if.then.69, label %if.end.70, !dbg !5967

if.then.69:                                       ; preds = %do.body.68
  %85 = load i8*, i8** %item, align 8, !dbg !5968, !tbaa !1364
  call void @PyMem_Free(i8* %85), !dbg !5970
  br label %if.end.70, !dbg !5970

if.end.70:                                        ; preds = %if.then.69, %do.body.68
  br label %do.cond.71, !dbg !5971

do.cond.71:                                       ; preds = %if.end.70
  br label %do.end.72, !dbg !5974

do.end.72:                                        ; preds = %do.cond.71
  br label %do.body.73, !dbg !5976

do.body.73:                                       ; preds = %do.end.72
  %86 = bitcast %struct._object** %_py_xdecref_tmp74 to i8*, !dbg !5977
  call void @llvm.lifetime.start(i64 8, i8* %86) #1, !dbg !5977
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp74, metadata !883, metadata !1360), !dbg !5979
  %87 = load %struct._object*, %struct._object** %unpack_from, align 8, !dbg !5980, !tbaa !1364
  store %struct._object* %87, %struct._object** %_py_xdecref_tmp74, align 8, !dbg !5979, !tbaa !1364
  %88 = load %struct._object*, %struct._object** %_py_xdecref_tmp74, align 8, !dbg !5981, !tbaa !1364
  %cmp75 = icmp ne %struct._object* %88, null, !dbg !5982
  br i1 %cmp75, label %if.then.77, label %if.end.91, !dbg !5983

if.then.77:                                       ; preds = %do.body.73
  br label %do.body.78, !dbg !5984

do.body.78:                                       ; preds = %if.then.77
  %89 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !5986
  call void @llvm.lifetime.start(i64 8, i8* %89) #1, !dbg !5986
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp79, metadata !885, metadata !1360), !dbg !5988
  %90 = load %struct._object*, %struct._object** %_py_xdecref_tmp74, align 8, !dbg !5989, !tbaa !1364
  store %struct._object* %90, %struct._object** %_py_decref_tmp79, align 8, !dbg !5988, !tbaa !1364
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !5990, !tbaa !1364
  %ob_refcnt80 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !5992
  %92 = load i64, i64* %ob_refcnt80, align 8, !dbg !5993, !tbaa !1378
  %dec81 = add i64 %92, -1, !dbg !5993
  store i64 %dec81, i64* %ob_refcnt80, align 8, !dbg !5993, !tbaa !1378
  %cmp82 = icmp ne i64 %dec81, 0, !dbg !5994
  br i1 %cmp82, label %if.then.84, label %if.else.85, !dbg !5995

if.then.84:                                       ; preds = %do.body.78
  br label %if.end.88, !dbg !5996

if.else.85:                                       ; preds = %do.body.78
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !5998, !tbaa !1364
  %ob_type86 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !6000
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type86, align 8, !dbg !6000, !tbaa !1374
  %tp_dealloc87 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !6001
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc87, align 8, !dbg !6001, !tbaa !1568
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp79, align 8, !dbg !6002, !tbaa !1364
  call void %95(%struct._object* %96), !dbg !6003
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.85, %if.then.84
  %97 = bitcast %struct._object** %_py_decref_tmp79 to i8*, !dbg !6004
  call void @llvm.lifetime.end(i64 8, i8* %97) #1, !dbg !6004
  br label %do.cond.89, !dbg !6006

do.cond.89:                                       ; preds = %if.end.88
  br label %do.end.90, !dbg !6007

do.end.90:                                        ; preds = %do.cond.89
  br label %if.end.91, !dbg !6009

if.end.91:                                        ; preds = %do.end.90, %do.body.73
  %98 = bitcast %struct._object** %_py_xdecref_tmp74 to i8*, !dbg !6011
  call void @llvm.lifetime.end(i64 8, i8* %98) #1, !dbg !6011
  br label %do.cond.92, !dbg !6012

do.cond.92:                                       ; preds = %if.end.91
  br label %do.end.93, !dbg !6013

do.end.93:                                        ; preds = %do.cond.92
  br label %do.body.94, !dbg !6015

do.body.94:                                       ; preds = %do.end.93
  %99 = bitcast %struct._object** %_py_xdecref_tmp95 to i8*, !dbg !6016
  call void @llvm.lifetime.start(i64 8, i8* %99) #1, !dbg !6016
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp95, metadata !888, metadata !1360), !dbg !6018
  %100 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !6019, !tbaa !1364
  store %struct._object* %100, %struct._object** %_py_xdecref_tmp95, align 8, !dbg !6018, !tbaa !1364
  %101 = load %struct._object*, %struct._object** %_py_xdecref_tmp95, align 8, !dbg !6020, !tbaa !1364
  %cmp96 = icmp ne %struct._object* %101, null, !dbg !6021
  br i1 %cmp96, label %if.then.98, label %if.end.112, !dbg !6022

if.then.98:                                       ; preds = %do.body.94
  br label %do.body.99, !dbg !6023

do.body.99:                                       ; preds = %if.then.98
  %102 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !6025
  call void @llvm.lifetime.start(i64 8, i8* %102) #1, !dbg !6025
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp100, metadata !890, metadata !1360), !dbg !6027
  %103 = load %struct._object*, %struct._object** %_py_xdecref_tmp95, align 8, !dbg !6028, !tbaa !1364
  store %struct._object* %103, %struct._object** %_py_decref_tmp100, align 8, !dbg !6027, !tbaa !1364
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !6029, !tbaa !1364
  %ob_refcnt101 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0, !dbg !6031
  %105 = load i64, i64* %ob_refcnt101, align 8, !dbg !6032, !tbaa !1378
  %dec102 = add i64 %105, -1, !dbg !6032
  store i64 %dec102, i64* %ob_refcnt101, align 8, !dbg !6032, !tbaa !1378
  %cmp103 = icmp ne i64 %dec102, 0, !dbg !6033
  br i1 %cmp103, label %if.then.105, label %if.else.106, !dbg !6034

if.then.105:                                      ; preds = %do.body.99
  br label %if.end.109, !dbg !6035

if.else.106:                                      ; preds = %do.body.99
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !6037, !tbaa !1364
  %ob_type107 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1, !dbg !6039
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type107, align 8, !dbg !6039, !tbaa !1374
  %tp_dealloc108 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4, !dbg !6040
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc108, align 8, !dbg !6040, !tbaa !1568
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !6041, !tbaa !1364
  call void %108(%struct._object* %109), !dbg !6042
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.106, %if.then.105
  %110 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !6043
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !6043
  br label %do.cond.110, !dbg !6045

do.cond.110:                                      ; preds = %if.end.109
  br label %do.end.111, !dbg !6046

do.end.111:                                       ; preds = %do.cond.110
  br label %if.end.112, !dbg !6048

if.end.112:                                       ; preds = %do.end.111, %do.body.94
  %111 = bitcast %struct._object** %_py_xdecref_tmp95 to i8*, !dbg !6050
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !6050
  br label %do.cond.113, !dbg !6051

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !6052

do.end.114:                                       ; preds = %do.cond.113
  %112 = load i64*, i64** %strides, align 8, !dbg !6054, !tbaa !1364
  %113 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6056, !tbaa !1364
  %strides115 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %113, i32 0, i32 8, !dbg !6057
  %114 = load i64*, i64** %strides115, align 8, !dbg !6057, !tbaa !2024
  %cmp116 = icmp ne i64* %112, %114, !dbg !6058
  br i1 %cmp116, label %land.lhs.true, label %if.end.128, !dbg !6059

land.lhs.true:                                    ; preds = %do.end.114
  %115 = load i64*, i64** %strides, align 8, !dbg !6060, !tbaa !1364
  %arraydecay118 = getelementptr inbounds [1 x i64], [1 x i64]* %simple_strides, i32 0, i32 0, !dbg !6062
  %cmp119 = icmp ne i64* %115, %arraydecay118, !dbg !6063
  br i1 %cmp119, label %if.then.121, label %if.end.128, !dbg !6064

if.then.121:                                      ; preds = %land.lhs.true
  br label %do.body.122, !dbg !6065

do.body.122:                                      ; preds = %if.then.121
  %116 = load i64*, i64** %strides, align 8, !dbg !6066, !tbaa !1364
  %tobool123 = icmp ne i64* %116, null, !dbg !6066
  br i1 %tobool123, label %if.then.124, label %if.end.125, !dbg !6070

if.then.124:                                      ; preds = %do.body.122
  %117 = load i64*, i64** %strides, align 8, !dbg !6071, !tbaa !1364
  %118 = bitcast i64* %117 to i8*, !dbg !6071
  call void @PyMem_Free(i8* %118), !dbg !6073
  br label %if.end.125, !dbg !6073

if.end.125:                                       ; preds = %if.then.124, %do.body.122
  br label %do.cond.126, !dbg !6074

do.cond.126:                                      ; preds = %if.end.125
  br label %do.end.127, !dbg !6077

do.end.127:                                       ; preds = %do.cond.126
  br label %if.end.128, !dbg !6079

if.end.128:                                       ; preds = %do.end.127, %land.lhs.true, %do.end.114
  %119 = load %struct._object*, %struct._object** %lst, align 8, !dbg !6081, !tbaa !1364
  store %struct._object* %119, %struct._object** %retval, !dbg !6082
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6082

cleanup:                                          ; preds = %if.end.128, %if.then.15, %if.then
  %120 = bitcast i8** %fmt to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !6083
  %121 = bitcast %struct._object** %format to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !6083
  %122 = bitcast i8** %item to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !6083
  %123 = bitcast [1 x i64]* %simple_strides to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !6083
  %124 = bitcast [1 x i64]* %simple_shape to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %124) #1, !dbg !6083
  %125 = bitcast i64** %strides to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !6083
  %126 = bitcast i64** %shape to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %126) #1, !dbg !6083
  %127 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %127) #1, !dbg !6083
  %128 = bitcast %struct._object** %mview to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !6083
  %129 = bitcast %struct._object** %lst to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !6083
  %130 = bitcast %struct._object** %unpack_from to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !6083
  %131 = bitcast %struct._object** %structobj to i8*, !dbg !6083
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !6083
  %132 = load %struct._object*, %struct._object** %retval, !dbg !6083
  ret %struct._object* %132, !dbg !6083
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @unpack_rec(%struct._object* %unpack_from, i8* %ptr, %struct._object* %mview, i8* %item, i64* %shape, i64* %strides, i64* %suboffsets, i64 %ndim, i64 %itemsize) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %unpack_from.addr = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %mview.addr = alloca %struct._object*, align 8
  %item.addr = alloca i8*, align 8
  %shape.addr = alloca i64*, align 8
  %strides.addr = alloca i64*, align 8
  %suboffsets.addr = alloca i64*, align 8
  %ndim.addr = alloca i64, align 8
  %itemsize.addr = alloca i64, align 8
  %lst = alloca %struct._object*, align 8
  %x = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %nextptr = alloca i8*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  store %struct._object* %unpack_from, %struct._object** %unpack_from.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %unpack_from.addr, metadata !897, metadata !1360), !dbg !6084
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !898, metadata !1360), !dbg !6085
  store %struct._object* %mview, %struct._object** %mview.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %mview.addr, metadata !899, metadata !1360), !dbg !6086
  store i8* %item, i8** %item.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %item.addr, metadata !900, metadata !1360), !dbg !6087
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !901, metadata !1360), !dbg !6088
  store i64* %strides, i64** %strides.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %strides.addr, metadata !902, metadata !1360), !dbg !6089
  store i64* %suboffsets, i64** %suboffsets.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %suboffsets.addr, metadata !903, metadata !1360), !dbg !6090
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !904, metadata !1360), !dbg !6091
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !905, metadata !1360), !dbg !6092
  %0 = bitcast %struct._object** %lst to i8*, !dbg !6093
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6093
  call void @llvm.dbg.declare(metadata %struct._object** %lst, metadata !906, metadata !1360), !dbg !6094
  %1 = bitcast %struct._object** %x to i8*, !dbg !6093
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6093
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !907, metadata !1360), !dbg !6095
  %2 = bitcast i64* %i to i8*, !dbg !6096
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6096
  call void @llvm.dbg.declare(metadata i64* %i, metadata !908, metadata !1360), !dbg !6097
  %3 = load i64, i64* %ndim.addr, align 8, !dbg !6098, !tbaa !1503
  %cmp = icmp eq i64 %3, 0, !dbg !6099
  br i1 %cmp, label %if.then, label %if.end.11, !dbg !6100

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %item.addr, align 8, !dbg !6101, !tbaa !1364
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !6102, !tbaa !1364
  %6 = load i64, i64* %itemsize.addr, align 8, !dbg !6103, !tbaa !1503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 %6, i32 1, i1 false), !dbg !6104
  %7 = load %struct._object*, %struct._object** %unpack_from.addr, align 8, !dbg !6105, !tbaa !1364
  %8 = load %struct._object*, %struct._object** %mview.addr, align 8, !dbg !6106, !tbaa !1364
  %call = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %7, %struct._object* %8, i8* null), !dbg !6107
  store %struct._object* %call, %struct._object** %x, align 8, !dbg !6108, !tbaa !1364
  %9 = load %struct._object*, %struct._object** %x, align 8, !dbg !6109, !tbaa !1364
  %cmp1 = icmp eq %struct._object* %9, null, !dbg !6111
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !6112

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !6113
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !6113

if.end:                                           ; preds = %if.then
  %10 = load %struct._object*, %struct._object** %x, align 8, !dbg !6114, !tbaa !1364
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !6115
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !6116
  %12 = load i64, i64* %ob_size, align 8, !dbg !6116, !tbaa !1648
  %cmp3 = icmp eq i64 %12, 1, !dbg !6117
  br i1 %cmp3, label %if.then.4, label %if.end.10, !dbg !6118

if.then.4:                                        ; preds = %if.end
  %13 = bitcast %struct._object** %tmp to i8*, !dbg !6119
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !6119
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !909, metadata !1360), !dbg !6120
  %14 = load %struct._object*, %struct._object** %x, align 8, !dbg !6121, !tbaa !1364
  %15 = bitcast %struct._object* %14 to %struct.PyTupleObject*, !dbg !6122
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %15, i32 0, i32 1, !dbg !6123
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !6124
  %16 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6124, !tbaa !1364
  store %struct._object* %16, %struct._object** %tmp, align 8, !dbg !6120, !tbaa !1364
  %17 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6125, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !6126
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !6127, !tbaa !1378
  %inc = add i64 %18, 1, !dbg !6127
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6127, !tbaa !1378
  br label %do.body, !dbg !6128

do.body:                                          ; preds = %if.then.4
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6129
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !6129
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !914, metadata !1360), !dbg !6131
  %20 = load %struct._object*, %struct._object** %x, align 8, !dbg !6132, !tbaa !1364
  store %struct._object* %20, %struct._object** %_py_decref_tmp, align 8, !dbg !6131, !tbaa !1364
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6133, !tbaa !1364
  %ob_refcnt6 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 0, !dbg !6135
  %22 = load i64, i64* %ob_refcnt6, align 8, !dbg !6136, !tbaa !1378
  %dec = add i64 %22, -1, !dbg !6136
  store i64 %dec, i64* %ob_refcnt6, align 8, !dbg !6136, !tbaa !1378
  %cmp7 = icmp ne i64 %dec, 0, !dbg !6137
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !6138

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !6139

if.else:                                          ; preds = %do.body
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6141, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !6143
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6143, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 4, !dbg !6144
  %25 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6144, !tbaa !1568
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6145, !tbaa !1364
  call void %25(%struct._object* %26), !dbg !6146
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6147
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !6147
  br label %do.cond, !dbg !6149

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !6150

do.end:                                           ; preds = %do.cond
  %28 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6152, !tbaa !1364
  store %struct._object* %28, %struct._object** %retval, !dbg !6153
  store i32 1, i32* %cleanup.dest.slot
  %29 = bitcast %struct._object** %tmp to i8*, !dbg !6154
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !6154
  br label %cleanup.53

if.end.10:                                        ; preds = %if.end
  %30 = load %struct._object*, %struct._object** %x, align 8, !dbg !6155, !tbaa !1364
  store %struct._object* %30, %struct._object** %retval, !dbg !6156
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !6156

if.end.11:                                        ; preds = %entry
  %31 = load i64*, i64** %shape.addr, align 8, !dbg !6157, !tbaa !1364
  %arrayidx12 = getelementptr i64, i64* %31, i64 0, !dbg !6157
  %32 = load i64, i64* %arrayidx12, align 8, !dbg !6157, !tbaa !1503
  %call13 = call %struct._object* @PyList_New(i64 %32), !dbg !6158
  store %struct._object* %call13, %struct._object** %lst, align 8, !dbg !6159, !tbaa !1364
  %33 = load %struct._object*, %struct._object** %lst, align 8, !dbg !6160, !tbaa !1364
  %cmp14 = icmp eq %struct._object* %33, null, !dbg !6162
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !6163

if.then.15:                                       ; preds = %if.end.11
  store %struct._object* null, %struct._object** %retval, !dbg !6164
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !6164

if.end.16:                                        ; preds = %if.end.11
  store i64 0, i64* %i, align 8, !dbg !6165, !tbaa !1503
  br label %for.cond, !dbg !6166

for.cond:                                         ; preds = %for.inc, %if.end.16
  %34 = load i64, i64* %i, align 8, !dbg !6167, !tbaa !1503
  %35 = load i64*, i64** %shape.addr, align 8, !dbg !6170, !tbaa !1364
  %arrayidx17 = getelementptr i64, i64* %35, i64 0, !dbg !6170
  %36 = load i64, i64* %arrayidx17, align 8, !dbg !6170, !tbaa !1503
  %cmp18 = icmp slt i64 %34, %36, !dbg !6171
  br i1 %cmp18, label %for.body, label %for.end, !dbg !6172

for.body:                                         ; preds = %for.cond
  %37 = bitcast i8** %nextptr to i8*, !dbg !6173
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !6173
  call void @llvm.dbg.declare(metadata i8** %nextptr, metadata !916, metadata !1360), !dbg !6174
  %38 = load i64*, i64** %suboffsets.addr, align 8, !dbg !6175, !tbaa !1364
  %tobool = icmp ne i64* %38, null, !dbg !6175
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !6176

land.lhs.true:                                    ; preds = %for.body
  %39 = load i64*, i64** %suboffsets.addr, align 8, !dbg !6177, !tbaa !1364
  %arrayidx20 = getelementptr i64, i64* %39, i64 0, !dbg !6177
  %40 = load i64, i64* %arrayidx20, align 8, !dbg !6177, !tbaa !1503
  %cmp21 = icmp sge i64 %40, 0, !dbg !6179
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !6180

cond.true:                                        ; preds = %land.lhs.true
  %41 = load i8*, i8** %ptr.addr, align 8, !dbg !6181, !tbaa !1364
  %42 = bitcast i8* %41 to i8**, !dbg !6183
  %43 = load i8*, i8** %42, align 8, !dbg !6184, !tbaa !1364
  %44 = load i64*, i64** %suboffsets.addr, align 8, !dbg !6185, !tbaa !1364
  %arrayidx22 = getelementptr i64, i64* %44, i64 0, !dbg !6185
  %45 = load i64, i64* %arrayidx22, align 8, !dbg !6185, !tbaa !1503
  %add.ptr = getelementptr i8, i8* %43, i64 %45, !dbg !6186
  br label %cond.end, !dbg !6180

cond.false:                                       ; preds = %land.lhs.true, %for.body
  %46 = load i8*, i8** %ptr.addr, align 8, !dbg !6187, !tbaa !1364
  br label %cond.end, !dbg !6180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %46, %cond.false ], !dbg !6180
  store i8* %cond, i8** %nextptr, align 8, !dbg !6190, !tbaa !1364
  %47 = load %struct._object*, %struct._object** %unpack_from.addr, align 8, !dbg !6193, !tbaa !1364
  %48 = load i8*, i8** %nextptr, align 8, !dbg !6194, !tbaa !1364
  %49 = load %struct._object*, %struct._object** %mview.addr, align 8, !dbg !6195, !tbaa !1364
  %50 = load i8*, i8** %item.addr, align 8, !dbg !6196, !tbaa !1364
  %51 = load i64*, i64** %shape.addr, align 8, !dbg !6197, !tbaa !1364
  %add.ptr23 = getelementptr i64, i64* %51, i64 1, !dbg !6198
  %52 = load i64*, i64** %strides.addr, align 8, !dbg !6199, !tbaa !1364
  %add.ptr24 = getelementptr i64, i64* %52, i64 1, !dbg !6200
  %53 = load i64*, i64** %suboffsets.addr, align 8, !dbg !6201, !tbaa !1364
  %tobool25 = icmp ne i64* %53, null, !dbg !6201
  br i1 %tobool25, label %cond.true.26, label %cond.false.28, !dbg !6201

cond.true.26:                                     ; preds = %cond.end
  %54 = load i64*, i64** %suboffsets.addr, align 8, !dbg !6202, !tbaa !1364
  %add.ptr27 = getelementptr i64, i64* %54, i64 1, !dbg !6203
  br label %cond.end.29, !dbg !6201

cond.false.28:                                    ; preds = %cond.end
  br label %cond.end.29, !dbg !6204

cond.end.29:                                      ; preds = %cond.false.28, %cond.true.26
  %cond30 = phi i64* [ %add.ptr27, %cond.true.26 ], [ null, %cond.false.28 ], !dbg !6201
  %55 = load i64, i64* %ndim.addr, align 8, !dbg !6205, !tbaa !1503
  %sub = sub i64 %55, 1, !dbg !6206
  %56 = load i64, i64* %itemsize.addr, align 8, !dbg !6207, !tbaa !1503
  %call31 = call %struct._object* @unpack_rec(%struct._object* %47, i8* %48, %struct._object* %49, i8* %50, i64* %add.ptr23, i64* %add.ptr24, i64* %cond30, i64 %sub, i64 %56), !dbg !6208
  store %struct._object* %call31, %struct._object** %x, align 8, !dbg !6209, !tbaa !1364
  %57 = load %struct._object*, %struct._object** %x, align 8, !dbg !6210, !tbaa !1364
  %cmp32 = icmp eq %struct._object* %57, null, !dbg !6211
  br i1 %cmp32, label %if.then.33, label %if.end.47, !dbg !6212

if.then.33:                                       ; preds = %cond.end.29
  br label %do.body.34, !dbg !6213

do.body.34:                                       ; preds = %if.then.33
  %58 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !6214
  call void @llvm.lifetime.start(i64 8, i8* %58) #1, !dbg !6214
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !920, metadata !1360), !dbg !6216
  %59 = load %struct._object*, %struct._object** %lst, align 8, !dbg !6217, !tbaa !1364
  store %struct._object* %59, %struct._object** %_py_decref_tmp36, align 8, !dbg !6216, !tbaa !1364
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !6218, !tbaa !1364
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !6220
  %61 = load i64, i64* %ob_refcnt37, align 8, !dbg !6221, !tbaa !1378
  %dec38 = add i64 %61, -1, !dbg !6221
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !6221, !tbaa !1378
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !6222
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !6223

if.then.40:                                       ; preds = %do.body.34
  br label %if.end.44, !dbg !6224

if.else.41:                                       ; preds = %do.body.34
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !6226, !tbaa !1364
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !6228
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !6228, !tbaa !1374
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !6229
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !6229, !tbaa !1568
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !6230, !tbaa !1364
  call void %64(%struct._object* %65), !dbg !6231
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %66 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !6232
  call void @llvm.lifetime.end(i64 8, i8* %66) #1, !dbg !6232
  br label %do.cond.45, !dbg !6234

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !6235

do.end.46:                                        ; preds = %do.cond.45
  store %struct._object* null, %struct._object** %retval, !dbg !6237
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6237

if.end.47:                                        ; preds = %cond.end.29
  %67 = load %struct._object*, %struct._object** %x, align 8, !dbg !6238, !tbaa !1364
  %68 = load i64, i64* %i, align 8, !dbg !6239, !tbaa !1503
  %69 = load %struct._object*, %struct._object** %lst, align 8, !dbg !6240, !tbaa !1364
  %70 = bitcast %struct._object* %69 to %struct.PyListObject*, !dbg !6241
  %ob_item48 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %70, i32 0, i32 1, !dbg !6242
  %71 = load %struct._object**, %struct._object*** %ob_item48, align 8, !dbg !6242, !tbaa !1685
  %arrayidx49 = getelementptr %struct._object*, %struct._object** %71, i64 %68, !dbg !6243
  store %struct._object* %67, %struct._object** %arrayidx49, align 8, !dbg !6244, !tbaa !1364
  store i32 0, i32* %cleanup.dest.slot, !dbg !6245
  br label %cleanup, !dbg !6245

cleanup:                                          ; preds = %if.end.47, %do.end.46
  %72 = bitcast i8** %nextptr to i8*, !dbg !6246
  call void @llvm.lifetime.end(i64 8, i8* %72) #1, !dbg !6246
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !6247

for.inc:                                          ; preds = %cleanup.cont
  %73 = load i64*, i64** %strides.addr, align 8, !dbg !6248, !tbaa !1364
  %arrayidx50 = getelementptr i64, i64* %73, i64 0, !dbg !6248
  %74 = load i64, i64* %arrayidx50, align 8, !dbg !6248, !tbaa !1503
  %75 = load i8*, i8** %ptr.addr, align 8, !dbg !6249, !tbaa !1364
  %add.ptr51 = getelementptr i8, i8* %75, i64 %74, !dbg !6249
  store i8* %add.ptr51, i8** %ptr.addr, align 8, !dbg !6249, !tbaa !1364
  %76 = load i64, i64* %i, align 8, !dbg !6250, !tbaa !1503
  %inc52 = add i64 %76, 1, !dbg !6250
  store i64 %inc52, i64* %i, align 8, !dbg !6250, !tbaa !1503
  br label %for.cond, !dbg !6251

for.end:                                          ; preds = %for.cond
  %77 = load %struct._object*, %struct._object** %lst, align 8, !dbg !6252, !tbaa !1364
  store %struct._object* %77, %struct._object** %retval, !dbg !6253
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !6253

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.53

cleanup.53:                                       ; preds = %NewDefault, %for.end, %if.then.15, %if.end.10, %do.end, %if.then.2
  %78 = bitcast i64* %i to i8*, !dbg !6254
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !6254
  %79 = bitcast %struct._object** %x to i8*, !dbg !6254
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !6254
  %80 = bitcast %struct._object** %lst to i8*, !dbg !6254
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !6254
  %81 = load %struct._object*, %struct._object** %retval, !dbg !6254
  ret %struct._object* %81, !dbg !6254
}

declare %struct._object* @PyList_New(i64) #3

declare i32 @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object*, %struct._object*, i8*, i8**, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @ndarray_push_base(%struct.NDArrayObject* %nd, %struct._object* %items, %struct._object* %shape, %struct._object* %strides, i64 %offset, %struct._object* %format, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %nd.addr = alloca %struct.NDArrayObject*, align 8
  %items.addr = alloca %struct._object*, align 8
  %shape.addr = alloca %struct._object*, align 8
  %strides.addr = alloca %struct._object*, align 8
  %offset.addr = alloca i64, align 8
  %format.addr = alloca %struct._object*, align 8
  %flags.addr = alloca i32, align 4
  %ndbuf = alloca %struct.ndbuf*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.NDArrayObject* %nd, %struct.NDArrayObject** %nd.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd.addr, metadata !940, metadata !1360), !dbg !6255
  store %struct._object* %items, %struct._object** %items.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %items.addr, metadata !941, metadata !1360), !dbg !6256
  store %struct._object* %shape, %struct._object** %shape.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %shape.addr, metadata !942, metadata !1360), !dbg !6257
  store %struct._object* %strides, %struct._object** %strides.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %strides.addr, metadata !943, metadata !1360), !dbg !6258
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !944, metadata !1360), !dbg !6259
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !945, metadata !1360), !dbg !6260
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !946, metadata !1360), !dbg !6261
  %0 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !6262
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !947, metadata !1360), !dbg !6263
  %1 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6264, !tbaa !1364
  %2 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6265, !tbaa !1364
  %3 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6266, !tbaa !1364
  %4 = load i64, i64* %offset.addr, align 8, !dbg !6267, !tbaa !1503
  %5 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !6268, !tbaa !1364
  %6 = load i32, i32* %flags.addr, align 4, !dbg !6269, !tbaa !1844
  %call = call %struct.ndbuf* @init_ndbuf(%struct._object* %1, %struct._object* %2, %struct._object* %3, i64 %4, %struct._object* %5, i32 %6), !dbg !6270
  store %struct.ndbuf* %call, %struct.ndbuf** %ndbuf, align 8, !dbg !6271, !tbaa !1364
  %7 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6272, !tbaa !1364
  %cmp = icmp eq %struct.ndbuf* %7, null, !dbg !6274
  br i1 %cmp, label %if.then, label %if.end, !dbg !6275

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !6276
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6276

if.end:                                           ; preds = %entry
  %8 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !6277, !tbaa !1364
  %9 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6278, !tbaa !1364
  call void @ndbuf_push(%struct.NDArrayObject* %8, %struct.ndbuf* %9), !dbg !6279
  store i32 0, i32* %retval, !dbg !6280
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6280

cleanup:                                          ; preds = %if.end, %if.then
  %10 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !6281
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !6281
  %11 = load i32, i32* %retval, !dbg !6281
  ret i32 %11, !dbg !6281
}

; Function Attrs: nounwind uwtable
define internal %struct.ndbuf* @init_ndbuf(%struct._object* %items, %struct._object* %shape, %struct._object* %strides, i64 %offset, %struct._object* %format, i32 %flags) #0 {
entry:
  %retval = alloca %struct.ndbuf*, align 8
  %items.addr = alloca %struct._object*, align 8
  %shape.addr = alloca %struct._object*, align 8
  %strides.addr = alloca %struct._object*, align 8
  %offset.addr = alloca i64, align 8
  %format.addr = alloca %struct._object*, align 8
  %flags.addr = alloca i32, align 4
  %ndbuf = alloca %struct.ndbuf*, align 8
  %ndim = alloca i64, align 8
  %nitems = alloca i64, align 8
  %itemsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp106 = alloca %struct._object*, align 8
  %_py_decref_tmp127 = alloca %struct._object*, align 8
  %_py_decref_tmp139 = alloca %struct._object*, align 8
  store %struct._object* %items, %struct._object** %items.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %items.addr, metadata !952, metadata !1360), !dbg !6282
  store %struct._object* %shape, %struct._object** %shape.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %shape.addr, metadata !953, metadata !1360), !dbg !6283
  store %struct._object* %strides, %struct._object** %strides.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %strides.addr, metadata !954, metadata !1360), !dbg !6284
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !955, metadata !1360), !dbg !6285
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !956, metadata !1360), !dbg !6286
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !957, metadata !1360), !dbg !6287
  %0 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !6288
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6288
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !958, metadata !1360), !dbg !6289
  %1 = bitcast i64* %ndim to i8*, !dbg !6290
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6290
  call void @llvm.dbg.declare(metadata i64* %ndim, metadata !959, metadata !1360), !dbg !6291
  %2 = bitcast i64* %nitems to i8*, !dbg !6292
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6292
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !960, metadata !1360), !dbg !6293
  %3 = bitcast i64* %itemsize to i8*, !dbg !6294
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6294
  call void @llvm.dbg.declare(metadata i64* %itemsize, metadata !961, metadata !1360), !dbg !6295
  %4 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6296, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !6298
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6298, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19, !dbg !6299
  %6 = load i64, i64* %tp_flags, align 8, !dbg !6299, !tbaa !1605
  %and = and i64 %6, 33554432, !dbg !6300
  %cmp = icmp ne i64 %and, 0, !dbg !6301
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !6302

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6303, !tbaa !1364
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !6305
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !6305, !tbaa !1374
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !6306
  %9 = load i64, i64* %tp_flags2, align 8, !dbg !6306, !tbaa !1605
  %and3 = and i64 %9, 67108864, !dbg !6307
  %cmp4 = icmp ne i64 %and3, 0, !dbg !6308
  br i1 %cmp4, label %if.end, label %if.then, !dbg !6309

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6310, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.95, i32 0, i32 0)), !dbg !6313
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6314
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6314

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6315, !tbaa !1364
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !6316
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !6316, !tbaa !1374
  %tp_flags6 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 19, !dbg !6317
  %13 = load i64, i64* %tp_flags6, align 8, !dbg !6317, !tbaa !1605
  %and7 = and i64 %13, 33554432, !dbg !6318
  %cmp8 = icmp ne i64 %and7, 0, !dbg !6319
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !6320

cond.true:                                        ; preds = %if.end
  %14 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6321, !tbaa !1364
  %15 = bitcast %struct._object* %14 to %struct.PyVarObject*, !dbg !6323
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %15, i32 0, i32 1, !dbg !6324
  %16 = load i64, i64* %ob_size, align 8, !dbg !6324, !tbaa !1648
  br label %cond.end, !dbg !6320

cond.false:                                       ; preds = %if.end
  %17 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6325, !tbaa !1364
  %18 = bitcast %struct._object* %17 to %struct.PyVarObject*, !dbg !6327
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %18, i32 0, i32 1, !dbg !6328
  %19 = load i64, i64* %ob_size9, align 8, !dbg !6328, !tbaa !1648
  br label %cond.end, !dbg !6320

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %16, %cond.true ], [ %19, %cond.false ], !dbg !6320
  store i64 %cond, i64* %ndim, align 8, !dbg !6329, !tbaa !1503
  %20 = load i64, i64* %ndim, align 8, !dbg !6332, !tbaa !1503
  %cmp10 = icmp sgt i64 %20, 128, !dbg !6334
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !6335

if.then.11:                                       ; preds = %cond.end
  %21 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6336, !tbaa !1364
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %21, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.96, i32 0, i32 0), i32 128), !dbg !6338
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6339
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6339

if.end.12:                                        ; preds = %cond.end
  %22 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6340, !tbaa !1364
  %tobool = icmp ne %struct._object* %22, null, !dbg !6340
  br i1 %tobool, label %if.then.13, label %if.end.56, !dbg !6342

if.then.13:                                       ; preds = %if.end.12
  %23 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6343, !tbaa !1364
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 1, !dbg !6346
  %24 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8, !dbg !6346, !tbaa !1374
  %tp_flags15 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %24, i32 0, i32 19, !dbg !6347
  %25 = load i64, i64* %tp_flags15, align 8, !dbg !6347, !tbaa !1605
  %and16 = and i64 %25, 33554432, !dbg !6348
  %cmp17 = icmp ne i64 %and16, 0, !dbg !6349
  br i1 %cmp17, label %if.end.24, label %land.lhs.true.18, !dbg !6350

land.lhs.true.18:                                 ; preds = %if.then.13
  %26 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6351, !tbaa !1364
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !6353
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !6353, !tbaa !1374
  %tp_flags20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 19, !dbg !6354
  %28 = load i64, i64* %tp_flags20, align 8, !dbg !6354, !tbaa !1605
  %and21 = and i64 %28, 67108864, !dbg !6355
  %cmp22 = icmp ne i64 %and21, 0, !dbg !6356
  br i1 %cmp22, label %if.end.24, label %if.then.23, !dbg !6357

if.then.23:                                       ; preds = %land.lhs.true.18
  %29 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6358, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %29, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i32 0, i32 0)), !dbg !6361
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6362
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6362

if.end.24:                                        ; preds = %land.lhs.true.18, %if.then.13
  %30 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6363, !tbaa !1364
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !6365
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !6365, !tbaa !1374
  %tp_flags26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 19, !dbg !6366
  %32 = load i64, i64* %tp_flags26, align 8, !dbg !6366, !tbaa !1605
  %and27 = and i64 %32, 33554432, !dbg !6367
  %cmp28 = icmp ne i64 %and27, 0, !dbg !6368
  br i1 %cmp28, label %cond.true.29, label %cond.false.31, !dbg !6369

cond.true.29:                                     ; preds = %if.end.24
  %33 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6370, !tbaa !1364
  %34 = bitcast %struct._object* %33 to %struct.PyVarObject*, !dbg !6372
  %ob_size30 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %34, i32 0, i32 1, !dbg !6373
  %35 = load i64, i64* %ob_size30, align 8, !dbg !6373, !tbaa !1648
  br label %cond.end.33, !dbg !6369

cond.false.31:                                    ; preds = %if.end.24
  %36 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6374, !tbaa !1364
  %37 = bitcast %struct._object* %36 to %struct.PyVarObject*, !dbg !6376
  %ob_size32 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %37, i32 0, i32 1, !dbg !6377
  %38 = load i64, i64* %ob_size32, align 8, !dbg !6377, !tbaa !1648
  br label %cond.end.33, !dbg !6369

cond.end.33:                                      ; preds = %cond.false.31, %cond.true.29
  %cond34 = phi i64 [ %35, %cond.true.29 ], [ %38, %cond.false.31 ], !dbg !6369
  %cmp35 = icmp eq i64 %cond34, 0, !dbg !6378
  br i1 %cmp35, label %if.then.36, label %if.else, !dbg !6381

if.then.36:                                       ; preds = %cond.end.33
  store %struct._object* null, %struct._object** %strides.addr, align 8, !dbg !6382, !tbaa !1364
  br label %if.end.55, !dbg !6383

if.else:                                          ; preds = %cond.end.33
  %39 = load i32, i32* %flags.addr, align 4, !dbg !6384, !tbaa !1844
  %and37 = and i32 %39, 4, !dbg !6386
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6386
  br i1 %tobool38, label %if.then.39, label %if.else.40, !dbg !6387

if.then.39:                                       ; preds = %if.else
  %40 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6388, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %40, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.98, i32 0, i32 0)), !dbg !6390
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6391
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6391

if.else.40:                                       ; preds = %if.else
  %41 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6392, !tbaa !1364
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !6394
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !6394, !tbaa !1374
  %tp_flags42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 19, !dbg !6395
  %43 = load i64, i64* %tp_flags42, align 8, !dbg !6395, !tbaa !1605
  %and43 = and i64 %43, 33554432, !dbg !6396
  %cmp44 = icmp ne i64 %and43, 0, !dbg !6397
  br i1 %cmp44, label %cond.true.45, label %cond.false.47, !dbg !6398

cond.true.45:                                     ; preds = %if.else.40
  %44 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6399, !tbaa !1364
  %45 = bitcast %struct._object* %44 to %struct.PyVarObject*, !dbg !6401
  %ob_size46 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %45, i32 0, i32 1, !dbg !6402
  %46 = load i64, i64* %ob_size46, align 8, !dbg !6402, !tbaa !1648
  br label %cond.end.49, !dbg !6398

cond.false.47:                                    ; preds = %if.else.40
  %47 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6403, !tbaa !1364
  %48 = bitcast %struct._object* %47 to %struct.PyVarObject*, !dbg !6405
  %ob_size48 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %48, i32 0, i32 1, !dbg !6406
  %49 = load i64, i64* %ob_size48, align 8, !dbg !6406, !tbaa !1648
  br label %cond.end.49, !dbg !6398

cond.end.49:                                      ; preds = %cond.false.47, %cond.true.45
  %cond50 = phi i64 [ %46, %cond.true.45 ], [ %49, %cond.false.47 ], !dbg !6398
  %50 = load i64, i64* %ndim, align 8, !dbg !6407, !tbaa !1503
  %cmp51 = icmp ne i64 %cond50, %50, !dbg !6410
  br i1 %cmp51, label %if.then.52, label %if.end.53, !dbg !6411

if.then.52:                                       ; preds = %cond.end.49
  %51 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6412, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %51, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.99, i32 0, i32 0)), !dbg !6414
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6415
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6415

if.end.53:                                        ; preds = %cond.end.49
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.then.36
  br label %if.end.56, !dbg !6416

if.end.56:                                        ; preds = %if.end.55, %if.end.12
  %52 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !6417, !tbaa !1364
  %call57 = call i64 @get_itemsize(%struct._object* %52), !dbg !6418
  store i64 %call57, i64* %itemsize, align 8, !dbg !6419, !tbaa !1503
  %53 = load i64, i64* %itemsize, align 8, !dbg !6420, !tbaa !1503
  %cmp58 = icmp sle i64 %53, 0, !dbg !6422
  br i1 %cmp58, label %if.then.59, label %if.end.63, !dbg !6423

if.then.59:                                       ; preds = %if.end.56
  %54 = load i64, i64* %itemsize, align 8, !dbg !6424, !tbaa !1503
  %cmp60 = icmp eq i64 %54, 0, !dbg !6427
  br i1 %cmp60, label %if.then.61, label %if.end.62, !dbg !6428

if.then.61:                                       ; preds = %if.then.59
  %55 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6429, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %55, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.100, i32 0, i32 0)), !dbg !6431
  br label %if.end.62, !dbg !6432

if.end.62:                                        ; preds = %if.then.61, %if.then.59
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6433
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6433

if.end.63:                                        ; preds = %if.end.56
  %56 = load i64, i64* %ndim, align 8, !dbg !6434, !tbaa !1503
  %cmp64 = icmp eq i64 %56, 0, !dbg !6436
  br i1 %cmp64, label %if.then.65, label %if.else.70, !dbg !6437

if.then.65:                                       ; preds = %if.end.63
  %57 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6438, !tbaa !1364
  %call66 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i32 0, i32 0), %struct._object* %57), !dbg !6440
  store %struct._object* %call66, %struct._object** %items.addr, align 8, !dbg !6441, !tbaa !1364
  %58 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6442, !tbaa !1364
  %cmp67 = icmp eq %struct._object* %58, null, !dbg !6444
  br i1 %cmp67, label %if.then.68, label %if.end.69, !dbg !6445

if.then.68:                                       ; preds = %if.then.65
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6446
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6446

if.end.69:                                        ; preds = %if.then.65
  br label %if.end.82, !dbg !6447

if.else.70:                                       ; preds = %if.end.63
  %59 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6448, !tbaa !1364
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !6451
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !6451, !tbaa !1374
  %tp_flags72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 19, !dbg !6452
  %61 = load i64, i64* %tp_flags72, align 8, !dbg !6452, !tbaa !1605
  %and73 = and i64 %61, 33554432, !dbg !6453
  %cmp74 = icmp ne i64 %and73, 0, !dbg !6454
  br i1 %cmp74, label %if.end.81, label %land.lhs.true.75, !dbg !6455

land.lhs.true.75:                                 ; preds = %if.else.70
  %62 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6456, !tbaa !1364
  %ob_type76 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !6458
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type76, align 8, !dbg !6458, !tbaa !1374
  %tp_flags77 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 19, !dbg !6459
  %64 = load i64, i64* %tp_flags77, align 8, !dbg !6459, !tbaa !1605
  %and78 = and i64 %64, 67108864, !dbg !6460
  %cmp79 = icmp ne i64 %and78, 0, !dbg !6461
  br i1 %cmp79, label %if.end.81, label %if.then.80, !dbg !6462

if.then.80:                                       ; preds = %land.lhs.true.75
  %65 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6463, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %65, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.102, i32 0, i32 0)), !dbg !6466
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6467
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6467

if.end.81:                                        ; preds = %land.lhs.true.75, %if.else.70
  %66 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6468, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !6469
  %67 = load i64, i64* %ob_refcnt, align 8, !dbg !6470, !tbaa !1378
  %inc = add i64 %67, 1, !dbg !6470
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !6470, !tbaa !1378
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.81, %if.end.69
  %68 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6471, !tbaa !1364
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !6472
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !6472, !tbaa !1374
  %tp_flags84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 19, !dbg !6473
  %70 = load i64, i64* %tp_flags84, align 8, !dbg !6473, !tbaa !1605
  %and85 = and i64 %70, 33554432, !dbg !6474
  %cmp86 = icmp ne i64 %and85, 0, !dbg !6475
  br i1 %cmp86, label %cond.true.87, label %cond.false.89, !dbg !6476

cond.true.87:                                     ; preds = %if.end.82
  %71 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6477, !tbaa !1364
  %72 = bitcast %struct._object* %71 to %struct.PyVarObject*, !dbg !6478
  %ob_size88 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %72, i32 0, i32 1, !dbg !6479
  %73 = load i64, i64* %ob_size88, align 8, !dbg !6479, !tbaa !1648
  br label %cond.end.91, !dbg !6476

cond.false.89:                                    ; preds = %if.end.82
  %74 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6480, !tbaa !1364
  %75 = bitcast %struct._object* %74 to %struct.PyVarObject*, !dbg !6481
  %ob_size90 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %75, i32 0, i32 1, !dbg !6482
  %76 = load i64, i64* %ob_size90, align 8, !dbg !6482, !tbaa !1648
  br label %cond.end.91, !dbg !6476

cond.end.91:                                      ; preds = %cond.false.89, %cond.true.87
  %cond92 = phi i64 [ %73, %cond.true.87 ], [ %76, %cond.false.89 ], !dbg !6476
  store i64 %cond92, i64* %nitems, align 8, !dbg !6483, !tbaa !1503
  %77 = load i64, i64* %nitems, align 8, !dbg !6484, !tbaa !1503
  %cmp93 = icmp eq i64 %77, 0, !dbg !6485
  br i1 %cmp93, label %if.then.94, label %if.end.101, !dbg !6486

if.then.94:                                       ; preds = %cond.end.91
  %78 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6487, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %78, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.103, i32 0, i32 0)), !dbg !6488
  br label %do.body, !dbg !6489

do.body:                                          ; preds = %if.then.94
  %79 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6490
  call void @llvm.lifetime.start(i64 8, i8* %79) #1, !dbg !6490
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !962, metadata !1360), !dbg !6492
  %80 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6493, !tbaa !1364
  store %struct._object* %80, %struct._object** %_py_decref_tmp, align 8, !dbg !6492, !tbaa !1364
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6494, !tbaa !1364
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 0, !dbg !6496
  %82 = load i64, i64* %ob_refcnt95, align 8, !dbg !6497, !tbaa !1378
  %dec = add i64 %82, -1, !dbg !6497
  store i64 %dec, i64* %ob_refcnt95, align 8, !dbg !6497, !tbaa !1378
  %cmp96 = icmp ne i64 %dec, 0, !dbg !6498
  br i1 %cmp96, label %if.then.97, label %if.else.98, !dbg !6499

if.then.97:                                       ; preds = %do.body
  br label %if.end.100, !dbg !6500

if.else.98:                                       ; preds = %do.body
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6502, !tbaa !1364
  %ob_type99 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 1, !dbg !6504
  %84 = load %struct._typeobject*, %struct._typeobject** %ob_type99, align 8, !dbg !6504, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %84, i32 0, i32 4, !dbg !6505
  %85 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6505, !tbaa !1568
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6506, !tbaa !1364
  call void %85(%struct._object* %86), !dbg !6507
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.98, %if.then.97
  %87 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6508
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !6508
  br label %do.cond, !dbg !6510

do.cond:                                          ; preds = %if.end.100
  br label %do.end, !dbg !6511

do.end:                                           ; preds = %do.cond
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6513
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6513

if.end.101:                                       ; preds = %cond.end.91
  %88 = load i64, i64* %nitems, align 8, !dbg !6514, !tbaa !1503
  %89 = load i64, i64* %itemsize, align 8, !dbg !6515, !tbaa !1503
  %90 = load i64, i64* %offset.addr, align 8, !dbg !6516, !tbaa !1503
  %91 = load i32, i32* %flags.addr, align 4, !dbg !6517, !tbaa !1844
  %call102 = call %struct.ndbuf* @ndbuf_new(i64 %88, i64 %89, i64 %90, i32 %91), !dbg !6518
  store %struct.ndbuf* %call102, %struct.ndbuf** %ndbuf, align 8, !dbg !6519, !tbaa !1364
  %92 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6520, !tbaa !1364
  %cmp103 = icmp eq %struct.ndbuf* %92, null, !dbg !6521
  br i1 %cmp103, label %if.then.104, label %if.end.117, !dbg !6522

if.then.104:                                      ; preds = %if.end.101
  br label %do.body.105, !dbg !6523

do.body.105:                                      ; preds = %if.then.104
  %93 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !6524
  call void @llvm.lifetime.start(i64 8, i8* %93) #1, !dbg !6524
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp106, metadata !966, metadata !1360), !dbg !6526
  %94 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6527, !tbaa !1364
  store %struct._object* %94, %struct._object** %_py_decref_tmp106, align 8, !dbg !6526, !tbaa !1364
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !6528, !tbaa !1364
  %ob_refcnt107 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !6530
  %96 = load i64, i64* %ob_refcnt107, align 8, !dbg !6531, !tbaa !1378
  %dec108 = add i64 %96, -1, !dbg !6531
  store i64 %dec108, i64* %ob_refcnt107, align 8, !dbg !6531, !tbaa !1378
  %cmp109 = icmp ne i64 %dec108, 0, !dbg !6532
  br i1 %cmp109, label %if.then.110, label %if.else.111, !dbg !6533

if.then.110:                                      ; preds = %do.body.105
  br label %if.end.114, !dbg !6534

if.else.111:                                      ; preds = %do.body.105
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !6536, !tbaa !1364
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !6538
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !6538, !tbaa !1374
  %tp_dealloc113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !6539
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc113, align 8, !dbg !6539, !tbaa !1568
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !6540, !tbaa !1364
  call void %99(%struct._object* %100), !dbg !6541
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.111, %if.then.110
  %101 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !6542
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !6542
  br label %do.cond.115, !dbg !6544

do.cond.115:                                      ; preds = %if.end.114
  br label %do.end.116, !dbg !6545

do.end.116:                                       ; preds = %do.cond.115
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6547
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6547

if.end.117:                                       ; preds = %if.end.101
  %102 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6548, !tbaa !1364
  %103 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6550, !tbaa !1364
  %104 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !6551, !tbaa !1364
  %105 = load i64, i64* %itemsize, align 8, !dbg !6552, !tbaa !1503
  %call118 = call i32 @init_simple(%struct.ndbuf* %102, %struct._object* %103, %struct._object* %104, i64 %105), !dbg !6553
  %cmp119 = icmp slt i32 %call118, 0, !dbg !6554
  br i1 %cmp119, label %if.then.120, label %if.end.121, !dbg !6555

if.then.120:                                      ; preds = %if.end.117
  br label %error, !dbg !6556

if.end.121:                                       ; preds = %if.end.117
  %106 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6557, !tbaa !1364
  %107 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6559, !tbaa !1364
  %108 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6560, !tbaa !1364
  %109 = load i64, i64* %ndim, align 8, !dbg !6561, !tbaa !1503
  %call122 = call i32 @init_structure(%struct.ndbuf* %106, %struct._object* %107, %struct._object* %108, i64 %109), !dbg !6562
  %cmp123 = icmp slt i32 %call122, 0, !dbg !6563
  br i1 %cmp123, label %if.then.124, label %if.end.125, !dbg !6564

if.then.124:                                      ; preds = %if.end.121
  br label %error, !dbg !6565

if.end.125:                                       ; preds = %if.end.121
  br label %do.body.126, !dbg !6566

do.body.126:                                      ; preds = %if.end.125
  %110 = bitcast %struct._object** %_py_decref_tmp127 to i8*, !dbg !6567
  call void @llvm.lifetime.start(i64 8, i8* %110) #1, !dbg !6567
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp127, metadata !970, metadata !1360), !dbg !6569
  %111 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6570, !tbaa !1364
  store %struct._object* %111, %struct._object** %_py_decref_tmp127, align 8, !dbg !6569, !tbaa !1364
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp127, align 8, !dbg !6571, !tbaa !1364
  %ob_refcnt128 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !6573
  %113 = load i64, i64* %ob_refcnt128, align 8, !dbg !6574, !tbaa !1378
  %dec129 = add i64 %113, -1, !dbg !6574
  store i64 %dec129, i64* %ob_refcnt128, align 8, !dbg !6574, !tbaa !1378
  %cmp130 = icmp ne i64 %dec129, 0, !dbg !6575
  br i1 %cmp130, label %if.then.131, label %if.else.132, !dbg !6576

if.then.131:                                      ; preds = %do.body.126
  br label %if.end.135, !dbg !6577

if.else.132:                                      ; preds = %do.body.126
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp127, align 8, !dbg !6579, !tbaa !1364
  %ob_type133 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !6581
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type133, align 8, !dbg !6581, !tbaa !1374
  %tp_dealloc134 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 4, !dbg !6582
  %116 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc134, align 8, !dbg !6582, !tbaa !1568
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp127, align 8, !dbg !6583, !tbaa !1364
  call void %116(%struct._object* %117), !dbg !6584
  br label %if.end.135

if.end.135:                                       ; preds = %if.else.132, %if.then.131
  %118 = bitcast %struct._object** %_py_decref_tmp127 to i8*, !dbg !6585
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !6585
  br label %do.cond.136, !dbg !6587

do.cond.136:                                      ; preds = %if.end.135
  br label %do.end.137, !dbg !6588

do.end.137:                                       ; preds = %do.cond.136
  %119 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6590, !tbaa !1364
  store %struct.ndbuf* %119, %struct.ndbuf** %retval, !dbg !6591
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6591

error:                                            ; preds = %if.then.124, %if.then.120
  br label %do.body.138, !dbg !6592

do.body.138:                                      ; preds = %error
  %120 = bitcast %struct._object** %_py_decref_tmp139 to i8*, !dbg !6593
  call void @llvm.lifetime.start(i64 8, i8* %120) #1, !dbg !6593
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp139, metadata !972, metadata !1360), !dbg !6595
  %121 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6596, !tbaa !1364
  store %struct._object* %121, %struct._object** %_py_decref_tmp139, align 8, !dbg !6595, !tbaa !1364
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8, !dbg !6597, !tbaa !1364
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 0, !dbg !6599
  %123 = load i64, i64* %ob_refcnt140, align 8, !dbg !6600, !tbaa !1378
  %dec141 = add i64 %123, -1, !dbg !6600
  store i64 %dec141, i64* %ob_refcnt140, align 8, !dbg !6600, !tbaa !1378
  %cmp142 = icmp ne i64 %dec141, 0, !dbg !6601
  br i1 %cmp142, label %if.then.143, label %if.else.144, !dbg !6602

if.then.143:                                      ; preds = %do.body.138
  br label %if.end.147, !dbg !6603

if.else.144:                                      ; preds = %do.body.138
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8, !dbg !6605, !tbaa !1364
  %ob_type145 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 1, !dbg !6607
  %125 = load %struct._typeobject*, %struct._typeobject** %ob_type145, align 8, !dbg !6607, !tbaa !1374
  %tp_dealloc146 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %125, i32 0, i32 4, !dbg !6608
  %126 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc146, align 8, !dbg !6608, !tbaa !1568
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8, !dbg !6609, !tbaa !1364
  call void %126(%struct._object* %127), !dbg !6610
  br label %if.end.147

if.end.147:                                       ; preds = %if.else.144, %if.then.143
  %128 = bitcast %struct._object** %_py_decref_tmp139 to i8*, !dbg !6611
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !6611
  br label %do.cond.148, !dbg !6612

do.cond.148:                                      ; preds = %if.end.147
  br label %do.end.149, !dbg !6613

do.end.149:                                       ; preds = %do.cond.148
  %129 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6615, !tbaa !1364
  call void @ndbuf_free(%struct.ndbuf* %129), !dbg !6616
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6617
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6617

cleanup:                                          ; preds = %do.end.149, %do.end.137, %do.end.116, %do.end, %if.then.80, %if.then.68, %if.end.62, %if.then.52, %if.then.39, %if.then.23, %if.then.11, %if.then
  %130 = bitcast i64* %itemsize to i8*, !dbg !6618
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !6618
  %131 = bitcast i64* %nitems to i8*, !dbg !6618
  call void @llvm.lifetime.end(i64 8, i8* %131) #1, !dbg !6618
  %132 = bitcast i64* %ndim to i8*, !dbg !6618
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !6618
  %133 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !6618
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !6618
  %134 = load %struct.ndbuf*, %struct.ndbuf** %retval, !dbg !6618
  ret %struct.ndbuf* %134, !dbg !6618
}

; Function Attrs: nounwind uwtable
define internal void @ndbuf_push(%struct.NDArrayObject* %nd, %struct.ndbuf* %elt) #0 {
entry:
  %nd.addr = alloca %struct.NDArrayObject*, align 8
  %elt.addr = alloca %struct.ndbuf*, align 8
  store %struct.NDArrayObject* %nd, %struct.NDArrayObject** %nd.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd.addr, metadata !1123, metadata !1360), !dbg !6619
  store %struct.ndbuf* %elt, %struct.ndbuf** %elt.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %elt.addr, metadata !1124, metadata !1360), !dbg !6620
  %0 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !6621, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %0, i32 0, i32 3, !dbg !6622
  %1 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !6622, !tbaa !2581
  %2 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !6623, !tbaa !1364
  %next = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 0, !dbg !6624
  store %struct.ndbuf* %1, %struct.ndbuf** %next, align 8, !dbg !6625, !tbaa !2923
  %3 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !6626, !tbaa !1364
  %head1 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %3, i32 0, i32 3, !dbg !6628
  %4 = load %struct.ndbuf*, %struct.ndbuf** %head1, align 8, !dbg !6628, !tbaa !2581
  %tobool = icmp ne %struct.ndbuf* %4, null, !dbg !6626
  br i1 %tobool, label %if.then, label %if.end, !dbg !6629

if.then:                                          ; preds = %entry
  %5 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !6630, !tbaa !1364
  %6 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !6632, !tbaa !1364
  %head2 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %6, i32 0, i32 3, !dbg !6633
  %7 = load %struct.ndbuf*, %struct.ndbuf** %head2, align 8, !dbg !6633, !tbaa !2581
  %prev = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %7, i32 0, i32 1, !dbg !6634
  store %struct.ndbuf* %5, %struct.ndbuf** %prev, align 8, !dbg !6635, !tbaa !2919
  br label %if.end, !dbg !6632

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !6636, !tbaa !1364
  %9 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd.addr, align 8, !dbg !6637, !tbaa !1364
  %head3 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %9, i32 0, i32 3, !dbg !6638
  store %struct.ndbuf* %8, %struct.ndbuf** %head3, align 8, !dbg !6639, !tbaa !2581
  %10 = load %struct.ndbuf*, %struct.ndbuf** %elt.addr, align 8, !dbg !6640, !tbaa !1364
  %prev4 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %10, i32 0, i32 1, !dbg !6641
  store %struct.ndbuf* null, %struct.ndbuf** %prev4, align 8, !dbg !6642, !tbaa !2919
  ret void, !dbg !6643
}

; Function Attrs: nounwind uwtable
define internal i64 @get_itemsize(%struct._object* %format) #0 {
entry:
  %retval = alloca i64, align 8
  %format.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %itemsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !976, metadata !1360), !dbg !6644
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !6645
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6645
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !977, metadata !1360), !dbg !6646
  %1 = bitcast i64* %itemsize to i8*, !dbg !6647
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6647
  call void @llvm.dbg.declare(metadata i64* %itemsize, metadata !978, metadata !1360), !dbg !6648
  %2 = load %struct._object*, %struct._object** @calcsize, align 8, !dbg !6649, !tbaa !1364
  %3 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !6650, !tbaa !1364
  %call = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %2, %struct._object* %3, i8* null), !dbg !6651
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !6652, !tbaa !1364
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6653, !tbaa !1364
  %cmp = icmp eq %struct._object* %4, null, !dbg !6655
  br i1 %cmp, label %if.then, label %if.end, !dbg !6656

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, !dbg !6657
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6657

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6658, !tbaa !1364
  %call2 = call i64 @PyLong_AsSsize_t(%struct._object* %5), !dbg !6659
  store i64 %call2, i64* %itemsize, align 8, !dbg !6660, !tbaa !1503
  br label %do.body, !dbg !6661

do.body:                                          ; preds = %if.end
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6662
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !6662
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !979, metadata !1360), !dbg !6664
  %7 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !6665, !tbaa !1364
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !6664, !tbaa !1364
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6666, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !6668
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !6669, !tbaa !1378
  %dec = add i64 %9, -1, !dbg !6669
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6669, !tbaa !1378
  %cmp4 = icmp ne i64 %dec, 0, !dbg !6670
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !6671

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !6672

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6674, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !6676
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6676, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !6677
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6677, !tbaa !1568
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6678, !tbaa !1364
  call void %12(%struct._object* %13), !dbg !6679
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6680
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !6680
  br label %do.cond, !dbg !6682

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !6683

do.end:                                           ; preds = %do.cond
  %15 = load i64, i64* %itemsize, align 8, !dbg !6685, !tbaa !1503
  store i64 %15, i64* %retval, !dbg !6686
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6686

cleanup:                                          ; preds = %do.end, %if.then
  %16 = bitcast i64* %itemsize to i8*, !dbg !6687
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !6687
  %17 = bitcast %struct._object** %tmp to i8*, !dbg !6687
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !6687
  %18 = load i64, i64* %retval, !dbg !6687
  ret i64 %18, !dbg !6687
}

declare %struct._object* @_Py_BuildValue_SizeT(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct.ndbuf* @ndbuf_new(i64 %nitems, i64 %itemsize, i64 %offset, i32 %flags) #0 {
entry:
  %retval = alloca %struct.ndbuf*, align 8
  %nitems.addr = alloca i64, align 8
  %itemsize.addr = alloca i64, align 8
  %offset.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %ndbuf = alloca %struct.ndbuf*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64 %nitems, i64* %nitems.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %nitems.addr, metadata !985, metadata !1360), !dbg !6688
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !986, metadata !1360), !dbg !6689
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !987, metadata !1360), !dbg !6690
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !988, metadata !1360), !dbg !6691
  %0 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !6692
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6692
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !989, metadata !1360), !dbg !6693
  %1 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6694
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6694
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !990, metadata !1360), !dbg !6695
  %2 = bitcast i64* %len to i8*, !dbg !6696
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6696
  call void @llvm.dbg.declare(metadata i64* %len, metadata !991, metadata !1360), !dbg !6697
  %3 = load i64, i64* %nitems.addr, align 8, !dbg !6698, !tbaa !1503
  %4 = load i64, i64* %itemsize.addr, align 8, !dbg !6699, !tbaa !1503
  %mul = mul i64 %3, %4, !dbg !6700
  store i64 %mul, i64* %len, align 8, !dbg !6701, !tbaa !1503
  %5 = load i64, i64* %offset.addr, align 8, !dbg !6702, !tbaa !1503
  %6 = load i64, i64* %itemsize.addr, align 8, !dbg !6704, !tbaa !1503
  %rem = srem i64 %5, %6, !dbg !6705
  %tobool = icmp ne i64 %rem, 0, !dbg !6705
  br i1 %tobool, label %if.then, label %if.end, !dbg !6706

if.then:                                          ; preds = %entry
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6707, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.104, i32 0, i32 0)), !dbg !6709
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6710
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6710

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %offset.addr, align 8, !dbg !6711, !tbaa !1503
  %cmp = icmp slt i64 %8, 0, !dbg !6713
  br i1 %cmp, label %if.then.2, label %lor.lhs.false, !dbg !6714

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i64, i64* %offset.addr, align 8, !dbg !6715, !tbaa !1503
  %10 = load i64, i64* %itemsize.addr, align 8, !dbg !6717, !tbaa !1503
  %add = add i64 %9, %10, !dbg !6718
  %11 = load i64, i64* %len, align 8, !dbg !6719, !tbaa !1503
  %cmp1 = icmp sgt i64 %add, %11, !dbg !6720
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !6721

if.then.2:                                        ; preds = %lor.lhs.false, %if.end
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !6722, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i32 0, i32 0)), !dbg !6724
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6725
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6725

if.end.3:                                         ; preds = %lor.lhs.false
  %call = call i8* @PyMem_Malloc(i64 136), !dbg !6726
  %13 = bitcast i8* %call to %struct.ndbuf*, !dbg !6726
  store %struct.ndbuf* %13, %struct.ndbuf** %ndbuf, align 8, !dbg !6727, !tbaa !1364
  %14 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6728, !tbaa !1364
  %cmp4 = icmp eq %struct.ndbuf* %14, null, !dbg !6730
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !6731

if.then.5:                                        ; preds = %if.end.3
  %call6 = call %struct._object* @PyErr_NoMemory(), !dbg !6732
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6734
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6734

if.end.7:                                         ; preds = %if.end.3
  %15 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6735, !tbaa !1364
  %next = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %15, i32 0, i32 0, !dbg !6736
  store %struct.ndbuf* null, %struct.ndbuf** %next, align 8, !dbg !6737, !tbaa !2923
  %16 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6738, !tbaa !1364
  %prev = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %16, i32 0, i32 1, !dbg !6739
  store %struct.ndbuf* null, %struct.ndbuf** %prev, align 8, !dbg !6740, !tbaa !2919
  %17 = load i64, i64* %len, align 8, !dbg !6741, !tbaa !1503
  %18 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6742, !tbaa !1364
  %len8 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %18, i32 0, i32 2, !dbg !6743
  store i64 %17, i64* %len8, align 8, !dbg !6744, !tbaa !3290
  %19 = load i64, i64* %offset.addr, align 8, !dbg !6745, !tbaa !1503
  %20 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6746, !tbaa !1364
  %offset9 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %20, i32 0, i32 3, !dbg !6747
  store i64 %19, i64* %offset9, align 8, !dbg !6748, !tbaa !3295
  %21 = load i64, i64* %len, align 8, !dbg !6749, !tbaa !1503
  %call10 = call i8* @PyMem_Malloc(i64 %21), !dbg !6750
  %22 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6751, !tbaa !1364
  %data = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %22, i32 0, i32 4, !dbg !6752
  store i8* %call10, i8** %data, align 8, !dbg !6753, !tbaa !2957
  %23 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6754, !tbaa !1364
  %data11 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %23, i32 0, i32 4, !dbg !6756
  %24 = load i8*, i8** %data11, align 8, !dbg !6756, !tbaa !2957
  %cmp12 = icmp eq i8* %24, null, !dbg !6757
  br i1 %cmp12, label %if.then.13, label %if.end.15, !dbg !6758

if.then.13:                                       ; preds = %if.end.7
  %call14 = call %struct._object* @PyErr_NoMemory(), !dbg !6759
  %25 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6761, !tbaa !1364
  %26 = bitcast %struct.ndbuf* %25 to i8*, !dbg !6761
  call void @PyMem_Free(i8* %26), !dbg !6762
  store %struct.ndbuf* null, %struct.ndbuf** %retval, !dbg !6763
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6763

if.end.15:                                        ; preds = %if.end.7
  %27 = load i32, i32* %flags.addr, align 4, !dbg !6764, !tbaa !1844
  %28 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6765, !tbaa !1364
  %flags16 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %28, i32 0, i32 5, !dbg !6766
  store i32 %27, i32* %flags16, align 4, !dbg !6767, !tbaa !2600
  %29 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6768, !tbaa !1364
  %exports = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %29, i32 0, i32 6, !dbg !6769
  store i64 0, i64* %exports, align 8, !dbg !6770, !tbaa !3310
  %30 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6771, !tbaa !1364
  %base17 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %30, i32 0, i32 7, !dbg !6772
  store %struct.bufferinfo* %base17, %struct.bufferinfo** %base, align 8, !dbg !6773, !tbaa !1364
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6774, !tbaa !1364
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 1, !dbg !6775
  store %struct._object* null, %struct._object** %obj, align 8, !dbg !6776, !tbaa !2701
  %32 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6777, !tbaa !1364
  %data18 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %32, i32 0, i32 4, !dbg !6778
  %33 = load i8*, i8** %data18, align 8, !dbg !6778, !tbaa !2957
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6779, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !6780
  store i8* %33, i8** %buf, align 8, !dbg !6781, !tbaa !2077
  %35 = load i64, i64* %len, align 8, !dbg !6782, !tbaa !1503
  %36 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6783, !tbaa !1364
  %len19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %36, i32 0, i32 2, !dbg !6784
  store i64 %35, i64* %len19, align 8, !dbg !6785, !tbaa !1860
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6786, !tbaa !1364
  %itemsize20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 3, !dbg !6787
  store i64 1, i64* %itemsize20, align 8, !dbg !6788, !tbaa !1739
  %38 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6789, !tbaa !1364
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %38, i32 0, i32 4, !dbg !6790
  store i32 0, i32* %readonly, align 4, !dbg !6791, !tbaa !2692
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6792, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 6, !dbg !6793
  store i8* null, i8** %format, align 8, !dbg !6794, !tbaa !1737
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6795, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 5, !dbg !6796
  store i32 1, i32* %ndim, align 4, !dbg !6797, !tbaa !1629
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6798, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 7, !dbg !6799
  store i64* null, i64** %shape, align 8, !dbg !6800, !tbaa !1716
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6801, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 8, !dbg !6802
  store i64* null, i64** %strides, align 8, !dbg !6803, !tbaa !2024
  %43 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6804, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %43, i32 0, i32 9, !dbg !6805
  store i64* null, i64** %suboffsets, align 8, !dbg !6806, !tbaa !2033
  %44 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6807, !tbaa !1364
  %45 = bitcast %struct.ndbuf* %44 to i8*, !dbg !6807
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6808, !tbaa !1364
  %internal = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 10, !dbg !6809
  store i8* %45, i8** %internal, align 8, !dbg !6810, !tbaa !5378
  %47 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !6811, !tbaa !1364
  store %struct.ndbuf* %47, %struct.ndbuf** %retval, !dbg !6812
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6812

cleanup:                                          ; preds = %if.end.15, %if.then.13, %if.then.5, %if.then.2, %if.then
  %48 = bitcast i64* %len to i8*, !dbg !6813
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !6813
  %49 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6813
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !6813
  %50 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !6813
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !6813
  %51 = load %struct.ndbuf*, %struct.ndbuf** %retval, !dbg !6813
  ret %struct.ndbuf* %51, !dbg !6813
}

; Function Attrs: nounwind uwtable
define internal i32 @init_simple(%struct.ndbuf* %ndbuf, %struct._object* %items, %struct._object* %format, i64 %itemsize) #0 {
entry:
  %retval = alloca i32, align 4
  %ndbuf.addr = alloca %struct.ndbuf*, align 8
  %items.addr = alloca %struct._object*, align 8
  %format.addr = alloca %struct._object*, align 8
  %itemsize.addr = alloca i64, align 8
  %mview = alloca %struct._object*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.ndbuf* %ndbuf, %struct.ndbuf** %ndbuf.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf.addr, metadata !996, metadata !1360), !dbg !6814
  store %struct._object* %items, %struct._object** %items.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %items.addr, metadata !997, metadata !1360), !dbg !6815
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !998, metadata !1360), !dbg !6816
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !999, metadata !1360), !dbg !6817
  %0 = bitcast %struct._object** %mview to i8*, !dbg !6818
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6818
  call void @llvm.dbg.declare(metadata %struct._object** %mview, metadata !1000, metadata !1360), !dbg !6819
  %1 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6820
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6820
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1001, metadata !1360), !dbg !6821
  %2 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6822, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !6823
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !6821, !tbaa !1364
  %3 = bitcast i32* %ret to i8*, !dbg !6824
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !6824
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1002, metadata !1360), !dbg !6825
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6826, !tbaa !1364
  %call = call %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo* %4), !dbg !6827
  store %struct._object* %call, %struct._object** %mview, align 8, !dbg !6828, !tbaa !1364
  %5 = load %struct._object*, %struct._object** %mview, align 8, !dbg !6829, !tbaa !1364
  %cmp = icmp eq %struct._object* %5, null, !dbg !6831
  br i1 %cmp, label %if.then, label %if.end, !dbg !6832

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !6833
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6833

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %mview, align 8, !dbg !6834, !tbaa !1364
  %7 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !6835, !tbaa !1364
  %8 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !6836, !tbaa !1364
  %9 = load i64, i64* %itemsize.addr, align 8, !dbg !6837, !tbaa !1503
  %call2 = call i32 @pack_from_list(%struct._object* %6, %struct._object* %7, %struct._object* %8, i64 %9), !dbg !6838
  store i32 %call2, i32* %ret, align 4, !dbg !6839, !tbaa !1844
  br label %do.body, !dbg !6840

do.body:                                          ; preds = %if.end
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6841
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !6841
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1003, metadata !1360), !dbg !6843
  %11 = load %struct._object*, %struct._object** %mview, align 8, !dbg !6844, !tbaa !1364
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !6843, !tbaa !1364
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6845, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !6847
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6848, !tbaa !1378
  %dec = add i64 %13, -1, !dbg !6848
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6848, !tbaa !1378
  %cmp3 = icmp ne i64 %dec, 0, !dbg !6849
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6850

if.then.4:                                        ; preds = %do.body
  br label %if.end.5, !dbg !6851

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6853, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6855
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6855, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !6856
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6856, !tbaa !1568
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6857, !tbaa !1364
  call void %16(%struct._object* %17), !dbg !6858
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.4
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6859
  call void @llvm.lifetime.end(i64 8, i8* %18) #1, !dbg !6859
  br label %do.cond, !dbg !6861

do.cond:                                          ; preds = %if.end.5
  br label %do.end, !dbg !6862

do.end:                                           ; preds = %do.cond
  %19 = load i32, i32* %ret, align 4, !dbg !6864, !tbaa !1844
  %cmp6 = icmp slt i32 %19, 0, !dbg !6866
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !6867

if.then.7:                                        ; preds = %do.end
  store i32 -1, i32* %retval, !dbg !6868
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6868

if.end.8:                                         ; preds = %do.end
  %20 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6869, !tbaa !1364
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %20, i32 0, i32 5, !dbg !6870
  %21 = load i32, i32* %flags, align 4, !dbg !6870, !tbaa !2600
  %and = and i32 %21, 2, !dbg !6871
  %tobool = icmp ne i32 %and, 0, !dbg !6872
  %lnot = xor i1 %tobool, true, !dbg !6872
  %lnot.ext = zext i1 %lnot to i32, !dbg !6872
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6873, !tbaa !1364
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 4, !dbg !6874
  store i32 %lnot.ext, i32* %readonly, align 4, !dbg !6875, !tbaa !2692
  %23 = load i64, i64* %itemsize.addr, align 8, !dbg !6876, !tbaa !1503
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6877, !tbaa !1364
  %itemsize9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 3, !dbg !6878
  store i64 %23, i64* %itemsize9, align 8, !dbg !6879, !tbaa !1739
  %25 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !6880, !tbaa !1364
  %call10 = call i8* @get_format(%struct._object* %25), !dbg !6881
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6882, !tbaa !1364
  %format11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 6, !dbg !6883
  store i8* %call10, i8** %format11, align 8, !dbg !6884, !tbaa !1737
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6885, !tbaa !1364
  %format12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 6, !dbg !6887
  %28 = load i8*, i8** %format12, align 8, !dbg !6887, !tbaa !1737
  %cmp13 = icmp eq i8* %28, null, !dbg !6888
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !6889

if.then.14:                                       ; preds = %if.end.8
  store i32 -1, i32* %retval, !dbg !6890
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6890

if.end.15:                                        ; preds = %if.end.8
  store i32 0, i32* %retval, !dbg !6891
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6891

cleanup:                                          ; preds = %if.end.15, %if.then.14, %if.then.7, %if.then
  %29 = bitcast i32* %ret to i8*, !dbg !6892
  call void @llvm.lifetime.end(i64 4, i8* %29) #1, !dbg !6892
  %30 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6892
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !6892
  %31 = bitcast %struct._object** %mview to i8*, !dbg !6892
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !6892
  %32 = load i32, i32* %retval, !dbg !6892
  ret i32 %32, !dbg !6892
}

; Function Attrs: nounwind uwtable
define internal i32 @init_structure(%struct.ndbuf* %ndbuf, %struct._object* %shape, %struct._object* %strides, i64 %ndim) #0 {
entry:
  %retval = alloca i32, align 4
  %ndbuf.addr = alloca %struct.ndbuf*, align 8
  %shape.addr = alloca %struct._object*, align 8
  %strides.addr = alloca %struct._object*, align 8
  %ndim.addr = alloca i64, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.ndbuf* %ndbuf, %struct.ndbuf** %ndbuf.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf.addr, metadata !1070, metadata !1360), !dbg !6893
  store %struct._object* %shape, %struct._object** %shape.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %shape.addr, metadata !1071, metadata !1360), !dbg !6894
  store %struct._object* %strides, %struct._object** %strides.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %strides.addr, metadata !1072, metadata !1360), !dbg !6895
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !1073, metadata !1360), !dbg !6896
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !6897
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6897
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1074, metadata !1360), !dbg !6898
  %1 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6899, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %1, i32 0, i32 7, !dbg !6900
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !6898, !tbaa !1364
  %2 = load i64, i64* %ndim.addr, align 8, !dbg !6901, !tbaa !1503
  %conv = trunc i64 %2 to i32, !dbg !6902
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6903, !tbaa !1364
  %ndim2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !6904
  store i32 %conv, i32* %ndim2, align 4, !dbg !6905, !tbaa !1629
  %4 = load i64, i64* %ndim.addr, align 8, !dbg !6906, !tbaa !1503
  %cmp = icmp eq i64 %4, 0, !dbg !6908
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !6909

if.then:                                          ; preds = %entry
  %5 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6910, !tbaa !1364
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 5, !dbg !6913
  %6 = load i32, i32* %flags, align 4, !dbg !6913, !tbaa !2600
  %and = and i32 %6, 16, !dbg !6914
  %tobool = icmp ne i32 %and, 0, !dbg !6914
  br i1 %tobool, label %if.then.4, label %if.end, !dbg !6915

if.then.4:                                        ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6916, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.106, i32 0, i32 0)), !dbg !6918
  store i32 -1, i32* %retval, !dbg !6919
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6919

if.end:                                           ; preds = %if.then
  %8 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6920, !tbaa !1364
  %flags5 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %8, i32 0, i32 5, !dbg !6921
  %9 = load i32, i32* %flags5, align 4, !dbg !6922, !tbaa !2600
  %or = or i32 %9, 268, !dbg !6922
  store i32 %or, i32* %flags5, align 4, !dbg !6922, !tbaa !2600
  store i32 0, i32* %retval, !dbg !6923
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6923

if.end.6:                                         ; preds = %entry
  %10 = load %struct._object*, %struct._object** %shape.addr, align 8, !dbg !6924, !tbaa !1364
  %11 = load i64, i64* %ndim.addr, align 8, !dbg !6925, !tbaa !1503
  %call = call i64* @seq_as_ssize_array(%struct._object* %10, i64 %11, i32 1), !dbg !6926
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6927, !tbaa !1364
  %shape7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 7, !dbg !6928
  store i64* %call, i64** %shape7, align 8, !dbg !6929, !tbaa !1716
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6930, !tbaa !1364
  %shape8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 7, !dbg !6932
  %14 = load i64*, i64** %shape8, align 8, !dbg !6932, !tbaa !1716
  %cmp9 = icmp eq i64* %14, null, !dbg !6933
  br i1 %cmp9, label %if.then.11, label %if.end.12, !dbg !6934

if.then.11:                                       ; preds = %if.end.6
  store i32 -1, i32* %retval, !dbg !6935
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6935

if.end.12:                                        ; preds = %if.end.6
  %15 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6936, !tbaa !1364
  %tobool13 = icmp ne %struct._object* %15, null, !dbg !6936
  br i1 %tobool13, label %if.then.14, label %if.else, !dbg !6938

if.then.14:                                       ; preds = %if.end.12
  %16 = load %struct._object*, %struct._object** %strides.addr, align 8, !dbg !6939, !tbaa !1364
  %17 = load i64, i64* %ndim.addr, align 8, !dbg !6941, !tbaa !1503
  %call15 = call i64* @seq_as_ssize_array(%struct._object* %16, i64 %17, i32 0), !dbg !6942
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6943, !tbaa !1364
  %strides16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 8, !dbg !6944
  store i64* %call15, i64** %strides16, align 8, !dbg !6945, !tbaa !2024
  br label %if.end.20, !dbg !6946

if.else:                                          ; preds = %if.end.12
  %19 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6947, !tbaa !1364
  %20 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6949, !tbaa !1364
  %flags17 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %20, i32 0, i32 5, !dbg !6950
  %21 = load i32, i32* %flags17, align 4, !dbg !6950, !tbaa !2600
  %call18 = call i64* @strides_from_shape(%struct.ndbuf* %19, i32 %21), !dbg !6951
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6952, !tbaa !1364
  %strides19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 8, !dbg !6953
  store i64* %call18, i64** %strides19, align 8, !dbg !6954, !tbaa !2024
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.14
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6955, !tbaa !1364
  %strides21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 8, !dbg !6957
  %24 = load i64*, i64** %strides21, align 8, !dbg !6957, !tbaa !2024
  %cmp22 = icmp eq i64* %24, null, !dbg !6958
  br i1 %cmp22, label %if.then.24, label %if.end.25, !dbg !6959

if.then.24:                                       ; preds = %if.end.20
  store i32 -1, i32* %retval, !dbg !6960
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6960

if.end.25:                                        ; preds = %if.end.20
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6961, !tbaa !1364
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 2, !dbg !6963
  %26 = load i64, i64* %len, align 8, !dbg !6963, !tbaa !1860
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6964, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 3, !dbg !6965
  %28 = load i64, i64* %itemsize, align 8, !dbg !6965, !tbaa !1739
  %29 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6966, !tbaa !1364
  %offset = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %29, i32 0, i32 3, !dbg !6967
  %30 = load i64, i64* %offset, align 8, !dbg !6967, !tbaa !3295
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6968, !tbaa !1364
  %shape26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 7, !dbg !6969
  %32 = load i64*, i64** %shape26, align 8, !dbg !6969, !tbaa !1716
  %33 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6970, !tbaa !1364
  %strides27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %33, i32 0, i32 8, !dbg !6971
  %34 = load i64*, i64** %strides27, align 8, !dbg !6971, !tbaa !2024
  %35 = load i64, i64* %ndim.addr, align 8, !dbg !6972, !tbaa !1503
  %call28 = call i32 @verify_structure(i64 %26, i64 %28, i64 %30, i64* %32, i64* %34, i64 %35), !dbg !6973
  %cmp29 = icmp slt i32 %call28, 0, !dbg !6974
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !6975

if.then.31:                                       ; preds = %if.end.25
  store i32 -1, i32* %retval, !dbg !6976
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6976

if.end.32:                                        ; preds = %if.end.25
  %36 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6977, !tbaa !1364
  %data = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %36, i32 0, i32 4, !dbg !6978
  %37 = load i8*, i8** %data, align 8, !dbg !6978, !tbaa !2957
  %38 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6979, !tbaa !1364
  %offset33 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %38, i32 0, i32 3, !dbg !6980
  %39 = load i64, i64* %offset33, align 8, !dbg !6980, !tbaa !3295
  %add.ptr = getelementptr i8, i8* %37, i64 %39, !dbg !6981
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6982, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 0, !dbg !6983
  store i8* %add.ptr, i8** %buf, align 8, !dbg !6984, !tbaa !2077
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6985, !tbaa !1364
  call void @init_len(%struct.bufferinfo* %41), !dbg !6986
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6987, !tbaa !1364
  %call34 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %42, i8 signext 67), !dbg !6989
  %tobool35 = icmp ne i32 %call34, 0, !dbg !6989
  br i1 %tobool35, label %if.then.36, label %if.end.39, !dbg !6990

if.then.36:                                       ; preds = %if.end.32
  %43 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6991, !tbaa !1364
  %flags37 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %43, i32 0, i32 5, !dbg !6992
  %44 = load i32, i32* %flags37, align 4, !dbg !6993, !tbaa !2600
  %or38 = or i32 %44, 256, !dbg !6993
  store i32 %or38, i32* %flags37, align 4, !dbg !6993, !tbaa !2600
  br label %if.end.39, !dbg !6991

if.end.39:                                        ; preds = %if.then.36, %if.end.32
  %45 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !6994, !tbaa !1364
  %call40 = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %45, i8 signext 70), !dbg !6996
  %tobool41 = icmp ne i32 %call40, 0, !dbg !6996
  br i1 %tobool41, label %if.then.42, label %if.end.45, !dbg !6997

if.then.42:                                       ; preds = %if.end.39
  %46 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !6998, !tbaa !1364
  %flags43 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %46, i32 0, i32 5, !dbg !6999
  %47 = load i32, i32* %flags43, align 4, !dbg !7000, !tbaa !2600
  %or44 = or i32 %47, 4, !dbg !7000
  store i32 %or44, i32* %flags43, align 4, !dbg !7000, !tbaa !2600
  br label %if.end.45, !dbg !6998

if.end.45:                                        ; preds = %if.then.42, %if.end.39
  %48 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7001, !tbaa !1364
  %flags46 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %48, i32 0, i32 5, !dbg !7003
  %49 = load i32, i32* %flags46, align 4, !dbg !7003, !tbaa !2600
  %and47 = and i32 %49, 16, !dbg !7004
  %tobool48 = icmp ne i32 %and47, 0, !dbg !7004
  br i1 %tobool48, label %if.then.49, label %if.end.51, !dbg !7005

if.then.49:                                       ; preds = %if.end.45
  %50 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7006, !tbaa !1364
  %call50 = call i32 @init_suboffsets(%struct.ndbuf* %50), !dbg !7008
  store i32 %call50, i32* %retval, !dbg !7009
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7009

if.end.51:                                        ; preds = %if.end.45
  store i32 0, i32* %retval, !dbg !7010
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7010

cleanup:                                          ; preds = %if.end.51, %if.then.49, %if.then.31, %if.then.24, %if.then.11, %if.end, %if.then.4
  %51 = bitcast %struct.bufferinfo** %base to i8*, !dbg !7011
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !7011
  %52 = load i32, i32* %retval, !dbg !7011
  ret i32 %52, !dbg !7011
}

declare %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo*) #3

; Function Attrs: nounwind uwtable
define internal i32 @pack_from_list(%struct._object* %obj, %struct._object* %items, %struct._object* %format, i64 %itemsize) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %items.addr = alloca %struct._object*, align 8
  %format.addr = alloca %struct._object*, align 8
  %itemsize.addr = alloca i64, align 8
  %structobj = alloca %struct._object*, align 8
  %pack_into = alloca %struct._object*, align 8
  %args = alloca %struct._object*, align 8
  %offset = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %nitems = alloca i64, align 8
  %nmemb = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp61 = alloca %struct._object*, align 8
  %_py_decref_tmp155 = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp191 = alloca %struct._object*, align 8
  %_py_decref_tmp204 = alloca %struct._object*, align 8
  %_py_decref_tmp217 = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !1009, metadata !1360), !dbg !7012
  store %struct._object* %items, %struct._object** %items.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %items.addr, metadata !1010, metadata !1360), !dbg !7013
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !1011, metadata !1360), !dbg !7014
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !1012, metadata !1360), !dbg !7015
  %0 = bitcast %struct._object** %structobj to i8*, !dbg !7016
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7016
  call void @llvm.dbg.declare(metadata %struct._object** %structobj, metadata !1013, metadata !1360), !dbg !7017
  %1 = bitcast %struct._object** %pack_into to i8*, !dbg !7016
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7016
  call void @llvm.dbg.declare(metadata %struct._object** %pack_into, metadata !1014, metadata !1360), !dbg !7018
  %2 = bitcast %struct._object** %args to i8*, !dbg !7019
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7019
  call void @llvm.dbg.declare(metadata %struct._object** %args, metadata !1015, metadata !1360), !dbg !7020
  %3 = bitcast %struct._object** %offset to i8*, !dbg !7019
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7019
  call void @llvm.dbg.declare(metadata %struct._object** %offset, metadata !1016, metadata !1360), !dbg !7021
  %4 = bitcast %struct._object** %item to i8*, !dbg !7022
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !7022
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1017, metadata !1360), !dbg !7023
  %5 = bitcast %struct._object** %tmp to i8*, !dbg !7022
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !7022
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1018, metadata !1360), !dbg !7024
  %6 = bitcast i64* %nitems to i8*, !dbg !7025
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !7025
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !1019, metadata !1360), !dbg !7026
  %7 = bitcast i64* %nmemb to i8*, !dbg !7027
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !7027
  call void @llvm.dbg.declare(metadata i64* %nmemb, metadata !1020, metadata !1360), !dbg !7028
  %8 = bitcast i64* %i to i8*, !dbg !7029
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !7029
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1021, metadata !1360), !dbg !7030
  %9 = bitcast i64* %j to i8*, !dbg !7029
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !7029
  call void @llvm.dbg.declare(metadata i64* %j, metadata !1022, metadata !1360), !dbg !7031
  %10 = bitcast i32* %ret to i8*, !dbg !7032
  call void @llvm.lifetime.start(i64 4, i8* %10) #1, !dbg !7032
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1023, metadata !1360), !dbg !7033
  store i32 0, i32* %ret, align 4, !dbg !7033, !tbaa !1844
  %11 = load %struct._object*, %struct._object** @Struct, align 8, !dbg !7034, !tbaa !1364
  %12 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !7035, !tbaa !1364
  %call = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %11, %struct._object* %12, i8* null), !dbg !7036
  store %struct._object* %call, %struct._object** %structobj, align 8, !dbg !7037, !tbaa !1364
  %13 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !7038, !tbaa !1364
  %cmp = icmp eq %struct._object* %13, null, !dbg !7040
  br i1 %cmp, label %if.then, label %if.end, !dbg !7041

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !7042
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7042

if.end:                                           ; preds = %entry
  %14 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !7043, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !7044
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7044, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 19, !dbg !7045
  %16 = load i64, i64* %tp_flags, align 8, !dbg !7045, !tbaa !1605
  %and = and i64 %16, 33554432, !dbg !7046
  %cmp6 = icmp ne i64 %and, 0, !dbg !7047
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !7048

cond.true:                                        ; preds = %if.end
  %17 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !7049, !tbaa !1364
  %18 = bitcast %struct._object* %17 to %struct.PyVarObject*, !dbg !7051
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %18, i32 0, i32 1, !dbg !7052
  %19 = load i64, i64* %ob_size, align 8, !dbg !7052, !tbaa !1648
  br label %cond.end, !dbg !7048

cond.false:                                       ; preds = %if.end
  %20 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !7053, !tbaa !1364
  %21 = bitcast %struct._object* %20 to %struct.PyVarObject*, !dbg !7055
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %21, i32 0, i32 1, !dbg !7056
  %22 = load i64, i64* %ob_size7, align 8, !dbg !7056, !tbaa !1648
  br label %cond.end, !dbg !7048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %19, %cond.true ], [ %22, %cond.false ], !dbg !7048
  store i64 %cond, i64* %nitems, align 8, !dbg !7057, !tbaa !1503
  %23 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !7060, !tbaa !1364
  %call8 = call i64 @get_nmemb(%struct._object* %23), !dbg !7061
  store i64 %call8, i64* %nmemb, align 8, !dbg !7062, !tbaa !1503
  %24 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !7063, !tbaa !1364
  %call9 = call %struct._object* @PyObject_GetAttrString(%struct._object* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0)), !dbg !7064
  store %struct._object* %call9, %struct._object** %pack_into, align 8, !dbg !7065, !tbaa !1364
  %25 = load %struct._object*, %struct._object** %pack_into, align 8, !dbg !7066, !tbaa !1364
  %cmp10 = icmp eq %struct._object* %25, null, !dbg !7067
  br i1 %cmp10, label %if.then.11, label %if.end.17, !dbg !7068

if.then.11:                                       ; preds = %cond.end
  br label %do.body, !dbg !7069

do.body:                                          ; preds = %if.then.11
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7070
  call void @llvm.lifetime.start(i64 8, i8* %26) #1, !dbg !7070
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1024, metadata !1360), !dbg !7072
  %27 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !7073, !tbaa !1364
  store %struct._object* %27, %struct._object** %_py_decref_tmp, align 8, !dbg !7072, !tbaa !1364
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7074, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !7076
  %29 = load i64, i64* %ob_refcnt, align 8, !dbg !7077, !tbaa !1378
  %dec = add i64 %29, -1, !dbg !7077
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7077, !tbaa !1378
  %cmp13 = icmp ne i64 %dec, 0, !dbg !7078
  br i1 %cmp13, label %if.then.14, label %if.else, !dbg !7079

if.then.14:                                       ; preds = %do.body
  br label %if.end.16, !dbg !7080

if.else:                                          ; preds = %do.body
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7082, !tbaa !1364
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !7084
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !7084, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !7085
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7085, !tbaa !1568
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7086, !tbaa !1364
  call void %32(%struct._object* %33), !dbg !7087
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.14
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7088
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !7088
  br label %do.cond, !dbg !7090

do.cond:                                          ; preds = %if.end.16
  br label %do.end, !dbg !7091

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !7093
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7093

if.end.17:                                        ; preds = %cond.end
  %35 = load i64, i64* %nmemb, align 8, !dbg !7094, !tbaa !1503
  %add = add i64 2, %35, !dbg !7095
  %call18 = call %struct._object* @PyTuple_New(i64 %add), !dbg !7096
  store %struct._object* %call18, %struct._object** %args, align 8, !dbg !7097, !tbaa !1364
  %36 = load %struct._object*, %struct._object** %args, align 8, !dbg !7098, !tbaa !1364
  %cmp19 = icmp eq %struct._object* %36, null, !dbg !7099
  br i1 %cmp19, label %if.then.20, label %if.end.47, !dbg !7100

if.then.20:                                       ; preds = %if.end.17
  br label %do.body.21, !dbg !7101

do.body.21:                                       ; preds = %if.then.20
  %37 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7102
  call void @llvm.lifetime.start(i64 8, i8* %37) #1, !dbg !7102
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !1028, metadata !1360), !dbg !7104
  %38 = load %struct._object*, %struct._object** %pack_into, align 8, !dbg !7105, !tbaa !1364
  store %struct._object* %38, %struct._object** %_py_decref_tmp23, align 8, !dbg !7104, !tbaa !1364
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7106, !tbaa !1364
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !7108
  %40 = load i64, i64* %ob_refcnt24, align 8, !dbg !7109, !tbaa !1378
  %dec25 = add i64 %40, -1, !dbg !7109
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !7109, !tbaa !1378
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !7110
  br i1 %cmp26, label %if.then.27, label %if.else.28, !dbg !7111

if.then.27:                                       ; preds = %do.body.21
  br label %if.end.31, !dbg !7112

if.else.28:                                       ; preds = %do.body.21
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7114, !tbaa !1364
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !7116
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !7116, !tbaa !1374
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !7117
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !7117, !tbaa !1568
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7118, !tbaa !1364
  call void %43(%struct._object* %44), !dbg !7119
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %45 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7120
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !7120
  br label %do.cond.32, !dbg !7122

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !7123

do.end.33:                                        ; preds = %do.cond.32
  br label %do.body.34, !dbg !7125

do.body.34:                                       ; preds = %do.end.33
  %46 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !7126
  call void @llvm.lifetime.start(i64 8, i8* %46) #1, !dbg !7126
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !1032, metadata !1360), !dbg !7128
  %47 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !7129, !tbaa !1364
  store %struct._object* %47, %struct._object** %_py_decref_tmp36, align 8, !dbg !7128, !tbaa !1364
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !7130, !tbaa !1364
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !7132
  %49 = load i64, i64* %ob_refcnt37, align 8, !dbg !7133, !tbaa !1378
  %dec38 = add i64 %49, -1, !dbg !7133
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !7133, !tbaa !1378
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !7134
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !7135

if.then.40:                                       ; preds = %do.body.34
  br label %if.end.44, !dbg !7136

if.else.41:                                       ; preds = %do.body.34
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !7138, !tbaa !1364
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1, !dbg !7140
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !7140, !tbaa !1374
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4, !dbg !7141
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !7141, !tbaa !1568
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !7142, !tbaa !1364
  call void %52(%struct._object* %53), !dbg !7143
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %54 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !7144
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !7144
  br label %do.cond.45, !dbg !7145

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !7146

do.end.46:                                        ; preds = %do.cond.45
  store i32 -1, i32* %retval, !dbg !7148
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7148

if.end.47:                                        ; preds = %if.end.17
  store %struct._object* null, %struct._object** %offset, align 8, !dbg !7149, !tbaa !1364
  store i64 0, i64* %i, align 8, !dbg !7150, !tbaa !1503
  br label %for.cond, !dbg !7151

for.cond:                                         ; preds = %for.inc.166, %if.end.47
  %55 = load i64, i64* %i, align 8, !dbg !7152, !tbaa !1503
  %56 = load i64, i64* %nitems, align 8, !dbg !7155, !tbaa !1503
  %cmp48 = icmp slt i64 %55, %56, !dbg !7156
  br i1 %cmp48, label %for.body, label %for.end.168, !dbg !7157

for.body:                                         ; preds = %for.cond
  %57 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !7158, !tbaa !1364
  %58 = load %struct._object*, %struct._object** %args, align 8, !dbg !7159, !tbaa !1364
  %59 = bitcast %struct._object* %58 to %struct.PyTupleObject*, !dbg !7160
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %59, i32 0, i32 1, !dbg !7161
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !7162
  store %struct._object* %57, %struct._object** %arrayidx, align 8, !dbg !7163, !tbaa !1364
  store i64 1, i64* %j, align 8, !dbg !7164, !tbaa !1503
  br label %for.cond.49, !dbg !7166

for.cond.49:                                      ; preds = %for.inc, %for.body
  %60 = load i64, i64* %j, align 8, !dbg !7167, !tbaa !1503
  %61 = load i64, i64* %nmemb, align 8, !dbg !7171, !tbaa !1503
  %add50 = add i64 2, %61, !dbg !7172
  %cmp51 = icmp slt i64 %60, %add50, !dbg !7173
  br i1 %cmp51, label %for.body.52, label %for.end, !dbg !7174

for.body.52:                                      ; preds = %for.cond.49
  %62 = load i64, i64* %j, align 8, !dbg !7175, !tbaa !1503
  %63 = load %struct._object*, %struct._object** %args, align 8, !dbg !7176, !tbaa !1364
  %64 = bitcast %struct._object* %63 to %struct.PyTupleObject*, !dbg !7177
  %ob_item53 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %64, i32 0, i32 1, !dbg !7178
  %arrayidx54 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item53, i32 0, i64 %62, !dbg !7179
  store %struct._object* null, %struct._object** %arrayidx54, align 8, !dbg !7180, !tbaa !1364
  br label %for.inc, !dbg !7181

for.inc:                                          ; preds = %for.body.52
  %65 = load i64, i64* %j, align 8, !dbg !7182, !tbaa !1503
  %inc = add i64 %65, 1, !dbg !7182
  store i64 %inc, i64* %j, align 8, !dbg !7182, !tbaa !1503
  br label %for.cond.49, !dbg !7183

for.end:                                          ; preds = %for.cond.49
  br label %do.body.55, !dbg !7184

do.body.55:                                       ; preds = %for.end
  %66 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7185
  call void @llvm.lifetime.start(i64 8, i8* %66) #1, !dbg !7185
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1034, metadata !1360), !dbg !7187
  %67 = load %struct._object*, %struct._object** %offset, align 8, !dbg !7188, !tbaa !1364
  store %struct._object* %67, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7187, !tbaa !1364
  %68 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7189, !tbaa !1364
  %cmp57 = icmp ne %struct._object* %68, null, !dbg !7190
  br i1 %cmp57, label %if.then.58, label %if.end.72, !dbg !7191

if.then.58:                                       ; preds = %do.body.55
  br label %do.body.59, !dbg !7192

do.body.59:                                       ; preds = %if.then.58
  %69 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !7194
  call void @llvm.lifetime.start(i64 8, i8* %69) #1, !dbg !7194
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp61, metadata !1039, metadata !1360), !dbg !7196
  %70 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7197, !tbaa !1364
  store %struct._object* %70, %struct._object** %_py_decref_tmp61, align 8, !dbg !7196, !tbaa !1364
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !7198, !tbaa !1364
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !7200
  %72 = load i64, i64* %ob_refcnt62, align 8, !dbg !7201, !tbaa !1378
  %dec63 = add i64 %72, -1, !dbg !7201
  store i64 %dec63, i64* %ob_refcnt62, align 8, !dbg !7201, !tbaa !1378
  %cmp64 = icmp ne i64 %dec63, 0, !dbg !7202
  br i1 %cmp64, label %if.then.65, label %if.else.66, !dbg !7203

if.then.65:                                       ; preds = %do.body.59
  br label %if.end.69, !dbg !7204

if.else.66:                                       ; preds = %do.body.59
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !7206, !tbaa !1364
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !7208
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !7208, !tbaa !1374
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !7209
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !7209, !tbaa !1568
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !7210, !tbaa !1364
  call void %75(%struct._object* %76), !dbg !7211
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  %77 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !7212
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !7212
  br label %do.cond.70, !dbg !7214

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !7215

do.end.71:                                        ; preds = %do.cond.70
  br label %if.end.72, !dbg !7217

if.end.72:                                        ; preds = %do.end.71, %do.body.55
  %78 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7219
  call void @llvm.lifetime.end(i64 8, i8* %78) #1, !dbg !7219
  br label %do.cond.73, !dbg !7222

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !7223

do.end.74:                                        ; preds = %do.cond.73
  %79 = load i64, i64* %i, align 8, !dbg !7225, !tbaa !1503
  %80 = load i64, i64* %itemsize.addr, align 8, !dbg !7226, !tbaa !1503
  %mul = mul i64 %79, %80, !dbg !7227
  %call75 = call %struct._object* @PyLong_FromSsize_t(i64 %mul), !dbg !7228
  store %struct._object* %call75, %struct._object** %offset, align 8, !dbg !7229, !tbaa !1364
  %81 = load %struct._object*, %struct._object** %offset, align 8, !dbg !7230, !tbaa !1364
  %cmp76 = icmp eq %struct._object* %81, null, !dbg !7232
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !7233

if.then.77:                                       ; preds = %do.end.74
  store i32 -1, i32* %ret, align 4, !dbg !7234, !tbaa !1844
  br label %for.end.168, !dbg !7236

if.end.78:                                        ; preds = %do.end.74
  %82 = load %struct._object*, %struct._object** %offset, align 8, !dbg !7237, !tbaa !1364
  %83 = load %struct._object*, %struct._object** %args, align 8, !dbg !7238, !tbaa !1364
  %84 = bitcast %struct._object* %83 to %struct.PyTupleObject*, !dbg !7239
  %ob_item79 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %84, i32 0, i32 1, !dbg !7240
  %arrayidx80 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item79, i32 0, i64 1, !dbg !7241
  store %struct._object* %82, %struct._object** %arrayidx80, align 8, !dbg !7242, !tbaa !1364
  %85 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !7243, !tbaa !1364
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !7244
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !7244, !tbaa !1374
  %tp_flags82 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 19, !dbg !7245
  %87 = load i64, i64* %tp_flags82, align 8, !dbg !7245, !tbaa !1605
  %and83 = and i64 %87, 33554432, !dbg !7246
  %cmp84 = icmp ne i64 %and83, 0, !dbg !7247
  br i1 %cmp84, label %cond.true.85, label %cond.false.88, !dbg !7248

cond.true.85:                                     ; preds = %if.end.78
  %88 = load i64, i64* %i, align 8, !dbg !7249, !tbaa !1503
  %89 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !7251, !tbaa !1364
  %90 = bitcast %struct._object* %89 to %struct.PyListObject*, !dbg !7252
  %ob_item86 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %90, i32 0, i32 1, !dbg !7253
  %91 = load %struct._object**, %struct._object*** %ob_item86, align 8, !dbg !7253, !tbaa !1685
  %arrayidx87 = getelementptr %struct._object*, %struct._object** %91, i64 %88, !dbg !7254
  %92 = load %struct._object*, %struct._object** %arrayidx87, align 8, !dbg !7254, !tbaa !1364
  br label %cond.end.91, !dbg !7248

cond.false.88:                                    ; preds = %if.end.78
  %93 = load i64, i64* %i, align 8, !dbg !7255, !tbaa !1503
  %94 = load %struct._object*, %struct._object** %items.addr, align 8, !dbg !7257, !tbaa !1364
  %95 = bitcast %struct._object* %94 to %struct.PyTupleObject*, !dbg !7258
  %ob_item89 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %95, i32 0, i32 1, !dbg !7259
  %arrayidx90 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item89, i32 0, i64 %93, !dbg !7260
  %96 = load %struct._object*, %struct._object** %arrayidx90, align 8, !dbg !7260, !tbaa !1364
  br label %cond.end.91, !dbg !7248

cond.end.91:                                      ; preds = %cond.false.88, %cond.true.85
  %cond92 = phi %struct._object* [ %92, %cond.true.85 ], [ %96, %cond.false.88 ], !dbg !7248
  store %struct._object* %cond92, %struct._object** %item, align 8, !dbg !7261, !tbaa !1364
  %97 = load %struct._object*, %struct._object** %item, align 8, !dbg !7263, !tbaa !1364
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !7265
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8, !dbg !7265, !tbaa !1374
  %tp_flags94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 19, !dbg !7266
  %99 = load i64, i64* %tp_flags94, align 8, !dbg !7266, !tbaa !1605
  %and95 = and i64 %99, 134217728, !dbg !7267
  %cmp96 = icmp ne i64 %and95, 0, !dbg !7268
  br i1 %cmp96, label %land.lhs.true, label %lor.lhs.false, !dbg !7269

lor.lhs.false:                                    ; preds = %cond.end.91
  %100 = load %struct._object*, %struct._object** %item, align 8, !dbg !7270, !tbaa !1364
  %ob_type97 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 1, !dbg !7272
  %101 = load %struct._typeobject*, %struct._typeobject** %ob_type97, align 8, !dbg !7272, !tbaa !1374
  %tp_flags98 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %101, i32 0, i32 19, !dbg !7273
  %102 = load i64, i64* %tp_flags98, align 8, !dbg !7273, !tbaa !1605
  %and99 = and i64 %102, 16777216, !dbg !7274
  %cmp100 = icmp ne i64 %and99, 0, !dbg !7275
  br i1 %cmp100, label %land.lhs.true, label %lor.lhs.false.101, !dbg !7276

lor.lhs.false.101:                                ; preds = %lor.lhs.false
  %103 = load %struct._object*, %struct._object** %item, align 8, !dbg !7277, !tbaa !1364
  %ob_type102 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !7278
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type102, align 8, !dbg !7278, !tbaa !1374
  %cmp103 = icmp eq %struct._typeobject* %104, @PyFloat_Type, !dbg !7279
  br i1 %cmp103, label %land.lhs.true, label %lor.lhs.false.104, !dbg !7280

lor.lhs.false.104:                                ; preds = %lor.lhs.false.101
  %105 = load %struct._object*, %struct._object** %item, align 8, !dbg !7281, !tbaa !1364
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 1, !dbg !7283
  %106 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8, !dbg !7283, !tbaa !1374
  %call106 = call i32 @PyType_IsSubtype(%struct._typeobject* %106, %struct._typeobject* @PyFloat_Type), !dbg !7284
  %tobool = icmp ne i32 %call106, 0, !dbg !7284
  br i1 %tobool, label %land.lhs.true, label %if.else.111, !dbg !7285

land.lhs.true:                                    ; preds = %lor.lhs.false.104, %lor.lhs.false.101, %lor.lhs.false, %cond.end.91
  %107 = load i64, i64* %nmemb, align 8, !dbg !7286, !tbaa !1503
  %cmp107 = icmp eq i64 %107, 1, !dbg !7288
  br i1 %cmp107, label %if.then.108, label %if.else.111, !dbg !7289

if.then.108:                                      ; preds = %land.lhs.true
  %108 = load %struct._object*, %struct._object** %item, align 8, !dbg !7290, !tbaa !1364
  %109 = load %struct._object*, %struct._object** %args, align 8, !dbg !7292, !tbaa !1364
  %110 = bitcast %struct._object* %109 to %struct.PyTupleObject*, !dbg !7293
  %ob_item109 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %110, i32 0, i32 1, !dbg !7294
  %arrayidx110 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item109, i32 0, i64 2, !dbg !7295
  store %struct._object* %108, %struct._object** %arrayidx110, align 8, !dbg !7296, !tbaa !1364
  br label %if.end.148, !dbg !7297

if.else.111:                                      ; preds = %land.lhs.true, %lor.lhs.false.104
  %111 = load %struct._object*, %struct._object** %item, align 8, !dbg !7298, !tbaa !1364
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 1, !dbg !7300
  %112 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !7300, !tbaa !1374
  %tp_flags113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %112, i32 0, i32 19, !dbg !7301
  %113 = load i64, i64* %tp_flags113, align 8, !dbg !7301, !tbaa !1605
  %and114 = and i64 %113, 33554432, !dbg !7302
  %cmp115 = icmp ne i64 %and114, 0, !dbg !7303
  br i1 %cmp115, label %land.lhs.true.121, label %lor.lhs.false.116, !dbg !7304

lor.lhs.false.116:                                ; preds = %if.else.111
  %114 = load %struct._object*, %struct._object** %item, align 8, !dbg !7305, !tbaa !1364
  %ob_type117 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !7307
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type117, align 8, !dbg !7307, !tbaa !1374
  %tp_flags118 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 19, !dbg !7308
  %116 = load i64, i64* %tp_flags118, align 8, !dbg !7308, !tbaa !1605
  %and119 = and i64 %116, 67108864, !dbg !7309
  %cmp120 = icmp ne i64 %and119, 0, !dbg !7310
  br i1 %cmp120, label %land.lhs.true.121, label %if.else.146, !dbg !7311

land.lhs.true.121:                                ; preds = %lor.lhs.false.116, %if.else.111
  %117 = load %struct._object*, %struct._object** %item, align 8, !dbg !7312, !tbaa !1364
  %call122 = call i64 @PySequence_Size(%struct._object* %117), !dbg !7313
  %118 = load i64, i64* %nmemb, align 8, !dbg !7314, !tbaa !1503
  %cmp123 = icmp eq i64 %call122, %118, !dbg !7315
  br i1 %cmp123, label %if.then.124, label %if.else.146, !dbg !7316

if.then.124:                                      ; preds = %land.lhs.true.121
  store i64 0, i64* %j, align 8, !dbg !7317, !tbaa !1503
  br label %for.cond.125, !dbg !7320

for.cond.125:                                     ; preds = %for.inc.143, %if.then.124
  %119 = load i64, i64* %j, align 8, !dbg !7321, !tbaa !1503
  %120 = load i64, i64* %nmemb, align 8, !dbg !7325, !tbaa !1503
  %cmp126 = icmp slt i64 %119, %120, !dbg !7326
  br i1 %cmp126, label %for.body.127, label %for.end.145, !dbg !7327

for.body.127:                                     ; preds = %for.cond.125
  %121 = load %struct._object*, %struct._object** %item, align 8, !dbg !7328, !tbaa !1364
  %ob_type128 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 1, !dbg !7330
  %122 = load %struct._typeobject*, %struct._typeobject** %ob_type128, align 8, !dbg !7330, !tbaa !1374
  %tp_flags129 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %122, i32 0, i32 19, !dbg !7331
  %123 = load i64, i64* %tp_flags129, align 8, !dbg !7331, !tbaa !1605
  %and130 = and i64 %123, 33554432, !dbg !7332
  %cmp131 = icmp ne i64 %and130, 0, !dbg !7333
  br i1 %cmp131, label %cond.true.132, label %cond.false.135, !dbg !7334

cond.true.132:                                    ; preds = %for.body.127
  %124 = load i64, i64* %j, align 8, !dbg !7335, !tbaa !1503
  %125 = load %struct._object*, %struct._object** %item, align 8, !dbg !7337, !tbaa !1364
  %126 = bitcast %struct._object* %125 to %struct.PyListObject*, !dbg !7338
  %ob_item133 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %126, i32 0, i32 1, !dbg !7339
  %127 = load %struct._object**, %struct._object*** %ob_item133, align 8, !dbg !7339, !tbaa !1685
  %arrayidx134 = getelementptr %struct._object*, %struct._object** %127, i64 %124, !dbg !7340
  %128 = load %struct._object*, %struct._object** %arrayidx134, align 8, !dbg !7340, !tbaa !1364
  br label %cond.end.138, !dbg !7334

cond.false.135:                                   ; preds = %for.body.127
  %129 = load i64, i64* %j, align 8, !dbg !7341, !tbaa !1503
  %130 = load %struct._object*, %struct._object** %item, align 8, !dbg !7343, !tbaa !1364
  %131 = bitcast %struct._object* %130 to %struct.PyTupleObject*, !dbg !7344
  %ob_item136 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %131, i32 0, i32 1, !dbg !7345
  %arrayidx137 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item136, i32 0, i64 %129, !dbg !7346
  %132 = load %struct._object*, %struct._object** %arrayidx137, align 8, !dbg !7346, !tbaa !1364
  br label %cond.end.138, !dbg !7334

cond.end.138:                                     ; preds = %cond.false.135, %cond.true.132
  %cond139 = phi %struct._object* [ %128, %cond.true.132 ], [ %132, %cond.false.135 ], !dbg !7334
  store %struct._object* %cond139, %struct._object** %tmp, align 8, !dbg !7347, !tbaa !1364
  %133 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7350, !tbaa !1364
  %134 = load i64, i64* %j, align 8, !dbg !7351, !tbaa !1503
  %add140 = add i64 2, %134, !dbg !7352
  %135 = load %struct._object*, %struct._object** %args, align 8, !dbg !7353, !tbaa !1364
  %136 = bitcast %struct._object* %135 to %struct.PyTupleObject*, !dbg !7354
  %ob_item141 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %136, i32 0, i32 1, !dbg !7355
  %arrayidx142 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item141, i32 0, i64 %add140, !dbg !7356
  store %struct._object* %133, %struct._object** %arrayidx142, align 8, !dbg !7357, !tbaa !1364
  br label %for.inc.143, !dbg !7358

for.inc.143:                                      ; preds = %cond.end.138
  %137 = load i64, i64* %j, align 8, !dbg !7359, !tbaa !1503
  %inc144 = add i64 %137, 1, !dbg !7359
  store i64 %inc144, i64* %j, align 8, !dbg !7359, !tbaa !1503
  br label %for.cond.125, !dbg !7360

for.end.145:                                      ; preds = %for.cond.125
  br label %if.end.147, !dbg !7361

if.else.146:                                      ; preds = %land.lhs.true.121, %lor.lhs.false.116
  %138 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7362, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %138, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.66, i32 0, i32 0)), !dbg !7364
  store i32 -1, i32* %ret, align 4, !dbg !7365, !tbaa !1844
  br label %for.end.168, !dbg !7366

if.end.147:                                       ; preds = %for.end.145
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.then.108
  %139 = load %struct._object*, %struct._object** %pack_into, align 8, !dbg !7367, !tbaa !1364
  %140 = load %struct._object*, %struct._object** %args, align 8, !dbg !7368, !tbaa !1364
  %call149 = call %struct._object* @PyObject_CallObject(%struct._object* %139, %struct._object* %140), !dbg !7369
  store %struct._object* %call149, %struct._object** %tmp, align 8, !dbg !7370, !tbaa !1364
  %141 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7371, !tbaa !1364
  %cmp150 = icmp eq %struct._object* %141, null, !dbg !7373
  br i1 %cmp150, label %if.then.151, label %if.end.152, !dbg !7374

if.then.151:                                      ; preds = %if.end.148
  store i32 -1, i32* %ret, align 4, !dbg !7375, !tbaa !1844
  br label %for.end.168, !dbg !7377

if.end.152:                                       ; preds = %if.end.148
  br label %do.body.153, !dbg !7378

do.body.153:                                      ; preds = %if.end.152
  %142 = bitcast %struct._object** %_py_decref_tmp155 to i8*, !dbg !7379
  call void @llvm.lifetime.start(i64 8, i8* %142) #1, !dbg !7379
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp155, metadata !1042, metadata !1360), !dbg !7381
  %143 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7382, !tbaa !1364
  store %struct._object* %143, %struct._object** %_py_decref_tmp155, align 8, !dbg !7381, !tbaa !1364
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8, !dbg !7383, !tbaa !1364
  %ob_refcnt156 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0, !dbg !7385
  %145 = load i64, i64* %ob_refcnt156, align 8, !dbg !7386, !tbaa !1378
  %dec157 = add i64 %145, -1, !dbg !7386
  store i64 %dec157, i64* %ob_refcnt156, align 8, !dbg !7386, !tbaa !1378
  %cmp158 = icmp ne i64 %dec157, 0, !dbg !7387
  br i1 %cmp158, label %if.then.159, label %if.else.160, !dbg !7388

if.then.159:                                      ; preds = %do.body.153
  br label %if.end.163, !dbg !7389

if.else.160:                                      ; preds = %do.body.153
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8, !dbg !7391, !tbaa !1364
  %ob_type161 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1, !dbg !7393
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type161, align 8, !dbg !7393, !tbaa !1374
  %tp_dealloc162 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4, !dbg !7394
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc162, align 8, !dbg !7394, !tbaa !1568
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp155, align 8, !dbg !7395, !tbaa !1364
  call void %148(%struct._object* %149), !dbg !7396
  br label %if.end.163

if.end.163:                                       ; preds = %if.else.160, %if.then.159
  %150 = bitcast %struct._object** %_py_decref_tmp155 to i8*, !dbg !7397
  call void @llvm.lifetime.end(i64 8, i8* %150) #1, !dbg !7397
  br label %do.cond.164, !dbg !7399

do.cond.164:                                      ; preds = %if.end.163
  br label %do.end.165, !dbg !7400

do.end.165:                                       ; preds = %do.cond.164
  br label %for.inc.166, !dbg !7402

for.inc.166:                                      ; preds = %do.end.165
  %151 = load i64, i64* %i, align 8, !dbg !7403, !tbaa !1503
  %inc167 = add i64 %151, 1, !dbg !7403
  store i64 %inc167, i64* %i, align 8, !dbg !7403, !tbaa !1503
  br label %for.cond, !dbg !7404

for.end.168:                                      ; preds = %if.then.151, %if.else.146, %if.then.77, %for.cond
  %152 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !7405, !tbaa !1364
  %ob_refcnt169 = getelementptr inbounds %struct._object, %struct._object* %152, i32 0, i32 0, !dbg !7406
  %153 = load i64, i64* %ob_refcnt169, align 8, !dbg !7407, !tbaa !1378
  %inc170 = add i64 %153, 1, !dbg !7407
  store i64 %inc170, i64* %ob_refcnt169, align 8, !dbg !7407, !tbaa !1378
  store i64 2, i64* %i, align 8, !dbg !7408, !tbaa !1503
  br label %for.cond.171, !dbg !7409

for.cond.171:                                     ; preds = %for.inc.186, %for.end.168
  %154 = load i64, i64* %i, align 8, !dbg !7410, !tbaa !1503
  %155 = load i64, i64* %nmemb, align 8, !dbg !7413, !tbaa !1503
  %add172 = add i64 2, %155, !dbg !7414
  %cmp173 = icmp slt i64 %154, %add172, !dbg !7415
  br i1 %cmp173, label %for.body.174, label %for.end.188, !dbg !7416

for.body.174:                                     ; preds = %for.cond.171
  %156 = load i64, i64* %i, align 8, !dbg !7417, !tbaa !1503
  %157 = load %struct._object*, %struct._object** %args, align 8, !dbg !7418, !tbaa !1364
  %158 = bitcast %struct._object* %157 to %struct.PyTupleObject*, !dbg !7419
  %ob_item175 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %158, i32 0, i32 1, !dbg !7420
  %arrayidx176 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item175, i32 0, i64 %156, !dbg !7421
  %159 = load %struct._object*, %struct._object** %arrayidx176, align 8, !dbg !7421, !tbaa !1364
  store %struct._object* %159, %struct._object** %tmp, align 8, !dbg !7422, !tbaa !1364
  br label %do.body.177, !dbg !7423

do.body.177:                                      ; preds = %for.body.174
  %160 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7424
  call void @llvm.lifetime.start(i64 8, i8* %160) #1, !dbg !7424
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !1044, metadata !1360), !dbg !7426
  %161 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7427, !tbaa !1364
  store %struct._object* %161, %struct._object** %_py_xincref_tmp, align 8, !dbg !7426, !tbaa !1364
  %162 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7428, !tbaa !1364
  %cmp179 = icmp ne %struct._object* %162, null, !dbg !7430
  br i1 %cmp179, label %if.then.180, label %if.end.183, !dbg !7431

if.then.180:                                      ; preds = %do.body.177
  %163 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7432, !tbaa !1364
  %ob_refcnt181 = getelementptr inbounds %struct._object, %struct._object* %163, i32 0, i32 0, !dbg !7434
  %164 = load i64, i64* %ob_refcnt181, align 8, !dbg !7435, !tbaa !1378
  %inc182 = add i64 %164, 1, !dbg !7435
  store i64 %inc182, i64* %ob_refcnt181, align 8, !dbg !7435, !tbaa !1378
  br label %if.end.183, !dbg !7436

if.end.183:                                       ; preds = %if.then.180, %do.body.177
  %165 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7437
  call void @llvm.lifetime.end(i64 8, i8* %165) #1, !dbg !7437
  br label %do.cond.184, !dbg !7440

do.cond.184:                                      ; preds = %if.end.183
  br label %do.end.185, !dbg !7441

do.end.185:                                       ; preds = %do.cond.184
  br label %for.inc.186, !dbg !7443

for.inc.186:                                      ; preds = %do.end.185
  %166 = load i64, i64* %i, align 8, !dbg !7444, !tbaa !1503
  %inc187 = add i64 %166, 1, !dbg !7444
  store i64 %inc187, i64* %i, align 8, !dbg !7444, !tbaa !1503
  br label %for.cond.171, !dbg !7445

for.end.188:                                      ; preds = %for.cond.171
  br label %do.body.189, !dbg !7446

do.body.189:                                      ; preds = %for.end.188
  %167 = bitcast %struct._object** %_py_decref_tmp191 to i8*, !dbg !7447
  call void @llvm.lifetime.start(i64 8, i8* %167) #1, !dbg !7447
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp191, metadata !1049, metadata !1360), !dbg !7449
  %168 = load %struct._object*, %struct._object** %args, align 8, !dbg !7450, !tbaa !1364
  store %struct._object* %168, %struct._object** %_py_decref_tmp191, align 8, !dbg !7449, !tbaa !1364
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp191, align 8, !dbg !7451, !tbaa !1364
  %ob_refcnt192 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 0, !dbg !7453
  %170 = load i64, i64* %ob_refcnt192, align 8, !dbg !7454, !tbaa !1378
  %dec193 = add i64 %170, -1, !dbg !7454
  store i64 %dec193, i64* %ob_refcnt192, align 8, !dbg !7454, !tbaa !1378
  %cmp194 = icmp ne i64 %dec193, 0, !dbg !7455
  br i1 %cmp194, label %if.then.195, label %if.else.196, !dbg !7456

if.then.195:                                      ; preds = %do.body.189
  br label %if.end.199, !dbg !7457

if.else.196:                                      ; preds = %do.body.189
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp191, align 8, !dbg !7459, !tbaa !1364
  %ob_type197 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 1, !dbg !7461
  %172 = load %struct._typeobject*, %struct._typeobject** %ob_type197, align 8, !dbg !7461, !tbaa !1374
  %tp_dealloc198 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %172, i32 0, i32 4, !dbg !7462
  %173 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc198, align 8, !dbg !7462, !tbaa !1568
  %174 = load %struct._object*, %struct._object** %_py_decref_tmp191, align 8, !dbg !7463, !tbaa !1364
  call void %173(%struct._object* %174), !dbg !7464
  br label %if.end.199

if.end.199:                                       ; preds = %if.else.196, %if.then.195
  %175 = bitcast %struct._object** %_py_decref_tmp191 to i8*, !dbg !7465
  call void @llvm.lifetime.end(i64 8, i8* %175) #1, !dbg !7465
  br label %do.cond.200, !dbg !7467

do.cond.200:                                      ; preds = %if.end.199
  br label %do.end.201, !dbg !7468

do.end.201:                                       ; preds = %do.cond.200
  br label %do.body.202, !dbg !7470

do.body.202:                                      ; preds = %do.end.201
  %176 = bitcast %struct._object** %_py_decref_tmp204 to i8*, !dbg !7471
  call void @llvm.lifetime.start(i64 8, i8* %176) #1, !dbg !7471
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp204, metadata !1051, metadata !1360), !dbg !7473
  %177 = load %struct._object*, %struct._object** %pack_into, align 8, !dbg !7474, !tbaa !1364
  store %struct._object* %177, %struct._object** %_py_decref_tmp204, align 8, !dbg !7473, !tbaa !1364
  %178 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !7475, !tbaa !1364
  %ob_refcnt205 = getelementptr inbounds %struct._object, %struct._object* %178, i32 0, i32 0, !dbg !7477
  %179 = load i64, i64* %ob_refcnt205, align 8, !dbg !7478, !tbaa !1378
  %dec206 = add i64 %179, -1, !dbg !7478
  store i64 %dec206, i64* %ob_refcnt205, align 8, !dbg !7478, !tbaa !1378
  %cmp207 = icmp ne i64 %dec206, 0, !dbg !7479
  br i1 %cmp207, label %if.then.208, label %if.else.209, !dbg !7480

if.then.208:                                      ; preds = %do.body.202
  br label %if.end.212, !dbg !7481

if.else.209:                                      ; preds = %do.body.202
  %180 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !7483, !tbaa !1364
  %ob_type210 = getelementptr inbounds %struct._object, %struct._object* %180, i32 0, i32 1, !dbg !7485
  %181 = load %struct._typeobject*, %struct._typeobject** %ob_type210, align 8, !dbg !7485, !tbaa !1374
  %tp_dealloc211 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %181, i32 0, i32 4, !dbg !7486
  %182 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc211, align 8, !dbg !7486, !tbaa !1568
  %183 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !7487, !tbaa !1364
  call void %182(%struct._object* %183), !dbg !7488
  br label %if.end.212

if.end.212:                                       ; preds = %if.else.209, %if.then.208
  %184 = bitcast %struct._object** %_py_decref_tmp204 to i8*, !dbg !7489
  call void @llvm.lifetime.end(i64 8, i8* %184) #1, !dbg !7489
  br label %do.cond.213, !dbg !7490

do.cond.213:                                      ; preds = %if.end.212
  br label %do.end.214, !dbg !7491

do.end.214:                                       ; preds = %do.cond.213
  br label %do.body.215, !dbg !7493

do.body.215:                                      ; preds = %do.end.214
  %185 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !7494
  call void @llvm.lifetime.start(i64 8, i8* %185) #1, !dbg !7494
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp217, metadata !1053, metadata !1360), !dbg !7496
  %186 = load %struct._object*, %struct._object** %structobj, align 8, !dbg !7497, !tbaa !1364
  store %struct._object* %186, %struct._object** %_py_decref_tmp217, align 8, !dbg !7496, !tbaa !1364
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !7498, !tbaa !1364
  %ob_refcnt218 = getelementptr inbounds %struct._object, %struct._object* %187, i32 0, i32 0, !dbg !7500
  %188 = load i64, i64* %ob_refcnt218, align 8, !dbg !7501, !tbaa !1378
  %dec219 = add i64 %188, -1, !dbg !7501
  store i64 %dec219, i64* %ob_refcnt218, align 8, !dbg !7501, !tbaa !1378
  %cmp220 = icmp ne i64 %dec219, 0, !dbg !7502
  br i1 %cmp220, label %if.then.221, label %if.else.222, !dbg !7503

if.then.221:                                      ; preds = %do.body.215
  br label %if.end.225, !dbg !7504

if.else.222:                                      ; preds = %do.body.215
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !7506, !tbaa !1364
  %ob_type223 = getelementptr inbounds %struct._object, %struct._object* %189, i32 0, i32 1, !dbg !7508
  %190 = load %struct._typeobject*, %struct._typeobject** %ob_type223, align 8, !dbg !7508, !tbaa !1374
  %tp_dealloc224 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %190, i32 0, i32 4, !dbg !7509
  %191 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc224, align 8, !dbg !7509, !tbaa !1568
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp217, align 8, !dbg !7510, !tbaa !1364
  call void %191(%struct._object* %192), !dbg !7511
  br label %if.end.225

if.end.225:                                       ; preds = %if.else.222, %if.then.221
  %193 = bitcast %struct._object** %_py_decref_tmp217 to i8*, !dbg !7512
  call void @llvm.lifetime.end(i64 8, i8* %193) #1, !dbg !7512
  br label %do.cond.226, !dbg !7513

do.cond.226:                                      ; preds = %if.end.225
  br label %do.end.227, !dbg !7514

do.end.227:                                       ; preds = %do.cond.226
  %194 = load i32, i32* %ret, align 4, !dbg !7516, !tbaa !1844
  store i32 %194, i32* %retval, !dbg !7517
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7517

cleanup:                                          ; preds = %do.end.227, %do.end.46, %do.end, %if.then
  %195 = bitcast i32* %ret to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 4, i8* %195) #1, !dbg !7518
  %196 = bitcast i64* %j to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %196) #1, !dbg !7518
  %197 = bitcast i64* %i to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %197) #1, !dbg !7518
  %198 = bitcast i64* %nmemb to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %198) #1, !dbg !7518
  %199 = bitcast i64* %nitems to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %199) #1, !dbg !7518
  %200 = bitcast %struct._object** %tmp to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %200) #1, !dbg !7518
  %201 = bitcast %struct._object** %item to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %201) #1, !dbg !7518
  %202 = bitcast %struct._object** %offset to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %202) #1, !dbg !7518
  %203 = bitcast %struct._object** %args to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %203) #1, !dbg !7518
  %204 = bitcast %struct._object** %pack_into to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %204) #1, !dbg !7518
  %205 = bitcast %struct._object** %structobj to i8*, !dbg !7518
  call void @llvm.lifetime.end(i64 8, i8* %205) #1, !dbg !7518
  %206 = load i32, i32* %retval, !dbg !7518
  ret i32 %206, !dbg !7518
}

; Function Attrs: nounwind uwtable
define internal i8* @get_format(%struct._object* %format) #0 {
entry:
  %retval = alloca i8*, align 8
  %format.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._object*, align 8
  %fmt = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store %struct._object* %format, %struct._object** %format.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %format.addr, metadata !1059, metadata !1360), !dbg !7519
  %0 = bitcast %struct._object** %tmp to i8*, !dbg !7520
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7520
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1060, metadata !1360), !dbg !7521
  %1 = bitcast i8** %fmt to i8*, !dbg !7522
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7522
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1061, metadata !1360), !dbg !7523
  %2 = load %struct._object*, %struct._object** %format.addr, align 8, !dbg !7524, !tbaa !1364
  %call = call %struct._object* @PyUnicode_AsASCIIString(%struct._object* %2), !dbg !7525
  store %struct._object* %call, %struct._object** %tmp, align 8, !dbg !7526, !tbaa !1364
  %3 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7527, !tbaa !1364
  %cmp = icmp eq %struct._object* %3, null, !dbg !7529
  br i1 %cmp, label %if.then, label %if.end, !dbg !7530

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !7531
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7531

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7532, !tbaa !1364
  %5 = bitcast %struct._object* %4 to %struct.PyVarObject*, !dbg !7533
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1, !dbg !7534
  %6 = load i64, i64* %ob_size, align 8, !dbg !7534, !tbaa !1648
  %add = add i64 %6, 1, !dbg !7535
  %call2 = call i8* @PyMem_Malloc(i64 %add), !dbg !7536
  store i8* %call2, i8** %fmt, align 8, !dbg !7537, !tbaa !1364
  %7 = load i8*, i8** %fmt, align 8, !dbg !7538, !tbaa !1364
  %cmp3 = icmp eq i8* %7, null, !dbg !7539
  br i1 %cmp3, label %if.then.4, label %if.end.10, !dbg !7540

if.then.4:                                        ; preds = %if.end
  %call5 = call %struct._object* @PyErr_NoMemory(), !dbg !7541
  br label %do.body, !dbg !7542

do.body:                                          ; preds = %if.then.4
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7543
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !7543
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1062, metadata !1360), !dbg !7545
  %9 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7546, !tbaa !1364
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !7545, !tbaa !1364
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7547, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !7549
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !7550, !tbaa !1378
  %dec = add i64 %11, -1, !dbg !7550
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7550, !tbaa !1378
  %cmp7 = icmp ne i64 %dec, 0, !dbg !7551
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !7552

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !7553

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7555, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !7557
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7557, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !7558
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7558, !tbaa !1568
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7559, !tbaa !1364
  call void %14(%struct._object* %15), !dbg !7560
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7561
  call void @llvm.lifetime.end(i64 8, i8* %16) #1, !dbg !7561
  br label %do.cond, !dbg !7563

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !7564

do.end:                                           ; preds = %do.cond
  store i8* null, i8** %retval, !dbg !7566
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7566

if.end.10:                                        ; preds = %if.end
  %17 = load i8*, i8** %fmt, align 8, !dbg !7567, !tbaa !1364
  %18 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7568, !tbaa !1364
  %19 = bitcast %struct._object* %18 to %struct.PyBytesObject*, !dbg !7569
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %19, i32 0, i32 2, !dbg !7570
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !7571
  %call11 = call i8* @strcpy(i8* %17, i8* %arraydecay) #1, !dbg !7572
  br label %do.body.12, !dbg !7573

do.body.12:                                       ; preds = %if.end.10
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !7574
  call void @llvm.lifetime.start(i64 8, i8* %20) #1, !dbg !7574
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1066, metadata !1360), !dbg !7576
  %21 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7577, !tbaa !1364
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !7576, !tbaa !1364
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !7578, !tbaa !1364
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !7580
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !7581, !tbaa !1378
  %dec16 = add i64 %23, -1, !dbg !7581
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !7581, !tbaa !1378
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !7582
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !7583

if.then.18:                                       ; preds = %do.body.12
  br label %if.end.22, !dbg !7584

if.else.19:                                       ; preds = %do.body.12
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !7586, !tbaa !1364
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !7588
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !7588, !tbaa !1374
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !7589
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !7589, !tbaa !1568
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !7590, !tbaa !1364
  call void %26(%struct._object* %27), !dbg !7591
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !7592
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !7592
  br label %do.cond.23, !dbg !7594

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !7595

do.end.24:                                        ; preds = %do.cond.23
  %29 = load i8*, i8** %fmt, align 8, !dbg !7597, !tbaa !1364
  store i8* %29, i8** %retval, !dbg !7598
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7598

cleanup:                                          ; preds = %do.end.24, %do.end, %if.then
  %30 = bitcast i8** %fmt to i8*, !dbg !7599
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !7599
  %31 = bitcast %struct._object** %tmp to i8*, !dbg !7599
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !7599
  %32 = load i8*, i8** %retval, !dbg !7599
  ret i8* %32, !dbg !7599
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #5

; Function Attrs: nounwind uwtable
define internal i64* @seq_as_ssize_array(%struct._object* %seq, i64 %len, i32 %is_shape) #0 {
entry:
  %retval = alloca i64*, align 8
  %seq.addr = alloca %struct._object*, align 8
  %len.addr = alloca i64, align 8
  %is_shape.addr = alloca i32, align 4
  %dest = alloca i64*, align 8
  %x = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %tmp = alloca %struct._object*, align 8
  store %struct._object* %seq, %struct._object** %seq.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %seq.addr, metadata !1079, metadata !1360), !dbg !7600
  store i64 %len, i64* %len.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !1080, metadata !1360), !dbg !7601
  store i32 %is_shape, i32* %is_shape.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %is_shape.addr, metadata !1081, metadata !1360), !dbg !7602
  %0 = bitcast i64** %dest to i8*, !dbg !7603
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7603
  call void @llvm.dbg.declare(metadata i64** %dest, metadata !1082, metadata !1360), !dbg !7604
  %1 = bitcast i64* %x to i8*, !dbg !7605
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7605
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1083, metadata !1360), !dbg !7606
  %2 = bitcast i64* %i to i8*, !dbg !7605
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7605
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1084, metadata !1360), !dbg !7607
  %3 = load i64, i64* %len.addr, align 8, !dbg !7608, !tbaa !1503
  %mul = mul i64 %3, 8, !dbg !7609
  %call = call i8* @PyMem_Malloc(i64 %mul), !dbg !7610
  %4 = bitcast i8* %call to i64*, !dbg !7610
  store i64* %4, i64** %dest, align 8, !dbg !7611, !tbaa !1364
  %5 = load i64*, i64** %dest, align 8, !dbg !7612, !tbaa !1364
  %cmp = icmp eq i64* %5, null, !dbg !7614
  br i1 %cmp, label %if.then, label %if.end, !dbg !7615

if.then:                                          ; preds = %entry
  %call1 = call %struct._object* @PyErr_NoMemory(), !dbg !7616
  store i64* null, i64** %retval, !dbg !7618
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.25, !dbg !7618

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !7619, !tbaa !1503
  br label %for.cond, !dbg !7620

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !7621, !tbaa !1503
  %7 = load i64, i64* %len.addr, align 8, !dbg !7624, !tbaa !1503
  %cmp2 = icmp slt i64 %6, %7, !dbg !7625
  br i1 %cmp2, label %for.body, label %for.end, !dbg !7626

for.body:                                         ; preds = %for.cond
  %8 = bitcast %struct._object** %tmp to i8*, !dbg !7627
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !7627
  call void @llvm.dbg.declare(metadata %struct._object** %tmp, metadata !1085, metadata !1360), !dbg !7628
  %9 = load %struct._object*, %struct._object** %seq.addr, align 8, !dbg !7629, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !7630
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7630, !tbaa !1374
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 19, !dbg !7631
  %11 = load i64, i64* %tp_flags, align 8, !dbg !7631, !tbaa !1605
  %and = and i64 %11, 33554432, !dbg !7632
  %cmp3 = icmp ne i64 %and, 0, !dbg !7633
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !7634

cond.true:                                        ; preds = %for.body
  %12 = load i64, i64* %i, align 8, !dbg !7635, !tbaa !1503
  %13 = load %struct._object*, %struct._object** %seq.addr, align 8, !dbg !7637, !tbaa !1364
  %14 = bitcast %struct._object* %13 to %struct.PyListObject*, !dbg !7638
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %14, i32 0, i32 1, !dbg !7639
  %15 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !7639, !tbaa !1685
  %arrayidx = getelementptr %struct._object*, %struct._object** %15, i64 %12, !dbg !7640
  %16 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !7640, !tbaa !1364
  br label %cond.end, !dbg !7634

cond.false:                                       ; preds = %for.body
  %17 = load i64, i64* %i, align 8, !dbg !7641, !tbaa !1503
  %18 = load %struct._object*, %struct._object** %seq.addr, align 8, !dbg !7643, !tbaa !1364
  %19 = bitcast %struct._object* %18 to %struct.PyTupleObject*, !dbg !7644
  %ob_item4 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %19, i32 0, i32 1, !dbg !7645
  %arrayidx5 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item4, i32 0, i64 %17, !dbg !7646
  %20 = load %struct._object*, %struct._object** %arrayidx5, align 8, !dbg !7646, !tbaa !1364
  br label %cond.end, !dbg !7634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %16, %cond.true ], [ %20, %cond.false ], !dbg !7634
  store %struct._object* %cond, %struct._object** %tmp, align 8, !dbg !7647, !tbaa !1364
  %21 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7650, !tbaa !1364
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !7652
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !7652, !tbaa !1374
  %tp_flags7 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 19, !dbg !7653
  %23 = load i64, i64* %tp_flags7, align 8, !dbg !7653, !tbaa !1605
  %and8 = and i64 %23, 16777216, !dbg !7654
  %cmp9 = icmp ne i64 %and8, 0, !dbg !7655
  br i1 %cmp9, label %if.end.13, label %if.then.10, !dbg !7656

if.then.10:                                       ; preds = %cond.end
  %24 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7657, !tbaa !1364
  %25 = load i32, i32* %is_shape.addr, align 4, !dbg !7659, !tbaa !1844
  %tobool = icmp ne i32 %25, 0, !dbg !7659
  %cond11 = select i1 %tobool, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0), !dbg !7659
  %call12 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.107, i32 0, i32 0), i8* %cond11), !dbg !7660
  %26 = load i64*, i64** %dest, align 8, !dbg !7661, !tbaa !1364
  %27 = bitcast i64* %26 to i8*, !dbg !7661
  call void @PyMem_Free(i8* %27), !dbg !7662
  store i64* null, i64** %retval, !dbg !7663
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7663

if.end.13:                                        ; preds = %cond.end
  %28 = load %struct._object*, %struct._object** %tmp, align 8, !dbg !7664, !tbaa !1364
  %call14 = call i64 @PyLong_AsSsize_t(%struct._object* %28), !dbg !7665
  store i64 %call14, i64* %x, align 8, !dbg !7666, !tbaa !1503
  %call15 = call %struct._object* @PyErr_Occurred(), !dbg !7667
  %tobool16 = icmp ne %struct._object* %call15, null, !dbg !7667
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !7669

if.then.17:                                       ; preds = %if.end.13
  %29 = load i64*, i64** %dest, align 8, !dbg !7670, !tbaa !1364
  %30 = bitcast i64* %29 to i8*, !dbg !7670
  call void @PyMem_Free(i8* %30), !dbg !7672
  store i64* null, i64** %retval, !dbg !7673
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7673

if.end.18:                                        ; preds = %if.end.13
  %31 = load i32, i32* %is_shape.addr, align 4, !dbg !7674, !tbaa !1844
  %tobool19 = icmp ne i32 %31, 0, !dbg !7674
  br i1 %tobool19, label %land.lhs.true, label %if.end.23, !dbg !7676

land.lhs.true:                                    ; preds = %if.end.18
  %32 = load i64, i64* %x, align 8, !dbg !7677, !tbaa !1503
  %cmp20 = icmp slt i64 %32, 0, !dbg !7679
  br i1 %cmp20, label %if.then.21, label %if.end.23, !dbg !7680

if.then.21:                                       ; preds = %land.lhs.true
  %33 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7681, !tbaa !1364
  %call22 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %33, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.108, i32 0, i32 0)), !dbg !7683
  %34 = load i64*, i64** %dest, align 8, !dbg !7684, !tbaa !1364
  %35 = bitcast i64* %34 to i8*, !dbg !7684
  call void @PyMem_Free(i8* %35), !dbg !7685
  store i64* null, i64** %retval, !dbg !7686
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7686

if.end.23:                                        ; preds = %land.lhs.true, %if.end.18
  %36 = load i64, i64* %x, align 8, !dbg !7687, !tbaa !1503
  %37 = load i64, i64* %i, align 8, !dbg !7688, !tbaa !1503
  %38 = load i64*, i64** %dest, align 8, !dbg !7689, !tbaa !1364
  %arrayidx24 = getelementptr i64, i64* %38, i64 %37, !dbg !7689
  store i64 %36, i64* %arrayidx24, align 8, !dbg !7690, !tbaa !1503
  store i32 0, i32* %cleanup.dest.slot, !dbg !7691
  br label %cleanup, !dbg !7691

cleanup:                                          ; preds = %if.end.23, %if.then.21, %if.then.17, %if.then.10
  %39 = bitcast %struct._object** %tmp to i8*, !dbg !7692
  call void @llvm.lifetime.end(i64 8, i8* %39) #1, !dbg !7692
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !7693

for.inc:                                          ; preds = %cleanup.cont
  %40 = load i64, i64* %i, align 8, !dbg !7694, !tbaa !1503
  %inc = add i64 %40, 1, !dbg !7694
  store i64 %inc, i64* %i, align 8, !dbg !7694, !tbaa !1503
  br label %for.cond, !dbg !7695

for.end:                                          ; preds = %for.cond
  %41 = load i64*, i64** %dest, align 8, !dbg !7696, !tbaa !1364
  store i64* %41, i64** %retval, !dbg !7697
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.25, !dbg !7697

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.25

cleanup.25:                                       ; preds = %NewDefault, %for.end, %if.then
  %42 = bitcast i64* %i to i8*, !dbg !7698
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !7698
  %43 = bitcast i64* %x to i8*, !dbg !7698
  call void @llvm.lifetime.end(i64 8, i8* %43) #1, !dbg !7698
  %44 = bitcast i64** %dest to i8*, !dbg !7698
  call void @llvm.lifetime.end(i64 8, i8* %44) #1, !dbg !7698
  %45 = load i64*, i64** %retval, !dbg !7698
  ret i64* %45, !dbg !7698
}

; Function Attrs: nounwind uwtable
define internal i32 @verify_structure(i64 %len, i64 %itemsize, i64 %offset, i64* %shape, i64* %strides, i64 %ndim) #0 {
entry:
  %retval = alloca i32, align 4
  %len.addr = alloca i64, align 8
  %itemsize.addr = alloca i64, align 8
  %offset.addr = alloca i64, align 8
  %shape.addr = alloca i64*, align 8
  %strides.addr = alloca i64*, align 8
  %ndim.addr = alloca i64, align 8
  %imin = alloca i64, align 8
  %imax = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64 %len, i64* %len.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !1093, metadata !1360), !dbg !7699
  store i64 %itemsize, i64* %itemsize.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %itemsize.addr, metadata !1094, metadata !1360), !dbg !7700
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !1095, metadata !1360), !dbg !7701
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !1096, metadata !1360), !dbg !7702
  store i64* %strides, i64** %strides.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %strides.addr, metadata !1097, metadata !1360), !dbg !7703
  store i64 %ndim, i64* %ndim.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %ndim.addr, metadata !1098, metadata !1360), !dbg !7704
  %0 = bitcast i64* %imin to i8*, !dbg !7705
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7705
  call void @llvm.dbg.declare(metadata i64* %imin, metadata !1099, metadata !1360), !dbg !7706
  %1 = bitcast i64* %imax to i8*, !dbg !7705
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !7705
  call void @llvm.dbg.declare(metadata i64* %imax, metadata !1100, metadata !1360), !dbg !7707
  %2 = bitcast i64* %n to i8*, !dbg !7708
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7708
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1101, metadata !1360), !dbg !7709
  %3 = load i64, i64* %ndim.addr, align 8, !dbg !7710, !tbaa !1503
  %cmp = icmp eq i64 %3, 0, !dbg !7712
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7713

land.lhs.true:                                    ; preds = %entry
  %4 = load i64, i64* %offset.addr, align 8, !dbg !7714, !tbaa !1503
  %cmp1 = icmp slt i64 %4, 0, !dbg !7716
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !7717

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load i64, i64* %offset.addr, align 8, !dbg !7718, !tbaa !1503
  %6 = load i64, i64* %itemsize.addr, align 8, !dbg !7720, !tbaa !1503
  %add = add i64 %5, %6, !dbg !7721
  %7 = load i64, i64* %len.addr, align 8, !dbg !7722, !tbaa !1503
  %cmp2 = icmp sgt i64 %add, %7, !dbg !7723
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7724

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %invalid_combination, !dbg !7725

if.end:                                           ; preds = %lor.lhs.false, %entry
  store i64 0, i64* %n, align 8, !dbg !7726, !tbaa !1503
  br label %for.cond, !dbg !7728

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i64, i64* %n, align 8, !dbg !7729, !tbaa !1503
  %9 = load i64, i64* %ndim.addr, align 8, !dbg !7733, !tbaa !1503
  %cmp3 = icmp slt i64 %8, %9, !dbg !7734
  br i1 %cmp3, label %for.body, label %for.end, !dbg !7735

for.body:                                         ; preds = %for.cond
  %10 = load i64, i64* %n, align 8, !dbg !7736, !tbaa !1503
  %11 = load i64*, i64** %strides.addr, align 8, !dbg !7738, !tbaa !1364
  %arrayidx = getelementptr i64, i64* %11, i64 %10, !dbg !7738
  %12 = load i64, i64* %arrayidx, align 8, !dbg !7738, !tbaa !1503
  %13 = load i64, i64* %itemsize.addr, align 8, !dbg !7739, !tbaa !1503
  %rem = srem i64 %12, %13, !dbg !7740
  %tobool = icmp ne i64 %rem, 0, !dbg !7740
  br i1 %tobool, label %if.then.4, label %if.end.5, !dbg !7741

if.then.4:                                        ; preds = %for.body
  %14 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7742, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.109, i32 0, i32 0)), !dbg !7744
  store i32 -1, i32* %retval, !dbg !7745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7745

if.end.5:                                         ; preds = %for.body
  br label %for.inc, !dbg !7746

for.inc:                                          ; preds = %if.end.5
  %15 = load i64, i64* %n, align 8, !dbg !7748, !tbaa !1503
  %inc = add i64 %15, 1, !dbg !7748
  store i64 %inc, i64* %n, align 8, !dbg !7748, !tbaa !1503
  br label %for.cond, !dbg !7749

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %n, align 8, !dbg !7750, !tbaa !1503
  br label %for.cond.6, !dbg !7752

for.cond.6:                                       ; preds = %for.inc.13, %for.end
  %16 = load i64, i64* %n, align 8, !dbg !7753, !tbaa !1503
  %17 = load i64, i64* %ndim.addr, align 8, !dbg !7757, !tbaa !1503
  %cmp7 = icmp slt i64 %16, %17, !dbg !7758
  br i1 %cmp7, label %for.body.8, label %for.end.15, !dbg !7759

for.body.8:                                       ; preds = %for.cond.6
  %18 = load i64, i64* %n, align 8, !dbg !7760, !tbaa !1503
  %19 = load i64*, i64** %shape.addr, align 8, !dbg !7762, !tbaa !1364
  %arrayidx9 = getelementptr i64, i64* %19, i64 %18, !dbg !7762
  %20 = load i64, i64* %arrayidx9, align 8, !dbg !7762, !tbaa !1503
  %cmp10 = icmp eq i64 %20, 0, !dbg !7763
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !7764

if.then.11:                                       ; preds = %for.body.8
  store i32 0, i32* %retval, !dbg !7765
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7765

if.end.12:                                        ; preds = %for.body.8
  br label %for.inc.13, !dbg !7766

for.inc.13:                                       ; preds = %if.end.12
  %21 = load i64, i64* %n, align 8, !dbg !7768, !tbaa !1503
  %inc14 = add i64 %21, 1, !dbg !7768
  store i64 %inc14, i64* %n, align 8, !dbg !7768, !tbaa !1503
  br label %for.cond.6, !dbg !7769

for.end.15:                                       ; preds = %for.cond.6
  store i64 0, i64* %imax, align 8, !dbg !7770, !tbaa !1503
  store i64 0, i64* %imin, align 8, !dbg !7771, !tbaa !1503
  store i64 0, i64* %n, align 8, !dbg !7772, !tbaa !1503
  br label %for.cond.16, !dbg !7774

for.cond.16:                                      ; preds = %for.inc.31, %for.end.15
  %22 = load i64, i64* %n, align 8, !dbg !7775, !tbaa !1503
  %23 = load i64, i64* %ndim.addr, align 8, !dbg !7779, !tbaa !1503
  %cmp17 = icmp slt i64 %22, %23, !dbg !7780
  br i1 %cmp17, label %for.body.18, label %for.end.33, !dbg !7781

for.body.18:                                      ; preds = %for.cond.16
  %24 = load i64, i64* %n, align 8, !dbg !7782, !tbaa !1503
  %25 = load i64*, i64** %strides.addr, align 8, !dbg !7784, !tbaa !1364
  %arrayidx19 = getelementptr i64, i64* %25, i64 %24, !dbg !7784
  %26 = load i64, i64* %arrayidx19, align 8, !dbg !7784, !tbaa !1503
  %cmp20 = icmp sle i64 %26, 0, !dbg !7785
  br i1 %cmp20, label %if.then.21, label %if.else, !dbg !7786

if.then.21:                                       ; preds = %for.body.18
  %27 = load i64, i64* %n, align 8, !dbg !7787, !tbaa !1503
  %28 = load i64*, i64** %shape.addr, align 8, !dbg !7788, !tbaa !1364
  %arrayidx22 = getelementptr i64, i64* %28, i64 %27, !dbg !7788
  %29 = load i64, i64* %arrayidx22, align 8, !dbg !7788, !tbaa !1503
  %sub = sub i64 %29, 1, !dbg !7789
  %30 = load i64, i64* %n, align 8, !dbg !7790, !tbaa !1503
  %31 = load i64*, i64** %strides.addr, align 8, !dbg !7791, !tbaa !1364
  %arrayidx23 = getelementptr i64, i64* %31, i64 %30, !dbg !7791
  %32 = load i64, i64* %arrayidx23, align 8, !dbg !7791, !tbaa !1503
  %mul = mul i64 %sub, %32, !dbg !7792
  %33 = load i64, i64* %imin, align 8, !dbg !7793, !tbaa !1503
  %add24 = add i64 %33, %mul, !dbg !7793
  store i64 %add24, i64* %imin, align 8, !dbg !7793, !tbaa !1503
  br label %if.end.30, !dbg !7794

if.else:                                          ; preds = %for.body.18
  %34 = load i64, i64* %n, align 8, !dbg !7795, !tbaa !1503
  %35 = load i64*, i64** %shape.addr, align 8, !dbg !7796, !tbaa !1364
  %arrayidx25 = getelementptr i64, i64* %35, i64 %34, !dbg !7796
  %36 = load i64, i64* %arrayidx25, align 8, !dbg !7796, !tbaa !1503
  %sub26 = sub i64 %36, 1, !dbg !7797
  %37 = load i64, i64* %n, align 8, !dbg !7798, !tbaa !1503
  %38 = load i64*, i64** %strides.addr, align 8, !dbg !7799, !tbaa !1364
  %arrayidx27 = getelementptr i64, i64* %38, i64 %37, !dbg !7799
  %39 = load i64, i64* %arrayidx27, align 8, !dbg !7799, !tbaa !1503
  %mul28 = mul i64 %sub26, %39, !dbg !7800
  %40 = load i64, i64* %imax, align 8, !dbg !7801, !tbaa !1503
  %add29 = add i64 %40, %mul28, !dbg !7801
  store i64 %add29, i64* %imax, align 8, !dbg !7801, !tbaa !1503
  br label %if.end.30

if.end.30:                                        ; preds = %if.else, %if.then.21
  br label %for.inc.31, !dbg !7802

for.inc.31:                                       ; preds = %if.end.30
  %41 = load i64, i64* %n, align 8, !dbg !7803, !tbaa !1503
  %inc32 = add i64 %41, 1, !dbg !7803
  store i64 %inc32, i64* %n, align 8, !dbg !7803, !tbaa !1503
  br label %for.cond.16, !dbg !7804

for.end.33:                                       ; preds = %for.cond.16
  %42 = load i64, i64* %imin, align 8, !dbg !7805, !tbaa !1503
  %43 = load i64, i64* %offset.addr, align 8, !dbg !7807, !tbaa !1503
  %add34 = add i64 %42, %43, !dbg !7808
  %cmp35 = icmp slt i64 %add34, 0, !dbg !7809
  br i1 %cmp35, label %if.then.40, label %lor.lhs.false.36, !dbg !7810

lor.lhs.false.36:                                 ; preds = %for.end.33
  %44 = load i64, i64* %imax, align 8, !dbg !7811, !tbaa !1503
  %45 = load i64, i64* %offset.addr, align 8, !dbg !7813, !tbaa !1503
  %add37 = add i64 %44, %45, !dbg !7814
  %46 = load i64, i64* %itemsize.addr, align 8, !dbg !7815, !tbaa !1503
  %add38 = add i64 %add37, %46, !dbg !7816
  %47 = load i64, i64* %len.addr, align 8, !dbg !7817, !tbaa !1503
  %cmp39 = icmp sgt i64 %add38, %47, !dbg !7818
  br i1 %cmp39, label %if.then.40, label %if.end.41, !dbg !7819

if.then.40:                                       ; preds = %lor.lhs.false.36, %for.end.33
  br label %invalid_combination, !dbg !7820

if.end.41:                                        ; preds = %lor.lhs.false.36
  store i32 0, i32* %retval, !dbg !7821
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7821

invalid_combination:                              ; preds = %if.then.40, %if.then
  %48 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7822, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %48, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.110, i32 0, i32 0)), !dbg !7823
  store i32 -1, i32* %retval, !dbg !7824
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7824

cleanup:                                          ; preds = %invalid_combination, %if.end.41, %if.then.11, %if.then.4
  %49 = bitcast i64* %n to i8*, !dbg !7825
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !7825
  %50 = bitcast i64* %imax to i8*, !dbg !7825
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !7825
  %51 = bitcast i64* %imin to i8*, !dbg !7825
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !7825
  %52 = load i32, i32* %retval, !dbg !7825
  ret i32 %52, !dbg !7825
}

; Function Attrs: nounwind uwtable
define internal i32 @init_suboffsets(%struct.ndbuf* %ndbuf) #0 {
entry:
  %retval = alloca i32, align 4
  %ndbuf.addr = alloca %struct.ndbuf*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %start = alloca i64, align 8
  %step = alloca i64, align 8
  %imin = alloca i64, align 8
  %suboffset0 = alloca i64, align 8
  %addsize = alloca i64, align 8
  %n = alloca i64, align 8
  %data = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %x = alloca i64, align 8
  store %struct.ndbuf* %ndbuf, %struct.ndbuf** %ndbuf.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf.addr, metadata !1106, metadata !1360), !dbg !7826
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !7827
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !7827
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1107, metadata !1360), !dbg !7828
  %1 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7829, !tbaa !1364
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %1, i32 0, i32 7, !dbg !7830
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !7828, !tbaa !1364
  %2 = bitcast i64* %start to i8*, !dbg !7831
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !7831
  call void @llvm.dbg.declare(metadata i64* %start, metadata !1108, metadata !1360), !dbg !7832
  %3 = bitcast i64* %step to i8*, !dbg !7831
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !7831
  call void @llvm.dbg.declare(metadata i64* %step, metadata !1109, metadata !1360), !dbg !7833
  %4 = bitcast i64* %imin to i8*, !dbg !7834
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !7834
  call void @llvm.dbg.declare(metadata i64* %imin, metadata !1110, metadata !1360), !dbg !7835
  %5 = bitcast i64* %suboffset0 to i8*, !dbg !7834
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !7834
  call void @llvm.dbg.declare(metadata i64* %suboffset0, metadata !1111, metadata !1360), !dbg !7836
  %6 = bitcast i64* %addsize to i8*, !dbg !7837
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !7837
  call void @llvm.dbg.declare(metadata i64* %addsize, metadata !1112, metadata !1360), !dbg !7838
  %7 = bitcast i64* %n to i8*, !dbg !7839
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !7839
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1113, metadata !1360), !dbg !7840
  %8 = bitcast i8** %data to i8*, !dbg !7841
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !7841
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1114, metadata !1360), !dbg !7842
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7843, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 7, !dbg !7844
  %10 = load i64*, i64** %shape, align 8, !dbg !7844, !tbaa !1716
  %arrayidx = getelementptr i64, i64* %10, i64 0, !dbg !7843
  %11 = load i64, i64* %arrayidx, align 8, !dbg !7843, !tbaa !1503
  %mul = mul i64 %11, 8, !dbg !7845
  store i64 %mul, i64* %addsize, align 8, !dbg !7846, !tbaa !1503
  %12 = load i64, i64* %addsize, align 8, !dbg !7847, !tbaa !1503
  %add = add i64 %12, 7, !dbg !7848
  %div = sdiv i64 %add, 8, !dbg !7849
  %mul2 = mul i64 8, %div, !dbg !7850
  store i64 %mul2, i64* %addsize, align 8, !dbg !7851, !tbaa !1503
  %13 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7852, !tbaa !1364
  %len = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %13, i32 0, i32 2, !dbg !7853
  %14 = load i64, i64* %len, align 8, !dbg !7853, !tbaa !3290
  %15 = load i64, i64* %addsize, align 8, !dbg !7854, !tbaa !1503
  %add3 = add i64 %14, %15, !dbg !7855
  %call = call i8* @PyMem_Malloc(i64 %add3), !dbg !7856
  store i8* %call, i8** %data, align 8, !dbg !7857, !tbaa !1364
  %16 = load i8*, i8** %data, align 8, !dbg !7858, !tbaa !1364
  %cmp = icmp eq i8* %16, null, !dbg !7860
  br i1 %cmp, label %if.then, label %if.end, !dbg !7861

if.then:                                          ; preds = %entry
  %call4 = call %struct._object* @PyErr_NoMemory(), !dbg !7862
  store i32 -1, i32* %retval, !dbg !7864
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7864

if.end:                                           ; preds = %entry
  %17 = load i8*, i8** %data, align 8, !dbg !7865, !tbaa !1364
  %18 = load i64, i64* %addsize, align 8, !dbg !7866, !tbaa !1503
  %add.ptr = getelementptr i8, i8* %17, i64 %18, !dbg !7867
  %19 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7868, !tbaa !1364
  %data5 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %19, i32 0, i32 4, !dbg !7869
  %20 = load i8*, i8** %data5, align 8, !dbg !7869, !tbaa !2957
  %21 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7870, !tbaa !1364
  %len6 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %21, i32 0, i32 2, !dbg !7871
  %22 = load i64, i64* %len6, align 8, !dbg !7871, !tbaa !3290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %20, i64 %22, i32 1, i1 false), !dbg !7872
  %23 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7873, !tbaa !1364
  %data7 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %23, i32 0, i32 4, !dbg !7874
  %24 = load i8*, i8** %data7, align 8, !dbg !7874, !tbaa !2957
  call void @PyMem_Free(i8* %24), !dbg !7875
  %25 = load i8*, i8** %data, align 8, !dbg !7876, !tbaa !1364
  %26 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7877, !tbaa !1364
  %data8 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %26, i32 0, i32 4, !dbg !7878
  store i8* %25, i8** %data8, align 8, !dbg !7879, !tbaa !2957
  %27 = load i64, i64* %addsize, align 8, !dbg !7880, !tbaa !1503
  %28 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7881, !tbaa !1364
  %len9 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %28, i32 0, i32 2, !dbg !7882
  %29 = load i64, i64* %len9, align 8, !dbg !7883, !tbaa !3290
  %add10 = add i64 %29, %27, !dbg !7883
  store i64 %add10, i64* %len9, align 8, !dbg !7883, !tbaa !3290
  %30 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7884, !tbaa !1364
  %data11 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %30, i32 0, i32 4, !dbg !7885
  %31 = load i8*, i8** %data11, align 8, !dbg !7885, !tbaa !2957
  %32 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7886, !tbaa !1364
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %32, i32 0, i32 0, !dbg !7887
  store i8* %31, i8** %buf, align 8, !dbg !7888, !tbaa !2077
  store i64 0, i64* %suboffset0, align 8, !dbg !7889, !tbaa !1503
  store i64 0, i64* %imin, align 8, !dbg !7890, !tbaa !1503
  store i64 0, i64* %n, align 8, !dbg !7891, !tbaa !1503
  br label %for.cond, !dbg !7892

for.cond:                                         ; preds = %for.inc, %if.end
  %33 = load i64, i64* %n, align 8, !dbg !7893, !tbaa !1503
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7896, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 5, !dbg !7897
  %35 = load i32, i32* %ndim, align 4, !dbg !7897, !tbaa !1629
  %conv = sext i32 %35 to i64, !dbg !7896
  %cmp12 = icmp slt i64 %33, %conv, !dbg !7898
  br i1 %cmp12, label %for.body, label %for.end, !dbg !7899

for.body:                                         ; preds = %for.cond
  %36 = load i64, i64* %n, align 8, !dbg !7900, !tbaa !1503
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7902, !tbaa !1364
  %shape14 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 7, !dbg !7903
  %38 = load i64*, i64** %shape14, align 8, !dbg !7903, !tbaa !1716
  %arrayidx15 = getelementptr i64, i64* %38, i64 %36, !dbg !7902
  %39 = load i64, i64* %arrayidx15, align 8, !dbg !7902, !tbaa !1503
  %cmp16 = icmp eq i64 %39, 0, !dbg !7904
  br i1 %cmp16, label %if.then.18, label %if.end.19, !dbg !7905

if.then.18:                                       ; preds = %for.body
  br label %for.end, !dbg !7906

if.end.19:                                        ; preds = %for.body
  %40 = load i64, i64* %n, align 8, !dbg !7907, !tbaa !1503
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7908, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 8, !dbg !7909
  %42 = load i64*, i64** %strides, align 8, !dbg !7909, !tbaa !2024
  %arrayidx20 = getelementptr i64, i64* %42, i64 %40, !dbg !7908
  %43 = load i64, i64* %arrayidx20, align 8, !dbg !7908, !tbaa !1503
  %cmp21 = icmp sle i64 %43, 0, !dbg !7910
  br i1 %cmp21, label %if.then.23, label %if.end.34, !dbg !7911

if.then.23:                                       ; preds = %if.end.19
  %44 = bitcast i64* %x to i8*, !dbg !7912
  call void @llvm.lifetime.start(i64 8, i8* %44) #1, !dbg !7912
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1115, metadata !1360), !dbg !7913
  %45 = load i64, i64* %n, align 8, !dbg !7914, !tbaa !1503
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7915, !tbaa !1364
  %shape24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 7, !dbg !7916
  %47 = load i64*, i64** %shape24, align 8, !dbg !7916, !tbaa !1716
  %arrayidx25 = getelementptr i64, i64* %47, i64 %45, !dbg !7915
  %48 = load i64, i64* %arrayidx25, align 8, !dbg !7915, !tbaa !1503
  %sub = sub i64 %48, 1, !dbg !7917
  %49 = load i64, i64* %n, align 8, !dbg !7918, !tbaa !1503
  %50 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7919, !tbaa !1364
  %strides26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %50, i32 0, i32 8, !dbg !7920
  %51 = load i64*, i64** %strides26, align 8, !dbg !7920, !tbaa !2024
  %arrayidx27 = getelementptr i64, i64* %51, i64 %49, !dbg !7919
  %52 = load i64, i64* %arrayidx27, align 8, !dbg !7919, !tbaa !1503
  %mul28 = mul i64 %sub, %52, !dbg !7921
  store i64 %mul28, i64* %x, align 8, !dbg !7913, !tbaa !1503
  %53 = load i64, i64* %x, align 8, !dbg !7922, !tbaa !1503
  %54 = load i64, i64* %imin, align 8, !dbg !7923, !tbaa !1503
  %add29 = add i64 %54, %53, !dbg !7923
  store i64 %add29, i64* %imin, align 8, !dbg !7923, !tbaa !1503
  %55 = load i64, i64* %n, align 8, !dbg !7924, !tbaa !1503
  %cmp30 = icmp sge i64 %55, 1, !dbg !7925
  br i1 %cmp30, label %cond.true, label %cond.false, !dbg !7926

cond.true:                                        ; preds = %if.then.23
  %56 = load i64, i64* %x, align 8, !dbg !7927, !tbaa !1503
  %sub32 = sub i64 0, %56, !dbg !7929
  br label %cond.end, !dbg !7926

cond.false:                                       ; preds = %if.then.23
  br label %cond.end, !dbg !7930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub32, %cond.true ], [ 0, %cond.false ], !dbg !7926
  %57 = load i64, i64* %suboffset0, align 8, !dbg !7932, !tbaa !1503
  %add33 = add i64 %57, %cond, !dbg !7932
  store i64 %add33, i64* %suboffset0, align 8, !dbg !7932, !tbaa !1503
  %58 = bitcast i64* %x to i8*, !dbg !7935
  call void @llvm.lifetime.end(i64 8, i8* %58) #1, !dbg !7935
  br label %if.end.34, !dbg !7936

if.end.34:                                        ; preds = %cond.end, %if.end.19
  br label %for.inc, !dbg !7937

for.inc:                                          ; preds = %if.end.34
  %59 = load i64, i64* %n, align 8, !dbg !7938, !tbaa !1503
  %inc = add i64 %59, 1, !dbg !7938
  store i64 %inc, i64* %n, align 8, !dbg !7938, !tbaa !1503
  br label %for.cond, !dbg !7939

for.end:                                          ; preds = %if.then.18, %for.cond
  %60 = load i64, i64* %addsize, align 8, !dbg !7940, !tbaa !1503
  %61 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !7941, !tbaa !1364
  %offset = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %61, i32 0, i32 3, !dbg !7942
  %62 = load i64, i64* %offset, align 8, !dbg !7942, !tbaa !3295
  %add35 = add i64 %60, %62, !dbg !7943
  %63 = load i64, i64* %imin, align 8, !dbg !7944, !tbaa !1503
  %add36 = add i64 %add35, %63, !dbg !7945
  store i64 %add36, i64* %start, align 8, !dbg !7946, !tbaa !1503
  %64 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7947, !tbaa !1364
  %strides37 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %64, i32 0, i32 8, !dbg !7948
  %65 = load i64*, i64** %strides37, align 8, !dbg !7948, !tbaa !2024
  %arrayidx38 = getelementptr i64, i64* %65, i64 0, !dbg !7947
  %66 = load i64, i64* %arrayidx38, align 8, !dbg !7947, !tbaa !1503
  %cmp39 = icmp slt i64 %66, 0, !dbg !7949
  br i1 %cmp39, label %cond.true.41, label %cond.false.45, !dbg !7947

cond.true.41:                                     ; preds = %for.end
  %67 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7950, !tbaa !1364
  %strides42 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %67, i32 0, i32 8, !dbg !7952
  %68 = load i64*, i64** %strides42, align 8, !dbg !7952, !tbaa !2024
  %arrayidx43 = getelementptr i64, i64* %68, i64 0, !dbg !7953
  %69 = load i64, i64* %arrayidx43, align 8, !dbg !7953, !tbaa !1503
  %sub44 = sub i64 0, %69, !dbg !7954
  br label %cond.end.48, !dbg !7947

cond.false.45:                                    ; preds = %for.end
  %70 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7955, !tbaa !1364
  %strides46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %70, i32 0, i32 8, !dbg !7957
  %71 = load i64*, i64** %strides46, align 8, !dbg !7957, !tbaa !2024
  %arrayidx47 = getelementptr i64, i64* %71, i64 0, !dbg !7958
  %72 = load i64, i64* %arrayidx47, align 8, !dbg !7958, !tbaa !1503
  br label %cond.end.48, !dbg !7947

cond.end.48:                                      ; preds = %cond.false.45, %cond.true.41
  %cond49 = phi i64 [ %sub44, %cond.true.41 ], [ %72, %cond.false.45 ], !dbg !7947
  store i64 %cond49, i64* %step, align 8, !dbg !7959, !tbaa !1503
  store i64 0, i64* %n, align 8, !dbg !7962, !tbaa !1503
  br label %for.cond.50, !dbg !7964

for.cond.50:                                      ; preds = %for.inc.62, %cond.end.48
  %73 = load i64, i64* %n, align 8, !dbg !7965, !tbaa !1503
  %74 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7969, !tbaa !1364
  %shape51 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %74, i32 0, i32 7, !dbg !7970
  %75 = load i64*, i64** %shape51, align 8, !dbg !7970, !tbaa !1716
  %arrayidx52 = getelementptr i64, i64* %75, i64 0, !dbg !7969
  %76 = load i64, i64* %arrayidx52, align 8, !dbg !7969, !tbaa !1503
  %cmp53 = icmp slt i64 %73, %76, !dbg !7971
  br i1 %cmp53, label %for.body.55, label %for.end.64, !dbg !7972

for.body.55:                                      ; preds = %for.cond.50
  %77 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7973, !tbaa !1364
  %buf56 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %77, i32 0, i32 0, !dbg !7974
  %78 = load i8*, i8** %buf56, align 8, !dbg !7974, !tbaa !2077
  %79 = load i64, i64* %start, align 8, !dbg !7975, !tbaa !1503
  %add.ptr57 = getelementptr i8, i8* %78, i64 %79, !dbg !7976
  %80 = load i64, i64* %n, align 8, !dbg !7977, !tbaa !1503
  %81 = load i64, i64* %step, align 8, !dbg !7978, !tbaa !1503
  %mul58 = mul i64 %80, %81, !dbg !7979
  %add.ptr59 = getelementptr i8, i8* %add.ptr57, i64 %mul58, !dbg !7980
  %82 = load i64, i64* %n, align 8, !dbg !7981, !tbaa !1503
  %83 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7982, !tbaa !1364
  %buf60 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %83, i32 0, i32 0, !dbg !7983
  %84 = load i8*, i8** %buf60, align 8, !dbg !7983, !tbaa !2077
  %85 = bitcast i8* %84 to i8**, !dbg !7984
  %arrayidx61 = getelementptr i8*, i8** %85, i64 %82, !dbg !7985
  store i8* %add.ptr59, i8** %arrayidx61, align 8, !dbg !7986, !tbaa !1364
  br label %for.inc.62, !dbg !7985

for.inc.62:                                       ; preds = %for.body.55
  %86 = load i64, i64* %n, align 8, !dbg !7987, !tbaa !1503
  %inc63 = add i64 %86, 1, !dbg !7987
  store i64 %inc63, i64* %n, align 8, !dbg !7987, !tbaa !1503
  br label %for.cond.50, !dbg !7988

for.end.64:                                       ; preds = %for.cond.50
  %87 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7989, !tbaa !1364
  %ndim65 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %87, i32 0, i32 5, !dbg !7990
  %88 = load i32, i32* %ndim65, align 4, !dbg !7990, !tbaa !1629
  %conv66 = sext i32 %88 to i64, !dbg !7989
  %mul67 = mul i64 %conv66, 8, !dbg !7991
  %call68 = call i8* @PyMem_Malloc(i64 %mul67), !dbg !7992
  %89 = bitcast i8* %call68 to i64*, !dbg !7992
  %90 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7993, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %90, i32 0, i32 9, !dbg !7994
  store i64* %89, i64** %suboffsets, align 8, !dbg !7995, !tbaa !2033
  %91 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !7996, !tbaa !1364
  %suboffsets69 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %91, i32 0, i32 9, !dbg !7998
  %92 = load i64*, i64** %suboffsets69, align 8, !dbg !7998, !tbaa !2033
  %cmp70 = icmp eq i64* %92, null, !dbg !7999
  br i1 %cmp70, label %if.then.72, label %if.end.74, !dbg !8000

if.then.72:                                       ; preds = %for.end.64
  %call73 = call %struct._object* @PyErr_NoMemory(), !dbg !8001
  store i32 -1, i32* %retval, !dbg !8003
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8003

if.end.74:                                        ; preds = %for.end.64
  %93 = load i64, i64* %suboffset0, align 8, !dbg !8004, !tbaa !1503
  %94 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8005, !tbaa !1364
  %suboffsets75 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %94, i32 0, i32 9, !dbg !8006
  %95 = load i64*, i64** %suboffsets75, align 8, !dbg !8006, !tbaa !2033
  %arrayidx76 = getelementptr i64, i64* %95, i64 0, !dbg !8005
  store i64 %93, i64* %arrayidx76, align 8, !dbg !8007, !tbaa !1503
  store i64 1, i64* %n, align 8, !dbg !8008, !tbaa !1503
  br label %for.cond.77, !dbg !8010

for.cond.77:                                      ; preds = %for.inc.85, %if.end.74
  %96 = load i64, i64* %n, align 8, !dbg !8011, !tbaa !1503
  %97 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8015, !tbaa !1364
  %ndim78 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %97, i32 0, i32 5, !dbg !8016
  %98 = load i32, i32* %ndim78, align 4, !dbg !8016, !tbaa !1629
  %conv79 = sext i32 %98 to i64, !dbg !8015
  %cmp80 = icmp slt i64 %96, %conv79, !dbg !8017
  br i1 %cmp80, label %for.body.82, label %for.end.87, !dbg !8018

for.body.82:                                      ; preds = %for.cond.77
  %99 = load i64, i64* %n, align 8, !dbg !8019, !tbaa !1503
  %100 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8020, !tbaa !1364
  %suboffsets83 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %100, i32 0, i32 9, !dbg !8021
  %101 = load i64*, i64** %suboffsets83, align 8, !dbg !8021, !tbaa !2033
  %arrayidx84 = getelementptr i64, i64* %101, i64 %99, !dbg !8020
  store i64 -1, i64* %arrayidx84, align 8, !dbg !8022, !tbaa !1503
  br label %for.inc.85, !dbg !8020

for.inc.85:                                       ; preds = %for.body.82
  %102 = load i64, i64* %n, align 8, !dbg !8023, !tbaa !1503
  %inc86 = add i64 %102, 1, !dbg !8023
  store i64 %inc86, i64* %n, align 8, !dbg !8023, !tbaa !1503
  br label %for.cond.77, !dbg !8024

for.end.87:                                       ; preds = %for.cond.77
  %103 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8025, !tbaa !1364
  %strides88 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %103, i32 0, i32 8, !dbg !8027
  %104 = load i64*, i64** %strides88, align 8, !dbg !8027, !tbaa !2024
  %arrayidx89 = getelementptr i64, i64* %104, i64 0, !dbg !8025
  %105 = load i64, i64* %arrayidx89, align 8, !dbg !8025, !tbaa !1503
  %cmp90 = icmp sge i64 %105, 0, !dbg !8028
  br i1 %cmp90, label %if.then.92, label %if.else, !dbg !8029

if.then.92:                                       ; preds = %for.end.87
  %106 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8030, !tbaa !1364
  %strides93 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %106, i32 0, i32 8, !dbg !8032
  %107 = load i64*, i64** %strides93, align 8, !dbg !8032, !tbaa !2024
  %arrayidx94 = getelementptr i64, i64* %107, i64 0, !dbg !8030
  store i64 8, i64* %arrayidx94, align 8, !dbg !8033, !tbaa !1503
  br label %if.end.110, !dbg !8034

if.else:                                          ; preds = %for.end.87
  %108 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8035, !tbaa !1364
  %strides95 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %108, i32 0, i32 8, !dbg !8037
  %109 = load i64*, i64** %strides95, align 8, !dbg !8037, !tbaa !2024
  %arrayidx96 = getelementptr i64, i64* %109, i64 0, !dbg !8035
  store i64 -8, i64* %arrayidx96, align 8, !dbg !8038, !tbaa !1503
  %110 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8039, !tbaa !1364
  %shape97 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %110, i32 0, i32 7, !dbg !8041
  %111 = load i64*, i64** %shape97, align 8, !dbg !8041, !tbaa !1716
  %arrayidx98 = getelementptr i64, i64* %111, i64 0, !dbg !8039
  %112 = load i64, i64* %arrayidx98, align 8, !dbg !8039, !tbaa !1503
  %cmp99 = icmp sgt i64 %112, 0, !dbg !8042
  br i1 %cmp99, label %if.then.101, label %if.end.109, !dbg !8043

if.then.101:                                      ; preds = %if.else
  %113 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8044, !tbaa !1364
  %buf102 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %113, i32 0, i32 0, !dbg !8045
  %114 = load i8*, i8** %buf102, align 8, !dbg !8045, !tbaa !2077
  %115 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8046, !tbaa !1364
  %shape103 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %115, i32 0, i32 7, !dbg !8047
  %116 = load i64*, i64** %shape103, align 8, !dbg !8047, !tbaa !1716
  %arrayidx104 = getelementptr i64, i64* %116, i64 0, !dbg !8046
  %117 = load i64, i64* %arrayidx104, align 8, !dbg !8046, !tbaa !1503
  %sub105 = sub i64 %117, 1, !dbg !8048
  %mul106 = mul i64 %sub105, 8, !dbg !8049
  %add.ptr107 = getelementptr i8, i8* %114, i64 %mul106, !dbg !8050
  %118 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8051, !tbaa !1364
  %buf108 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %118, i32 0, i32 0, !dbg !8052
  store i8* %add.ptr107, i8** %buf108, align 8, !dbg !8053, !tbaa !2077
  br label %if.end.109, !dbg !8051

if.end.109:                                       ; preds = %if.then.101, %if.else
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.then.92
  %119 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !8054, !tbaa !1364
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %119, i32 0, i32 5, !dbg !8055
  %120 = load i32, i32* %flags, align 4, !dbg !8056, !tbaa !2600
  %and = and i32 %120, -261, !dbg !8056
  store i32 %and, i32* %flags, align 4, !dbg !8056, !tbaa !2600
  %121 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf.addr, align 8, !dbg !8057, !tbaa !1364
  %offset111 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %121, i32 0, i32 3, !dbg !8058
  store i64 0, i64* %offset111, align 8, !dbg !8059, !tbaa !3295
  store i32 0, i32* %retval, !dbg !8060
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8060

cleanup:                                          ; preds = %if.end.110, %if.then.72, %if.then
  %122 = bitcast i8** %data to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !8061
  %123 = bitcast i64* %n to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !8061
  %124 = bitcast i64* %addsize to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %124) #1, !dbg !8061
  %125 = bitcast i64* %suboffset0 to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !8061
  %126 = bitcast i64* %imin to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %126) #1, !dbg !8061
  %127 = bitcast i64* %step to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %127) #1, !dbg !8061
  %128 = bitcast i64* %start to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %128) #1, !dbg !8061
  %129 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8061
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !8061
  %130 = load i32, i32* %retval, !dbg !8061
  ret i32 %130, !dbg !8061
}

declare i8* @PyMem_Realloc(i8*, i64) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_flags(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1149, metadata !1360), !dbg !8062
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1150, metadata !1360), !dbg !8063
  %0 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8064, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %0, i32 0, i32 3, !dbg !8065
  %1 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8065, !tbaa !2581
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %1, i32 0, i32 5, !dbg !8066
  %2 = load i32, i32* %flags, align 4, !dbg !8066, !tbaa !2600
  %conv = sext i32 %2 to i64, !dbg !8064
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !8067
  ret %struct._object* %call, !dbg !8068
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_offset(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %ndbuf = alloca %struct.ndbuf*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1153, metadata !1360), !dbg !8069
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1154, metadata !1360), !dbg !8070
  %0 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !8071
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8071
  call void @llvm.dbg.declare(metadata %struct.ndbuf** %ndbuf, metadata !1155, metadata !1360), !dbg !8072
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8073, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8074
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8074, !tbaa !2581
  store %struct.ndbuf* %2, %struct.ndbuf** %ndbuf, align 8, !dbg !8072, !tbaa !1364
  %3 = load %struct.ndbuf*, %struct.ndbuf** %ndbuf, align 8, !dbg !8075, !tbaa !1364
  %offset = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %3, i32 0, i32 3, !dbg !8076
  %4 = load i64, i64* %offset, align 8, !dbg !8076, !tbaa !3295
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !8077
  %5 = bitcast %struct.ndbuf** %ndbuf to i8*, !dbg !8078
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !8078
  ret %struct._object* %call, !dbg !8079
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_obj(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1158, metadata !1360), !dbg !8080
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1159, metadata !1360), !dbg !8081
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8082
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8082
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1160, metadata !1360), !dbg !8083
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8084, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8085
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8085, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8086
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8083, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8087, !tbaa !1364
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 1, !dbg !8089
  %4 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8089, !tbaa !2701
  %cmp = icmp eq %struct._object* %4, null, !dbg !8090
  br i1 %cmp, label %if.then, label %if.end, !dbg !8091

if.then:                                          ; preds = %entry
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8092, !tbaa !1378
  %inc = add i64 %5, 1, !dbg !8092
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8092, !tbaa !1378
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8094
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8094

if.end:                                           ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8095, !tbaa !1364
  %obj2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 1, !dbg !8096
  %7 = load %struct._object*, %struct._object** %obj2, align 8, !dbg !8096, !tbaa !2701
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !8097
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !8098, !tbaa !1378
  %inc3 = add i64 %8, 1, !dbg !8098
  store i64 %inc3, i64* %ob_refcnt, align 8, !dbg !8098, !tbaa !1378
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8099, !tbaa !1364
  %obj4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 1, !dbg !8100
  %10 = load %struct._object*, %struct._object** %obj4, align 8, !dbg !8100, !tbaa !2701
  store %struct._object* %10, %struct._object** %retval, !dbg !8101
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8101

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8102
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !8102
  %12 = load %struct._object*, %struct._object** %retval, !dbg !8102
  ret %struct._object* %12, !dbg !8102
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_nbytes(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1163, metadata !1360), !dbg !8103
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1164, metadata !1360), !dbg !8104
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8105
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8105
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1165, metadata !1360), !dbg !8106
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8107, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8108
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8108, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8109
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8106, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8110, !tbaa !1364
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !8111
  %4 = load i64, i64* %len, align 8, !dbg !8111, !tbaa !1860
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !8112
  %5 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8113
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !8113
  ret %struct._object* %call, !dbg !8114
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_readonly(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1168, metadata !1360), !dbg !8115
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1169, metadata !1360), !dbg !8116
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8117
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8117
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1170, metadata !1360), !dbg !8118
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8119, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8120
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8120, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8121
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8118, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8122, !tbaa !1364
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 4, !dbg !8123
  %4 = load i32, i32* %readonly, align 4, !dbg !8123, !tbaa !2692
  %conv = sext i32 %4 to i64, !dbg !8122
  %call = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !8124
  %5 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8125
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !8125
  ret %struct._object* %call, !dbg !8126
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_itemsize(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1173, metadata !1360), !dbg !8127
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1174, metadata !1360), !dbg !8128
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8129
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8129
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1175, metadata !1360), !dbg !8130
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8131, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8132
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8132, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8133
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8130, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8134, !tbaa !1364
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 3, !dbg !8135
  %4 = load i64, i64* %itemsize, align 8, !dbg !8135, !tbaa !1739
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !8136
  %5 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8137
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !8137
  ret %struct._object* %call, !dbg !8138
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_format(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  %fmt = alloca i8*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1178, metadata !1360), !dbg !8139
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1179, metadata !1360), !dbg !8140
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8141
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8141
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1180, metadata !1360), !dbg !8142
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8143, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8144
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8144, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8145
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8142, !tbaa !1364
  %3 = bitcast i8** %fmt to i8*, !dbg !8146
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8146
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1181, metadata !1360), !dbg !8147
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8148, !tbaa !1364
  %format = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 6, !dbg !8149
  %5 = load i8*, i8** %format, align 8, !dbg !8149, !tbaa !1737
  %tobool = icmp ne i8* %5, null, !dbg !8148
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8148

cond.true:                                        ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8150, !tbaa !1364
  %format2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 6, !dbg !8152
  %7 = load i8*, i8** %format2, align 8, !dbg !8152, !tbaa !1737
  br label %cond.end, !dbg !8148

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.93, i32 0, i32 0), %cond.false ], !dbg !8148
  store i8* %cond, i8** %fmt, align 8, !dbg !8155, !tbaa !1364
  %8 = load i8*, i8** %fmt, align 8, !dbg !8158, !tbaa !1364
  %call = call %struct._object* @PyUnicode_FromString(i8* %8), !dbg !8159
  %9 = bitcast i8** %fmt to i8*, !dbg !8160
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !8160
  %10 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8160
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !8160
  ret %struct._object* %call, !dbg !8161
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_ndim(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1184, metadata !1360), !dbg !8162
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1185, metadata !1360), !dbg !8163
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8164
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8164
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1186, metadata !1360), !dbg !8165
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8166, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8167
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8167, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8168
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8165, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8169, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 5, !dbg !8170
  %4 = load i32, i32* %ndim, align 4, !dbg !8170, !tbaa !1629
  %conv = sext i32 %4 to i64, !dbg !8169
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %conv), !dbg !8171
  %5 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8172
  call void @llvm.lifetime.end(i64 8, i8* %5) #1, !dbg !8172
  ret %struct._object* %call, !dbg !8173
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_shape(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1189, metadata !1360), !dbg !8174
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1190, metadata !1360), !dbg !8175
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8176
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8176
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1191, metadata !1360), !dbg !8177
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8178, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8179
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8179, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8180
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8177, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8181, !tbaa !1364
  %shape = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 7, !dbg !8182
  %4 = load i64*, i64** %shape, align 8, !dbg !8182, !tbaa !1716
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8183, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !8184
  %6 = load i32, i32* %ndim, align 4, !dbg !8184, !tbaa !1629
  %conv = sext i32 %6 to i64, !dbg !8183
  %call = call %struct._object* @ssize_array_as_tuple(i64* %4, i64 %conv), !dbg !8185
  %7 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8186
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !8186
  ret %struct._object* %call, !dbg !8187
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_strides(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1210, metadata !1360), !dbg !8188
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1211, metadata !1360), !dbg !8189
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8190
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8190
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1212, metadata !1360), !dbg !8191
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8192, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8193
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8193, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8194
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8191, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8195, !tbaa !1364
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 8, !dbg !8196
  %4 = load i64*, i64** %strides, align 8, !dbg !8196, !tbaa !2024
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8197, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !8198
  %6 = load i32, i32* %ndim, align 4, !dbg !8198, !tbaa !1629
  %conv = sext i32 %6 to i64, !dbg !8197
  %call = call %struct._object* @ssize_array_as_tuple(i64* %4, i64 %conv), !dbg !8199
  %7 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8200
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !8200
  ret %struct._object* %call, !dbg !8201
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_get_suboffsets(%struct.NDArrayObject* %self, i8* %closure) #0 {
entry:
  %self.addr = alloca %struct.NDArrayObject*, align 8
  %closure.addr = alloca i8*, align 8
  %base = alloca %struct.bufferinfo*, align 8
  store %struct.NDArrayObject* %self, %struct.NDArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %self.addr, metadata !1215, metadata !1360), !dbg !8202
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !1216, metadata !1360), !dbg !8203
  %0 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8204
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8204
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %base, metadata !1217, metadata !1360), !dbg !8205
  %1 = load %struct.NDArrayObject*, %struct.NDArrayObject** %self.addr, align 8, !dbg !8206, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %1, i32 0, i32 3, !dbg !8207
  %2 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8207, !tbaa !2581
  %base1 = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %2, i32 0, i32 7, !dbg !8208
  store %struct.bufferinfo* %base1, %struct.bufferinfo** %base, align 8, !dbg !8205, !tbaa !1364
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8209, !tbaa !1364
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 9, !dbg !8210
  %4 = load i64*, i64** %suboffsets, align 8, !dbg !8210, !tbaa !2033
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %base, align 8, !dbg !8211, !tbaa !1364
  %ndim = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 5, !dbg !8212
  %6 = load i32, i32* %ndim, align 4, !dbg !8212, !tbaa !1629
  %conv = sext i32 %6 to i64, !dbg !8211
  %call = call %struct._object* @ssize_array_as_tuple(i64* %4, i64 %conv), !dbg !8213
  %7 = bitcast %struct.bufferinfo** %base to i8*, !dbg !8214
  call void @llvm.lifetime.end(i64 8, i8* %7) #1, !dbg !8214
  ret %struct._object* %call, !dbg !8215
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_c_contig(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1220, metadata !1360), !dbg !8216
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1221, metadata !1360), !dbg !8217
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !8218
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8218
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1222, metadata !1360), !dbg !8219
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8220, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !8221
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !8219, !tbaa !1364
  %3 = bitcast i32* %ret to i8*, !dbg !8222
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !8222
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1223, metadata !1360), !dbg !8223
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !8224, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 3, !dbg !8225
  %5 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8225, !tbaa !2581
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 7, !dbg !8226
  %call = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %base, i8 signext 67), !dbg !8227
  store i32 %call, i32* %ret, align 4, !dbg !8223, !tbaa !1844
  %6 = load i32, i32* %ret, align 4, !dbg !8228, !tbaa !1844
  %7 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !8230, !tbaa !1364
  %head1 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %7, i32 0, i32 3, !dbg !8231
  %8 = load %struct.ndbuf*, %struct.ndbuf** %head1, align 8, !dbg !8231, !tbaa !2581
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %8, i32 0, i32 5, !dbg !8232
  %9 = load i32, i32* %flags, align 4, !dbg !8232, !tbaa !2600
  %and = and i32 %9, 264, !dbg !8233
  %tobool = icmp ne i32 %and, 0, !dbg !8234
  %lnot = xor i1 %tobool, true, !dbg !8234
  %lnot2 = xor i1 %lnot, true, !dbg !8235
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8235
  %cmp = icmp ne i32 %6, %lnot.ext, !dbg !8236
  br i1 %cmp, label %if.then, label %if.end, !dbg !8237

if.then:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8238, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.126, i32 0, i32 0)), !dbg !8240
  store %struct._object* null, %struct._object** %retval, !dbg !8241
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8241

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !8242, !tbaa !1844
  %conv = sext i32 %11 to i64, !dbg !8242
  %call3 = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !8243
  store %struct._object* %call3, %struct._object** %retval, !dbg !8244
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8244

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %ret to i8*, !dbg !8245
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !8245
  %13 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !8245
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !8245
  %14 = load %struct._object*, %struct._object** %retval, !dbg !8245
  ret %struct._object* %14, !dbg !8245
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_fortran_contig(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1226, metadata !1360), !dbg !8246
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1227, metadata !1360), !dbg !8247
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !8248
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8248
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1228, metadata !1360), !dbg !8249
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8250, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !8251
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !8249, !tbaa !1364
  %3 = bitcast i32* %ret to i8*, !dbg !8252
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !8252
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1229, metadata !1360), !dbg !8253
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !8254, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 3, !dbg !8255
  %5 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8255, !tbaa !2581
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 7, !dbg !8256
  %call = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %base, i8 signext 70), !dbg !8257
  store i32 %call, i32* %ret, align 4, !dbg !8253, !tbaa !1844
  %6 = load i32, i32* %ret, align 4, !dbg !8258, !tbaa !1844
  %7 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !8260, !tbaa !1364
  %head1 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %7, i32 0, i32 3, !dbg !8261
  %8 = load %struct.ndbuf*, %struct.ndbuf** %head1, align 8, !dbg !8261, !tbaa !2581
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %8, i32 0, i32 5, !dbg !8262
  %9 = load i32, i32* %flags, align 4, !dbg !8262, !tbaa !2600
  %and = and i32 %9, 12, !dbg !8263
  %tobool = icmp ne i32 %and, 0, !dbg !8264
  %lnot = xor i1 %tobool, true, !dbg !8264
  %lnot2 = xor i1 %lnot, true, !dbg !8265
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8265
  %cmp = icmp ne i32 %6, %lnot.ext, !dbg !8266
  br i1 %cmp, label %if.then, label %if.end, !dbg !8267

if.then:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8268, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.126, i32 0, i32 0)), !dbg !8270
  store %struct._object* null, %struct._object** %retval, !dbg !8271
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8271

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !8272, !tbaa !1844
  %conv = sext i32 %11 to i64, !dbg !8272
  %call3 = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !8273
  store %struct._object* %call3, %struct._object** %retval, !dbg !8274
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8274

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %ret to i8*, !dbg !8275
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !8275
  %13 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !8275
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !8275
  %14 = load %struct._object*, %struct._object** %retval, !dbg !8275
  ret %struct._object* %14, !dbg !8275
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ndarray_contig(%struct._object* %self, %struct._object* %dummy) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %dummy.addr = alloca %struct._object*, align 8
  %nd = alloca %struct.NDArrayObject*, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1232, metadata !1360), !dbg !8276
  store %struct._object* %dummy, %struct._object** %dummy.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %dummy.addr, metadata !1233, metadata !1360), !dbg !8277
  %0 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !8278
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8278
  call void @llvm.dbg.declare(metadata %struct.NDArrayObject** %nd, metadata !1234, metadata !1360), !dbg !8279
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8280, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.NDArrayObject*, !dbg !8281
  store %struct.NDArrayObject* %2, %struct.NDArrayObject** %nd, align 8, !dbg !8279, !tbaa !1364
  %3 = bitcast i32* %ret to i8*, !dbg !8282
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !8282
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1235, metadata !1360), !dbg !8283
  %4 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !8284, !tbaa !1364
  %head = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %4, i32 0, i32 3, !dbg !8285
  %5 = load %struct.ndbuf*, %struct.ndbuf** %head, align 8, !dbg !8285, !tbaa !2581
  %base = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %5, i32 0, i32 7, !dbg !8286
  %call = call i32 @PyBuffer_IsContiguous(%struct.bufferinfo* %base, i8 signext 65), !dbg !8287
  store i32 %call, i32* %ret, align 4, !dbg !8283, !tbaa !1844
  %6 = load i32, i32* %ret, align 4, !dbg !8288, !tbaa !1844
  %7 = load %struct.NDArrayObject*, %struct.NDArrayObject** %nd, align 8, !dbg !8290, !tbaa !1364
  %head1 = getelementptr inbounds %struct.NDArrayObject, %struct.NDArrayObject* %7, i32 0, i32 3, !dbg !8291
  %8 = load %struct.ndbuf*, %struct.ndbuf** %head1, align 8, !dbg !8291, !tbaa !2581
  %flags = getelementptr inbounds %struct.ndbuf, %struct.ndbuf* %8, i32 0, i32 5, !dbg !8292
  %9 = load i32, i32* %flags, align 4, !dbg !8292, !tbaa !2600
  %and = and i32 %9, 268, !dbg !8293
  %tobool = icmp ne i32 %and, 0, !dbg !8294
  %lnot = xor i1 %tobool, true, !dbg !8294
  %lnot2 = xor i1 %lnot, true, !dbg !8295
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8295
  %cmp = icmp ne i32 %6, %lnot.ext, !dbg !8296
  br i1 %cmp, label %if.then, label %if.end, !dbg !8297

if.then:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8298, !tbaa !1364
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.126, i32 0, i32 0)), !dbg !8300
  store %struct._object* null, %struct._object** %retval, !dbg !8301
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8301

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !8302, !tbaa !1844
  %conv = sext i32 %11 to i64, !dbg !8302
  %call3 = call %struct._object* @PyBool_FromLong(i64 %conv), !dbg !8303
  store %struct._object* %call3, %struct._object** %retval, !dbg !8304
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8304

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %ret to i8*, !dbg !8305
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !8305
  %13 = bitcast %struct.NDArrayObject** %nd to i8*, !dbg !8305
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !8305
  %14 = load %struct._object*, %struct._object** %retval, !dbg !8305
  ret %struct._object* %14, !dbg !8305
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @ssize_array_as_tuple(i64* %array, i64 %len) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %array.addr = alloca i64*, align 8
  %len.addr = alloca i64, align 8
  %tuple = alloca %struct._object*, align 8
  %x = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i64* %array, i64** %array.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata i64** %array.addr, metadata !1196, metadata !1360), !dbg !8306
  store i64 %len, i64* %len.addr, align 8, !tbaa !1503
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !1197, metadata !1360), !dbg !8307
  %0 = bitcast %struct._object** %tuple to i8*, !dbg !8308
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8308
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !1198, metadata !1360), !dbg !8309
  %1 = bitcast %struct._object** %x to i8*, !dbg !8308
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !8308
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !1199, metadata !1360), !dbg !8310
  %2 = bitcast i64* %i to i8*, !dbg !8311
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !8311
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1200, metadata !1360), !dbg !8312
  %3 = load i64*, i64** %array.addr, align 8, !dbg !8313, !tbaa !1364
  %cmp = icmp eq i64* %3, null, !dbg !8315
  br i1 %cmp, label %if.then, label %if.end, !dbg !8316

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyTuple_New(i64 0), !dbg !8317
  store %struct._object* %call, %struct._object** %retval, !dbg !8318
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8318

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %len.addr, align 8, !dbg !8319, !tbaa !1503
  %call1 = call %struct._object* @PyTuple_New(i64 %4), !dbg !8320
  store %struct._object* %call1, %struct._object** %tuple, align 8, !dbg !8321, !tbaa !1364
  %5 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !8322, !tbaa !1364
  %cmp2 = icmp eq %struct._object* %5, null, !dbg !8324
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !8325

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8326
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8326

if.end.4:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !8327, !tbaa !1503
  br label %for.cond, !dbg !8328

for.cond:                                         ; preds = %for.inc, %if.end.4
  %6 = load i64, i64* %i, align 8, !dbg !8329, !tbaa !1503
  %7 = load i64, i64* %len.addr, align 8, !dbg !8332, !tbaa !1503
  %cmp5 = icmp slt i64 %6, %7, !dbg !8333
  br i1 %cmp5, label %for.body, label %for.end, !dbg !8334

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %i, align 8, !dbg !8335, !tbaa !1503
  %9 = load i64*, i64** %array.addr, align 8, !dbg !8336, !tbaa !1364
  %arrayidx = getelementptr i64, i64* %9, i64 %8, !dbg !8336
  %10 = load i64, i64* %arrayidx, align 8, !dbg !8336, !tbaa !1503
  %call6 = call %struct._object* @PyLong_FromSsize_t(i64 %10), !dbg !8337
  store %struct._object* %call6, %struct._object** %x, align 8, !dbg !8338, !tbaa !1364
  %11 = load %struct._object*, %struct._object** %x, align 8, !dbg !8339, !tbaa !1364
  %cmp7 = icmp eq %struct._object* %11, null, !dbg !8340
  br i1 %cmp7, label %if.then.8, label %if.end.12, !dbg !8341

if.then.8:                                        ; preds = %for.body
  br label %do.body, !dbg !8342

do.body:                                          ; preds = %if.then.8
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8343
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !8343
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1201, metadata !1360), !dbg !8345
  %13 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !8346, !tbaa !1364
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !8345, !tbaa !1364
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8347, !tbaa !1364
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !8349
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !8350, !tbaa !1378
  %dec = add i64 %15, -1, !dbg !8350
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8350, !tbaa !1378
  %cmp9 = icmp ne i64 %dec, 0, !dbg !8351
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !8352

if.then.10:                                       ; preds = %do.body
  br label %if.end.11, !dbg !8353

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8355, !tbaa !1364
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8357
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8357, !tbaa !1374
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !8358
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8358, !tbaa !1568
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8359, !tbaa !1364
  call void %18(%struct._object* %19), !dbg !8360
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8361
  call void @llvm.lifetime.end(i64 8, i8* %20) #1, !dbg !8361
  br label %do.cond, !dbg !8363

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !8364

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8366
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8366

if.end.12:                                        ; preds = %for.body
  %21 = load %struct._object*, %struct._object** %x, align 8, !dbg !8367, !tbaa !1364
  %22 = load i64, i64* %i, align 8, !dbg !8368, !tbaa !1503
  %23 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !8369, !tbaa !1364
  %24 = bitcast %struct._object* %23 to %struct.PyTupleObject*, !dbg !8370
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %24, i32 0, i32 1, !dbg !8371
  %arrayidx13 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %22, !dbg !8372
  store %struct._object* %21, %struct._object** %arrayidx13, align 8, !dbg !8373, !tbaa !1364
  br label %for.inc, !dbg !8374

for.inc:                                          ; preds = %if.end.12
  %25 = load i64, i64* %i, align 8, !dbg !8375, !tbaa !1503
  %inc = add i64 %25, 1, !dbg !8375
  store i64 %inc, i64* %i, align 8, !dbg !8375, !tbaa !1503
  br label %for.cond, !dbg !8376

for.end:                                          ; preds = %for.cond
  %26 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !8377, !tbaa !1364
  store %struct._object* %26, %struct._object** %retval, !dbg !8378
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8378

cleanup:                                          ; preds = %for.end, %do.end, %if.then.3, %if.then
  %27 = bitcast i64* %i to i8*, !dbg !8379
  call void @llvm.lifetime.end(i64 8, i8* %27) #1, !dbg !8379
  %28 = bitcast %struct._object** %x to i8*, !dbg !8379
  call void @llvm.lifetime.end(i64 8, i8* %28) #1, !dbg !8379
  %29 = bitcast %struct._object** %tuple to i8*, !dbg !8379
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !8379
  %30 = load %struct._object*, %struct._object** %retval, !dbg !8379
  ret %struct._object* %30, !dbg !8379
}

declare %struct._object* @PyBool_FromLong(i64) #3

declare %struct._object* @_PyObject_New(%struct._typeobject*) #3

; Function Attrs: nounwind uwtable
define internal void @staticarray_dealloc(%struct.StaticArrayObject* %self) #0 {
entry:
  %self.addr = alloca %struct.StaticArrayObject*, align 8
  store %struct.StaticArrayObject* %self, %struct.StaticArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.StaticArrayObject** %self.addr, metadata !1263, metadata !1360), !dbg !8380
  %0 = load %struct.StaticArrayObject*, %struct.StaticArrayObject** %self.addr, align 8, !dbg !8381, !tbaa !1364
  %1 = bitcast %struct.StaticArrayObject* %0 to i8*, !dbg !8381
  call void @PyObject_Free(i8* %1), !dbg !8382
  ret void, !dbg !8383
}

; Function Attrs: nounwind uwtable
define internal i32 @staticarray_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %a = alloca %struct.StaticArrayObject*, align 8
  %legacy_mode = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1273, metadata !1360), !dbg !8384
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1274, metadata !1360), !dbg !8385
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1275, metadata !1360), !dbg !8386
  %0 = bitcast %struct.StaticArrayObject** %a to i8*, !dbg !8387
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !8387
  call void @llvm.dbg.declare(metadata %struct.StaticArrayObject** %a, metadata !1276, metadata !1360), !dbg !8388
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !8389, !tbaa !1364
  %2 = bitcast %struct._object* %1 to %struct.StaticArrayObject*, !dbg !8390
  store %struct.StaticArrayObject* %2, %struct.StaticArrayObject** %a, align 8, !dbg !8388, !tbaa !1364
  %3 = bitcast %struct._object** %legacy_mode to i8*, !dbg !8391
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !8391
  call void @llvm.dbg.declare(metadata %struct._object** %legacy_mode, metadata !1277, metadata !1360), !dbg !8392
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), %struct._object** %legacy_mode, align 8, !dbg !8392, !tbaa !1364
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8393, !tbaa !1364
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8395, !tbaa !1364
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.133, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @staticarray_init.kwlist, i32 0, i32 0), %struct._object** %legacy_mode), !dbg !8396
  %tobool = icmp ne i32 %call, 0, !dbg !8396
  br i1 %tobool, label %if.end, label %if.then, !dbg !8397

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !8398
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8398

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %legacy_mode, align 8, !dbg !8399, !tbaa !1364
  %cmp = icmp ne %struct._object* %6, getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), !dbg !8400
  %conv = zext i1 %cmp to i32, !dbg !8400
  %7 = load %struct.StaticArrayObject*, %struct.StaticArrayObject** %a, align 8, !dbg !8401, !tbaa !1364
  %legacy_mode1 = getelementptr inbounds %struct.StaticArrayObject, %struct.StaticArrayObject* %7, i32 0, i32 1, !dbg !8402
  store i32 %conv, i32* %legacy_mode1, align 4, !dbg !8403, !tbaa !8404
  store i32 0, i32* %retval, !dbg !8406
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8406

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast %struct._object** %legacy_mode to i8*, !dbg !8407
  call void @llvm.lifetime.end(i64 8, i8* %8) #1, !dbg !8407
  %9 = bitcast %struct.StaticArrayObject** %a to i8*, !dbg !8407
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !8407
  %10 = load i32, i32* %retval, !dbg !8407
  ret i32 %10, !dbg !8407
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @staticarray_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1280, metadata !1360), !dbg !8408
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1281, metadata !1360), !dbg !8409
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1282, metadata !1360), !dbg !8410
  %call = call %struct._object* @_PyObject_New(%struct._typeobject* @StaticArray_Type), !dbg !8411
  %0 = bitcast %struct._object* %call to %struct.StaticArrayObject*, !dbg !8412
  %1 = bitcast %struct.StaticArrayObject* %0 to %struct._object*, !dbg !8413
  ret %struct._object* %1, !dbg !8414
}

; Function Attrs: nounwind uwtable
define internal i32 @staticarray_getbuf(%struct.StaticArrayObject* %self, %struct.bufferinfo* %view, i32 %flags) #0 {
entry:
  %self.addr = alloca %struct.StaticArrayObject*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.StaticArrayObject* %self, %struct.StaticArrayObject** %self.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.StaticArrayObject** %self.addr, metadata !1268, metadata !1360), !dbg !8415
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !1364
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !1269, metadata !1360), !dbg !8416
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !1844
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !1270, metadata !1360), !dbg !8417
  %0 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !8418, !tbaa !1364
  %1 = bitcast %struct.bufferinfo* %0 to i8*, !dbg !8419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast (%struct.bufferinfo* @static_buffer to i8*), i64 80, i32 8, i1 false), !dbg !8419, !tbaa.struct !5012
  %2 = load %struct.StaticArrayObject*, %struct.StaticArrayObject** %self.addr, align 8, !dbg !8420, !tbaa !1364
  %legacy_mode = getelementptr inbounds %struct.StaticArrayObject, %struct.StaticArrayObject* %2, i32 0, i32 1, !dbg !8422
  %3 = load i32, i32* %legacy_mode, align 4, !dbg !8422, !tbaa !8404
  %tobool = icmp ne i32 %3, 0, !dbg !8420
  br i1 %tobool, label %if.then, label %if.else, !dbg !8423

if.then:                                          ; preds = %entry
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !8424, !tbaa !1364
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 1, !dbg !8426
  store %struct._object* null, %struct._object** %obj, align 8, !dbg !8427, !tbaa !2701
  br label %if.end, !dbg !8428

if.else:                                          ; preds = %entry
  %5 = load %struct.StaticArrayObject*, %struct.StaticArrayObject** %self.addr, align 8, !dbg !8429, !tbaa !1364
  %6 = bitcast %struct.StaticArrayObject* %5 to %struct._object*, !dbg !8431
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !8432, !tbaa !1364
  %obj1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 1, !dbg !8433
  store %struct._object* %6, %struct._object** %obj1, align 8, !dbg !8434, !tbaa !2701
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !8435, !tbaa !1364
  %obj2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 1, !dbg !8436
  %9 = load %struct._object*, %struct._object** %obj2, align 8, !dbg !8436, !tbaa !2701
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !8437
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !8438, !tbaa !1378
  %inc = add i64 %10, 1, !dbg !8438
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8438, !tbaa !1378
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !8439
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1355, !1356, !1357}
!llvm.ident = !{!1358}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !410, globals: !1283)
!1 = !DIFile(filename: "_testbuffer.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{}
!3 = !{!4, !5, !343, !351, !352, !44, !361, !52, !94, !369, !371, !29, !374, !396, !397, !11, !404}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !7, line: 109, baseType: !8)
!7 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!8 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !7, line: 105, size: 128, align: 64, elements: !9)
!9 = !{!10, !18}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !8, file: !7, line: 107, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !12, line: 177, baseType: !13)
!12 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !14, line: 102, baseType: !15)
!14 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !16, line: 181, baseType: !17)
!16 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!17 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !8, file: !7, line: 108, baseType: !19, size: 64, align: 64, offset: 64)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!20 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !7, line: 334, size: 3200, align: 64, elements: !21)
!21 = !{!22, !28, !32, !33, !34, !39, !102, !107, !112, !113, !118, !170, !201, !213, !219, !220, !221, !223, !225, !256, !257, !258, !267, !268, !273, !274, !276, !278, !288, !291, !309, !310, !311, !313, !315, !316, !318, !323, !328, !333, !334, !335, !336, !337, !338, !339, !340, !342}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !20, file: !7, line: 335, baseType: !23, size: 192, align: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !7, line: 114, baseType: !24)
!24 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 111, size: 192, align: 64, elements: !25)
!25 = !{!26, !27}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !24, file: !7, line: 112, baseType: !6, size: 128, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !24, file: !7, line: 113, baseType: !11, size: 64, align: 64, offset: 128)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !20, file: !7, line: 336, baseType: !29, size: 64, align: 64, offset: 192)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!30 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !31)
!31 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !20, file: !7, line: 337, baseType: !11, size: 64, align: 64, offset: 256)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !20, file: !7, line: 337, baseType: !11, size: 64, align: 64, offset: 320)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !20, file: !7, line: 341, baseType: !35, size: 64, align: 64, offset: 384)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !7, line: 308, baseType: !36)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64, align: 64)
!37 = !DISubroutineType(types: !38)
!38 = !{null, !5}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !20, file: !7, line: 342, baseType: !40, size: 64, align: 64, offset: 448)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !7, line: 314, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!42 = !DISubroutineType(types: !43)
!43 = !{!44, !5, !45, !44}
!44 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !14, line: 48, baseType: !47)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !48, line: 246, size: 1728, align: 64, elements: !49)
!48 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!49 = !{!50, !51, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !71, !72, !73, !74, !76, !78, !80, !84, !87, !89, !90, !91, !92, !93, !97, !98}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !47, file: !48, line: 247, baseType: !44, size: 32, align: 32)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !47, file: !48, line: 252, baseType: !52, size: 64, align: 64, offset: 64)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !47, file: !48, line: 253, baseType: !52, size: 64, align: 64, offset: 128)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !47, file: !48, line: 254, baseType: !52, size: 64, align: 64, offset: 192)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !47, file: !48, line: 255, baseType: !52, size: 64, align: 64, offset: 256)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !47, file: !48, line: 256, baseType: !52, size: 64, align: 64, offset: 320)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !47, file: !48, line: 257, baseType: !52, size: 64, align: 64, offset: 384)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !47, file: !48, line: 258, baseType: !52, size: 64, align: 64, offset: 448)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !47, file: !48, line: 259, baseType: !52, size: 64, align: 64, offset: 512)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !47, file: !48, line: 261, baseType: !52, size: 64, align: 64, offset: 576)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !47, file: !48, line: 262, baseType: !52, size: 64, align: 64, offset: 640)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !47, file: !48, line: 263, baseType: !52, size: 64, align: 64, offset: 704)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !47, file: !48, line: 265, baseType: !64, size: 64, align: 64, offset: 768)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64, align: 64)
!65 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !48, line: 161, size: 192, align: 64, elements: !66)
!66 = !{!67, !68, !70}
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !65, file: !48, line: 162, baseType: !64, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !65, file: !48, line: 163, baseType: !69, size: 64, align: 64, offset: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !65, file: !48, line: 167, baseType: !44, size: 32, align: 32, offset: 128)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !47, file: !48, line: 267, baseType: !69, size: 64, align: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !47, file: !48, line: 269, baseType: !44, size: 32, align: 32, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !47, file: !48, line: 273, baseType: !44, size: 32, align: 32, offset: 928)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !47, file: !48, line: 275, baseType: !75, size: 64, align: 64, offset: 960)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !16, line: 140, baseType: !17)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !47, file: !48, line: 279, baseType: !77, size: 16, align: 16, offset: 1024)
!77 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !47, file: !48, line: 280, baseType: !79, size: 8, align: 8, offset: 1040)
!79 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !47, file: !48, line: 281, baseType: !81, size: 8, align: 8, offset: 1048)
!81 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 8, align: 8, elements: !82)
!82 = !{!83}
!83 = !DISubrange(count: 1)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !47, file: !48, line: 285, baseType: !85, size: 64, align: 64, offset: 1088)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64, align: 64)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !48, line: 155, baseType: null)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !47, file: !48, line: 294, baseType: !88, size: 64, align: 64, offset: 1152)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !16, line: 141, baseType: !17)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !47, file: !48, line: 303, baseType: !4, size: 64, align: 64, offset: 1216)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !47, file: !48, line: 304, baseType: !4, size: 64, align: 64, offset: 1280)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !47, file: !48, line: 305, baseType: !4, size: 64, align: 64, offset: 1344)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !47, file: !48, line: 306, baseType: !4, size: 64, align: 64, offset: 1408)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !47, file: !48, line: 307, baseType: !94, size: 64, align: 64, offset: 1472)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !95, line: 62, baseType: !96)
!95 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!96 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !47, file: !48, line: 309, baseType: !44, size: 32, align: 32, offset: 1536)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !47, file: !48, line: 311, baseType: !99, size: 160, align: 8, offset: 1568)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 160, align: 8, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 20)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !20, file: !7, line: 343, baseType: !103, size: 64, align: 64, offset: 512)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !7, line: 316, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!105 = !DISubroutineType(types: !106)
!106 = !{!5, !5, !52}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !20, file: !7, line: 344, baseType: !108, size: 64, align: 64, offset: 576)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !7, line: 318, baseType: !109)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!110 = !DISubroutineType(types: !111)
!111 = !{!44, !5, !52, !5}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !20, file: !7, line: 345, baseType: !4, size: 64, align: 64, offset: 640)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !20, file: !7, line: 346, baseType: !114, size: 64, align: 64, offset: 704)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !7, line: 320, baseType: !115)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64, align: 64)
!116 = !DISubroutineType(types: !117)
!117 = !{!5, !5}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !20, file: !7, line: 350, baseType: !119, size: 64, align: 64, offset: 768)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !7, line: 278, baseType: !121)
!121 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 236, size: 2176, align: 64, elements: !122)
!122 = !{!123, !128, !129, !130, !131, !132, !137, !139, !140, !141, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !121, file: !7, line: 241, baseType: !124, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !7, line: 166, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!5, !5, !5}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !121, file: !7, line: 242, baseType: !124, size: 64, align: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !121, file: !7, line: 243, baseType: !124, size: 64, align: 64, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !121, file: !7, line: 244, baseType: !124, size: 64, align: 64, offset: 192)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !121, file: !7, line: 245, baseType: !124, size: 64, align: 64, offset: 256)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !121, file: !7, line: 246, baseType: !133, size: 64, align: 64, offset: 320)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !7, line: 167, baseType: !134)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64, align: 64)
!135 = !DISubroutineType(types: !136)
!136 = !{!5, !5, !5, !5}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !121, file: !7, line: 247, baseType: !138, size: 64, align: 64, offset: 384)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !7, line: 165, baseType: !115)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !121, file: !7, line: 248, baseType: !138, size: 64, align: 64, offset: 448)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !121, file: !7, line: 249, baseType: !138, size: 64, align: 64, offset: 512)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !121, file: !7, line: 250, baseType: !142, size: 64, align: 64, offset: 576)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !7, line: 168, baseType: !143)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64, align: 64)
!144 = !DISubroutineType(types: !145)
!145 = !{!44, !5}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !121, file: !7, line: 251, baseType: !138, size: 64, align: 64, offset: 640)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !121, file: !7, line: 252, baseType: !124, size: 64, align: 64, offset: 704)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !121, file: !7, line: 253, baseType: !124, size: 64, align: 64, offset: 768)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !121, file: !7, line: 254, baseType: !124, size: 64, align: 64, offset: 832)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !121, file: !7, line: 255, baseType: !124, size: 64, align: 64, offset: 896)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !121, file: !7, line: 256, baseType: !124, size: 64, align: 64, offset: 960)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !121, file: !7, line: 257, baseType: !138, size: 64, align: 64, offset: 1024)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !121, file: !7, line: 258, baseType: !4, size: 64, align: 64, offset: 1088)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !121, file: !7, line: 259, baseType: !138, size: 64, align: 64, offset: 1152)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !121, file: !7, line: 261, baseType: !124, size: 64, align: 64, offset: 1216)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !121, file: !7, line: 262, baseType: !124, size: 64, align: 64, offset: 1280)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !121, file: !7, line: 263, baseType: !124, size: 64, align: 64, offset: 1344)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !121, file: !7, line: 264, baseType: !124, size: 64, align: 64, offset: 1408)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !121, file: !7, line: 265, baseType: !133, size: 64, align: 64, offset: 1472)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !121, file: !7, line: 266, baseType: !124, size: 64, align: 64, offset: 1536)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !121, file: !7, line: 267, baseType: !124, size: 64, align: 64, offset: 1600)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !121, file: !7, line: 268, baseType: !124, size: 64, align: 64, offset: 1664)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !121, file: !7, line: 269, baseType: !124, size: 64, align: 64, offset: 1728)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !121, file: !7, line: 270, baseType: !124, size: 64, align: 64, offset: 1792)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !121, file: !7, line: 272, baseType: !124, size: 64, align: 64, offset: 1856)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !121, file: !7, line: 273, baseType: !124, size: 64, align: 64, offset: 1920)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !121, file: !7, line: 274, baseType: !124, size: 64, align: 64, offset: 1984)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !121, file: !7, line: 275, baseType: !124, size: 64, align: 64, offset: 2048)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !121, file: !7, line: 277, baseType: !138, size: 64, align: 64, offset: 2112)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !20, file: !7, line: 351, baseType: !171, size: 64, align: 64, offset: 832)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !7, line: 292, baseType: !173)
!173 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 280, size: 640, align: 64, elements: !174)
!174 = !{!175, !180, !181, !186, !187, !188, !193, !194, !199, !200}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !173, file: !7, line: 281, baseType: !176, size: 64, align: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !7, line: 169, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64, align: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{!11, !5}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !173, file: !7, line: 282, baseType: !124, size: 64, align: 64, offset: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !173, file: !7, line: 283, baseType: !182, size: 64, align: 64, offset: 128)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !7, line: 170, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64, align: 64)
!184 = !DISubroutineType(types: !185)
!185 = !{!5, !5, !11}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !173, file: !7, line: 284, baseType: !182, size: 64, align: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !173, file: !7, line: 285, baseType: !4, size: 64, align: 64, offset: 256)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !173, file: !7, line: 286, baseType: !189, size: 64, align: 64, offset: 320)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !7, line: 172, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64, align: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!44, !5, !11, !5}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !173, file: !7, line: 287, baseType: !4, size: 64, align: 64, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !173, file: !7, line: 288, baseType: !195, size: 64, align: 64, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !7, line: 231, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64, align: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!44, !5, !5}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !173, file: !7, line: 290, baseType: !124, size: 64, align: 64, offset: 512)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !173, file: !7, line: 291, baseType: !182, size: 64, align: 64, offset: 576)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !20, file: !7, line: 352, baseType: !202, size: 64, align: 64, offset: 896)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64, align: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !7, line: 298, baseType: !204)
!204 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 294, size: 192, align: 64, elements: !205)
!205 = !{!206, !207, !208}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !204, file: !7, line: 295, baseType: !176, size: 64, align: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !204, file: !7, line: 296, baseType: !124, size: 64, align: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !204, file: !7, line: 297, baseType: !209, size: 64, align: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !7, line: 174, baseType: !210)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64, align: 64)
!211 = !DISubroutineType(types: !212)
!212 = !{!44, !5, !5, !5}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !20, file: !7, line: 356, baseType: !214, size: 64, align: 64, offset: 960)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !7, line: 321, baseType: !215)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64, align: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{!218, !5}
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !12, line: 186, baseType: !11)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !20, file: !7, line: 357, baseType: !133, size: 64, align: 64, offset: 1024)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !20, file: !7, line: 358, baseType: !114, size: 64, align: 64, offset: 1088)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !20, file: !7, line: 359, baseType: !222, size: 64, align: 64, offset: 1152)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !7, line: 317, baseType: !125)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !20, file: !7, line: 360, baseType: !224, size: 64, align: 64, offset: 1216)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !7, line: 319, baseType: !210)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !20, file: !7, line: 363, baseType: !226, size: 64, align: 64, offset: 1280)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !7, line: 304, baseType: !228)
!228 = !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 301, size: 128, align: 64, elements: !229)
!229 = !{!230, !251}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !228, file: !7, line: 302, baseType: !231, size: 64, align: 64)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !7, line: 193, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64, align: 64)
!233 = !DISubroutineType(types: !234)
!234 = !{!44, !5, !235, !44}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !7, line: 191, baseType: !237)
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !7, line: 178, size: 640, align: 64, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !248, !249, !250}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !237, file: !7, line: 179, baseType: !4, size: 64, align: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !237, file: !7, line: 180, baseType: !5, size: 64, align: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !237, file: !7, line: 181, baseType: !11, size: 64, align: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !237, file: !7, line: 182, baseType: !11, size: 64, align: 64, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !237, file: !7, line: 184, baseType: !44, size: 32, align: 32, offset: 256)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !237, file: !7, line: 185, baseType: !44, size: 32, align: 32, offset: 288)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !237, file: !7, line: 186, baseType: !52, size: 64, align: 64, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !237, file: !7, line: 187, baseType: !247, size: 64, align: 64, offset: 384)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !237, file: !7, line: 188, baseType: !247, size: 64, align: 64, offset: 448)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !237, file: !7, line: 189, baseType: !247, size: 64, align: 64, offset: 512)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !237, file: !7, line: 190, baseType: !4, size: 64, align: 64, offset: 576)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !228, file: !7, line: 303, baseType: !252, size: 64, align: 64, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !7, line: 194, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64, align: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !5, !235}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !20, file: !7, line: 366, baseType: !96, size: 64, align: 64, offset: 1344)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !20, file: !7, line: 368, baseType: !29, size: 64, align: 64, offset: 1408)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !20, file: !7, line: 372, baseType: !259, size: 64, align: 64, offset: 1472)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !7, line: 233, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64, align: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{!44, !5, !263, !4}
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !7, line: 232, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64, align: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{!44, !5, !4}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !20, file: !7, line: 375, baseType: !142, size: 64, align: 64, offset: 1536)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !20, file: !7, line: 379, baseType: !269, size: 64, align: 64, offset: 1600)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !7, line: 322, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, align: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{!5, !5, !5, !44}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !20, file: !7, line: 382, baseType: !11, size: 64, align: 64, offset: 1664)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !20, file: !7, line: 385, baseType: !275, size: 64, align: 64, offset: 1728)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !7, line: 323, baseType: !115)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !20, file: !7, line: 386, baseType: !277, size: 64, align: 64, offset: 1792)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !7, line: 324, baseType: !115)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !20, file: !7, line: 389, baseType: !279, size: 64, align: 64, offset: 1856)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64, align: 64)
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !281, line: 40, size: 256, align: 64, elements: !282)
!281 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!282 = !{!283, !284, !286, !287}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !280, file: !281, line: 41, baseType: !29, size: 64, align: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !280, file: !281, line: 42, baseType: !285, size: 64, align: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !281, line: 18, baseType: !125)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !280, file: !281, line: 43, baseType: !44, size: 32, align: 32, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !280, file: !281, line: 45, baseType: !29, size: 64, align: 64, offset: 192)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !20, file: !7, line: 390, baseType: !289, size: 64, align: 64, offset: 1920)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64, align: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !7, line: 390, flags: DIFlagFwdDecl)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !20, file: !7, line: 391, baseType: !292, size: 64, align: 64, offset: 1984)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64, align: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !294, line: 11, size: 320, align: 64, elements: !295)
!294 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!295 = !{!296, !297, !302, !307, !308}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !293, file: !294, line: 12, baseType: !52, size: 64, align: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !293, file: !294, line: 13, baseType: !298, size: 64, align: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !294, line: 8, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64, align: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!5, !5, !4}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !293, file: !294, line: 14, baseType: !303, size: 64, align: 64, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !294, line: 9, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64, align: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!44, !5, !5, !4}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !293, file: !294, line: 15, baseType: !52, size: 64, align: 64, offset: 192)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !293, file: !294, line: 16, baseType: !4, size: 64, align: 64, offset: 256)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !20, file: !7, line: 392, baseType: !19, size: 64, align: 64, offset: 2048)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !20, file: !7, line: 393, baseType: !5, size: 64, align: 64, offset: 2112)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !20, file: !7, line: 394, baseType: !312, size: 64, align: 64, offset: 2176)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !7, line: 325, baseType: !134)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !20, file: !7, line: 395, baseType: !314, size: 64, align: 64, offset: 2240)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !7, line: 326, baseType: !210)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !20, file: !7, line: 396, baseType: !11, size: 64, align: 64, offset: 2304)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !20, file: !7, line: 397, baseType: !317, size: 64, align: 64, offset: 2368)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !7, line: 327, baseType: !210)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !20, file: !7, line: 398, baseType: !319, size: 64, align: 64, offset: 2432)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !7, line: 329, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!5, !19, !11}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !20, file: !7, line: 399, baseType: !324, size: 64, align: 64, offset: 2496)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !7, line: 328, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64, align: 64)
!326 = !DISubroutineType(types: !327)
!327 = !{!5, !19, !5, !5}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !20, file: !7, line: 400, baseType: !329, size: 64, align: 64, offset: 2560)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !7, line: 307, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64, align: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{null, !4}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !20, file: !7, line: 401, baseType: !142, size: 64, align: 64, offset: 2624)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !20, file: !7, line: 402, baseType: !5, size: 64, align: 64, offset: 2688)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !20, file: !7, line: 403, baseType: !5, size: 64, align: 64, offset: 2752)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !20, file: !7, line: 404, baseType: !5, size: 64, align: 64, offset: 2816)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !20, file: !7, line: 405, baseType: !5, size: 64, align: 64, offset: 2880)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !20, file: !7, line: 406, baseType: !5, size: 64, align: 64, offset: 2944)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !20, file: !7, line: 407, baseType: !35, size: 64, align: 64, offset: 3008)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !20, file: !7, line: 410, baseType: !341, size: 32, align: 32, offset: 3072)
!341 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !20, file: !7, line: 412, baseType: !35, size: 64, align: 64, offset: 3136)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !345, line: 33, baseType: !346)
!345 = !DIFile(filename: "./Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!346 = !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 25, size: 256, align: 64, elements: !347)
!347 = !{!348, !349}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !346, file: !345, line: 26, baseType: !23, size: 192, align: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !346, file: !345, line: 27, baseType: !350, size: 64, align: 64, offset: 192)
!350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, align: 64, elements: !82)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64, align: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !354, line: 40, baseType: !355)
!354 = !DIFile(filename: "./Include/listobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!355 = !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 23, size: 320, align: 64, elements: !356)
!356 = !{!357, !358, !360}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !355, file: !354, line: 24, baseType: !23, size: 192, align: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !355, file: !354, line: 26, baseType: !359, size: 64, align: 64, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !355, file: !354, line: 39, baseType: !11, size: 64, align: 64, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64, align: 64)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !363, line: 41, baseType: !364)
!363 = !DIFile(filename: "./Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!364 = !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 31, size: 320, align: 64, elements: !365)
!365 = !{!366, !367, !368}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !364, file: !363, line: 32, baseType: !23, size: 192, align: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !364, file: !363, line: 33, baseType: !218, size: 64, align: 64, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !364, file: !363, line: 34, baseType: !81, size: 8, align: 8, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64, align: 64)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, align: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "NDArrayObject", file: !376, line: 105, baseType: !377)
!376 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_testbuffer.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!377 = !DICompositeType(tag: DW_TAG_structure_type, file: !376, line: 100, size: 1344, align: 64, elements: !378)
!378 = !{!379, !380, !381, !394}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !377, file: !376, line: 101, baseType: !6, size: 128, align: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !377, file: !376, line: 102, baseType: !44, size: 32, align: 32, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "staticbuf", scope: !377, file: !376, line: 103, baseType: !382, size: 1088, align: 64, offset: 192)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "ndbuf_t", file: !376, line: 98, baseType: !383)
!383 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndbuf", file: !376, line: 89, size: 1088, align: 64, elements: !384)
!384 = !{!385, !387, !388, !389, !390, !391, !392, !393}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !383, file: !376, line: 90, baseType: !386, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !383, file: !376, line: 91, baseType: !386, size: 64, align: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !383, file: !376, line: 92, baseType: !11, size: 64, align: 64, offset: 128)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !383, file: !376, line: 93, baseType: !11, size: 64, align: 64, offset: 192)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !383, file: !376, line: 94, baseType: !52, size: 64, align: 64, offset: 256)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !383, file: !376, line: 95, baseType: !44, size: 32, align: 32, offset: 320)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "exports", scope: !383, file: !376, line: 96, baseType: !11, size: 64, align: 64, offset: 384)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !383, file: !376, line: 97, baseType: !236, size: 640, align: 64, offset: 448)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !377, file: !376, line: 104, baseType: !395, size: 64, align: 64, offset: 1280)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64, align: 64)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64, align: 64)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyPartialStructObject", file: !376, line: 289, baseType: !399)
!399 = !DICompositeType(tag: DW_TAG_structure_type, file: !376, line: 285, size: 256, align: 64, elements: !400)
!400 = !{!401, !402, !403}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !399, file: !376, line: 286, baseType: !6, size: 128, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "s_size", scope: !399, file: !376, line: 287, baseType: !11, size: 64, align: 64, offset: 128)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "s_len", scope: !399, file: !376, line: 288, baseType: !11, size: 64, align: 64, offset: 192)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "StaticArrayObject", file: !376, line: 2674, baseType: !406)
!406 = !DICompositeType(tag: DW_TAG_structure_type, file: !376, line: 2671, size: 192, align: 64, elements: !407)
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !406, file: !376, line: 2672, baseType: !6, size: 128, align: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mode", scope: !406, file: !376, line: 2673, baseType: !44, size: 32, align: 32, offset: 128)
!410 = !{!411, !416, !431, !449, !472, !475, !484, !493, !504, !513, !523, !548, !559, !569, !572, !578, !584, !601, !609, !617, !620, !648, !657, !671, !677, !694, !750, !753, !760, !769, !802, !815, !824, !835, !845, !854, !858, !893, !924, !936, !948, !974, !981, !992, !1005, !1055, !1068, !1075, !1089, !1102, !1121, !1125, !1130, !1137, !1145, !1151, !1156, !1161, !1166, !1171, !1176, !1182, !1187, !1192, !1208, !1213, !1218, !1224, !1230, !1236, !1249, !1259, !1264, !1271, !1278}
!411 = !DISubprogram(name: "PyInit__testbuffer", scope: !376, file: !376, line: 2811, type: !412, isLocal: false, isDefinition: true, scopeLine: 2812, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit__testbuffer, variables: !414)
!412 = !DISubroutineType(types: !413)
!413 = !{!5}
!414 = !{!415}
!415 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !411, file: !376, line: 2813, type: !5)
!416 = !DISubprogram(name: "slice_indices", scope: !376, file: !376, line: 1910, type: !126, isLocal: true, isDefinition: true, scopeLine: 1911, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @slice_indices, variables: !417)
!417 = !{!418, !419, !420, !421, !422, !423, !427, !428, !429}
!418 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !416, file: !376, line: 1910, type: !5)
!419 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !416, file: !376, line: 1910, type: !5)
!420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !416, file: !376, line: 1912, type: !5)
!421 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !416, file: !376, line: 1912, type: !5)
!422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !416, file: !376, line: 1912, type: !5)
!423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !416, file: !376, line: 1913, type: !424)
!424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 256, align: 64, elements: !425)
!425 = !{!426}
!426 = !DISubrange(count: 4)
!427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !416, file: !376, line: 1914, type: !11)
!428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !416, file: !376, line: 1914, type: !11)
!429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !430, file: !376, line: 1942, type: !5)
!430 = distinct !DILexicalBlock(scope: !416, file: !376, line: 1942, column: 8)
!431 = !DISubprogram(name: "get_pointer", scope: !376, file: !376, line: 2291, type: !126, isLocal: true, isDefinition: true, scopeLine: 2292, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @get_pointer, variables: !432)
!432 = !{!433, !434, !435, !436, !437, !438, !439, !443, !444, !445}
!433 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !431, file: !376, line: 2291, type: !5)
!434 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !431, file: !376, line: 2291, type: !5)
!435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !431, file: !376, line: 2293, type: !5)
!436 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bufobj", scope: !431, file: !376, line: 2293, type: !5)
!437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !431, file: !376, line: 2293, type: !5)
!438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !431, file: !376, line: 2294, type: !236)
!439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "indices", scope: !431, file: !376, line: 2295, type: !440)
!440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 8192, align: 64, elements: !441)
!441 = !{!442}
!442 = !DISubrange(count: 128)
!443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !431, file: !376, line: 2296, type: !11)
!444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !431, file: !376, line: 2297, type: !4)
!445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !446, file: !376, line: 2319, type: !5)
!446 = distinct !DILexicalBlock(scope: !447, file: !376, line: 2318, column: 37)
!447 = distinct !DILexicalBlock(scope: !448, file: !376, line: 2318, column: 5)
!448 = distinct !DILexicalBlock(scope: !431, file: !376, line: 2318, column: 5)
!449 = !DISubprogram(name: "unpack_single", scope: !376, file: !376, line: 572, type: !450, isLocal: true, isDefinition: true, scopeLine: 573, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i8*, i64)* @unpack_single, variables: !452)
!450 = !DISubroutineType(types: !451)
!451 = !{!5, !52, !29, !11}
!452 = !{!453, !454, !455, !456, !457, !458, !459, !463, !465, !467, !470}
!453 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !449, file: !376, line: 572, type: !52)
!454 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 2, scope: !449, file: !376, line: 572, type: !29)
!455 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 3, scope: !449, file: !376, line: 572, type: !11)
!456 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !449, file: !376, line: 574, type: !5)
!457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unpack_from", scope: !449, file: !376, line: 574, type: !5)
!458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mview", scope: !449, file: !376, line: 574, type: !5)
!459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !460, file: !376, line: 587, type: !5)
!460 = distinct !DILexicalBlock(scope: !461, file: !376, line: 587, column: 12)
!461 = distinct !DILexicalBlock(scope: !462, file: !376, line: 586, column: 30)
!462 = distinct !DILexicalBlock(scope: !449, file: !376, line: 586, column: 9)
!463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !464, file: !376, line: 592, type: !5)
!464 = distinct !DILexicalBlock(scope: !449, file: !376, line: 592, column: 8)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !466, file: !376, line: 593, type: !5)
!466 = distinct !DILexicalBlock(scope: !449, file: !376, line: 593, column: 8)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !468, file: !376, line: 598, type: !5)
!468 = distinct !DILexicalBlock(scope: !469, file: !376, line: 597, column: 46)
!469 = distinct !DILexicalBlock(scope: !449, file: !376, line: 597, column: 9)
!470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !471, file: !376, line: 600, type: !5)
!471 = distinct !DILexicalBlock(scope: !468, file: !376, line: 600, column: 12)
!472 = !DISubprogram(name: "get_sizeof_void_p", scope: !376, file: !376, line: 2340, type: !116, isLocal: true, isDefinition: true, scopeLine: 2341, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @get_sizeof_void_p, variables: !473)
!473 = !{!474}
!474 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !472, file: !376, line: 2340, type: !5)
!475 = !DISubprogram(name: "get_contiguous", scope: !376, file: !376, line: 2376, type: !126, isLocal: true, isDefinition: true, scopeLine: 2377, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @get_contiguous, variables: !476)
!476 = !{!477, !478, !479, !480, !481, !482, !483}
!477 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !475, file: !376, line: 2376, type: !5)
!478 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !475, file: !376, line: 2376, type: !5)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !475, file: !376, line: 2378, type: !5)
!480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffertype", scope: !475, file: !376, line: 2379, type: !5)
!481 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "order", scope: !475, file: !376, line: 2380, type: !5)
!482 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !475, file: !376, line: 2381, type: !17)
!483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ord", scope: !475, file: !376, line: 2382, type: !31)
!484 = !DISubprogram(name: "get_ascii_order", scope: !376, file: !376, line: 2346, type: !485, isLocal: true, isDefinition: true, scopeLine: 2347, flags: DIFlagPrototyped, isOptimized: true, function: i8 (%struct._object*)* @get_ascii_order, variables: !487)
!485 = !DISubroutineType(types: !486)
!486 = !{!31, !5}
!487 = !{!488, !489, !490, !491}
!488 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 1, scope: !484, file: !376, line: 2346, type: !5)
!489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ascii_order", scope: !484, file: !376, line: 2348, type: !5)
!490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ord", scope: !484, file: !376, line: 2349, type: !31)
!491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !492, file: !376, line: 2363, type: !5)
!492 = distinct !DILexicalBlock(scope: !484, file: !376, line: 2363, column: 8)
!493 = !DISubprogram(name: "py_buffer_to_contiguous", scope: !376, file: !376, line: 2413, type: !126, isLocal: true, isDefinition: true, scopeLine: 2414, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @py_buffer_to_contiguous, variables: !494)
!494 = !{!495, !496, !497, !498, !499, !500, !501, !502, !503}
!495 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !493, file: !376, line: 2413, type: !5)
!496 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !493, file: !376, line: 2413, type: !5)
!497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !493, file: !376, line: 2415, type: !5)
!498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "order", scope: !493, file: !376, line: 2416, type: !5)
!499 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !493, file: !376, line: 2417, type: !5)
!500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !493, file: !376, line: 2418, type: !44)
!501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ord", scope: !493, file: !376, line: 2419, type: !31)
!502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !493, file: !376, line: 2420, type: !236)
!503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !493, file: !376, line: 2421, type: !52)
!504 = !DISubprogram(name: "is_contiguous", scope: !376, file: !376, line: 2553, type: !126, isLocal: true, isDefinition: true, scopeLine: 2554, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @is_contiguous, variables: !505)
!505 = !{!506, !507, !508, !509, !510, !511, !512}
!506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !504, file: !376, line: 2553, type: !5)
!507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !504, file: !376, line: 2553, type: !5)
!508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !504, file: !376, line: 2555, type: !5)
!509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "order", scope: !504, file: !376, line: 2556, type: !5)
!510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !504, file: !376, line: 2557, type: !5)
!511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !504, file: !376, line: 2558, type: !236)
!512 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ord", scope: !504, file: !376, line: 2559, type: !31)
!513 = !DISubprogram(name: "cmp_contig", scope: !376, file: !376, line: 2489, type: !126, isLocal: true, isDefinition: true, scopeLine: 2490, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @cmp_contig, variables: !514)
!514 = !{!515, !516, !517, !518, !519, !520, !521, !522}
!515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !513, file: !376, line: 2489, type: !5)
!516 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !513, file: !376, line: 2489, type: !5)
!517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b1", scope: !513, file: !376, line: 2491, type: !5)
!518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b2", scope: !513, file: !376, line: 2491, type: !5)
!519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v1", scope: !513, file: !376, line: 2492, type: !236)
!520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v2", scope: !513, file: !376, line: 2492, type: !236)
!521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !513, file: !376, line: 2493, type: !5)
!522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "equal", scope: !513, file: !376, line: 2494, type: !44)
!523 = !DISubprogram(name: "fmtcmp", scope: !376, file: !376, line: 2455, type: !524, isLocal: true, isDefinition: true, scopeLine: 2456, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*)* @fmtcmp, variables: !526)
!524 = !DISubroutineType(types: !525)
!525 = !{!44, !29, !29}
!526 = !{!527, !528, !529, !533, !534, !536, !537, !541, !542, !544, !545, !547}
!527 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt1", arg: 1, scope: !523, file: !376, line: 2455, type: !29)
!528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt2", arg: 2, scope: !523, file: !376, line: 2455, type: !29)
!529 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !530, file: !376, line: 2458, type: !94)
!530 = distinct !DILexicalBlock(scope: !531, file: !376, line: 2458, column: 53)
!531 = distinct !DILexicalBlock(scope: !532, file: !376, line: 2457, column: 29)
!532 = distinct !DILexicalBlock(scope: !523, file: !376, line: 2457, column: 9)
!533 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !530, file: !376, line: 2458, type: !94)
!534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !535, file: !376, line: 2458, type: !371)
!535 = distinct !DILexicalBlock(scope: !530, file: !376, line: 2458, column: 1539)
!536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !535, file: !376, line: 2458, type: !44)
!537 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !538, file: !376, line: 2461, type: !94)
!538 = distinct !DILexicalBlock(scope: !539, file: !376, line: 2461, column: 53)
!539 = distinct !DILexicalBlock(scope: !540, file: !376, line: 2460, column: 29)
!540 = distinct !DILexicalBlock(scope: !523, file: !376, line: 2460, column: 9)
!541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !538, file: !376, line: 2461, type: !94)
!542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !543, file: !376, line: 2461, type: !371)
!543 = distinct !DILexicalBlock(scope: !538, file: !376, line: 2461, column: 1539)
!544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !543, file: !376, line: 2461, type: !44)
!545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !546, file: !376, line: 2463, type: !94)
!546 = distinct !DILexicalBlock(scope: !523, file: !376, line: 2463, column: 27)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !546, file: !376, line: 2463, type: !94)
!548 = !DISubprogram(name: "arraycmp", scope: !376, file: !376, line: 2467, type: !549, isLocal: true, isDefinition: true, scopeLine: 2469, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64*, i64*, i64)* @arraycmp, variables: !553)
!549 = !DISubroutineType(types: !550)
!550 = !{!44, !551, !551, !551, !11}
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!553 = !{!554, !555, !556, !557, !558}
!554 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a1", arg: 1, scope: !548, file: !376, line: 2467, type: !551)
!555 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a2", arg: 2, scope: !548, file: !376, line: 2467, type: !551)
!556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 3, scope: !548, file: !376, line: 2467, type: !551)
!557 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 4, scope: !548, file: !376, line: 2468, type: !11)
!558 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !548, file: !376, line: 2470, type: !11)
!559 = !DISubprogram(name: "ndarray_dealloc", scope: !376, file: !376, line: 222, type: !560, isLocal: true, isDefinition: true, scopeLine: 223, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.NDArrayObject*)* @ndarray_dealloc, variables: !562)
!560 = !DISubroutineType(types: !561)
!561 = !{null, !374}
!562 = !{!563, !564}
!563 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !559, file: !376, line: 222, type: !374)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !565, file: !376, line: 226, type: !235)
!565 = distinct !DILexicalBlock(scope: !566, file: !376, line: 225, column: 85)
!566 = distinct !DILexicalBlock(scope: !567, file: !376, line: 225, column: 13)
!567 = distinct !DILexicalBlock(scope: !568, file: !376, line: 224, column: 21)
!568 = distinct !DILexicalBlock(scope: !559, file: !376, line: 224, column: 9)
!569 = !DISubprogram(name: "ndbuf_pop", scope: !376, file: !376, line: 201, type: !560, isLocal: true, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.NDArrayObject*)* @ndbuf_pop, variables: !570)
!570 = !{!571}
!571 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nd", arg: 1, scope: !569, file: !376, line: 201, type: !374)
!572 = !DISubprogram(name: "ndbuf_delete", scope: !376, file: !376, line: 187, type: !573, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.NDArrayObject*, %struct.ndbuf*)* @ndbuf_delete, variables: !575)
!573 = !DISubroutineType(types: !574)
!574 = !{null, !374, !395}
!575 = !{!576, !577}
!576 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nd", arg: 1, scope: !572, file: !376, line: 187, type: !374)
!577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "elt", arg: 2, scope: !572, file: !376, line: 187, type: !395)
!578 = !DISubprogram(name: "ndbuf_free", scope: !376, file: !376, line: 164, type: !579, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.ndbuf*)* @ndbuf_free, variables: !581)
!579 = !DISubroutineType(types: !580)
!580 = !{null, !395}
!581 = !{!582, !583}
!582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndbuf", arg: 1, scope: !578, file: !376, line: 164, type: !395)
!583 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !578, file: !376, line: 166, type: !235)
!584 = !DISubprogram(name: "ndarray_item", scope: !376, file: !376, line: 1576, type: !585, isLocal: true, isDefinition: true, scopeLine: 1577, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i64)* @ndarray_item, variables: !587)
!585 = !DISubroutineType(types: !586)
!586 = !{!5, !374, !11}
!587 = !{!588, !589, !590, !591, !592, !593, !596, !597}
!588 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !584, file: !376, line: 1576, type: !374)
!589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !584, file: !376, line: 1576, type: !11)
!590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !584, file: !376, line: 1578, type: !395)
!591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !584, file: !376, line: 1579, type: !235)
!592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !584, file: !376, line: 1580, type: !52)
!593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !594, file: !376, line: 1595, type: !374)
!594 = distinct !DILexicalBlock(scope: !595, file: !376, line: 1594, column: 10)
!595 = distinct !DILexicalBlock(scope: !584, file: !376, line: 1591, column: 9)
!596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "subview", scope: !594, file: !376, line: 1596, type: !235)
!597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !598, file: !376, line: 1603, type: !5)
!598 = distinct !DILexicalBlock(scope: !599, file: !376, line: 1603, column: 16)
!599 = distinct !DILexicalBlock(scope: !600, file: !376, line: 1602, column: 104)
!600 = distinct !DILexicalBlock(scope: !594, file: !376, line: 1602, column: 13)
!601 = !DISubprogram(name: "ptr_from_index", scope: !376, file: !376, line: 1543, type: !602, isLocal: true, isDefinition: true, scopeLine: 1544, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.bufferinfo*, i64)* @ptr_from_index, variables: !604)
!602 = !DISubroutineType(types: !603)
!603 = !{!52, !235, !11}
!604 = !{!605, !606, !607, !608}
!605 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 1, scope: !601, file: !376, line: 1543, type: !235)
!606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !601, file: !376, line: 1543, type: !11)
!607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !601, file: !376, line: 1545, type: !52)
!608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nitems", scope: !601, file: !376, line: 1546, type: !11)
!609 = !DISubprogram(name: "ndarray_init_staticbuf", scope: !376, file: !376, line: 243, type: !610, isLocal: true, isDefinition: true, scopeLine: 244, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct.NDArrayObject*, i32)* @ndarray_init_staticbuf, variables: !612)
!610 = !DISubroutineType(types: !611)
!611 = !{!44, !5, !374, !44}
!612 = !{!613, !614, !615, !616}
!613 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exporter", arg: 1, scope: !609, file: !376, line: 243, type: !5)
!614 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nd", arg: 2, scope: !609, file: !376, line: 243, type: !374)
!615 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 3, scope: !609, file: !376, line: 243, type: !44)
!616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !609, file: !376, line: 245, type: !235)
!617 = !DISubprogram(name: "init_flags", scope: !376, file: !376, line: 265, type: !579, isLocal: true, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.ndbuf*)* @init_flags, variables: !618)
!618 = !{!619}
!619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndbuf", arg: 1, scope: !617, file: !376, line: 265, type: !395)
!620 = !DISubprogram(name: "ndarray_subscript", scope: !376, file: !376, line: 1768, type: !621, isLocal: true, isDefinition: true, scopeLine: 1769, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, %struct._object*)* @ndarray_subscript, variables: !623)
!621 = !DISubroutineType(types: !622)
!622 = !{!5, !374, !5}
!623 = !{!624, !625, !626, !627, !628, !629, !632, !636, !640, !644, !645, !646}
!624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !620, file: !376, line: 1768, type: !374)
!625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !620, file: !376, line: 1768, type: !5)
!626 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !620, file: !376, line: 1770, type: !374)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !620, file: !376, line: 1771, type: !395)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !620, file: !376, line: 1772, type: !235)
!629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !630, file: !376, line: 1788, type: !11)
!630 = distinct !DILexicalBlock(scope: !631, file: !376, line: 1787, column: 111)
!631 = distinct !DILexicalBlock(scope: !620, file: !376, line: 1787, column: 9)
!632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !633, file: !376, line: 1800, type: !5)
!633 = distinct !DILexicalBlock(scope: !634, file: !376, line: 1800, column: 12)
!634 = distinct !DILexicalBlock(scope: !635, file: !376, line: 1799, column: 100)
!635 = distinct !DILexicalBlock(scope: !620, file: !376, line: 1799, column: 9)
!636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !637, file: !376, line: 1808, type: !5)
!637 = distinct !DILexicalBlock(scope: !638, file: !376, line: 1808, column: 12)
!638 = distinct !DILexicalBlock(scope: !639, file: !376, line: 1807, column: 35)
!639 = distinct !DILexicalBlock(scope: !620, file: !376, line: 1807, column: 9)
!640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !641, file: !376, line: 1820, type: !5)
!641 = distinct !DILexicalBlock(scope: !642, file: !376, line: 1818, column: 82)
!642 = distinct !DILexicalBlock(scope: !643, file: !376, line: 1818, column: 14)
!643 = distinct !DILexicalBlock(scope: !620, file: !376, line: 1813, column: 9)
!644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !641, file: !376, line: 1821, type: !11)
!645 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !641, file: !376, line: 1821, type: !11)
!646 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !647, file: !376, line: 1847, type: !5)
!647 = distinct !DILexicalBlock(scope: !620, file: !376, line: 1847, column: 8)
!648 = !DISubprogram(name: "copy_structure", scope: !376, file: !376, line: 1729, type: !649, isLocal: true, isDefinition: true, scopeLine: 1730, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*)* @copy_structure, variables: !651)
!649 = !DISubroutineType(types: !650)
!650 = !{!44, !235}
!651 = !{!652, !653, !654, !655, !656}
!652 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 1, scope: !648, file: !376, line: 1729, type: !235)
!653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shape", scope: !648, file: !376, line: 1731, type: !247)
!654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strides", scope: !648, file: !376, line: 1731, type: !247)
!655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "suboffsets", scope: !648, file: !376, line: 1731, type: !247)
!656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !648, file: !376, line: 1732, type: !11)
!657 = !DISubprogram(name: "init_slice", scope: !376, file: !376, line: 1700, type: !658, isLocal: true, isDefinition: true, scopeLine: 1701, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct._object*, i32)* @init_slice, variables: !660)
!658 = !DISubroutineType(types: !659)
!659 = !{!44, !235, !5, !44}
!660 = !{!661, !662, !663, !664, !665, !666, !667, !668}
!661 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 1, scope: !657, file: !376, line: 1700, type: !235)
!662 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !657, file: !376, line: 1700, type: !5)
!663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dim", arg: 3, scope: !657, file: !376, line: 1700, type: !44)
!664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !657, file: !376, line: 1702, type: !11)
!665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !657, file: !376, line: 1702, type: !11)
!666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !657, file: !376, line: 1702, type: !11)
!667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slicelength", scope: !657, file: !376, line: 1702, type: !11)
!668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !669, file: !376, line: 1715, type: !11)
!669 = distinct !DILexicalBlock(scope: !670, file: !376, line: 1714, column: 10)
!670 = distinct !DILexicalBlock(scope: !657, file: !376, line: 1710, column: 9)
!671 = !DISubprogram(name: "init_len", scope: !376, file: !376, line: 1108, type: !672, isLocal: true, isDefinition: true, scopeLine: 1109, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.bufferinfo*)* @init_len, variables: !674)
!672 = !DISubroutineType(types: !673)
!673 = !{null, !235}
!674 = !{!675, !676}
!675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 1, scope: !671, file: !376, line: 1108, type: !235)
!676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !671, file: !376, line: 1110, type: !11)
!677 = !DISubprogram(name: "ndarray_ass_subscript", scope: !376, file: !376, line: 1853, type: !678, isLocal: true, isDefinition: true, scopeLine: 1854, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.NDArrayObject*, %struct._object*, %struct._object*)* @ndarray_ass_subscript, variables: !680)
!678 = !DISubroutineType(types: !679)
!679 = !{!44, !374, !5, !5}
!680 = !{!681, !682, !683, !684, !685, !686, !687, !688, !689, !690}
!681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !677, file: !376, line: 1853, type: !374)
!682 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !677, file: !376, line: 1853, type: !5)
!683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !677, file: !376, line: 1853, type: !5)
!684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !677, file: !376, line: 1855, type: !374)
!685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !677, file: !376, line: 1856, type: !235)
!686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !677, file: !376, line: 1857, type: !236)
!687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !677, file: !376, line: 1858, type: !52)
!688 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !677, file: !376, line: 1859, type: !11)
!689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !677, file: !376, line: 1860, type: !44)
!690 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !691, file: !376, line: 1902, type: !5)
!691 = distinct !DILexicalBlock(scope: !692, file: !376, line: 1902, column: 12)
!692 = distinct !DILexicalBlock(scope: !693, file: !376, line: 1899, column: 27)
!693 = distinct !DILexicalBlock(scope: !677, file: !376, line: 1899, column: 9)
!694 = !DISubprogram(name: "pack_single", scope: !376, file: !376, line: 395, type: !695, isLocal: true, isDefinition: true, scopeLine: 396, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, %struct._object*, i8*, i64)* @pack_single, variables: !697)
!695 = !DISubroutineType(types: !696)
!696 = !{!44, !52, !5, !29, !11}
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !716, !720, !722, !725, !727, !730, !732, !735, !737, !740, !742, !745, !747}
!698 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !694, file: !376, line: 395, type: !52)
!699 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 2, scope: !694, file: !376, line: 395, type: !5)
!700 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 3, scope: !694, file: !376, line: 395, type: !29)
!701 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 4, scope: !694, file: !376, line: 395, type: !11)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "structobj", scope: !694, file: !376, line: 397, type: !5)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pack_into", scope: !694, file: !376, line: 397, type: !5)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !694, file: !376, line: 397, type: !5)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !694, file: !376, line: 398, type: !5)
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mview", scope: !694, file: !376, line: 398, type: !5)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "zero", scope: !694, file: !376, line: 398, type: !5)
!708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !694, file: !376, line: 399, type: !11)
!709 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nmemb", scope: !694, file: !376, line: 399, type: !11)
!710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !694, file: !376, line: 400, type: !44)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !694, file: !376, line: 401, type: !5)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !713, file: !376, line: 454, type: !5)
!713 = distinct !DILexicalBlock(scope: !714, file: !376, line: 454, column: 12)
!714 = distinct !DILexicalBlock(scope: !715, file: !376, line: 453, column: 26)
!715 = distinct !DILexicalBlock(scope: !694, file: !376, line: 453, column: 9)
!716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !717, file: !376, line: 461, type: !5)
!717 = distinct !DILexicalBlock(scope: !718, file: !376, line: 461, column: 12)
!718 = distinct !DILexicalBlock(scope: !719, file: !376, line: 460, column: 5)
!719 = distinct !DILexicalBlock(scope: !694, file: !376, line: 460, column: 5)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !721, file: !376, line: 462, type: !5)
!721 = distinct !DILexicalBlock(scope: !694, file: !376, line: 462, column: 8)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !723, file: !376, line: 462, type: !5)
!723 = distinct !DILexicalBlock(scope: !724, file: !376, line: 462, column: 96)
!724 = distinct !DILexicalBlock(scope: !721, file: !376, line: 462, column: 62)
!725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !726, file: !376, line: 464, type: !5)
!726 = distinct !DILexicalBlock(scope: !694, file: !376, line: 464, column: 8)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !728, file: !376, line: 464, type: !5)
!728 = distinct !DILexicalBlock(scope: !729, file: !376, line: 464, column: 101)
!729 = distinct !DILexicalBlock(scope: !726, file: !376, line: 464, column: 67)
!730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !731, file: !376, line: 465, type: !5)
!731 = distinct !DILexicalBlock(scope: !694, file: !376, line: 465, column: 8)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !733, file: !376, line: 465, type: !5)
!733 = distinct !DILexicalBlock(scope: !734, file: !376, line: 465, column: 96)
!734 = distinct !DILexicalBlock(scope: !731, file: !376, line: 465, column: 62)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !736, file: !376, line: 466, type: !5)
!736 = distinct !DILexicalBlock(scope: !694, file: !376, line: 466, column: 8)
!737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !738, file: !376, line: 466, type: !5)
!738 = distinct !DILexicalBlock(scope: !739, file: !376, line: 466, column: 97)
!739 = distinct !DILexicalBlock(scope: !736, file: !376, line: 466, column: 63)
!740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !741, file: !376, line: 467, type: !5)
!741 = distinct !DILexicalBlock(scope: !694, file: !376, line: 467, column: 8)
!742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !743, file: !376, line: 467, type: !5)
!743 = distinct !DILexicalBlock(scope: !744, file: !376, line: 467, column: 101)
!744 = distinct !DILexicalBlock(scope: !741, file: !376, line: 467, column: 67)
!745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !746, file: !376, line: 468, type: !5)
!746 = distinct !DILexicalBlock(scope: !694, file: !376, line: 468, column: 8)
!747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !748, file: !376, line: 468, type: !5)
!748 = distinct !DILexicalBlock(scope: !749, file: !376, line: 468, column: 98)
!749 = distinct !DILexicalBlock(scope: !746, file: !376, line: 468, column: 64)
!750 = !DISubprogram(name: "get_nmemb", scope: !376, file: !376, line: 292, type: !178, isLocal: true, isDefinition: true, scopeLine: 293, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @get_nmemb, variables: !751)
!751 = !{!752}
!752 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !750, file: !376, line: 292, type: !5)
!753 = !DISubprogram(name: "copy_buffer", scope: !376, file: !376, line: 537, type: !754, isLocal: true, isDefinition: true, scopeLine: 538, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @copy_buffer, variables: !756)
!754 = !DISubroutineType(types: !755)
!755 = !{!44, !235, !235}
!756 = !{!757, !758, !759}
!757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !753, file: !376, line: 537, type: !235)
!758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !753, file: !376, line: 537, type: !235)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !753, file: !376, line: 539, type: !52)
!760 = !DISubprogram(name: "cmp_structure", scope: !376, file: !376, line: 514, type: !754, isLocal: true, isDefinition: true, scopeLine: 515, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.bufferinfo*, %struct.bufferinfo*)* @cmp_structure, variables: !761)
!761 = !{!762, !763, !764, !765, !768}
!762 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !760, file: !376, line: 514, type: !235)
!763 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !760, file: !376, line: 514, type: !235)
!764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !760, file: !376, line: 516, type: !11)
!765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !766, file: !376, line: 518, type: !94)
!766 = distinct !DILexicalBlock(scope: !767, file: !376, line: 518, column: 24)
!767 = distinct !DILexicalBlock(scope: !760, file: !376, line: 518, column: 9)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !766, file: !376, line: 518, type: !94)
!769 = !DISubprogram(name: "copy_rec", scope: !376, file: !376, line: 473, type: !770, isLocal: true, isDefinition: true, scopeLine: 477, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64, i64, i8*, i64*, i64*, i8*, i64*, i64*, i8*)* @copy_rec, variables: !772)
!770 = !DISubroutineType(types: !771)
!771 = !{null, !551, !11, !11, !52, !551, !551, !52, !551, !551, !52}
!772 = !{!773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !789, !793, !797, !801}
!773 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 1, scope: !769, file: !376, line: 473, type: !551)
!774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 2, scope: !769, file: !376, line: 473, type: !11)
!775 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 3, scope: !769, file: !376, line: 473, type: !11)
!776 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dptr", arg: 4, scope: !769, file: !376, line: 474, type: !52)
!777 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dstrides", arg: 5, scope: !769, file: !376, line: 474, type: !551)
!778 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dsuboffsets", arg: 6, scope: !769, file: !376, line: 474, type: !551)
!779 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sptr", arg: 7, scope: !769, file: !376, line: 475, type: !52)
!780 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sstrides", arg: 8, scope: !769, file: !376, line: 475, type: !551)
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ssuboffsets", arg: 9, scope: !769, file: !376, line: 475, type: !551)
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mem", arg: 10, scope: !769, file: !376, line: 476, type: !52)
!783 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !769, file: !376, line: 478, type: !11)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !785, file: !376, line: 488, type: !52)
!785 = distinct !DILexicalBlock(scope: !786, file: !376, line: 487, column: 14)
!786 = distinct !DILexicalBlock(scope: !787, file: !376, line: 483, column: 13)
!787 = distinct !DILexicalBlock(scope: !788, file: !376, line: 482, column: 20)
!788 = distinct !DILexicalBlock(scope: !769, file: !376, line: 482, column: 9)
!789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xsptr", scope: !790, file: !376, line: 491, type: !52)
!790 = distinct !DILexicalBlock(scope: !791, file: !376, line: 490, column: 79)
!791 = distinct !DILexicalBlock(scope: !792, file: !376, line: 490, column: 13)
!792 = distinct !DILexicalBlock(scope: !785, file: !376, line: 490, column: 13)
!793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xdptr", scope: !794, file: !376, line: 495, type: !52)
!794 = distinct !DILexicalBlock(scope: !795, file: !376, line: 494, column: 79)
!795 = distinct !DILexicalBlock(scope: !796, file: !376, line: 494, column: 13)
!796 = distinct !DILexicalBlock(scope: !785, file: !376, line: 494, column: 13)
!797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xdptr", scope: !798, file: !376, line: 503, type: !52)
!798 = distinct !DILexicalBlock(scope: !799, file: !376, line: 502, column: 74)
!799 = distinct !DILexicalBlock(scope: !800, file: !376, line: 502, column: 5)
!800 = distinct !DILexicalBlock(scope: !769, file: !376, line: 502, column: 5)
!801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xsptr", scope: !798, file: !376, line: 504, type: !52)
!802 = !DISubprogram(name: "ndarray_hash", scope: !376, file: !376, line: 2586, type: !216, isLocal: true, isDefinition: true, scopeLine: 2587, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @ndarray_hash, variables: !803)
!803 = !{!804, !805, !808, !811, !812, !813}
!804 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !802, file: !376, line: 2586, type: !5)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !802, file: !376, line: 2588, type: !806)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64, align: 64)
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !802, file: !376, line: 2589, type: !809)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64, align: 64)
!810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !236)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !802, file: !376, line: 2590, type: !5)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hash", scope: !802, file: !376, line: 2591, type: !218)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !814, file: !376, line: 2608, type: !5)
!814 = distinct !DILexicalBlock(scope: !802, file: !376, line: 2608, column: 8)
!815 = !DISubprogram(name: "ndarray_tobytes", scope: !376, file: !376, line: 2143, type: !126, isLocal: true, isDefinition: true, scopeLine: 2144, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_tobytes, variables: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823}
!817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !815, file: !376, line: 2143, type: !5)
!818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !815, file: !376, line: 2143, type: !5)
!819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !815, file: !376, line: 2145, type: !395)
!820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !815, file: !376, line: 2146, type: !235)
!821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !815, file: !376, line: 2147, type: !236)
!822 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !815, file: !376, line: 2148, type: !5)
!823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !815, file: !376, line: 2149, type: !52)
!824 = !DISubprogram(name: "strides_from_shape", scope: !376, file: !376, line: 886, type: !825, isLocal: true, isDefinition: true, scopeLine: 887, flags: DIFlagPrototyped, isOptimized: true, function: i64* (%struct.ndbuf*, i32)* @strides_from_shape, variables: !829)
!825 = !DISubroutineType(types: !826)
!826 = !{!247, !827, !44}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64, align: 64)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !382)
!829 = !{!830, !831, !832, !833, !834}
!830 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndbuf", arg: 1, scope: !824, file: !376, line: 886, type: !827)
!831 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 2, scope: !824, file: !376, line: 886, type: !44)
!832 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !824, file: !376, line: 888, type: !809)
!833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !824, file: !376, line: 889, type: !247)
!834 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !824, file: !376, line: 889, type: !11)
!835 = !DISubprogram(name: "ndarray_getbuf", scope: !376, file: !376, line: 1416, type: !836, isLocal: true, isDefinition: true, scopeLine: 1417, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.NDArrayObject*, %struct.bufferinfo*, i32)* @ndarray_getbuf, variables: !838)
!836 = !DISubroutineType(types: !837)
!837 = !{!44, !374, !235, !44}
!838 = !{!839, !840, !841, !842, !843, !844}
!839 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !835, file: !376, line: 1416, type: !374)
!840 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 2, scope: !835, file: !376, line: 1416, type: !235)
!841 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 3, scope: !835, file: !376, line: 1416, type: !44)
!842 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !835, file: !376, line: 1418, type: !395)
!843 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !835, file: !376, line: 1419, type: !235)
!844 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "baseflags", scope: !835, file: !376, line: 1420, type: !44)
!845 = !DISubprogram(name: "ndarray_releasebuf", scope: !376, file: !376, line: 1521, type: !846, isLocal: true, isDefinition: true, scopeLine: 1522, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.NDArrayObject*, %struct.bufferinfo*)* @ndarray_releasebuf, variables: !848)
!846 = !DISubroutineType(types: !847)
!847 = !{!44, !374, !235}
!848 = !{!849, !850, !851}
!849 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !845, file: !376, line: 1521, type: !374)
!850 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 2, scope: !845, file: !376, line: 1521, type: !235)
!851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !852, file: !376, line: 1524, type: !395)
!852 = distinct !DILexicalBlock(scope: !853, file: !376, line: 1523, column: 82)
!853 = distinct !DILexicalBlock(scope: !845, file: !376, line: 1523, column: 9)
!854 = !DISubprogram(name: "ndarray_tolist", scope: !376, file: !376, line: 2137, type: !126, isLocal: true, isDefinition: true, scopeLine: 2138, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_tolist, variables: !855)
!855 = !{!856, !857}
!856 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !854, file: !376, line: 2137, type: !5)
!857 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !854, file: !376, line: 2137, type: !5)
!858 = !DISubprogram(name: "ndarray_as_list", scope: !376, file: !376, line: 658, type: !859, isLocal: true, isDefinition: true, scopeLine: 659, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*)* @ndarray_as_list, variables: !861)
!859 = !DISubroutineType(types: !860)
!860 = !{!5, !374}
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !872, !873, !874, !875, !876, !878, !880, !883, !885, !888, !890}
!862 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nd", arg: 1, scope: !858, file: !376, line: 658, type: !374)
!863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "structobj", scope: !858, file: !376, line: 660, type: !5)
!864 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unpack_from", scope: !858, file: !376, line: 660, type: !5)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lst", scope: !858, file: !376, line: 661, type: !5)
!866 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mview", scope: !858, file: !376, line: 661, type: !5)
!867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !858, file: !376, line: 662, type: !235)
!868 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shape", scope: !858, file: !376, line: 663, type: !247)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strides", scope: !858, file: !376, line: 664, type: !247)
!870 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "simple_shape", scope: !858, file: !376, line: 665, type: !871)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 64, align: 64, elements: !82)
!872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "simple_strides", scope: !858, file: !376, line: 666, type: !871)
!873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !858, file: !376, line: 667, type: !52)
!874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !858, file: !376, line: 668, type: !5)
!875 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !858, file: !376, line: 669, type: !52)
!876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !877, file: !376, line: 700, type: !5)
!877 = distinct !DILexicalBlock(scope: !858, file: !376, line: 700, column: 8)
!878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !879, file: !376, line: 723, type: !5)
!879 = distinct !DILexicalBlock(scope: !858, file: !376, line: 723, column: 8)
!880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !881, file: !376, line: 723, type: !5)
!881 = distinct !DILexicalBlock(scope: !882, file: !376, line: 723, column: 97)
!882 = distinct !DILexicalBlock(scope: !879, file: !376, line: 723, column: 63)
!883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !884, file: !376, line: 725, type: !5)
!884 = distinct !DILexicalBlock(scope: !858, file: !376, line: 725, column: 8)
!885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !886, file: !376, line: 725, type: !5)
!886 = distinct !DILexicalBlock(scope: !887, file: !376, line: 725, column: 103)
!887 = distinct !DILexicalBlock(scope: !884, file: !376, line: 725, column: 69)
!888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !889, file: !376, line: 726, type: !5)
!889 = distinct !DILexicalBlock(scope: !858, file: !376, line: 726, column: 8)
!890 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !891, file: !376, line: 726, type: !5)
!891 = distinct !DILexicalBlock(scope: !892, file: !376, line: 726, column: 101)
!892 = distinct !DILexicalBlock(scope: !889, file: !376, line: 726, column: 67)
!893 = !DISubprogram(name: "unpack_rec", scope: !376, file: !376, line: 610, type: !894, isLocal: true, isDefinition: true, scopeLine: 613, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*, %struct._object*, i8*, i64*, i64*, i64*, i64, i64)* @unpack_rec, variables: !896)
!894 = !DISubroutineType(types: !895)
!895 = !{!5, !5, !52, !5, !52, !551, !551, !551, !11, !11}
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !914, !916, !920}
!897 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "unpack_from", arg: 1, scope: !893, file: !376, line: 610, type: !5)
!898 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !893, file: !376, line: 610, type: !52)
!899 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mview", arg: 3, scope: !893, file: !376, line: 610, type: !5)
!900 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 4, scope: !893, file: !376, line: 610, type: !52)
!901 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 5, scope: !893, file: !376, line: 611, type: !551)
!902 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strides", arg: 6, scope: !893, file: !376, line: 611, type: !551)
!903 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "suboffsets", arg: 7, scope: !893, file: !376, line: 612, type: !551)
!904 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 8, scope: !893, file: !376, line: 612, type: !11)
!905 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 9, scope: !893, file: !376, line: 612, type: !11)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lst", scope: !893, file: !376, line: 614, type: !5)
!907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !893, file: !376, line: 614, type: !5)
!908 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !893, file: !376, line: 615, type: !11)
!909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !910, file: !376, line: 627, type: !5)
!910 = distinct !DILexicalBlock(scope: !911, file: !376, line: 626, column: 50)
!911 = distinct !DILexicalBlock(scope: !912, file: !376, line: 626, column: 13)
!912 = distinct !DILexicalBlock(scope: !913, file: !376, line: 621, column: 20)
!913 = distinct !DILexicalBlock(scope: !893, file: !376, line: 621, column: 9)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !915, file: !376, line: 629, type: !5)
!915 = distinct !DILexicalBlock(scope: !910, file: !376, line: 629, column: 16)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nextptr", scope: !917, file: !376, line: 640, type: !52)
!917 = distinct !DILexicalBlock(scope: !918, file: !376, line: 639, column: 53)
!918 = distinct !DILexicalBlock(scope: !919, file: !376, line: 639, column: 5)
!919 = distinct !DILexicalBlock(scope: !893, file: !376, line: 639, column: 5)
!920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !921, file: !376, line: 646, type: !5)
!921 = distinct !DILexicalBlock(scope: !922, file: !376, line: 646, column: 16)
!922 = distinct !DILexicalBlock(scope: !923, file: !376, line: 645, column: 30)
!923 = distinct !DILexicalBlock(scope: !917, file: !376, line: 645, column: 13)
!924 = !DISubprogram(name: "ndarray_push", scope: !376, file: !376, line: 1345, type: !135, isLocal: true, isDefinition: true, scopeLine: 1346, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @ndarray_push, variables: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932, !933, !934, !935}
!926 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !924, file: !376, line: 1345, type: !5)
!927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !924, file: !376, line: 1345, type: !5)
!928 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !924, file: !376, line: 1345, type: !5)
!929 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !924, file: !376, line: 1347, type: !374)
!930 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "items", scope: !924, file: !376, line: 1351, type: !5)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shape", scope: !924, file: !376, line: 1352, type: !5)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strides", scope: !924, file: !376, line: 1353, type: !5)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !924, file: !376, line: 1354, type: !5)
!934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !924, file: !376, line: 1355, type: !11)
!935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !924, file: !376, line: 1356, type: !44)
!936 = !DISubprogram(name: "ndarray_push_base", scope: !376, file: !376, line: 1263, type: !937, isLocal: true, isDefinition: true, scopeLine: 1266, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.NDArrayObject*, %struct._object*, %struct._object*, %struct._object*, i64, %struct._object*, i32)* @ndarray_push_base, variables: !939)
!937 = !DISubroutineType(types: !938)
!938 = !{!44, !374, !5, !5, !5, !11, !5, !44}
!939 = !{!940, !941, !942, !943, !944, !945, !946, !947}
!940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nd", arg: 1, scope: !936, file: !376, line: 1263, type: !374)
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "items", arg: 2, scope: !936, file: !376, line: 1263, type: !5)
!942 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 3, scope: !936, file: !376, line: 1264, type: !5)
!943 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strides", arg: 4, scope: !936, file: !376, line: 1264, type: !5)
!944 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 5, scope: !936, file: !376, line: 1265, type: !11)
!945 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 6, scope: !936, file: !376, line: 1265, type: !5)
!946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 7, scope: !936, file: !376, line: 1265, type: !44)
!947 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !936, file: !376, line: 1267, type: !395)
!948 = !DISubprogram(name: "init_ndbuf", scope: !376, file: !376, line: 1176, type: !949, isLocal: true, isDefinition: true, scopeLine: 1178, flags: DIFlagPrototyped, isOptimized: true, function: %struct.ndbuf* (%struct._object*, %struct._object*, %struct._object*, i64, %struct._object*, i32)* @init_ndbuf, variables: !951)
!949 = !DISubroutineType(types: !950)
!950 = !{!395, !5, !5, !5, !11, !5, !44}
!951 = !{!952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !966, !970, !972}
!952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "items", arg: 1, scope: !948, file: !376, line: 1176, type: !5)
!953 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 2, scope: !948, file: !376, line: 1176, type: !5)
!954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strides", arg: 3, scope: !948, file: !376, line: 1176, type: !5)
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 4, scope: !948, file: !376, line: 1177, type: !11)
!956 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 5, scope: !948, file: !376, line: 1177, type: !5)
!957 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 6, scope: !948, file: !376, line: 1177, type: !44)
!958 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !948, file: !376, line: 1179, type: !395)
!959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndim", scope: !948, file: !376, line: 1180, type: !11)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nitems", scope: !948, file: !376, line: 1181, type: !11)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemsize", scope: !948, file: !376, line: 1182, type: !11)
!962 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !963, file: !376, line: 1236, type: !5)
!963 = distinct !DILexicalBlock(scope: !964, file: !376, line: 1236, column: 12)
!964 = distinct !DILexicalBlock(scope: !965, file: !376, line: 1233, column: 22)
!965 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1233, column: 9)
!966 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !967, file: !376, line: 1242, type: !5)
!967 = distinct !DILexicalBlock(scope: !968, file: !376, line: 1242, column: 12)
!968 = distinct !DILexicalBlock(scope: !969, file: !376, line: 1241, column: 30)
!969 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1241, column: 9)
!970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !971, file: !376, line: 1252, type: !5)
!971 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1252, column: 8)
!972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !973, file: !376, line: 1256, type: !5)
!973 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1256, column: 8)
!974 = !DISubprogram(name: "get_itemsize", scope: !376, file: !376, line: 786, type: !178, isLocal: true, isDefinition: true, scopeLine: 787, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @get_itemsize, variables: !975)
!975 = !{!976, !977, !978, !979}
!976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 1, scope: !974, file: !376, line: 786, type: !5)
!977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !974, file: !376, line: 788, type: !5)
!978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemsize", scope: !974, file: !376, line: 789, type: !11)
!979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !980, file: !376, line: 795, type: !5)
!980 = distinct !DILexicalBlock(scope: !974, file: !376, line: 795, column: 8)
!981 = !DISubprogram(name: "ndbuf_new", scope: !376, file: !376, line: 109, type: !982, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: true, function: %struct.ndbuf* (i64, i64, i64, i32)* @ndbuf_new, variables: !984)
!982 = !DISubroutineType(types: !983)
!983 = !{!395, !11, !11, !11, !44}
!984 = !{!985, !986, !987, !988, !989, !990, !991}
!985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nitems", arg: 1, scope: !981, file: !376, line: 109, type: !11)
!986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 2, scope: !981, file: !376, line: 109, type: !11)
!987 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 3, scope: !981, file: !376, line: 109, type: !11)
!988 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 4, scope: !981, file: !376, line: 109, type: !44)
!989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !981, file: !376, line: 111, type: !395)
!990 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !981, file: !376, line: 112, type: !235)
!991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !981, file: !376, line: 113, type: !11)
!992 = !DISubprogram(name: "init_simple", scope: !376, file: !376, line: 822, type: !993, isLocal: true, isDefinition: true, scopeLine: 824, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ndbuf*, %struct._object*, %struct._object*, i64)* @init_simple, variables: !995)
!993 = !DISubroutineType(types: !994)
!994 = !{!44, !395, !5, !5, !11}
!995 = !{!996, !997, !998, !999, !1000, !1001, !1002, !1003}
!996 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndbuf", arg: 1, scope: !992, file: !376, line: 822, type: !395)
!997 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "items", arg: 2, scope: !992, file: !376, line: 822, type: !5)
!998 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 3, scope: !992, file: !376, line: 822, type: !5)
!999 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 4, scope: !992, file: !376, line: 823, type: !11)
!1000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mview", scope: !992, file: !376, line: 825, type: !5)
!1001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !992, file: !376, line: 826, type: !235)
!1002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !992, file: !376, line: 827, type: !44)
!1003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1004, file: !376, line: 834, type: !5)
!1004 = distinct !DILexicalBlock(scope: !992, file: !376, line: 834, column: 8)
!1005 = !DISubprogram(name: "pack_from_list", scope: !376, file: !376, line: 301, type: !1006, isLocal: true, isDefinition: true, scopeLine: 303, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*, i64)* @pack_from_list, variables: !1008)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!44, !5, !5, !5, !11}
!1008 = !{!1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1028, !1032, !1034, !1039, !1042, !1044, !1049, !1051, !1053}
!1009 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !1005, file: !376, line: 301, type: !5)
!1010 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "items", arg: 2, scope: !1005, file: !376, line: 301, type: !5)
!1011 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 3, scope: !1005, file: !376, line: 301, type: !5)
!1012 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 4, scope: !1005, file: !376, line: 302, type: !11)
!1013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "structobj", scope: !1005, file: !376, line: 304, type: !5)
!1014 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pack_into", scope: !1005, file: !376, line: 304, type: !5)
!1015 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !1005, file: !376, line: 305, type: !5)
!1016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1005, file: !376, line: 305, type: !5)
!1017 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1005, file: !376, line: 306, type: !5)
!1018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1005, file: !376, line: 306, type: !5)
!1019 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nitems", scope: !1005, file: !376, line: 307, type: !11)
!1020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nmemb", scope: !1005, file: !376, line: 308, type: !11)
!1021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1005, file: !376, line: 309, type: !11)
!1022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1005, file: !376, line: 309, type: !11)
!1023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1005, file: !376, line: 310, type: !44)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1025, file: !376, line: 325, type: !5)
!1025 = distinct !DILexicalBlock(scope: !1026, file: !376, line: 325, column: 12)
!1026 = distinct !DILexicalBlock(scope: !1027, file: !376, line: 324, column: 34)
!1027 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 324, column: 9)
!1028 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1029, file: !376, line: 332, type: !5)
!1029 = distinct !DILexicalBlock(scope: !1030, file: !376, line: 332, column: 12)
!1030 = distinct !DILexicalBlock(scope: !1031, file: !376, line: 331, column: 29)
!1031 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 331, column: 9)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1033, file: !376, line: 333, type: !5)
!1033 = distinct !DILexicalBlock(scope: !1030, file: !376, line: 333, column: 12)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1035, file: !376, line: 344, type: !5)
!1035 = distinct !DILexicalBlock(scope: !1036, file: !376, line: 344, column: 12)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !376, line: 338, column: 34)
!1037 = distinct !DILexicalBlock(scope: !1038, file: !376, line: 338, column: 5)
!1038 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 338, column: 5)
!1039 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1040, file: !376, line: 344, type: !5)
!1040 = distinct !DILexicalBlock(scope: !1041, file: !376, line: 344, column: 102)
!1041 = distinct !DILexicalBlock(scope: !1035, file: !376, line: 344, column: 68)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1043, file: !376, line: 376, type: !5)
!1043 = distinct !DILexicalBlock(scope: !1036, file: !376, line: 376, column: 12)
!1044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1045, file: !376, line: 383, type: !5)
!1045 = distinct !DILexicalBlock(scope: !1046, file: !376, line: 383, column: 12)
!1046 = distinct !DILexicalBlock(scope: !1047, file: !376, line: 381, column: 35)
!1047 = distinct !DILexicalBlock(scope: !1048, file: !376, line: 381, column: 5)
!1048 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 381, column: 5)
!1049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1050, file: !376, line: 385, type: !5)
!1050 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 385, column: 8)
!1051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1052, file: !376, line: 387, type: !5)
!1052 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 387, column: 8)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1054, file: !376, line: 388, type: !5)
!1054 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 388, column: 8)
!1055 = !DISubprogram(name: "get_format", scope: !376, file: !376, line: 801, type: !1056, isLocal: true, isDefinition: true, scopeLine: 802, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct._object*)* @get_format, variables: !1058)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!52, !5}
!1058 = !{!1059, !1060, !1061, !1062, !1066}
!1059 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "format", arg: 1, scope: !1055, file: !376, line: 801, type: !5)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1055, file: !376, line: 803, type: !5)
!1061 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1055, file: !376, line: 804, type: !52)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1063, file: !376, line: 812, type: !5)
!1063 = distinct !DILexicalBlock(scope: !1064, file: !376, line: 812, column: 12)
!1064 = distinct !DILexicalBlock(scope: !1065, file: !376, line: 810, column: 28)
!1065 = distinct !DILexicalBlock(scope: !1055, file: !376, line: 810, column: 9)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1067, file: !376, line: 816, type: !5)
!1067 = distinct !DILexicalBlock(scope: !1055, file: !376, line: 816, column: 8)
!1068 = !DISubprogram(name: "init_structure", scope: !376, file: !376, line: 1119, type: !993, isLocal: true, isDefinition: true, scopeLine: 1121, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ndbuf*, %struct._object*, %struct._object*, i64)* @init_structure, variables: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1074}
!1070 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndbuf", arg: 1, scope: !1068, file: !376, line: 1119, type: !395)
!1071 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 2, scope: !1068, file: !376, line: 1119, type: !5)
!1072 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strides", arg: 3, scope: !1068, file: !376, line: 1119, type: !5)
!1073 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 4, scope: !1068, file: !376, line: 1120, type: !11)
!1074 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1068, file: !376, line: 1122, type: !235)
!1075 = !DISubprogram(name: "seq_as_ssize_array", scope: !376, file: !376, line: 848, type: !1076, isLocal: true, isDefinition: true, scopeLine: 849, flags: DIFlagPrototyped, isOptimized: true, function: i64* (%struct._object*, i64, i32)* @seq_as_ssize_array, variables: !1078)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!247, !5, !11, !44}
!1078 = !{!1079, !1080, !1081, !1082, !1083, !1084, !1085}
!1079 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seq", arg: 1, scope: !1075, file: !376, line: 848, type: !5)
!1080 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !1075, file: !376, line: 848, type: !11)
!1081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "is_shape", arg: 3, scope: !1075, file: !376, line: 848, type: !44)
!1082 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !1075, file: !376, line: 850, type: !247)
!1083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1075, file: !376, line: 851, type: !11)
!1084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1075, file: !376, line: 851, type: !11)
!1085 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1086, file: !376, line: 860, type: !5)
!1086 = distinct !DILexicalBlock(scope: !1087, file: !376, line: 859, column: 31)
!1087 = distinct !DILexicalBlock(scope: !1088, file: !376, line: 859, column: 5)
!1088 = distinct !DILexicalBlock(scope: !1075, file: !376, line: 859, column: 5)
!1089 = !DISubprogram(name: "verify_structure", scope: !376, file: !376, line: 928, type: !1090, isLocal: true, isDefinition: true, scopeLine: 931, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64, i64, i64, i64*, i64*, i64)* @verify_structure, variables: !1092)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!44, !11, !11, !11, !551, !551, !11}
!1092 = !{!1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101}
!1093 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 1, scope: !1089, file: !376, line: 928, type: !11)
!1094 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemsize", arg: 2, scope: !1089, file: !376, line: 928, type: !11)
!1095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 3, scope: !1089, file: !376, line: 928, type: !11)
!1096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 4, scope: !1089, file: !376, line: 929, type: !551)
!1097 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "strides", arg: 5, scope: !1089, file: !376, line: 929, type: !551)
!1098 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 6, scope: !1089, file: !376, line: 930, type: !11)
!1099 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imin", scope: !1089, file: !376, line: 932, type: !11)
!1100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imax", scope: !1089, file: !376, line: 932, type: !11)
!1101 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1089, file: !376, line: 933, type: !11)
!1102 = !DISubprogram(name: "init_suboffsets", scope: !376, file: !376, line: 1029, type: !1103, isLocal: true, isDefinition: true, scopeLine: 1030, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.ndbuf*)* @init_suboffsets, variables: !1105)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!44, !395}
!1105 = !{!1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115}
!1106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndbuf", arg: 1, scope: !1102, file: !376, line: 1029, type: !395)
!1107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1102, file: !376, line: 1031, type: !235)
!1108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1102, file: !376, line: 1032, type: !11)
!1109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !1102, file: !376, line: 1032, type: !11)
!1110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imin", scope: !1102, file: !376, line: 1033, type: !11)
!1111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "suboffset0", scope: !1102, file: !376, line: 1033, type: !11)
!1112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "addsize", scope: !1102, file: !376, line: 1034, type: !11)
!1113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1102, file: !376, line: 1035, type: !11)
!1114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1102, file: !376, line: 1036, type: !52)
!1115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1116, file: !376, line: 1068, type: !11)
!1116 = distinct !DILexicalBlock(scope: !1117, file: !376, line: 1067, column: 36)
!1117 = distinct !DILexicalBlock(scope: !1118, file: !376, line: 1067, column: 13)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !376, line: 1064, column: 38)
!1119 = distinct !DILexicalBlock(scope: !1120, file: !376, line: 1064, column: 5)
!1120 = distinct !DILexicalBlock(scope: !1102, file: !376, line: 1064, column: 5)
!1121 = !DISubprogram(name: "ndbuf_push", scope: !376, file: !376, line: 178, type: !573, isLocal: true, isDefinition: true, scopeLine: 179, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.NDArrayObject*, %struct.ndbuf*)* @ndbuf_push, variables: !1122)
!1122 = !{!1123, !1124}
!1123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nd", arg: 1, scope: !1121, file: !376, line: 178, type: !374)
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "elt", arg: 2, scope: !1121, file: !376, line: 178, type: !395)
!1125 = !DISubprogram(name: "ndarray_pop", scope: !376, file: !376, line: 1387, type: !126, isLocal: true, isDefinition: true, scopeLine: 1388, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_pop, variables: !1126)
!1126 = !{!1127, !1128, !1129}
!1127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1125, file: !376, line: 1387, type: !5)
!1128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1125, file: !376, line: 1387, type: !5)
!1129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1125, file: !376, line: 1389, type: !374)
!1130 = !DISubprogram(name: "ndarray_add_suboffsets", scope: !376, file: !376, line: 2183, type: !126, isLocal: true, isDefinition: true, scopeLine: 2184, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_add_suboffsets, variables: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136}
!1132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1130, file: !376, line: 2183, type: !5)
!1133 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1130, file: !376, line: 2183, type: !5)
!1134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1130, file: !376, line: 2185, type: !374)
!1135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1130, file: !376, line: 2186, type: !235)
!1136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1130, file: !376, line: 2187, type: !11)
!1137 = !DISubprogram(name: "ndarray_memoryview_from_buffer", scope: !376, file: !376, line: 2217, type: !126, isLocal: true, isDefinition: true, scopeLine: 2218, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_memoryview_from_buffer, variables: !1138)
!1138 = !{!1139, !1140, !1141, !1142, !1143, !1144}
!1139 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1137, file: !376, line: 2217, type: !5)
!1140 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1137, file: !376, line: 2217, type: !5)
!1141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1137, file: !376, line: 2219, type: !806)
!1142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1137, file: !376, line: 2220, type: !809)
!1143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !1137, file: !376, line: 2221, type: !827)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1137, file: !376, line: 2227, type: !52)
!1145 = !DISubprogram(name: "ndarray_get_flags", scope: !376, file: !376, line: 1991, type: !1146, isLocal: true, isDefinition: true, scopeLine: 1992, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_flags, variables: !1148)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!5, !374, !4}
!1148 = !{!1149, !1150}
!1149 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1145, file: !376, line: 1991, type: !374)
!1150 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1145, file: !376, line: 1991, type: !4)
!1151 = !DISubprogram(name: "ndarray_get_offset", scope: !376, file: !376, line: 1997, type: !1146, isLocal: true, isDefinition: true, scopeLine: 1998, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_offset, variables: !1152)
!1152 = !{!1153, !1154, !1155}
!1153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1151, file: !376, line: 1997, type: !374)
!1154 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1151, file: !376, line: 1997, type: !4)
!1155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ndbuf", scope: !1151, file: !376, line: 1999, type: !395)
!1156 = !DISubprogram(name: "ndarray_get_obj", scope: !376, file: !376, line: 2004, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2005, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_obj, variables: !1157)
!1157 = !{!1158, !1159, !1160}
!1158 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1156, file: !376, line: 2004, type: !374)
!1159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1156, file: !376, line: 2004, type: !4)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1156, file: !376, line: 2006, type: !235)
!1161 = !DISubprogram(name: "ndarray_get_nbytes", scope: !376, file: !376, line: 2016, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2017, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_nbytes, variables: !1162)
!1162 = !{!1163, !1164, !1165}
!1163 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1161, file: !376, line: 2016, type: !374)
!1164 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1161, file: !376, line: 2016, type: !4)
!1165 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1161, file: !376, line: 2018, type: !235)
!1166 = !DISubprogram(name: "ndarray_get_readonly", scope: !376, file: !376, line: 2023, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2024, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_readonly, variables: !1167)
!1167 = !{!1168, !1169, !1170}
!1168 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1166, file: !376, line: 2023, type: !374)
!1169 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1166, file: !376, line: 2023, type: !4)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1166, file: !376, line: 2025, type: !235)
!1171 = !DISubprogram(name: "ndarray_get_itemsize", scope: !376, file: !376, line: 2030, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2031, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_itemsize, variables: !1172)
!1172 = !{!1173, !1174, !1175}
!1173 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1171, file: !376, line: 2030, type: !374)
!1174 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1171, file: !376, line: 2030, type: !4)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1171, file: !376, line: 2032, type: !235)
!1176 = !DISubprogram(name: "ndarray_get_format", scope: !376, file: !376, line: 2037, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2038, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_format, variables: !1177)
!1177 = !{!1178, !1179, !1180, !1181}
!1178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1176, file: !376, line: 2037, type: !374)
!1179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1176, file: !376, line: 2037, type: !4)
!1180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1176, file: !376, line: 2039, type: !235)
!1181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1176, file: !376, line: 2040, type: !52)
!1182 = !DISubprogram(name: "ndarray_get_ndim", scope: !376, file: !376, line: 2045, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2046, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_ndim, variables: !1183)
!1183 = !{!1184, !1185, !1186}
!1184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1182, file: !376, line: 2045, type: !374)
!1185 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1182, file: !376, line: 2045, type: !4)
!1186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1182, file: !376, line: 2047, type: !235)
!1187 = !DISubprogram(name: "ndarray_get_shape", scope: !376, file: !376, line: 2052, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2053, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_shape, variables: !1188)
!1188 = !{!1189, !1190, !1191}
!1189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1187, file: !376, line: 2052, type: !374)
!1190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1187, file: !376, line: 2052, type: !4)
!1191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1187, file: !376, line: 2054, type: !235)
!1192 = !DISubprogram(name: "ssize_array_as_tuple", scope: !376, file: !376, line: 1966, type: !1193, isLocal: true, isDefinition: true, scopeLine: 1967, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i64*, i64)* @ssize_array_as_tuple, variables: !1195)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!5, !247, !11}
!1195 = !{!1196, !1197, !1198, !1199, !1200, !1201}
!1196 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "array", arg: 1, scope: !1192, file: !376, line: 1966, type: !247)
!1197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !1192, file: !376, line: 1966, type: !11)
!1198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !1192, file: !376, line: 1968, type: !5)
!1199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1192, file: !376, line: 1968, type: !5)
!1200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1192, file: !376, line: 1969, type: !11)
!1201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1202, file: !376, line: 1981, type: !5)
!1202 = distinct !DILexicalBlock(scope: !1203, file: !376, line: 1981, column: 16)
!1203 = distinct !DILexicalBlock(scope: !1204, file: !376, line: 1980, column: 30)
!1204 = distinct !DILexicalBlock(scope: !1205, file: !376, line: 1980, column: 13)
!1205 = distinct !DILexicalBlock(scope: !1206, file: !376, line: 1978, column: 31)
!1206 = distinct !DILexicalBlock(scope: !1207, file: !376, line: 1978, column: 5)
!1207 = distinct !DILexicalBlock(scope: !1192, file: !376, line: 1978, column: 5)
!1208 = !DISubprogram(name: "ndarray_get_strides", scope: !376, file: !376, line: 2059, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2060, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_strides, variables: !1209)
!1209 = !{!1210, !1211, !1212}
!1210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1208, file: !376, line: 2059, type: !374)
!1211 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1208, file: !376, line: 2059, type: !4)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1208, file: !376, line: 2061, type: !235)
!1213 = !DISubprogram(name: "ndarray_get_suboffsets", scope: !376, file: !376, line: 2066, type: !1146, isLocal: true, isDefinition: true, scopeLine: 2067, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.NDArrayObject*, i8*)* @ndarray_get_suboffsets, variables: !1214)
!1214 = !{!1215, !1216, !1217}
!1215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1213, file: !376, line: 2066, type: !374)
!1216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !1213, file: !376, line: 2066, type: !4)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1213, file: !376, line: 2068, type: !235)
!1218 = !DISubprogram(name: "ndarray_c_contig", scope: !376, file: !376, line: 2073, type: !126, isLocal: true, isDefinition: true, scopeLine: 2074, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_c_contig, variables: !1219)
!1219 = !{!1220, !1221, !1222, !1223}
!1220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1218, file: !376, line: 2073, type: !5)
!1221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1218, file: !376, line: 2073, type: !5)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1218, file: !376, line: 2075, type: !374)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1218, file: !376, line: 2076, type: !44)
!1224 = !DISubprogram(name: "ndarray_fortran_contig", scope: !376, file: !376, line: 2087, type: !126, isLocal: true, isDefinition: true, scopeLine: 2088, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_fortran_contig, variables: !1225)
!1225 = !{!1226, !1227, !1228, !1229}
!1226 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1224, file: !376, line: 2087, type: !5)
!1227 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1224, file: !376, line: 2087, type: !5)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1224, file: !376, line: 2089, type: !374)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1224, file: !376, line: 2090, type: !44)
!1230 = !DISubprogram(name: "ndarray_contig", scope: !376, file: !376, line: 2101, type: !126, isLocal: true, isDefinition: true, scopeLine: 2102, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @ndarray_contig, variables: !1231)
!1231 = !{!1232, !1233, !1234, !1235}
!1232 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1230, file: !376, line: 2101, type: !5)
!1233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dummy", arg: 2, scope: !1230, file: !376, line: 2101, type: !5)
!1234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1230, file: !376, line: 2103, type: !374)
!1235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1230, file: !376, line: 2104, type: !44)
!1236 = !DISubprogram(name: "ndarray_init", scope: !376, file: !376, line: 1279, type: !211, isLocal: true, isDefinition: true, scopeLine: 1280, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @ndarray_init, variables: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248}
!1238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1236, file: !376, line: 1279, type: !5)
!1239 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1236, file: !376, line: 1279, type: !5)
!1240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1236, file: !376, line: 1279, type: !5)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1236, file: !376, line: 1281, type: !374)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1236, file: !376, line: 1285, type: !5)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shape", scope: !1236, file: !376, line: 1286, type: !5)
!1244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "strides", scope: !1236, file: !376, line: 1287, type: !5)
!1245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !1236, file: !376, line: 1288, type: !11)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "format", scope: !1236, file: !376, line: 1289, type: !5)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flags", scope: !1236, file: !376, line: 1290, type: !44)
!1248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "getbuf", scope: !1236, file: !376, line: 1292, type: !44)
!1249 = !DISubprogram(name: "ndarray_new", scope: !376, file: !376, line: 208, type: !1250, isLocal: true, isDefinition: true, scopeLine: 209, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @ndarray_new, variables: !1254)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!5, !1252, !5, !5}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !7, line: 422, baseType: !20)
!1254 = !{!1255, !1256, !1257, !1258}
!1255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1249, file: !376, line: 208, type: !1252)
!1256 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1249, file: !376, line: 208, type: !5)
!1257 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1249, file: !376, line: 208, type: !5)
!1258 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nd", scope: !1249, file: !376, line: 210, type: !374)
!1259 = !DISubprogram(name: "staticarray_dealloc", scope: !376, file: !376, line: 2716, type: !1260, isLocal: true, isDefinition: true, scopeLine: 2717, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.StaticArrayObject*)* @staticarray_dealloc, variables: !1262)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{null, !404}
!1262 = !{!1263}
!1263 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1259, file: !376, line: 2716, type: !404)
!1264 = !DISubprogram(name: "staticarray_getbuf", scope: !376, file: !376, line: 2724, type: !1265, isLocal: true, isDefinition: true, scopeLine: 2725, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.StaticArrayObject*, %struct.bufferinfo*, i32)* @staticarray_getbuf, variables: !1267)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!44, !404, !235, !44}
!1267 = !{!1268, !1269, !1270}
!1268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1264, file: !376, line: 2724, type: !404)
!1269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 2, scope: !1264, file: !376, line: 2724, type: !235)
!1270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 3, scope: !1264, file: !376, line: 2724, type: !44)
!1271 = !DISubprogram(name: "staticarray_init", scope: !376, file: !376, line: 2700, type: !211, isLocal: true, isDefinition: true, scopeLine: 2701, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @staticarray_init, variables: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1277}
!1273 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1271, file: !376, line: 2700, type: !5)
!1274 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1271, file: !376, line: 2700, type: !5)
!1275 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1271, file: !376, line: 2700, type: !5)
!1276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !1271, file: !376, line: 2702, type: !404)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "legacy_mode", scope: !1271, file: !376, line: 2706, type: !5)
!1278 = !DISubprogram(name: "staticarray_new", scope: !376, file: !376, line: 2694, type: !1250, isLocal: true, isDefinition: true, scopeLine: 2695, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @staticarray_new, variables: !1279)
!1279 = !{!1280, !1281, !1282}
!1280 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1278, file: !376, line: 2694, type: !1252)
!1281 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1278, file: !376, line: 2694, type: !5)
!1282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1278, file: !376, line: 2694, type: !5)
!1283 = !{!1284, !1285, !1286, !1287, !1288, !1311, !1315, !1316, !1317, !1318, !1319, !1323, !1325, !1329, !1330, !1331, !1332, !1333, !1334, !1339, !1341, !1342, !1343, !1344, !1348, !1349, !1350, !1354}
!1284 = !DIGlobalVariable(name: "structmodule", scope: !0, file: !376, line: 11, type: !5, isLocal: false, isDefinition: true, variable: %struct._object** @structmodule)
!1285 = !DIGlobalVariable(name: "Struct", scope: !0, file: !376, line: 12, type: !5, isLocal: false, isDefinition: true, variable: %struct._object** @Struct)
!1286 = !DIGlobalVariable(name: "calcsize", scope: !0, file: !376, line: 13, type: !5, isLocal: false, isDefinition: true, variable: %struct._object** @calcsize)
!1287 = !DIGlobalVariable(name: "simple_format", scope: !0, file: !376, line: 17, type: !5, isLocal: false, isDefinition: true, variable: %struct._object** @simple_format)
!1288 = !DIGlobalVariable(name: "_testbuffermodule", scope: !0, file: !376, line: 2797, type: !1289, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @_testbuffermodule)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !1290, line: 47, size: 832, align: 64, elements: !1291)
!1290 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1291 = !{!1292, !1301, !1302, !1303, !1304, !1307, !1308, !1309, !1310}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !1289, file: !1290, line: 48, baseType: !1293, size: 320, align: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !1290, line: 38, baseType: !1294)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !1290, line: 33, size: 320, align: 64, elements: !1295)
!1295 = !{!1296, !1297, !1299, !1300}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1294, file: !1290, line: 34, baseType: !6, size: 128, align: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !1294, file: !1290, line: 35, baseType: !1298, size: 64, align: 64, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !1294, file: !1290, line: 36, baseType: !11, size: 64, align: 64, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !1294, file: !1290, line: 37, baseType: !5, size: 64, align: 64, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !1289, file: !1290, line: 49, baseType: !29, size: 64, align: 64, offset: 320)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !1289, file: !1290, line: 50, baseType: !29, size: 64, align: 64, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1289, file: !1290, line: 51, baseType: !11, size: 64, align: 64, offset: 448)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !1289, file: !1290, line: 52, baseType: !1305, size: 64, align: 64, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64, align: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !281, line: 47, baseType: !280)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !1289, file: !1290, line: 53, baseType: !142, size: 64, align: 64, offset: 576)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !1289, file: !1290, line: 54, baseType: !259, size: 64, align: 64, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !1289, file: !1290, line: 55, baseType: !142, size: 64, align: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !1289, file: !1290, line: 56, baseType: !329, size: 64, align: 64, offset: 768)
!1311 = !DIGlobalVariable(name: "_testbuffer_functions", scope: !0, file: !376, line: 2786, type: !1312, isLocal: true, isDefinition: true, variable: [8 x %struct.PyMethodDef]* @_testbuffer_functions)
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !280, size: 2048, align: 64, elements: !1313)
!1313 = !{!1314}
!1314 = !DISubrange(count: 8)
!1315 = !DIGlobalVariable(name: "NDArray_Type", scope: !0, file: !376, line: 2624, type: !1253, isLocal: true, isDefinition: true, variable: %struct._typeobject* @NDArray_Type)
!1316 = !DIGlobalVariable(name: "ndarray_as_sequence", scope: !0, file: !376, line: 1953, type: !172, isLocal: true, isDefinition: true, variable: %struct.PySequenceMethods* @ndarray_as_sequence)
!1317 = !DIGlobalVariable(name: "ndarray_as_mapping", scope: !0, file: !376, line: 1947, type: !203, isLocal: true, isDefinition: true, variable: %struct.PyMappingMethods* @ndarray_as_mapping)
!1318 = !DIGlobalVariable(name: "ndarray_as_buffer", scope: !0, file: !376, line: 1532, type: !227, isLocal: true, isDefinition: true, variable: %struct.PyBufferProcs* @ndarray_as_buffer)
!1319 = !DIGlobalVariable(name: "ndarray_methods", scope: !0, file: !376, line: 2613, type: !1320, isLocal: true, isDefinition: true, variable: [7 x %struct.PyMethodDef]* @ndarray_methods)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1306, size: 1792, align: 64, elements: !1321)
!1321 = !{!1322}
!1322 = !DISubrange(count: 7)
!1323 = !DIGlobalVariable(name: "kwlist", scope: !924, file: !376, line: 1348, type: !1324, isLocal: true, isDefinition: true, variable: [7 x i8*]* @ndarray_push.kwlist)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 448, align: 64, elements: !1321)
!1325 = !DIGlobalVariable(name: "format", scope: !1137, file: !376, line: 2222, type: !1326, isLocal: true, isDefinition: true, variable: [129 x i8]* @ndarray_memoryview_from_buffer.format)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 1032, align: 8, elements: !1327)
!1327 = !{!1328}
!1328 = !DISubrange(count: 129)
!1329 = !DIGlobalVariable(name: "shape", scope: !1137, file: !376, line: 2223, type: !440, isLocal: true, isDefinition: true, variable: [128 x i64]* @ndarray_memoryview_from_buffer.shape)
!1330 = !DIGlobalVariable(name: "strides", scope: !1137, file: !376, line: 2224, type: !440, isLocal: true, isDefinition: true, variable: [128 x i64]* @ndarray_memoryview_from_buffer.strides)
!1331 = !DIGlobalVariable(name: "suboffsets", scope: !1137, file: !376, line: 2225, type: !440, isLocal: true, isDefinition: true, variable: [128 x i64]* @ndarray_memoryview_from_buffer.suboffsets)
!1332 = !DIGlobalVariable(name: "info", scope: !1137, file: !376, line: 2226, type: !236, isLocal: true, isDefinition: true, variable: %struct.bufferinfo* @ndarray_memoryview_from_buffer.info)
!1333 = !DIGlobalVariable(name: "infobuf", scope: !0, file: !376, line: 2215, type: !52, isLocal: true, isDefinition: true, variable: i8** @infobuf)
!1334 = !DIGlobalVariable(name: "ndarray_getset", scope: !0, file: !376, line: 2115, type: !1335, isLocal: true, isDefinition: true, variable: [15 x %struct.PyGetSetDef]* @ndarray_getset)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1336, size: 4800, align: 64, elements: !1337)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !294, line: 17, baseType: !293)
!1337 = !{!1338}
!1338 = !DISubrange(count: 15)
!1339 = !DIGlobalVariable(name: "kwlist", scope: !1236, file: !376, line: 1282, type: !1340, isLocal: true, isDefinition: true, variable: [8 x i8*]* @ndarray_init.kwlist)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 512, align: 64, elements: !1313)
!1341 = !DIGlobalVariable(name: "StaticArray_Type", scope: !0, file: !376, line: 2744, type: !1253, isLocal: true, isDefinition: true, variable: %struct._typeobject* @StaticArray_Type)
!1342 = !DIGlobalVariable(name: "staticarray_as_buffer", scope: !0, file: !376, line: 2739, type: !227, isLocal: true, isDefinition: true, variable: %struct.PyBufferProcs* @staticarray_as_buffer)
!1343 = !DIGlobalVariable(name: "static_buffer", scope: !0, file: !376, line: 2679, type: !236, isLocal: true, isDefinition: true, variable: %struct.bufferinfo* @static_buffer)
!1344 = !DIGlobalVariable(name: "static_mem", scope: !0, file: !376, line: 2676, type: !1345, isLocal: true, isDefinition: true, variable: [12 x i8]* @static_mem)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 96, align: 8, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 12)
!1348 = !DIGlobalVariable(name: "static_shape", scope: !0, file: !376, line: 2677, type: !871, isLocal: true, isDefinition: true, variable: [1 x i64]* @static_shape)
!1349 = !DIGlobalVariable(name: "static_strides", scope: !0, file: !376, line: 2678, type: !871, isLocal: true, isDefinition: true, variable: [1 x i64]* @static_strides)
!1350 = !DIGlobalVariable(name: "kwlist", scope: !1271, file: !376, line: 2703, type: !1351, isLocal: true, isDefinition: true, variable: [2 x i8*]* @staticarray_init.kwlist)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 128, align: 64, elements: !1352)
!1352 = !{!1353}
!1353 = !DISubrange(count: 2)
!1354 = !DIGlobalVariable(name: "simple_fmt", scope: !0, file: !376, line: 16, type: !29, isLocal: true, isDefinition: true, variable: i8** @simple_fmt)
!1355 = !{i32 2, !"Dwarf Version", i32 4}
!1356 = !{i32 2, !"Debug Info Version", i32 3}
!1357 = !{i32 1, !"PIC Level", i32 2}
!1358 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1359 = !DILocation(line: 2813, column: 5, scope: !411)
!1360 = !DIExpression()
!1361 = !DILocation(line: 2813, column: 15, scope: !411)
!1362 = !DILocation(line: 2815, column: 9, scope: !411)
!1363 = !DILocation(line: 2815, column: 7, scope: !411)
!1364 = !{!1365, !1365, i64 0}
!1365 = !{!"any pointer", !1366, i64 0}
!1366 = !{!"omnipotent char", !1367, i64 0}
!1367 = !{!"Simple C/C++ TBAA"}
!1368 = !DILocation(line: 2816, column: 9, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !411, file: !376, line: 2816, column: 9)
!1370 = !DILocation(line: 2816, column: 11, scope: !1369)
!1371 = !DILocation(line: 2816, column: 9, scope: !411)
!1372 = !DILocation(line: 2817, column: 9, scope: !1369)
!1373 = !DILocation(line: 2819, column: 45, scope: !411)
!1374 = !{!1375, !1365, i64 8}
!1375 = !{!"_object", !1376, i64 0, !1365, i64 8}
!1376 = !{!"long", !1366, i64 0}
!1377 = !DILocation(line: 2820, column: 47, scope: !411)
!1378 = !{!1375, !1376, i64 0}
!1379 = !DILocation(line: 2821, column: 24, scope: !411)
!1380 = !DILocation(line: 2821, column: 5, scope: !411)
!1381 = !DILocation(line: 2823, column: 49, scope: !411)
!1382 = !DILocation(line: 2824, column: 51, scope: !411)
!1383 = !DILocation(line: 2825, column: 24, scope: !411)
!1384 = !DILocation(line: 2825, column: 5, scope: !411)
!1385 = !DILocation(line: 2827, column: 20, scope: !411)
!1386 = !DILocation(line: 2827, column: 18, scope: !411)
!1387 = !DILocation(line: 2828, column: 9, scope: !1388)
!1388 = distinct !DILexicalBlock(scope: !411, file: !376, line: 2828, column: 9)
!1389 = !DILocation(line: 2828, column: 22, scope: !1388)
!1390 = !DILocation(line: 2828, column: 9, scope: !411)
!1391 = !DILocation(line: 2829, column: 9, scope: !1388)
!1392 = !DILocation(line: 2831, column: 37, scope: !411)
!1393 = !DILocation(line: 2831, column: 14, scope: !411)
!1394 = !DILocation(line: 2831, column: 12, scope: !411)
!1395 = !DILocation(line: 2832, column: 39, scope: !411)
!1396 = !DILocation(line: 2832, column: 16, scope: !411)
!1397 = !DILocation(line: 2832, column: 14, scope: !411)
!1398 = !DILocation(line: 2833, column: 9, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !411, file: !376, line: 2833, column: 9)
!1400 = !DILocation(line: 2833, column: 16, scope: !1399)
!1401 = !DILocation(line: 2833, column: 30, scope: !1399)
!1402 = !DILocation(line: 2833, column: 33, scope: !1403)
!1403 = !DILexicalBlockFile(scope: !1399, file: !376, discriminator: 1)
!1404 = !DILocation(line: 2833, column: 42, scope: !1399)
!1405 = !DILocation(line: 2833, column: 9, scope: !411)
!1406 = !DILocation(line: 2834, column: 9, scope: !1399)
!1407 = !DILocation(line: 2836, column: 42, scope: !411)
!1408 = !DILocation(line: 2836, column: 21, scope: !411)
!1409 = !DILocation(line: 2836, column: 19, scope: !411)
!1410 = !DILocation(line: 2837, column: 9, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !411, file: !376, line: 2837, column: 9)
!1412 = !DILocation(line: 2837, column: 23, scope: !1411)
!1413 = !DILocation(line: 2837, column: 9, scope: !411)
!1414 = !DILocation(line: 2838, column: 9, scope: !1411)
!1415 = !DILocation(line: 2840, column: 29, scope: !411)
!1416 = !DILocation(line: 2840, column: 5, scope: !411)
!1417 = !DILocation(line: 2841, column: 29, scope: !411)
!1418 = !DILocation(line: 2841, column: 5, scope: !411)
!1419 = !DILocation(line: 2842, column: 29, scope: !411)
!1420 = !DILocation(line: 2842, column: 5, scope: !411)
!1421 = !DILocation(line: 2843, column: 29, scope: !411)
!1422 = !DILocation(line: 2843, column: 5, scope: !411)
!1423 = !DILocation(line: 2844, column: 29, scope: !411)
!1424 = !DILocation(line: 2844, column: 5, scope: !411)
!1425 = !DILocation(line: 2845, column: 29, scope: !411)
!1426 = !DILocation(line: 2845, column: 5, scope: !411)
!1427 = !DILocation(line: 2846, column: 29, scope: !411)
!1428 = !DILocation(line: 2846, column: 5, scope: !411)
!1429 = !DILocation(line: 2847, column: 29, scope: !411)
!1430 = !DILocation(line: 2847, column: 5, scope: !411)
!1431 = !DILocation(line: 2848, column: 29, scope: !411)
!1432 = !DILocation(line: 2848, column: 5, scope: !411)
!1433 = !DILocation(line: 2850, column: 29, scope: !411)
!1434 = !DILocation(line: 2850, column: 5, scope: !411)
!1435 = !DILocation(line: 2851, column: 29, scope: !411)
!1436 = !DILocation(line: 2851, column: 5, scope: !411)
!1437 = !DILocation(line: 2852, column: 29, scope: !411)
!1438 = !DILocation(line: 2852, column: 5, scope: !411)
!1439 = !DILocation(line: 2853, column: 29, scope: !411)
!1440 = !DILocation(line: 2853, column: 5, scope: !411)
!1441 = !DILocation(line: 2854, column: 29, scope: !411)
!1442 = !DILocation(line: 2854, column: 5, scope: !411)
!1443 = !DILocation(line: 2855, column: 29, scope: !411)
!1444 = !DILocation(line: 2855, column: 5, scope: !411)
!1445 = !DILocation(line: 2856, column: 29, scope: !411)
!1446 = !DILocation(line: 2856, column: 5, scope: !411)
!1447 = !DILocation(line: 2857, column: 29, scope: !411)
!1448 = !DILocation(line: 2857, column: 5, scope: !411)
!1449 = !DILocation(line: 2858, column: 29, scope: !411)
!1450 = !DILocation(line: 2858, column: 5, scope: !411)
!1451 = !DILocation(line: 2859, column: 29, scope: !411)
!1452 = !DILocation(line: 2859, column: 5, scope: !411)
!1453 = !DILocation(line: 2860, column: 29, scope: !411)
!1454 = !DILocation(line: 2860, column: 5, scope: !411)
!1455 = !DILocation(line: 2861, column: 29, scope: !411)
!1456 = !DILocation(line: 2861, column: 5, scope: !411)
!1457 = !DILocation(line: 2862, column: 29, scope: !411)
!1458 = !DILocation(line: 2862, column: 5, scope: !411)
!1459 = !DILocation(line: 2863, column: 29, scope: !411)
!1460 = !DILocation(line: 2863, column: 5, scope: !411)
!1461 = !DILocation(line: 2864, column: 29, scope: !411)
!1462 = !DILocation(line: 2864, column: 5, scope: !411)
!1463 = !DILocation(line: 2865, column: 29, scope: !411)
!1464 = !DILocation(line: 2865, column: 5, scope: !411)
!1465 = !DILocation(line: 2866, column: 29, scope: !411)
!1466 = !DILocation(line: 2866, column: 5, scope: !411)
!1467 = !DILocation(line: 2868, column: 29, scope: !411)
!1468 = !DILocation(line: 2868, column: 5, scope: !411)
!1469 = !DILocation(line: 2869, column: 29, scope: !411)
!1470 = !DILocation(line: 2869, column: 5, scope: !411)
!1471 = !DILocation(line: 2871, column: 12, scope: !411)
!1472 = !DILocation(line: 2871, column: 5, scope: !411)
!1473 = !DILocation(line: 2872, column: 1, scope: !411)
!1474 = !DILocation(line: 1910, column: 25, scope: !416)
!1475 = !DILocation(line: 1910, column: 41, scope: !416)
!1476 = !DILocation(line: 1912, column: 5, scope: !416)
!1477 = !DILocation(line: 1912, column: 15, scope: !416)
!1478 = !DILocation(line: 1912, column: 21, scope: !416)
!1479 = !DILocation(line: 1912, column: 27, scope: !416)
!1480 = !DILocation(line: 1913, column: 5, scope: !416)
!1481 = !DILocation(line: 1913, column: 16, scope: !416)
!1482 = !DILocation(line: 1914, column: 5, scope: !416)
!1483 = !DILocation(line: 1914, column: 16, scope: !416)
!1484 = !DILocation(line: 1914, column: 19, scope: !416)
!1485 = !DILocation(line: 1916, column: 34, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !416, file: !376, line: 1916, column: 9)
!1487 = !DILocation(line: 1916, column: 10, scope: !1486)
!1488 = !DILocation(line: 1916, column: 9, scope: !416)
!1489 = !DILocation(line: 1917, column: 9, scope: !1490)
!1490 = distinct !DILexicalBlock(scope: !1486, file: !376, line: 1916, column: 59)
!1491 = !DILocation(line: 1919, column: 25, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !416, file: !376, line: 1919, column: 9)
!1493 = !DILocation(line: 1919, column: 32, scope: !1492)
!1494 = !DILocation(line: 1919, column: 41, scope: !1492)
!1495 = !DILocation(line: 1919, column: 9, scope: !416)
!1496 = !DILocation(line: 1920, column: 25, scope: !1497)
!1497 = distinct !DILexicalBlock(scope: !1492, file: !376, line: 1919, column: 60)
!1498 = !DILocation(line: 1920, column: 9, scope: !1497)
!1499 = !DILocation(line: 1922, column: 9, scope: !1497)
!1500 = !DILocation(line: 1924, column: 30, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !416, file: !376, line: 1924, column: 9)
!1502 = !DILocation(line: 1924, column: 35, scope: !1501)
!1503 = !{!1376, !1376, i64 0}
!1504 = !DILocation(line: 1924, column: 41, scope: !1501)
!1505 = !DILocation(line: 1924, column: 48, scope: !1501)
!1506 = !DILocation(line: 1924, column: 55, scope: !1501)
!1507 = !DILocation(line: 1924, column: 62, scope: !1501)
!1508 = !DILocation(line: 1924, column: 9, scope: !1501)
!1509 = !DILocation(line: 1924, column: 68, scope: !1501)
!1510 = !DILocation(line: 1924, column: 9, scope: !416)
!1511 = !DILocation(line: 1925, column: 9, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1501, file: !376, line: 1924, column: 73)
!1513 = !DILocation(line: 1928, column: 11, scope: !416)
!1514 = !DILocation(line: 1928, column: 9, scope: !416)
!1515 = !DILocation(line: 1929, column: 9, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !416, file: !376, line: 1929, column: 9)
!1517 = !DILocation(line: 1929, column: 13, scope: !1516)
!1518 = !DILocation(line: 1929, column: 9, scope: !416)
!1519 = !DILocation(line: 1930, column: 9, scope: !1516)
!1520 = !DILocation(line: 1932, column: 12, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !416, file: !376, line: 1932, column: 5)
!1522 = !DILocation(line: 1932, column: 10, scope: !1521)
!1523 = !DILocation(line: 1932, column: 17, scope: !1524)
!1524 = !DILexicalBlockFile(scope: !1525, file: !376, discriminator: 2)
!1525 = !DILexicalBlockFile(scope: !1526, file: !376, discriminator: 1)
!1526 = distinct !DILexicalBlock(scope: !1521, file: !376, line: 1932, column: 5)
!1527 = !DILocation(line: 1932, column: 19, scope: !1526)
!1528 = !DILocation(line: 1932, column: 5, scope: !1521)
!1529 = !DILocation(line: 1933, column: 36, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1526, file: !376, line: 1932, column: 29)
!1531 = !DILocation(line: 1933, column: 34, scope: !1530)
!1532 = !DILocation(line: 1933, column: 15, scope: !1530)
!1533 = !DILocation(line: 1933, column: 13, scope: !1530)
!1534 = !DILocation(line: 1934, column: 13, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1530, file: !376, line: 1934, column: 13)
!1536 = !DILocation(line: 1934, column: 17, scope: !1535)
!1537 = !DILocation(line: 1934, column: 13, scope: !1530)
!1538 = !DILocation(line: 1935, column: 13, scope: !1535)
!1539 = !DILocation(line: 1936, column: 49, scope: !1530)
!1540 = !DILocation(line: 1936, column: 44, scope: !1530)
!1541 = !DILocation(line: 1936, column: 29, scope: !1530)
!1542 = !DILocation(line: 1936, column: 11, scope: !1530)
!1543 = !DILocation(line: 1936, column: 36, scope: !1530)
!1544 = !DILocation(line: 1936, column: 10, scope: !1530)
!1545 = !DILocation(line: 1936, column: 47, scope: !1530)
!1546 = !DILocation(line: 1937, column: 5, scope: !1530)
!1547 = !DILocation(line: 1932, column: 25, scope: !1526)
!1548 = !DILocation(line: 1932, column: 5, scope: !1526)
!1549 = !DILocation(line: 1939, column: 12, scope: !416)
!1550 = !DILocation(line: 1939, column: 5, scope: !416)
!1551 = !DILocation(line: 1942, column: 5, scope: !416)
!1552 = !DILocation(line: 1942, column: 10, scope: !1553)
!1553 = !DILexicalBlockFile(scope: !430, file: !376, discriminator: 1)
!1554 = !DILocation(line: 1942, column: 20, scope: !430)
!1555 = !DILocation(line: 1942, column: 50, scope: !430)
!1556 = !DILocation(line: 1942, column: 64, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !430, file: !376, line: 1942, column: 61)
!1558 = !DILocation(line: 1942, column: 81, scope: !1557)
!1559 = !DILocation(line: 1942, column: 61, scope: !1557)
!1560 = !DILocation(line: 1942, column: 91, scope: !1557)
!1561 = !DILocation(line: 1942, column: 61, scope: !430)
!1562 = !DILocation(line: 1942, column: 61, scope: !1563)
!1563 = !DILexicalBlockFile(scope: !430, file: !376, discriminator: 2)
!1564 = !DILocation(line: 1942, column: 122, scope: !1565)
!1565 = !DILexicalBlockFile(scope: !1557, file: !376, discriminator: 3)
!1566 = !DILocation(line: 1942, column: 140, scope: !1557)
!1567 = !DILocation(line: 1942, column: 150, scope: !1557)
!1568 = !{!1569, !1365, i64 48}
!1569 = !{!"_typeobject", !1570, i64 0, !1365, i64 24, !1376, i64 32, !1376, i64 40, !1365, i64 48, !1365, i64 56, !1365, i64 64, !1365, i64 72, !1365, i64 80, !1365, i64 88, !1365, i64 96, !1365, i64 104, !1365, i64 112, !1365, i64 120, !1365, i64 128, !1365, i64 136, !1365, i64 144, !1365, i64 152, !1365, i64 160, !1376, i64 168, !1365, i64 176, !1365, i64 184, !1365, i64 192, !1365, i64 200, !1376, i64 208, !1365, i64 216, !1365, i64 224, !1365, i64 232, !1365, i64 240, !1365, i64 248, !1365, i64 256, !1365, i64 264, !1365, i64 272, !1365, i64 280, !1376, i64 288, !1365, i64 296, !1365, i64 304, !1365, i64 312, !1365, i64 320, !1365, i64 328, !1365, i64 336, !1365, i64 344, !1365, i64 352, !1365, i64 360, !1365, i64 368, !1365, i64 376, !1571, i64 384, !1365, i64 392}
!1570 = !{!"", !1375, i64 0, !1376, i64 16}
!1571 = !{!"int", !1366, i64 0}
!1572 = !DILocation(line: 1942, column: 175, scope: !1557)
!1573 = !DILocation(line: 1942, column: 106, scope: !1557)
!1574 = !DILocation(line: 1942, column: 194, scope: !1575)
!1575 = !DILexicalBlockFile(scope: !416, file: !376, discriminator: 4)
!1576 = !DILocation(line: 1942, column: 194, scope: !430)
!1577 = !DILocation(line: 1942, column: 194, scope: !1578)
!1578 = !DILexicalBlockFile(scope: !430, file: !376, discriminator: 5)
!1579 = !DILocation(line: 1943, column: 5, scope: !416)
!1580 = !DILocation(line: 1944, column: 1, scope: !416)
!1581 = !DILocation(line: 2291, column: 23, scope: !431)
!1582 = !DILocation(line: 2291, column: 39, scope: !431)
!1583 = !DILocation(line: 2293, column: 5, scope: !431)
!1584 = !DILocation(line: 2293, column: 15, scope: !431)
!1585 = !DILocation(line: 2293, column: 34, scope: !431)
!1586 = !DILocation(line: 2293, column: 43, scope: !431)
!1587 = !DILocation(line: 2294, column: 5, scope: !431)
!1588 = !DILocation(line: 2294, column: 15, scope: !431)
!1589 = !DILocation(line: 2295, column: 5, scope: !431)
!1590 = !DILocation(line: 2295, column: 16, scope: !431)
!1591 = !DILocation(line: 2296, column: 5, scope: !431)
!1592 = !DILocation(line: 2296, column: 16, scope: !431)
!1593 = !DILocation(line: 2297, column: 5, scope: !431)
!1594 = !DILocation(line: 2297, column: 11, scope: !431)
!1595 = !DILocation(line: 2299, column: 34, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !431, file: !376, line: 2299, column: 9)
!1597 = !DILocation(line: 2299, column: 10, scope: !1596)
!1598 = !DILocation(line: 2299, column: 9, scope: !431)
!1599 = !DILocation(line: 2300, column: 9, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !1596, file: !376, line: 2299, column: 62)
!1601 = !DILocation(line: 2303, column: 27, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !431, file: !376, line: 2303, column: 9)
!1603 = !DILocation(line: 2303, column: 34, scope: !1602)
!1604 = !DILocation(line: 2303, column: 45, scope: !1602)
!1605 = !{!1569, !1376, i64 168}
!1606 = !DILocation(line: 2303, column: 54, scope: !1602)
!1607 = !DILocation(line: 2303, column: 71, scope: !1602)
!1608 = !DILocation(line: 2303, column: 77, scope: !1602)
!1609 = !DILocation(line: 2303, column: 98, scope: !1610)
!1610 = !DILexicalBlockFile(scope: !1602, file: !376, discriminator: 1)
!1611 = !DILocation(line: 2303, column: 105, scope: !1602)
!1612 = !DILocation(line: 2303, column: 116, scope: !1602)
!1613 = !DILocation(line: 2303, column: 125, scope: !1602)
!1614 = !DILocation(line: 2303, column: 142, scope: !1602)
!1615 = !DILocation(line: 2303, column: 9, scope: !431)
!1616 = !DILocation(line: 2303, column: 167, scope: !1617)
!1617 = !DILexicalBlockFile(scope: !1618, file: !376, discriminator: 2)
!1618 = distinct !DILexicalBlock(scope: !1602, file: !376, line: 2303, column: 149)
!1619 = !DILocation(line: 2303, column: 151, scope: !1618)
!1620 = !DILocation(line: 2303, column: 221, scope: !1618)
!1621 = !DILocation(line: 2304, column: 28, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !431, file: !376, line: 2304, column: 9)
!1623 = !DILocation(line: 2304, column: 9, scope: !1622)
!1624 = !DILocation(line: 2304, column: 84, scope: !1622)
!1625 = !DILocation(line: 2304, column: 9, scope: !431)
!1626 = !DILocation(line: 2305, column: 9, scope: !1622)
!1627 = !DILocation(line: 2307, column: 14, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !431, file: !376, line: 2307, column: 9)
!1629 = !{!1630, !1571, i64 36}
!1630 = !{!"bufferinfo", !1365, i64 0, !1365, i64 8, !1376, i64 16, !1376, i64 24, !1571, i64 32, !1571, i64 36, !1365, i64 40, !1365, i64 48, !1365, i64 56, !1365, i64 64, !1365, i64 72}
!1631 = !DILocation(line: 2307, column: 19, scope: !1628)
!1632 = !DILocation(line: 2307, column: 9, scope: !431)
!1633 = !DILocation(line: 2308, column: 22, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1628, file: !376, line: 2307, column: 31)
!1635 = !DILocation(line: 2308, column: 9, scope: !1634)
!1636 = !DILocation(line: 2310, column: 9, scope: !1634)
!1637 = !DILocation(line: 2312, column: 27, scope: !1638)
!1638 = distinct !DILexicalBlock(scope: !431, file: !376, line: 2312, column: 9)
!1639 = !DILocation(line: 2312, column: 34, scope: !1638)
!1640 = !DILocation(line: 2312, column: 45, scope: !1638)
!1641 = !DILocation(line: 2312, column: 54, scope: !1638)
!1642 = !DILocation(line: 2312, column: 71, scope: !1638)
!1643 = !DILocation(line: 2312, column: 10, scope: !1638)
!1644 = !DILocation(line: 2312, column: 96, scope: !1645)
!1645 = !DILexicalBlockFile(scope: !1638, file: !376, discriminator: 1)
!1646 = !DILocation(line: 2312, column: 81, scope: !1638)
!1647 = !DILocation(line: 2312, column: 103, scope: !1638)
!1648 = !{!1570, !1376, i64 16}
!1649 = !DILocation(line: 2312, column: 131, scope: !1650)
!1650 = !DILexicalBlockFile(scope: !1638, file: !376, discriminator: 2)
!1651 = !DILocation(line: 2312, column: 116, scope: !1638)
!1652 = !DILocation(line: 2312, column: 138, scope: !1638)
!1653 = !DILocation(line: 2312, column: 156, scope: !1654)
!1654 = !DILexicalBlockFile(scope: !1655, file: !376, discriminator: 4)
!1655 = !DILexicalBlockFile(scope: !1638, file: !376, discriminator: 3)
!1656 = !DILocation(line: 2312, column: 151, scope: !1638)
!1657 = !DILocation(line: 2312, column: 148, scope: !1638)
!1658 = !DILocation(line: 2312, column: 9, scope: !431)
!1659 = !DILocation(line: 2313, column: 25, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1638, file: !376, line: 2312, column: 162)
!1661 = !DILocation(line: 2313, column: 9, scope: !1660)
!1662 = !DILocation(line: 2315, column: 9, scope: !1660)
!1663 = !DILocation(line: 2318, column: 12, scope: !448)
!1664 = !DILocation(line: 2318, column: 10, scope: !448)
!1665 = !DILocation(line: 2318, column: 17, scope: !1666)
!1666 = !DILexicalBlockFile(scope: !1667, file: !376, discriminator: 2)
!1667 = !DILexicalBlockFile(scope: !447, file: !376, discriminator: 1)
!1668 = !DILocation(line: 2318, column: 26, scope: !447)
!1669 = !DILocation(line: 2318, column: 21, scope: !447)
!1670 = !DILocation(line: 2318, column: 19, scope: !447)
!1671 = !DILocation(line: 2318, column: 5, scope: !448)
!1672 = !DILocation(line: 2319, column: 9, scope: !446)
!1673 = !DILocation(line: 2319, column: 19, scope: !446)
!1674 = !DILocation(line: 2319, column: 41, scope: !446)
!1675 = !DILocation(line: 2319, column: 48, scope: !446)
!1676 = !DILocation(line: 2319, column: 59, scope: !446)
!1677 = !DILocation(line: 2319, column: 68, scope: !446)
!1678 = !DILocation(line: 2319, column: 85, scope: !446)
!1679 = !DILocation(line: 2319, column: 24, scope: !446)
!1680 = !DILocation(line: 2319, column: 127, scope: !1681)
!1681 = !DILexicalBlockFile(scope: !446, file: !376, discriminator: 1)
!1682 = !DILocation(line: 2319, column: 112, scope: !446)
!1683 = !DILocation(line: 2319, column: 95, scope: !446)
!1684 = !DILocation(line: 2319, column: 119, scope: !446)
!1685 = !{!1686, !1365, i64 24}
!1686 = !{!"", !1570, i64 0, !1365, i64 24, !1376, i64 32}
!1687 = !DILocation(line: 2319, column: 94, scope: !446)
!1688 = !DILocation(line: 2319, column: 168, scope: !1689)
!1689 = !DILexicalBlockFile(scope: !446, file: !376, discriminator: 2)
!1690 = !DILocation(line: 2319, column: 153, scope: !446)
!1691 = !DILocation(line: 2319, column: 135, scope: !446)
!1692 = !DILocation(line: 2319, column: 160, scope: !446)
!1693 = !DILocation(line: 2319, column: 134, scope: !446)
!1694 = !DILocation(line: 2319, column: 19, scope: !1695)
!1695 = !DILexicalBlockFile(scope: !1696, file: !376, discriminator: 4)
!1696 = !DILexicalBlockFile(scope: !446, file: !376, discriminator: 3)
!1697 = !DILocation(line: 2320, column: 39, scope: !446)
!1698 = !DILocation(line: 2320, column: 22, scope: !446)
!1699 = !DILocation(line: 2320, column: 17, scope: !446)
!1700 = !DILocation(line: 2320, column: 9, scope: !446)
!1701 = !DILocation(line: 2320, column: 20, scope: !446)
!1702 = !DILocation(line: 2321, column: 13, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !446, file: !376, line: 2321, column: 13)
!1704 = !DILocation(line: 2321, column: 13, scope: !446)
!1705 = !DILocation(line: 2322, column: 13, scope: !1703)
!1706 = !DILocation(line: 2323, column: 21, scope: !1707)
!1707 = distinct !DILexicalBlock(scope: !446, file: !376, line: 2323, column: 13)
!1708 = !DILocation(line: 2323, column: 13, scope: !1707)
!1709 = !DILocation(line: 2323, column: 24, scope: !1707)
!1710 = !DILocation(line: 2323, column: 28, scope: !1707)
!1711 = !DILocation(line: 2323, column: 39, scope: !1712)
!1712 = !DILexicalBlockFile(scope: !1707, file: !376, discriminator: 1)
!1713 = !DILocation(line: 2323, column: 31, scope: !1707)
!1714 = !DILocation(line: 2323, column: 56, scope: !1707)
!1715 = !DILocation(line: 2323, column: 50, scope: !1707)
!1716 = !{!1630, !1365, i64 48}
!1717 = !DILocation(line: 2323, column: 45, scope: !1707)
!1718 = !DILocation(line: 2323, column: 42, scope: !1707)
!1719 = !DILocation(line: 2323, column: 13, scope: !446)
!1720 = !DILocation(line: 2324, column: 26, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1707, file: !376, line: 2323, column: 60)
!1722 = !DILocation(line: 2326, column: 25, scope: !1721)
!1723 = !DILocation(line: 2326, column: 17, scope: !1721)
!1724 = !DILocation(line: 2326, column: 29, scope: !1721)
!1725 = !DILocation(line: 2324, column: 13, scope: !1721)
!1726 = !DILocation(line: 2327, column: 13, scope: !1721)
!1727 = !DILocation(line: 2329, column: 5, scope: !447)
!1728 = !DILocation(line: 2329, column: 5, scope: !1667)
!1729 = !DILocation(line: 2329, column: 5, scope: !446)
!1730 = !DILocation(line: 2318, column: 33, scope: !447)
!1731 = !DILocation(line: 2318, column: 5, scope: !447)
!1732 = !DILocation(line: 2331, column: 38, scope: !431)
!1733 = !DILocation(line: 2331, column: 11, scope: !431)
!1734 = !DILocation(line: 2331, column: 9, scope: !431)
!1735 = !DILocation(line: 2332, column: 25, scope: !431)
!1736 = !DILocation(line: 2332, column: 35, scope: !431)
!1737 = !{!1630, !1365, i64 40}
!1738 = !DILocation(line: 2332, column: 48, scope: !431)
!1739 = !{!1630, !1376, i64 24}
!1740 = !DILocation(line: 2332, column: 11, scope: !431)
!1741 = !DILocation(line: 2332, column: 9, scope: !431)
!1742 = !DILocation(line: 2332, column: 5, scope: !431)
!1743 = !DILocation(line: 2335, column: 5, scope: !431)
!1744 = !DILocation(line: 2336, column: 12, scope: !431)
!1745 = !DILocation(line: 2336, column: 5, scope: !431)
!1746 = !DILocation(line: 2337, column: 1, scope: !431)
!1747 = !DILocation(line: 2340, column: 29, scope: !472)
!1748 = !DILocation(line: 2342, column: 12, scope: !472)
!1749 = !DILocation(line: 2342, column: 5, scope: !472)
!1750 = !DILocation(line: 2376, column: 26, scope: !475)
!1751 = !DILocation(line: 2376, column: 42, scope: !475)
!1752 = !DILocation(line: 2378, column: 5, scope: !475)
!1753 = !DILocation(line: 2378, column: 15, scope: !475)
!1754 = !DILocation(line: 2379, column: 5, scope: !475)
!1755 = !DILocation(line: 2379, column: 15, scope: !475)
!1756 = !DILocation(line: 2380, column: 5, scope: !475)
!1757 = !DILocation(line: 2380, column: 15, scope: !475)
!1758 = !DILocation(line: 2381, column: 5, scope: !475)
!1759 = !DILocation(line: 2381, column: 10, scope: !475)
!1760 = !DILocation(line: 2382, column: 5, scope: !475)
!1761 = !DILocation(line: 2382, column: 10, scope: !475)
!1762 = !DILocation(line: 2384, column: 34, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !475, file: !376, line: 2384, column: 9)
!1764 = !DILocation(line: 2384, column: 10, scope: !1763)
!1765 = !DILocation(line: 2384, column: 9, scope: !475)
!1766 = !DILocation(line: 2385, column: 9, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1763, file: !376, line: 2384, column: 75)
!1768 = !DILocation(line: 2388, column: 27, scope: !1769)
!1769 = distinct !DILexicalBlock(scope: !475, file: !376, line: 2388, column: 9)
!1770 = !DILocation(line: 2388, column: 41, scope: !1769)
!1771 = !DILocation(line: 2388, column: 52, scope: !1769)
!1772 = !DILocation(line: 2388, column: 61, scope: !1769)
!1773 = !DILocation(line: 2388, column: 78, scope: !1769)
!1774 = !DILocation(line: 2388, column: 9, scope: !475)
!1775 = !DILocation(line: 2389, column: 25, scope: !1776)
!1776 = distinct !DILexicalBlock(scope: !1769, file: !376, line: 2388, column: 85)
!1777 = !DILocation(line: 2389, column: 9, scope: !1776)
!1778 = !DILocation(line: 2391, column: 9, scope: !1776)
!1779 = !DILocation(line: 2394, column: 26, scope: !475)
!1780 = !DILocation(line: 2394, column: 12, scope: !475)
!1781 = !DILocation(line: 2394, column: 10, scope: !475)
!1782 = !DILocation(line: 2395, column: 9, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !475, file: !376, line: 2395, column: 9)
!1784 = !DILocation(line: 2395, column: 14, scope: !1783)
!1785 = !DILocation(line: 2395, column: 20, scope: !1783)
!1786 = !DILocation(line: 2395, column: 23, scope: !1787)
!1787 = !DILexicalBlockFile(scope: !1783, file: !376, discriminator: 1)
!1788 = !DILocation(line: 2395, column: 9, scope: !475)
!1789 = !DILocation(line: 2396, column: 9, scope: !1790)
!1790 = distinct !DILexicalBlock(scope: !1783, file: !376, line: 2395, column: 41)
!1791 = !DILocation(line: 2398, column: 9, scope: !1792)
!1792 = distinct !DILexicalBlock(scope: !475, file: !376, line: 2398, column: 9)
!1793 = !DILocation(line: 2398, column: 14, scope: !1792)
!1794 = !DILocation(line: 2398, column: 23, scope: !1792)
!1795 = !DILocation(line: 2398, column: 26, scope: !1796)
!1796 = !DILexicalBlockFile(scope: !1792, file: !376, discriminator: 1)
!1797 = !DILocation(line: 2398, column: 31, scope: !1792)
!1798 = !DILocation(line: 2398, column: 9, scope: !475)
!1799 = !DILocation(line: 2399, column: 25, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1792, file: !376, line: 2398, column: 41)
!1801 = !DILocation(line: 2399, column: 9, scope: !1800)
!1802 = !DILocation(line: 2401, column: 9, scope: !1800)
!1803 = !DILocation(line: 2404, column: 27, scope: !475)
!1804 = !DILocation(line: 2404, column: 11, scope: !475)
!1805 = !DILocation(line: 2404, column: 9, scope: !475)
!1806 = !{!1366, !1366, i64 0}
!1807 = !DILocation(line: 2405, column: 9, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !475, file: !376, line: 2405, column: 9)
!1809 = !DILocation(line: 2405, column: 13, scope: !1808)
!1810 = !DILocation(line: 2405, column: 9, scope: !475)
!1811 = !DILocation(line: 2406, column: 9, scope: !1808)
!1812 = !DILocation(line: 2408, column: 39, scope: !475)
!1813 = !DILocation(line: 2408, column: 49, scope: !475)
!1814 = !DILocation(line: 2408, column: 44, scope: !475)
!1815 = !DILocation(line: 2408, column: 55, scope: !475)
!1816 = !DILocation(line: 2408, column: 12, scope: !475)
!1817 = !DILocation(line: 2408, column: 5, scope: !475)
!1818 = !DILocation(line: 2409, column: 1, scope: !475)
!1819 = !DILocation(line: 2413, column: 35, scope: !493)
!1820 = !DILocation(line: 2413, column: 51, scope: !493)
!1821 = !DILocation(line: 2415, column: 5, scope: !493)
!1822 = !DILocation(line: 2415, column: 15, scope: !493)
!1823 = !DILocation(line: 2416, column: 5, scope: !493)
!1824 = !DILocation(line: 2416, column: 15, scope: !493)
!1825 = !DILocation(line: 2417, column: 5, scope: !493)
!1826 = !DILocation(line: 2417, column: 15, scope: !493)
!1827 = !DILocation(line: 2418, column: 5, scope: !493)
!1828 = !DILocation(line: 2418, column: 9, scope: !493)
!1829 = !DILocation(line: 2419, column: 5, scope: !493)
!1830 = !DILocation(line: 2419, column: 10, scope: !493)
!1831 = !DILocation(line: 2420, column: 5, scope: !493)
!1832 = !DILocation(line: 2420, column: 15, scope: !493)
!1833 = !DILocation(line: 2421, column: 5, scope: !493)
!1834 = !DILocation(line: 2421, column: 11, scope: !493)
!1835 = !DILocation(line: 2423, column: 34, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !493, file: !376, line: 2423, column: 9)
!1837 = !DILocation(line: 2423, column: 10, scope: !1836)
!1838 = !DILocation(line: 2423, column: 9, scope: !493)
!1839 = !DILocation(line: 2424, column: 9, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !1836, file: !376, line: 2423, column: 70)
!1841 = !DILocation(line: 2427, column: 28, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !493, file: !376, line: 2427, column: 9)
!1843 = !DILocation(line: 2427, column: 40, scope: !1842)
!1844 = !{!1571, !1571, i64 0}
!1845 = !DILocation(line: 2427, column: 9, scope: !1842)
!1846 = !DILocation(line: 2427, column: 47, scope: !1842)
!1847 = !DILocation(line: 2427, column: 9, scope: !493)
!1848 = !DILocation(line: 2428, column: 9, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1842, file: !376, line: 2427, column: 52)
!1850 = !DILocation(line: 2431, column: 27, scope: !493)
!1851 = !DILocation(line: 2431, column: 11, scope: !493)
!1852 = !DILocation(line: 2431, column: 9, scope: !493)
!1853 = !DILocation(line: 2432, column: 9, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !493, file: !376, line: 2432, column: 9)
!1855 = !DILocation(line: 2432, column: 13, scope: !1854)
!1856 = !DILocation(line: 2432, column: 9, scope: !493)
!1857 = !DILocation(line: 2433, column: 9, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1854, file: !376, line: 2432, column: 21)
!1859 = !DILocation(line: 2436, column: 29, scope: !493)
!1860 = !{!1630, !1376, i64 16}
!1861 = !DILocation(line: 2436, column: 11, scope: !493)
!1862 = !DILocation(line: 2436, column: 9, scope: !493)
!1863 = !DILocation(line: 2437, column: 9, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !493, file: !376, line: 2437, column: 9)
!1865 = !DILocation(line: 2437, column: 13, scope: !1864)
!1866 = !DILocation(line: 2437, column: 9, scope: !493)
!1867 = !DILocation(line: 2438, column: 9, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1864, file: !376, line: 2437, column: 28)
!1869 = !DILocation(line: 2439, column: 9, scope: !1868)
!1870 = !DILocation(line: 2442, column: 31, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !493, file: !376, line: 2442, column: 9)
!1872 = !DILocation(line: 2442, column: 48, scope: !1871)
!1873 = !DILocation(line: 2442, column: 53, scope: !1871)
!1874 = !DILocation(line: 2442, column: 9, scope: !1871)
!1875 = !DILocation(line: 2442, column: 58, scope: !1871)
!1876 = !DILocation(line: 2442, column: 9, scope: !493)
!1877 = !DILocation(line: 2443, column: 9, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1871, file: !376, line: 2442, column: 63)
!1879 = !DILocation(line: 2446, column: 37, scope: !493)
!1880 = !DILocation(line: 2446, column: 47, scope: !493)
!1881 = !DILocation(line: 2446, column: 11, scope: !493)
!1882 = !DILocation(line: 2446, column: 9, scope: !493)
!1883 = !DILocation(line: 2446, column: 5, scope: !493)
!1884 = !DILocation(line: 2449, column: 5, scope: !493)
!1885 = !DILocation(line: 2450, column: 5, scope: !493)
!1886 = !DILocation(line: 2450, column: 14, scope: !1887)
!1887 = !DILexicalBlockFile(scope: !1888, file: !376, discriminator: 1)
!1888 = distinct !DILexicalBlock(scope: !1889, file: !376, line: 2450, column: 14)
!1889 = distinct !DILexicalBlock(scope: !493, file: !376, line: 2450, column: 8)
!1890 = !DILocation(line: 2450, column: 14, scope: !1889)
!1891 = !DILocation(line: 2450, column: 30, scope: !1892)
!1892 = !DILexicalBlockFile(scope: !1888, file: !376, discriminator: 2)
!1893 = !DILocation(line: 2450, column: 19, scope: !1888)
!1894 = !DILocation(line: 2450, column: 36, scope: !1895)
!1895 = !DILexicalBlockFile(scope: !1896, file: !376, discriminator: 4)
!1896 = !DILexicalBlockFile(scope: !1889, file: !376, discriminator: 3)
!1897 = !DILocation(line: 2450, column: 36, scope: !1898)
!1898 = !DILexicalBlockFile(scope: !1889, file: !376, discriminator: 5)
!1899 = !DILocation(line: 2451, column: 12, scope: !493)
!1900 = !DILocation(line: 2451, column: 5, scope: !493)
!1901 = !DILocation(line: 2452, column: 1, scope: !493)
!1902 = !DILocation(line: 2553, column: 25, scope: !504)
!1903 = !DILocation(line: 2553, column: 41, scope: !504)
!1904 = !DILocation(line: 2555, column: 5, scope: !504)
!1905 = !DILocation(line: 2555, column: 15, scope: !504)
!1906 = !DILocation(line: 2556, column: 5, scope: !504)
!1907 = !DILocation(line: 2556, column: 15, scope: !504)
!1908 = !DILocation(line: 2557, column: 5, scope: !504)
!1909 = !DILocation(line: 2557, column: 15, scope: !504)
!1910 = !DILocation(line: 2558, column: 5, scope: !504)
!1911 = !DILocation(line: 2558, column: 15, scope: !504)
!1912 = !DILocation(line: 2559, column: 5, scope: !504)
!1913 = !DILocation(line: 2559, column: 10, scope: !504)
!1914 = !DILocation(line: 2561, column: 34, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !504, file: !376, line: 2561, column: 9)
!1916 = !DILocation(line: 2561, column: 10, scope: !1915)
!1917 = !DILocation(line: 2561, column: 9, scope: !504)
!1918 = !DILocation(line: 2562, column: 9, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1915, file: !376, line: 2561, column: 61)
!1920 = !DILocation(line: 2565, column: 28, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !504, file: !376, line: 2565, column: 9)
!1922 = !DILocation(line: 2565, column: 9, scope: !1921)
!1923 = !DILocation(line: 2565, column: 81, scope: !1921)
!1924 = !DILocation(line: 2565, column: 9, scope: !504)
!1925 = !DILocation(line: 2566, column: 25, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1921, file: !376, line: 2565, column: 86)
!1927 = !DILocation(line: 2566, column: 9, scope: !1926)
!1928 = !DILocation(line: 2569, column: 9, scope: !1926)
!1929 = !DILocation(line: 2572, column: 27, scope: !504)
!1930 = !DILocation(line: 2572, column: 11, scope: !504)
!1931 = !DILocation(line: 2572, column: 9, scope: !504)
!1932 = !DILocation(line: 2573, column: 9, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !504, file: !376, line: 2573, column: 9)
!1934 = !DILocation(line: 2573, column: 13, scope: !1933)
!1935 = !DILocation(line: 2573, column: 9, scope: !504)
!1936 = !DILocation(line: 2574, column: 9, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1933, file: !376, line: 2573, column: 21)
!1938 = !DILocation(line: 2577, column: 40, scope: !504)
!1939 = !DILocation(line: 2577, column: 11, scope: !504)
!1940 = !DILocation(line: 2577, column: 9, scope: !504)
!1941 = !DILocation(line: 2578, column: 21, scope: !504)
!1942 = !DILocation(line: 2578, column: 28, scope: !504)
!1943 = !DILocation(line: 2578, column: 37, scope: !504)
!1944 = !DILocation(line: 2578, column: 5, scope: !504)
!1945 = !DILocation(line: 2581, column: 5, scope: !504)
!1946 = !DILocation(line: 2582, column: 12, scope: !504)
!1947 = !DILocation(line: 2582, column: 5, scope: !504)
!1948 = !DILocation(line: 2583, column: 1, scope: !504)
!1949 = !DILocation(line: 2489, column: 22, scope: !513)
!1950 = !DILocation(line: 2489, column: 38, scope: !513)
!1951 = !DILocation(line: 2491, column: 5, scope: !513)
!1952 = !DILocation(line: 2491, column: 15, scope: !513)
!1953 = !DILocation(line: 2491, column: 20, scope: !513)
!1954 = !DILocation(line: 2492, column: 5, scope: !513)
!1955 = !DILocation(line: 2492, column: 15, scope: !513)
!1956 = !DILocation(line: 2492, column: 19, scope: !513)
!1957 = !DILocation(line: 2493, column: 5, scope: !513)
!1958 = !DILocation(line: 2493, column: 15, scope: !513)
!1959 = !DILocation(line: 2494, column: 5, scope: !513)
!1960 = !DILocation(line: 2494, column: 9, scope: !513)
!1961 = !DILocation(line: 2496, column: 34, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !513, file: !376, line: 2496, column: 9)
!1963 = !DILocation(line: 2496, column: 10, scope: !1962)
!1964 = !DILocation(line: 2496, column: 9, scope: !513)
!1965 = !DILocation(line: 2497, column: 9, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1962, file: !376, line: 2496, column: 57)
!1967 = !DILocation(line: 2500, column: 28, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !513, file: !376, line: 2500, column: 9)
!1969 = !DILocation(line: 2500, column: 9, scope: !1968)
!1970 = !DILocation(line: 2500, column: 78, scope: !1968)
!1971 = !DILocation(line: 2500, column: 9, scope: !513)
!1972 = !DILocation(line: 2501, column: 25, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !1968, file: !376, line: 2500, column: 83)
!1974 = !DILocation(line: 2501, column: 9, scope: !1973)
!1975 = !DILocation(line: 2504, column: 9, scope: !1973)
!1976 = !DILocation(line: 2506, column: 28, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !513, file: !376, line: 2506, column: 9)
!1978 = !DILocation(line: 2506, column: 9, scope: !1977)
!1979 = !DILocation(line: 2506, column: 78, scope: !1977)
!1980 = !DILocation(line: 2506, column: 9, scope: !513)
!1981 = !DILocation(line: 2507, column: 25, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1977, file: !376, line: 2506, column: 83)
!1983 = !DILocation(line: 2507, column: 9, scope: !1982)
!1984 = !DILocation(line: 2510, column: 9, scope: !1982)
!1985 = !DILocation(line: 2511, column: 9, scope: !1982)
!1986 = !DILocation(line: 2514, column: 11, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !513, file: !376, line: 2514, column: 9)
!1988 = !DILocation(line: 2514, column: 42, scope: !1987)
!1989 = !DILocation(line: 2514, column: 44, scope: !1990)
!1990 = !DILexicalBlockFile(scope: !1987, file: !376, discriminator: 1)
!1991 = !DILocation(line: 2514, column: 77, scope: !1987)
!1992 = !DILocation(line: 2515, column: 11, scope: !1987)
!1993 = !DILocation(line: 2515, column: 42, scope: !1987)
!1994 = !DILocation(line: 2515, column: 44, scope: !1990)
!1995 = !DILocation(line: 2514, column: 9, scope: !513)
!1996 = !DILocation(line: 2516, column: 9, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1987, file: !376, line: 2515, column: 78)
!1998 = !DILocation(line: 2520, column: 12, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !513, file: !376, line: 2520, column: 9)
!2000 = !DILocation(line: 2520, column: 22, scope: !1999)
!2001 = !DILocation(line: 2520, column: 16, scope: !1999)
!2002 = !DILocation(line: 2520, column: 26, scope: !1999)
!2003 = !DILocation(line: 2521, column: 12, scope: !1999)
!2004 = !DILocation(line: 2521, column: 27, scope: !1999)
!2005 = !DILocation(line: 2521, column: 21, scope: !1999)
!2006 = !DILocation(line: 2521, column: 36, scope: !1999)
!2007 = !DILocation(line: 2522, column: 12, scope: !1999)
!2008 = !DILocation(line: 2522, column: 23, scope: !1999)
!2009 = !DILocation(line: 2522, column: 17, scope: !1999)
!2010 = !DILocation(line: 2522, column: 28, scope: !1999)
!2011 = !DILocation(line: 2523, column: 20, scope: !1999)
!2012 = !DILocation(line: 2523, column: 31, scope: !1999)
!2013 = !DILocation(line: 2523, column: 10, scope: !1999)
!2014 = !DILocation(line: 2523, column: 39, scope: !1999)
!2015 = !DILocation(line: 2524, column: 14, scope: !1999)
!2016 = !DILocation(line: 2524, column: 10, scope: !1999)
!2017 = !DILocation(line: 2524, column: 9, scope: !1999)
!2018 = !DILocation(line: 2524, column: 28, scope: !1999)
!2019 = !DILocation(line: 2524, column: 24, scope: !1999)
!2020 = !DILocation(line: 2524, column: 23, scope: !1999)
!2021 = !DILocation(line: 2524, column: 20, scope: !1999)
!2022 = !DILocation(line: 2524, column: 34, scope: !1999)
!2023 = !DILocation(line: 2525, column: 14, scope: !1999)
!2024 = !{!1630, !1365, i64 56}
!2025 = !DILocation(line: 2525, column: 10, scope: !1999)
!2026 = !DILocation(line: 2525, column: 9, scope: !1999)
!2027 = !DILocation(line: 2525, column: 30, scope: !1999)
!2028 = !DILocation(line: 2525, column: 26, scope: !1999)
!2029 = !DILocation(line: 2525, column: 25, scope: !1999)
!2030 = !DILocation(line: 2525, column: 22, scope: !1999)
!2031 = !DILocation(line: 2525, column: 38, scope: !1999)
!2032 = !DILocation(line: 2526, column: 14, scope: !1999)
!2033 = !{!1630, !1365, i64 64}
!2034 = !DILocation(line: 2526, column: 10, scope: !1999)
!2035 = !DILocation(line: 2526, column: 9, scope: !1999)
!2036 = !DILocation(line: 2526, column: 33, scope: !1999)
!2037 = !DILocation(line: 2526, column: 29, scope: !1999)
!2038 = !DILocation(line: 2526, column: 28, scope: !1999)
!2039 = !DILocation(line: 2526, column: 25, scope: !1999)
!2040 = !DILocation(line: 2520, column: 9, scope: !513)
!2041 = !DILocation(line: 2527, column: 9, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !1999, file: !376, line: 2526, column: 45)
!2043 = !DILocation(line: 2530, column: 13, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !513, file: !376, line: 2530, column: 9)
!2045 = !DILocation(line: 2530, column: 10, scope: !2044)
!2046 = !DILocation(line: 2530, column: 19, scope: !2044)
!2047 = !DILocation(line: 2530, column: 35, scope: !2048)
!2048 = !DILexicalBlockFile(scope: !2044, file: !376, discriminator: 1)
!2049 = !DILocation(line: 2530, column: 45, scope: !2044)
!2050 = !DILocation(line: 2530, column: 67, scope: !2044)
!2051 = !DILocation(line: 2530, column: 64, scope: !2044)
!2052 = !DILocation(line: 2530, column: 23, scope: !2044)
!2053 = !DILocation(line: 2530, column: 74, scope: !2044)
!2054 = !DILocation(line: 2531, column: 13, scope: !2044)
!2055 = !DILocation(line: 2531, column: 10, scope: !2044)
!2056 = !DILocation(line: 2531, column: 21, scope: !2044)
!2057 = !DILocation(line: 2531, column: 37, scope: !2048)
!2058 = !DILocation(line: 2531, column: 49, scope: !2044)
!2059 = !DILocation(line: 2531, column: 61, scope: !2044)
!2060 = !DILocation(line: 2531, column: 71, scope: !2044)
!2061 = !DILocation(line: 2531, column: 68, scope: !2044)
!2062 = !DILocation(line: 2531, column: 25, scope: !2044)
!2063 = !DILocation(line: 2531, column: 78, scope: !2044)
!2064 = !DILocation(line: 2532, column: 13, scope: !2044)
!2065 = !DILocation(line: 2532, column: 10, scope: !2044)
!2066 = !DILocation(line: 2532, column: 24, scope: !2044)
!2067 = !DILocation(line: 2532, column: 40, scope: !2048)
!2068 = !DILocation(line: 2532, column: 55, scope: !2044)
!2069 = !DILocation(line: 2533, column: 40, scope: !2044)
!2070 = !DILocation(line: 2533, column: 37, scope: !2044)
!2071 = !DILocation(line: 2532, column: 28, scope: !2044)
!2072 = !DILocation(line: 2530, column: 9, scope: !513)
!2073 = !DILocation(line: 2534, column: 9, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2044, file: !376, line: 2533, column: 48)
!2075 = !DILocation(line: 2537, column: 27, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !513, file: !376, line: 2537, column: 9)
!2077 = !{!1630, !1365, i64 0}
!2078 = !DILocation(line: 2537, column: 43, scope: !2076)
!2079 = !DILocation(line: 2537, column: 51, scope: !2076)
!2080 = !DILocation(line: 2537, column: 9, scope: !2076)
!2081 = !DILocation(line: 2537, column: 56, scope: !2076)
!2082 = !DILocation(line: 2537, column: 9, scope: !513)
!2083 = !DILocation(line: 2538, column: 9, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !2076, file: !376, line: 2537, column: 62)
!2085 = !DILocation(line: 2541, column: 11, scope: !513)
!2086 = !DILocation(line: 2541, column: 5, scope: !513)
!2087 = !DILocation(line: 2544, column: 5, scope: !513)
!2088 = !DILocation(line: 2545, column: 5, scope: !513)
!2089 = !DILocation(line: 2547, column: 11, scope: !513)
!2090 = !DILocation(line: 2547, column: 9, scope: !513)
!2091 = !DILocation(line: 2548, column: 21, scope: !513)
!2092 = !DILocation(line: 2548, column: 28, scope: !513)
!2093 = !DILocation(line: 2548, column: 37, scope: !513)
!2094 = !DILocation(line: 2549, column: 12, scope: !513)
!2095 = !DILocation(line: 2549, column: 5, scope: !513)
!2096 = !DILocation(line: 2550, column: 1, scope: !513)
!2097 = !DILocation(line: 572, column: 21, scope: !449)
!2098 = !DILocation(line: 572, column: 38, scope: !449)
!2099 = !DILocation(line: 572, column: 54, scope: !449)
!2100 = !DILocation(line: 574, column: 5, scope: !449)
!2101 = !DILocation(line: 574, column: 15, scope: !449)
!2102 = !DILocation(line: 574, column: 19, scope: !449)
!2103 = !DILocation(line: 574, column: 33, scope: !449)
!2104 = !DILocation(line: 576, column: 9, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !449, file: !376, line: 576, column: 9)
!2106 = !DILocation(line: 576, column: 13, scope: !2105)
!2107 = !DILocation(line: 576, column: 9, scope: !449)
!2108 = !DILocation(line: 577, column: 13, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2105, file: !376, line: 576, column: 28)
!2110 = !DILocation(line: 578, column: 18, scope: !2109)
!2111 = !DILocation(line: 579, column: 5, scope: !2109)
!2112 = !DILocation(line: 581, column: 42, scope: !449)
!2113 = !DILocation(line: 581, column: 19, scope: !449)
!2114 = !DILocation(line: 581, column: 17, scope: !449)
!2115 = !DILocation(line: 582, column: 9, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !449, file: !376, line: 582, column: 9)
!2117 = !DILocation(line: 582, column: 21, scope: !2116)
!2118 = !DILocation(line: 582, column: 9, scope: !449)
!2119 = !DILocation(line: 583, column: 9, scope: !2116)
!2120 = !DILocation(line: 585, column: 37, scope: !449)
!2121 = !DILocation(line: 585, column: 42, scope: !449)
!2122 = !DILocation(line: 585, column: 13, scope: !449)
!2123 = !DILocation(line: 585, column: 11, scope: !449)
!2124 = !DILocation(line: 586, column: 9, scope: !462)
!2125 = !DILocation(line: 586, column: 15, scope: !462)
!2126 = !DILocation(line: 586, column: 9, scope: !449)
!2127 = !DILocation(line: 587, column: 9, scope: !461)
!2128 = !DILocation(line: 587, column: 14, scope: !2129)
!2129 = !DILexicalBlockFile(scope: !460, file: !376, discriminator: 1)
!2130 = !DILocation(line: 587, column: 24, scope: !460)
!2131 = !DILocation(line: 587, column: 54, scope: !460)
!2132 = !DILocation(line: 587, column: 76, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !460, file: !376, line: 587, column: 73)
!2134 = !DILocation(line: 587, column: 93, scope: !2133)
!2135 = !DILocation(line: 587, column: 73, scope: !2133)
!2136 = !DILocation(line: 587, column: 103, scope: !2133)
!2137 = !DILocation(line: 587, column: 73, scope: !460)
!2138 = !DILocation(line: 587, column: 73, scope: !2139)
!2139 = !DILexicalBlockFile(scope: !460, file: !376, discriminator: 2)
!2140 = !DILocation(line: 587, column: 134, scope: !2141)
!2141 = !DILexicalBlockFile(scope: !2133, file: !376, discriminator: 3)
!2142 = !DILocation(line: 587, column: 152, scope: !2133)
!2143 = !DILocation(line: 587, column: 162, scope: !2133)
!2144 = !DILocation(line: 587, column: 187, scope: !2133)
!2145 = !DILocation(line: 587, column: 118, scope: !2133)
!2146 = !DILocation(line: 587, column: 206, scope: !2147)
!2147 = !DILexicalBlockFile(scope: !461, file: !376, discriminator: 4)
!2148 = !DILocation(line: 587, column: 206, scope: !460)
!2149 = !DILocation(line: 587, column: 206, scope: !2150)
!2150 = !DILexicalBlockFile(scope: !460, file: !376, discriminator: 5)
!2151 = !DILocation(line: 588, column: 9, scope: !461)
!2152 = !DILocation(line: 591, column: 38, scope: !449)
!2153 = !DILocation(line: 591, column: 57, scope: !449)
!2154 = !DILocation(line: 591, column: 62, scope: !449)
!2155 = !DILocation(line: 591, column: 9, scope: !449)
!2156 = !DILocation(line: 591, column: 7, scope: !449)
!2157 = !DILocation(line: 592, column: 5, scope: !449)
!2158 = !DILocation(line: 592, column: 10, scope: !2159)
!2159 = !DILexicalBlockFile(scope: !464, file: !376, discriminator: 1)
!2160 = !DILocation(line: 592, column: 20, scope: !464)
!2161 = !DILocation(line: 592, column: 50, scope: !464)
!2162 = !DILocation(line: 592, column: 72, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !464, file: !376, line: 592, column: 69)
!2164 = !DILocation(line: 592, column: 89, scope: !2163)
!2165 = !DILocation(line: 592, column: 69, scope: !2163)
!2166 = !DILocation(line: 592, column: 99, scope: !2163)
!2167 = !DILocation(line: 592, column: 69, scope: !464)
!2168 = !DILocation(line: 592, column: 69, scope: !2169)
!2169 = !DILexicalBlockFile(scope: !464, file: !376, discriminator: 2)
!2170 = !DILocation(line: 592, column: 130, scope: !2171)
!2171 = !DILexicalBlockFile(scope: !2163, file: !376, discriminator: 3)
!2172 = !DILocation(line: 592, column: 148, scope: !2163)
!2173 = !DILocation(line: 592, column: 158, scope: !2163)
!2174 = !DILocation(line: 592, column: 183, scope: !2163)
!2175 = !DILocation(line: 592, column: 114, scope: !2163)
!2176 = !DILocation(line: 592, column: 202, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !449, file: !376, discriminator: 4)
!2178 = !DILocation(line: 592, column: 202, scope: !464)
!2179 = !DILocation(line: 592, column: 202, scope: !2180)
!2180 = !DILexicalBlockFile(scope: !464, file: !376, discriminator: 5)
!2181 = !DILocation(line: 593, column: 5, scope: !449)
!2182 = !DILocation(line: 593, column: 10, scope: !2183)
!2183 = !DILexicalBlockFile(scope: !466, file: !376, discriminator: 1)
!2184 = !DILocation(line: 593, column: 20, scope: !466)
!2185 = !DILocation(line: 593, column: 50, scope: !466)
!2186 = !DILocation(line: 593, column: 66, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !466, file: !376, line: 593, column: 63)
!2188 = !DILocation(line: 593, column: 83, scope: !2187)
!2189 = !DILocation(line: 593, column: 63, scope: !2187)
!2190 = !DILocation(line: 593, column: 93, scope: !2187)
!2191 = !DILocation(line: 593, column: 63, scope: !466)
!2192 = !DILocation(line: 593, column: 63, scope: !2193)
!2193 = !DILexicalBlockFile(scope: !466, file: !376, discriminator: 2)
!2194 = !DILocation(line: 593, column: 124, scope: !2195)
!2195 = !DILexicalBlockFile(scope: !2187, file: !376, discriminator: 3)
!2196 = !DILocation(line: 593, column: 142, scope: !2187)
!2197 = !DILocation(line: 593, column: 152, scope: !2187)
!2198 = !DILocation(line: 593, column: 177, scope: !2187)
!2199 = !DILocation(line: 593, column: 108, scope: !2187)
!2200 = !DILocation(line: 593, column: 196, scope: !2177)
!2201 = !DILocation(line: 593, column: 196, scope: !466)
!2202 = !DILocation(line: 593, column: 196, scope: !2203)
!2203 = !DILexicalBlockFile(scope: !466, file: !376, discriminator: 5)
!2204 = !DILocation(line: 594, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !449, file: !376, line: 594, column: 9)
!2206 = !DILocation(line: 594, column: 11, scope: !2205)
!2207 = !DILocation(line: 594, column: 9, scope: !449)
!2208 = !DILocation(line: 595, column: 9, scope: !2205)
!2209 = !DILocation(line: 597, column: 26, scope: !469)
!2210 = !DILocation(line: 597, column: 11, scope: !469)
!2211 = !DILocation(line: 597, column: 31, scope: !469)
!2212 = !DILocation(line: 597, column: 40, scope: !469)
!2213 = !DILocation(line: 597, column: 9, scope: !449)
!2214 = !DILocation(line: 598, column: 9, scope: !468)
!2215 = !DILocation(line: 598, column: 19, scope: !468)
!2216 = !DILocation(line: 598, column: 45, scope: !468)
!2217 = !DILocation(line: 598, column: 27, scope: !468)
!2218 = !DILocation(line: 598, column: 50, scope: !468)
!2219 = !DILocation(line: 598, column: 26, scope: !468)
!2220 = !DILocation(line: 599, column: 25, scope: !468)
!2221 = !DILocation(line: 599, column: 32, scope: !468)
!2222 = !DILocation(line: 599, column: 41, scope: !468)
!2223 = !DILocation(line: 600, column: 9, scope: !468)
!2224 = !DILocation(line: 600, column: 14, scope: !2225)
!2225 = !DILexicalBlockFile(scope: !471, file: !376, discriminator: 1)
!2226 = !DILocation(line: 600, column: 24, scope: !471)
!2227 = !DILocation(line: 600, column: 54, scope: !471)
!2228 = !DILocation(line: 600, column: 66, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !471, file: !376, line: 600, column: 63)
!2230 = !DILocation(line: 600, column: 83, scope: !2229)
!2231 = !DILocation(line: 600, column: 63, scope: !2229)
!2232 = !DILocation(line: 600, column: 93, scope: !2229)
!2233 = !DILocation(line: 600, column: 63, scope: !471)
!2234 = !DILocation(line: 600, column: 63, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !471, file: !376, discriminator: 2)
!2236 = !DILocation(line: 600, column: 124, scope: !2237)
!2237 = !DILexicalBlockFile(scope: !2229, file: !376, discriminator: 3)
!2238 = !DILocation(line: 600, column: 142, scope: !2229)
!2239 = !DILocation(line: 600, column: 152, scope: !2229)
!2240 = !DILocation(line: 600, column: 177, scope: !2229)
!2241 = !DILocation(line: 600, column: 108, scope: !2229)
!2242 = !DILocation(line: 600, column: 196, scope: !2243)
!2243 = !DILexicalBlockFile(scope: !468, file: !376, discriminator: 4)
!2244 = !DILocation(line: 600, column: 196, scope: !471)
!2245 = !DILocation(line: 600, column: 196, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !471, file: !376, discriminator: 5)
!2247 = !DILocation(line: 601, column: 16, scope: !468)
!2248 = !DILocation(line: 601, column: 9, scope: !468)
!2249 = !DILocation(line: 602, column: 5, scope: !469)
!2250 = !DILocation(line: 604, column: 12, scope: !449)
!2251 = !DILocation(line: 604, column: 5, scope: !449)
!2252 = !DILocation(line: 605, column: 1, scope: !449)
!2253 = !DILocation(line: 2346, column: 27, scope: !484)
!2254 = !DILocation(line: 2348, column: 5, scope: !484)
!2255 = !DILocation(line: 2348, column: 15, scope: !484)
!2256 = !DILocation(line: 2349, column: 5, scope: !484)
!2257 = !DILocation(line: 2349, column: 10, scope: !484)
!2258 = !DILocation(line: 2351, column: 27, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !484, file: !376, line: 2351, column: 9)
!2260 = !DILocation(line: 2351, column: 36, scope: !2259)
!2261 = !DILocation(line: 2351, column: 47, scope: !2259)
!2262 = !DILocation(line: 2351, column: 56, scope: !2259)
!2263 = !DILocation(line: 2351, column: 73, scope: !2259)
!2264 = !DILocation(line: 2351, column: 9, scope: !484)
!2265 = !DILocation(line: 2352, column: 25, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2259, file: !376, line: 2351, column: 80)
!2267 = !DILocation(line: 2352, column: 9, scope: !2266)
!2268 = !DILocation(line: 2354, column: 9, scope: !2266)
!2269 = !DILocation(line: 2357, column: 43, scope: !484)
!2270 = !DILocation(line: 2357, column: 19, scope: !484)
!2271 = !DILocation(line: 2357, column: 17, scope: !484)
!2272 = !DILocation(line: 2358, column: 9, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !484, file: !376, line: 2358, column: 9)
!2274 = !DILocation(line: 2358, column: 21, scope: !2273)
!2275 = !DILocation(line: 2358, column: 9, scope: !484)
!2276 = !DILocation(line: 2359, column: 9, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2273, file: !376, line: 2358, column: 36)
!2278 = !DILocation(line: 2362, column: 46, scope: !484)
!2279 = !DILocation(line: 2362, column: 28, scope: !484)
!2280 = !DILocation(line: 2362, column: 61, scope: !484)
!2281 = !DILocation(line: 2362, column: 26, scope: !484)
!2282 = !DILocation(line: 2362, column: 11, scope: !484)
!2283 = !DILocation(line: 2362, column: 9, scope: !484)
!2284 = !DILocation(line: 2363, column: 5, scope: !484)
!2285 = !DILocation(line: 2363, column: 10, scope: !2286)
!2286 = !DILexicalBlockFile(scope: !492, file: !376, discriminator: 1)
!2287 = !DILocation(line: 2363, column: 20, scope: !492)
!2288 = !DILocation(line: 2363, column: 50, scope: !492)
!2289 = !DILocation(line: 2363, column: 72, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !492, file: !376, line: 2363, column: 69)
!2291 = !DILocation(line: 2363, column: 89, scope: !2290)
!2292 = !DILocation(line: 2363, column: 69, scope: !2290)
!2293 = !DILocation(line: 2363, column: 99, scope: !2290)
!2294 = !DILocation(line: 2363, column: 69, scope: !492)
!2295 = !DILocation(line: 2363, column: 69, scope: !2296)
!2296 = !DILexicalBlockFile(scope: !492, file: !376, discriminator: 2)
!2297 = !DILocation(line: 2363, column: 130, scope: !2298)
!2298 = !DILexicalBlockFile(scope: !2290, file: !376, discriminator: 3)
!2299 = !DILocation(line: 2363, column: 148, scope: !2290)
!2300 = !DILocation(line: 2363, column: 158, scope: !2290)
!2301 = !DILocation(line: 2363, column: 183, scope: !2290)
!2302 = !DILocation(line: 2363, column: 114, scope: !2290)
!2303 = !DILocation(line: 2363, column: 202, scope: !2304)
!2304 = !DILexicalBlockFile(scope: !484, file: !376, discriminator: 4)
!2305 = !DILocation(line: 2363, column: 202, scope: !492)
!2306 = !DILocation(line: 2363, column: 202, scope: !2307)
!2307 = !DILexicalBlockFile(scope: !492, file: !376, discriminator: 5)
!2308 = !DILocation(line: 2365, column: 9, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !484, file: !376, line: 2365, column: 9)
!2310 = !DILocation(line: 2365, column: 13, scope: !2309)
!2311 = !DILocation(line: 2365, column: 20, scope: !2309)
!2312 = !DILocation(line: 2365, column: 23, scope: !2313)
!2313 = !DILexicalBlockFile(scope: !2309, file: !376, discriminator: 1)
!2314 = !DILocation(line: 2365, column: 27, scope: !2309)
!2315 = !DILocation(line: 2365, column: 34, scope: !2309)
!2316 = !DILocation(line: 2365, column: 37, scope: !2317)
!2317 = !DILexicalBlockFile(scope: !2309, file: !376, discriminator: 2)
!2318 = !DILocation(line: 2365, column: 41, scope: !2309)
!2319 = !DILocation(line: 2365, column: 9, scope: !484)
!2320 = !DILocation(line: 2366, column: 25, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2309, file: !376, line: 2365, column: 49)
!2322 = !DILocation(line: 2366, column: 9, scope: !2321)
!2323 = !DILocation(line: 2368, column: 9, scope: !2321)
!2324 = !DILocation(line: 2371, column: 12, scope: !484)
!2325 = !DILocation(line: 2371, column: 5, scope: !484)
!2326 = !DILocation(line: 2372, column: 1, scope: !484)
!2327 = !DILocation(line: 2455, column: 20, scope: !523)
!2328 = !DILocation(line: 2455, column: 38, scope: !523)
!2329 = !DILocation(line: 2457, column: 9, scope: !532)
!2330 = !DILocation(line: 2457, column: 14, scope: !532)
!2331 = !DILocation(line: 2457, column: 9, scope: !523)
!2332 = !DILocation(line: 2458, column: 16, scope: !531)
!2333 = !DILocation(line: 2458, column: 21, scope: !531)
!2334 = !DILocation(line: 2458, column: 35, scope: !531)
!2335 = !DILocation(line: 2458, column: 55, scope: !2336)
!2336 = !DILexicalBlockFile(scope: !530, file: !376, discriminator: 2)
!2337 = !DILocation(line: 2458, column: 62, scope: !530)
!2338 = !DILocation(line: 2458, column: 55, scope: !530)
!2339 = !DILocation(line: 2458, column: 72, scope: !530)
!2340 = !DILocation(line: 2458, column: 1340, scope: !530)
!2341 = !DILocation(line: 2458, column: 1353, scope: !2342)
!2342 = !DILexicalBlockFile(scope: !530, file: !376, discriminator: 3)
!2343 = !DILocation(line: 2458, column: 1369, scope: !530)
!2344 = !DILocation(line: 2458, column: 1378, scope: !530)
!2345 = !DILocation(line: 2458, column: 1239, scope: !530)
!2346 = !DILocation(line: 2458, column: 1541, scope: !2347)
!2347 = !DILexicalBlockFile(scope: !535, file: !376, discriminator: 5)
!2348 = !DILocation(line: 2458, column: 1562, scope: !535)
!2349 = !DILocation(line: 2458, column: 1609, scope: !535)
!2350 = !DILocation(line: 2458, column: 1616, scope: !535)
!2351 = !DILocation(line: 2458, column: 1629, scope: !535)
!2352 = !DILocation(line: 2458, column: 1640, scope: !535)
!2353 = !DILocation(line: 2458, column: 1650, scope: !535)
!2354 = !DILocation(line: 2458, column: 1648, scope: !535)
!2355 = !DILocation(line: 2458, column: 1705, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !535, file: !376, line: 2458, column: 1705)
!2357 = !DILocation(line: 2458, column: 1714, scope: !2356)
!2358 = !DILocation(line: 2458, column: 1718, scope: !2356)
!2359 = !DILocation(line: 2458, column: 1721, scope: !2360)
!2360 = !DILexicalBlockFile(scope: !2356, file: !376, discriminator: 7)
!2361 = !DILocation(line: 2458, column: 1730, scope: !2356)
!2362 = !DILocation(line: 2458, column: 1705, scope: !535)
!2363 = !DILocation(line: 2458, column: 1750, scope: !2364)
!2364 = !DILexicalBlockFile(scope: !2365, file: !376, discriminator: 9)
!2365 = distinct !DILexicalBlock(scope: !2356, file: !376, line: 2458, column: 1736)
!2366 = !DILocation(line: 2458, column: 1760, scope: !2365)
!2367 = !DILocation(line: 2458, column: 1758, scope: !2365)
!2368 = !DILocation(line: 2458, column: 1747, scope: !2365)
!2369 = !DILocation(line: 2458, column: 1816, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2365, file: !376, line: 2458, column: 1816)
!2371 = !DILocation(line: 2458, column: 1825, scope: !2370)
!2372 = !DILocation(line: 2458, column: 1829, scope: !2370)
!2373 = !DILocation(line: 2458, column: 1832, scope: !2374)
!2374 = !DILexicalBlockFile(scope: !2370, file: !376, discriminator: 11)
!2375 = !DILocation(line: 2458, column: 1841, scope: !2370)
!2376 = !DILocation(line: 2458, column: 1816, scope: !2365)
!2377 = !DILocation(line: 2458, column: 1861, scope: !2378)
!2378 = !DILexicalBlockFile(scope: !2379, file: !376, discriminator: 13)
!2379 = distinct !DILexicalBlock(scope: !2370, file: !376, line: 2458, column: 1847)
!2380 = !DILocation(line: 2458, column: 1871, scope: !2379)
!2381 = !DILocation(line: 2458, column: 1869, scope: !2379)
!2382 = !DILocation(line: 2458, column: 1858, scope: !2379)
!2383 = !DILocation(line: 2458, column: 1927, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2379, file: !376, line: 2458, column: 1927)
!2385 = !DILocation(line: 2458, column: 1936, scope: !2384)
!2386 = !DILocation(line: 2458, column: 1940, scope: !2384)
!2387 = !DILocation(line: 2458, column: 1943, scope: !2388)
!2388 = !DILexicalBlockFile(scope: !2384, file: !376, discriminator: 15)
!2389 = !DILocation(line: 2458, column: 1952, scope: !2384)
!2390 = !DILocation(line: 2458, column: 1927, scope: !2379)
!2391 = !DILocation(line: 2458, column: 1970, scope: !2392)
!2392 = !DILexicalBlockFile(scope: !2384, file: !376, discriminator: 17)
!2393 = !DILocation(line: 2458, column: 1980, scope: !2384)
!2394 = !DILocation(line: 2458, column: 1978, scope: !2384)
!2395 = !DILocation(line: 2458, column: 1967, scope: !2384)
!2396 = !DILocation(line: 2458, column: 1958, scope: !2384)
!2397 = !DILocation(line: 2458, column: 2032, scope: !2398)
!2398 = !DILexicalBlockFile(scope: !2399, file: !376, discriminator: 19)
!2399 = !DILexicalBlockFile(scope: !2400, file: !376, discriminator: 18)
!2400 = !DILexicalBlockFile(scope: !2379, file: !376, discriminator: 16)
!2401 = !DILocation(line: 2458, column: 2034, scope: !2402)
!2402 = !DILexicalBlockFile(scope: !2403, file: !376, discriminator: 20)
!2403 = !DILexicalBlockFile(scope: !2404, file: !376, discriminator: 14)
!2404 = !DILexicalBlockFile(scope: !2365, file: !376, discriminator: 12)
!2405 = !DILocation(line: 2458, column: 2036, scope: !2406)
!2406 = !DILexicalBlockFile(scope: !2407, file: !376, discriminator: 21)
!2407 = !DILexicalBlockFile(scope: !2408, file: !376, discriminator: 10)
!2408 = !DILexicalBlockFile(scope: !535, file: !376, discriminator: 8)
!2409 = !DILocation(line: 2458, column: 1733, scope: !2356)
!2410 = !DILocation(line: 2458, column: 2046, scope: !530)
!2411 = !DILocation(line: 2458, column: 2046, scope: !535)
!2412 = !DILocation(line: 2458, column: 2071, scope: !2413)
!2413 = !DILexicalBlockFile(scope: !2414, file: !376, discriminator: 6)
!2414 = !DILexicalBlockFile(scope: !530, file: !376, discriminator: 4)
!2415 = !DILocation(line: 2458, column: 2053, scope: !530)
!2416 = !DILocation(line: 2458, column: 55, scope: !2417)
!2417 = !DILexicalBlockFile(scope: !2418, file: !376, discriminator: 23)
!2418 = !DILexicalBlockFile(scope: !530, file: !376, discriminator: 22)
!2419 = !DILocation(line: 2458, column: 2086, scope: !531)
!2420 = !DILocation(line: 2458, column: 2086, scope: !530)
!2421 = !DILocation(line: 2458, column: 2089, scope: !531)
!2422 = !DILocation(line: 2458, column: 35, scope: !2423)
!2423 = !DILexicalBlockFile(scope: !2424, file: !376, discriminator: 24)
!2424 = !DILexicalBlockFile(scope: !531, file: !376, discriminator: 1)
!2425 = !DILocation(line: 2458, column: 9, scope: !531)
!2426 = !DILocation(line: 2460, column: 9, scope: !540)
!2427 = !DILocation(line: 2460, column: 14, scope: !540)
!2428 = !DILocation(line: 2460, column: 9, scope: !523)
!2429 = !DILocation(line: 2461, column: 16, scope: !539)
!2430 = !DILocation(line: 2461, column: 21, scope: !539)
!2431 = !DILocation(line: 2461, column: 35, scope: !539)
!2432 = !DILocation(line: 2461, column: 55, scope: !2433)
!2433 = !DILexicalBlockFile(scope: !538, file: !376, discriminator: 2)
!2434 = !DILocation(line: 2461, column: 62, scope: !538)
!2435 = !DILocation(line: 2461, column: 55, scope: !538)
!2436 = !DILocation(line: 2461, column: 72, scope: !538)
!2437 = !DILocation(line: 2461, column: 1340, scope: !538)
!2438 = !DILocation(line: 2461, column: 1353, scope: !2439)
!2439 = !DILexicalBlockFile(scope: !538, file: !376, discriminator: 3)
!2440 = !DILocation(line: 2461, column: 1369, scope: !538)
!2441 = !DILocation(line: 2461, column: 1378, scope: !538)
!2442 = !DILocation(line: 2461, column: 1239, scope: !538)
!2443 = !DILocation(line: 2461, column: 1541, scope: !2444)
!2444 = !DILexicalBlockFile(scope: !543, file: !376, discriminator: 5)
!2445 = !DILocation(line: 2461, column: 1562, scope: !543)
!2446 = !DILocation(line: 2461, column: 1609, scope: !543)
!2447 = !DILocation(line: 2461, column: 1616, scope: !543)
!2448 = !DILocation(line: 2461, column: 1629, scope: !543)
!2449 = !DILocation(line: 2461, column: 1640, scope: !543)
!2450 = !DILocation(line: 2461, column: 1650, scope: !543)
!2451 = !DILocation(line: 2461, column: 1648, scope: !543)
!2452 = !DILocation(line: 2461, column: 1705, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !543, file: !376, line: 2461, column: 1705)
!2454 = !DILocation(line: 2461, column: 1714, scope: !2453)
!2455 = !DILocation(line: 2461, column: 1718, scope: !2453)
!2456 = !DILocation(line: 2461, column: 1721, scope: !2457)
!2457 = !DILexicalBlockFile(scope: !2453, file: !376, discriminator: 7)
!2458 = !DILocation(line: 2461, column: 1730, scope: !2453)
!2459 = !DILocation(line: 2461, column: 1705, scope: !543)
!2460 = !DILocation(line: 2461, column: 1750, scope: !2461)
!2461 = !DILexicalBlockFile(scope: !2462, file: !376, discriminator: 9)
!2462 = distinct !DILexicalBlock(scope: !2453, file: !376, line: 2461, column: 1736)
!2463 = !DILocation(line: 2461, column: 1760, scope: !2462)
!2464 = !DILocation(line: 2461, column: 1758, scope: !2462)
!2465 = !DILocation(line: 2461, column: 1747, scope: !2462)
!2466 = !DILocation(line: 2461, column: 1816, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2462, file: !376, line: 2461, column: 1816)
!2468 = !DILocation(line: 2461, column: 1825, scope: !2467)
!2469 = !DILocation(line: 2461, column: 1829, scope: !2467)
!2470 = !DILocation(line: 2461, column: 1832, scope: !2471)
!2471 = !DILexicalBlockFile(scope: !2467, file: !376, discriminator: 11)
!2472 = !DILocation(line: 2461, column: 1841, scope: !2467)
!2473 = !DILocation(line: 2461, column: 1816, scope: !2462)
!2474 = !DILocation(line: 2461, column: 1861, scope: !2475)
!2475 = !DILexicalBlockFile(scope: !2476, file: !376, discriminator: 13)
!2476 = distinct !DILexicalBlock(scope: !2467, file: !376, line: 2461, column: 1847)
!2477 = !DILocation(line: 2461, column: 1871, scope: !2476)
!2478 = !DILocation(line: 2461, column: 1869, scope: !2476)
!2479 = !DILocation(line: 2461, column: 1858, scope: !2476)
!2480 = !DILocation(line: 2461, column: 1927, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2476, file: !376, line: 2461, column: 1927)
!2482 = !DILocation(line: 2461, column: 1936, scope: !2481)
!2483 = !DILocation(line: 2461, column: 1940, scope: !2481)
!2484 = !DILocation(line: 2461, column: 1943, scope: !2485)
!2485 = !DILexicalBlockFile(scope: !2481, file: !376, discriminator: 15)
!2486 = !DILocation(line: 2461, column: 1952, scope: !2481)
!2487 = !DILocation(line: 2461, column: 1927, scope: !2476)
!2488 = !DILocation(line: 2461, column: 1970, scope: !2489)
!2489 = !DILexicalBlockFile(scope: !2481, file: !376, discriminator: 17)
!2490 = !DILocation(line: 2461, column: 1980, scope: !2481)
!2491 = !DILocation(line: 2461, column: 1978, scope: !2481)
!2492 = !DILocation(line: 2461, column: 1967, scope: !2481)
!2493 = !DILocation(line: 2461, column: 1958, scope: !2481)
!2494 = !DILocation(line: 2461, column: 2032, scope: !2495)
!2495 = !DILexicalBlockFile(scope: !2496, file: !376, discriminator: 19)
!2496 = !DILexicalBlockFile(scope: !2497, file: !376, discriminator: 18)
!2497 = !DILexicalBlockFile(scope: !2476, file: !376, discriminator: 16)
!2498 = !DILocation(line: 2461, column: 2034, scope: !2499)
!2499 = !DILexicalBlockFile(scope: !2500, file: !376, discriminator: 20)
!2500 = !DILexicalBlockFile(scope: !2501, file: !376, discriminator: 14)
!2501 = !DILexicalBlockFile(scope: !2462, file: !376, discriminator: 12)
!2502 = !DILocation(line: 2461, column: 2036, scope: !2503)
!2503 = !DILexicalBlockFile(scope: !2504, file: !376, discriminator: 21)
!2504 = !DILexicalBlockFile(scope: !2505, file: !376, discriminator: 10)
!2505 = !DILexicalBlockFile(scope: !543, file: !376, discriminator: 8)
!2506 = !DILocation(line: 2461, column: 1733, scope: !2453)
!2507 = !DILocation(line: 2461, column: 2046, scope: !538)
!2508 = !DILocation(line: 2461, column: 2046, scope: !543)
!2509 = !DILocation(line: 2461, column: 2071, scope: !2510)
!2510 = !DILexicalBlockFile(scope: !2511, file: !376, discriminator: 6)
!2511 = !DILexicalBlockFile(scope: !538, file: !376, discriminator: 4)
!2512 = !DILocation(line: 2461, column: 2053, scope: !538)
!2513 = !DILocation(line: 2461, column: 55, scope: !2514)
!2514 = !DILexicalBlockFile(scope: !2515, file: !376, discriminator: 23)
!2515 = !DILexicalBlockFile(scope: !538, file: !376, discriminator: 22)
!2516 = !DILocation(line: 2461, column: 2086, scope: !539)
!2517 = !DILocation(line: 2461, column: 2086, scope: !538)
!2518 = !DILocation(line: 2461, column: 2089, scope: !539)
!2519 = !DILocation(line: 2461, column: 35, scope: !2520)
!2520 = !DILexicalBlockFile(scope: !2521, file: !376, discriminator: 24)
!2521 = !DILexicalBlockFile(scope: !539, file: !376, discriminator: 1)
!2522 = !DILocation(line: 2461, column: 9, scope: !539)
!2523 = !DILocation(line: 2463, column: 29, scope: !546)
!2524 = !DILocation(line: 2463, column: 36, scope: !546)
!2525 = !DILocation(line: 2463, column: 46, scope: !546)
!2526 = !DILocation(line: 2463, column: 2064, scope: !546)
!2527 = !DILocation(line: 2463, column: 2070, scope: !546)
!2528 = !DILocation(line: 2463, column: 2046, scope: !546)
!2529 = !DILocation(line: 2463, column: 2080, scope: !523)
!2530 = !DILocation(line: 2463, column: 2080, scope: !546)
!2531 = !DILocation(line: 2463, column: 2083, scope: !523)
!2532 = !DILocation(line: 2463, column: 5, scope: !523)
!2533 = !DILocation(line: 2464, column: 1, scope: !523)
!2534 = !DILocation(line: 2467, column: 28, scope: !548)
!2535 = !DILocation(line: 2467, column: 50, scope: !548)
!2536 = !DILocation(line: 2467, column: 72, scope: !548)
!2537 = !DILocation(line: 2468, column: 21, scope: !548)
!2538 = !DILocation(line: 2470, column: 5, scope: !548)
!2539 = !DILocation(line: 2470, column: 16, scope: !548)
!2540 = !DILocation(line: 2472, column: 9, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !548, file: !376, line: 2472, column: 9)
!2542 = !DILocation(line: 2472, column: 14, scope: !2541)
!2543 = !DILocation(line: 2472, column: 19, scope: !2541)
!2544 = !DILocation(line: 2472, column: 22, scope: !2545)
!2545 = !DILexicalBlockFile(scope: !2541, file: !376, discriminator: 1)
!2546 = !DILocation(line: 2472, column: 28, scope: !2541)
!2547 = !DILocation(line: 2472, column: 31, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !2541, file: !376, discriminator: 2)
!2549 = !DILocation(line: 2472, column: 40, scope: !2541)
!2550 = !DILocation(line: 2472, column: 9, scope: !548)
!2551 = !DILocation(line: 2475, column: 9, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2541, file: !376, line: 2472, column: 46)
!2553 = !DILocation(line: 2478, column: 12, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !548, file: !376, line: 2478, column: 5)
!2555 = !DILocation(line: 2478, column: 10, scope: !2554)
!2556 = !DILocation(line: 2478, column: 17, scope: !2557)
!2557 = !DILexicalBlockFile(scope: !2558, file: !376, discriminator: 2)
!2558 = !DILexicalBlockFile(scope: !2559, file: !376, discriminator: 1)
!2559 = distinct !DILexicalBlock(scope: !2554, file: !376, line: 2478, column: 5)
!2560 = !DILocation(line: 2478, column: 21, scope: !2559)
!2561 = !DILocation(line: 2478, column: 19, scope: !2559)
!2562 = !DILocation(line: 2478, column: 5, scope: !2554)
!2563 = !DILocation(line: 2479, column: 16, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2565, file: !376, line: 2479, column: 13)
!2565 = distinct !DILexicalBlock(scope: !2559, file: !376, line: 2478, column: 32)
!2566 = !DILocation(line: 2479, column: 13, scope: !2564)
!2567 = !DILocation(line: 2479, column: 25, scope: !2564)
!2568 = !DILocation(line: 2479, column: 22, scope: !2564)
!2569 = !DILocation(line: 2479, column: 19, scope: !2564)
!2570 = !DILocation(line: 2479, column: 13, scope: !2565)
!2571 = !DILocation(line: 2480, column: 13, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2564, file: !376, line: 2479, column: 29)
!2573 = !DILocation(line: 2482, column: 5, scope: !2565)
!2574 = !DILocation(line: 2478, column: 28, scope: !2559)
!2575 = !DILocation(line: 2478, column: 5, scope: !2559)
!2576 = !DILocation(line: 2484, column: 5, scope: !548)
!2577 = !DILocation(line: 2485, column: 1, scope: !548)
!2578 = !DILocation(line: 222, column: 32, scope: !559)
!2579 = !DILocation(line: 224, column: 9, scope: !568)
!2580 = !DILocation(line: 224, column: 15, scope: !568)
!2581 = !{!2582, !1365, i64 160}
!2582 = !{!"", !1375, i64 0, !1571, i64 16, !2583, i64 24, !1365, i64 160}
!2583 = !{!"ndbuf", !1365, i64 0, !1365, i64 8, !1376, i64 16, !1376, i64 24, !1365, i64 32, !1571, i64 40, !1376, i64 48, !1630, i64 56}
!2584 = !DILocation(line: 224, column: 9, scope: !559)
!2585 = !DILocation(line: 225, column: 32, scope: !566)
!2586 = !DILocation(line: 225, column: 39, scope: !566)
!2587 = !DILocation(line: 225, column: 66, scope: !566)
!2588 = !DILocation(line: 225, column: 73, scope: !566)
!2589 = !DILocation(line: 225, column: 44, scope: !566)
!2590 = !DILocation(line: 225, column: 13, scope: !567)
!2591 = !DILocation(line: 226, column: 13, scope: !565)
!2592 = !DILocation(line: 226, column: 24, scope: !565)
!2593 = !DILocation(line: 226, column: 32, scope: !565)
!2594 = !DILocation(line: 226, column: 38, scope: !565)
!2595 = !DILocation(line: 226, column: 44, scope: !565)
!2596 = !DILocation(line: 227, column: 17, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !565, file: !376, line: 227, column: 17)
!2598 = !DILocation(line: 227, column: 23, scope: !2597)
!2599 = !DILocation(line: 227, column: 29, scope: !2597)
!2600 = !{!2583, !1571, i64 40}
!2601 = !DILocation(line: 227, column: 35, scope: !2597)
!2602 = !DILocation(line: 227, column: 17, scope: !565)
!2603 = !DILocation(line: 228, column: 17, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2597, file: !376, line: 227, column: 44)
!2605 = !DILocation(line: 228, column: 26, scope: !2606)
!2606 = !DILexicalBlockFile(scope: !2607, file: !376, discriminator: 1)
!2607 = distinct !DILexicalBlock(scope: !2608, file: !376, line: 228, column: 26)
!2608 = distinct !DILexicalBlock(scope: !2604, file: !376, line: 228, column: 20)
!2609 = !DILocation(line: 228, column: 32, scope: !2607)
!2610 = !DILocation(line: 228, column: 26, scope: !2607)
!2611 = !DILocation(line: 228, column: 26, scope: !2608)
!2612 = !DILocation(line: 228, column: 50, scope: !2613)
!2613 = !DILexicalBlockFile(scope: !2607, file: !376, discriminator: 2)
!2614 = !DILocation(line: 228, column: 56, scope: !2607)
!2615 = !DILocation(line: 228, column: 50, scope: !2607)
!2616 = !DILocation(line: 228, column: 39, scope: !2607)
!2617 = !DILocation(line: 228, column: 64, scope: !2618)
!2618 = !DILexicalBlockFile(scope: !2619, file: !376, discriminator: 4)
!2619 = !DILexicalBlockFile(scope: !2608, file: !376, discriminator: 3)
!2620 = !DILocation(line: 228, column: 64, scope: !2621)
!2621 = !DILexicalBlockFile(scope: !2608, file: !376, discriminator: 5)
!2622 = !DILocation(line: 229, column: 17, scope: !2604)
!2623 = !DILocation(line: 229, column: 26, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !2625, file: !376, discriminator: 1)
!2625 = distinct !DILexicalBlock(scope: !2626, file: !376, line: 229, column: 26)
!2626 = distinct !DILexicalBlock(scope: !2604, file: !376, line: 229, column: 20)
!2627 = !DILocation(line: 229, column: 32, scope: !2625)
!2628 = !DILocation(line: 229, column: 26, scope: !2625)
!2629 = !DILocation(line: 229, column: 26, scope: !2626)
!2630 = !DILocation(line: 229, column: 52, scope: !2631)
!2631 = !DILexicalBlockFile(scope: !2625, file: !376, discriminator: 2)
!2632 = !DILocation(line: 229, column: 58, scope: !2625)
!2633 = !DILocation(line: 229, column: 52, scope: !2625)
!2634 = !DILocation(line: 229, column: 41, scope: !2625)
!2635 = !DILocation(line: 229, column: 68, scope: !2636)
!2636 = !DILexicalBlockFile(scope: !2637, file: !376, discriminator: 4)
!2637 = !DILexicalBlockFile(scope: !2626, file: !376, discriminator: 3)
!2638 = !DILocation(line: 229, column: 68, scope: !2639)
!2639 = !DILexicalBlockFile(scope: !2626, file: !376, discriminator: 5)
!2640 = !DILocation(line: 230, column: 17, scope: !2604)
!2641 = !DILocation(line: 230, column: 26, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !2643, file: !376, discriminator: 1)
!2643 = distinct !DILexicalBlock(scope: !2644, file: !376, line: 230, column: 26)
!2644 = distinct !DILexicalBlock(scope: !2604, file: !376, line: 230, column: 20)
!2645 = !DILocation(line: 230, column: 32, scope: !2643)
!2646 = !DILocation(line: 230, column: 26, scope: !2643)
!2647 = !DILocation(line: 230, column: 26, scope: !2644)
!2648 = !DILocation(line: 230, column: 55, scope: !2649)
!2649 = !DILexicalBlockFile(scope: !2643, file: !376, discriminator: 2)
!2650 = !DILocation(line: 230, column: 61, scope: !2643)
!2651 = !DILocation(line: 230, column: 55, scope: !2643)
!2652 = !DILocation(line: 230, column: 44, scope: !2643)
!2653 = !DILocation(line: 230, column: 74, scope: !2654)
!2654 = !DILexicalBlockFile(scope: !2655, file: !376, discriminator: 4)
!2655 = !DILexicalBlockFile(scope: !2644, file: !376, discriminator: 3)
!2656 = !DILocation(line: 230, column: 74, scope: !2657)
!2657 = !DILexicalBlockFile(scope: !2644, file: !376, discriminator: 5)
!2658 = !DILocation(line: 231, column: 13, scope: !2604)
!2659 = !DILocation(line: 232, column: 30, scope: !565)
!2660 = !DILocation(line: 232, column: 13, scope: !565)
!2661 = !DILocation(line: 233, column: 9, scope: !566)
!2662 = !DILocation(line: 233, column: 9, scope: !565)
!2663 = !DILocation(line: 235, column: 13, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !566, file: !376, line: 234, column: 14)
!2665 = !DILocation(line: 235, column: 20, scope: !2666)
!2666 = !DILexicalBlockFile(scope: !2667, file: !376, discriminator: 2)
!2667 = !DILexicalBlockFile(scope: !2664, file: !376, discriminator: 1)
!2668 = !DILocation(line: 235, column: 26, scope: !2664)
!2669 = !DILocation(line: 236, column: 27, scope: !2664)
!2670 = !DILocation(line: 236, column: 17, scope: !2664)
!2671 = !DILocation(line: 238, column: 5, scope: !567)
!2672 = !DILocation(line: 239, column: 19, scope: !559)
!2673 = !DILocation(line: 239, column: 5, scope: !559)
!2674 = !DILocation(line: 240, column: 1, scope: !559)
!2675 = !DILocation(line: 2586, column: 24, scope: !802)
!2676 = !DILocation(line: 2588, column: 5, scope: !802)
!2677 = !DILocation(line: 2588, column: 26, scope: !802)
!2678 = !DILocation(line: 2588, column: 48, scope: !802)
!2679 = !DILocation(line: 2588, column: 31, scope: !802)
!2680 = !DILocation(line: 2589, column: 5, scope: !802)
!2681 = !DILocation(line: 2589, column: 22, scope: !802)
!2682 = !DILocation(line: 2589, column: 30, scope: !802)
!2683 = !DILocation(line: 2589, column: 34, scope: !802)
!2684 = !DILocation(line: 2589, column: 40, scope: !802)
!2685 = !DILocation(line: 2590, column: 5, scope: !802)
!2686 = !DILocation(line: 2590, column: 15, scope: !802)
!2687 = !DILocation(line: 2591, column: 5, scope: !802)
!2688 = !DILocation(line: 2591, column: 15, scope: !802)
!2689 = !DILocation(line: 2593, column: 10, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !802, file: !376, line: 2593, column: 9)
!2691 = !DILocation(line: 2593, column: 16, scope: !2690)
!2692 = !{!1630, !1571, i64 32}
!2693 = !DILocation(line: 2593, column: 9, scope: !802)
!2694 = !DILocation(line: 2594, column: 26, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2690, file: !376, line: 2593, column: 26)
!2696 = !DILocation(line: 2594, column: 10, scope: !2695)
!2697 = !DILocation(line: 2596, column: 10, scope: !2695)
!2698 = !DILocation(line: 2598, column: 9, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !802, file: !376, line: 2598, column: 9)
!2700 = !DILocation(line: 2598, column: 15, scope: !2699)
!2701 = !{!1630, !1365, i64 8}
!2702 = !DILocation(line: 2598, column: 19, scope: !2699)
!2703 = !DILocation(line: 2598, column: 33, scope: !2699)
!2704 = !DILocation(line: 2598, column: 50, scope: !2705)
!2705 = !DILexicalBlockFile(scope: !2699, file: !376, discriminator: 1)
!2706 = !DILocation(line: 2598, column: 56, scope: !2699)
!2707 = !DILocation(line: 2598, column: 36, scope: !2699)
!2708 = !DILocation(line: 2598, column: 61, scope: !2699)
!2709 = !DILocation(line: 2598, column: 9, scope: !802)
!2710 = !DILocation(line: 2599, column: 10, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2699, file: !376, line: 2598, column: 68)
!2712 = !DILocation(line: 2602, column: 29, scope: !802)
!2713 = !DILocation(line: 2602, column: 13, scope: !802)
!2714 = !DILocation(line: 2602, column: 11, scope: !802)
!2715 = !DILocation(line: 2603, column: 9, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !802, file: !376, line: 2603, column: 9)
!2717 = !DILocation(line: 2603, column: 15, scope: !2716)
!2718 = !DILocation(line: 2603, column: 9, scope: !802)
!2719 = !DILocation(line: 2604, column: 9, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2716, file: !376, line: 2603, column: 30)
!2721 = !DILocation(line: 2607, column: 26, scope: !802)
!2722 = !DILocation(line: 2607, column: 12, scope: !802)
!2723 = !DILocation(line: 2607, column: 10, scope: !802)
!2724 = !DILocation(line: 2608, column: 5, scope: !802)
!2725 = !DILocation(line: 2608, column: 10, scope: !2726)
!2726 = !DILexicalBlockFile(scope: !814, file: !376, discriminator: 1)
!2727 = !DILocation(line: 2608, column: 20, scope: !814)
!2728 = !DILocation(line: 2608, column: 50, scope: !814)
!2729 = !DILocation(line: 2608, column: 66, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !814, file: !376, line: 2608, column: 63)
!2731 = !DILocation(line: 2608, column: 83, scope: !2730)
!2732 = !DILocation(line: 2608, column: 63, scope: !2730)
!2733 = !DILocation(line: 2608, column: 93, scope: !2730)
!2734 = !DILocation(line: 2608, column: 63, scope: !814)
!2735 = !DILocation(line: 2608, column: 63, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !814, file: !376, discriminator: 2)
!2737 = !DILocation(line: 2608, column: 124, scope: !2738)
!2738 = !DILexicalBlockFile(scope: !2730, file: !376, discriminator: 3)
!2739 = !DILocation(line: 2608, column: 142, scope: !2730)
!2740 = !DILocation(line: 2608, column: 152, scope: !2730)
!2741 = !DILocation(line: 2608, column: 177, scope: !2730)
!2742 = !DILocation(line: 2608, column: 108, scope: !2730)
!2743 = !DILocation(line: 2608, column: 196, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !802, file: !376, discriminator: 4)
!2745 = !DILocation(line: 2608, column: 196, scope: !814)
!2746 = !DILocation(line: 2608, column: 196, scope: !2747)
!2747 = !DILexicalBlockFile(scope: !814, file: !376, discriminator: 5)
!2748 = !DILocation(line: 2609, column: 12, scope: !802)
!2749 = !DILocation(line: 2609, column: 5, scope: !802)
!2750 = !DILocation(line: 2610, column: 1, scope: !802)
!2751 = !DILocation(line: 1279, column: 24, scope: !1236)
!2752 = !DILocation(line: 1279, column: 40, scope: !1236)
!2753 = !DILocation(line: 1279, column: 56, scope: !1236)
!2754 = !DILocation(line: 1281, column: 5, scope: !1236)
!2755 = !DILocation(line: 1281, column: 20, scope: !1236)
!2756 = !DILocation(line: 1281, column: 42, scope: !1236)
!2757 = !DILocation(line: 1281, column: 25, scope: !1236)
!2758 = !DILocation(line: 1285, column: 5, scope: !1236)
!2759 = !DILocation(line: 1285, column: 15, scope: !1236)
!2760 = !DILocation(line: 1286, column: 5, scope: !1236)
!2761 = !DILocation(line: 1286, column: 15, scope: !1236)
!2762 = !DILocation(line: 1287, column: 5, scope: !1236)
!2763 = !DILocation(line: 1287, column: 15, scope: !1236)
!2764 = !DILocation(line: 1288, column: 5, scope: !1236)
!2765 = !DILocation(line: 1288, column: 16, scope: !1236)
!2766 = !DILocation(line: 1289, column: 5, scope: !1236)
!2767 = !DILocation(line: 1289, column: 15, scope: !1236)
!2768 = !DILocation(line: 1289, column: 24, scope: !1236)
!2769 = !DILocation(line: 1290, column: 5, scope: !1236)
!2770 = !DILocation(line: 1290, column: 9, scope: !1236)
!2771 = !DILocation(line: 1292, column: 5, scope: !1236)
!2772 = !DILocation(line: 1292, column: 9, scope: !1236)
!2773 = !DILocation(line: 1295, column: 45, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !1236, file: !376, line: 1295, column: 9)
!2775 = !DILocation(line: 1295, column: 51, scope: !2774)
!2776 = !DILocation(line: 1295, column: 10, scope: !2774)
!2777 = !DILocation(line: 1295, column: 9, scope: !1236)
!2778 = !DILocation(line: 1297, column: 9, scope: !2774)
!2779 = !DILocation(line: 1300, column: 12, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !1236, file: !376, line: 1300, column: 9)
!2781 = !DILocation(line: 1300, column: 16, scope: !2780)
!2782 = !DILocation(line: 1300, column: 25, scope: !2780)
!2783 = !{!1569, !1365, i64 160}
!2784 = !DILocation(line: 1300, column: 38, scope: !2780)
!2785 = !DILocation(line: 1300, column: 53, scope: !2780)
!2786 = !DILocation(line: 1300, column: 58, scope: !2787)
!2787 = !DILexicalBlockFile(scope: !2780, file: !376, discriminator: 1)
!2788 = !DILocation(line: 1300, column: 62, scope: !2780)
!2789 = !DILocation(line: 1300, column: 71, scope: !2780)
!2790 = !DILocation(line: 1300, column: 85, scope: !2780)
!2791 = !{!2792, !1365, i64 0}
!2792 = !{!"", !1365, i64 0, !1365, i64 8}
!2793 = !DILocation(line: 1300, column: 98, scope: !2780)
!2794 = !DILocation(line: 1300, column: 114, scope: !2780)
!2795 = !DILocation(line: 1300, column: 117, scope: !2796)
!2796 = !DILexicalBlockFile(scope: !2780, file: !376, discriminator: 2)
!2797 = !DILocation(line: 1300, column: 123, scope: !2780)
!2798 = !DILocation(line: 1300, column: 9, scope: !1236)
!2799 = !DILocation(line: 1301, column: 13, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !376, line: 1301, column: 13)
!2801 = distinct !DILexicalBlock(scope: !2780, file: !376, line: 1300, column: 138)
!2802 = !DILocation(line: 1301, column: 21, scope: !2800)
!2803 = !DILocation(line: 1301, column: 24, scope: !2804)
!2804 = !DILexicalBlockFile(scope: !2800, file: !376, discriminator: 1)
!2805 = !DILocation(line: 1301, column: 31, scope: !2800)
!2806 = !DILocation(line: 1301, column: 34, scope: !2807)
!2807 = !DILexicalBlockFile(scope: !2800, file: !376, discriminator: 2)
!2808 = !DILocation(line: 1301, column: 44, scope: !2800)
!2809 = !DILocation(line: 1301, column: 41, scope: !2800)
!2810 = !DILocation(line: 1301, column: 58, scope: !2800)
!2811 = !DILocation(line: 1302, column: 15, scope: !2800)
!2812 = !DILocation(line: 1302, column: 21, scope: !2800)
!2813 = !DILocation(line: 1302, column: 30, scope: !2800)
!2814 = !DILocation(line: 1302, column: 33, scope: !2804)
!2815 = !DILocation(line: 1302, column: 39, scope: !2800)
!2816 = !DILocation(line: 1301, column: 13, scope: !2801)
!2817 = !DILocation(line: 1303, column: 29, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2800, file: !376, line: 1302, column: 50)
!2819 = !DILocation(line: 1303, column: 13, scope: !2818)
!2820 = !DILocation(line: 1306, column: 13, scope: !2818)
!2821 = !DILocation(line: 1309, column: 19, scope: !2801)
!2822 = !DILocation(line: 1309, column: 26, scope: !2801)
!2823 = !DILocation(line: 1309, column: 18, scope: !2801)
!2824 = !DILocation(line: 1309, column: 18, scope: !2825)
!2825 = !DILexicalBlockFile(scope: !2801, file: !376, discriminator: 1)
!2826 = !DILocation(line: 1309, column: 82, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !2801, file: !376, discriminator: 2)
!2828 = !DILocation(line: 1309, column: 16, scope: !2829)
!2829 = !DILexicalBlockFile(scope: !2830, file: !376, discriminator: 4)
!2830 = !DILexicalBlockFile(scope: !2801, file: !376, discriminator: 3)
!2831 = !DILocation(line: 1311, column: 36, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2801, file: !376, line: 1311, column: 13)
!2833 = !DILocation(line: 1311, column: 39, scope: !2832)
!2834 = !DILocation(line: 1311, column: 43, scope: !2832)
!2835 = !DILocation(line: 1311, column: 13, scope: !2832)
!2836 = !DILocation(line: 1311, column: 51, scope: !2832)
!2837 = !DILocation(line: 1311, column: 13, scope: !2801)
!2838 = !DILocation(line: 1312, column: 13, scope: !2832)
!2839 = !DILocation(line: 1314, column: 20, scope: !2801)
!2840 = !DILocation(line: 1314, column: 24, scope: !2801)
!2841 = !DILocation(line: 1314, column: 9, scope: !2801)
!2842 = !DILocation(line: 1315, column: 28, scope: !2801)
!2843 = !DILocation(line: 1315, column: 9, scope: !2801)
!2844 = !DILocation(line: 1315, column: 13, scope: !2801)
!2845 = !DILocation(line: 1315, column: 19, scope: !2801)
!2846 = !DILocation(line: 1315, column: 25, scope: !2801)
!2847 = !DILocation(line: 1317, column: 9, scope: !2801)
!2848 = !DILocation(line: 1321, column: 9, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !1236, file: !376, line: 1321, column: 9)
!2850 = !DILocation(line: 1321, column: 16, scope: !2849)
!2851 = !DILocation(line: 1321, column: 9, scope: !1236)
!2852 = !DILocation(line: 1322, column: 25, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2849, file: !376, line: 1321, column: 28)
!2854 = !DILocation(line: 1322, column: 9, scope: !2853)
!2855 = !DILocation(line: 1325, column: 9, scope: !2853)
!2856 = !DILocation(line: 1327, column: 9, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !1236, file: !376, line: 1327, column: 9)
!2858 = !DILocation(line: 1327, column: 15, scope: !2857)
!2859 = !DILocation(line: 1327, column: 9, scope: !1236)
!2860 = !DILocation(line: 1328, column: 25, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2857, file: !376, line: 1327, column: 30)
!2862 = !DILocation(line: 1328, column: 9, scope: !2861)
!2863 = !DILocation(line: 1331, column: 9, scope: !2861)
!2864 = !DILocation(line: 1334, column: 9, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !1236, file: !376, line: 1334, column: 9)
!2866 = !DILocation(line: 1334, column: 15, scope: !2865)
!2867 = !DILocation(line: 1334, column: 9, scope: !1236)
!2868 = !DILocation(line: 1335, column: 9, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2865, file: !376, line: 1334, column: 24)
!2870 = !DILocation(line: 1335, column: 13, scope: !2869)
!2871 = !DILocation(line: 1335, column: 19, scope: !2869)
!2872 = !{!2582, !1571, i64 16}
!2873 = !DILocation(line: 1336, column: 15, scope: !2869)
!2874 = !DILocation(line: 1337, column: 5, scope: !2869)
!2875 = !DILocation(line: 1340, column: 30, scope: !1236)
!2876 = !DILocation(line: 1340, column: 34, scope: !1236)
!2877 = !DILocation(line: 1340, column: 37, scope: !1236)
!2878 = !DILocation(line: 1340, column: 44, scope: !1236)
!2879 = !DILocation(line: 1340, column: 53, scope: !1236)
!2880 = !DILocation(line: 1340, column: 61, scope: !1236)
!2881 = !DILocation(line: 1340, column: 69, scope: !1236)
!2882 = !DILocation(line: 1340, column: 12, scope: !1236)
!2883 = !DILocation(line: 1340, column: 5, scope: !1236)
!2884 = !DILocation(line: 1341, column: 1, scope: !1236)
!2885 = !DILocation(line: 208, column: 27, scope: !1249)
!2886 = !DILocation(line: 208, column: 43, scope: !1249)
!2887 = !DILocation(line: 208, column: 59, scope: !1249)
!2888 = !DILocation(line: 210, column: 5, scope: !1249)
!2889 = !DILocation(line: 210, column: 20, scope: !1249)
!2890 = !DILocation(line: 212, column: 30, scope: !1249)
!2891 = !DILocation(line: 212, column: 12, scope: !1249)
!2892 = !DILocation(line: 212, column: 8, scope: !1249)
!2893 = !DILocation(line: 213, column: 9, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !1249, file: !376, line: 213, column: 9)
!2895 = !DILocation(line: 213, column: 12, scope: !2894)
!2896 = !DILocation(line: 213, column: 9, scope: !1249)
!2897 = !DILocation(line: 214, column: 9, scope: !2894)
!2898 = !DILocation(line: 216, column: 5, scope: !1249)
!2899 = !DILocation(line: 216, column: 9, scope: !1249)
!2900 = !DILocation(line: 216, column: 15, scope: !1249)
!2901 = !DILocation(line: 217, column: 5, scope: !1249)
!2902 = !DILocation(line: 217, column: 9, scope: !1249)
!2903 = !DILocation(line: 217, column: 14, scope: !1249)
!2904 = !DILocation(line: 218, column: 24, scope: !1249)
!2905 = !DILocation(line: 218, column: 12, scope: !1249)
!2906 = !DILocation(line: 218, column: 5, scope: !1249)
!2907 = !DILocation(line: 219, column: 1, scope: !1249)
!2908 = !DILocation(line: 201, column: 26, scope: !569)
!2909 = !DILocation(line: 203, column: 18, scope: !569)
!2910 = !DILocation(line: 203, column: 22, scope: !569)
!2911 = !DILocation(line: 203, column: 26, scope: !569)
!2912 = !DILocation(line: 203, column: 5, scope: !569)
!2913 = !DILocation(line: 204, column: 1, scope: !569)
!2914 = !DILocation(line: 187, column: 29, scope: !572)
!2915 = !DILocation(line: 187, column: 42, scope: !572)
!2916 = !DILocation(line: 189, column: 9, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !572, file: !376, line: 189, column: 9)
!2918 = !DILocation(line: 189, column: 14, scope: !2917)
!2919 = !{!2583, !1365, i64 8}
!2920 = !DILocation(line: 189, column: 9, scope: !572)
!2921 = !DILocation(line: 190, column: 27, scope: !2917)
!2922 = !DILocation(line: 190, column: 32, scope: !2917)
!2923 = !{!2583, !1365, i64 0}
!2924 = !DILocation(line: 190, column: 9, scope: !2917)
!2925 = !DILocation(line: 190, column: 14, scope: !2917)
!2926 = !DILocation(line: 190, column: 20, scope: !2917)
!2927 = !DILocation(line: 190, column: 25, scope: !2917)
!2928 = !DILocation(line: 192, column: 20, scope: !2917)
!2929 = !DILocation(line: 192, column: 25, scope: !2917)
!2930 = !DILocation(line: 192, column: 9, scope: !2917)
!2931 = !DILocation(line: 192, column: 13, scope: !2917)
!2932 = !DILocation(line: 192, column: 18, scope: !2917)
!2933 = !DILocation(line: 194, column: 9, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !572, file: !376, line: 194, column: 9)
!2935 = !DILocation(line: 194, column: 14, scope: !2934)
!2936 = !DILocation(line: 194, column: 9, scope: !572)
!2937 = !DILocation(line: 195, column: 27, scope: !2934)
!2938 = !DILocation(line: 195, column: 32, scope: !2934)
!2939 = !DILocation(line: 195, column: 9, scope: !2934)
!2940 = !DILocation(line: 195, column: 14, scope: !2934)
!2941 = !DILocation(line: 195, column: 20, scope: !2934)
!2942 = !DILocation(line: 195, column: 25, scope: !2934)
!2943 = !DILocation(line: 197, column: 16, scope: !572)
!2944 = !DILocation(line: 197, column: 5, scope: !572)
!2945 = !DILocation(line: 198, column: 1, scope: !572)
!2946 = !DILocation(line: 164, column: 21, scope: !578)
!2947 = !DILocation(line: 166, column: 5, scope: !578)
!2948 = !DILocation(line: 166, column: 16, scope: !578)
!2949 = !DILocation(line: 166, column: 24, scope: !578)
!2950 = !DILocation(line: 166, column: 31, scope: !578)
!2951 = !DILocation(line: 168, column: 5, scope: !578)
!2952 = !DILocation(line: 168, column: 14, scope: !2953)
!2953 = !DILexicalBlockFile(scope: !2954, file: !376, discriminator: 1)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !376, line: 168, column: 14)
!2955 = distinct !DILexicalBlock(scope: !578, file: !376, line: 168, column: 8)
!2956 = !DILocation(line: 168, column: 21, scope: !2954)
!2957 = !{!2583, !1365, i64 32}
!2958 = !DILocation(line: 168, column: 14, scope: !2954)
!2959 = !DILocation(line: 168, column: 14, scope: !2955)
!2960 = !DILocation(line: 168, column: 38, scope: !2961)
!2961 = !DILexicalBlockFile(scope: !2954, file: !376, discriminator: 2)
!2962 = !DILocation(line: 168, column: 45, scope: !2954)
!2963 = !DILocation(line: 168, column: 27, scope: !2954)
!2964 = !DILocation(line: 168, column: 52, scope: !2965)
!2965 = !DILexicalBlockFile(scope: !2966, file: !376, discriminator: 4)
!2966 = !DILexicalBlockFile(scope: !2955, file: !376, discriminator: 3)
!2967 = !DILocation(line: 168, column: 52, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2955, file: !376, discriminator: 5)
!2969 = !DILocation(line: 169, column: 5, scope: !578)
!2970 = !DILocation(line: 169, column: 14, scope: !2971)
!2971 = !DILexicalBlockFile(scope: !2972, file: !376, discriminator: 1)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !376, line: 169, column: 14)
!2973 = distinct !DILexicalBlock(scope: !578, file: !376, line: 169, column: 8)
!2974 = !DILocation(line: 169, column: 20, scope: !2972)
!2975 = !DILocation(line: 169, column: 14, scope: !2972)
!2976 = !DILocation(line: 169, column: 14, scope: !2973)
!2977 = !DILocation(line: 169, column: 39, scope: !2978)
!2978 = !DILexicalBlockFile(scope: !2972, file: !376, discriminator: 2)
!2979 = !DILocation(line: 169, column: 45, scope: !2972)
!2980 = !DILocation(line: 169, column: 28, scope: !2972)
!2981 = !DILocation(line: 169, column: 54, scope: !2982)
!2982 = !DILexicalBlockFile(scope: !2983, file: !376, discriminator: 4)
!2983 = !DILexicalBlockFile(scope: !2973, file: !376, discriminator: 3)
!2984 = !DILocation(line: 169, column: 54, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2973, file: !376, discriminator: 5)
!2986 = !DILocation(line: 170, column: 5, scope: !578)
!2987 = !DILocation(line: 170, column: 14, scope: !2988)
!2988 = !DILexicalBlockFile(scope: !2989, file: !376, discriminator: 1)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !376, line: 170, column: 14)
!2990 = distinct !DILexicalBlock(scope: !578, file: !376, line: 170, column: 8)
!2991 = !DILocation(line: 170, column: 20, scope: !2989)
!2992 = !DILocation(line: 170, column: 14, scope: !2989)
!2993 = !DILocation(line: 170, column: 14, scope: !2990)
!2994 = !DILocation(line: 170, column: 38, scope: !2995)
!2995 = !DILexicalBlockFile(scope: !2989, file: !376, discriminator: 2)
!2996 = !DILocation(line: 170, column: 44, scope: !2989)
!2997 = !DILocation(line: 170, column: 38, scope: !2989)
!2998 = !DILocation(line: 170, column: 27, scope: !2989)
!2999 = !DILocation(line: 170, column: 52, scope: !3000)
!3000 = !DILexicalBlockFile(scope: !3001, file: !376, discriminator: 4)
!3001 = !DILexicalBlockFile(scope: !2990, file: !376, discriminator: 3)
!3002 = !DILocation(line: 170, column: 52, scope: !3003)
!3003 = !DILexicalBlockFile(scope: !2990, file: !376, discriminator: 5)
!3004 = !DILocation(line: 171, column: 5, scope: !578)
!3005 = !DILocation(line: 171, column: 14, scope: !3006)
!3006 = !DILexicalBlockFile(scope: !3007, file: !376, discriminator: 1)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !376, line: 171, column: 14)
!3008 = distinct !DILexicalBlock(scope: !578, file: !376, line: 171, column: 8)
!3009 = !DILocation(line: 171, column: 20, scope: !3007)
!3010 = !DILocation(line: 171, column: 14, scope: !3007)
!3011 = !DILocation(line: 171, column: 14, scope: !3008)
!3012 = !DILocation(line: 171, column: 40, scope: !3013)
!3013 = !DILexicalBlockFile(scope: !3007, file: !376, discriminator: 2)
!3014 = !DILocation(line: 171, column: 46, scope: !3007)
!3015 = !DILocation(line: 171, column: 40, scope: !3007)
!3016 = !DILocation(line: 171, column: 29, scope: !3007)
!3017 = !DILocation(line: 171, column: 56, scope: !3018)
!3018 = !DILexicalBlockFile(scope: !3019, file: !376, discriminator: 4)
!3019 = !DILexicalBlockFile(scope: !3008, file: !376, discriminator: 3)
!3020 = !DILocation(line: 171, column: 56, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !3008, file: !376, discriminator: 5)
!3022 = !DILocation(line: 172, column: 5, scope: !578)
!3023 = !DILocation(line: 172, column: 14, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !3025, file: !376, discriminator: 1)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !376, line: 172, column: 14)
!3026 = distinct !DILexicalBlock(scope: !578, file: !376, line: 172, column: 8)
!3027 = !DILocation(line: 172, column: 20, scope: !3025)
!3028 = !DILocation(line: 172, column: 14, scope: !3025)
!3029 = !DILocation(line: 172, column: 14, scope: !3026)
!3030 = !DILocation(line: 172, column: 43, scope: !3031)
!3031 = !DILexicalBlockFile(scope: !3025, file: !376, discriminator: 2)
!3032 = !DILocation(line: 172, column: 49, scope: !3025)
!3033 = !DILocation(line: 172, column: 43, scope: !3025)
!3034 = !DILocation(line: 172, column: 32, scope: !3025)
!3035 = !DILocation(line: 172, column: 62, scope: !3036)
!3036 = !DILexicalBlockFile(scope: !3037, file: !376, discriminator: 4)
!3037 = !DILexicalBlockFile(scope: !3026, file: !376, discriminator: 3)
!3038 = !DILocation(line: 172, column: 62, scope: !3039)
!3039 = !DILexicalBlockFile(scope: !3026, file: !376, discriminator: 5)
!3040 = !DILocation(line: 174, column: 16, scope: !578)
!3041 = !DILocation(line: 174, column: 5, scope: !578)
!3042 = !DILocation(line: 175, column: 1, scope: !578)
!3043 = !DILocation(line: 1576, column: 29, scope: !584)
!3044 = !DILocation(line: 1576, column: 46, scope: !584)
!3045 = !DILocation(line: 1578, column: 5, scope: !584)
!3046 = !DILocation(line: 1578, column: 14, scope: !584)
!3047 = !DILocation(line: 1578, column: 22, scope: !584)
!3048 = !DILocation(line: 1578, column: 28, scope: !584)
!3049 = !DILocation(line: 1579, column: 5, scope: !584)
!3050 = !DILocation(line: 1579, column: 16, scope: !584)
!3051 = !DILocation(line: 1579, column: 24, scope: !584)
!3052 = !DILocation(line: 1579, column: 31, scope: !584)
!3053 = !DILocation(line: 1580, column: 5, scope: !584)
!3054 = !DILocation(line: 1580, column: 11, scope: !584)
!3055 = !DILocation(line: 1582, column: 9, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !584, file: !376, line: 1582, column: 9)
!3057 = !DILocation(line: 1582, column: 15, scope: !3056)
!3058 = !DILocation(line: 1582, column: 20, scope: !3056)
!3059 = !DILocation(line: 1582, column: 9, scope: !584)
!3060 = !DILocation(line: 1583, column: 25, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3056, file: !376, line: 1582, column: 26)
!3062 = !DILocation(line: 1583, column: 9, scope: !3061)
!3063 = !DILocation(line: 1584, column: 9, scope: !3061)
!3064 = !DILocation(line: 1587, column: 26, scope: !584)
!3065 = !DILocation(line: 1587, column: 32, scope: !584)
!3066 = !DILocation(line: 1587, column: 11, scope: !584)
!3067 = !DILocation(line: 1587, column: 9, scope: !584)
!3068 = !DILocation(line: 1588, column: 9, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !584, file: !376, line: 1588, column: 9)
!3070 = !DILocation(line: 1588, column: 13, scope: !3069)
!3071 = !DILocation(line: 1588, column: 9, scope: !584)
!3072 = !DILocation(line: 1589, column: 9, scope: !3069)
!3073 = !DILocation(line: 1591, column: 9, scope: !595)
!3074 = !DILocation(line: 1591, column: 15, scope: !595)
!3075 = !DILocation(line: 1591, column: 20, scope: !595)
!3076 = !DILocation(line: 1591, column: 9, scope: !584)
!3077 = !DILocation(line: 1592, column: 30, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !595, file: !376, line: 1591, column: 26)
!3079 = !DILocation(line: 1592, column: 35, scope: !3078)
!3080 = !DILocation(line: 1592, column: 41, scope: !3078)
!3081 = !DILocation(line: 1592, column: 49, scope: !3078)
!3082 = !DILocation(line: 1592, column: 55, scope: !3078)
!3083 = !DILocation(line: 1592, column: 16, scope: !3078)
!3084 = !DILocation(line: 1592, column: 9, scope: !3078)
!3085 = !DILocation(line: 1595, column: 9, scope: !594)
!3086 = !DILocation(line: 1595, column: 24, scope: !594)
!3087 = !DILocation(line: 1596, column: 9, scope: !594)
!3088 = !DILocation(line: 1596, column: 20, scope: !594)
!3089 = !DILocation(line: 1598, column: 31, scope: !594)
!3090 = !DILocation(line: 1598, column: 14, scope: !594)
!3091 = !DILocation(line: 1598, column: 12, scope: !594)
!3092 = !DILocation(line: 1599, column: 13, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !594, file: !376, line: 1599, column: 13)
!3094 = !DILocation(line: 1599, column: 16, scope: !3093)
!3095 = !DILocation(line: 1599, column: 13, scope: !594)
!3096 = !DILocation(line: 1600, column: 13, scope: !3093)
!3097 = !DILocation(line: 1602, column: 48, scope: !600)
!3098 = !DILocation(line: 1602, column: 36, scope: !600)
!3099 = !DILocation(line: 1602, column: 54, scope: !600)
!3100 = !DILocation(line: 1602, column: 13, scope: !600)
!3101 = !DILocation(line: 1602, column: 99, scope: !600)
!3102 = !DILocation(line: 1602, column: 13, scope: !594)
!3103 = !DILocation(line: 1603, column: 13, scope: !599)
!3104 = !DILocation(line: 1603, column: 18, scope: !3105)
!3105 = !DILexicalBlockFile(scope: !598, file: !376, discriminator: 1)
!3106 = !DILocation(line: 1603, column: 28, scope: !598)
!3107 = !DILocation(line: 1603, column: 58, scope: !598)
!3108 = !DILocation(line: 1603, column: 45, scope: !598)
!3109 = !DILocation(line: 1603, column: 71, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !598, file: !376, line: 1603, column: 68)
!3111 = !DILocation(line: 1603, column: 88, scope: !3110)
!3112 = !DILocation(line: 1603, column: 68, scope: !3110)
!3113 = !DILocation(line: 1603, column: 98, scope: !3110)
!3114 = !DILocation(line: 1603, column: 68, scope: !598)
!3115 = !DILocation(line: 1603, column: 68, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !598, file: !376, discriminator: 2)
!3117 = !DILocation(line: 1603, column: 129, scope: !3118)
!3118 = !DILexicalBlockFile(scope: !3110, file: !376, discriminator: 3)
!3119 = !DILocation(line: 1603, column: 147, scope: !3110)
!3120 = !DILocation(line: 1603, column: 157, scope: !3110)
!3121 = !DILocation(line: 1603, column: 182, scope: !3110)
!3122 = !DILocation(line: 1603, column: 113, scope: !3110)
!3123 = !DILocation(line: 1603, column: 201, scope: !3124)
!3124 = !DILexicalBlockFile(scope: !599, file: !376, discriminator: 4)
!3125 = !DILocation(line: 1603, column: 201, scope: !598)
!3126 = !DILocation(line: 1603, column: 201, scope: !3127)
!3127 = !DILexicalBlockFile(scope: !598, file: !376, discriminator: 5)
!3128 = !DILocation(line: 1604, column: 13, scope: !599)
!3129 = !DILocation(line: 1607, column: 20, scope: !594)
!3130 = !DILocation(line: 1607, column: 24, scope: !594)
!3131 = !DILocation(line: 1607, column: 34, scope: !594)
!3132 = !DILocation(line: 1607, column: 17, scope: !594)
!3133 = !DILocation(line: 1609, column: 24, scope: !594)
!3134 = !DILocation(line: 1609, column: 9, scope: !594)
!3135 = !DILocation(line: 1609, column: 18, scope: !594)
!3136 = !DILocation(line: 1609, column: 22, scope: !594)
!3137 = !DILocation(line: 1610, column: 25, scope: !594)
!3138 = !DILocation(line: 1610, column: 34, scope: !594)
!3139 = !DILocation(line: 1610, column: 9, scope: !594)
!3140 = !DILocation(line: 1610, column: 18, scope: !594)
!3141 = !DILocation(line: 1610, column: 22, scope: !594)
!3142 = !DILocation(line: 1612, column: 9, scope: !594)
!3143 = !DILocation(line: 1612, column: 18, scope: !594)
!3144 = !DILocation(line: 1612, column: 22, scope: !594)
!3145 = !DILocation(line: 1613, column: 9, scope: !594)
!3146 = !DILocation(line: 1613, column: 18, scope: !594)
!3147 = !DILocation(line: 1613, column: 23, scope: !594)
!3148 = !DILocation(line: 1614, column: 13, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !594, file: !376, line: 1614, column: 13)
!3150 = !DILocation(line: 1614, column: 22, scope: !3149)
!3151 = !DILocation(line: 1614, column: 13, scope: !594)
!3152 = !DILocation(line: 1614, column: 31, scope: !3153)
!3153 = !DILexicalBlockFile(scope: !3149, file: !376, discriminator: 1)
!3154 = !DILocation(line: 1614, column: 40, scope: !3149)
!3155 = !DILocation(line: 1614, column: 47, scope: !3149)
!3156 = !DILocation(line: 1614, column: 31, scope: !3149)
!3157 = !DILocation(line: 1615, column: 13, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !594, file: !376, line: 1615, column: 13)
!3159 = !DILocation(line: 1615, column: 22, scope: !3158)
!3160 = !DILocation(line: 1615, column: 13, scope: !594)
!3161 = !DILocation(line: 1615, column: 34, scope: !3162)
!3162 = !DILexicalBlockFile(scope: !3158, file: !376, discriminator: 1)
!3163 = !DILocation(line: 1615, column: 43, scope: !3158)
!3164 = !DILocation(line: 1615, column: 53, scope: !3158)
!3165 = !DILocation(line: 1615, column: 34, scope: !3158)
!3166 = !DILocation(line: 1617, column: 21, scope: !594)
!3167 = !DILocation(line: 1617, column: 25, scope: !594)
!3168 = !DILocation(line: 1617, column: 9, scope: !594)
!3169 = !DILocation(line: 1619, column: 28, scope: !594)
!3170 = !DILocation(line: 1619, column: 16, scope: !594)
!3171 = !DILocation(line: 1619, column: 9, scope: !594)
!3172 = !DILocation(line: 1620, column: 5, scope: !595)
!3173 = !DILocation(line: 1621, column: 1, scope: !584)
!3174 = !DILocation(line: 1543, column: 27, scope: !601)
!3175 = !DILocation(line: 1543, column: 44, scope: !601)
!3176 = !DILocation(line: 1545, column: 5, scope: !601)
!3177 = !DILocation(line: 1545, column: 11, scope: !601)
!3178 = !DILocation(line: 1546, column: 5, scope: !601)
!3179 = !DILocation(line: 1546, column: 16, scope: !601)
!3180 = !DILocation(line: 1548, column: 9, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !601, file: !376, line: 1548, column: 9)
!3182 = !DILocation(line: 1548, column: 15, scope: !3181)
!3183 = !DILocation(line: 1548, column: 9, scope: !601)
!3184 = !DILocation(line: 1549, column: 18, scope: !3181)
!3185 = !DILocation(line: 1549, column: 24, scope: !3181)
!3186 = !DILocation(line: 1549, column: 16, scope: !3181)
!3187 = !DILocation(line: 1549, column: 9, scope: !3181)
!3188 = !DILocation(line: 1552, column: 18, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3181, file: !376, line: 1550, column: 10)
!3190 = !DILocation(line: 1552, column: 24, scope: !3189)
!3191 = !DILocation(line: 1552, column: 16, scope: !3189)
!3192 = !DILocation(line: 1555, column: 9, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !601, file: !376, line: 1555, column: 9)
!3194 = !DILocation(line: 1555, column: 15, scope: !3193)
!3195 = !DILocation(line: 1555, column: 9, scope: !601)
!3196 = !DILocation(line: 1556, column: 18, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3193, file: !376, line: 1555, column: 20)
!3198 = !DILocation(line: 1556, column: 15, scope: !3197)
!3199 = !DILocation(line: 1557, column: 5, scope: !3197)
!3200 = !DILocation(line: 1558, column: 9, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !601, file: !376, line: 1558, column: 9)
!3202 = !DILocation(line: 1558, column: 15, scope: !3201)
!3203 = !DILocation(line: 1558, column: 19, scope: !3201)
!3204 = !DILocation(line: 1558, column: 22, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3201, file: !376, discriminator: 1)
!3206 = !DILocation(line: 1558, column: 31, scope: !3201)
!3207 = !DILocation(line: 1558, column: 28, scope: !3201)
!3208 = !DILocation(line: 1558, column: 9, scope: !601)
!3209 = !DILocation(line: 1559, column: 25, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3201, file: !376, line: 1558, column: 39)
!3211 = !DILocation(line: 1559, column: 9, scope: !3210)
!3212 = !DILocation(line: 1560, column: 9, scope: !3210)
!3213 = !DILocation(line: 1563, column: 19, scope: !601)
!3214 = !DILocation(line: 1563, column: 25, scope: !601)
!3215 = !DILocation(line: 1563, column: 9, scope: !601)
!3216 = !DILocation(line: 1565, column: 9, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !601, file: !376, line: 1565, column: 9)
!3218 = !DILocation(line: 1565, column: 15, scope: !3217)
!3219 = !DILocation(line: 1565, column: 23, scope: !3217)
!3220 = !DILocation(line: 1565, column: 9, scope: !601)
!3221 = !DILocation(line: 1566, column: 17, scope: !3217)
!3222 = !DILocation(line: 1566, column: 23, scope: !3217)
!3223 = !DILocation(line: 1566, column: 34, scope: !3217)
!3224 = !DILocation(line: 1566, column: 32, scope: !3217)
!3225 = !DILocation(line: 1566, column: 14, scope: !3217)
!3226 = !DILocation(line: 1566, column: 10, scope: !3217)
!3227 = !DILocation(line: 1568, column: 17, scope: !3217)
!3228 = !DILocation(line: 1568, column: 23, scope: !3217)
!3229 = !DILocation(line: 1568, column: 36, scope: !3217)
!3230 = !DILocation(line: 1568, column: 34, scope: !3217)
!3231 = !DILocation(line: 1568, column: 14, scope: !3217)
!3232 = !DILocation(line: 1570, column: 13, scope: !601)
!3233 = !DILocation(line: 1570, column: 19, scope: !601)
!3234 = !DILocation(line: 1570, column: 30, scope: !601)
!3235 = !DILocation(line: 1570, column: 33, scope: !3236)
!3236 = !DILexicalBlockFile(scope: !601, file: !376, discriminator: 1)
!3237 = !DILocation(line: 1570, column: 39, scope: !601)
!3238 = !DILocation(line: 1570, column: 33, scope: !601)
!3239 = !DILocation(line: 1570, column: 53, scope: !601)
!3240 = !DILocation(line: 1570, column: 12, scope: !601)
!3241 = !DILocation(line: 1570, column: 71, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !601, file: !376, discriminator: 3)
!3243 = !DILocation(line: 1570, column: 63, scope: !601)
!3244 = !DILocation(line: 1570, column: 61, scope: !601)
!3245 = !DILocation(line: 1570, column: 78, scope: !601)
!3246 = !DILocation(line: 1570, column: 84, scope: !601)
!3247 = !DILocation(line: 1570, column: 76, scope: !601)
!3248 = !DILocation(line: 1570, column: 100, scope: !3249)
!3249 = !DILexicalBlockFile(scope: !3250, file: !376, discriminator: 4)
!3250 = !DILexicalBlockFile(scope: !601, file: !376, discriminator: 2)
!3251 = !DILocation(line: 1570, column: 9, scope: !3252)
!3252 = !DILexicalBlockFile(scope: !3253, file: !376, discriminator: 6)
!3253 = !DILexicalBlockFile(scope: !601, file: !376, discriminator: 5)
!3254 = !DILocation(line: 1572, column: 12, scope: !601)
!3255 = !DILocation(line: 1572, column: 5, scope: !601)
!3256 = !DILocation(line: 1573, column: 1, scope: !601)
!3257 = !DILocation(line: 243, column: 34, scope: !609)
!3258 = !DILocation(line: 243, column: 59, scope: !609)
!3259 = !DILocation(line: 243, column: 67, scope: !609)
!3260 = !DILocation(line: 245, column: 5, scope: !609)
!3261 = !DILocation(line: 245, column: 16, scope: !609)
!3262 = !DILocation(line: 245, column: 24, scope: !609)
!3263 = !DILocation(line: 245, column: 28, scope: !609)
!3264 = !DILocation(line: 245, column: 38, scope: !609)
!3265 = !DILocation(line: 247, column: 28, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !609, file: !376, line: 247, column: 9)
!3267 = !DILocation(line: 247, column: 38, scope: !3266)
!3268 = !DILocation(line: 247, column: 44, scope: !3266)
!3269 = !DILocation(line: 247, column: 9, scope: !3266)
!3270 = !DILocation(line: 247, column: 51, scope: !3266)
!3271 = !DILocation(line: 247, column: 9, scope: !609)
!3272 = !DILocation(line: 248, column: 9, scope: !3266)
!3273 = !DILocation(line: 250, column: 17, scope: !609)
!3274 = !DILocation(line: 250, column: 21, scope: !609)
!3275 = !DILocation(line: 250, column: 5, scope: !609)
!3276 = !DILocation(line: 250, column: 9, scope: !609)
!3277 = !DILocation(line: 250, column: 14, scope: !609)
!3278 = !DILocation(line: 252, column: 5, scope: !609)
!3279 = !DILocation(line: 252, column: 9, scope: !609)
!3280 = !DILocation(line: 252, column: 15, scope: !609)
!3281 = !DILocation(line: 252, column: 20, scope: !609)
!3282 = !DILocation(line: 253, column: 5, scope: !609)
!3283 = !DILocation(line: 253, column: 9, scope: !609)
!3284 = !DILocation(line: 253, column: 15, scope: !609)
!3285 = !DILocation(line: 253, column: 20, scope: !609)
!3286 = !DILocation(line: 254, column: 5, scope: !609)
!3287 = !DILocation(line: 254, column: 9, scope: !609)
!3288 = !DILocation(line: 254, column: 15, scope: !609)
!3289 = !DILocation(line: 254, column: 19, scope: !609)
!3290 = !{!2583, !1376, i64 16}
!3291 = !DILocation(line: 255, column: 5, scope: !609)
!3292 = !DILocation(line: 255, column: 9, scope: !609)
!3293 = !DILocation(line: 255, column: 15, scope: !609)
!3294 = !DILocation(line: 255, column: 22, scope: !609)
!3295 = !{!2583, !1376, i64 24}
!3296 = !DILocation(line: 256, column: 5, scope: !609)
!3297 = !DILocation(line: 256, column: 9, scope: !609)
!3298 = !DILocation(line: 256, column: 15, scope: !609)
!3299 = !DILocation(line: 256, column: 20, scope: !609)
!3300 = !DILocation(line: 258, column: 23, scope: !609)
!3301 = !DILocation(line: 258, column: 29, scope: !609)
!3302 = !DILocation(line: 258, column: 5, scope: !609)
!3303 = !DILocation(line: 258, column: 9, scope: !609)
!3304 = !DILocation(line: 258, column: 15, scope: !609)
!3305 = !DILocation(line: 258, column: 21, scope: !609)
!3306 = !DILocation(line: 259, column: 5, scope: !609)
!3307 = !DILocation(line: 259, column: 9, scope: !609)
!3308 = !DILocation(line: 259, column: 15, scope: !609)
!3309 = !DILocation(line: 259, column: 23, scope: !609)
!3310 = !{!2583, !1376, i64 48}
!3311 = !DILocation(line: 261, column: 5, scope: !609)
!3312 = !DILocation(line: 262, column: 1, scope: !609)
!3313 = !DILocation(line: 265, column: 21, scope: !617)
!3314 = !DILocation(line: 267, column: 9, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !617, file: !376, line: 267, column: 9)
!3316 = !DILocation(line: 267, column: 16, scope: !3315)
!3317 = !DILocation(line: 267, column: 21, scope: !3315)
!3318 = !{!2583, !1571, i64 92}
!3319 = !DILocation(line: 267, column: 26, scope: !3315)
!3320 = !DILocation(line: 267, column: 9, scope: !617)
!3321 = !DILocation(line: 268, column: 9, scope: !3315)
!3322 = !DILocation(line: 268, column: 16, scope: !3315)
!3323 = !DILocation(line: 268, column: 22, scope: !3315)
!3324 = !DILocation(line: 269, column: 9, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !617, file: !376, line: 269, column: 9)
!3326 = !DILocation(line: 269, column: 16, scope: !3325)
!3327 = !DILocation(line: 269, column: 21, scope: !3325)
!3328 = !{!2583, !1365, i64 120}
!3329 = !DILocation(line: 269, column: 9, scope: !617)
!3330 = !DILocation(line: 270, column: 9, scope: !3325)
!3331 = !DILocation(line: 270, column: 16, scope: !3325)
!3332 = !DILocation(line: 270, column: 22, scope: !3325)
!3333 = !DILocation(line: 271, column: 32, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !617, file: !376, line: 271, column: 9)
!3335 = !DILocation(line: 271, column: 39, scope: !3334)
!3336 = !DILocation(line: 271, column: 9, scope: !3334)
!3337 = !DILocation(line: 271, column: 9, scope: !617)
!3338 = !DILocation(line: 272, column: 9, scope: !3334)
!3339 = !DILocation(line: 272, column: 16, scope: !3334)
!3340 = !DILocation(line: 272, column: 22, scope: !3334)
!3341 = !DILocation(line: 273, column: 32, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !617, file: !376, line: 273, column: 9)
!3343 = !DILocation(line: 273, column: 39, scope: !3342)
!3344 = !DILocation(line: 273, column: 9, scope: !3342)
!3345 = !DILocation(line: 273, column: 9, scope: !617)
!3346 = !DILocation(line: 274, column: 9, scope: !3342)
!3347 = !DILocation(line: 274, column: 16, scope: !3342)
!3348 = !DILocation(line: 274, column: 22, scope: !3342)
!3349 = !DILocation(line: 275, column: 1, scope: !617)
!3350 = !DILocation(line: 1768, column: 34, scope: !620)
!3351 = !DILocation(line: 1768, column: 50, scope: !620)
!3352 = !DILocation(line: 1770, column: 5, scope: !620)
!3353 = !DILocation(line: 1770, column: 20, scope: !620)
!3354 = !DILocation(line: 1771, column: 5, scope: !620)
!3355 = !DILocation(line: 1771, column: 14, scope: !620)
!3356 = !DILocation(line: 1772, column: 5, scope: !620)
!3357 = !DILocation(line: 1772, column: 16, scope: !620)
!3358 = !DILocation(line: 1772, column: 24, scope: !620)
!3359 = !DILocation(line: 1772, column: 30, scope: !620)
!3360 = !DILocation(line: 1772, column: 36, scope: !620)
!3361 = !DILocation(line: 1774, column: 9, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !620, file: !376, line: 1774, column: 9)
!3363 = !DILocation(line: 1774, column: 15, scope: !3362)
!3364 = !DILocation(line: 1774, column: 20, scope: !3362)
!3365 = !DILocation(line: 1774, column: 9, scope: !620)
!3366 = !DILocation(line: 1775, column: 30, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !376, line: 1775, column: 13)
!3368 = distinct !DILexicalBlock(scope: !3362, file: !376, line: 1774, column: 26)
!3369 = !DILocation(line: 1775, column: 37, scope: !3367)
!3370 = !DILocation(line: 1775, column: 48, scope: !3367)
!3371 = !DILocation(line: 1775, column: 57, scope: !3367)
!3372 = !DILocation(line: 1775, column: 74, scope: !3367)
!3373 = !DILocation(line: 1775, column: 80, scope: !3367)
!3374 = !DILocation(line: 1775, column: 100, scope: !3375)
!3375 = !DILexicalBlockFile(scope: !3367, file: !376, discriminator: 1)
!3376 = !DILocation(line: 1775, column: 85, scope: !3367)
!3377 = !DILocation(line: 1775, column: 107, scope: !3367)
!3378 = !DILocation(line: 1775, column: 116, scope: !3367)
!3379 = !DILocation(line: 1775, column: 13, scope: !3368)
!3380 = !DILocation(line: 1776, column: 34, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3367, file: !376, line: 1775, column: 122)
!3382 = !DILocation(line: 1776, column: 40, scope: !3381)
!3383 = !DILocation(line: 1776, column: 45, scope: !3381)
!3384 = !DILocation(line: 1776, column: 51, scope: !3381)
!3385 = !DILocation(line: 1776, column: 59, scope: !3381)
!3386 = !DILocation(line: 1776, column: 65, scope: !3381)
!3387 = !DILocation(line: 1776, column: 20, scope: !3381)
!3388 = !DILocation(line: 1776, column: 13, scope: !3381)
!3389 = !DILocation(line: 1778, column: 18, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3367, file: !376, line: 1778, column: 18)
!3391 = !DILocation(line: 1778, column: 22, scope: !3390)
!3392 = !DILocation(line: 1778, column: 18, scope: !3367)
!3393 = !DILocation(line: 1779, column: 29, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !376, line: 1778, column: 48)
!3395 = !DILocation(line: 1779, column: 16, scope: !3394)
!3396 = !DILocation(line: 1779, column: 37, scope: !3394)
!3397 = !DILocation(line: 1779, column: 46, scope: !3394)
!3398 = !DILocation(line: 1780, column: 32, scope: !3394)
!3399 = !DILocation(line: 1780, column: 20, scope: !3394)
!3400 = !DILocation(line: 1780, column: 13, scope: !3394)
!3401 = !DILocation(line: 1783, column: 29, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3390, file: !376, line: 1782, column: 14)
!3403 = !DILocation(line: 1783, column: 13, scope: !3402)
!3404 = !DILocation(line: 1784, column: 13, scope: !3402)
!3405 = !DILocation(line: 1787, column: 11, scope: !631)
!3406 = !DILocation(line: 1787, column: 17, scope: !631)
!3407 = !DILocation(line: 1787, column: 26, scope: !631)
!3408 = !{!1569, !1365, i64 96}
!3409 = !DILocation(line: 1787, column: 39, scope: !631)
!3410 = !DILocation(line: 1787, column: 53, scope: !631)
!3411 = !DILocation(line: 1787, column: 57, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !631, file: !376, discriminator: 1)
!3413 = !DILocation(line: 1787, column: 63, scope: !631)
!3414 = !DILocation(line: 1787, column: 72, scope: !631)
!3415 = !DILocation(line: 1787, column: 86, scope: !631)
!3416 = !{!3417, !1365, i64 264}
!3417 = !{!"", !1365, i64 0, !1365, i64 8, !1365, i64 16, !1365, i64 24, !1365, i64 32, !1365, i64 40, !1365, i64 48, !1365, i64 56, !1365, i64 64, !1365, i64 72, !1365, i64 80, !1365, i64 88, !1365, i64 96, !1365, i64 104, !1365, i64 112, !1365, i64 120, !1365, i64 128, !1365, i64 136, !1365, i64 144, !1365, i64 152, !1365, i64 160, !1365, i64 168, !1365, i64 176, !1365, i64 184, !1365, i64 192, !1365, i64 200, !1365, i64 208, !1365, i64 216, !1365, i64 224, !1365, i64 232, !1365, i64 240, !1365, i64 248, !1365, i64 256, !1365, i64 264}
!3418 = !DILocation(line: 1787, column: 95, scope: !631)
!3419 = !DILocation(line: 1787, column: 9, scope: !620)
!3420 = !DILocation(line: 1788, column: 9, scope: !630)
!3421 = !DILocation(line: 1788, column: 20, scope: !630)
!3422 = !DILocation(line: 1788, column: 45, scope: !630)
!3423 = !DILocation(line: 1788, column: 28, scope: !630)
!3424 = !DILocation(line: 1789, column: 13, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !630, file: !376, line: 1789, column: 13)
!3426 = !DILocation(line: 1789, column: 19, scope: !3425)
!3427 = !DILocation(line: 1789, column: 25, scope: !3425)
!3428 = !DILocation(line: 1789, column: 28, scope: !3429)
!3429 = !DILexicalBlockFile(scope: !3425, file: !376, discriminator: 1)
!3430 = !DILocation(line: 1789, column: 13, scope: !630)
!3431 = !DILocation(line: 1790, column: 13, scope: !3425)
!3432 = !DILocation(line: 1791, column: 29, scope: !630)
!3433 = !DILocation(line: 1791, column: 35, scope: !630)
!3434 = !DILocation(line: 1791, column: 16, scope: !630)
!3435 = !DILocation(line: 1791, column: 9, scope: !630)
!3436 = !DILocation(line: 1792, column: 5, scope: !631)
!3437 = !DILocation(line: 1794, column: 27, scope: !620)
!3438 = !DILocation(line: 1794, column: 10, scope: !620)
!3439 = !DILocation(line: 1794, column: 8, scope: !620)
!3440 = !DILocation(line: 1795, column: 9, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !620, file: !376, line: 1795, column: 9)
!3442 = !DILocation(line: 1795, column: 12, scope: !3441)
!3443 = !DILocation(line: 1795, column: 9, scope: !620)
!3444 = !DILocation(line: 1796, column: 9, scope: !3441)
!3445 = !DILocation(line: 1799, column: 44, scope: !635)
!3446 = !DILocation(line: 1799, column: 32, scope: !635)
!3447 = !DILocation(line: 1799, column: 50, scope: !635)
!3448 = !DILocation(line: 1799, column: 9, scope: !635)
!3449 = !DILocation(line: 1799, column: 95, scope: !635)
!3450 = !DILocation(line: 1799, column: 9, scope: !620)
!3451 = !DILocation(line: 1800, column: 9, scope: !634)
!3452 = !DILocation(line: 1800, column: 14, scope: !3453)
!3453 = !DILexicalBlockFile(scope: !633, file: !376, discriminator: 1)
!3454 = !DILocation(line: 1800, column: 24, scope: !633)
!3455 = !DILocation(line: 1800, column: 54, scope: !633)
!3456 = !DILocation(line: 1800, column: 41, scope: !633)
!3457 = !DILocation(line: 1800, column: 67, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !633, file: !376, line: 1800, column: 64)
!3459 = !DILocation(line: 1800, column: 84, scope: !3458)
!3460 = !DILocation(line: 1800, column: 64, scope: !3458)
!3461 = !DILocation(line: 1800, column: 94, scope: !3458)
!3462 = !DILocation(line: 1800, column: 64, scope: !633)
!3463 = !DILocation(line: 1800, column: 64, scope: !3464)
!3464 = !DILexicalBlockFile(scope: !633, file: !376, discriminator: 2)
!3465 = !DILocation(line: 1800, column: 125, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3458, file: !376, discriminator: 3)
!3467 = !DILocation(line: 1800, column: 143, scope: !3458)
!3468 = !DILocation(line: 1800, column: 153, scope: !3458)
!3469 = !DILocation(line: 1800, column: 178, scope: !3458)
!3470 = !DILocation(line: 1800, column: 109, scope: !3458)
!3471 = !DILocation(line: 1800, column: 197, scope: !3472)
!3472 = !DILexicalBlockFile(scope: !634, file: !376, discriminator: 4)
!3473 = !DILocation(line: 1800, column: 197, scope: !633)
!3474 = !DILocation(line: 1800, column: 197, scope: !3475)
!3475 = !DILexicalBlockFile(scope: !633, file: !376, discriminator: 5)
!3476 = !DILocation(line: 1801, column: 9, scope: !634)
!3477 = !DILocation(line: 1805, column: 13, scope: !620)
!3478 = !DILocation(line: 1805, column: 17, scope: !620)
!3479 = !DILocation(line: 1805, column: 11, scope: !620)
!3480 = !DILocation(line: 1806, column: 13, scope: !620)
!3481 = !DILocation(line: 1806, column: 20, scope: !620)
!3482 = !DILocation(line: 1806, column: 10, scope: !620)
!3483 = !DILocation(line: 1807, column: 24, scope: !639)
!3484 = !DILocation(line: 1807, column: 9, scope: !639)
!3485 = !DILocation(line: 1807, column: 30, scope: !639)
!3486 = !DILocation(line: 1807, column: 9, scope: !620)
!3487 = !DILocation(line: 1808, column: 9, scope: !638)
!3488 = !DILocation(line: 1808, column: 14, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !637, file: !376, discriminator: 1)
!3490 = !DILocation(line: 1808, column: 24, scope: !637)
!3491 = !DILocation(line: 1808, column: 54, scope: !637)
!3492 = !DILocation(line: 1808, column: 41, scope: !637)
!3493 = !DILocation(line: 1808, column: 67, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !637, file: !376, line: 1808, column: 64)
!3495 = !DILocation(line: 1808, column: 84, scope: !3494)
!3496 = !DILocation(line: 1808, column: 64, scope: !3494)
!3497 = !DILocation(line: 1808, column: 94, scope: !3494)
!3498 = !DILocation(line: 1808, column: 64, scope: !637)
!3499 = !DILocation(line: 1808, column: 64, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !637, file: !376, discriminator: 2)
!3501 = !DILocation(line: 1808, column: 125, scope: !3502)
!3502 = !DILexicalBlockFile(scope: !3494, file: !376, discriminator: 3)
!3503 = !DILocation(line: 1808, column: 143, scope: !3494)
!3504 = !DILocation(line: 1808, column: 153, scope: !3494)
!3505 = !DILocation(line: 1808, column: 178, scope: !3494)
!3506 = !DILocation(line: 1808, column: 109, scope: !3494)
!3507 = !DILocation(line: 1808, column: 197, scope: !3508)
!3508 = !DILexicalBlockFile(scope: !638, file: !376, discriminator: 4)
!3509 = !DILocation(line: 1808, column: 197, scope: !637)
!3510 = !DILocation(line: 1808, column: 197, scope: !3511)
!3511 = !DILexicalBlockFile(scope: !637, file: !376, discriminator: 5)
!3512 = !DILocation(line: 1809, column: 9, scope: !638)
!3513 = !DILocation(line: 1811, column: 5, scope: !620)
!3514 = !DILocation(line: 1811, column: 12, scope: !620)
!3515 = !DILocation(line: 1811, column: 18, scope: !620)
!3516 = !DILocation(line: 1813, column: 24, scope: !643)
!3517 = !DILocation(line: 1813, column: 31, scope: !643)
!3518 = !DILocation(line: 1813, column: 40, scope: !643)
!3519 = !DILocation(line: 1813, column: 9, scope: !620)
!3520 = !DILocation(line: 1815, column: 24, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !376, line: 1815, column: 13)
!3522 = distinct !DILexicalBlock(scope: !643, file: !376, line: 1813, column: 59)
!3523 = !DILocation(line: 1815, column: 30, scope: !3521)
!3524 = !DILocation(line: 1815, column: 13, scope: !3521)
!3525 = !DILocation(line: 1815, column: 38, scope: !3521)
!3526 = !DILocation(line: 1815, column: 13, scope: !3522)
!3527 = !DILocation(line: 1816, column: 13, scope: !3521)
!3528 = !DILocation(line: 1817, column: 5, scope: !3522)
!3529 = !DILocation(line: 1818, column: 31, scope: !642)
!3530 = !DILocation(line: 1818, column: 38, scope: !642)
!3531 = !DILocation(line: 1818, column: 49, scope: !642)
!3532 = !DILocation(line: 1818, column: 58, scope: !642)
!3533 = !DILocation(line: 1818, column: 75, scope: !642)
!3534 = !DILocation(line: 1818, column: 14, scope: !643)
!3535 = !DILocation(line: 1820, column: 9, scope: !641)
!3536 = !DILocation(line: 1820, column: 19, scope: !641)
!3537 = !DILocation(line: 1820, column: 27, scope: !641)
!3538 = !DILocation(line: 1821, column: 9, scope: !641)
!3539 = !DILocation(line: 1821, column: 20, scope: !641)
!3540 = !DILocation(line: 1821, column: 23, scope: !641)
!3541 = !DILocation(line: 1823, column: 30, scope: !641)
!3542 = !DILocation(line: 1823, column: 15, scope: !641)
!3543 = !DILocation(line: 1823, column: 39, scope: !641)
!3544 = !DILocation(line: 1823, column: 11, scope: !641)
!3545 = !DILocation(line: 1824, column: 16, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !641, file: !376, line: 1824, column: 9)
!3547 = !DILocation(line: 1824, column: 14, scope: !3546)
!3548 = !DILocation(line: 1824, column: 21, scope: !3549)
!3549 = !DILexicalBlockFile(scope: !3550, file: !376, discriminator: 2)
!3550 = !DILexicalBlockFile(scope: !3551, file: !376, discriminator: 1)
!3551 = distinct !DILexicalBlock(scope: !3546, file: !376, line: 1824, column: 9)
!3552 = !DILocation(line: 1824, column: 25, scope: !3551)
!3553 = !DILocation(line: 1824, column: 23, scope: !3551)
!3554 = !DILocation(line: 1824, column: 9, scope: !3546)
!3555 = !DILocation(line: 1825, column: 56, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3551, file: !376, line: 1824, column: 33)
!3557 = !DILocation(line: 1825, column: 39, scope: !3556)
!3558 = !DILocation(line: 1825, column: 21, scope: !3556)
!3559 = !DILocation(line: 1825, column: 48, scope: !3556)
!3560 = !DILocation(line: 1825, column: 20, scope: !3556)
!3561 = !DILocation(line: 1825, column: 17, scope: !3556)
!3562 = !DILocation(line: 1826, column: 33, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3556, file: !376, line: 1826, column: 17)
!3564 = !DILocation(line: 1826, column: 40, scope: !3563)
!3565 = !DILocation(line: 1826, column: 49, scope: !3563)
!3566 = !DILocation(line: 1826, column: 17, scope: !3556)
!3567 = !DILocation(line: 1827, column: 17, scope: !3563)
!3568 = !DILocation(line: 1828, column: 28, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3556, file: !376, line: 1828, column: 17)
!3570 = !DILocation(line: 1828, column: 34, scope: !3569)
!3571 = !DILocation(line: 1828, column: 44, scope: !3569)
!3572 = !DILocation(line: 1828, column: 39, scope: !3569)
!3573 = !DILocation(line: 1828, column: 17, scope: !3569)
!3574 = !DILocation(line: 1828, column: 47, scope: !3569)
!3575 = !DILocation(line: 1828, column: 17, scope: !3556)
!3576 = !DILocation(line: 1829, column: 17, scope: !3569)
!3577 = !DILocation(line: 1830, column: 9, scope: !3556)
!3578 = !DILocation(line: 1824, column: 29, scope: !3551)
!3579 = !DILocation(line: 1824, column: 9, scope: !3551)
!3580 = !DILocation(line: 1831, column: 5, scope: !642)
!3581 = !DILocation(line: 1831, column: 5, scope: !3582)
!3582 = !DILexicalBlockFile(scope: !642, file: !376, discriminator: 1)
!3583 = !DILocation(line: 1831, column: 5, scope: !641)
!3584 = !DILocation(line: 1833, column: 9, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !642, file: !376, line: 1832, column: 10)
!3586 = !DILocation(line: 1836, column: 14, scope: !620)
!3587 = !DILocation(line: 1836, column: 5, scope: !620)
!3588 = !DILocation(line: 1837, column: 16, scope: !620)
!3589 = !DILocation(line: 1837, column: 5, scope: !620)
!3590 = !DILocation(line: 1839, column: 24, scope: !620)
!3591 = !DILocation(line: 1839, column: 12, scope: !620)
!3592 = !DILocation(line: 1839, column: 5, scope: !620)
!3593 = !DILocation(line: 1843, column: 18, scope: !620)
!3594 = !DILocation(line: 1845, column: 9, scope: !620)
!3595 = !DILocation(line: 1845, column: 14, scope: !620)
!3596 = !DILocation(line: 1845, column: 23, scope: !620)
!3597 = !{!1569, !1365, i64 24}
!3598 = !DILocation(line: 1843, column: 5, scope: !620)
!3599 = !DILocation(line: 1847, column: 5, scope: !620)
!3600 = !DILocation(line: 1847, column: 10, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !647, file: !376, discriminator: 1)
!3602 = !DILocation(line: 1847, column: 20, scope: !647)
!3603 = !DILocation(line: 1847, column: 50, scope: !647)
!3604 = !DILocation(line: 1847, column: 37, scope: !647)
!3605 = !DILocation(line: 1847, column: 63, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !647, file: !376, line: 1847, column: 60)
!3607 = !DILocation(line: 1847, column: 80, scope: !3606)
!3608 = !DILocation(line: 1847, column: 60, scope: !3606)
!3609 = !DILocation(line: 1847, column: 90, scope: !3606)
!3610 = !DILocation(line: 1847, column: 60, scope: !647)
!3611 = !DILocation(line: 1847, column: 60, scope: !3612)
!3612 = !DILexicalBlockFile(scope: !647, file: !376, discriminator: 2)
!3613 = !DILocation(line: 1847, column: 121, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3606, file: !376, discriminator: 3)
!3615 = !DILocation(line: 1847, column: 139, scope: !3606)
!3616 = !DILocation(line: 1847, column: 149, scope: !3606)
!3617 = !DILocation(line: 1847, column: 174, scope: !3606)
!3618 = !DILocation(line: 1847, column: 105, scope: !3606)
!3619 = !DILocation(line: 1847, column: 193, scope: !3620)
!3620 = !DILexicalBlockFile(scope: !620, file: !376, discriminator: 4)
!3621 = !DILocation(line: 1847, column: 193, scope: !647)
!3622 = !DILocation(line: 1847, column: 193, scope: !3623)
!3623 = !DILexicalBlockFile(scope: !647, file: !376, discriminator: 5)
!3624 = !DILocation(line: 1848, column: 5, scope: !620)
!3625 = !DILocation(line: 1849, column: 1, scope: !620)
!3626 = !DILocation(line: 1853, column: 38, scope: !677)
!3627 = !DILocation(line: 1853, column: 54, scope: !677)
!3628 = !DILocation(line: 1853, column: 69, scope: !677)
!3629 = !DILocation(line: 1855, column: 5, scope: !677)
!3630 = !DILocation(line: 1855, column: 20, scope: !677)
!3631 = !DILocation(line: 1856, column: 5, scope: !677)
!3632 = !DILocation(line: 1856, column: 16, scope: !677)
!3633 = !DILocation(line: 1856, column: 24, scope: !677)
!3634 = !DILocation(line: 1856, column: 30, scope: !677)
!3635 = !DILocation(line: 1856, column: 36, scope: !677)
!3636 = !DILocation(line: 1857, column: 5, scope: !677)
!3637 = !DILocation(line: 1857, column: 15, scope: !677)
!3638 = !DILocation(line: 1858, column: 5, scope: !677)
!3639 = !DILocation(line: 1858, column: 11, scope: !677)
!3640 = !DILocation(line: 1859, column: 5, scope: !677)
!3641 = !DILocation(line: 1859, column: 16, scope: !677)
!3642 = !DILocation(line: 1860, column: 5, scope: !677)
!3643 = !DILocation(line: 1860, column: 9, scope: !677)
!3644 = !DILocation(line: 1862, column: 9, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !677, file: !376, line: 1862, column: 9)
!3646 = !DILocation(line: 1862, column: 15, scope: !3645)
!3647 = !DILocation(line: 1862, column: 9, scope: !677)
!3648 = !DILocation(line: 1863, column: 25, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3645, file: !376, line: 1862, column: 25)
!3650 = !DILocation(line: 1863, column: 9, scope: !3649)
!3651 = !DILocation(line: 1864, column: 9, scope: !3649)
!3652 = !DILocation(line: 1866, column: 9, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !677, file: !376, line: 1866, column: 9)
!3654 = !DILocation(line: 1866, column: 15, scope: !3653)
!3655 = !DILocation(line: 1866, column: 9, scope: !677)
!3656 = !DILocation(line: 1867, column: 25, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !376, line: 1866, column: 30)
!3658 = !DILocation(line: 1867, column: 9, scope: !3657)
!3659 = !DILocation(line: 1868, column: 9, scope: !3657)
!3660 = !DILocation(line: 1870, column: 9, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !677, file: !376, line: 1870, column: 9)
!3662 = !DILocation(line: 1870, column: 15, scope: !3661)
!3663 = !DILocation(line: 1870, column: 20, scope: !3661)
!3664 = !DILocation(line: 1870, column: 9, scope: !677)
!3665 = !DILocation(line: 1871, column: 13, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !376, line: 1871, column: 13)
!3667 = distinct !DILexicalBlock(scope: !3661, file: !376, line: 1870, column: 26)
!3668 = !DILocation(line: 1871, column: 17, scope: !3666)
!3669 = !DILocation(line: 1871, column: 42, scope: !3666)
!3670 = !DILocation(line: 1872, column: 31, scope: !3666)
!3671 = !DILocation(line: 1872, column: 38, scope: !3666)
!3672 = !DILocation(line: 1872, column: 49, scope: !3666)
!3673 = !DILocation(line: 1872, column: 58, scope: !3666)
!3674 = !DILocation(line: 1872, column: 75, scope: !3666)
!3675 = !DILocation(line: 1872, column: 81, scope: !3666)
!3676 = !DILocation(line: 1872, column: 101, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3666, file: !376, discriminator: 1)
!3678 = !DILocation(line: 1872, column: 86, scope: !3666)
!3679 = !DILocation(line: 1872, column: 108, scope: !3666)
!3680 = !DILocation(line: 1872, column: 117, scope: !3666)
!3681 = !DILocation(line: 1871, column: 13, scope: !3667)
!3682 = !DILocation(line: 1873, column: 27, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3666, file: !376, line: 1872, column: 124)
!3684 = !DILocation(line: 1873, column: 33, scope: !3683)
!3685 = !DILocation(line: 1873, column: 17, scope: !3683)
!3686 = !DILocation(line: 1874, column: 32, scope: !3683)
!3687 = !DILocation(line: 1874, column: 37, scope: !3683)
!3688 = !DILocation(line: 1874, column: 44, scope: !3683)
!3689 = !DILocation(line: 1874, column: 50, scope: !3683)
!3690 = !DILocation(line: 1874, column: 58, scope: !3683)
!3691 = !DILocation(line: 1874, column: 64, scope: !3683)
!3692 = !DILocation(line: 1874, column: 20, scope: !3683)
!3693 = !DILocation(line: 1874, column: 13, scope: !3683)
!3694 = !DILocation(line: 1877, column: 29, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3666, file: !376, line: 1876, column: 14)
!3696 = !DILocation(line: 1877, column: 13, scope: !3695)
!3697 = !DILocation(line: 1878, column: 13, scope: !3695)
!3698 = !DILocation(line: 1881, column: 9, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !677, file: !376, line: 1881, column: 9)
!3700 = !DILocation(line: 1881, column: 15, scope: !3699)
!3701 = !DILocation(line: 1881, column: 20, scope: !3699)
!3702 = !DILocation(line: 1881, column: 25, scope: !3699)
!3703 = !DILocation(line: 1881, column: 30, scope: !3704)
!3704 = !DILexicalBlockFile(scope: !3699, file: !376, discriminator: 1)
!3705 = !DILocation(line: 1881, column: 36, scope: !3699)
!3706 = !DILocation(line: 1881, column: 45, scope: !3699)
!3707 = !DILocation(line: 1881, column: 58, scope: !3699)
!3708 = !DILocation(line: 1881, column: 72, scope: !3699)
!3709 = !DILocation(line: 1881, column: 76, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3699, file: !376, discriminator: 2)
!3711 = !DILocation(line: 1881, column: 82, scope: !3699)
!3712 = !DILocation(line: 1881, column: 91, scope: !3699)
!3713 = !DILocation(line: 1881, column: 105, scope: !3699)
!3714 = !DILocation(line: 1881, column: 114, scope: !3699)
!3715 = !DILocation(line: 1881, column: 9, scope: !677)
!3716 = !DILocation(line: 1883, column: 34, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3699, file: !376, line: 1881, column: 130)
!3718 = !DILocation(line: 1883, column: 17, scope: !3717)
!3719 = !DILocation(line: 1883, column: 15, scope: !3717)
!3720 = !DILocation(line: 1884, column: 13, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3717, file: !376, line: 1884, column: 13)
!3722 = !DILocation(line: 1884, column: 19, scope: !3721)
!3723 = !DILocation(line: 1884, column: 25, scope: !3721)
!3724 = !DILocation(line: 1884, column: 28, scope: !3725)
!3725 = !DILexicalBlockFile(scope: !3721, file: !376, discriminator: 1)
!3726 = !DILocation(line: 1884, column: 13, scope: !3717)
!3727 = !DILocation(line: 1885, column: 13, scope: !3721)
!3728 = !DILocation(line: 1887, column: 34, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3721, file: !376, line: 1886, column: 14)
!3730 = !DILocation(line: 1887, column: 40, scope: !3729)
!3731 = !DILocation(line: 1887, column: 19, scope: !3729)
!3732 = !DILocation(line: 1887, column: 17, scope: !3729)
!3733 = !DILocation(line: 1888, column: 17, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3729, file: !376, line: 1888, column: 17)
!3735 = !DILocation(line: 1888, column: 21, scope: !3734)
!3736 = !DILocation(line: 1888, column: 17, scope: !3729)
!3737 = !DILocation(line: 1889, column: 17, scope: !3734)
!3738 = !DILocation(line: 1891, column: 28, scope: !3717)
!3739 = !DILocation(line: 1891, column: 33, scope: !3717)
!3740 = !DILocation(line: 1891, column: 40, scope: !3717)
!3741 = !DILocation(line: 1891, column: 46, scope: !3717)
!3742 = !DILocation(line: 1891, column: 54, scope: !3717)
!3743 = !DILocation(line: 1891, column: 60, scope: !3717)
!3744 = !DILocation(line: 1891, column: 16, scope: !3717)
!3745 = !DILocation(line: 1891, column: 9, scope: !3717)
!3746 = !DILocation(line: 1895, column: 28, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !677, file: !376, line: 1895, column: 9)
!3748 = !DILocation(line: 1895, column: 9, scope: !3747)
!3749 = !DILocation(line: 1895, column: 82, scope: !3747)
!3750 = !DILocation(line: 1895, column: 9, scope: !677)
!3751 = !DILocation(line: 1896, column: 9, scope: !3747)
!3752 = !DILocation(line: 1898, column: 45, scope: !677)
!3753 = !DILocation(line: 1898, column: 51, scope: !677)
!3754 = !DILocation(line: 1898, column: 27, scope: !677)
!3755 = !DILocation(line: 1898, column: 10, scope: !677)
!3756 = !DILocation(line: 1898, column: 8, scope: !677)
!3757 = !DILocation(line: 1899, column: 9, scope: !693)
!3758 = !DILocation(line: 1899, column: 12, scope: !693)
!3759 = !DILocation(line: 1899, column: 9, scope: !677)
!3760 = !DILocation(line: 1900, column: 17, scope: !692)
!3761 = !DILocation(line: 1900, column: 21, scope: !692)
!3762 = !DILocation(line: 1900, column: 27, scope: !692)
!3763 = !DILocation(line: 1900, column: 14, scope: !692)
!3764 = !DILocation(line: 1901, column: 27, scope: !692)
!3765 = !DILocation(line: 1901, column: 15, scope: !692)
!3766 = !DILocation(line: 1901, column: 13, scope: !692)
!3767 = !DILocation(line: 1902, column: 9, scope: !692)
!3768 = !DILocation(line: 1902, column: 14, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !691, file: !376, discriminator: 1)
!3770 = !DILocation(line: 1902, column: 24, scope: !691)
!3771 = !DILocation(line: 1902, column: 54, scope: !691)
!3772 = !DILocation(line: 1902, column: 41, scope: !691)
!3773 = !DILocation(line: 1902, column: 67, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !691, file: !376, line: 1902, column: 64)
!3775 = !DILocation(line: 1902, column: 84, scope: !3774)
!3776 = !DILocation(line: 1902, column: 64, scope: !3774)
!3777 = !DILocation(line: 1902, column: 94, scope: !3774)
!3778 = !DILocation(line: 1902, column: 64, scope: !691)
!3779 = !DILocation(line: 1902, column: 64, scope: !3780)
!3780 = !DILexicalBlockFile(scope: !691, file: !376, discriminator: 2)
!3781 = !DILocation(line: 1902, column: 125, scope: !3782)
!3782 = !DILexicalBlockFile(scope: !3774, file: !376, discriminator: 3)
!3783 = !DILocation(line: 1902, column: 143, scope: !3774)
!3784 = !DILocation(line: 1902, column: 153, scope: !3774)
!3785 = !DILocation(line: 1902, column: 178, scope: !3774)
!3786 = !DILocation(line: 1902, column: 109, scope: !3774)
!3787 = !DILocation(line: 1902, column: 197, scope: !3788)
!3788 = !DILexicalBlockFile(scope: !692, file: !376, discriminator: 4)
!3789 = !DILocation(line: 1902, column: 197, scope: !691)
!3790 = !DILocation(line: 1902, column: 197, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !691, file: !376, discriminator: 5)
!3792 = !DILocation(line: 1903, column: 5, scope: !692)
!3793 = !DILocation(line: 1905, column: 5, scope: !677)
!3794 = !DILocation(line: 1906, column: 12, scope: !677)
!3795 = !DILocation(line: 1906, column: 5, scope: !677)
!3796 = !DILocation(line: 1907, column: 1, scope: !677)
!3797 = !DILocation(line: 1729, column: 27, scope: !648)
!3798 = !DILocation(line: 1731, column: 5, scope: !648)
!3799 = !DILocation(line: 1731, column: 17, scope: !648)
!3800 = !DILocation(line: 1731, column: 38, scope: !648)
!3801 = !DILocation(line: 1731, column: 61, scope: !648)
!3802 = !DILocation(line: 1732, column: 5, scope: !648)
!3803 = !DILocation(line: 1732, column: 16, scope: !648)
!3804 = !DILocation(line: 1734, column: 26, scope: !648)
!3805 = !DILocation(line: 1734, column: 32, scope: !648)
!3806 = !DILocation(line: 1734, column: 37, scope: !648)
!3807 = !DILocation(line: 1734, column: 13, scope: !648)
!3808 = !DILocation(line: 1734, column: 11, scope: !648)
!3809 = !DILocation(line: 1735, column: 28, scope: !648)
!3810 = !DILocation(line: 1735, column: 34, scope: !648)
!3811 = !DILocation(line: 1735, column: 39, scope: !648)
!3812 = !DILocation(line: 1735, column: 15, scope: !648)
!3813 = !DILocation(line: 1735, column: 13, scope: !648)
!3814 = !DILocation(line: 1736, column: 9, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !648, file: !376, line: 1736, column: 9)
!3816 = !DILocation(line: 1736, column: 15, scope: !3815)
!3817 = !DILocation(line: 1736, column: 29, scope: !3815)
!3818 = !DILocation(line: 1736, column: 32, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !3815, file: !376, discriminator: 1)
!3820 = !DILocation(line: 1736, column: 40, scope: !3815)
!3821 = !DILocation(line: 1736, column: 9, scope: !648)
!3822 = !DILocation(line: 1737, column: 9, scope: !3815)
!3823 = !DILocation(line: 1739, column: 16, scope: !648)
!3824 = !DILocation(line: 1740, column: 9, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !648, file: !376, line: 1740, column: 9)
!3826 = !DILocation(line: 1740, column: 15, scope: !3825)
!3827 = !DILocation(line: 1740, column: 9, scope: !648)
!3828 = !DILocation(line: 1741, column: 35, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !376, line: 1740, column: 27)
!3830 = !DILocation(line: 1741, column: 41, scope: !3829)
!3831 = !DILocation(line: 1741, column: 46, scope: !3829)
!3832 = !DILocation(line: 1741, column: 22, scope: !3829)
!3833 = !DILocation(line: 1741, column: 20, scope: !3829)
!3834 = !DILocation(line: 1742, column: 13, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3829, file: !376, line: 1742, column: 13)
!3836 = !DILocation(line: 1742, column: 24, scope: !3835)
!3837 = !DILocation(line: 1742, column: 13, scope: !3829)
!3838 = !DILocation(line: 1743, column: 13, scope: !3835)
!3839 = !DILocation(line: 1744, column: 5, scope: !3829)
!3840 = !DILocation(line: 1746, column: 12, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !648, file: !376, line: 1746, column: 5)
!3842 = !DILocation(line: 1746, column: 10, scope: !3841)
!3843 = !DILocation(line: 1746, column: 17, scope: !3844)
!3844 = !DILexicalBlockFile(scope: !3845, file: !376, discriminator: 2)
!3845 = !DILexicalBlockFile(scope: !3846, file: !376, discriminator: 1)
!3846 = distinct !DILexicalBlock(scope: !3841, file: !376, line: 1746, column: 5)
!3847 = !DILocation(line: 1746, column: 21, scope: !3846)
!3848 = !DILocation(line: 1746, column: 27, scope: !3846)
!3849 = !DILocation(line: 1746, column: 19, scope: !3846)
!3850 = !DILocation(line: 1746, column: 5, scope: !3841)
!3851 = !DILocation(line: 1747, column: 32, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3846, file: !376, line: 1746, column: 38)
!3853 = !DILocation(line: 1747, column: 20, scope: !3852)
!3854 = !DILocation(line: 1747, column: 26, scope: !3852)
!3855 = !DILocation(line: 1747, column: 15, scope: !3852)
!3856 = !DILocation(line: 1747, column: 9, scope: !3852)
!3857 = !DILocation(line: 1747, column: 18, scope: !3852)
!3858 = !DILocation(line: 1748, column: 36, scope: !3852)
!3859 = !DILocation(line: 1748, column: 22, scope: !3852)
!3860 = !DILocation(line: 1748, column: 28, scope: !3852)
!3861 = !DILocation(line: 1748, column: 17, scope: !3852)
!3862 = !DILocation(line: 1748, column: 9, scope: !3852)
!3863 = !DILocation(line: 1748, column: 20, scope: !3852)
!3864 = !DILocation(line: 1749, column: 13, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3852, file: !376, line: 1749, column: 13)
!3866 = !DILocation(line: 1749, column: 13, scope: !3852)
!3867 = !DILocation(line: 1750, column: 46, scope: !3865)
!3868 = !DILocation(line: 1750, column: 29, scope: !3865)
!3869 = !DILocation(line: 1750, column: 35, scope: !3865)
!3870 = !DILocation(line: 1750, column: 24, scope: !3865)
!3871 = !DILocation(line: 1750, column: 13, scope: !3865)
!3872 = !DILocation(line: 1750, column: 27, scope: !3865)
!3873 = !DILocation(line: 1751, column: 5, scope: !3852)
!3874 = !DILocation(line: 1746, column: 34, scope: !3846)
!3875 = !DILocation(line: 1746, column: 5, scope: !3846)
!3876 = !DILocation(line: 1753, column: 19, scope: !648)
!3877 = !DILocation(line: 1753, column: 5, scope: !648)
!3878 = !DILocation(line: 1753, column: 11, scope: !648)
!3879 = !DILocation(line: 1753, column: 17, scope: !648)
!3880 = !DILocation(line: 1754, column: 21, scope: !648)
!3881 = !DILocation(line: 1754, column: 5, scope: !648)
!3882 = !DILocation(line: 1754, column: 11, scope: !648)
!3883 = !DILocation(line: 1754, column: 19, scope: !648)
!3884 = !DILocation(line: 1755, column: 24, scope: !648)
!3885 = !DILocation(line: 1755, column: 5, scope: !648)
!3886 = !DILocation(line: 1755, column: 11, scope: !648)
!3887 = !DILocation(line: 1755, column: 22, scope: !648)
!3888 = !DILocation(line: 1757, column: 5, scope: !648)
!3889 = !DILocation(line: 1760, column: 5, scope: !648)
!3890 = !DILocation(line: 1761, column: 5, scope: !648)
!3891 = !DILocation(line: 1761, column: 14, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3893, file: !376, discriminator: 1)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !376, line: 1761, column: 14)
!3894 = distinct !DILexicalBlock(scope: !648, file: !376, line: 1761, column: 8)
!3895 = !DILocation(line: 1761, column: 14, scope: !3894)
!3896 = !DILocation(line: 1761, column: 32, scope: !3897)
!3897 = !DILexicalBlockFile(scope: !3893, file: !376, discriminator: 2)
!3898 = !DILocation(line: 1761, column: 21, scope: !3893)
!3899 = !DILocation(line: 1761, column: 40, scope: !3900)
!3900 = !DILexicalBlockFile(scope: !3901, file: !376, discriminator: 4)
!3901 = !DILexicalBlockFile(scope: !3894, file: !376, discriminator: 3)
!3902 = !DILocation(line: 1761, column: 40, scope: !3903)
!3903 = !DILexicalBlockFile(scope: !3894, file: !376, discriminator: 5)
!3904 = !DILocation(line: 1762, column: 5, scope: !648)
!3905 = !DILocation(line: 1762, column: 14, scope: !3906)
!3906 = !DILexicalBlockFile(scope: !3907, file: !376, discriminator: 1)
!3907 = distinct !DILexicalBlock(scope: !3908, file: !376, line: 1762, column: 14)
!3908 = distinct !DILexicalBlock(scope: !648, file: !376, line: 1762, column: 8)
!3909 = !DILocation(line: 1762, column: 14, scope: !3908)
!3910 = !DILocation(line: 1762, column: 34, scope: !3911)
!3911 = !DILexicalBlockFile(scope: !3907, file: !376, discriminator: 2)
!3912 = !DILocation(line: 1762, column: 23, scope: !3907)
!3913 = !DILocation(line: 1762, column: 44, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3915, file: !376, discriminator: 4)
!3915 = !DILexicalBlockFile(scope: !3908, file: !376, discriminator: 3)
!3916 = !DILocation(line: 1762, column: 44, scope: !3917)
!3917 = !DILexicalBlockFile(scope: !3908, file: !376, discriminator: 5)
!3918 = !DILocation(line: 1763, column: 5, scope: !648)
!3919 = !DILocation(line: 1763, column: 14, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3921, file: !376, discriminator: 1)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !376, line: 1763, column: 14)
!3922 = distinct !DILexicalBlock(scope: !648, file: !376, line: 1763, column: 8)
!3923 = !DILocation(line: 1763, column: 14, scope: !3922)
!3924 = !DILocation(line: 1763, column: 37, scope: !3925)
!3925 = !DILexicalBlockFile(scope: !3921, file: !376, discriminator: 2)
!3926 = !DILocation(line: 1763, column: 26, scope: !3921)
!3927 = !DILocation(line: 1763, column: 50, scope: !3928)
!3928 = !DILexicalBlockFile(scope: !3929, file: !376, discriminator: 4)
!3929 = !DILexicalBlockFile(scope: !3922, file: !376, discriminator: 3)
!3930 = !DILocation(line: 1763, column: 50, scope: !3931)
!3931 = !DILexicalBlockFile(scope: !3922, file: !376, discriminator: 5)
!3932 = !DILocation(line: 1764, column: 5, scope: !648)
!3933 = !DILocation(line: 1765, column: 1, scope: !648)
!3934 = !DILocation(line: 1700, column: 23, scope: !657)
!3935 = !DILocation(line: 1700, column: 39, scope: !657)
!3936 = !DILocation(line: 1700, column: 48, scope: !657)
!3937 = !DILocation(line: 1702, column: 5, scope: !657)
!3938 = !DILocation(line: 1702, column: 16, scope: !657)
!3939 = !DILocation(line: 1702, column: 23, scope: !657)
!3940 = !DILocation(line: 1702, column: 29, scope: !657)
!3941 = !DILocation(line: 1702, column: 35, scope: !657)
!3942 = !DILocation(line: 1704, column: 30, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !657, file: !376, line: 1704, column: 9)
!3944 = !DILocation(line: 1704, column: 47, scope: !3943)
!3945 = !DILocation(line: 1704, column: 35, scope: !3943)
!3946 = !DILocation(line: 1704, column: 41, scope: !3943)
!3947 = !DILocation(line: 1704, column: 9, scope: !3943)
!3948 = !DILocation(line: 1705, column: 66, scope: !3943)
!3949 = !DILocation(line: 1704, column: 9, scope: !657)
!3950 = !DILocation(line: 1706, column: 9, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3943, file: !376, line: 1705, column: 71)
!3952 = !DILocation(line: 1710, column: 9, scope: !670)
!3953 = !DILocation(line: 1710, column: 15, scope: !670)
!3954 = !DILocation(line: 1710, column: 26, scope: !670)
!3955 = !DILocation(line: 1710, column: 40, scope: !670)
!3956 = !DILocation(line: 1710, column: 43, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !670, file: !376, discriminator: 2)
!3958 = !DILocation(line: 1710, column: 47, scope: !670)
!3959 = !DILocation(line: 1710, column: 9, scope: !657)
!3960 = !DILocation(line: 1710, column: 53, scope: !3961)
!3961 = !DILexicalBlockFile(scope: !3962, file: !376, discriminator: 3)
!3962 = !DILexicalBlockFile(scope: !670, file: !376, discriminator: 1)
!3963 = !DILocation(line: 1712, column: 29, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !670, file: !376, line: 1710, column: 53)
!3965 = !DILocation(line: 1712, column: 35, scope: !3964)
!3966 = !DILocation(line: 1712, column: 55, scope: !3964)
!3967 = !DILocation(line: 1712, column: 41, scope: !3964)
!3968 = !DILocation(line: 1712, column: 47, scope: !3964)
!3969 = !DILocation(line: 1712, column: 62, scope: !3964)
!3970 = !DILocation(line: 1712, column: 60, scope: !3964)
!3971 = !DILocation(line: 1712, column: 39, scope: !3964)
!3972 = !DILocation(line: 1712, column: 9, scope: !3964)
!3973 = !DILocation(line: 1712, column: 15, scope: !3964)
!3974 = !DILocation(line: 1712, column: 19, scope: !3964)
!3975 = !DILocation(line: 1713, column: 5, scope: !3964)
!3976 = !DILocation(line: 1715, column: 9, scope: !669)
!3977 = !DILocation(line: 1715, column: 20, scope: !669)
!3978 = !DILocation(line: 1715, column: 24, scope: !669)
!3979 = !DILocation(line: 1715, column: 27, scope: !669)
!3980 = !DILocation(line: 1716, column: 9, scope: !669)
!3981 = !DILocation(line: 1716, column: 16, scope: !3982)
!3982 = !DILexicalBlockFile(scope: !3983, file: !376, discriminator: 4)
!3983 = !DILexicalBlockFile(scope: !669, file: !376, discriminator: 1)
!3984 = !DILocation(line: 1716, column: 18, scope: !669)
!3985 = !DILocation(line: 1716, column: 23, scope: !669)
!3986 = !DILocation(line: 1716, column: 43, scope: !3987)
!3987 = !DILexicalBlockFile(scope: !669, file: !376, discriminator: 2)
!3988 = !DILocation(line: 1716, column: 26, scope: !669)
!3989 = !DILocation(line: 1716, column: 32, scope: !669)
!3990 = !DILocation(line: 1716, column: 46, scope: !669)
!3991 = !DILocation(line: 1716, column: 9, scope: !3992)
!3992 = !DILexicalBlockFile(scope: !669, file: !376, discriminator: 3)
!3993 = !DILocation(line: 1717, column: 14, scope: !669)
!3994 = !DILocation(line: 1718, column: 13, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !669, file: !376, line: 1718, column: 13)
!3996 = !DILocation(line: 1718, column: 15, scope: !3995)
!3997 = !DILocation(line: 1718, column: 13, scope: !669)
!3998 = !DILocation(line: 1719, column: 13, scope: !3995)
!3999 = !DILocation(line: 1720, column: 48, scope: !669)
!4000 = !DILocation(line: 1720, column: 31, scope: !669)
!4001 = !DILocation(line: 1720, column: 37, scope: !669)
!4002 = !DILocation(line: 1720, column: 67, scope: !669)
!4003 = !DILocation(line: 1720, column: 53, scope: !669)
!4004 = !DILocation(line: 1720, column: 59, scope: !669)
!4005 = !DILocation(line: 1720, column: 74, scope: !669)
!4006 = !DILocation(line: 1720, column: 72, scope: !669)
!4007 = !DILocation(line: 1720, column: 51, scope: !669)
!4008 = !DILocation(line: 1720, column: 26, scope: !669)
!4009 = !DILocation(line: 1720, column: 9, scope: !669)
!4010 = !DILocation(line: 1720, column: 15, scope: !669)
!4011 = !DILocation(line: 1720, column: 29, scope: !669)
!4012 = !DILocation(line: 1721, column: 5, scope: !670)
!4013 = !DILocation(line: 1721, column: 5, scope: !3962)
!4014 = !DILocation(line: 1722, column: 24, scope: !657)
!4015 = !DILocation(line: 1722, column: 17, scope: !657)
!4016 = !DILocation(line: 1722, column: 5, scope: !657)
!4017 = !DILocation(line: 1722, column: 11, scope: !657)
!4018 = !DILocation(line: 1722, column: 22, scope: !657)
!4019 = !DILocation(line: 1723, column: 40, scope: !657)
!4020 = !DILocation(line: 1723, column: 26, scope: !657)
!4021 = !DILocation(line: 1723, column: 32, scope: !657)
!4022 = !DILocation(line: 1723, column: 47, scope: !657)
!4023 = !DILocation(line: 1723, column: 45, scope: !657)
!4024 = !DILocation(line: 1723, column: 19, scope: !657)
!4025 = !DILocation(line: 1723, column: 5, scope: !657)
!4026 = !DILocation(line: 1723, column: 11, scope: !657)
!4027 = !DILocation(line: 1723, column: 24, scope: !657)
!4028 = !DILocation(line: 1725, column: 5, scope: !657)
!4029 = !DILocation(line: 1726, column: 1, scope: !657)
!4030 = !DILocation(line: 1108, column: 21, scope: !671)
!4031 = !DILocation(line: 1110, column: 5, scope: !671)
!4032 = !DILocation(line: 1110, column: 16, scope: !671)
!4033 = !DILocation(line: 1112, column: 5, scope: !671)
!4034 = !DILocation(line: 1112, column: 11, scope: !671)
!4035 = !DILocation(line: 1112, column: 15, scope: !671)
!4036 = !DILocation(line: 1113, column: 12, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !671, file: !376, line: 1113, column: 5)
!4038 = !DILocation(line: 1113, column: 10, scope: !4037)
!4039 = !DILocation(line: 1113, column: 17, scope: !4040)
!4040 = !DILexicalBlockFile(scope: !4041, file: !376, discriminator: 2)
!4041 = !DILexicalBlockFile(scope: !4042, file: !376, discriminator: 1)
!4042 = distinct !DILexicalBlock(scope: !4037, file: !376, line: 1113, column: 5)
!4043 = !DILocation(line: 1113, column: 21, scope: !4042)
!4044 = !DILocation(line: 1113, column: 27, scope: !4042)
!4045 = !DILocation(line: 1113, column: 19, scope: !4042)
!4046 = !DILocation(line: 1113, column: 5, scope: !4037)
!4047 = !DILocation(line: 1114, column: 34, scope: !4042)
!4048 = !DILocation(line: 1114, column: 22, scope: !4042)
!4049 = !DILocation(line: 1114, column: 28, scope: !4042)
!4050 = !DILocation(line: 1114, column: 9, scope: !4042)
!4051 = !DILocation(line: 1114, column: 15, scope: !4042)
!4052 = !DILocation(line: 1114, column: 19, scope: !4042)
!4053 = !DILocation(line: 1113, column: 34, scope: !4042)
!4054 = !DILocation(line: 1113, column: 5, scope: !4042)
!4055 = !DILocation(line: 1115, column: 18, scope: !671)
!4056 = !DILocation(line: 1115, column: 24, scope: !671)
!4057 = !DILocation(line: 1115, column: 5, scope: !671)
!4058 = !DILocation(line: 1115, column: 11, scope: !671)
!4059 = !DILocation(line: 1115, column: 15, scope: !671)
!4060 = !DILocation(line: 1116, column: 1, scope: !671)
!4061 = !DILocation(line: 395, column: 19, scope: !694)
!4062 = !DILocation(line: 395, column: 34, scope: !694)
!4063 = !DILocation(line: 395, column: 52, scope: !694)
!4064 = !DILocation(line: 395, column: 68, scope: !694)
!4065 = !DILocation(line: 397, column: 5, scope: !694)
!4066 = !DILocation(line: 397, column: 15, scope: !694)
!4067 = !DILocation(line: 397, column: 40, scope: !694)
!4068 = !DILocation(line: 397, column: 65, scope: !694)
!4069 = !DILocation(line: 398, column: 5, scope: !694)
!4070 = !DILocation(line: 398, column: 15, scope: !694)
!4071 = !DILocation(line: 398, column: 37, scope: !694)
!4072 = !DILocation(line: 398, column: 58, scope: !694)
!4073 = !DILocation(line: 399, column: 5, scope: !694)
!4074 = !DILocation(line: 399, column: 16, scope: !694)
!4075 = !DILocation(line: 399, column: 19, scope: !694)
!4076 = !DILocation(line: 400, column: 5, scope: !694)
!4077 = !DILocation(line: 400, column: 9, scope: !694)
!4078 = !DILocation(line: 401, column: 5, scope: !694)
!4079 = !DILocation(line: 401, column: 15, scope: !694)
!4080 = !DILocation(line: 403, column: 9, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !694, file: !376, line: 403, column: 9)
!4082 = !DILocation(line: 403, column: 13, scope: !4081)
!4083 = !DILocation(line: 403, column: 9, scope: !694)
!4084 = !DILocation(line: 403, column: 32, scope: !4085)
!4085 = !DILexicalBlockFile(scope: !4081, file: !376, discriminator: 1)
!4086 = !DILocation(line: 403, column: 28, scope: !4081)
!4087 = !DILocation(line: 405, column: 35, scope: !694)
!4088 = !DILocation(line: 405, column: 14, scope: !694)
!4089 = !DILocation(line: 405, column: 12, scope: !694)
!4090 = !DILocation(line: 406, column: 9, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !694, file: !376, line: 406, column: 9)
!4092 = !DILocation(line: 406, column: 16, scope: !4091)
!4093 = !DILocation(line: 406, column: 9, scope: !694)
!4094 = !DILocation(line: 407, column: 9, scope: !4091)
!4095 = !DILocation(line: 409, column: 46, scope: !694)
!4096 = !DILocation(line: 409, column: 54, scope: !694)
!4097 = !DILocation(line: 409, column: 17, scope: !694)
!4098 = !DILocation(line: 409, column: 15, scope: !694)
!4099 = !DILocation(line: 410, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !694, file: !376, line: 410, column: 9)
!4101 = !DILocation(line: 410, column: 19, scope: !4100)
!4102 = !DILocation(line: 410, column: 9, scope: !694)
!4103 = !DILocation(line: 411, column: 9, scope: !4100)
!4104 = !DILocation(line: 413, column: 23, scope: !694)
!4105 = !DILocation(line: 413, column: 13, scope: !694)
!4106 = !DILocation(line: 413, column: 11, scope: !694)
!4107 = !DILocation(line: 416, column: 37, scope: !694)
!4108 = !DILocation(line: 416, column: 42, scope: !694)
!4109 = !DILocation(line: 416, column: 13, scope: !694)
!4110 = !DILocation(line: 416, column: 11, scope: !694)
!4111 = !DILocation(line: 417, column: 9, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !694, file: !376, line: 417, column: 9)
!4113 = !DILocation(line: 417, column: 15, scope: !4112)
!4114 = !DILocation(line: 417, column: 9, scope: !694)
!4115 = !DILocation(line: 418, column: 9, scope: !4112)
!4116 = !DILocation(line: 420, column: 12, scope: !694)
!4117 = !DILocation(line: 420, column: 10, scope: !694)
!4118 = !DILocation(line: 421, column: 9, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !694, file: !376, line: 421, column: 9)
!4120 = !DILocation(line: 421, column: 14, scope: !4119)
!4121 = !DILocation(line: 421, column: 9, scope: !694)
!4122 = !DILocation(line: 422, column: 9, scope: !4119)
!4123 = !DILocation(line: 424, column: 40, scope: !694)
!4124 = !DILocation(line: 424, column: 17, scope: !694)
!4125 = !DILocation(line: 424, column: 15, scope: !694)
!4126 = !DILocation(line: 425, column: 9, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !694, file: !376, line: 425, column: 9)
!4128 = !DILocation(line: 425, column: 19, scope: !4127)
!4129 = !DILocation(line: 425, column: 9, scope: !694)
!4130 = !DILocation(line: 426, column: 9, scope: !4127)
!4131 = !DILocation(line: 428, column: 26, scope: !694)
!4132 = !DILocation(line: 428, column: 25, scope: !694)
!4133 = !DILocation(line: 428, column: 12, scope: !694)
!4134 = !DILocation(line: 428, column: 10, scope: !694)
!4135 = !DILocation(line: 429, column: 9, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !694, file: !376, line: 429, column: 9)
!4137 = !DILocation(line: 429, column: 14, scope: !4136)
!4138 = !DILocation(line: 429, column: 9, scope: !694)
!4139 = !DILocation(line: 430, column: 9, scope: !4136)
!4140 = !DILocation(line: 432, column: 46, scope: !694)
!4141 = !DILocation(line: 432, column: 25, scope: !694)
!4142 = !DILocation(line: 432, column: 7, scope: !694)
!4143 = !DILocation(line: 432, column: 33, scope: !694)
!4144 = !DILocation(line: 432, column: 6, scope: !694)
!4145 = !DILocation(line: 432, column: 44, scope: !694)
!4146 = !DILocation(line: 433, column: 46, scope: !694)
!4147 = !DILocation(line: 433, column: 25, scope: !694)
!4148 = !DILocation(line: 433, column: 7, scope: !694)
!4149 = !DILocation(line: 433, column: 33, scope: !694)
!4150 = !DILocation(line: 433, column: 6, scope: !694)
!4151 = !DILocation(line: 433, column: 44, scope: !694)
!4152 = !DILocation(line: 435, column: 27, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !694, file: !376, line: 435, column: 9)
!4154 = !DILocation(line: 435, column: 35, scope: !4153)
!4155 = !DILocation(line: 435, column: 46, scope: !4153)
!4156 = !DILocation(line: 435, column: 55, scope: !4153)
!4157 = !DILocation(line: 435, column: 72, scope: !4153)
!4158 = !DILocation(line: 435, column: 78, scope: !4153)
!4159 = !DILocation(line: 435, column: 98, scope: !4160)
!4160 = !DILexicalBlockFile(scope: !4153, file: !376, discriminator: 1)
!4161 = !DILocation(line: 435, column: 106, scope: !4153)
!4162 = !DILocation(line: 435, column: 117, scope: !4153)
!4163 = !DILocation(line: 435, column: 126, scope: !4153)
!4164 = !DILocation(line: 435, column: 143, scope: !4153)
!4165 = !DILocation(line: 435, column: 149, scope: !4153)
!4166 = !DILocation(line: 436, column: 25, scope: !4153)
!4167 = !DILocation(line: 436, column: 33, scope: !4153)
!4168 = !DILocation(line: 436, column: 42, scope: !4153)
!4169 = !DILocation(line: 436, column: 61, scope: !4153)
!4170 = !DILocation(line: 436, column: 95, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !4153, file: !376, discriminator: 2)
!4172 = !DILocation(line: 436, column: 103, scope: !4153)
!4173 = !DILocation(line: 436, column: 64, scope: !4153)
!4174 = !DILocation(line: 436, column: 132, scope: !4153)
!4175 = !DILocation(line: 436, column: 135, scope: !4176)
!4176 = !DILexicalBlockFile(scope: !4160, file: !376, discriminator: 3)
!4177 = !DILocation(line: 436, column: 141, scope: !4153)
!4178 = !DILocation(line: 435, column: 9, scope: !694)
!4179 = !DILocation(line: 437, column: 51, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4153, file: !376, line: 436, column: 147)
!4181 = !DILocation(line: 437, column: 30, scope: !4180)
!4182 = !DILocation(line: 437, column: 12, scope: !4180)
!4183 = !DILocation(line: 437, column: 38, scope: !4180)
!4184 = !DILocation(line: 437, column: 11, scope: !4180)
!4185 = !DILocation(line: 437, column: 49, scope: !4180)
!4186 = !DILocation(line: 438, column: 5, scope: !4180)
!4187 = !DILocation(line: 439, column: 32, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4153, file: !376, line: 439, column: 14)
!4189 = !DILocation(line: 439, column: 40, scope: !4188)
!4190 = !DILocation(line: 439, column: 51, scope: !4188)
!4191 = !DILocation(line: 439, column: 60, scope: !4188)
!4192 = !DILocation(line: 439, column: 77, scope: !4188)
!4193 = !DILocation(line: 439, column: 83, scope: !4188)
!4194 = !DILocation(line: 439, column: 103, scope: !4195)
!4195 = !DILexicalBlockFile(scope: !4188, file: !376, discriminator: 1)
!4196 = !DILocation(line: 439, column: 111, scope: !4188)
!4197 = !DILocation(line: 439, column: 122, scope: !4188)
!4198 = !DILocation(line: 439, column: 131, scope: !4188)
!4199 = !DILocation(line: 439, column: 148, scope: !4188)
!4200 = !DILocation(line: 439, column: 155, scope: !4188)
!4201 = !DILocation(line: 440, column: 30, scope: !4188)
!4202 = !DILocation(line: 440, column: 14, scope: !4188)
!4203 = !DILocation(line: 440, column: 39, scope: !4188)
!4204 = !DILocation(line: 440, column: 36, scope: !4188)
!4205 = !DILocation(line: 439, column: 14, scope: !4153)
!4206 = !DILocation(line: 441, column: 16, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !376, line: 441, column: 9)
!4208 = distinct !DILexicalBlock(scope: !4188, file: !376, line: 440, column: 46)
!4209 = !DILocation(line: 441, column: 14, scope: !4207)
!4210 = !DILocation(line: 441, column: 21, scope: !4211)
!4211 = !DILexicalBlockFile(scope: !4212, file: !376, discriminator: 2)
!4212 = !DILexicalBlockFile(scope: !4213, file: !376, discriminator: 1)
!4213 = distinct !DILexicalBlock(scope: !4207, file: !376, line: 441, column: 9)
!4214 = !DILocation(line: 441, column: 25, scope: !4213)
!4215 = !DILocation(line: 441, column: 23, scope: !4213)
!4216 = !DILocation(line: 441, column: 9, scope: !4207)
!4217 = !DILocation(line: 442, column: 35, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !376, line: 441, column: 37)
!4219 = !DILocation(line: 442, column: 43, scope: !4218)
!4220 = !DILocation(line: 442, column: 54, scope: !4218)
!4221 = !DILocation(line: 442, column: 63, scope: !4218)
!4222 = !DILocation(line: 442, column: 80, scope: !4218)
!4223 = !DILocation(line: 442, column: 18, scope: !4218)
!4224 = !DILocation(line: 442, column: 123, scope: !4225)
!4225 = !DILexicalBlockFile(scope: !4218, file: !376, discriminator: 1)
!4226 = !DILocation(line: 442, column: 107, scope: !4218)
!4227 = !DILocation(line: 442, column: 90, scope: !4218)
!4228 = !DILocation(line: 442, column: 115, scope: !4218)
!4229 = !DILocation(line: 442, column: 89, scope: !4218)
!4230 = !DILocation(line: 442, column: 165, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !4218, file: !376, discriminator: 2)
!4232 = !DILocation(line: 442, column: 149, scope: !4218)
!4233 = !DILocation(line: 442, column: 131, scope: !4218)
!4234 = !DILocation(line: 442, column: 157, scope: !4218)
!4235 = !DILocation(line: 442, column: 130, scope: !4218)
!4236 = !DILocation(line: 442, column: 15, scope: !4237)
!4237 = !DILexicalBlockFile(scope: !4238, file: !376, discriminator: 4)
!4238 = !DILexicalBlockFile(scope: !4218, file: !376, discriminator: 3)
!4239 = !DILocation(line: 443, column: 56, scope: !4218)
!4240 = !DILocation(line: 443, column: 51, scope: !4218)
!4241 = !DILocation(line: 443, column: 50, scope: !4218)
!4242 = !DILocation(line: 443, column: 33, scope: !4218)
!4243 = !DILocation(line: 443, column: 15, scope: !4218)
!4244 = !DILocation(line: 443, column: 41, scope: !4218)
!4245 = !DILocation(line: 443, column: 14, scope: !4218)
!4246 = !DILocation(line: 443, column: 54, scope: !4218)
!4247 = !DILocation(line: 444, column: 9, scope: !4218)
!4248 = !DILocation(line: 441, column: 33, scope: !4213)
!4249 = !DILocation(line: 441, column: 9, scope: !4213)
!4250 = !DILocation(line: 445, column: 5, scope: !4208)
!4251 = !DILocation(line: 447, column: 25, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4188, file: !376, line: 446, column: 10)
!4253 = !DILocation(line: 447, column: 9, scope: !4252)
!4254 = !DILocation(line: 449, column: 9, scope: !4252)
!4255 = !DILocation(line: 452, column: 29, scope: !694)
!4256 = !DILocation(line: 452, column: 40, scope: !694)
!4257 = !DILocation(line: 452, column: 9, scope: !694)
!4258 = !DILocation(line: 452, column: 7, scope: !694)
!4259 = !DILocation(line: 453, column: 9, scope: !715)
!4260 = !DILocation(line: 453, column: 11, scope: !715)
!4261 = !DILocation(line: 453, column: 9, scope: !694)
!4262 = !DILocation(line: 454, column: 9, scope: !714)
!4263 = !DILocation(line: 454, column: 14, scope: !4264)
!4264 = !DILexicalBlockFile(scope: !713, file: !376, discriminator: 1)
!4265 = !DILocation(line: 454, column: 24, scope: !713)
!4266 = !DILocation(line: 454, column: 54, scope: !713)
!4267 = !DILocation(line: 454, column: 66, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !713, file: !376, line: 454, column: 63)
!4269 = !DILocation(line: 454, column: 83, scope: !4268)
!4270 = !DILocation(line: 454, column: 63, scope: !4268)
!4271 = !DILocation(line: 454, column: 93, scope: !4268)
!4272 = !DILocation(line: 454, column: 63, scope: !713)
!4273 = !DILocation(line: 454, column: 63, scope: !4274)
!4274 = !DILexicalBlockFile(scope: !713, file: !376, discriminator: 2)
!4275 = !DILocation(line: 454, column: 124, scope: !4276)
!4276 = !DILexicalBlockFile(scope: !4268, file: !376, discriminator: 3)
!4277 = !DILocation(line: 454, column: 142, scope: !4268)
!4278 = !DILocation(line: 454, column: 152, scope: !4268)
!4279 = !DILocation(line: 454, column: 177, scope: !4268)
!4280 = !DILocation(line: 454, column: 108, scope: !4268)
!4281 = !DILocation(line: 454, column: 196, scope: !4282)
!4282 = !DILexicalBlockFile(scope: !714, file: !376, discriminator: 4)
!4283 = !DILocation(line: 454, column: 196, scope: !713)
!4284 = !DILocation(line: 454, column: 196, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !713, file: !376, discriminator: 5)
!4286 = !DILocation(line: 455, column: 13, scope: !714)
!4287 = !DILocation(line: 456, column: 5, scope: !714)
!4288 = !DILocation(line: 453, column: 23, scope: !4289)
!4289 = !DILexicalBlockFile(scope: !715, file: !376, discriminator: 1)
!4290 = !DILocation(line: 460, column: 12, scope: !719)
!4291 = !DILocation(line: 460, column: 10, scope: !719)
!4292 = !DILocation(line: 460, column: 17, scope: !4293)
!4293 = !DILexicalBlockFile(scope: !4294, file: !376, discriminator: 2)
!4294 = !DILexicalBlockFile(scope: !718, file: !376, discriminator: 1)
!4295 = !DILocation(line: 460, column: 23, scope: !718)
!4296 = !DILocation(line: 460, column: 22, scope: !718)
!4297 = !DILocation(line: 460, column: 19, scope: !718)
!4298 = !DILocation(line: 460, column: 5, scope: !719)
!4299 = !DILocation(line: 461, column: 9, scope: !718)
!4300 = !DILocation(line: 461, column: 14, scope: !4301)
!4301 = !DILexicalBlockFile(scope: !717, file: !376, discriminator: 1)
!4302 = !DILocation(line: 461, column: 24, scope: !717)
!4303 = !DILocation(line: 461, column: 91, scope: !717)
!4304 = !DILocation(line: 461, column: 75, scope: !717)
!4305 = !DILocation(line: 461, column: 57, scope: !717)
!4306 = !DILocation(line: 461, column: 83, scope: !717)
!4307 = !DILocation(line: 461, column: 56, scope: !717)
!4308 = !DILocation(line: 461, column: 101, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !717, file: !376, line: 461, column: 101)
!4310 = !DILocation(line: 461, column: 117, scope: !4309)
!4311 = !DILocation(line: 461, column: 101, scope: !717)
!4312 = !DILocation(line: 461, column: 148, scope: !4313)
!4313 = !DILexicalBlockFile(scope: !4309, file: !376, discriminator: 2)
!4314 = !DILocation(line: 461, column: 167, scope: !4309)
!4315 = !DILocation(line: 461, column: 176, scope: !4309)
!4316 = !DILocation(line: 461, column: 132, scope: !4309)
!4317 = !DILocation(line: 461, column: 181, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4319, file: !376, discriminator: 4)
!4319 = !DILexicalBlockFile(scope: !718, file: !376, discriminator: 3)
!4320 = !DILocation(line: 461, column: 181, scope: !717)
!4321 = !DILocation(line: 461, column: 181, scope: !4322)
!4322 = !DILexicalBlockFile(scope: !717, file: !376, discriminator: 5)
!4323 = !DILocation(line: 461, column: 181, scope: !4324)
!4324 = !DILexicalBlockFile(scope: !717, file: !376, discriminator: 6)
!4325 = !DILocation(line: 460, column: 31, scope: !718)
!4326 = !DILocation(line: 460, column: 5, scope: !718)
!4327 = !DILocation(line: 462, column: 5, scope: !694)
!4328 = !DILocation(line: 462, column: 10, scope: !4329)
!4329 = !DILexicalBlockFile(scope: !721, file: !376, discriminator: 1)
!4330 = !DILocation(line: 462, column: 20, scope: !721)
!4331 = !DILocation(line: 462, column: 51, scope: !721)
!4332 = !DILocation(line: 462, column: 62, scope: !724)
!4333 = !DILocation(line: 462, column: 78, scope: !724)
!4334 = !DILocation(line: 462, column: 62, scope: !721)
!4335 = !DILocation(line: 462, column: 93, scope: !4336)
!4336 = !DILexicalBlockFile(scope: !724, file: !376, discriminator: 2)
!4337 = !DILocation(line: 462, column: 98, scope: !4338)
!4338 = !DILexicalBlockFile(scope: !723, file: !376, discriminator: 4)
!4339 = !DILocation(line: 462, column: 108, scope: !723)
!4340 = !DILocation(line: 462, column: 138, scope: !723)
!4341 = !DILocation(line: 462, column: 164, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !723, file: !376, line: 462, column: 161)
!4343 = !DILocation(line: 462, column: 181, scope: !4342)
!4344 = !DILocation(line: 462, column: 161, scope: !4342)
!4345 = !DILocation(line: 462, column: 191, scope: !4342)
!4346 = !DILocation(line: 462, column: 161, scope: !723)
!4347 = !DILocation(line: 462, column: 161, scope: !4348)
!4348 = !DILexicalBlockFile(scope: !723, file: !376, discriminator: 5)
!4349 = !DILocation(line: 462, column: 222, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4342, file: !376, discriminator: 6)
!4351 = !DILocation(line: 462, column: 240, scope: !4342)
!4352 = !DILocation(line: 462, column: 250, scope: !4342)
!4353 = !DILocation(line: 462, column: 275, scope: !4342)
!4354 = !DILocation(line: 462, column: 206, scope: !4342)
!4355 = !DILocation(line: 462, column: 294, scope: !4356)
!4356 = !DILexicalBlockFile(scope: !724, file: !376, discriminator: 7)
!4357 = !DILocation(line: 462, column: 294, scope: !723)
!4358 = !DILocation(line: 462, column: 294, scope: !4359)
!4359 = !DILexicalBlockFile(scope: !723, file: !376, discriminator: 8)
!4360 = !DILocation(line: 462, column: 294, scope: !4361)
!4361 = !DILexicalBlockFile(scope: !723, file: !376, discriminator: 9)
!4362 = !DILocation(line: 462, column: 307, scope: !4363)
!4363 = !DILexicalBlockFile(scope: !4364, file: !376, discriminator: 10)
!4364 = !DILexicalBlockFile(scope: !694, file: !376, discriminator: 3)
!4365 = !DILocation(line: 462, column: 307, scope: !721)
!4366 = !DILocation(line: 462, column: 307, scope: !4367)
!4367 = !DILexicalBlockFile(scope: !721, file: !376, discriminator: 11)
!4368 = !DILocation(line: 462, column: 307, scope: !4369)
!4369 = !DILexicalBlockFile(scope: !721, file: !376, discriminator: 12)
!4370 = !DILocation(line: 464, column: 5, scope: !694)
!4371 = !DILocation(line: 464, column: 10, scope: !4372)
!4372 = !DILexicalBlockFile(scope: !726, file: !376, discriminator: 1)
!4373 = !DILocation(line: 464, column: 20, scope: !726)
!4374 = !DILocation(line: 464, column: 51, scope: !726)
!4375 = !DILocation(line: 464, column: 67, scope: !729)
!4376 = !DILocation(line: 464, column: 83, scope: !729)
!4377 = !DILocation(line: 464, column: 67, scope: !726)
!4378 = !DILocation(line: 464, column: 98, scope: !4379)
!4379 = !DILexicalBlockFile(scope: !729, file: !376, discriminator: 2)
!4380 = !DILocation(line: 464, column: 103, scope: !4381)
!4381 = !DILexicalBlockFile(scope: !728, file: !376, discriminator: 4)
!4382 = !DILocation(line: 464, column: 113, scope: !728)
!4383 = !DILocation(line: 464, column: 143, scope: !728)
!4384 = !DILocation(line: 464, column: 169, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !728, file: !376, line: 464, column: 166)
!4386 = !DILocation(line: 464, column: 186, scope: !4385)
!4387 = !DILocation(line: 464, column: 166, scope: !4385)
!4388 = !DILocation(line: 464, column: 196, scope: !4385)
!4389 = !DILocation(line: 464, column: 166, scope: !728)
!4390 = !DILocation(line: 464, column: 166, scope: !4391)
!4391 = !DILexicalBlockFile(scope: !728, file: !376, discriminator: 5)
!4392 = !DILocation(line: 464, column: 227, scope: !4393)
!4393 = !DILexicalBlockFile(scope: !4385, file: !376, discriminator: 6)
!4394 = !DILocation(line: 464, column: 245, scope: !4385)
!4395 = !DILocation(line: 464, column: 255, scope: !4385)
!4396 = !DILocation(line: 464, column: 280, scope: !4385)
!4397 = !DILocation(line: 464, column: 211, scope: !4385)
!4398 = !DILocation(line: 464, column: 299, scope: !4399)
!4399 = !DILexicalBlockFile(scope: !729, file: !376, discriminator: 7)
!4400 = !DILocation(line: 464, column: 299, scope: !728)
!4401 = !DILocation(line: 464, column: 299, scope: !4402)
!4402 = !DILexicalBlockFile(scope: !728, file: !376, discriminator: 8)
!4403 = !DILocation(line: 464, column: 299, scope: !4404)
!4404 = !DILexicalBlockFile(scope: !728, file: !376, discriminator: 9)
!4405 = !DILocation(line: 464, column: 312, scope: !4363)
!4406 = !DILocation(line: 464, column: 312, scope: !726)
!4407 = !DILocation(line: 464, column: 312, scope: !4408)
!4408 = !DILexicalBlockFile(scope: !726, file: !376, discriminator: 11)
!4409 = !DILocation(line: 465, column: 5, scope: !694)
!4410 = !DILocation(line: 465, column: 10, scope: !4411)
!4411 = !DILexicalBlockFile(scope: !731, file: !376, discriminator: 1)
!4412 = !DILocation(line: 465, column: 20, scope: !731)
!4413 = !DILocation(line: 465, column: 51, scope: !731)
!4414 = !DILocation(line: 465, column: 62, scope: !734)
!4415 = !DILocation(line: 465, column: 78, scope: !734)
!4416 = !DILocation(line: 465, column: 62, scope: !731)
!4417 = !DILocation(line: 465, column: 93, scope: !4418)
!4418 = !DILexicalBlockFile(scope: !734, file: !376, discriminator: 2)
!4419 = !DILocation(line: 465, column: 98, scope: !4420)
!4420 = !DILexicalBlockFile(scope: !733, file: !376, discriminator: 4)
!4421 = !DILocation(line: 465, column: 108, scope: !733)
!4422 = !DILocation(line: 465, column: 138, scope: !733)
!4423 = !DILocation(line: 465, column: 164, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !733, file: !376, line: 465, column: 161)
!4425 = !DILocation(line: 465, column: 181, scope: !4424)
!4426 = !DILocation(line: 465, column: 161, scope: !4424)
!4427 = !DILocation(line: 465, column: 191, scope: !4424)
!4428 = !DILocation(line: 465, column: 161, scope: !733)
!4429 = !DILocation(line: 465, column: 161, scope: !4430)
!4430 = !DILexicalBlockFile(scope: !733, file: !376, discriminator: 5)
!4431 = !DILocation(line: 465, column: 222, scope: !4432)
!4432 = !DILexicalBlockFile(scope: !4424, file: !376, discriminator: 6)
!4433 = !DILocation(line: 465, column: 240, scope: !4424)
!4434 = !DILocation(line: 465, column: 250, scope: !4424)
!4435 = !DILocation(line: 465, column: 275, scope: !4424)
!4436 = !DILocation(line: 465, column: 206, scope: !4424)
!4437 = !DILocation(line: 465, column: 294, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !734, file: !376, discriminator: 7)
!4439 = !DILocation(line: 465, column: 294, scope: !733)
!4440 = !DILocation(line: 465, column: 294, scope: !4441)
!4441 = !DILexicalBlockFile(scope: !733, file: !376, discriminator: 8)
!4442 = !DILocation(line: 465, column: 294, scope: !4443)
!4443 = !DILexicalBlockFile(scope: !733, file: !376, discriminator: 9)
!4444 = !DILocation(line: 465, column: 307, scope: !4363)
!4445 = !DILocation(line: 465, column: 307, scope: !731)
!4446 = !DILocation(line: 465, column: 307, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !731, file: !376, discriminator: 11)
!4448 = !DILocation(line: 466, column: 5, scope: !694)
!4449 = !DILocation(line: 466, column: 10, scope: !4450)
!4450 = !DILexicalBlockFile(scope: !736, file: !376, discriminator: 1)
!4451 = !DILocation(line: 466, column: 20, scope: !736)
!4452 = !DILocation(line: 466, column: 51, scope: !736)
!4453 = !DILocation(line: 466, column: 63, scope: !739)
!4454 = !DILocation(line: 466, column: 79, scope: !739)
!4455 = !DILocation(line: 466, column: 63, scope: !736)
!4456 = !DILocation(line: 466, column: 94, scope: !4457)
!4457 = !DILexicalBlockFile(scope: !739, file: !376, discriminator: 2)
!4458 = !DILocation(line: 466, column: 99, scope: !4459)
!4459 = !DILexicalBlockFile(scope: !738, file: !376, discriminator: 4)
!4460 = !DILocation(line: 466, column: 109, scope: !738)
!4461 = !DILocation(line: 466, column: 139, scope: !738)
!4462 = !DILocation(line: 466, column: 165, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !738, file: !376, line: 466, column: 162)
!4464 = !DILocation(line: 466, column: 182, scope: !4463)
!4465 = !DILocation(line: 466, column: 162, scope: !4463)
!4466 = !DILocation(line: 466, column: 192, scope: !4463)
!4467 = !DILocation(line: 466, column: 162, scope: !738)
!4468 = !DILocation(line: 466, column: 162, scope: !4469)
!4469 = !DILexicalBlockFile(scope: !738, file: !376, discriminator: 5)
!4470 = !DILocation(line: 466, column: 223, scope: !4471)
!4471 = !DILexicalBlockFile(scope: !4463, file: !376, discriminator: 6)
!4472 = !DILocation(line: 466, column: 241, scope: !4463)
!4473 = !DILocation(line: 466, column: 251, scope: !4463)
!4474 = !DILocation(line: 466, column: 276, scope: !4463)
!4475 = !DILocation(line: 466, column: 207, scope: !4463)
!4476 = !DILocation(line: 466, column: 295, scope: !4477)
!4477 = !DILexicalBlockFile(scope: !739, file: !376, discriminator: 7)
!4478 = !DILocation(line: 466, column: 295, scope: !738)
!4479 = !DILocation(line: 466, column: 295, scope: !4480)
!4480 = !DILexicalBlockFile(scope: !738, file: !376, discriminator: 8)
!4481 = !DILocation(line: 466, column: 295, scope: !4482)
!4482 = !DILexicalBlockFile(scope: !738, file: !376, discriminator: 9)
!4483 = !DILocation(line: 466, column: 308, scope: !4363)
!4484 = !DILocation(line: 466, column: 308, scope: !736)
!4485 = !DILocation(line: 466, column: 308, scope: !4486)
!4486 = !DILexicalBlockFile(scope: !736, file: !376, discriminator: 11)
!4487 = !DILocation(line: 467, column: 5, scope: !694)
!4488 = !DILocation(line: 467, column: 10, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !741, file: !376, discriminator: 1)
!4490 = !DILocation(line: 467, column: 20, scope: !741)
!4491 = !DILocation(line: 467, column: 51, scope: !741)
!4492 = !DILocation(line: 467, column: 67, scope: !744)
!4493 = !DILocation(line: 467, column: 83, scope: !744)
!4494 = !DILocation(line: 467, column: 67, scope: !741)
!4495 = !DILocation(line: 467, column: 98, scope: !4496)
!4496 = !DILexicalBlockFile(scope: !744, file: !376, discriminator: 2)
!4497 = !DILocation(line: 467, column: 103, scope: !4498)
!4498 = !DILexicalBlockFile(scope: !743, file: !376, discriminator: 4)
!4499 = !DILocation(line: 467, column: 113, scope: !743)
!4500 = !DILocation(line: 467, column: 143, scope: !743)
!4501 = !DILocation(line: 467, column: 169, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !743, file: !376, line: 467, column: 166)
!4503 = !DILocation(line: 467, column: 186, scope: !4502)
!4504 = !DILocation(line: 467, column: 166, scope: !4502)
!4505 = !DILocation(line: 467, column: 196, scope: !4502)
!4506 = !DILocation(line: 467, column: 166, scope: !743)
!4507 = !DILocation(line: 467, column: 166, scope: !4508)
!4508 = !DILexicalBlockFile(scope: !743, file: !376, discriminator: 5)
!4509 = !DILocation(line: 467, column: 227, scope: !4510)
!4510 = !DILexicalBlockFile(scope: !4502, file: !376, discriminator: 6)
!4511 = !DILocation(line: 467, column: 245, scope: !4502)
!4512 = !DILocation(line: 467, column: 255, scope: !4502)
!4513 = !DILocation(line: 467, column: 280, scope: !4502)
!4514 = !DILocation(line: 467, column: 211, scope: !4502)
!4515 = !DILocation(line: 467, column: 299, scope: !4516)
!4516 = !DILexicalBlockFile(scope: !744, file: !376, discriminator: 7)
!4517 = !DILocation(line: 467, column: 299, scope: !743)
!4518 = !DILocation(line: 467, column: 299, scope: !4519)
!4519 = !DILexicalBlockFile(scope: !743, file: !376, discriminator: 8)
!4520 = !DILocation(line: 467, column: 299, scope: !4521)
!4521 = !DILexicalBlockFile(scope: !743, file: !376, discriminator: 9)
!4522 = !DILocation(line: 467, column: 312, scope: !4363)
!4523 = !DILocation(line: 467, column: 312, scope: !741)
!4524 = !DILocation(line: 467, column: 312, scope: !4525)
!4525 = !DILexicalBlockFile(scope: !741, file: !376, discriminator: 11)
!4526 = !DILocation(line: 468, column: 5, scope: !694)
!4527 = !DILocation(line: 468, column: 10, scope: !4528)
!4528 = !DILexicalBlockFile(scope: !746, file: !376, discriminator: 1)
!4529 = !DILocation(line: 468, column: 20, scope: !746)
!4530 = !DILocation(line: 468, column: 51, scope: !746)
!4531 = !DILocation(line: 468, column: 64, scope: !749)
!4532 = !DILocation(line: 468, column: 80, scope: !749)
!4533 = !DILocation(line: 468, column: 64, scope: !746)
!4534 = !DILocation(line: 468, column: 95, scope: !4535)
!4535 = !DILexicalBlockFile(scope: !749, file: !376, discriminator: 2)
!4536 = !DILocation(line: 468, column: 100, scope: !4537)
!4537 = !DILexicalBlockFile(scope: !748, file: !376, discriminator: 4)
!4538 = !DILocation(line: 468, column: 110, scope: !748)
!4539 = !DILocation(line: 468, column: 140, scope: !748)
!4540 = !DILocation(line: 468, column: 166, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !748, file: !376, line: 468, column: 163)
!4542 = !DILocation(line: 468, column: 183, scope: !4541)
!4543 = !DILocation(line: 468, column: 163, scope: !4541)
!4544 = !DILocation(line: 468, column: 193, scope: !4541)
!4545 = !DILocation(line: 468, column: 163, scope: !748)
!4546 = !DILocation(line: 468, column: 163, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !748, file: !376, discriminator: 5)
!4548 = !DILocation(line: 468, column: 224, scope: !4549)
!4549 = !DILexicalBlockFile(scope: !4541, file: !376, discriminator: 6)
!4550 = !DILocation(line: 468, column: 242, scope: !4541)
!4551 = !DILocation(line: 468, column: 252, scope: !4541)
!4552 = !DILocation(line: 468, column: 277, scope: !4541)
!4553 = !DILocation(line: 468, column: 208, scope: !4541)
!4554 = !DILocation(line: 468, column: 296, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !749, file: !376, discriminator: 7)
!4556 = !DILocation(line: 468, column: 296, scope: !748)
!4557 = !DILocation(line: 468, column: 296, scope: !4558)
!4558 = !DILexicalBlockFile(scope: !748, file: !376, discriminator: 8)
!4559 = !DILocation(line: 468, column: 296, scope: !4560)
!4560 = !DILexicalBlockFile(scope: !748, file: !376, discriminator: 9)
!4561 = !DILocation(line: 468, column: 309, scope: !4363)
!4562 = !DILocation(line: 468, column: 309, scope: !746)
!4563 = !DILocation(line: 468, column: 309, scope: !4564)
!4564 = !DILexicalBlockFile(scope: !746, file: !376, discriminator: 11)
!4565 = !DILocation(line: 469, column: 12, scope: !694)
!4566 = !DILocation(line: 470, column: 1, scope: !694)
!4567 = !DILocation(line: 469, column: 5, scope: !694)
!4568 = !DILocation(line: 537, column: 24, scope: !753)
!4569 = !DILocation(line: 537, column: 41, scope: !753)
!4570 = !DILocation(line: 539, column: 5, scope: !753)
!4571 = !DILocation(line: 539, column: 11, scope: !753)
!4572 = !DILocation(line: 543, column: 23, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !753, file: !376, line: 543, column: 9)
!4574 = !DILocation(line: 543, column: 29, scope: !4573)
!4575 = !DILocation(line: 543, column: 9, scope: !4573)
!4576 = !DILocation(line: 543, column: 34, scope: !4573)
!4577 = !DILocation(line: 543, column: 9, scope: !753)
!4578 = !DILocation(line: 544, column: 25, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4573, file: !376, line: 543, column: 39)
!4580 = !DILocation(line: 544, column: 9, scope: !4579)
!4581 = !DILocation(line: 546, column: 9, scope: !4579)
!4582 = !DILocation(line: 549, column: 10, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !753, file: !376, line: 549, column: 9)
!4584 = !DILocation(line: 549, column: 16, scope: !4583)
!4585 = !DILocation(line: 549, column: 27, scope: !4583)
!4586 = !DILocation(line: 549, column: 47, scope: !4587)
!4587 = !DILexicalBlockFile(scope: !4583, file: !376, discriminator: 1)
!4588 = !DILocation(line: 549, column: 53, scope: !4583)
!4589 = !DILocation(line: 549, column: 57, scope: !4583)
!4590 = !DILocation(line: 549, column: 30, scope: !4583)
!4591 = !DILocation(line: 549, column: 36, scope: !4583)
!4592 = !DILocation(line: 549, column: 61, scope: !4583)
!4593 = !DILocation(line: 549, column: 67, scope: !4583)
!4594 = !DILocation(line: 550, column: 10, scope: !4583)
!4595 = !DILocation(line: 550, column: 15, scope: !4583)
!4596 = !DILocation(line: 550, column: 26, scope: !4583)
!4597 = !DILocation(line: 550, column: 45, scope: !4587)
!4598 = !DILocation(line: 550, column: 50, scope: !4583)
!4599 = !DILocation(line: 550, column: 54, scope: !4583)
!4600 = !DILocation(line: 550, column: 29, scope: !4583)
!4601 = !DILocation(line: 550, column: 34, scope: !4583)
!4602 = !DILocation(line: 550, column: 58, scope: !4583)
!4603 = !DILocation(line: 550, column: 64, scope: !4583)
!4604 = !DILocation(line: 551, column: 23, scope: !4583)
!4605 = !DILocation(line: 551, column: 29, scope: !4583)
!4606 = !DILocation(line: 551, column: 33, scope: !4583)
!4607 = !DILocation(line: 551, column: 9, scope: !4583)
!4608 = !DILocation(line: 551, column: 15, scope: !4583)
!4609 = !DILocation(line: 551, column: 40, scope: !4583)
!4610 = !DILocation(line: 551, column: 46, scope: !4583)
!4611 = !DILocation(line: 551, column: 37, scope: !4583)
!4612 = !DILocation(line: 551, column: 55, scope: !4583)
!4613 = !DILocation(line: 552, column: 22, scope: !4583)
!4614 = !DILocation(line: 552, column: 27, scope: !4583)
!4615 = !DILocation(line: 552, column: 31, scope: !4583)
!4616 = !DILocation(line: 552, column: 9, scope: !4583)
!4617 = !DILocation(line: 552, column: 14, scope: !4583)
!4618 = !DILocation(line: 552, column: 38, scope: !4583)
!4619 = !DILocation(line: 552, column: 43, scope: !4583)
!4620 = !DILocation(line: 552, column: 35, scope: !4583)
!4621 = !DILocation(line: 549, column: 9, scope: !753)
!4622 = !DILocation(line: 553, column: 40, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4583, file: !376, line: 552, column: 53)
!4624 = !DILocation(line: 553, column: 46, scope: !4623)
!4625 = !DILocation(line: 553, column: 50, scope: !4623)
!4626 = !DILocation(line: 553, column: 28, scope: !4623)
!4627 = !DILocation(line: 553, column: 34, scope: !4623)
!4628 = !DILocation(line: 553, column: 56, scope: !4623)
!4629 = !DILocation(line: 553, column: 62, scope: !4623)
!4630 = !DILocation(line: 553, column: 54, scope: !4623)
!4631 = !DILocation(line: 553, column: 15, scope: !4623)
!4632 = !DILocation(line: 553, column: 13, scope: !4623)
!4633 = !DILocation(line: 554, column: 13, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4623, file: !376, line: 554, column: 13)
!4635 = !DILocation(line: 554, column: 17, scope: !4634)
!4636 = !DILocation(line: 554, column: 13, scope: !4623)
!4637 = !DILocation(line: 555, column: 13, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4634, file: !376, line: 554, column: 32)
!4639 = !DILocation(line: 556, column: 13, scope: !4638)
!4640 = !DILocation(line: 558, column: 5, scope: !4623)
!4641 = !DILocation(line: 560, column: 14, scope: !753)
!4642 = !DILocation(line: 560, column: 20, scope: !753)
!4643 = !DILocation(line: 560, column: 27, scope: !753)
!4644 = !DILocation(line: 560, column: 33, scope: !753)
!4645 = !DILocation(line: 560, column: 39, scope: !753)
!4646 = !DILocation(line: 560, column: 45, scope: !753)
!4647 = !DILocation(line: 561, column: 14, scope: !753)
!4648 = !DILocation(line: 561, column: 20, scope: !753)
!4649 = !DILocation(line: 561, column: 25, scope: !753)
!4650 = !DILocation(line: 561, column: 31, scope: !753)
!4651 = !DILocation(line: 561, column: 40, scope: !753)
!4652 = !DILocation(line: 561, column: 46, scope: !753)
!4653 = !DILocation(line: 562, column: 14, scope: !753)
!4654 = !DILocation(line: 562, column: 19, scope: !753)
!4655 = !DILocation(line: 562, column: 24, scope: !753)
!4656 = !DILocation(line: 562, column: 29, scope: !753)
!4657 = !DILocation(line: 562, column: 38, scope: !753)
!4658 = !DILocation(line: 562, column: 43, scope: !753)
!4659 = !DILocation(line: 563, column: 14, scope: !753)
!4660 = !DILocation(line: 560, column: 5, scope: !753)
!4661 = !DILocation(line: 565, column: 5, scope: !753)
!4662 = !DILocation(line: 565, column: 14, scope: !4663)
!4663 = !DILexicalBlockFile(scope: !4664, file: !376, discriminator: 1)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !376, line: 565, column: 14)
!4665 = distinct !DILexicalBlock(scope: !753, file: !376, line: 565, column: 8)
!4666 = !DILocation(line: 565, column: 14, scope: !4665)
!4667 = !DILocation(line: 565, column: 30, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !4664, file: !376, discriminator: 2)
!4669 = !DILocation(line: 565, column: 19, scope: !4664)
!4670 = !DILocation(line: 565, column: 36, scope: !4671)
!4671 = !DILexicalBlockFile(scope: !4672, file: !376, discriminator: 4)
!4672 = !DILexicalBlockFile(scope: !4665, file: !376, discriminator: 3)
!4673 = !DILocation(line: 565, column: 36, scope: !4674)
!4674 = !DILexicalBlockFile(scope: !4665, file: !376, discriminator: 5)
!4675 = !DILocation(line: 566, column: 5, scope: !753)
!4676 = !DILocation(line: 567, column: 1, scope: !753)
!4677 = !DILocation(line: 292, column: 21, scope: !750)
!4678 = !DILocation(line: 294, column: 38, scope: !750)
!4679 = !DILocation(line: 294, column: 13, scope: !750)
!4680 = !DILocation(line: 294, column: 42, scope: !750)
!4681 = !{!4682, !1376, i64 24}
!4682 = !{!"", !1375, i64 0, !1376, i64 16, !1376, i64 24}
!4683 = !DILocation(line: 294, column: 5, scope: !750)
!4684 = !DILocation(line: 514, column: 26, scope: !760)
!4685 = !DILocation(line: 514, column: 43, scope: !760)
!4686 = !DILocation(line: 516, column: 5, scope: !760)
!4687 = !DILocation(line: 516, column: 16, scope: !760)
!4688 = !DILocation(line: 518, column: 26, scope: !766)
!4689 = !DILocation(line: 518, column: 33, scope: !766)
!4690 = !DILocation(line: 518, column: 43, scope: !766)
!4691 = !DILocation(line: 518, column: 3734, scope: !766)
!4692 = !DILocation(line: 518, column: 3740, scope: !766)
!4693 = !DILocation(line: 518, column: 3747, scope: !766)
!4694 = !DILocation(line: 518, column: 3734, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !766, file: !376, discriminator: 1)
!4696 = !DILocation(line: 518, column: 3769, scope: !4697)
!4697 = !DILexicalBlockFile(scope: !766, file: !376, discriminator: 2)
!4698 = !DILocation(line: 518, column: 3775, scope: !766)
!4699 = !DILocation(line: 518, column: 3785, scope: !4700)
!4700 = !DILexicalBlockFile(scope: !4701, file: !376, discriminator: 4)
!4701 = !DILexicalBlockFile(scope: !766, file: !376, discriminator: 3)
!4702 = !DILocation(line: 518, column: 3790, scope: !766)
!4703 = !DILocation(line: 518, column: 3797, scope: !766)
!4704 = !DILocation(line: 518, column: 3785, scope: !766)
!4705 = !DILocation(line: 518, column: 3785, scope: !4706)
!4706 = !DILexicalBlockFile(scope: !766, file: !376, discriminator: 5)
!4707 = !DILocation(line: 518, column: 3819, scope: !4708)
!4708 = !DILexicalBlockFile(scope: !766, file: !376, discriminator: 6)
!4709 = !DILocation(line: 518, column: 3824, scope: !766)
!4710 = !DILocation(line: 518, column: 3715, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !4712, file: !376, discriminator: 8)
!4712 = !DILexicalBlockFile(scope: !766, file: !376, discriminator: 7)
!4713 = !DILocation(line: 518, column: 3837, scope: !767)
!4714 = !DILocation(line: 518, column: 3837, scope: !766)
!4715 = !DILocation(line: 518, column: 3840, scope: !767)
!4716 = !DILocation(line: 518, column: 3845, scope: !767)
!4717 = !DILocation(line: 519, column: 9, scope: !767)
!4718 = !DILocation(line: 519, column: 15, scope: !767)
!4719 = !DILocation(line: 519, column: 27, scope: !767)
!4720 = !DILocation(line: 519, column: 32, scope: !767)
!4721 = !DILocation(line: 519, column: 24, scope: !767)
!4722 = !DILocation(line: 519, column: 41, scope: !767)
!4723 = !DILocation(line: 520, column: 9, scope: !767)
!4724 = !DILocation(line: 520, column: 15, scope: !767)
!4725 = !DILocation(line: 520, column: 23, scope: !767)
!4726 = !DILocation(line: 520, column: 28, scope: !767)
!4727 = !DILocation(line: 520, column: 20, scope: !767)
!4728 = !DILocation(line: 518, column: 9, scope: !760)
!4729 = !DILocation(line: 521, column: 9, scope: !767)
!4730 = !DILocation(line: 523, column: 12, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !760, file: !376, line: 523, column: 5)
!4732 = !DILocation(line: 523, column: 10, scope: !4731)
!4733 = !DILocation(line: 523, column: 17, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4735, file: !376, discriminator: 2)
!4735 = !DILexicalBlockFile(scope: !4736, file: !376, discriminator: 1)
!4736 = distinct !DILexicalBlock(scope: !4731, file: !376, line: 523, column: 5)
!4737 = !DILocation(line: 523, column: 21, scope: !4736)
!4738 = !DILocation(line: 523, column: 27, scope: !4736)
!4739 = !DILocation(line: 523, column: 19, scope: !4736)
!4740 = !DILocation(line: 523, column: 5, scope: !4731)
!4741 = !DILocation(line: 524, column: 25, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !376, line: 524, column: 13)
!4743 = distinct !DILexicalBlock(scope: !4736, file: !376, line: 523, column: 38)
!4744 = !DILocation(line: 524, column: 13, scope: !4742)
!4745 = !DILocation(line: 524, column: 19, scope: !4742)
!4746 = !DILocation(line: 524, column: 42, scope: !4742)
!4747 = !DILocation(line: 524, column: 31, scope: !4742)
!4748 = !DILocation(line: 524, column: 36, scope: !4742)
!4749 = !DILocation(line: 524, column: 28, scope: !4742)
!4750 = !DILocation(line: 524, column: 13, scope: !4743)
!4751 = !DILocation(line: 525, column: 13, scope: !4742)
!4752 = !DILocation(line: 526, column: 25, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4743, file: !376, line: 526, column: 13)
!4754 = !DILocation(line: 526, column: 13, scope: !4753)
!4755 = !DILocation(line: 526, column: 19, scope: !4753)
!4756 = !DILocation(line: 526, column: 28, scope: !4753)
!4757 = !DILocation(line: 526, column: 13, scope: !4743)
!4758 = !DILocation(line: 527, column: 13, scope: !4753)
!4759 = !DILocation(line: 528, column: 5, scope: !4743)
!4760 = !DILocation(line: 523, column: 34, scope: !4736)
!4761 = !DILocation(line: 523, column: 5, scope: !4736)
!4762 = !DILocation(line: 530, column: 5, scope: !760)
!4763 = !DILocation(line: 531, column: 1, scope: !760)
!4764 = !DILocation(line: 473, column: 28, scope: !769)
!4765 = !DILocation(line: 473, column: 46, scope: !769)
!4766 = !DILocation(line: 473, column: 63, scope: !769)
!4767 = !DILocation(line: 474, column: 16, scope: !769)
!4768 = !DILocation(line: 474, column: 40, scope: !769)
!4769 = !DILocation(line: 474, column: 68, scope: !769)
!4770 = !DILocation(line: 475, column: 16, scope: !769)
!4771 = !DILocation(line: 475, column: 40, scope: !769)
!4772 = !DILocation(line: 475, column: 68, scope: !769)
!4773 = !DILocation(line: 476, column: 16, scope: !769)
!4774 = !DILocation(line: 478, column: 5, scope: !769)
!4775 = !DILocation(line: 478, column: 16, scope: !769)
!4776 = !DILocation(line: 482, column: 9, scope: !788)
!4777 = !DILocation(line: 482, column: 14, scope: !788)
!4778 = !DILocation(line: 482, column: 9, scope: !769)
!4779 = !DILocation(line: 483, column: 15, scope: !786)
!4780 = !DILocation(line: 483, column: 27, scope: !786)
!4781 = !DILocation(line: 483, column: 30, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !786, file: !376, discriminator: 1)
!4783 = !DILocation(line: 483, column: 45, scope: !786)
!4784 = !DILocation(line: 483, column: 51, scope: !786)
!4785 = !DILocation(line: 483, column: 56, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !4787, file: !376, discriminator: 3)
!4787 = !DILexicalBlockFile(scope: !786, file: !376, discriminator: 2)
!4788 = !DILocation(line: 483, column: 68, scope: !786)
!4789 = !DILocation(line: 483, column: 71, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !786, file: !376, discriminator: 4)
!4791 = !DILocation(line: 483, column: 86, scope: !786)
!4792 = !DILocation(line: 483, column: 92, scope: !786)
!4793 = !DILocation(line: 484, column: 13, scope: !786)
!4794 = !DILocation(line: 484, column: 28, scope: !786)
!4795 = !DILocation(line: 484, column: 25, scope: !786)
!4796 = !DILocation(line: 484, column: 37, scope: !786)
!4797 = !DILocation(line: 484, column: 40, scope: !4782)
!4798 = !DILocation(line: 484, column: 55, scope: !786)
!4799 = !DILocation(line: 484, column: 52, scope: !786)
!4800 = !DILocation(line: 483, column: 13, scope: !787)
!4801 = !DILocation(line: 485, column: 21, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !786, file: !376, line: 484, column: 65)
!4803 = !DILocation(line: 485, column: 27, scope: !4802)
!4804 = !DILocation(line: 485, column: 33, scope: !4802)
!4805 = !DILocation(line: 485, column: 44, scope: !4802)
!4806 = !DILocation(line: 485, column: 42, scope: !4802)
!4807 = !DILocation(line: 485, column: 13, scope: !4802)
!4808 = !DILocation(line: 486, column: 9, scope: !4802)
!4809 = !DILocation(line: 488, column: 13, scope: !785)
!4810 = !DILocation(line: 488, column: 19, scope: !785)
!4811 = !DILocation(line: 490, column: 19, scope: !792)
!4812 = !DILocation(line: 490, column: 25, scope: !792)
!4813 = !DILocation(line: 490, column: 24, scope: !792)
!4814 = !DILocation(line: 490, column: 18, scope: !792)
!4815 = !DILocation(line: 490, column: 30, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4817, file: !376, discriminator: 2)
!4817 = !DILexicalBlockFile(scope: !791, file: !376, discriminator: 1)
!4818 = !DILocation(line: 490, column: 32, scope: !791)
!4819 = !DILocation(line: 490, column: 31, scope: !791)
!4820 = !DILocation(line: 490, column: 13, scope: !792)
!4821 = !DILocation(line: 491, column: 17, scope: !790)
!4822 = !DILocation(line: 491, column: 23, scope: !790)
!4823 = !DILocation(line: 491, column: 33, scope: !790)
!4824 = !DILocation(line: 491, column: 45, scope: !790)
!4825 = !DILocation(line: 491, column: 48, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !790, file: !376, discriminator: 1)
!4827 = !DILocation(line: 491, column: 63, scope: !790)
!4828 = !DILocation(line: 491, column: 32, scope: !790)
!4829 = !DILocation(line: 491, column: 81, scope: !4830)
!4830 = !DILexicalBlockFile(scope: !790, file: !376, discriminator: 3)
!4831 = !DILocation(line: 491, column: 73, scope: !790)
!4832 = !DILocation(line: 491, column: 71, scope: !790)
!4833 = !DILocation(line: 491, column: 89, scope: !790)
!4834 = !DILocation(line: 491, column: 87, scope: !790)
!4835 = !DILocation(line: 491, column: 106, scope: !4836)
!4836 = !DILexicalBlockFile(scope: !4837, file: !376, discriminator: 4)
!4837 = !DILexicalBlockFile(scope: !790, file: !376, discriminator: 2)
!4838 = !DILocation(line: 491, column: 23, scope: !4839)
!4839 = !DILexicalBlockFile(scope: !4840, file: !376, discriminator: 6)
!4840 = !DILexicalBlockFile(scope: !790, file: !376, discriminator: 5)
!4841 = !DILocation(line: 492, column: 24, scope: !790)
!4842 = !DILocation(line: 492, column: 27, scope: !790)
!4843 = !DILocation(line: 492, column: 34, scope: !790)
!4844 = !DILocation(line: 492, column: 17, scope: !790)
!4845 = !DILocation(line: 493, column: 13, scope: !791)
!4846 = !DILocation(line: 493, column: 13, scope: !790)
!4847 = !DILocation(line: 490, column: 45, scope: !791)
!4848 = !DILocation(line: 490, column: 43, scope: !791)
!4849 = !DILocation(line: 490, column: 61, scope: !791)
!4850 = !DILocation(line: 490, column: 59, scope: !791)
!4851 = !DILocation(line: 490, column: 75, scope: !791)
!4852 = !DILocation(line: 490, column: 13, scope: !791)
!4853 = !DILocation(line: 494, column: 19, scope: !796)
!4854 = !DILocation(line: 494, column: 25, scope: !796)
!4855 = !DILocation(line: 494, column: 24, scope: !796)
!4856 = !DILocation(line: 494, column: 18, scope: !796)
!4857 = !DILocation(line: 494, column: 30, scope: !4858)
!4858 = !DILexicalBlockFile(scope: !4859, file: !376, discriminator: 2)
!4859 = !DILexicalBlockFile(scope: !795, file: !376, discriminator: 1)
!4860 = !DILocation(line: 494, column: 32, scope: !795)
!4861 = !DILocation(line: 494, column: 31, scope: !795)
!4862 = !DILocation(line: 494, column: 13, scope: !796)
!4863 = !DILocation(line: 495, column: 17, scope: !794)
!4864 = !DILocation(line: 495, column: 23, scope: !794)
!4865 = !DILocation(line: 495, column: 33, scope: !794)
!4866 = !DILocation(line: 495, column: 45, scope: !794)
!4867 = !DILocation(line: 495, column: 48, scope: !4868)
!4868 = !DILexicalBlockFile(scope: !794, file: !376, discriminator: 1)
!4869 = !DILocation(line: 495, column: 63, scope: !794)
!4870 = !DILocation(line: 495, column: 32, scope: !794)
!4871 = !DILocation(line: 495, column: 81, scope: !4872)
!4872 = !DILexicalBlockFile(scope: !794, file: !376, discriminator: 3)
!4873 = !DILocation(line: 495, column: 73, scope: !794)
!4874 = !DILocation(line: 495, column: 71, scope: !794)
!4875 = !DILocation(line: 495, column: 89, scope: !794)
!4876 = !DILocation(line: 495, column: 87, scope: !794)
!4877 = !DILocation(line: 495, column: 106, scope: !4878)
!4878 = !DILexicalBlockFile(scope: !4879, file: !376, discriminator: 4)
!4879 = !DILexicalBlockFile(scope: !794, file: !376, discriminator: 2)
!4880 = !DILocation(line: 495, column: 23, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !4882, file: !376, discriminator: 6)
!4882 = !DILexicalBlockFile(scope: !794, file: !376, discriminator: 5)
!4883 = !DILocation(line: 496, column: 24, scope: !794)
!4884 = !DILocation(line: 496, column: 31, scope: !794)
!4885 = !DILocation(line: 496, column: 34, scope: !794)
!4886 = !DILocation(line: 496, column: 17, scope: !794)
!4887 = !DILocation(line: 497, column: 13, scope: !795)
!4888 = !DILocation(line: 497, column: 13, scope: !794)
!4889 = !DILocation(line: 494, column: 45, scope: !795)
!4890 = !DILocation(line: 494, column: 43, scope: !795)
!4891 = !DILocation(line: 494, column: 61, scope: !795)
!4892 = !DILocation(line: 494, column: 59, scope: !795)
!4893 = !DILocation(line: 494, column: 75, scope: !795)
!4894 = !DILocation(line: 494, column: 13, scope: !795)
!4895 = !DILocation(line: 498, column: 9, scope: !786)
!4896 = !DILocation(line: 499, column: 9, scope: !787)
!4897 = !DILocation(line: 502, column: 12, scope: !800)
!4898 = !DILocation(line: 502, column: 10, scope: !800)
!4899 = !DILocation(line: 502, column: 17, scope: !4900)
!4900 = !DILexicalBlockFile(scope: !4901, file: !376, discriminator: 2)
!4901 = !DILexicalBlockFile(scope: !799, file: !376, discriminator: 1)
!4902 = !DILocation(line: 502, column: 21, scope: !799)
!4903 = !DILocation(line: 502, column: 19, scope: !799)
!4904 = !DILocation(line: 502, column: 5, scope: !800)
!4905 = !DILocation(line: 503, column: 9, scope: !798)
!4906 = !DILocation(line: 503, column: 15, scope: !798)
!4907 = !DILocation(line: 503, column: 25, scope: !798)
!4908 = !DILocation(line: 503, column: 37, scope: !798)
!4909 = !DILocation(line: 503, column: 40, scope: !4910)
!4910 = !DILexicalBlockFile(scope: !798, file: !376, discriminator: 1)
!4911 = !DILocation(line: 503, column: 55, scope: !798)
!4912 = !DILocation(line: 503, column: 24, scope: !798)
!4913 = !DILocation(line: 503, column: 73, scope: !4914)
!4914 = !DILexicalBlockFile(scope: !798, file: !376, discriminator: 3)
!4915 = !DILocation(line: 503, column: 65, scope: !798)
!4916 = !DILocation(line: 503, column: 63, scope: !798)
!4917 = !DILocation(line: 503, column: 81, scope: !798)
!4918 = !DILocation(line: 503, column: 79, scope: !798)
!4919 = !DILocation(line: 503, column: 98, scope: !4920)
!4920 = !DILexicalBlockFile(scope: !4921, file: !376, discriminator: 4)
!4921 = !DILexicalBlockFile(scope: !798, file: !376, discriminator: 2)
!4922 = !DILocation(line: 503, column: 15, scope: !4923)
!4923 = !DILexicalBlockFile(scope: !4924, file: !376, discriminator: 6)
!4924 = !DILexicalBlockFile(scope: !798, file: !376, discriminator: 5)
!4925 = !DILocation(line: 504, column: 9, scope: !798)
!4926 = !DILocation(line: 504, column: 15, scope: !798)
!4927 = !DILocation(line: 504, column: 25, scope: !798)
!4928 = !DILocation(line: 504, column: 37, scope: !798)
!4929 = !DILocation(line: 504, column: 40, scope: !4910)
!4930 = !DILocation(line: 504, column: 55, scope: !798)
!4931 = !DILocation(line: 504, column: 24, scope: !798)
!4932 = !DILocation(line: 504, column: 73, scope: !4914)
!4933 = !DILocation(line: 504, column: 65, scope: !798)
!4934 = !DILocation(line: 504, column: 63, scope: !798)
!4935 = !DILocation(line: 504, column: 81, scope: !798)
!4936 = !DILocation(line: 504, column: 79, scope: !798)
!4937 = !DILocation(line: 504, column: 98, scope: !4920)
!4938 = !DILocation(line: 504, column: 15, scope: !4923)
!4939 = !DILocation(line: 506, column: 18, scope: !798)
!4940 = !DILocation(line: 506, column: 23, scope: !798)
!4941 = !DILocation(line: 506, column: 27, scope: !798)
!4942 = !DILocation(line: 506, column: 31, scope: !798)
!4943 = !DILocation(line: 506, column: 35, scope: !798)
!4944 = !DILocation(line: 507, column: 18, scope: !798)
!4945 = !DILocation(line: 507, column: 25, scope: !798)
!4946 = !DILocation(line: 507, column: 33, scope: !798)
!4947 = !DILocation(line: 507, column: 37, scope: !798)
!4948 = !DILocation(line: 507, column: 51, scope: !4910)
!4949 = !DILocation(line: 507, column: 62, scope: !798)
!4950 = !DILocation(line: 507, column: 37, scope: !4921)
!4951 = !DILocation(line: 508, column: 18, scope: !798)
!4952 = !DILocation(line: 508, column: 25, scope: !798)
!4953 = !DILocation(line: 508, column: 33, scope: !798)
!4954 = !DILocation(line: 508, column: 37, scope: !798)
!4955 = !DILocation(line: 508, column: 51, scope: !4910)
!4956 = !DILocation(line: 508, column: 62, scope: !798)
!4957 = !DILocation(line: 508, column: 37, scope: !4921)
!4958 = !DILocation(line: 509, column: 18, scope: !798)
!4959 = !DILocation(line: 506, column: 9, scope: !798)
!4960 = !DILocation(line: 510, column: 5, scope: !799)
!4961 = !DILocation(line: 510, column: 5, scope: !798)
!4962 = !DILocation(line: 502, column: 37, scope: !799)
!4963 = !DILocation(line: 502, column: 35, scope: !799)
!4964 = !DILocation(line: 502, column: 56, scope: !799)
!4965 = !DILocation(line: 502, column: 54, scope: !799)
!4966 = !DILocation(line: 502, column: 70, scope: !799)
!4967 = !DILocation(line: 502, column: 5, scope: !799)
!4968 = !DILocation(line: 511, column: 1, scope: !769)
!4969 = !DILocation(line: 511, column: 1, scope: !4970)
!4970 = !DILexicalBlockFile(scope: !769, file: !376, discriminator: 1)
!4971 = !DILocation(line: 2143, column: 27, scope: !815)
!4972 = !DILocation(line: 2143, column: 43, scope: !815)
!4973 = !DILocation(line: 2145, column: 5, scope: !815)
!4974 = !DILocation(line: 2145, column: 14, scope: !815)
!4975 = !DILocation(line: 2145, column: 40, scope: !815)
!4976 = !DILocation(line: 2145, column: 23, scope: !815)
!4977 = !DILocation(line: 2145, column: 47, scope: !815)
!4978 = !DILocation(line: 2146, column: 5, scope: !815)
!4979 = !DILocation(line: 2146, column: 16, scope: !815)
!4980 = !DILocation(line: 2146, column: 23, scope: !815)
!4981 = !DILocation(line: 2146, column: 30, scope: !815)
!4982 = !DILocation(line: 2147, column: 5, scope: !815)
!4983 = !DILocation(line: 2147, column: 15, scope: !815)
!4984 = !DILocation(line: 2148, column: 5, scope: !815)
!4985 = !DILocation(line: 2148, column: 15, scope: !815)
!4986 = !DILocation(line: 2149, column: 5, scope: !815)
!4987 = !DILocation(line: 2149, column: 11, scope: !815)
!4988 = !DILocation(line: 2151, column: 13, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !815, file: !376, line: 2151, column: 9)
!4990 = !DILocation(line: 2151, column: 20, scope: !4989)
!4991 = !DILocation(line: 2151, column: 25, scope: !4989)
!4992 = !DILocation(line: 2151, column: 9, scope: !815)
!4993 = !DILocation(line: 2152, column: 42, scope: !4989)
!4994 = !DILocation(line: 2152, column: 47, scope: !4989)
!4995 = !DILocation(line: 2152, column: 52, scope: !4989)
!4996 = !DILocation(line: 2152, column: 57, scope: !4989)
!4997 = !DILocation(line: 2152, column: 16, scope: !4989)
!4998 = !DILocation(line: 2152, column: 9, scope: !4989)
!4999 = !DILocation(line: 2158, column: 24, scope: !815)
!5000 = !DILocation(line: 2158, column: 29, scope: !815)
!5001 = !DILocation(line: 2158, column: 11, scope: !815)
!5002 = !DILocation(line: 2158, column: 9, scope: !815)
!5003 = !DILocation(line: 2159, column: 9, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !815, file: !376, line: 2159, column: 9)
!5005 = !DILocation(line: 2159, column: 13, scope: !5004)
!5006 = !DILocation(line: 2159, column: 9, scope: !815)
!5007 = !DILocation(line: 2160, column: 9, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5004, file: !376, line: 2159, column: 28)
!5009 = !DILocation(line: 2161, column: 9, scope: !5008)
!5010 = !DILocation(line: 2164, column: 13, scope: !815)
!5011 = !DILocation(line: 2164, column: 12, scope: !815)
!5012 = !{i64 0, i64 8, !1364, i64 8, i64 8, !1364, i64 16, i64 8, !1503, i64 24, i64 8, !1503, i64 32, i64 4, !1844, i64 36, i64 4, !1844, i64 40, i64 8, !1364, i64 48, i64 8, !1364, i64 56, i64 8, !1364, i64 64, i64 8, !1364, i64 72, i64 8, !1364}
!5013 = !DILocation(line: 2165, column: 16, scope: !815)
!5014 = !DILocation(line: 2165, column: 10, scope: !815)
!5015 = !DILocation(line: 2165, column: 14, scope: !815)
!5016 = !DILocation(line: 2166, column: 10, scope: !815)
!5017 = !DILocation(line: 2166, column: 21, scope: !815)
!5018 = !DILocation(line: 2167, column: 39, scope: !815)
!5019 = !DILocation(line: 2167, column: 20, scope: !815)
!5020 = !DILocation(line: 2167, column: 10, scope: !815)
!5021 = !DILocation(line: 2167, column: 18, scope: !815)
!5022 = !DILocation(line: 2168, column: 14, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !815, file: !376, line: 2168, column: 9)
!5024 = !DILocation(line: 2168, column: 22, scope: !5023)
!5025 = !DILocation(line: 2168, column: 9, scope: !815)
!5026 = !DILocation(line: 2169, column: 9, scope: !5023)
!5027 = !DILocation(line: 2170, column: 28, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !815, file: !376, line: 2170, column: 9)
!5029 = !DILocation(line: 2170, column: 9, scope: !5028)
!5030 = !DILocation(line: 2170, column: 33, scope: !5028)
!5031 = !DILocation(line: 2170, column: 9, scope: !815)
!5032 = !DILocation(line: 2171, column: 9, scope: !5028)
!5033 = !DILocation(line: 2173, column: 37, scope: !815)
!5034 = !DILocation(line: 2173, column: 42, scope: !815)
!5035 = !DILocation(line: 2173, column: 47, scope: !815)
!5036 = !DILocation(line: 2173, column: 11, scope: !815)
!5037 = !DILocation(line: 2173, column: 9, scope: !815)
!5038 = !DILocation(line: 2173, column: 5, scope: !815)
!5039 = !DILocation(line: 2176, column: 5, scope: !815)
!5040 = !DILocation(line: 2176, column: 19, scope: !5041)
!5041 = !DILexicalBlockFile(scope: !5042, file: !376, discriminator: 1)
!5042 = distinct !DILexicalBlock(scope: !5043, file: !376, line: 2176, column: 14)
!5043 = distinct !DILexicalBlock(scope: !815, file: !376, line: 2176, column: 8)
!5044 = !DILocation(line: 2176, column: 14, scope: !5042)
!5045 = !DILocation(line: 2176, column: 14, scope: !5043)
!5046 = !DILocation(line: 2176, column: 44, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !5042, file: !376, discriminator: 2)
!5048 = !DILocation(line: 2176, column: 39, scope: !5042)
!5049 = !DILocation(line: 2176, column: 28, scope: !5042)
!5050 = !DILocation(line: 2176, column: 54, scope: !5051)
!5051 = !DILexicalBlockFile(scope: !5052, file: !376, discriminator: 4)
!5052 = !DILexicalBlockFile(scope: !5043, file: !376, discriminator: 3)
!5053 = !DILocation(line: 2176, column: 54, scope: !5054)
!5054 = !DILexicalBlockFile(scope: !5043, file: !376, discriminator: 5)
!5055 = !DILocation(line: 2177, column: 16, scope: !815)
!5056 = !DILocation(line: 2177, column: 5, scope: !815)
!5057 = !DILocation(line: 2178, column: 12, scope: !815)
!5058 = !DILocation(line: 2178, column: 5, scope: !815)
!5059 = !DILocation(line: 2179, column: 1, scope: !815)
!5060 = !DILocation(line: 886, column: 35, scope: !824)
!5061 = !DILocation(line: 886, column: 46, scope: !824)
!5062 = !DILocation(line: 888, column: 5, scope: !824)
!5063 = !DILocation(line: 888, column: 22, scope: !824)
!5064 = !DILocation(line: 888, column: 30, scope: !824)
!5065 = !DILocation(line: 888, column: 37, scope: !824)
!5066 = !DILocation(line: 889, column: 5, scope: !824)
!5067 = !DILocation(line: 889, column: 17, scope: !824)
!5068 = !DILocation(line: 889, column: 20, scope: !824)
!5069 = !DILocation(line: 891, column: 22, scope: !824)
!5070 = !DILocation(line: 891, column: 28, scope: !824)
!5071 = !DILocation(line: 891, column: 33, scope: !824)
!5072 = !DILocation(line: 891, column: 9, scope: !824)
!5073 = !DILocation(line: 891, column: 7, scope: !824)
!5074 = !DILocation(line: 892, column: 9, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !824, file: !376, line: 892, column: 9)
!5076 = !DILocation(line: 892, column: 11, scope: !5075)
!5077 = !DILocation(line: 892, column: 9, scope: !824)
!5078 = !DILocation(line: 893, column: 9, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !376, line: 892, column: 26)
!5080 = !DILocation(line: 894, column: 9, scope: !5079)
!5081 = !DILocation(line: 897, column: 9, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !824, file: !376, line: 897, column: 9)
!5083 = !DILocation(line: 897, column: 15, scope: !5082)
!5084 = !DILocation(line: 897, column: 9, scope: !824)
!5085 = !DILocation(line: 898, column: 16, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5082, file: !376, line: 897, column: 24)
!5087 = !DILocation(line: 898, column: 22, scope: !5086)
!5088 = !DILocation(line: 898, column: 9, scope: !5086)
!5089 = !DILocation(line: 898, column: 14, scope: !5086)
!5090 = !DILocation(line: 899, column: 16, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5086, file: !376, line: 899, column: 9)
!5092 = !DILocation(line: 899, column: 14, scope: !5091)
!5093 = !DILocation(line: 899, column: 21, scope: !5094)
!5094 = !DILexicalBlockFile(scope: !5095, file: !376, discriminator: 2)
!5095 = !DILexicalBlockFile(scope: !5096, file: !376, discriminator: 1)
!5096 = distinct !DILexicalBlock(scope: !5091, file: !376, line: 899, column: 9)
!5097 = !DILocation(line: 899, column: 25, scope: !5096)
!5098 = !DILocation(line: 899, column: 31, scope: !5096)
!5099 = !DILocation(line: 899, column: 23, scope: !5096)
!5100 = !DILocation(line: 899, column: 9, scope: !5091)
!5101 = !DILocation(line: 900, column: 22, scope: !5096)
!5102 = !DILocation(line: 900, column: 23, scope: !5096)
!5103 = !DILocation(line: 900, column: 20, scope: !5096)
!5104 = !DILocation(line: 900, column: 41, scope: !5096)
!5105 = !DILocation(line: 900, column: 42, scope: !5096)
!5106 = !DILocation(line: 900, column: 29, scope: !5096)
!5107 = !DILocation(line: 900, column: 35, scope: !5096)
!5108 = !DILocation(line: 900, column: 27, scope: !5096)
!5109 = !DILocation(line: 900, column: 15, scope: !5096)
!5110 = !DILocation(line: 900, column: 13, scope: !5096)
!5111 = !DILocation(line: 900, column: 18, scope: !5096)
!5112 = !DILocation(line: 899, column: 38, scope: !5096)
!5113 = !DILocation(line: 899, column: 9, scope: !5096)
!5114 = !DILocation(line: 901, column: 5, scope: !5086)
!5115 = !DILocation(line: 903, column: 27, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5082, file: !376, line: 902, column: 10)
!5117 = !DILocation(line: 903, column: 33, scope: !5116)
!5118 = !DILocation(line: 903, column: 11, scope: !5116)
!5119 = !DILocation(line: 903, column: 17, scope: !5116)
!5120 = !DILocation(line: 903, column: 21, scope: !5116)
!5121 = !DILocation(line: 903, column: 9, scope: !5116)
!5122 = !DILocation(line: 903, column: 25, scope: !5116)
!5123 = !DILocation(line: 904, column: 18, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5116, file: !376, line: 904, column: 9)
!5125 = !DILocation(line: 904, column: 24, scope: !5124)
!5126 = !DILocation(line: 904, column: 28, scope: !5124)
!5127 = !DILocation(line: 904, column: 16, scope: !5124)
!5128 = !DILocation(line: 904, column: 14, scope: !5124)
!5129 = !DILocation(line: 904, column: 32, scope: !5130)
!5130 = !DILexicalBlockFile(scope: !5131, file: !376, discriminator: 2)
!5131 = !DILexicalBlockFile(scope: !5132, file: !376, discriminator: 1)
!5132 = distinct !DILexicalBlock(scope: !5124, file: !376, line: 904, column: 9)
!5133 = !DILocation(line: 904, column: 34, scope: !5132)
!5134 = !DILocation(line: 904, column: 9, scope: !5124)
!5135 = !DILocation(line: 905, column: 22, scope: !5132)
!5136 = !DILocation(line: 905, column: 23, scope: !5132)
!5137 = !DILocation(line: 905, column: 20, scope: !5132)
!5138 = !DILocation(line: 905, column: 41, scope: !5132)
!5139 = !DILocation(line: 905, column: 42, scope: !5132)
!5140 = !DILocation(line: 905, column: 29, scope: !5132)
!5141 = !DILocation(line: 905, column: 35, scope: !5132)
!5142 = !DILocation(line: 905, column: 27, scope: !5132)
!5143 = !DILocation(line: 905, column: 15, scope: !5132)
!5144 = !DILocation(line: 905, column: 13, scope: !5132)
!5145 = !DILocation(line: 905, column: 18, scope: !5132)
!5146 = !DILocation(line: 904, column: 41, scope: !5132)
!5147 = !DILocation(line: 904, column: 9, scope: !5132)
!5148 = !DILocation(line: 908, column: 12, scope: !824)
!5149 = !DILocation(line: 908, column: 5, scope: !824)
!5150 = !DILocation(line: 909, column: 1, scope: !824)
!5151 = !DILocation(line: 1416, column: 31, scope: !835)
!5152 = !DILocation(line: 1416, column: 48, scope: !835)
!5153 = !DILocation(line: 1416, column: 58, scope: !835)
!5154 = !DILocation(line: 1418, column: 5, scope: !835)
!5155 = !DILocation(line: 1418, column: 14, scope: !835)
!5156 = !DILocation(line: 1418, column: 22, scope: !835)
!5157 = !DILocation(line: 1418, column: 28, scope: !835)
!5158 = !DILocation(line: 1419, column: 5, scope: !835)
!5159 = !DILocation(line: 1419, column: 16, scope: !835)
!5160 = !DILocation(line: 1419, column: 24, scope: !835)
!5161 = !DILocation(line: 1419, column: 31, scope: !835)
!5162 = !DILocation(line: 1420, column: 5, scope: !835)
!5163 = !DILocation(line: 1420, column: 9, scope: !835)
!5164 = !DILocation(line: 1420, column: 21, scope: !835)
!5165 = !DILocation(line: 1420, column: 28, scope: !835)
!5166 = !DILocation(line: 1423, column: 9, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1423, column: 9)
!5168 = !DILocation(line: 1423, column: 15, scope: !5167)
!5169 = !DILocation(line: 1423, column: 19, scope: !5167)
!5170 = !DILocation(line: 1423, column: 33, scope: !5167)
!5171 = !DILocation(line: 1423, column: 37, scope: !5172)
!5172 = !DILexicalBlockFile(scope: !5167, file: !376, discriminator: 1)
!5173 = !DILocation(line: 1423, column: 46, scope: !5167)
!5174 = !DILocation(line: 1423, column: 9, scope: !835)
!5175 = !DILocation(line: 1424, column: 35, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5167, file: !376, line: 1423, column: 55)
!5177 = !DILocation(line: 1424, column: 41, scope: !5176)
!5178 = !DILocation(line: 1424, column: 46, scope: !5176)
!5179 = !DILocation(line: 1424, column: 52, scope: !5176)
!5180 = !DILocation(line: 1424, column: 16, scope: !5176)
!5181 = !DILocation(line: 1424, column: 9, scope: !5176)
!5182 = !DILocation(line: 1428, column: 6, scope: !835)
!5183 = !DILocation(line: 1428, column: 14, scope: !835)
!5184 = !DILocation(line: 1428, column: 13, scope: !835)
!5185 = !DILocation(line: 1429, column: 5, scope: !835)
!5186 = !DILocation(line: 1429, column: 11, scope: !835)
!5187 = !DILocation(line: 1429, column: 15, scope: !835)
!5188 = !DILocation(line: 1432, column: 9, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1432, column: 9)
!5190 = !DILocation(line: 1432, column: 15, scope: !5189)
!5191 = !DILocation(line: 1432, column: 22, scope: !5189)
!5192 = !DILocation(line: 1432, column: 9, scope: !835)
!5193 = !DILocation(line: 1433, column: 9, scope: !5189)
!5194 = !DILocation(line: 1433, column: 15, scope: !5189)
!5195 = !DILocation(line: 1433, column: 22, scope: !5189)
!5196 = !DILocation(line: 1435, column: 9, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1435, column: 9)
!5198 = !DILocation(line: 1435, column: 15, scope: !5197)
!5199 = !DILocation(line: 1435, column: 20, scope: !5197)
!5200 = !DILocation(line: 1435, column: 25, scope: !5197)
!5201 = !DILocation(line: 1436, column: 13, scope: !5197)
!5202 = !DILocation(line: 1436, column: 18, scope: !5197)
!5203 = !DILocation(line: 1436, column: 27, scope: !5197)
!5204 = !DILocation(line: 1436, column: 38, scope: !5197)
!5205 = !DILocation(line: 1436, column: 41, scope: !5206)
!5206 = !DILexicalBlockFile(scope: !5197, file: !376, discriminator: 1)
!5207 = !DILocation(line: 1436, column: 47, scope: !5197)
!5208 = !DILocation(line: 1436, column: 53, scope: !5197)
!5209 = !DILocation(line: 1436, column: 68, scope: !5197)
!5210 = !DILocation(line: 1437, column: 13, scope: !5197)
!5211 = !DILocation(line: 1437, column: 18, scope: !5197)
!5212 = !DILocation(line: 1437, column: 38, scope: !5197)
!5213 = !DILocation(line: 1437, column: 60, scope: !5197)
!5214 = !DILocation(line: 1437, column: 63, scope: !5206)
!5215 = !DILocation(line: 1437, column: 69, scope: !5197)
!5216 = !DILocation(line: 1437, column: 77, scope: !5197)
!5217 = !DILocation(line: 1435, column: 9, scope: !835)
!5218 = !DILocation(line: 1441, column: 25, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5197, file: !376, line: 1437, column: 94)
!5220 = !DILocation(line: 1441, column: 9, scope: !5219)
!5221 = !DILocation(line: 1443, column: 9, scope: !5219)
!5222 = !DILocation(line: 1446, column: 9, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1446, column: 9)
!5224 = !DILocation(line: 1446, column: 19, scope: !5223)
!5225 = !DILocation(line: 1446, column: 9, scope: !835)
!5226 = !DILocation(line: 1447, column: 25, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5223, file: !376, line: 1446, column: 28)
!5228 = !DILocation(line: 1447, column: 9, scope: !5227)
!5229 = !DILocation(line: 1449, column: 13, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5227, file: !376, line: 1449, column: 13)
!5231 = !DILocation(line: 1449, column: 23, scope: !5230)
!5232 = !DILocation(line: 1449, column: 13, scope: !5227)
!5233 = !DILocation(line: 1450, column: 13, scope: !5230)
!5234 = !DILocation(line: 1450, column: 19, scope: !5230)
!5235 = !DILocation(line: 1450, column: 23, scope: !5230)
!5236 = !DILocation(line: 1451, column: 9, scope: !5227)
!5237 = !DILocation(line: 1454, column: 10, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1454, column: 9)
!5239 = !DILocation(line: 1454, column: 15, scope: !5238)
!5240 = !DILocation(line: 1454, column: 24, scope: !5238)
!5241 = !DILocation(line: 1454, column: 27, scope: !5242)
!5242 = !DILexicalBlockFile(scope: !5238, file: !376, discriminator: 1)
!5243 = !DILocation(line: 1454, column: 33, scope: !5238)
!5244 = !DILocation(line: 1454, column: 27, scope: !5238)
!5245 = !DILocation(line: 1454, column: 9, scope: !835)
!5246 = !DILocation(line: 1455, column: 25, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5238, file: !376, line: 1454, column: 43)
!5248 = !DILocation(line: 1455, column: 9, scope: !5247)
!5249 = !DILocation(line: 1457, column: 9, scope: !5247)
!5250 = !DILocation(line: 1459, column: 11, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1459, column: 9)
!5252 = !DILocation(line: 1459, column: 16, scope: !5251)
!5253 = !DILocation(line: 1459, column: 9, scope: !835)
!5254 = !DILocation(line: 1465, column: 9, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5251, file: !376, line: 1459, column: 26)
!5256 = !DILocation(line: 1465, column: 15, scope: !5255)
!5257 = !DILocation(line: 1465, column: 22, scope: !5255)
!5258 = !DILocation(line: 1466, column: 5, scope: !5255)
!5259 = !DILocation(line: 1468, column: 11, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1468, column: 9)
!5261 = !DILocation(line: 1468, column: 16, scope: !5260)
!5262 = !DILocation(line: 1468, column: 47, scope: !5260)
!5263 = !DILocation(line: 1468, column: 80, scope: !5260)
!5264 = !DILocation(line: 1468, column: 88, scope: !5265)
!5265 = !DILexicalBlockFile(scope: !5260, file: !376, discriminator: 1)
!5266 = !DILocation(line: 1468, column: 97, scope: !5260)
!5267 = !DILocation(line: 1468, column: 9, scope: !835)
!5268 = !DILocation(line: 1469, column: 25, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5260, file: !376, line: 1468, column: 115)
!5270 = !DILocation(line: 1469, column: 9, scope: !5269)
!5271 = !DILocation(line: 1471, column: 9, scope: !5269)
!5272 = !DILocation(line: 1473, column: 11, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1473, column: 9)
!5274 = !DILocation(line: 1473, column: 16, scope: !5273)
!5275 = !DILocation(line: 1473, column: 47, scope: !5273)
!5276 = !DILocation(line: 1473, column: 80, scope: !5273)
!5277 = !DILocation(line: 1473, column: 88, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5273, file: !376, discriminator: 1)
!5279 = !DILocation(line: 1473, column: 97, scope: !5273)
!5280 = !DILocation(line: 1473, column: 9, scope: !835)
!5281 = !DILocation(line: 1474, column: 25, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5273, file: !376, line: 1473, column: 115)
!5283 = !DILocation(line: 1474, column: 9, scope: !5282)
!5284 = !DILocation(line: 1476, column: 9, scope: !5282)
!5285 = !DILocation(line: 1478, column: 11, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1478, column: 9)
!5287 = !DILocation(line: 1478, column: 16, scope: !5286)
!5288 = !DILocation(line: 1478, column: 47, scope: !5286)
!5289 = !DILocation(line: 1478, column: 80, scope: !5286)
!5290 = !DILocation(line: 1478, column: 88, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5286, file: !376, discriminator: 1)
!5292 = !DILocation(line: 1478, column: 97, scope: !5286)
!5293 = !DILocation(line: 1478, column: 9, scope: !835)
!5294 = !DILocation(line: 1479, column: 25, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5286, file: !376, line: 1478, column: 121)
!5296 = !DILocation(line: 1479, column: 9, scope: !5295)
!5297 = !DILocation(line: 1481, column: 9, scope: !5295)
!5298 = !DILocation(line: 1483, column: 12, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1483, column: 9)
!5300 = !DILocation(line: 1483, column: 17, scope: !5299)
!5301 = !DILocation(line: 1483, column: 48, scope: !5299)
!5302 = !DILocation(line: 1483, column: 81, scope: !5299)
!5303 = !DILocation(line: 1483, column: 85, scope: !5304)
!5304 = !DILexicalBlockFile(scope: !5299, file: !376, discriminator: 1)
!5305 = !DILocation(line: 1483, column: 95, scope: !5299)
!5306 = !DILocation(line: 1483, column: 9, scope: !835)
!5307 = !DILocation(line: 1484, column: 25, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5299, file: !376, line: 1483, column: 105)
!5309 = !DILocation(line: 1484, column: 9, scope: !5308)
!5310 = !DILocation(line: 1486, column: 9, scope: !5308)
!5311 = !DILocation(line: 1488, column: 12, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1488, column: 9)
!5313 = !DILocation(line: 1488, column: 17, scope: !5312)
!5314 = !DILocation(line: 1488, column: 37, scope: !5312)
!5315 = !DILocation(line: 1488, column: 9, scope: !835)
!5316 = !DILocation(line: 1489, column: 18, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !376, line: 1489, column: 13)
!5318 = distinct !DILexicalBlock(scope: !5312, file: !376, line: 1488, column: 60)
!5319 = !DILocation(line: 1489, column: 27, scope: !5317)
!5320 = !DILocation(line: 1489, column: 13, scope: !5318)
!5321 = !DILocation(line: 1490, column: 29, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5317, file: !376, line: 1489, column: 45)
!5323 = !DILocation(line: 1490, column: 13, scope: !5322)
!5324 = !DILocation(line: 1492, column: 13, scope: !5322)
!5325 = !DILocation(line: 1494, column: 9, scope: !5318)
!5326 = !DILocation(line: 1494, column: 15, scope: !5318)
!5327 = !DILocation(line: 1494, column: 23, scope: !5318)
!5328 = !DILocation(line: 1495, column: 5, scope: !5318)
!5329 = !DILocation(line: 1496, column: 12, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !835, file: !376, line: 1496, column: 9)
!5331 = !DILocation(line: 1496, column: 17, scope: !5330)
!5332 = !DILocation(line: 1496, column: 26, scope: !5330)
!5333 = !DILocation(line: 1496, column: 9, scope: !835)
!5334 = !DILocation(line: 1499, column: 13, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !376, line: 1499, column: 13)
!5336 = distinct !DILexicalBlock(scope: !5330, file: !376, line: 1496, column: 38)
!5337 = !DILocation(line: 1499, column: 19, scope: !5335)
!5338 = !DILocation(line: 1499, column: 26, scope: !5335)
!5339 = !DILocation(line: 1499, column: 13, scope: !5336)
!5340 = !DILocation(line: 1502, column: 26, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5335, file: !376, line: 1499, column: 41)
!5342 = !DILocation(line: 1502, column: 13, scope: !5341)
!5343 = !DILocation(line: 1505, column: 13, scope: !5341)
!5344 = !DILocation(line: 1509, column: 9, scope: !5336)
!5345 = !DILocation(line: 1509, column: 15, scope: !5336)
!5346 = !DILocation(line: 1509, column: 20, scope: !5336)
!5347 = !DILocation(line: 1510, column: 9, scope: !5336)
!5348 = !DILocation(line: 1510, column: 15, scope: !5336)
!5349 = !DILocation(line: 1510, column: 21, scope: !5336)
!5350 = !DILocation(line: 1511, column: 5, scope: !5336)
!5351 = !DILocation(line: 1513, column: 29, scope: !835)
!5352 = !DILocation(line: 1513, column: 17, scope: !835)
!5353 = !DILocation(line: 1513, column: 5, scope: !835)
!5354 = !DILocation(line: 1513, column: 11, scope: !835)
!5355 = !DILocation(line: 1513, column: 15, scope: !835)
!5356 = !DILocation(line: 1514, column: 21, scope: !835)
!5357 = !DILocation(line: 1514, column: 27, scope: !835)
!5358 = !DILocation(line: 1514, column: 34, scope: !835)
!5359 = !DILocation(line: 1514, column: 43, scope: !835)
!5360 = !DILocation(line: 1515, column: 5, scope: !835)
!5361 = !DILocation(line: 1515, column: 11, scope: !835)
!5362 = !DILocation(line: 1515, column: 17, scope: !835)
!5363 = !DILocation(line: 1515, column: 24, scope: !835)
!5364 = !DILocation(line: 1517, column: 5, scope: !835)
!5365 = !DILocation(line: 1518, column: 1, scope: !835)
!5366 = !DILocation(line: 1521, column: 35, scope: !845)
!5367 = !DILocation(line: 1521, column: 52, scope: !845)
!5368 = !DILocation(line: 1523, column: 29, scope: !853)
!5369 = !DILocation(line: 1523, column: 36, scope: !853)
!5370 = !DILocation(line: 1523, column: 63, scope: !853)
!5371 = !DILocation(line: 1523, column: 70, scope: !853)
!5372 = !DILocation(line: 1523, column: 41, scope: !853)
!5373 = !DILocation(line: 1523, column: 9, scope: !845)
!5374 = !DILocation(line: 1524, column: 9, scope: !852)
!5375 = !DILocation(line: 1524, column: 18, scope: !852)
!5376 = !DILocation(line: 1524, column: 26, scope: !852)
!5377 = !DILocation(line: 1524, column: 32, scope: !852)
!5378 = !{!1630, !1365, i64 72}
!5379 = !DILocation(line: 1525, column: 15, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !852, file: !376, line: 1525, column: 13)
!5381 = !DILocation(line: 1525, column: 22, scope: !5380)
!5382 = !DILocation(line: 1525, column: 13, scope: !5380)
!5383 = !DILocation(line: 1525, column: 30, scope: !5380)
!5384 = !DILocation(line: 1525, column: 35, scope: !5380)
!5385 = !DILocation(line: 1525, column: 38, scope: !5386)
!5386 = !DILexicalBlockFile(scope: !5380, file: !376, discriminator: 1)
!5387 = !DILocation(line: 1525, column: 47, scope: !5380)
!5388 = !DILocation(line: 1525, column: 53, scope: !5380)
!5389 = !DILocation(line: 1525, column: 44, scope: !5380)
!5390 = !DILocation(line: 1525, column: 13, scope: !852)
!5391 = !DILocation(line: 1526, column: 26, scope: !5380)
!5392 = !DILocation(line: 1526, column: 32, scope: !5380)
!5393 = !DILocation(line: 1526, column: 13, scope: !5380)
!5394 = !DILocation(line: 1527, column: 5, scope: !853)
!5395 = !DILocation(line: 1527, column: 5, scope: !852)
!5396 = !DILocation(line: 1529, column: 5, scope: !845)
!5397 = !DILocation(line: 2137, column: 26, scope: !854)
!5398 = !DILocation(line: 2137, column: 42, scope: !854)
!5399 = !DILocation(line: 2139, column: 45, scope: !854)
!5400 = !DILocation(line: 2139, column: 28, scope: !854)
!5401 = !DILocation(line: 2139, column: 12, scope: !854)
!5402 = !DILocation(line: 2139, column: 5, scope: !854)
!5403 = !DILocation(line: 1345, column: 24, scope: !924)
!5404 = !DILocation(line: 1345, column: 40, scope: !924)
!5405 = !DILocation(line: 1345, column: 56, scope: !924)
!5406 = !DILocation(line: 1347, column: 5, scope: !924)
!5407 = !DILocation(line: 1347, column: 20, scope: !924)
!5408 = !DILocation(line: 1347, column: 42, scope: !924)
!5409 = !DILocation(line: 1347, column: 25, scope: !924)
!5410 = !DILocation(line: 1351, column: 5, scope: !924)
!5411 = !DILocation(line: 1351, column: 15, scope: !924)
!5412 = !DILocation(line: 1352, column: 5, scope: !924)
!5413 = !DILocation(line: 1352, column: 15, scope: !924)
!5414 = !DILocation(line: 1353, column: 5, scope: !924)
!5415 = !DILocation(line: 1353, column: 15, scope: !924)
!5416 = !DILocation(line: 1354, column: 5, scope: !924)
!5417 = !DILocation(line: 1354, column: 15, scope: !924)
!5418 = !DILocation(line: 1354, column: 24, scope: !924)
!5419 = !DILocation(line: 1355, column: 5, scope: !924)
!5420 = !DILocation(line: 1355, column: 16, scope: !924)
!5421 = !DILocation(line: 1356, column: 5, scope: !924)
!5422 = !DILocation(line: 1356, column: 9, scope: !924)
!5423 = !DILocation(line: 1358, column: 45, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !924, file: !376, line: 1358, column: 9)
!5425 = !DILocation(line: 1358, column: 51, scope: !5424)
!5426 = !DILocation(line: 1358, column: 10, scope: !5424)
!5427 = !DILocation(line: 1358, column: 9, scope: !924)
!5428 = !DILocation(line: 1360, column: 9, scope: !5424)
!5429 = !DILocation(line: 1362, column: 9, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !924, file: !376, line: 1362, column: 9)
!5431 = !DILocation(line: 1362, column: 15, scope: !5430)
!5432 = !DILocation(line: 1362, column: 9, scope: !924)
!5433 = !DILocation(line: 1363, column: 25, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !376, line: 1362, column: 24)
!5435 = !DILocation(line: 1363, column: 9, scope: !5434)
!5436 = !DILocation(line: 1365, column: 9, scope: !5434)
!5437 = !DILocation(line: 1367, column: 28, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !924, file: !376, line: 1367, column: 9)
!5439 = !DILocation(line: 1367, column: 33, scope: !5438)
!5440 = !DILocation(line: 1367, column: 60, scope: !5438)
!5441 = !DILocation(line: 1367, column: 65, scope: !5438)
!5442 = !DILocation(line: 1367, column: 38, scope: !5438)
!5443 = !DILocation(line: 1367, column: 9, scope: !924)
!5444 = !DILocation(line: 1368, column: 25, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5438, file: !376, line: 1367, column: 77)
!5446 = !DILocation(line: 1368, column: 9, scope: !5445)
!5447 = !DILocation(line: 1370, column: 9, scope: !5445)
!5448 = !DILocation(line: 1372, column: 11, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !924, file: !376, line: 1372, column: 9)
!5450 = !DILocation(line: 1372, column: 15, scope: !5449)
!5451 = !DILocation(line: 1372, column: 20, scope: !5449)
!5452 = !DILocation(line: 1372, column: 28, scope: !5449)
!5453 = !DILocation(line: 1372, column: 31, scope: !5454)
!5454 = !DILexicalBlockFile(scope: !5449, file: !376, discriminator: 1)
!5455 = !DILocation(line: 1372, column: 35, scope: !5449)
!5456 = !DILocation(line: 1372, column: 41, scope: !5449)
!5457 = !DILocation(line: 1372, column: 49, scope: !5449)
!5458 = !DILocation(line: 1372, column: 9, scope: !924)
!5459 = !DILocation(line: 1373, column: 22, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5449, file: !376, line: 1372, column: 54)
!5461 = !DILocation(line: 1375, column: 13, scope: !5460)
!5462 = !DILocation(line: 1375, column: 17, scope: !5460)
!5463 = !DILocation(line: 1375, column: 23, scope: !5460)
!5464 = !DILocation(line: 1375, column: 32, scope: !5460)
!5465 = !DILocation(line: 1375, column: 36, scope: !5460)
!5466 = !DILocation(line: 1375, column: 42, scope: !5460)
!5467 = !DILocation(line: 1375, column: 49, scope: !5460)
!5468 = !DILocation(line: 1373, column: 9, scope: !5460)
!5469 = !DILocation(line: 1376, column: 9, scope: !5460)
!5470 = !DILocation(line: 1379, column: 27, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !924, file: !376, line: 1379, column: 9)
!5472 = !DILocation(line: 1379, column: 31, scope: !5471)
!5473 = !DILocation(line: 1379, column: 38, scope: !5471)
!5474 = !DILocation(line: 1379, column: 45, scope: !5471)
!5475 = !DILocation(line: 1380, column: 27, scope: !5471)
!5476 = !DILocation(line: 1380, column: 35, scope: !5471)
!5477 = !DILocation(line: 1380, column: 43, scope: !5471)
!5478 = !DILocation(line: 1379, column: 9, scope: !5471)
!5479 = !DILocation(line: 1380, column: 50, scope: !5471)
!5480 = !DILocation(line: 1379, column: 9, scope: !924)
!5481 = !DILocation(line: 1381, column: 9, scope: !5471)
!5482 = !DILocation(line: 1382, column: 58, scope: !924)
!5483 = !DILocation(line: 1382, column: 5, scope: !924)
!5484 = !DILocation(line: 1383, column: 1, scope: !924)
!5485 = !DILocation(line: 1387, column: 23, scope: !1125)
!5486 = !DILocation(line: 1387, column: 39, scope: !1125)
!5487 = !DILocation(line: 1389, column: 5, scope: !1125)
!5488 = !DILocation(line: 1389, column: 20, scope: !1125)
!5489 = !DILocation(line: 1389, column: 42, scope: !1125)
!5490 = !DILocation(line: 1389, column: 25, scope: !1125)
!5491 = !DILocation(line: 1390, column: 28, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !1125, file: !376, line: 1390, column: 9)
!5493 = !DILocation(line: 1390, column: 33, scope: !5492)
!5494 = !DILocation(line: 1390, column: 60, scope: !5492)
!5495 = !DILocation(line: 1390, column: 65, scope: !5492)
!5496 = !DILocation(line: 1390, column: 38, scope: !5492)
!5497 = !DILocation(line: 1390, column: 9, scope: !1125)
!5498 = !DILocation(line: 1391, column: 25, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5492, file: !376, line: 1390, column: 77)
!5500 = !DILocation(line: 1391, column: 9, scope: !5499)
!5501 = !DILocation(line: 1393, column: 9, scope: !5499)
!5502 = !DILocation(line: 1395, column: 9, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !1125, file: !376, line: 1395, column: 9)
!5504 = !DILocation(line: 1395, column: 13, scope: !5503)
!5505 = !DILocation(line: 1395, column: 19, scope: !5503)
!5506 = !DILocation(line: 1395, column: 27, scope: !5503)
!5507 = !DILocation(line: 1395, column: 9, scope: !1125)
!5508 = !DILocation(line: 1396, column: 22, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5503, file: !376, line: 1395, column: 32)
!5510 = !DILocation(line: 1398, column: 13, scope: !5509)
!5511 = !DILocation(line: 1398, column: 17, scope: !5509)
!5512 = !DILocation(line: 1398, column: 23, scope: !5509)
!5513 = !DILocation(line: 1398, column: 32, scope: !5509)
!5514 = !DILocation(line: 1398, column: 36, scope: !5509)
!5515 = !DILocation(line: 1398, column: 42, scope: !5509)
!5516 = !DILocation(line: 1398, column: 49, scope: !5509)
!5517 = !DILocation(line: 1396, column: 9, scope: !5509)
!5518 = !DILocation(line: 1399, column: 9, scope: !5509)
!5519 = !DILocation(line: 1401, column: 9, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !1125, file: !376, line: 1401, column: 9)
!5521 = !DILocation(line: 1401, column: 13, scope: !5520)
!5522 = !DILocation(line: 1401, column: 19, scope: !5520)
!5523 = !DILocation(line: 1401, column: 24, scope: !5520)
!5524 = !DILocation(line: 1401, column: 9, scope: !1125)
!5525 = !DILocation(line: 1402, column: 25, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5520, file: !376, line: 1401, column: 39)
!5527 = !DILocation(line: 1402, column: 9, scope: !5526)
!5528 = !DILocation(line: 1404, column: 9, scope: !5526)
!5529 = !DILocation(line: 1407, column: 15, scope: !1125)
!5530 = !DILocation(line: 1407, column: 5, scope: !1125)
!5531 = !DILocation(line: 1408, column: 58, scope: !1125)
!5532 = !DILocation(line: 1408, column: 5, scope: !1125)
!5533 = !DILocation(line: 1409, column: 1, scope: !1125)
!5534 = !DILocation(line: 2183, column: 34, scope: !1130)
!5535 = !DILocation(line: 2183, column: 50, scope: !1130)
!5536 = !DILocation(line: 2185, column: 5, scope: !1130)
!5537 = !DILocation(line: 2185, column: 20, scope: !1130)
!5538 = !DILocation(line: 2185, column: 42, scope: !1130)
!5539 = !DILocation(line: 2185, column: 25, scope: !1130)
!5540 = !DILocation(line: 2186, column: 5, scope: !1130)
!5541 = !DILocation(line: 2186, column: 16, scope: !1130)
!5542 = !DILocation(line: 2186, column: 24, scope: !1130)
!5543 = !DILocation(line: 2186, column: 28, scope: !1130)
!5544 = !DILocation(line: 2186, column: 34, scope: !1130)
!5545 = !DILocation(line: 2187, column: 5, scope: !1130)
!5546 = !DILocation(line: 2187, column: 16, scope: !1130)
!5547 = !DILocation(line: 2189, column: 9, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !1130, file: !376, line: 2189, column: 9)
!5549 = !DILocation(line: 2189, column: 15, scope: !5548)
!5550 = !DILocation(line: 2189, column: 26, scope: !5548)
!5551 = !DILocation(line: 2189, column: 9, scope: !1130)
!5552 = !DILocation(line: 2190, column: 25, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5548, file: !376, line: 2189, column: 41)
!5554 = !DILocation(line: 2190, column: 9, scope: !5553)
!5555 = !DILocation(line: 2192, column: 13, scope: !5553)
!5556 = !DILocation(line: 2194, column: 9, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !1130, file: !376, line: 2194, column: 9)
!5558 = !DILocation(line: 2194, column: 15, scope: !5557)
!5559 = !DILocation(line: 2194, column: 23, scope: !5557)
!5560 = !DILocation(line: 2194, column: 9, scope: !1130)
!5561 = !DILocation(line: 2195, column: 25, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5557, file: !376, line: 2194, column: 38)
!5563 = !DILocation(line: 2195, column: 9, scope: !5562)
!5564 = !DILocation(line: 2197, column: 13, scope: !5562)
!5565 = !DILocation(line: 2200, column: 37, scope: !1130)
!5566 = !DILocation(line: 2200, column: 43, scope: !1130)
!5567 = !DILocation(line: 2200, column: 48, scope: !1130)
!5568 = !DILocation(line: 2200, column: 24, scope: !1130)
!5569 = !DILocation(line: 2200, column: 5, scope: !1130)
!5570 = !DILocation(line: 2200, column: 11, scope: !1130)
!5571 = !DILocation(line: 2200, column: 22, scope: !1130)
!5572 = !DILocation(line: 2201, column: 9, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !1130, file: !376, line: 2201, column: 9)
!5574 = !DILocation(line: 2201, column: 15, scope: !5573)
!5575 = !DILocation(line: 2201, column: 26, scope: !5573)
!5576 = !DILocation(line: 2201, column: 9, scope: !1130)
!5577 = !DILocation(line: 2202, column: 9, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5573, file: !376, line: 2201, column: 41)
!5579 = !DILocation(line: 2203, column: 9, scope: !5578)
!5580 = !DILocation(line: 2206, column: 12, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !1130, file: !376, line: 2206, column: 5)
!5582 = !DILocation(line: 2206, column: 10, scope: !5581)
!5583 = !DILocation(line: 2206, column: 17, scope: !5584)
!5584 = !DILexicalBlockFile(scope: !5585, file: !376, discriminator: 2)
!5585 = !DILexicalBlockFile(scope: !5586, file: !376, discriminator: 1)
!5586 = distinct !DILexicalBlock(scope: !5581, file: !376, line: 2206, column: 5)
!5587 = !DILocation(line: 2206, column: 21, scope: !5586)
!5588 = !DILocation(line: 2206, column: 27, scope: !5586)
!5589 = !DILocation(line: 2206, column: 19, scope: !5586)
!5590 = !DILocation(line: 2206, column: 5, scope: !5581)
!5591 = !DILocation(line: 2207, column: 26, scope: !5586)
!5592 = !DILocation(line: 2207, column: 9, scope: !5586)
!5593 = !DILocation(line: 2207, column: 15, scope: !5586)
!5594 = !DILocation(line: 2207, column: 29, scope: !5586)
!5595 = !DILocation(line: 2206, column: 34, scope: !5586)
!5596 = !DILocation(line: 2206, column: 5, scope: !5586)
!5597 = !DILocation(line: 2209, column: 58, scope: !1130)
!5598 = !DILocation(line: 2209, column: 5, scope: !1130)
!5599 = !DILocation(line: 2210, column: 1, scope: !1130)
!5600 = !DILocation(line: 2217, column: 42, scope: !1137)
!5601 = !DILocation(line: 2217, column: 58, scope: !1137)
!5602 = !DILocation(line: 2219, column: 5, scope: !1137)
!5603 = !DILocation(line: 2219, column: 26, scope: !1137)
!5604 = !DILocation(line: 2219, column: 48, scope: !1137)
!5605 = !DILocation(line: 2219, column: 31, scope: !1137)
!5606 = !DILocation(line: 2220, column: 5, scope: !1137)
!5607 = !DILocation(line: 2220, column: 22, scope: !1137)
!5608 = !DILocation(line: 2220, column: 30, scope: !1137)
!5609 = !DILocation(line: 2220, column: 34, scope: !1137)
!5610 = !DILocation(line: 2220, column: 40, scope: !1137)
!5611 = !DILocation(line: 2221, column: 5, scope: !1137)
!5612 = !DILocation(line: 2221, column: 20, scope: !1137)
!5613 = !DILocation(line: 2227, column: 5, scope: !1137)
!5614 = !DILocation(line: 2227, column: 11, scope: !1137)
!5615 = !DILocation(line: 2229, column: 29, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !1137, file: !376, line: 2229, column: 9)
!5617 = !DILocation(line: 2229, column: 34, scope: !5616)
!5618 = !DILocation(line: 2229, column: 61, scope: !5616)
!5619 = !DILocation(line: 2229, column: 66, scope: !5616)
!5620 = !DILocation(line: 2229, column: 39, scope: !5616)
!5621 = !DILocation(line: 2229, column: 9, scope: !1137)
!5622 = !DILocation(line: 2230, column: 17, scope: !5616)
!5623 = !DILocation(line: 2230, column: 21, scope: !5616)
!5624 = !DILocation(line: 2230, column: 15, scope: !5616)
!5625 = !DILocation(line: 2230, column: 9, scope: !5616)
!5626 = !DILocation(line: 2231, column: 29, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5616, file: !376, line: 2231, column: 14)
!5628 = !DILocation(line: 2231, column: 35, scope: !5627)
!5629 = !DILocation(line: 2231, column: 42, scope: !5627)
!5630 = !DILocation(line: 2231, column: 51, scope: !5627)
!5631 = !DILocation(line: 2231, column: 69, scope: !5627)
!5632 = !DILocation(line: 2231, column: 92, scope: !5633)
!5633 = !DILexicalBlockFile(scope: !5627, file: !376, discriminator: 1)
!5634 = !DILocation(line: 2231, column: 98, scope: !5627)
!5635 = !DILocation(line: 2231, column: 75, scope: !5627)
!5636 = !DILocation(line: 2231, column: 104, scope: !5627)
!5637 = !DILocation(line: 2231, column: 131, scope: !5627)
!5638 = !DILocation(line: 2231, column: 137, scope: !5627)
!5639 = !DILocation(line: 2231, column: 114, scope: !5627)
!5640 = !DILocation(line: 2231, column: 143, scope: !5627)
!5641 = !DILocation(line: 2231, column: 109, scope: !5627)
!5642 = !DILocation(line: 2231, column: 14, scope: !5616)
!5643 = !DILocation(line: 2233, column: 35, scope: !5627)
!5644 = !DILocation(line: 2233, column: 41, scope: !5627)
!5645 = !DILocation(line: 2233, column: 18, scope: !5627)
!5646 = !DILocation(line: 2233, column: 47, scope: !5627)
!5647 = !DILocation(line: 2233, column: 15, scope: !5627)
!5648 = !DILocation(line: 2233, column: 9, scope: !5627)
!5649 = !DILocation(line: 2235, column: 25, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5627, file: !376, line: 2234, column: 10)
!5651 = !DILocation(line: 2235, column: 9, scope: !5650)
!5652 = !DILocation(line: 2238, column: 10, scope: !5650)
!5653 = !DILocation(line: 2241, column: 13, scope: !1137)
!5654 = !DILocation(line: 2241, column: 12, scope: !1137)
!5655 = !DILocation(line: 2242, column: 23, scope: !1137)
!5656 = !DILocation(line: 2242, column: 32, scope: !1137)
!5657 = !DILocation(line: 2242, column: 39, scope: !1137)
!5658 = !DILocation(line: 2242, column: 9, scope: !1137)
!5659 = !DILocation(line: 2242, column: 7, scope: !1137)
!5660 = !DILocation(line: 2243, column: 9, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !1137, file: !376, line: 2243, column: 9)
!5662 = !DILocation(line: 2243, column: 11, scope: !5661)
!5663 = !DILocation(line: 2243, column: 9, scope: !1137)
!5664 = !DILocation(line: 2244, column: 20, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5661, file: !376, line: 2243, column: 26)
!5666 = !DILocation(line: 2244, column: 9, scope: !5665)
!5667 = !DILocation(line: 2245, column: 9, scope: !5665)
!5668 = !DILocation(line: 2246, column: 17, scope: !5665)
!5669 = !DILocation(line: 2247, column: 9, scope: !5665)
!5670 = !DILocation(line: 2250, column: 19, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5661, file: !376, line: 2249, column: 10)
!5672 = !DILocation(line: 2250, column: 17, scope: !5671)
!5673 = !DILocation(line: 2253, column: 12, scope: !1137)
!5674 = !DILocation(line: 2253, column: 21, scope: !1137)
!5675 = !DILocation(line: 2253, column: 28, scope: !1137)
!5676 = !DILocation(line: 2253, column: 34, scope: !1137)
!5677 = !DILocation(line: 2253, column: 41, scope: !1137)
!5678 = !DILocation(line: 2253, column: 5, scope: !1137)
!5679 = !DILocation(line: 2254, column: 16, scope: !1137)
!5680 = !DILocation(line: 2254, column: 35, scope: !1137)
!5681 = !DILocation(line: 2254, column: 41, scope: !1137)
!5682 = !DILocation(line: 2254, column: 47, scope: !1137)
!5683 = !DILocation(line: 2254, column: 54, scope: !1137)
!5684 = !DILocation(line: 2254, column: 45, scope: !1137)
!5685 = !DILocation(line: 2254, column: 24, scope: !1137)
!5686 = !DILocation(line: 2254, column: 14, scope: !1137)
!5687 = !DILocation(line: 2256, column: 9, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !1137, file: !376, line: 2256, column: 9)
!5689 = !DILocation(line: 2256, column: 15, scope: !5688)
!5690 = !DILocation(line: 2256, column: 9, scope: !1137)
!5691 = !DILocation(line: 2257, column: 20, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !376, line: 2257, column: 13)
!5693 = distinct !DILexicalBlock(scope: !5688, file: !376, line: 2256, column: 23)
!5694 = !DILocation(line: 2257, column: 26, scope: !5692)
!5695 = !DILocation(line: 2257, column: 13, scope: !5692)
!5696 = !DILocation(line: 2257, column: 34, scope: !5692)
!5697 = !DILocation(line: 2257, column: 13, scope: !5693)
!5698 = !DILocation(line: 2258, column: 26, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5692, file: !376, line: 2257, column: 46)
!5700 = !DILocation(line: 2258, column: 13, scope: !5699)
!5701 = !DILocation(line: 2261, column: 17, scope: !5699)
!5702 = !DILocation(line: 2263, column: 24, scope: !5693)
!5703 = !DILocation(line: 2263, column: 30, scope: !5693)
!5704 = !DILocation(line: 2263, column: 9, scope: !5693)
!5705 = !DILocation(line: 2264, column: 21, scope: !5693)
!5706 = !DILocation(line: 2265, column: 5, scope: !5693)
!5707 = !DILocation(line: 2266, column: 9, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !1137, file: !376, line: 2266, column: 9)
!5709 = !DILocation(line: 2266, column: 15, scope: !5708)
!5710 = !DILocation(line: 2266, column: 20, scope: !5708)
!5711 = !DILocation(line: 2266, column: 9, scope: !1137)
!5712 = !DILocation(line: 2267, column: 22, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5708, file: !376, line: 2266, column: 32)
!5714 = !DILocation(line: 2267, column: 9, scope: !5713)
!5715 = !DILocation(line: 2269, column: 13, scope: !5713)
!5716 = !DILocation(line: 2271, column: 9, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !1137, file: !376, line: 2271, column: 9)
!5718 = !DILocation(line: 2271, column: 15, scope: !5717)
!5719 = !DILocation(line: 2271, column: 9, scope: !1137)
!5720 = !DILocation(line: 2272, column: 23, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5717, file: !376, line: 2271, column: 22)
!5722 = !DILocation(line: 2272, column: 29, scope: !5721)
!5723 = !DILocation(line: 2272, column: 9, scope: !5721)
!5724 = !DILocation(line: 2272, column: 36, scope: !5721)
!5725 = !DILocation(line: 2272, column: 42, scope: !5721)
!5726 = !DILocation(line: 2272, column: 47, scope: !5721)
!5727 = !DILocation(line: 2273, column: 20, scope: !5721)
!5728 = !DILocation(line: 2274, column: 5, scope: !5721)
!5729 = !DILocation(line: 2275, column: 9, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !1137, file: !376, line: 2275, column: 9)
!5731 = !DILocation(line: 2275, column: 15, scope: !5730)
!5732 = !DILocation(line: 2275, column: 9, scope: !1137)
!5733 = !DILocation(line: 2276, column: 25, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !376, line: 2275, column: 24)
!5735 = !DILocation(line: 2276, column: 31, scope: !5734)
!5736 = !DILocation(line: 2276, column: 9, scope: !5734)
!5737 = !DILocation(line: 2276, column: 40, scope: !5734)
!5738 = !DILocation(line: 2276, column: 46, scope: !5734)
!5739 = !DILocation(line: 2276, column: 51, scope: !5734)
!5740 = !DILocation(line: 2277, column: 22, scope: !5734)
!5741 = !DILocation(line: 2278, column: 5, scope: !5734)
!5742 = !DILocation(line: 2279, column: 9, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !1137, file: !376, line: 2279, column: 9)
!5744 = !DILocation(line: 2279, column: 15, scope: !5743)
!5745 = !DILocation(line: 2279, column: 9, scope: !1137)
!5746 = !DILocation(line: 2280, column: 28, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !376, line: 2279, column: 27)
!5748 = !DILocation(line: 2280, column: 34, scope: !5747)
!5749 = !DILocation(line: 2280, column: 9, scope: !5747)
!5750 = !DILocation(line: 2280, column: 46, scope: !5747)
!5751 = !DILocation(line: 2280, column: 52, scope: !5747)
!5752 = !DILocation(line: 2280, column: 57, scope: !5747)
!5753 = !DILocation(line: 2281, column: 25, scope: !5747)
!5754 = !DILocation(line: 2282, column: 5, scope: !5747)
!5755 = !DILocation(line: 2284, column: 12, scope: !1137)
!5756 = !DILocation(line: 2284, column: 5, scope: !1137)
!5757 = !DILocation(line: 2285, column: 1, scope: !1137)
!5758 = !DILocation(line: 658, column: 32, scope: !858)
!5759 = !DILocation(line: 660, column: 5, scope: !858)
!5760 = !DILocation(line: 660, column: 15, scope: !858)
!5761 = !DILocation(line: 660, column: 40, scope: !858)
!5762 = !DILocation(line: 661, column: 5, scope: !858)
!5763 = !DILocation(line: 661, column: 15, scope: !858)
!5764 = !DILocation(line: 661, column: 34, scope: !858)
!5765 = !DILocation(line: 662, column: 5, scope: !858)
!5766 = !DILocation(line: 662, column: 16, scope: !858)
!5767 = !DILocation(line: 662, column: 24, scope: !858)
!5768 = !DILocation(line: 662, column: 28, scope: !858)
!5769 = !DILocation(line: 662, column: 34, scope: !858)
!5770 = !DILocation(line: 663, column: 5, scope: !858)
!5771 = !DILocation(line: 663, column: 17, scope: !858)
!5772 = !DILocation(line: 663, column: 25, scope: !858)
!5773 = !DILocation(line: 663, column: 31, scope: !858)
!5774 = !DILocation(line: 664, column: 5, scope: !858)
!5775 = !DILocation(line: 664, column: 17, scope: !858)
!5776 = !DILocation(line: 664, column: 27, scope: !858)
!5777 = !DILocation(line: 664, column: 33, scope: !858)
!5778 = !DILocation(line: 665, column: 5, scope: !858)
!5779 = !DILocation(line: 665, column: 16, scope: !858)
!5780 = !DILocation(line: 666, column: 5, scope: !858)
!5781 = !DILocation(line: 666, column: 16, scope: !858)
!5782 = !DILocation(line: 667, column: 5, scope: !858)
!5783 = !DILocation(line: 667, column: 11, scope: !858)
!5784 = !DILocation(line: 668, column: 5, scope: !858)
!5785 = !DILocation(line: 668, column: 15, scope: !858)
!5786 = !DILocation(line: 669, column: 5, scope: !858)
!5787 = !DILocation(line: 669, column: 11, scope: !858)
!5788 = !DILocation(line: 669, column: 17, scope: !858)
!5789 = !DILocation(line: 669, column: 23, scope: !858)
!5790 = !DILocation(line: 671, column: 13, scope: !858)
!5791 = !DILocation(line: 671, column: 17, scope: !858)
!5792 = !DILocation(line: 671, column: 23, scope: !858)
!5793 = !DILocation(line: 671, column: 10, scope: !858)
!5794 = !DILocation(line: 673, column: 9, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !858, file: !376, line: 673, column: 9)
!5796 = !DILocation(line: 673, column: 13, scope: !5795)
!5797 = !DILocation(line: 673, column: 9, scope: !858)
!5798 = !DILocation(line: 674, column: 25, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5795, file: !376, line: 673, column: 28)
!5800 = !DILocation(line: 674, column: 9, scope: !5799)
!5801 = !DILocation(line: 677, column: 9, scope: !5799)
!5802 = !DILocation(line: 679, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !858, file: !376, line: 679, column: 9)
!5804 = !DILocation(line: 679, column: 15, scope: !5803)
!5805 = !DILocation(line: 679, column: 9, scope: !858)
!5806 = !DILocation(line: 683, column: 17, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !376, line: 679, column: 30)
!5808 = !DILocation(line: 683, column: 15, scope: !5807)
!5809 = !DILocation(line: 684, column: 20, scope: !5807)
!5810 = !DILocation(line: 684, column: 26, scope: !5807)
!5811 = !DILocation(line: 684, column: 9, scope: !5807)
!5812 = !DILocation(line: 684, column: 18, scope: !5807)
!5813 = !DILocation(line: 685, column: 19, scope: !5807)
!5814 = !DILocation(line: 685, column: 17, scope: !5807)
!5815 = !DILocation(line: 686, column: 22, scope: !5807)
!5816 = !DILocation(line: 686, column: 28, scope: !5807)
!5817 = !DILocation(line: 686, column: 9, scope: !5807)
!5818 = !DILocation(line: 686, column: 20, scope: !5807)
!5819 = !DILocation(line: 687, column: 5, scope: !5807)
!5820 = !DILocation(line: 688, column: 14, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5803, file: !376, line: 688, column: 14)
!5822 = !DILocation(line: 688, column: 22, scope: !5821)
!5823 = !DILocation(line: 688, column: 14, scope: !5803)
!5824 = !DILocation(line: 690, column: 38, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5821, file: !376, line: 688, column: 37)
!5826 = !DILocation(line: 690, column: 42, scope: !5825)
!5827 = !DILocation(line: 690, column: 19, scope: !5825)
!5828 = !DILocation(line: 690, column: 17, scope: !5825)
!5829 = !DILocation(line: 691, column: 13, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5825, file: !376, line: 691, column: 13)
!5831 = !DILocation(line: 691, column: 21, scope: !5830)
!5832 = !DILocation(line: 691, column: 13, scope: !5825)
!5833 = !DILocation(line: 692, column: 13, scope: !5830)
!5834 = !DILocation(line: 693, column: 5, scope: !5825)
!5835 = !DILocation(line: 695, column: 35, scope: !858)
!5836 = !DILocation(line: 695, column: 14, scope: !858)
!5837 = !DILocation(line: 695, column: 12, scope: !858)
!5838 = !DILocation(line: 696, column: 9, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !858, file: !376, line: 696, column: 9)
!5840 = !DILocation(line: 696, column: 16, scope: !5839)
!5841 = !DILocation(line: 696, column: 9, scope: !858)
!5842 = !DILocation(line: 697, column: 9, scope: !5839)
!5843 = !DILocation(line: 699, column: 46, scope: !858)
!5844 = !DILocation(line: 699, column: 54, scope: !858)
!5845 = !DILocation(line: 699, column: 17, scope: !858)
!5846 = !DILocation(line: 699, column: 15, scope: !858)
!5847 = !DILocation(line: 700, column: 5, scope: !858)
!5848 = !DILocation(line: 700, column: 10, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !877, file: !376, discriminator: 1)
!5850 = !DILocation(line: 700, column: 20, scope: !877)
!5851 = !DILocation(line: 700, column: 50, scope: !877)
!5852 = !DILocation(line: 700, column: 67, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !877, file: !376, line: 700, column: 64)
!5854 = !DILocation(line: 700, column: 84, scope: !5853)
!5855 = !DILocation(line: 700, column: 64, scope: !5853)
!5856 = !DILocation(line: 700, column: 94, scope: !5853)
!5857 = !DILocation(line: 700, column: 64, scope: !877)
!5858 = !DILocation(line: 700, column: 64, scope: !5859)
!5859 = !DILexicalBlockFile(scope: !877, file: !376, discriminator: 2)
!5860 = !DILocation(line: 700, column: 125, scope: !5861)
!5861 = !DILexicalBlockFile(scope: !5853, file: !376, discriminator: 3)
!5862 = !DILocation(line: 700, column: 143, scope: !5853)
!5863 = !DILocation(line: 700, column: 153, scope: !5853)
!5864 = !DILocation(line: 700, column: 178, scope: !5853)
!5865 = !DILocation(line: 700, column: 109, scope: !5853)
!5866 = !DILocation(line: 700, column: 197, scope: !5867)
!5867 = !DILexicalBlockFile(scope: !858, file: !376, discriminator: 4)
!5868 = !DILocation(line: 700, column: 197, scope: !877)
!5869 = !DILocation(line: 700, column: 197, scope: !5870)
!5870 = !DILexicalBlockFile(scope: !877, file: !376, discriminator: 5)
!5871 = !DILocation(line: 701, column: 9, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !858, file: !376, line: 701, column: 9)
!5873 = !DILocation(line: 701, column: 19, scope: !5872)
!5874 = !DILocation(line: 701, column: 9, scope: !858)
!5875 = !DILocation(line: 702, column: 9, scope: !5872)
!5876 = !DILocation(line: 704, column: 42, scope: !858)
!5877 = !DILocation(line: 704, column: 19, scope: !858)
!5878 = !DILocation(line: 704, column: 17, scope: !858)
!5879 = !DILocation(line: 705, column: 9, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !858, file: !376, line: 705, column: 9)
!5881 = !DILocation(line: 705, column: 21, scope: !5880)
!5882 = !DILocation(line: 705, column: 9, scope: !858)
!5883 = !DILocation(line: 706, column: 9, scope: !5880)
!5884 = !DILocation(line: 708, column: 25, scope: !858)
!5885 = !DILocation(line: 708, column: 31, scope: !858)
!5886 = !DILocation(line: 708, column: 12, scope: !858)
!5887 = !DILocation(line: 708, column: 10, scope: !858)
!5888 = !DILocation(line: 709, column: 9, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !858, file: !376, line: 709, column: 9)
!5890 = !DILocation(line: 709, column: 14, scope: !5889)
!5891 = !DILocation(line: 709, column: 9, scope: !858)
!5892 = !DILocation(line: 710, column: 9, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5889, file: !376, line: 709, column: 29)
!5894 = !DILocation(line: 711, column: 9, scope: !5893)
!5895 = !DILocation(line: 714, column: 37, scope: !858)
!5896 = !DILocation(line: 714, column: 43, scope: !858)
!5897 = !DILocation(line: 714, column: 49, scope: !858)
!5898 = !DILocation(line: 714, column: 13, scope: !858)
!5899 = !DILocation(line: 714, column: 11, scope: !858)
!5900 = !DILocation(line: 715, column: 9, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !858, file: !376, line: 715, column: 9)
!5902 = !DILocation(line: 715, column: 15, scope: !5901)
!5903 = !DILocation(line: 715, column: 9, scope: !858)
!5904 = !DILocation(line: 716, column: 9, scope: !5901)
!5905 = !DILocation(line: 718, column: 22, scope: !858)
!5906 = !DILocation(line: 718, column: 35, scope: !858)
!5907 = !DILocation(line: 718, column: 41, scope: !858)
!5908 = !DILocation(line: 718, column: 46, scope: !858)
!5909 = !DILocation(line: 718, column: 53, scope: !858)
!5910 = !DILocation(line: 719, column: 22, scope: !858)
!5911 = !DILocation(line: 719, column: 29, scope: !858)
!5912 = !DILocation(line: 719, column: 38, scope: !858)
!5913 = !DILocation(line: 719, column: 44, scope: !858)
!5914 = !DILocation(line: 720, column: 22, scope: !858)
!5915 = !DILocation(line: 720, column: 28, scope: !858)
!5916 = !DILocation(line: 720, column: 34, scope: !858)
!5917 = !DILocation(line: 720, column: 40, scope: !858)
!5918 = !DILocation(line: 718, column: 11, scope: !858)
!5919 = !DILocation(line: 718, column: 9, scope: !858)
!5920 = !DILocation(line: 718, column: 5, scope: !858)
!5921 = !DILocation(line: 723, column: 5, scope: !858)
!5922 = !DILocation(line: 723, column: 10, scope: !5923)
!5923 = !DILexicalBlockFile(scope: !879, file: !376, discriminator: 1)
!5924 = !DILocation(line: 723, column: 20, scope: !879)
!5925 = !DILocation(line: 723, column: 51, scope: !879)
!5926 = !DILocation(line: 723, column: 63, scope: !882)
!5927 = !DILocation(line: 723, column: 79, scope: !882)
!5928 = !DILocation(line: 723, column: 63, scope: !879)
!5929 = !DILocation(line: 723, column: 94, scope: !5930)
!5930 = !DILexicalBlockFile(scope: !882, file: !376, discriminator: 2)
!5931 = !DILocation(line: 723, column: 99, scope: !5932)
!5932 = !DILexicalBlockFile(scope: !881, file: !376, discriminator: 4)
!5933 = !DILocation(line: 723, column: 109, scope: !881)
!5934 = !DILocation(line: 723, column: 139, scope: !881)
!5935 = !DILocation(line: 723, column: 165, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !881, file: !376, line: 723, column: 162)
!5937 = !DILocation(line: 723, column: 182, scope: !5936)
!5938 = !DILocation(line: 723, column: 162, scope: !5936)
!5939 = !DILocation(line: 723, column: 192, scope: !5936)
!5940 = !DILocation(line: 723, column: 162, scope: !881)
!5941 = !DILocation(line: 723, column: 162, scope: !5942)
!5942 = !DILexicalBlockFile(scope: !881, file: !376, discriminator: 5)
!5943 = !DILocation(line: 723, column: 223, scope: !5944)
!5944 = !DILexicalBlockFile(scope: !5936, file: !376, discriminator: 6)
!5945 = !DILocation(line: 723, column: 241, scope: !5936)
!5946 = !DILocation(line: 723, column: 251, scope: !5936)
!5947 = !DILocation(line: 723, column: 276, scope: !5936)
!5948 = !DILocation(line: 723, column: 207, scope: !5936)
!5949 = !DILocation(line: 723, column: 295, scope: !5950)
!5950 = !DILexicalBlockFile(scope: !882, file: !376, discriminator: 7)
!5951 = !DILocation(line: 723, column: 295, scope: !881)
!5952 = !DILocation(line: 723, column: 295, scope: !5953)
!5953 = !DILexicalBlockFile(scope: !881, file: !376, discriminator: 8)
!5954 = !DILocation(line: 723, column: 295, scope: !5955)
!5955 = !DILexicalBlockFile(scope: !881, file: !376, discriminator: 9)
!5956 = !DILocation(line: 723, column: 308, scope: !5957)
!5957 = !DILexicalBlockFile(scope: !5958, file: !376, discriminator: 10)
!5958 = !DILexicalBlockFile(scope: !858, file: !376, discriminator: 3)
!5959 = !DILocation(line: 723, column: 308, scope: !879)
!5960 = !DILocation(line: 723, column: 308, scope: !5961)
!5961 = !DILexicalBlockFile(scope: !879, file: !376, discriminator: 11)
!5962 = !DILocation(line: 724, column: 5, scope: !858)
!5963 = !DILocation(line: 724, column: 14, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !5965, file: !376, discriminator: 1)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !376, line: 724, column: 14)
!5966 = distinct !DILexicalBlock(scope: !858, file: !376, line: 724, column: 8)
!5967 = !DILocation(line: 724, column: 14, scope: !5966)
!5968 = !DILocation(line: 724, column: 31, scope: !5969)
!5969 = !DILexicalBlockFile(scope: !5965, file: !376, discriminator: 2)
!5970 = !DILocation(line: 724, column: 20, scope: !5965)
!5971 = !DILocation(line: 724, column: 38, scope: !5972)
!5972 = !DILexicalBlockFile(scope: !5973, file: !376, discriminator: 4)
!5973 = !DILexicalBlockFile(scope: !5966, file: !376, discriminator: 3)
!5974 = !DILocation(line: 724, column: 38, scope: !5975)
!5975 = !DILexicalBlockFile(scope: !5966, file: !376, discriminator: 5)
!5976 = !DILocation(line: 725, column: 5, scope: !858)
!5977 = !DILocation(line: 725, column: 10, scope: !5978)
!5978 = !DILexicalBlockFile(scope: !884, file: !376, discriminator: 1)
!5979 = !DILocation(line: 725, column: 20, scope: !884)
!5980 = !DILocation(line: 725, column: 51, scope: !884)
!5981 = !DILocation(line: 725, column: 69, scope: !887)
!5982 = !DILocation(line: 725, column: 85, scope: !887)
!5983 = !DILocation(line: 725, column: 69, scope: !884)
!5984 = !DILocation(line: 725, column: 100, scope: !5985)
!5985 = !DILexicalBlockFile(scope: !887, file: !376, discriminator: 2)
!5986 = !DILocation(line: 725, column: 105, scope: !5987)
!5987 = !DILexicalBlockFile(scope: !886, file: !376, discriminator: 4)
!5988 = !DILocation(line: 725, column: 115, scope: !886)
!5989 = !DILocation(line: 725, column: 145, scope: !886)
!5990 = !DILocation(line: 725, column: 171, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !886, file: !376, line: 725, column: 168)
!5992 = !DILocation(line: 725, column: 188, scope: !5991)
!5993 = !DILocation(line: 725, column: 168, scope: !5991)
!5994 = !DILocation(line: 725, column: 198, scope: !5991)
!5995 = !DILocation(line: 725, column: 168, scope: !886)
!5996 = !DILocation(line: 725, column: 168, scope: !5997)
!5997 = !DILexicalBlockFile(scope: !886, file: !376, discriminator: 5)
!5998 = !DILocation(line: 725, column: 229, scope: !5999)
!5999 = !DILexicalBlockFile(scope: !5991, file: !376, discriminator: 6)
!6000 = !DILocation(line: 725, column: 247, scope: !5991)
!6001 = !DILocation(line: 725, column: 257, scope: !5991)
!6002 = !DILocation(line: 725, column: 282, scope: !5991)
!6003 = !DILocation(line: 725, column: 213, scope: !5991)
!6004 = !DILocation(line: 725, column: 301, scope: !6005)
!6005 = !DILexicalBlockFile(scope: !887, file: !376, discriminator: 7)
!6006 = !DILocation(line: 725, column: 301, scope: !886)
!6007 = !DILocation(line: 725, column: 301, scope: !6008)
!6008 = !DILexicalBlockFile(scope: !886, file: !376, discriminator: 8)
!6009 = !DILocation(line: 725, column: 301, scope: !6010)
!6010 = !DILexicalBlockFile(scope: !886, file: !376, discriminator: 9)
!6011 = !DILocation(line: 725, column: 314, scope: !5957)
!6012 = !DILocation(line: 725, column: 314, scope: !884)
!6013 = !DILocation(line: 725, column: 314, scope: !6014)
!6014 = !DILexicalBlockFile(scope: !884, file: !376, discriminator: 11)
!6015 = !DILocation(line: 726, column: 5, scope: !858)
!6016 = !DILocation(line: 726, column: 10, scope: !6017)
!6017 = !DILexicalBlockFile(scope: !889, file: !376, discriminator: 1)
!6018 = !DILocation(line: 726, column: 20, scope: !889)
!6019 = !DILocation(line: 726, column: 51, scope: !889)
!6020 = !DILocation(line: 726, column: 67, scope: !892)
!6021 = !DILocation(line: 726, column: 83, scope: !892)
!6022 = !DILocation(line: 726, column: 67, scope: !889)
!6023 = !DILocation(line: 726, column: 98, scope: !6024)
!6024 = !DILexicalBlockFile(scope: !892, file: !376, discriminator: 2)
!6025 = !DILocation(line: 726, column: 103, scope: !6026)
!6026 = !DILexicalBlockFile(scope: !891, file: !376, discriminator: 4)
!6027 = !DILocation(line: 726, column: 113, scope: !891)
!6028 = !DILocation(line: 726, column: 143, scope: !891)
!6029 = !DILocation(line: 726, column: 169, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !891, file: !376, line: 726, column: 166)
!6031 = !DILocation(line: 726, column: 186, scope: !6030)
!6032 = !DILocation(line: 726, column: 166, scope: !6030)
!6033 = !DILocation(line: 726, column: 196, scope: !6030)
!6034 = !DILocation(line: 726, column: 166, scope: !891)
!6035 = !DILocation(line: 726, column: 166, scope: !6036)
!6036 = !DILexicalBlockFile(scope: !891, file: !376, discriminator: 5)
!6037 = !DILocation(line: 726, column: 227, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !6030, file: !376, discriminator: 6)
!6039 = !DILocation(line: 726, column: 245, scope: !6030)
!6040 = !DILocation(line: 726, column: 255, scope: !6030)
!6041 = !DILocation(line: 726, column: 280, scope: !6030)
!6042 = !DILocation(line: 726, column: 211, scope: !6030)
!6043 = !DILocation(line: 726, column: 299, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !892, file: !376, discriminator: 7)
!6045 = !DILocation(line: 726, column: 299, scope: !891)
!6046 = !DILocation(line: 726, column: 299, scope: !6047)
!6047 = !DILexicalBlockFile(scope: !891, file: !376, discriminator: 8)
!6048 = !DILocation(line: 726, column: 299, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !891, file: !376, discriminator: 9)
!6050 = !DILocation(line: 726, column: 312, scope: !5957)
!6051 = !DILocation(line: 726, column: 312, scope: !889)
!6052 = !DILocation(line: 726, column: 312, scope: !6053)
!6053 = !DILexicalBlockFile(scope: !889, file: !376, discriminator: 11)
!6054 = !DILocation(line: 727, column: 9, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !858, file: !376, line: 727, column: 9)
!6056 = !DILocation(line: 727, column: 20, scope: !6055)
!6057 = !DILocation(line: 727, column: 26, scope: !6055)
!6058 = !DILocation(line: 727, column: 17, scope: !6055)
!6059 = !DILocation(line: 727, column: 34, scope: !6055)
!6060 = !DILocation(line: 727, column: 37, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !6055, file: !376, discriminator: 1)
!6062 = !DILocation(line: 727, column: 48, scope: !6055)
!6063 = !DILocation(line: 727, column: 45, scope: !6055)
!6064 = !DILocation(line: 727, column: 9, scope: !858)
!6065 = !DILocation(line: 728, column: 9, scope: !6055)
!6066 = !DILocation(line: 728, column: 18, scope: !6067)
!6067 = !DILexicalBlockFile(scope: !6068, file: !376, discriminator: 1)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !376, line: 728, column: 18)
!6069 = distinct !DILexicalBlock(scope: !6055, file: !376, line: 728, column: 12)
!6070 = !DILocation(line: 728, column: 18, scope: !6069)
!6071 = !DILocation(line: 728, column: 38, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !6068, file: !376, discriminator: 2)
!6073 = !DILocation(line: 728, column: 27, scope: !6068)
!6074 = !DILocation(line: 728, column: 48, scope: !6075)
!6075 = !DILexicalBlockFile(scope: !6076, file: !376, discriminator: 4)
!6076 = !DILexicalBlockFile(scope: !6069, file: !376, discriminator: 3)
!6077 = !DILocation(line: 728, column: 48, scope: !6078)
!6078 = !DILexicalBlockFile(scope: !6069, file: !376, discriminator: 5)
!6079 = !DILocation(line: 728, column: 48, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !6069, file: !376, discriminator: 6)
!6081 = !DILocation(line: 730, column: 12, scope: !858)
!6082 = !DILocation(line: 730, column: 5, scope: !858)
!6083 = !DILocation(line: 731, column: 1, scope: !858)
!6084 = !DILocation(line: 610, column: 22, scope: !893)
!6085 = !DILocation(line: 610, column: 41, scope: !893)
!6086 = !DILocation(line: 610, column: 56, scope: !893)
!6087 = !DILocation(line: 610, column: 69, scope: !893)
!6088 = !DILocation(line: 611, column: 30, scope: !893)
!6089 = !DILocation(line: 611, column: 55, scope: !893)
!6090 = !DILocation(line: 612, column: 30, scope: !893)
!6091 = !DILocation(line: 612, column: 53, scope: !893)
!6092 = !DILocation(line: 612, column: 70, scope: !893)
!6093 = !DILocation(line: 614, column: 5, scope: !893)
!6094 = !DILocation(line: 614, column: 15, scope: !893)
!6095 = !DILocation(line: 614, column: 21, scope: !893)
!6096 = !DILocation(line: 615, column: 5, scope: !893)
!6097 = !DILocation(line: 615, column: 16, scope: !893)
!6098 = !DILocation(line: 621, column: 9, scope: !913)
!6099 = !DILocation(line: 621, column: 14, scope: !913)
!6100 = !DILocation(line: 621, column: 9, scope: !893)
!6101 = !DILocation(line: 622, column: 16, scope: !912)
!6102 = !DILocation(line: 622, column: 22, scope: !912)
!6103 = !DILocation(line: 622, column: 27, scope: !912)
!6104 = !DILocation(line: 622, column: 9, scope: !912)
!6105 = !DILocation(line: 623, column: 42, scope: !912)
!6106 = !DILocation(line: 623, column: 55, scope: !912)
!6107 = !DILocation(line: 623, column: 13, scope: !912)
!6108 = !DILocation(line: 623, column: 11, scope: !912)
!6109 = !DILocation(line: 624, column: 13, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !912, file: !376, line: 624, column: 13)
!6111 = !DILocation(line: 624, column: 15, scope: !6110)
!6112 = !DILocation(line: 624, column: 13, scope: !912)
!6113 = !DILocation(line: 625, column: 13, scope: !6110)
!6114 = !DILocation(line: 626, column: 30, scope: !911)
!6115 = !DILocation(line: 626, column: 15, scope: !911)
!6116 = !DILocation(line: 626, column: 35, scope: !911)
!6117 = !DILocation(line: 626, column: 44, scope: !911)
!6118 = !DILocation(line: 626, column: 13, scope: !912)
!6119 = !DILocation(line: 627, column: 13, scope: !910)
!6120 = !DILocation(line: 627, column: 23, scope: !910)
!6121 = !DILocation(line: 627, column: 49, scope: !910)
!6122 = !DILocation(line: 627, column: 31, scope: !910)
!6123 = !DILocation(line: 627, column: 54, scope: !910)
!6124 = !DILocation(line: 627, column: 30, scope: !910)
!6125 = !DILocation(line: 628, column: 29, scope: !910)
!6126 = !DILocation(line: 628, column: 36, scope: !910)
!6127 = !DILocation(line: 628, column: 45, scope: !910)
!6128 = !DILocation(line: 629, column: 13, scope: !910)
!6129 = !DILocation(line: 629, column: 18, scope: !6130)
!6130 = !DILexicalBlockFile(scope: !915, file: !376, discriminator: 1)
!6131 = !DILocation(line: 629, column: 28, scope: !915)
!6132 = !DILocation(line: 629, column: 58, scope: !915)
!6133 = !DILocation(line: 629, column: 70, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !915, file: !376, line: 629, column: 67)
!6135 = !DILocation(line: 629, column: 87, scope: !6134)
!6136 = !DILocation(line: 629, column: 67, scope: !6134)
!6137 = !DILocation(line: 629, column: 97, scope: !6134)
!6138 = !DILocation(line: 629, column: 67, scope: !915)
!6139 = !DILocation(line: 629, column: 67, scope: !6140)
!6140 = !DILexicalBlockFile(scope: !915, file: !376, discriminator: 2)
!6141 = !DILocation(line: 629, column: 128, scope: !6142)
!6142 = !DILexicalBlockFile(scope: !6134, file: !376, discriminator: 3)
!6143 = !DILocation(line: 629, column: 146, scope: !6134)
!6144 = !DILocation(line: 629, column: 156, scope: !6134)
!6145 = !DILocation(line: 629, column: 181, scope: !6134)
!6146 = !DILocation(line: 629, column: 112, scope: !6134)
!6147 = !DILocation(line: 629, column: 200, scope: !6148)
!6148 = !DILexicalBlockFile(scope: !910, file: !376, discriminator: 4)
!6149 = !DILocation(line: 629, column: 200, scope: !915)
!6150 = !DILocation(line: 629, column: 200, scope: !6151)
!6151 = !DILexicalBlockFile(scope: !915, file: !376, discriminator: 5)
!6152 = !DILocation(line: 630, column: 20, scope: !910)
!6153 = !DILocation(line: 630, column: 13, scope: !910)
!6154 = !DILocation(line: 631, column: 9, scope: !911)
!6155 = !DILocation(line: 632, column: 16, scope: !912)
!6156 = !DILocation(line: 632, column: 9, scope: !912)
!6157 = !DILocation(line: 635, column: 22, scope: !893)
!6158 = !DILocation(line: 635, column: 11, scope: !893)
!6159 = !DILocation(line: 635, column: 9, scope: !893)
!6160 = !DILocation(line: 636, column: 9, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !893, file: !376, line: 636, column: 9)
!6162 = !DILocation(line: 636, column: 13, scope: !6161)
!6163 = !DILocation(line: 636, column: 9, scope: !893)
!6164 = !DILocation(line: 637, column: 9, scope: !6161)
!6165 = !DILocation(line: 639, column: 12, scope: !919)
!6166 = !DILocation(line: 639, column: 10, scope: !919)
!6167 = !DILocation(line: 639, column: 17, scope: !6168)
!6168 = !DILexicalBlockFile(scope: !6169, file: !376, discriminator: 2)
!6169 = !DILexicalBlockFile(scope: !918, file: !376, discriminator: 1)
!6170 = !DILocation(line: 639, column: 21, scope: !918)
!6171 = !DILocation(line: 639, column: 19, scope: !918)
!6172 = !DILocation(line: 639, column: 5, scope: !919)
!6173 = !DILocation(line: 640, column: 9, scope: !917)
!6174 = !DILocation(line: 640, column: 15, scope: !917)
!6175 = !DILocation(line: 640, column: 27, scope: !917)
!6176 = !DILocation(line: 640, column: 38, scope: !917)
!6177 = !DILocation(line: 640, column: 41, scope: !6178)
!6178 = !DILexicalBlockFile(scope: !917, file: !376, discriminator: 1)
!6179 = !DILocation(line: 640, column: 55, scope: !917)
!6180 = !DILocation(line: 640, column: 26, scope: !917)
!6181 = !DILocation(line: 640, column: 73, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !917, file: !376, discriminator: 3)
!6183 = !DILocation(line: 640, column: 65, scope: !917)
!6184 = !DILocation(line: 640, column: 63, scope: !917)
!6185 = !DILocation(line: 640, column: 80, scope: !917)
!6186 = !DILocation(line: 640, column: 78, scope: !917)
!6187 = !DILocation(line: 640, column: 96, scope: !6188)
!6188 = !DILexicalBlockFile(scope: !6189, file: !376, discriminator: 4)
!6189 = !DILexicalBlockFile(scope: !917, file: !376, discriminator: 2)
!6190 = !DILocation(line: 640, column: 15, scope: !6191)
!6191 = !DILexicalBlockFile(scope: !6192, file: !376, discriminator: 6)
!6192 = !DILexicalBlockFile(scope: !917, file: !376, discriminator: 5)
!6193 = !DILocation(line: 642, column: 24, scope: !917)
!6194 = !DILocation(line: 642, column: 37, scope: !917)
!6195 = !DILocation(line: 642, column: 46, scope: !917)
!6196 = !DILocation(line: 642, column: 53, scope: !917)
!6197 = !DILocation(line: 643, column: 24, scope: !917)
!6198 = !DILocation(line: 643, column: 29, scope: !917)
!6199 = !DILocation(line: 643, column: 33, scope: !917)
!6200 = !DILocation(line: 643, column: 40, scope: !917)
!6201 = !DILocation(line: 643, column: 44, scope: !917)
!6202 = !DILocation(line: 643, column: 57, scope: !6178)
!6203 = !DILocation(line: 643, column: 67, scope: !917)
!6204 = !DILocation(line: 643, column: 44, scope: !6189)
!6205 = !DILocation(line: 644, column: 24, scope: !917)
!6206 = !DILocation(line: 644, column: 28, scope: !917)
!6207 = !DILocation(line: 644, column: 32, scope: !917)
!6208 = !DILocation(line: 642, column: 13, scope: !917)
!6209 = !DILocation(line: 642, column: 11, scope: !917)
!6210 = !DILocation(line: 645, column: 13, scope: !923)
!6211 = !DILocation(line: 645, column: 15, scope: !923)
!6212 = !DILocation(line: 645, column: 13, scope: !917)
!6213 = !DILocation(line: 646, column: 13, scope: !922)
!6214 = !DILocation(line: 646, column: 18, scope: !6215)
!6215 = !DILexicalBlockFile(scope: !921, file: !376, discriminator: 1)
!6216 = !DILocation(line: 646, column: 28, scope: !921)
!6217 = !DILocation(line: 646, column: 58, scope: !921)
!6218 = !DILocation(line: 646, column: 72, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !921, file: !376, line: 646, column: 69)
!6220 = !DILocation(line: 646, column: 89, scope: !6219)
!6221 = !DILocation(line: 646, column: 69, scope: !6219)
!6222 = !DILocation(line: 646, column: 99, scope: !6219)
!6223 = !DILocation(line: 646, column: 69, scope: !921)
!6224 = !DILocation(line: 646, column: 69, scope: !6225)
!6225 = !DILexicalBlockFile(scope: !921, file: !376, discriminator: 2)
!6226 = !DILocation(line: 646, column: 130, scope: !6227)
!6227 = !DILexicalBlockFile(scope: !6219, file: !376, discriminator: 3)
!6228 = !DILocation(line: 646, column: 148, scope: !6219)
!6229 = !DILocation(line: 646, column: 158, scope: !6219)
!6230 = !DILocation(line: 646, column: 183, scope: !6219)
!6231 = !DILocation(line: 646, column: 114, scope: !6219)
!6232 = !DILocation(line: 646, column: 202, scope: !6233)
!6233 = !DILexicalBlockFile(scope: !922, file: !376, discriminator: 4)
!6234 = !DILocation(line: 646, column: 202, scope: !921)
!6235 = !DILocation(line: 646, column: 202, scope: !6236)
!6236 = !DILexicalBlockFile(scope: !921, file: !376, discriminator: 5)
!6237 = !DILocation(line: 647, column: 13, scope: !922)
!6238 = !DILocation(line: 650, column: 49, scope: !917)
!6239 = !DILocation(line: 650, column: 43, scope: !917)
!6240 = !DILocation(line: 650, column: 28, scope: !917)
!6241 = !DILocation(line: 650, column: 11, scope: !917)
!6242 = !DILocation(line: 650, column: 35, scope: !917)
!6243 = !DILocation(line: 650, column: 10, scope: !917)
!6244 = !DILocation(line: 650, column: 46, scope: !917)
!6245 = !DILocation(line: 651, column: 5, scope: !918)
!6246 = !DILocation(line: 651, column: 5, scope: !6169)
!6247 = !DILocation(line: 651, column: 5, scope: !917)
!6248 = !DILocation(line: 639, column: 36, scope: !918)
!6249 = !DILocation(line: 639, column: 34, scope: !918)
!6250 = !DILocation(line: 639, column: 49, scope: !918)
!6251 = !DILocation(line: 639, column: 5, scope: !918)
!6252 = !DILocation(line: 653, column: 12, scope: !893)
!6253 = !DILocation(line: 653, column: 5, scope: !893)
!6254 = !DILocation(line: 654, column: 1, scope: !893)
!6255 = !DILocation(line: 1263, column: 34, scope: !936)
!6256 = !DILocation(line: 1263, column: 48, scope: !936)
!6257 = !DILocation(line: 1264, column: 29, scope: !936)
!6258 = !DILocation(line: 1264, column: 46, scope: !936)
!6259 = !DILocation(line: 1265, column: 30, scope: !936)
!6260 = !DILocation(line: 1265, column: 48, scope: !936)
!6261 = !DILocation(line: 1265, column: 60, scope: !936)
!6262 = !DILocation(line: 1267, column: 5, scope: !936)
!6263 = !DILocation(line: 1267, column: 14, scope: !936)
!6264 = !DILocation(line: 1269, column: 24, scope: !936)
!6265 = !DILocation(line: 1269, column: 31, scope: !936)
!6266 = !DILocation(line: 1269, column: 38, scope: !936)
!6267 = !DILocation(line: 1269, column: 47, scope: !936)
!6268 = !DILocation(line: 1269, column: 55, scope: !936)
!6269 = !DILocation(line: 1269, column: 63, scope: !936)
!6270 = !DILocation(line: 1269, column: 13, scope: !936)
!6271 = !DILocation(line: 1269, column: 11, scope: !936)
!6272 = !DILocation(line: 1270, column: 9, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !936, file: !376, line: 1270, column: 9)
!6274 = !DILocation(line: 1270, column: 15, scope: !6273)
!6275 = !DILocation(line: 1270, column: 9, scope: !936)
!6276 = !DILocation(line: 1271, column: 9, scope: !6273)
!6277 = !DILocation(line: 1273, column: 16, scope: !936)
!6278 = !DILocation(line: 1273, column: 20, scope: !936)
!6279 = !DILocation(line: 1273, column: 5, scope: !936)
!6280 = !DILocation(line: 1274, column: 5, scope: !936)
!6281 = !DILocation(line: 1275, column: 1, scope: !936)
!6282 = !DILocation(line: 1176, column: 22, scope: !948)
!6283 = !DILocation(line: 1176, column: 39, scope: !948)
!6284 = !DILocation(line: 1176, column: 56, scope: !948)
!6285 = !DILocation(line: 1177, column: 23, scope: !948)
!6286 = !DILocation(line: 1177, column: 41, scope: !948)
!6287 = !DILocation(line: 1177, column: 53, scope: !948)
!6288 = !DILocation(line: 1179, column: 5, scope: !948)
!6289 = !DILocation(line: 1179, column: 14, scope: !948)
!6290 = !DILocation(line: 1180, column: 5, scope: !948)
!6291 = !DILocation(line: 1180, column: 16, scope: !948)
!6292 = !DILocation(line: 1181, column: 5, scope: !948)
!6293 = !DILocation(line: 1181, column: 16, scope: !948)
!6294 = !DILocation(line: 1182, column: 5, scope: !948)
!6295 = !DILocation(line: 1182, column: 16, scope: !948)
!6296 = !DILocation(line: 1185, column: 27, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1185, column: 9)
!6298 = !DILocation(line: 1185, column: 36, scope: !6297)
!6299 = !DILocation(line: 1185, column: 47, scope: !6297)
!6300 = !DILocation(line: 1185, column: 56, scope: !6297)
!6301 = !DILocation(line: 1185, column: 73, scope: !6297)
!6302 = !DILocation(line: 1185, column: 79, scope: !6297)
!6303 = !DILocation(line: 1185, column: 100, scope: !6304)
!6304 = !DILexicalBlockFile(scope: !6297, file: !376, discriminator: 1)
!6305 = !DILocation(line: 1185, column: 109, scope: !6297)
!6306 = !DILocation(line: 1185, column: 120, scope: !6297)
!6307 = !DILocation(line: 1185, column: 129, scope: !6297)
!6308 = !DILocation(line: 1185, column: 146, scope: !6297)
!6309 = !DILocation(line: 1185, column: 9, scope: !948)
!6310 = !DILocation(line: 1185, column: 171, scope: !6311)
!6311 = !DILexicalBlockFile(scope: !6312, file: !376, discriminator: 2)
!6312 = distinct !DILexicalBlock(scope: !6297, file: !376, line: 1185, column: 153)
!6313 = !DILocation(line: 1185, column: 155, scope: !6312)
!6314 = !DILocation(line: 1185, column: 227, scope: !6312)
!6315 = !DILocation(line: 1186, column: 30, scope: !948)
!6316 = !DILocation(line: 1186, column: 39, scope: !948)
!6317 = !DILocation(line: 1186, column: 50, scope: !948)
!6318 = !DILocation(line: 1186, column: 59, scope: !948)
!6319 = !DILocation(line: 1186, column: 76, scope: !948)
!6320 = !DILocation(line: 1186, column: 13, scope: !948)
!6321 = !DILocation(line: 1186, column: 101, scope: !6322)
!6322 = !DILexicalBlockFile(scope: !948, file: !376, discriminator: 1)
!6323 = !DILocation(line: 1186, column: 86, scope: !948)
!6324 = !DILocation(line: 1186, column: 110, scope: !948)
!6325 = !DILocation(line: 1186, column: 138, scope: !6326)
!6326 = !DILexicalBlockFile(scope: !948, file: !376, discriminator: 2)
!6327 = !DILocation(line: 1186, column: 123, scope: !948)
!6328 = !DILocation(line: 1186, column: 147, scope: !948)
!6329 = !DILocation(line: 1186, column: 10, scope: !6330)
!6330 = !DILexicalBlockFile(scope: !6331, file: !376, discriminator: 4)
!6331 = !DILexicalBlockFile(scope: !948, file: !376, discriminator: 3)
!6332 = !DILocation(line: 1187, column: 9, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1187, column: 9)
!6334 = !DILocation(line: 1187, column: 14, scope: !6333)
!6335 = !DILocation(line: 1187, column: 9, scope: !948)
!6336 = !DILocation(line: 1188, column: 22, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6333, file: !376, line: 1187, column: 26)
!6338 = !DILocation(line: 1188, column: 9, scope: !6337)
!6339 = !DILocation(line: 1190, column: 9, scope: !6337)
!6340 = !DILocation(line: 1194, column: 9, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1194, column: 9)
!6342 = !DILocation(line: 1194, column: 9, scope: !948)
!6343 = !DILocation(line: 1195, column: 31, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !376, line: 1195, column: 13)
!6345 = distinct !DILexicalBlock(scope: !6341, file: !376, line: 1194, column: 18)
!6346 = !DILocation(line: 1195, column: 42, scope: !6344)
!6347 = !DILocation(line: 1195, column: 53, scope: !6344)
!6348 = !DILocation(line: 1195, column: 62, scope: !6344)
!6349 = !DILocation(line: 1195, column: 79, scope: !6344)
!6350 = !DILocation(line: 1195, column: 85, scope: !6344)
!6351 = !DILocation(line: 1195, column: 106, scope: !6352)
!6352 = !DILexicalBlockFile(scope: !6344, file: !376, discriminator: 1)
!6353 = !DILocation(line: 1195, column: 117, scope: !6344)
!6354 = !DILocation(line: 1195, column: 128, scope: !6344)
!6355 = !DILocation(line: 1195, column: 137, scope: !6344)
!6356 = !DILocation(line: 1195, column: 154, scope: !6344)
!6357 = !DILocation(line: 1195, column: 13, scope: !6345)
!6358 = !DILocation(line: 1195, column: 179, scope: !6359)
!6359 = !DILexicalBlockFile(scope: !6360, file: !376, discriminator: 2)
!6360 = distinct !DILexicalBlock(scope: !6344, file: !376, line: 1195, column: 161)
!6361 = !DILocation(line: 1195, column: 163, scope: !6360)
!6362 = !DILocation(line: 1195, column: 237, scope: !6360)
!6363 = !DILocation(line: 1196, column: 31, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6345, file: !376, line: 1196, column: 13)
!6365 = !DILocation(line: 1196, column: 42, scope: !6364)
!6366 = !DILocation(line: 1196, column: 53, scope: !6364)
!6367 = !DILocation(line: 1196, column: 62, scope: !6364)
!6368 = !DILocation(line: 1196, column: 79, scope: !6364)
!6369 = !DILocation(line: 1196, column: 14, scope: !6364)
!6370 = !DILocation(line: 1196, column: 104, scope: !6371)
!6371 = !DILexicalBlockFile(scope: !6364, file: !376, discriminator: 1)
!6372 = !DILocation(line: 1196, column: 89, scope: !6364)
!6373 = !DILocation(line: 1196, column: 115, scope: !6364)
!6374 = !DILocation(line: 1196, column: 143, scope: !6375)
!6375 = !DILexicalBlockFile(scope: !6364, file: !376, discriminator: 2)
!6376 = !DILocation(line: 1196, column: 128, scope: !6364)
!6377 = !DILocation(line: 1196, column: 154, scope: !6364)
!6378 = !DILocation(line: 1196, column: 164, scope: !6379)
!6379 = !DILexicalBlockFile(scope: !6380, file: !376, discriminator: 4)
!6380 = !DILexicalBlockFile(scope: !6364, file: !376, discriminator: 3)
!6381 = !DILocation(line: 1196, column: 13, scope: !6345)
!6382 = !DILocation(line: 1197, column: 21, scope: !6364)
!6383 = !DILocation(line: 1197, column: 13, scope: !6364)
!6384 = !DILocation(line: 1198, column: 18, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6364, file: !376, line: 1198, column: 18)
!6386 = !DILocation(line: 1198, column: 24, scope: !6385)
!6387 = !DILocation(line: 1198, column: 18, scope: !6364)
!6388 = !DILocation(line: 1199, column: 29, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6385, file: !376, line: 1198, column: 33)
!6390 = !DILocation(line: 1199, column: 13, scope: !6389)
!6391 = !DILocation(line: 1201, column: 13, scope: !6389)
!6392 = !DILocation(line: 1203, column: 36, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6385, file: !376, line: 1203, column: 18)
!6394 = !DILocation(line: 1203, column: 47, scope: !6393)
!6395 = !DILocation(line: 1203, column: 58, scope: !6393)
!6396 = !DILocation(line: 1203, column: 67, scope: !6393)
!6397 = !DILocation(line: 1203, column: 84, scope: !6393)
!6398 = !DILocation(line: 1203, column: 19, scope: !6393)
!6399 = !DILocation(line: 1203, column: 109, scope: !6400)
!6400 = !DILexicalBlockFile(scope: !6393, file: !376, discriminator: 1)
!6401 = !DILocation(line: 1203, column: 94, scope: !6393)
!6402 = !DILocation(line: 1203, column: 120, scope: !6393)
!6403 = !DILocation(line: 1203, column: 148, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !6393, file: !376, discriminator: 2)
!6405 = !DILocation(line: 1203, column: 133, scope: !6393)
!6406 = !DILocation(line: 1203, column: 159, scope: !6393)
!6407 = !DILocation(line: 1203, column: 172, scope: !6408)
!6408 = !DILexicalBlockFile(scope: !6409, file: !376, discriminator: 4)
!6409 = !DILexicalBlockFile(scope: !6393, file: !376, discriminator: 3)
!6410 = !DILocation(line: 1203, column: 169, scope: !6393)
!6411 = !DILocation(line: 1203, column: 18, scope: !6385)
!6412 = !DILocation(line: 1204, column: 29, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6393, file: !376, line: 1203, column: 178)
!6414 = !DILocation(line: 1204, column: 13, scope: !6413)
!6415 = !DILocation(line: 1206, column: 13, scope: !6413)
!6416 = !DILocation(line: 1208, column: 5, scope: !6345)
!6417 = !DILocation(line: 1211, column: 29, scope: !948)
!6418 = !DILocation(line: 1211, column: 16, scope: !948)
!6419 = !DILocation(line: 1211, column: 14, scope: !948)
!6420 = !DILocation(line: 1212, column: 9, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1212, column: 9)
!6422 = !DILocation(line: 1212, column: 18, scope: !6421)
!6423 = !DILocation(line: 1212, column: 9, scope: !948)
!6424 = !DILocation(line: 1213, column: 13, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6426, file: !376, line: 1213, column: 13)
!6426 = distinct !DILexicalBlock(scope: !6421, file: !376, line: 1212, column: 24)
!6427 = !DILocation(line: 1213, column: 22, scope: !6425)
!6428 = !DILocation(line: 1213, column: 13, scope: !6426)
!6429 = !DILocation(line: 1214, column: 29, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6425, file: !376, line: 1213, column: 28)
!6431 = !DILocation(line: 1214, column: 13, scope: !6430)
!6432 = !DILocation(line: 1216, column: 9, scope: !6430)
!6433 = !DILocation(line: 1217, column: 9, scope: !6426)
!6434 = !DILocation(line: 1221, column: 9, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1221, column: 9)
!6436 = !DILocation(line: 1221, column: 14, scope: !6435)
!6437 = !DILocation(line: 1221, column: 9, scope: !948)
!6438 = !DILocation(line: 1222, column: 45, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6435, file: !376, line: 1221, column: 20)
!6440 = !DILocation(line: 1222, column: 17, scope: !6439)
!6441 = !DILocation(line: 1222, column: 15, scope: !6439)
!6442 = !DILocation(line: 1223, column: 13, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6439, file: !376, line: 1223, column: 13)
!6444 = !DILocation(line: 1223, column: 19, scope: !6443)
!6445 = !DILocation(line: 1223, column: 13, scope: !6439)
!6446 = !DILocation(line: 1224, column: 13, scope: !6443)
!6447 = !DILocation(line: 1225, column: 5, scope: !6439)
!6448 = !DILocation(line: 1227, column: 31, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !376, line: 1227, column: 13)
!6450 = distinct !DILexicalBlock(scope: !6435, file: !376, line: 1226, column: 10)
!6451 = !DILocation(line: 1227, column: 40, scope: !6449)
!6452 = !DILocation(line: 1227, column: 51, scope: !6449)
!6453 = !DILocation(line: 1227, column: 60, scope: !6449)
!6454 = !DILocation(line: 1227, column: 77, scope: !6449)
!6455 = !DILocation(line: 1227, column: 83, scope: !6449)
!6456 = !DILocation(line: 1227, column: 104, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !6449, file: !376, discriminator: 1)
!6458 = !DILocation(line: 1227, column: 113, scope: !6449)
!6459 = !DILocation(line: 1227, column: 124, scope: !6449)
!6460 = !DILocation(line: 1227, column: 133, scope: !6449)
!6461 = !DILocation(line: 1227, column: 150, scope: !6449)
!6462 = !DILocation(line: 1227, column: 13, scope: !6450)
!6463 = !DILocation(line: 1227, column: 175, scope: !6464)
!6464 = !DILexicalBlockFile(scope: !6465, file: !376, discriminator: 2)
!6465 = distinct !DILexicalBlock(scope: !6449, file: !376, line: 1227, column: 157)
!6466 = !DILocation(line: 1227, column: 159, scope: !6465)
!6467 = !DILocation(line: 1227, column: 231, scope: !6465)
!6468 = !DILocation(line: 1228, column: 25, scope: !6450)
!6469 = !DILocation(line: 1228, column: 34, scope: !6450)
!6470 = !DILocation(line: 1228, column: 43, scope: !6450)
!6471 = !DILocation(line: 1232, column: 32, scope: !948)
!6472 = !DILocation(line: 1232, column: 41, scope: !948)
!6473 = !DILocation(line: 1232, column: 52, scope: !948)
!6474 = !DILocation(line: 1232, column: 61, scope: !948)
!6475 = !DILocation(line: 1232, column: 78, scope: !948)
!6476 = !DILocation(line: 1232, column: 15, scope: !948)
!6477 = !DILocation(line: 1232, column: 103, scope: !6322)
!6478 = !DILocation(line: 1232, column: 88, scope: !948)
!6479 = !DILocation(line: 1232, column: 112, scope: !948)
!6480 = !DILocation(line: 1232, column: 140, scope: !6326)
!6481 = !DILocation(line: 1232, column: 125, scope: !948)
!6482 = !DILocation(line: 1232, column: 149, scope: !948)
!6483 = !DILocation(line: 1232, column: 12, scope: !6330)
!6484 = !DILocation(line: 1233, column: 9, scope: !965)
!6485 = !DILocation(line: 1233, column: 16, scope: !965)
!6486 = !DILocation(line: 1233, column: 9, scope: !948)
!6487 = !DILocation(line: 1234, column: 25, scope: !964)
!6488 = !DILocation(line: 1234, column: 9, scope: !964)
!6489 = !DILocation(line: 1236, column: 9, scope: !964)
!6490 = !DILocation(line: 1236, column: 14, scope: !6491)
!6491 = !DILexicalBlockFile(scope: !963, file: !376, discriminator: 1)
!6492 = !DILocation(line: 1236, column: 24, scope: !963)
!6493 = !DILocation(line: 1236, column: 54, scope: !963)
!6494 = !DILocation(line: 1236, column: 70, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !963, file: !376, line: 1236, column: 67)
!6496 = !DILocation(line: 1236, column: 87, scope: !6495)
!6497 = !DILocation(line: 1236, column: 67, scope: !6495)
!6498 = !DILocation(line: 1236, column: 97, scope: !6495)
!6499 = !DILocation(line: 1236, column: 67, scope: !963)
!6500 = !DILocation(line: 1236, column: 67, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !963, file: !376, discriminator: 2)
!6502 = !DILocation(line: 1236, column: 128, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !6495, file: !376, discriminator: 3)
!6504 = !DILocation(line: 1236, column: 146, scope: !6495)
!6505 = !DILocation(line: 1236, column: 156, scope: !6495)
!6506 = !DILocation(line: 1236, column: 181, scope: !6495)
!6507 = !DILocation(line: 1236, column: 112, scope: !6495)
!6508 = !DILocation(line: 1236, column: 200, scope: !6509)
!6509 = !DILexicalBlockFile(scope: !964, file: !376, discriminator: 4)
!6510 = !DILocation(line: 1236, column: 200, scope: !963)
!6511 = !DILocation(line: 1236, column: 200, scope: !6512)
!6512 = !DILexicalBlockFile(scope: !963, file: !376, discriminator: 5)
!6513 = !DILocation(line: 1237, column: 9, scope: !964)
!6514 = !DILocation(line: 1240, column: 23, scope: !948)
!6515 = !DILocation(line: 1240, column: 31, scope: !948)
!6516 = !DILocation(line: 1240, column: 41, scope: !948)
!6517 = !DILocation(line: 1240, column: 49, scope: !948)
!6518 = !DILocation(line: 1240, column: 13, scope: !948)
!6519 = !DILocation(line: 1240, column: 11, scope: !948)
!6520 = !DILocation(line: 1241, column: 9, scope: !969)
!6521 = !DILocation(line: 1241, column: 15, scope: !969)
!6522 = !DILocation(line: 1241, column: 9, scope: !948)
!6523 = !DILocation(line: 1242, column: 9, scope: !968)
!6524 = !DILocation(line: 1242, column: 14, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !967, file: !376, discriminator: 1)
!6526 = !DILocation(line: 1242, column: 24, scope: !967)
!6527 = !DILocation(line: 1242, column: 54, scope: !967)
!6528 = !DILocation(line: 1242, column: 70, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !967, file: !376, line: 1242, column: 67)
!6530 = !DILocation(line: 1242, column: 87, scope: !6529)
!6531 = !DILocation(line: 1242, column: 67, scope: !6529)
!6532 = !DILocation(line: 1242, column: 97, scope: !6529)
!6533 = !DILocation(line: 1242, column: 67, scope: !967)
!6534 = !DILocation(line: 1242, column: 67, scope: !6535)
!6535 = !DILexicalBlockFile(scope: !967, file: !376, discriminator: 2)
!6536 = !DILocation(line: 1242, column: 128, scope: !6537)
!6537 = !DILexicalBlockFile(scope: !6529, file: !376, discriminator: 3)
!6538 = !DILocation(line: 1242, column: 146, scope: !6529)
!6539 = !DILocation(line: 1242, column: 156, scope: !6529)
!6540 = !DILocation(line: 1242, column: 181, scope: !6529)
!6541 = !DILocation(line: 1242, column: 112, scope: !6529)
!6542 = !DILocation(line: 1242, column: 200, scope: !6543)
!6543 = !DILexicalBlockFile(scope: !968, file: !376, discriminator: 4)
!6544 = !DILocation(line: 1242, column: 200, scope: !967)
!6545 = !DILocation(line: 1242, column: 200, scope: !6546)
!6546 = !DILexicalBlockFile(scope: !967, file: !376, discriminator: 5)
!6547 = !DILocation(line: 1243, column: 9, scope: !968)
!6548 = !DILocation(line: 1247, column: 21, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1247, column: 9)
!6550 = !DILocation(line: 1247, column: 28, scope: !6549)
!6551 = !DILocation(line: 1247, column: 35, scope: !6549)
!6552 = !DILocation(line: 1247, column: 43, scope: !6549)
!6553 = !DILocation(line: 1247, column: 9, scope: !6549)
!6554 = !DILocation(line: 1247, column: 53, scope: !6549)
!6555 = !DILocation(line: 1247, column: 9, scope: !948)
!6556 = !DILocation(line: 1248, column: 9, scope: !6549)
!6557 = !DILocation(line: 1249, column: 24, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !948, file: !376, line: 1249, column: 9)
!6559 = !DILocation(line: 1249, column: 31, scope: !6558)
!6560 = !DILocation(line: 1249, column: 38, scope: !6558)
!6561 = !DILocation(line: 1249, column: 47, scope: !6558)
!6562 = !DILocation(line: 1249, column: 9, scope: !6558)
!6563 = !DILocation(line: 1249, column: 53, scope: !6558)
!6564 = !DILocation(line: 1249, column: 9, scope: !948)
!6565 = !DILocation(line: 1250, column: 9, scope: !6558)
!6566 = !DILocation(line: 1252, column: 5, scope: !948)
!6567 = !DILocation(line: 1252, column: 10, scope: !6568)
!6568 = !DILexicalBlockFile(scope: !971, file: !376, discriminator: 1)
!6569 = !DILocation(line: 1252, column: 20, scope: !971)
!6570 = !DILocation(line: 1252, column: 50, scope: !971)
!6571 = !DILocation(line: 1252, column: 66, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !971, file: !376, line: 1252, column: 63)
!6573 = !DILocation(line: 1252, column: 83, scope: !6572)
!6574 = !DILocation(line: 1252, column: 63, scope: !6572)
!6575 = !DILocation(line: 1252, column: 93, scope: !6572)
!6576 = !DILocation(line: 1252, column: 63, scope: !971)
!6577 = !DILocation(line: 1252, column: 63, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !971, file: !376, discriminator: 2)
!6579 = !DILocation(line: 1252, column: 124, scope: !6580)
!6580 = !DILexicalBlockFile(scope: !6572, file: !376, discriminator: 3)
!6581 = !DILocation(line: 1252, column: 142, scope: !6572)
!6582 = !DILocation(line: 1252, column: 152, scope: !6572)
!6583 = !DILocation(line: 1252, column: 177, scope: !6572)
!6584 = !DILocation(line: 1252, column: 108, scope: !6572)
!6585 = !DILocation(line: 1252, column: 196, scope: !6586)
!6586 = !DILexicalBlockFile(scope: !948, file: !376, discriminator: 4)
!6587 = !DILocation(line: 1252, column: 196, scope: !971)
!6588 = !DILocation(line: 1252, column: 196, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !971, file: !376, discriminator: 5)
!6590 = !DILocation(line: 1253, column: 12, scope: !948)
!6591 = !DILocation(line: 1253, column: 5, scope: !948)
!6592 = !DILocation(line: 1256, column: 5, scope: !948)
!6593 = !DILocation(line: 1256, column: 10, scope: !6594)
!6594 = !DILexicalBlockFile(scope: !973, file: !376, discriminator: 1)
!6595 = !DILocation(line: 1256, column: 20, scope: !973)
!6596 = !DILocation(line: 1256, column: 50, scope: !973)
!6597 = !DILocation(line: 1256, column: 66, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !973, file: !376, line: 1256, column: 63)
!6599 = !DILocation(line: 1256, column: 83, scope: !6598)
!6600 = !DILocation(line: 1256, column: 63, scope: !6598)
!6601 = !DILocation(line: 1256, column: 93, scope: !6598)
!6602 = !DILocation(line: 1256, column: 63, scope: !973)
!6603 = !DILocation(line: 1256, column: 63, scope: !6604)
!6604 = !DILexicalBlockFile(scope: !973, file: !376, discriminator: 2)
!6605 = !DILocation(line: 1256, column: 124, scope: !6606)
!6606 = !DILexicalBlockFile(scope: !6598, file: !376, discriminator: 3)
!6607 = !DILocation(line: 1256, column: 142, scope: !6598)
!6608 = !DILocation(line: 1256, column: 152, scope: !6598)
!6609 = !DILocation(line: 1256, column: 177, scope: !6598)
!6610 = !DILocation(line: 1256, column: 108, scope: !6598)
!6611 = !DILocation(line: 1256, column: 196, scope: !6586)
!6612 = !DILocation(line: 1256, column: 196, scope: !973)
!6613 = !DILocation(line: 1256, column: 196, scope: !6614)
!6614 = !DILexicalBlockFile(scope: !973, file: !376, discriminator: 5)
!6615 = !DILocation(line: 1257, column: 16, scope: !948)
!6616 = !DILocation(line: 1257, column: 5, scope: !948)
!6617 = !DILocation(line: 1258, column: 5, scope: !948)
!6618 = !DILocation(line: 1259, column: 1, scope: !948)
!6619 = !DILocation(line: 178, column: 27, scope: !1121)
!6620 = !DILocation(line: 178, column: 40, scope: !1121)
!6621 = !DILocation(line: 180, column: 17, scope: !1121)
!6622 = !DILocation(line: 180, column: 21, scope: !1121)
!6623 = !DILocation(line: 180, column: 5, scope: !1121)
!6624 = !DILocation(line: 180, column: 10, scope: !1121)
!6625 = !DILocation(line: 180, column: 15, scope: !1121)
!6626 = !DILocation(line: 181, column: 9, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !1121, file: !376, line: 181, column: 9)
!6628 = !DILocation(line: 181, column: 13, scope: !6627)
!6629 = !DILocation(line: 181, column: 9, scope: !1121)
!6630 = !DILocation(line: 181, column: 36, scope: !6631)
!6631 = !DILexicalBlockFile(scope: !6627, file: !376, discriminator: 1)
!6632 = !DILocation(line: 181, column: 19, scope: !6627)
!6633 = !DILocation(line: 181, column: 23, scope: !6627)
!6634 = !DILocation(line: 181, column: 29, scope: !6627)
!6635 = !DILocation(line: 181, column: 34, scope: !6627)
!6636 = !DILocation(line: 182, column: 16, scope: !1121)
!6637 = !DILocation(line: 182, column: 5, scope: !1121)
!6638 = !DILocation(line: 182, column: 9, scope: !1121)
!6639 = !DILocation(line: 182, column: 14, scope: !1121)
!6640 = !DILocation(line: 183, column: 5, scope: !1121)
!6641 = !DILocation(line: 183, column: 10, scope: !1121)
!6642 = !DILocation(line: 183, column: 15, scope: !1121)
!6643 = !DILocation(line: 184, column: 1, scope: !1121)
!6644 = !DILocation(line: 786, column: 24, scope: !974)
!6645 = !DILocation(line: 788, column: 5, scope: !974)
!6646 = !DILocation(line: 788, column: 15, scope: !974)
!6647 = !DILocation(line: 789, column: 5, scope: !974)
!6648 = !DILocation(line: 789, column: 16, scope: !974)
!6649 = !DILocation(line: 791, column: 40, scope: !974)
!6650 = !DILocation(line: 791, column: 50, scope: !974)
!6651 = !DILocation(line: 791, column: 11, scope: !974)
!6652 = !DILocation(line: 791, column: 9, scope: !974)
!6653 = !DILocation(line: 792, column: 9, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !974, file: !376, line: 792, column: 9)
!6655 = !DILocation(line: 792, column: 13, scope: !6654)
!6656 = !DILocation(line: 792, column: 9, scope: !974)
!6657 = !DILocation(line: 793, column: 9, scope: !6654)
!6658 = !DILocation(line: 794, column: 33, scope: !974)
!6659 = !DILocation(line: 794, column: 16, scope: !974)
!6660 = !DILocation(line: 794, column: 14, scope: !974)
!6661 = !DILocation(line: 795, column: 5, scope: !974)
!6662 = !DILocation(line: 795, column: 10, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !980, file: !376, discriminator: 1)
!6664 = !DILocation(line: 795, column: 20, scope: !980)
!6665 = !DILocation(line: 795, column: 50, scope: !980)
!6666 = !DILocation(line: 795, column: 64, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !980, file: !376, line: 795, column: 61)
!6668 = !DILocation(line: 795, column: 81, scope: !6667)
!6669 = !DILocation(line: 795, column: 61, scope: !6667)
!6670 = !DILocation(line: 795, column: 91, scope: !6667)
!6671 = !DILocation(line: 795, column: 61, scope: !980)
!6672 = !DILocation(line: 795, column: 61, scope: !6673)
!6673 = !DILexicalBlockFile(scope: !980, file: !376, discriminator: 2)
!6674 = !DILocation(line: 795, column: 122, scope: !6675)
!6675 = !DILexicalBlockFile(scope: !6667, file: !376, discriminator: 3)
!6676 = !DILocation(line: 795, column: 140, scope: !6667)
!6677 = !DILocation(line: 795, column: 150, scope: !6667)
!6678 = !DILocation(line: 795, column: 175, scope: !6667)
!6679 = !DILocation(line: 795, column: 106, scope: !6667)
!6680 = !DILocation(line: 795, column: 194, scope: !6681)
!6681 = !DILexicalBlockFile(scope: !974, file: !376, discriminator: 4)
!6682 = !DILocation(line: 795, column: 194, scope: !980)
!6683 = !DILocation(line: 795, column: 194, scope: !6684)
!6684 = !DILexicalBlockFile(scope: !980, file: !376, discriminator: 5)
!6685 = !DILocation(line: 797, column: 12, scope: !974)
!6686 = !DILocation(line: 797, column: 5, scope: !974)
!6687 = !DILocation(line: 798, column: 1, scope: !974)
!6688 = !DILocation(line: 109, column: 22, scope: !981)
!6689 = !DILocation(line: 109, column: 41, scope: !981)
!6690 = !DILocation(line: 109, column: 62, scope: !981)
!6691 = !DILocation(line: 109, column: 74, scope: !981)
!6692 = !DILocation(line: 111, column: 5, scope: !981)
!6693 = !DILocation(line: 111, column: 14, scope: !981)
!6694 = !DILocation(line: 112, column: 5, scope: !981)
!6695 = !DILocation(line: 112, column: 16, scope: !981)
!6696 = !DILocation(line: 113, column: 5, scope: !981)
!6697 = !DILocation(line: 113, column: 16, scope: !981)
!6698 = !DILocation(line: 115, column: 11, scope: !981)
!6699 = !DILocation(line: 115, column: 20, scope: !981)
!6700 = !DILocation(line: 115, column: 18, scope: !981)
!6701 = !DILocation(line: 115, column: 9, scope: !981)
!6702 = !DILocation(line: 116, column: 9, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !981, file: !376, line: 116, column: 9)
!6704 = !DILocation(line: 116, column: 18, scope: !6703)
!6705 = !DILocation(line: 116, column: 16, scope: !6703)
!6706 = !DILocation(line: 116, column: 9, scope: !981)
!6707 = !DILocation(line: 117, column: 25, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6703, file: !376, line: 116, column: 28)
!6709 = !DILocation(line: 117, column: 9, scope: !6708)
!6710 = !DILocation(line: 119, column: 9, scope: !6708)
!6711 = !DILocation(line: 121, column: 9, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !981, file: !376, line: 121, column: 9)
!6713 = !DILocation(line: 121, column: 16, scope: !6712)
!6714 = !DILocation(line: 121, column: 20, scope: !6712)
!6715 = !DILocation(line: 121, column: 23, scope: !6716)
!6716 = !DILexicalBlockFile(scope: !6712, file: !376, discriminator: 1)
!6717 = !DILocation(line: 121, column: 30, scope: !6712)
!6718 = !DILocation(line: 121, column: 29, scope: !6712)
!6719 = !DILocation(line: 121, column: 41, scope: !6712)
!6720 = !DILocation(line: 121, column: 39, scope: !6712)
!6721 = !DILocation(line: 121, column: 9, scope: !981)
!6722 = !DILocation(line: 122, column: 25, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6712, file: !376, line: 121, column: 46)
!6724 = !DILocation(line: 122, column: 9, scope: !6723)
!6725 = !DILocation(line: 123, column: 9, scope: !6723)
!6726 = !DILocation(line: 126, column: 13, scope: !981)
!6727 = !DILocation(line: 126, column: 11, scope: !981)
!6728 = !DILocation(line: 127, column: 9, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !981, file: !376, line: 127, column: 9)
!6730 = !DILocation(line: 127, column: 15, scope: !6729)
!6731 = !DILocation(line: 127, column: 9, scope: !981)
!6732 = !DILocation(line: 128, column: 9, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6729, file: !376, line: 127, column: 30)
!6734 = !DILocation(line: 129, column: 9, scope: !6733)
!6735 = !DILocation(line: 132, column: 5, scope: !981)
!6736 = !DILocation(line: 132, column: 12, scope: !981)
!6737 = !DILocation(line: 132, column: 17, scope: !981)
!6738 = !DILocation(line: 133, column: 5, scope: !981)
!6739 = !DILocation(line: 133, column: 12, scope: !981)
!6740 = !DILocation(line: 133, column: 17, scope: !981)
!6741 = !DILocation(line: 134, column: 18, scope: !981)
!6742 = !DILocation(line: 134, column: 5, scope: !981)
!6743 = !DILocation(line: 134, column: 12, scope: !981)
!6744 = !DILocation(line: 134, column: 16, scope: !981)
!6745 = !DILocation(line: 135, column: 20, scope: !981)
!6746 = !DILocation(line: 135, column: 5, scope: !981)
!6747 = !DILocation(line: 135, column: 12, scope: !981)
!6748 = !DILocation(line: 135, column: 18, scope: !981)
!6749 = !DILocation(line: 137, column: 32, scope: !981)
!6750 = !DILocation(line: 137, column: 19, scope: !981)
!6751 = !DILocation(line: 137, column: 5, scope: !981)
!6752 = !DILocation(line: 137, column: 12, scope: !981)
!6753 = !DILocation(line: 137, column: 17, scope: !981)
!6754 = !DILocation(line: 138, column: 9, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !981, file: !376, line: 138, column: 9)
!6756 = !DILocation(line: 138, column: 16, scope: !6755)
!6757 = !DILocation(line: 138, column: 21, scope: !6755)
!6758 = !DILocation(line: 138, column: 9, scope: !981)
!6759 = !DILocation(line: 139, column: 9, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6755, file: !376, line: 138, column: 36)
!6761 = !DILocation(line: 140, column: 20, scope: !6760)
!6762 = !DILocation(line: 140, column: 9, scope: !6760)
!6763 = !DILocation(line: 141, column: 9, scope: !6760)
!6764 = !DILocation(line: 144, column: 20, scope: !981)
!6765 = !DILocation(line: 144, column: 5, scope: !981)
!6766 = !DILocation(line: 144, column: 12, scope: !981)
!6767 = !DILocation(line: 144, column: 18, scope: !981)
!6768 = !DILocation(line: 145, column: 5, scope: !981)
!6769 = !DILocation(line: 145, column: 12, scope: !981)
!6770 = !DILocation(line: 145, column: 20, scope: !981)
!6771 = !DILocation(line: 147, column: 13, scope: !981)
!6772 = !DILocation(line: 147, column: 20, scope: !981)
!6773 = !DILocation(line: 147, column: 10, scope: !981)
!6774 = !DILocation(line: 148, column: 5, scope: !981)
!6775 = !DILocation(line: 148, column: 11, scope: !981)
!6776 = !DILocation(line: 148, column: 15, scope: !981)
!6777 = !DILocation(line: 149, column: 17, scope: !981)
!6778 = !DILocation(line: 149, column: 24, scope: !981)
!6779 = !DILocation(line: 149, column: 5, scope: !981)
!6780 = !DILocation(line: 149, column: 11, scope: !981)
!6781 = !DILocation(line: 149, column: 15, scope: !981)
!6782 = !DILocation(line: 150, column: 17, scope: !981)
!6783 = !DILocation(line: 150, column: 5, scope: !981)
!6784 = !DILocation(line: 150, column: 11, scope: !981)
!6785 = !DILocation(line: 150, column: 15, scope: !981)
!6786 = !DILocation(line: 151, column: 5, scope: !981)
!6787 = !DILocation(line: 151, column: 11, scope: !981)
!6788 = !DILocation(line: 151, column: 20, scope: !981)
!6789 = !DILocation(line: 152, column: 5, scope: !981)
!6790 = !DILocation(line: 152, column: 11, scope: !981)
!6791 = !DILocation(line: 152, column: 20, scope: !981)
!6792 = !DILocation(line: 153, column: 5, scope: !981)
!6793 = !DILocation(line: 153, column: 11, scope: !981)
!6794 = !DILocation(line: 153, column: 18, scope: !981)
!6795 = !DILocation(line: 154, column: 5, scope: !981)
!6796 = !DILocation(line: 154, column: 11, scope: !981)
!6797 = !DILocation(line: 154, column: 16, scope: !981)
!6798 = !DILocation(line: 155, column: 5, scope: !981)
!6799 = !DILocation(line: 155, column: 11, scope: !981)
!6800 = !DILocation(line: 155, column: 17, scope: !981)
!6801 = !DILocation(line: 156, column: 5, scope: !981)
!6802 = !DILocation(line: 156, column: 11, scope: !981)
!6803 = !DILocation(line: 156, column: 19, scope: !981)
!6804 = !DILocation(line: 157, column: 5, scope: !981)
!6805 = !DILocation(line: 157, column: 11, scope: !981)
!6806 = !DILocation(line: 157, column: 22, scope: !981)
!6807 = !DILocation(line: 158, column: 22, scope: !981)
!6808 = !DILocation(line: 158, column: 5, scope: !981)
!6809 = !DILocation(line: 158, column: 11, scope: !981)
!6810 = !DILocation(line: 158, column: 20, scope: !981)
!6811 = !DILocation(line: 160, column: 12, scope: !981)
!6812 = !DILocation(line: 160, column: 5, scope: !981)
!6813 = !DILocation(line: 161, column: 1, scope: !981)
!6814 = !DILocation(line: 822, column: 22, scope: !992)
!6815 = !DILocation(line: 822, column: 39, scope: !992)
!6816 = !DILocation(line: 822, column: 56, scope: !992)
!6817 = !DILocation(line: 823, column: 24, scope: !992)
!6818 = !DILocation(line: 825, column: 5, scope: !992)
!6819 = !DILocation(line: 825, column: 15, scope: !992)
!6820 = !DILocation(line: 826, column: 5, scope: !992)
!6821 = !DILocation(line: 826, column: 16, scope: !992)
!6822 = !DILocation(line: 826, column: 24, scope: !992)
!6823 = !DILocation(line: 826, column: 31, scope: !992)
!6824 = !DILocation(line: 827, column: 5, scope: !992)
!6825 = !DILocation(line: 827, column: 9, scope: !992)
!6826 = !DILocation(line: 829, column: 37, scope: !992)
!6827 = !DILocation(line: 829, column: 13, scope: !992)
!6828 = !DILocation(line: 829, column: 11, scope: !992)
!6829 = !DILocation(line: 830, column: 9, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !992, file: !376, line: 830, column: 9)
!6831 = !DILocation(line: 830, column: 15, scope: !6830)
!6832 = !DILocation(line: 830, column: 9, scope: !992)
!6833 = !DILocation(line: 831, column: 9, scope: !6830)
!6834 = !DILocation(line: 833, column: 26, scope: !992)
!6835 = !DILocation(line: 833, column: 33, scope: !992)
!6836 = !DILocation(line: 833, column: 40, scope: !992)
!6837 = !DILocation(line: 833, column: 48, scope: !992)
!6838 = !DILocation(line: 833, column: 11, scope: !992)
!6839 = !DILocation(line: 833, column: 9, scope: !992)
!6840 = !DILocation(line: 834, column: 5, scope: !992)
!6841 = !DILocation(line: 834, column: 10, scope: !6842)
!6842 = !DILexicalBlockFile(scope: !1004, file: !376, discriminator: 1)
!6843 = !DILocation(line: 834, column: 20, scope: !1004)
!6844 = !DILocation(line: 834, column: 50, scope: !1004)
!6845 = !DILocation(line: 834, column: 66, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !1004, file: !376, line: 834, column: 63)
!6847 = !DILocation(line: 834, column: 83, scope: !6846)
!6848 = !DILocation(line: 834, column: 63, scope: !6846)
!6849 = !DILocation(line: 834, column: 93, scope: !6846)
!6850 = !DILocation(line: 834, column: 63, scope: !1004)
!6851 = !DILocation(line: 834, column: 63, scope: !6852)
!6852 = !DILexicalBlockFile(scope: !1004, file: !376, discriminator: 2)
!6853 = !DILocation(line: 834, column: 124, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !6846, file: !376, discriminator: 3)
!6855 = !DILocation(line: 834, column: 142, scope: !6846)
!6856 = !DILocation(line: 834, column: 152, scope: !6846)
!6857 = !DILocation(line: 834, column: 177, scope: !6846)
!6858 = !DILocation(line: 834, column: 108, scope: !6846)
!6859 = !DILocation(line: 834, column: 196, scope: !6860)
!6860 = !DILexicalBlockFile(scope: !992, file: !376, discriminator: 4)
!6861 = !DILocation(line: 834, column: 196, scope: !1004)
!6862 = !DILocation(line: 834, column: 196, scope: !6863)
!6863 = !DILexicalBlockFile(scope: !1004, file: !376, discriminator: 5)
!6864 = !DILocation(line: 835, column: 9, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !992, file: !376, line: 835, column: 9)
!6866 = !DILocation(line: 835, column: 13, scope: !6865)
!6867 = !DILocation(line: 835, column: 9, scope: !992)
!6868 = !DILocation(line: 836, column: 9, scope: !6865)
!6869 = !DILocation(line: 838, column: 24, scope: !992)
!6870 = !DILocation(line: 838, column: 31, scope: !992)
!6871 = !DILocation(line: 838, column: 37, scope: !992)
!6872 = !DILocation(line: 838, column: 22, scope: !992)
!6873 = !DILocation(line: 838, column: 5, scope: !992)
!6874 = !DILocation(line: 838, column: 11, scope: !992)
!6875 = !DILocation(line: 838, column: 20, scope: !992)
!6876 = !DILocation(line: 839, column: 22, scope: !992)
!6877 = !DILocation(line: 839, column: 5, scope: !992)
!6878 = !DILocation(line: 839, column: 11, scope: !992)
!6879 = !DILocation(line: 839, column: 20, scope: !992)
!6880 = !DILocation(line: 840, column: 31, scope: !992)
!6881 = !DILocation(line: 840, column: 20, scope: !992)
!6882 = !DILocation(line: 840, column: 5, scope: !992)
!6883 = !DILocation(line: 840, column: 11, scope: !992)
!6884 = !DILocation(line: 840, column: 18, scope: !992)
!6885 = !DILocation(line: 841, column: 9, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !992, file: !376, line: 841, column: 9)
!6887 = !DILocation(line: 841, column: 15, scope: !6886)
!6888 = !DILocation(line: 841, column: 22, scope: !6886)
!6889 = !DILocation(line: 841, column: 9, scope: !992)
!6890 = !DILocation(line: 842, column: 9, scope: !6886)
!6891 = !DILocation(line: 844, column: 5, scope: !992)
!6892 = !DILocation(line: 845, column: 1, scope: !992)
!6893 = !DILocation(line: 1119, column: 25, scope: !1068)
!6894 = !DILocation(line: 1119, column: 42, scope: !1068)
!6895 = !DILocation(line: 1119, column: 59, scope: !1068)
!6896 = !DILocation(line: 1120, column: 27, scope: !1068)
!6897 = !DILocation(line: 1122, column: 5, scope: !1068)
!6898 = !DILocation(line: 1122, column: 16, scope: !1068)
!6899 = !DILocation(line: 1122, column: 24, scope: !1068)
!6900 = !DILocation(line: 1122, column: 31, scope: !1068)
!6901 = !DILocation(line: 1124, column: 23, scope: !1068)
!6902 = !DILocation(line: 1124, column: 18, scope: !1068)
!6903 = !DILocation(line: 1124, column: 5, scope: !1068)
!6904 = !DILocation(line: 1124, column: 11, scope: !1068)
!6905 = !DILocation(line: 1124, column: 16, scope: !1068)
!6906 = !DILocation(line: 1125, column: 9, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1125, column: 9)
!6908 = !DILocation(line: 1125, column: 14, scope: !6907)
!6909 = !DILocation(line: 1125, column: 9, scope: !1068)
!6910 = !DILocation(line: 1126, column: 13, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !376, line: 1126, column: 13)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !376, line: 1125, column: 20)
!6913 = !DILocation(line: 1126, column: 20, scope: !6911)
!6914 = !DILocation(line: 1126, column: 26, scope: !6911)
!6915 = !DILocation(line: 1126, column: 13, scope: !6912)
!6916 = !DILocation(line: 1127, column: 29, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6911, file: !376, line: 1126, column: 35)
!6918 = !DILocation(line: 1127, column: 13, scope: !6917)
!6919 = !DILocation(line: 1129, column: 13, scope: !6917)
!6920 = !DILocation(line: 1131, column: 9, scope: !6912)
!6921 = !DILocation(line: 1131, column: 16, scope: !6912)
!6922 = !DILocation(line: 1131, column: 22, scope: !6912)
!6923 = !DILocation(line: 1132, column: 9, scope: !6912)
!6924 = !DILocation(line: 1136, column: 38, scope: !1068)
!6925 = !DILocation(line: 1136, column: 45, scope: !1068)
!6926 = !DILocation(line: 1136, column: 19, scope: !1068)
!6927 = !DILocation(line: 1136, column: 5, scope: !1068)
!6928 = !DILocation(line: 1136, column: 11, scope: !1068)
!6929 = !DILocation(line: 1136, column: 17, scope: !1068)
!6930 = !DILocation(line: 1137, column: 9, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1137, column: 9)
!6932 = !DILocation(line: 1137, column: 15, scope: !6931)
!6933 = !DILocation(line: 1137, column: 21, scope: !6931)
!6934 = !DILocation(line: 1137, column: 9, scope: !1068)
!6935 = !DILocation(line: 1138, column: 9, scope: !6931)
!6936 = !DILocation(line: 1141, column: 9, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1141, column: 9)
!6938 = !DILocation(line: 1141, column: 9, scope: !1068)
!6939 = !DILocation(line: 1142, column: 44, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6937, file: !376, line: 1141, column: 18)
!6941 = !DILocation(line: 1142, column: 53, scope: !6940)
!6942 = !DILocation(line: 1142, column: 25, scope: !6940)
!6943 = !DILocation(line: 1142, column: 9, scope: !6940)
!6944 = !DILocation(line: 1142, column: 15, scope: !6940)
!6945 = !DILocation(line: 1142, column: 23, scope: !6940)
!6946 = !DILocation(line: 1143, column: 5, scope: !6940)
!6947 = !DILocation(line: 1145, column: 44, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6937, file: !376, line: 1144, column: 10)
!6949 = !DILocation(line: 1145, column: 51, scope: !6948)
!6950 = !DILocation(line: 1145, column: 58, scope: !6948)
!6951 = !DILocation(line: 1145, column: 25, scope: !6948)
!6952 = !DILocation(line: 1145, column: 9, scope: !6948)
!6953 = !DILocation(line: 1145, column: 15, scope: !6948)
!6954 = !DILocation(line: 1145, column: 23, scope: !6948)
!6955 = !DILocation(line: 1147, column: 9, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1147, column: 9)
!6957 = !DILocation(line: 1147, column: 15, scope: !6956)
!6958 = !DILocation(line: 1147, column: 23, scope: !6956)
!6959 = !DILocation(line: 1147, column: 9, scope: !1068)
!6960 = !DILocation(line: 1148, column: 9, scope: !6956)
!6961 = !DILocation(line: 1149, column: 26, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1149, column: 9)
!6963 = !DILocation(line: 1149, column: 32, scope: !6962)
!6964 = !DILocation(line: 1149, column: 37, scope: !6962)
!6965 = !DILocation(line: 1149, column: 43, scope: !6962)
!6966 = !DILocation(line: 1149, column: 53, scope: !6962)
!6967 = !DILocation(line: 1149, column: 60, scope: !6962)
!6968 = !DILocation(line: 1150, column: 26, scope: !6962)
!6969 = !DILocation(line: 1150, column: 32, scope: !6962)
!6970 = !DILocation(line: 1150, column: 39, scope: !6962)
!6971 = !DILocation(line: 1150, column: 45, scope: !6962)
!6972 = !DILocation(line: 1150, column: 54, scope: !6962)
!6973 = !DILocation(line: 1149, column: 9, scope: !6962)
!6974 = !DILocation(line: 1150, column: 60, scope: !6962)
!6975 = !DILocation(line: 1149, column: 9, scope: !1068)
!6976 = !DILocation(line: 1151, column: 9, scope: !6962)
!6977 = !DILocation(line: 1154, column: 17, scope: !1068)
!6978 = !DILocation(line: 1154, column: 24, scope: !1068)
!6979 = !DILocation(line: 1154, column: 31, scope: !1068)
!6980 = !DILocation(line: 1154, column: 38, scope: !1068)
!6981 = !DILocation(line: 1154, column: 29, scope: !1068)
!6982 = !DILocation(line: 1154, column: 5, scope: !1068)
!6983 = !DILocation(line: 1154, column: 11, scope: !1068)
!6984 = !DILocation(line: 1154, column: 15, scope: !1068)
!6985 = !DILocation(line: 1157, column: 14, scope: !1068)
!6986 = !DILocation(line: 1157, column: 5, scope: !1068)
!6987 = !DILocation(line: 1160, column: 31, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1160, column: 9)
!6989 = !DILocation(line: 1160, column: 9, scope: !6988)
!6990 = !DILocation(line: 1160, column: 9, scope: !1068)
!6991 = !DILocation(line: 1161, column: 9, scope: !6988)
!6992 = !DILocation(line: 1161, column: 16, scope: !6988)
!6993 = !DILocation(line: 1161, column: 22, scope: !6988)
!6994 = !DILocation(line: 1162, column: 31, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1162, column: 9)
!6996 = !DILocation(line: 1162, column: 9, scope: !6995)
!6997 = !DILocation(line: 1162, column: 9, scope: !1068)
!6998 = !DILocation(line: 1163, column: 9, scope: !6995)
!6999 = !DILocation(line: 1163, column: 16, scope: !6995)
!7000 = !DILocation(line: 1163, column: 22, scope: !6995)
!7001 = !DILocation(line: 1167, column: 9, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !1068, file: !376, line: 1167, column: 9)
!7003 = !DILocation(line: 1167, column: 16, scope: !7002)
!7004 = !DILocation(line: 1167, column: 22, scope: !7002)
!7005 = !DILocation(line: 1167, column: 9, scope: !1068)
!7006 = !DILocation(line: 1169, column: 32, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7002, file: !376, line: 1167, column: 31)
!7008 = !DILocation(line: 1169, column: 16, scope: !7007)
!7009 = !DILocation(line: 1169, column: 9, scope: !7007)
!7010 = !DILocation(line: 1172, column: 5, scope: !1068)
!7011 = !DILocation(line: 1173, column: 1, scope: !1068)
!7012 = !DILocation(line: 301, column: 26, scope: !1005)
!7013 = !DILocation(line: 301, column: 41, scope: !1005)
!7014 = !DILocation(line: 301, column: 58, scope: !1005)
!7015 = !DILocation(line: 302, column: 27, scope: !1005)
!7016 = !DILocation(line: 304, column: 5, scope: !1005)
!7017 = !DILocation(line: 304, column: 15, scope: !1005)
!7018 = !DILocation(line: 304, column: 27, scope: !1005)
!7019 = !DILocation(line: 305, column: 5, scope: !1005)
!7020 = !DILocation(line: 305, column: 15, scope: !1005)
!7021 = !DILocation(line: 305, column: 22, scope: !1005)
!7022 = !DILocation(line: 306, column: 5, scope: !1005)
!7023 = !DILocation(line: 306, column: 15, scope: !1005)
!7024 = !DILocation(line: 306, column: 22, scope: !1005)
!7025 = !DILocation(line: 307, column: 5, scope: !1005)
!7026 = !DILocation(line: 307, column: 16, scope: !1005)
!7027 = !DILocation(line: 308, column: 5, scope: !1005)
!7028 = !DILocation(line: 308, column: 16, scope: !1005)
!7029 = !DILocation(line: 309, column: 5, scope: !1005)
!7030 = !DILocation(line: 309, column: 16, scope: !1005)
!7031 = !DILocation(line: 309, column: 19, scope: !1005)
!7032 = !DILocation(line: 310, column: 5, scope: !1005)
!7033 = !DILocation(line: 310, column: 9, scope: !1005)
!7034 = !DILocation(line: 315, column: 46, scope: !1005)
!7035 = !DILocation(line: 315, column: 54, scope: !1005)
!7036 = !DILocation(line: 315, column: 17, scope: !1005)
!7037 = !DILocation(line: 315, column: 15, scope: !1005)
!7038 = !DILocation(line: 316, column: 9, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !1005, file: !376, line: 316, column: 9)
!7040 = !DILocation(line: 316, column: 19, scope: !7039)
!7041 = !DILocation(line: 316, column: 9, scope: !1005)
!7042 = !DILocation(line: 317, column: 9, scope: !7039)
!7043 = !DILocation(line: 319, column: 32, scope: !1005)
!7044 = !DILocation(line: 319, column: 41, scope: !1005)
!7045 = !DILocation(line: 319, column: 52, scope: !1005)
!7046 = !DILocation(line: 319, column: 61, scope: !1005)
!7047 = !DILocation(line: 319, column: 78, scope: !1005)
!7048 = !DILocation(line: 319, column: 15, scope: !1005)
!7049 = !DILocation(line: 319, column: 103, scope: !7050)
!7050 = !DILexicalBlockFile(scope: !1005, file: !376, discriminator: 1)
!7051 = !DILocation(line: 319, column: 88, scope: !1005)
!7052 = !DILocation(line: 319, column: 112, scope: !1005)
!7053 = !DILocation(line: 319, column: 140, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !1005, file: !376, discriminator: 2)
!7055 = !DILocation(line: 319, column: 125, scope: !1005)
!7056 = !DILocation(line: 319, column: 149, scope: !1005)
!7057 = !DILocation(line: 319, column: 12, scope: !7058)
!7058 = !DILexicalBlockFile(scope: !7059, file: !376, discriminator: 4)
!7059 = !DILexicalBlockFile(scope: !1005, file: !376, discriminator: 3)
!7060 = !DILocation(line: 320, column: 23, scope: !1005)
!7061 = !DILocation(line: 320, column: 13, scope: !1005)
!7062 = !DILocation(line: 320, column: 11, scope: !1005)
!7063 = !DILocation(line: 323, column: 40, scope: !1005)
!7064 = !DILocation(line: 323, column: 17, scope: !1005)
!7065 = !DILocation(line: 323, column: 15, scope: !1005)
!7066 = !DILocation(line: 324, column: 9, scope: !1027)
!7067 = !DILocation(line: 324, column: 19, scope: !1027)
!7068 = !DILocation(line: 324, column: 9, scope: !1005)
!7069 = !DILocation(line: 325, column: 9, scope: !1026)
!7070 = !DILocation(line: 325, column: 14, scope: !7071)
!7071 = !DILexicalBlockFile(scope: !1025, file: !376, discriminator: 1)
!7072 = !DILocation(line: 325, column: 24, scope: !1025)
!7073 = !DILocation(line: 325, column: 54, scope: !1025)
!7074 = !DILocation(line: 325, column: 74, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !1025, file: !376, line: 325, column: 71)
!7076 = !DILocation(line: 325, column: 91, scope: !7075)
!7077 = !DILocation(line: 325, column: 71, scope: !7075)
!7078 = !DILocation(line: 325, column: 101, scope: !7075)
!7079 = !DILocation(line: 325, column: 71, scope: !1025)
!7080 = !DILocation(line: 325, column: 71, scope: !7081)
!7081 = !DILexicalBlockFile(scope: !1025, file: !376, discriminator: 2)
!7082 = !DILocation(line: 325, column: 132, scope: !7083)
!7083 = !DILexicalBlockFile(scope: !7075, file: !376, discriminator: 3)
!7084 = !DILocation(line: 325, column: 150, scope: !7075)
!7085 = !DILocation(line: 325, column: 160, scope: !7075)
!7086 = !DILocation(line: 325, column: 185, scope: !7075)
!7087 = !DILocation(line: 325, column: 116, scope: !7075)
!7088 = !DILocation(line: 325, column: 204, scope: !7089)
!7089 = !DILexicalBlockFile(scope: !1026, file: !376, discriminator: 4)
!7090 = !DILocation(line: 325, column: 204, scope: !1025)
!7091 = !DILocation(line: 325, column: 204, scope: !7092)
!7092 = !DILexicalBlockFile(scope: !1025, file: !376, discriminator: 5)
!7093 = !DILocation(line: 326, column: 9, scope: !1026)
!7094 = !DILocation(line: 330, column: 28, scope: !1005)
!7095 = !DILocation(line: 330, column: 26, scope: !1005)
!7096 = !DILocation(line: 330, column: 12, scope: !1005)
!7097 = !DILocation(line: 330, column: 10, scope: !1005)
!7098 = !DILocation(line: 331, column: 9, scope: !1031)
!7099 = !DILocation(line: 331, column: 14, scope: !1031)
!7100 = !DILocation(line: 331, column: 9, scope: !1005)
!7101 = !DILocation(line: 332, column: 9, scope: !1030)
!7102 = !DILocation(line: 332, column: 14, scope: !7103)
!7103 = !DILexicalBlockFile(scope: !1029, file: !376, discriminator: 1)
!7104 = !DILocation(line: 332, column: 24, scope: !1029)
!7105 = !DILocation(line: 332, column: 54, scope: !1029)
!7106 = !DILocation(line: 332, column: 74, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !1029, file: !376, line: 332, column: 71)
!7108 = !DILocation(line: 332, column: 91, scope: !7107)
!7109 = !DILocation(line: 332, column: 71, scope: !7107)
!7110 = !DILocation(line: 332, column: 101, scope: !7107)
!7111 = !DILocation(line: 332, column: 71, scope: !1029)
!7112 = !DILocation(line: 332, column: 71, scope: !7113)
!7113 = !DILexicalBlockFile(scope: !1029, file: !376, discriminator: 2)
!7114 = !DILocation(line: 332, column: 132, scope: !7115)
!7115 = !DILexicalBlockFile(scope: !7107, file: !376, discriminator: 3)
!7116 = !DILocation(line: 332, column: 150, scope: !7107)
!7117 = !DILocation(line: 332, column: 160, scope: !7107)
!7118 = !DILocation(line: 332, column: 185, scope: !7107)
!7119 = !DILocation(line: 332, column: 116, scope: !7107)
!7120 = !DILocation(line: 332, column: 204, scope: !7121)
!7121 = !DILexicalBlockFile(scope: !1030, file: !376, discriminator: 4)
!7122 = !DILocation(line: 332, column: 204, scope: !1029)
!7123 = !DILocation(line: 332, column: 204, scope: !7124)
!7124 = !DILexicalBlockFile(scope: !1029, file: !376, discriminator: 5)
!7125 = !DILocation(line: 333, column: 9, scope: !1030)
!7126 = !DILocation(line: 333, column: 14, scope: !7127)
!7127 = !DILexicalBlockFile(scope: !1033, file: !376, discriminator: 1)
!7128 = !DILocation(line: 333, column: 24, scope: !1033)
!7129 = !DILocation(line: 333, column: 54, scope: !1033)
!7130 = !DILocation(line: 333, column: 74, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !1033, file: !376, line: 333, column: 71)
!7132 = !DILocation(line: 333, column: 91, scope: !7131)
!7133 = !DILocation(line: 333, column: 71, scope: !7131)
!7134 = !DILocation(line: 333, column: 101, scope: !7131)
!7135 = !DILocation(line: 333, column: 71, scope: !1033)
!7136 = !DILocation(line: 333, column: 71, scope: !7137)
!7137 = !DILexicalBlockFile(scope: !1033, file: !376, discriminator: 2)
!7138 = !DILocation(line: 333, column: 132, scope: !7139)
!7139 = !DILexicalBlockFile(scope: !7131, file: !376, discriminator: 3)
!7140 = !DILocation(line: 333, column: 150, scope: !7131)
!7141 = !DILocation(line: 333, column: 160, scope: !7131)
!7142 = !DILocation(line: 333, column: 185, scope: !7131)
!7143 = !DILocation(line: 333, column: 116, scope: !7131)
!7144 = !DILocation(line: 333, column: 204, scope: !7121)
!7145 = !DILocation(line: 333, column: 204, scope: !1033)
!7146 = !DILocation(line: 333, column: 204, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !1033, file: !376, discriminator: 5)
!7148 = !DILocation(line: 334, column: 9, scope: !1030)
!7149 = !DILocation(line: 337, column: 12, scope: !1005)
!7150 = !DILocation(line: 338, column: 12, scope: !1038)
!7151 = !DILocation(line: 338, column: 10, scope: !1038)
!7152 = !DILocation(line: 338, column: 17, scope: !7153)
!7153 = !DILexicalBlockFile(scope: !7154, file: !376, discriminator: 2)
!7154 = !DILexicalBlockFile(scope: !1037, file: !376, discriminator: 1)
!7155 = !DILocation(line: 338, column: 21, scope: !1037)
!7156 = !DILocation(line: 338, column: 19, scope: !1037)
!7157 = !DILocation(line: 338, column: 5, scope: !1038)
!7158 = !DILocation(line: 340, column: 50, scope: !1036)
!7159 = !DILocation(line: 340, column: 29, scope: !1036)
!7160 = !DILocation(line: 340, column: 11, scope: !1036)
!7161 = !DILocation(line: 340, column: 37, scope: !1036)
!7162 = !DILocation(line: 340, column: 10, scope: !1036)
!7163 = !DILocation(line: 340, column: 48, scope: !1036)
!7164 = !DILocation(line: 341, column: 16, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !1036, file: !376, line: 341, column: 9)
!7166 = !DILocation(line: 341, column: 14, scope: !7165)
!7167 = !DILocation(line: 341, column: 21, scope: !7168)
!7168 = !DILexicalBlockFile(scope: !7169, file: !376, discriminator: 2)
!7169 = !DILexicalBlockFile(scope: !7170, file: !376, discriminator: 1)
!7170 = distinct !DILexicalBlock(scope: !7165, file: !376, line: 341, column: 9)
!7171 = !DILocation(line: 341, column: 27, scope: !7170)
!7172 = !DILocation(line: 341, column: 26, scope: !7170)
!7173 = !DILocation(line: 341, column: 23, scope: !7170)
!7174 = !DILocation(line: 341, column: 9, scope: !7165)
!7175 = !DILocation(line: 342, column: 49, scope: !7170)
!7176 = !DILocation(line: 342, column: 33, scope: !7170)
!7177 = !DILocation(line: 342, column: 15, scope: !7170)
!7178 = !DILocation(line: 342, column: 41, scope: !7170)
!7179 = !DILocation(line: 342, column: 14, scope: !7170)
!7180 = !DILocation(line: 342, column: 52, scope: !7170)
!7181 = !DILocation(line: 342, column: 13, scope: !7170)
!7182 = !DILocation(line: 341, column: 35, scope: !7170)
!7183 = !DILocation(line: 341, column: 9, scope: !7170)
!7184 = !DILocation(line: 344, column: 9, scope: !1036)
!7185 = !DILocation(line: 344, column: 14, scope: !7186)
!7186 = !DILexicalBlockFile(scope: !1035, file: !376, discriminator: 1)
!7187 = !DILocation(line: 344, column: 24, scope: !1035)
!7188 = !DILocation(line: 344, column: 55, scope: !1035)
!7189 = !DILocation(line: 344, column: 68, scope: !1041)
!7190 = !DILocation(line: 344, column: 84, scope: !1041)
!7191 = !DILocation(line: 344, column: 68, scope: !1035)
!7192 = !DILocation(line: 344, column: 99, scope: !7193)
!7193 = !DILexicalBlockFile(scope: !1041, file: !376, discriminator: 2)
!7194 = !DILocation(line: 344, column: 104, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !1040, file: !376, discriminator: 4)
!7196 = !DILocation(line: 344, column: 114, scope: !1040)
!7197 = !DILocation(line: 344, column: 144, scope: !1040)
!7198 = !DILocation(line: 344, column: 170, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !1040, file: !376, line: 344, column: 167)
!7200 = !DILocation(line: 344, column: 187, scope: !7199)
!7201 = !DILocation(line: 344, column: 167, scope: !7199)
!7202 = !DILocation(line: 344, column: 197, scope: !7199)
!7203 = !DILocation(line: 344, column: 167, scope: !1040)
!7204 = !DILocation(line: 344, column: 167, scope: !7205)
!7205 = !DILexicalBlockFile(scope: !1040, file: !376, discriminator: 5)
!7206 = !DILocation(line: 344, column: 228, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !7199, file: !376, discriminator: 6)
!7208 = !DILocation(line: 344, column: 246, scope: !7199)
!7209 = !DILocation(line: 344, column: 256, scope: !7199)
!7210 = !DILocation(line: 344, column: 281, scope: !7199)
!7211 = !DILocation(line: 344, column: 212, scope: !7199)
!7212 = !DILocation(line: 344, column: 300, scope: !7213)
!7213 = !DILexicalBlockFile(scope: !1041, file: !376, discriminator: 7)
!7214 = !DILocation(line: 344, column: 300, scope: !1040)
!7215 = !DILocation(line: 344, column: 300, scope: !7216)
!7216 = !DILexicalBlockFile(scope: !1040, file: !376, discriminator: 8)
!7217 = !DILocation(line: 344, column: 300, scope: !7218)
!7218 = !DILexicalBlockFile(scope: !1040, file: !376, discriminator: 9)
!7219 = !DILocation(line: 344, column: 313, scope: !7220)
!7220 = !DILexicalBlockFile(scope: !7221, file: !376, discriminator: 10)
!7221 = !DILexicalBlockFile(scope: !1036, file: !376, discriminator: 3)
!7222 = !DILocation(line: 344, column: 313, scope: !1035)
!7223 = !DILocation(line: 344, column: 313, scope: !7224)
!7224 = !DILexicalBlockFile(scope: !1035, file: !376, discriminator: 11)
!7225 = !DILocation(line: 345, column: 37, scope: !1036)
!7226 = !DILocation(line: 345, column: 39, scope: !1036)
!7227 = !DILocation(line: 345, column: 38, scope: !1036)
!7228 = !DILocation(line: 345, column: 18, scope: !1036)
!7229 = !DILocation(line: 345, column: 16, scope: !1036)
!7230 = !DILocation(line: 346, column: 13, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !1036, file: !376, line: 346, column: 13)
!7232 = !DILocation(line: 346, column: 20, scope: !7231)
!7233 = !DILocation(line: 346, column: 13, scope: !1036)
!7234 = !DILocation(line: 347, column: 17, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7231, file: !376, line: 346, column: 35)
!7236 = !DILocation(line: 348, column: 13, scope: !7235)
!7237 = !DILocation(line: 350, column: 50, scope: !1036)
!7238 = !DILocation(line: 350, column: 29, scope: !1036)
!7239 = !DILocation(line: 350, column: 11, scope: !1036)
!7240 = !DILocation(line: 350, column: 37, scope: !1036)
!7241 = !DILocation(line: 350, column: 10, scope: !1036)
!7242 = !DILocation(line: 350, column: 48, scope: !1036)
!7243 = !DILocation(line: 352, column: 34, scope: !1036)
!7244 = !DILocation(line: 352, column: 43, scope: !1036)
!7245 = !DILocation(line: 352, column: 54, scope: !1036)
!7246 = !DILocation(line: 352, column: 63, scope: !1036)
!7247 = !DILocation(line: 352, column: 80, scope: !1036)
!7248 = !DILocation(line: 352, column: 17, scope: !1036)
!7249 = !DILocation(line: 352, column: 124, scope: !7250)
!7250 = !DILexicalBlockFile(scope: !1036, file: !376, discriminator: 1)
!7251 = !DILocation(line: 352, column: 107, scope: !1036)
!7252 = !DILocation(line: 352, column: 90, scope: !1036)
!7253 = !DILocation(line: 352, column: 116, scope: !1036)
!7254 = !DILocation(line: 352, column: 89, scope: !1036)
!7255 = !DILocation(line: 352, column: 167, scope: !7256)
!7256 = !DILexicalBlockFile(scope: !1036, file: !376, discriminator: 2)
!7257 = !DILocation(line: 352, column: 150, scope: !1036)
!7258 = !DILocation(line: 352, column: 132, scope: !1036)
!7259 = !DILocation(line: 352, column: 159, scope: !1036)
!7260 = !DILocation(line: 352, column: 131, scope: !1036)
!7261 = !DILocation(line: 352, column: 14, scope: !7262)
!7262 = !DILexicalBlockFile(scope: !7221, file: !376, discriminator: 4)
!7263 = !DILocation(line: 353, column: 31, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !1036, file: !376, line: 353, column: 13)
!7265 = !DILocation(line: 353, column: 39, scope: !7264)
!7266 = !DILocation(line: 353, column: 50, scope: !7264)
!7267 = !DILocation(line: 353, column: 59, scope: !7264)
!7268 = !DILocation(line: 353, column: 76, scope: !7264)
!7269 = !DILocation(line: 353, column: 82, scope: !7264)
!7270 = !DILocation(line: 353, column: 102, scope: !7271)
!7271 = !DILexicalBlockFile(scope: !7264, file: !376, discriminator: 1)
!7272 = !DILocation(line: 353, column: 110, scope: !7264)
!7273 = !DILocation(line: 353, column: 121, scope: !7264)
!7274 = !DILocation(line: 353, column: 130, scope: !7264)
!7275 = !DILocation(line: 353, column: 147, scope: !7264)
!7276 = !DILocation(line: 353, column: 153, scope: !7264)
!7277 = !DILocation(line: 354, column: 29, scope: !7264)
!7278 = !DILocation(line: 354, column: 37, scope: !7264)
!7279 = !DILocation(line: 354, column: 46, scope: !7264)
!7280 = !DILocation(line: 354, column: 65, scope: !7264)
!7281 = !DILocation(line: 354, column: 99, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !7264, file: !376, discriminator: 2)
!7283 = !DILocation(line: 354, column: 107, scope: !7264)
!7284 = !DILocation(line: 354, column: 68, scope: !7264)
!7285 = !DILocation(line: 354, column: 136, scope: !7264)
!7286 = !DILocation(line: 354, column: 139, scope: !7287)
!7287 = !DILexicalBlockFile(scope: !7271, file: !376, discriminator: 3)
!7288 = !DILocation(line: 354, column: 145, scope: !7264)
!7289 = !DILocation(line: 353, column: 13, scope: !1036)
!7290 = !DILocation(line: 355, column: 54, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7264, file: !376, line: 354, column: 151)
!7292 = !DILocation(line: 355, column: 33, scope: !7291)
!7293 = !DILocation(line: 355, column: 15, scope: !7291)
!7294 = !DILocation(line: 355, column: 41, scope: !7291)
!7295 = !DILocation(line: 355, column: 14, scope: !7291)
!7296 = !DILocation(line: 355, column: 52, scope: !7291)
!7297 = !DILocation(line: 356, column: 9, scope: !7291)
!7298 = !DILocation(line: 357, column: 36, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7264, file: !376, line: 357, column: 18)
!7300 = !DILocation(line: 357, column: 44, scope: !7299)
!7301 = !DILocation(line: 357, column: 55, scope: !7299)
!7302 = !DILocation(line: 357, column: 64, scope: !7299)
!7303 = !DILocation(line: 357, column: 81, scope: !7299)
!7304 = !DILocation(line: 357, column: 87, scope: !7299)
!7305 = !DILocation(line: 357, column: 107, scope: !7306)
!7306 = !DILexicalBlockFile(scope: !7299, file: !376, discriminator: 1)
!7307 = !DILocation(line: 357, column: 115, scope: !7299)
!7308 = !DILocation(line: 357, column: 126, scope: !7299)
!7309 = !DILocation(line: 357, column: 135, scope: !7299)
!7310 = !DILocation(line: 357, column: 152, scope: !7299)
!7311 = !DILocation(line: 357, column: 159, scope: !7299)
!7312 = !DILocation(line: 358, column: 34, scope: !7299)
!7313 = !DILocation(line: 358, column: 18, scope: !7299)
!7314 = !DILocation(line: 358, column: 43, scope: !7299)
!7315 = !DILocation(line: 358, column: 40, scope: !7299)
!7316 = !DILocation(line: 357, column: 18, scope: !7264)
!7317 = !DILocation(line: 359, column: 20, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7319, file: !376, line: 359, column: 13)
!7319 = distinct !DILexicalBlock(scope: !7299, file: !376, line: 358, column: 50)
!7320 = !DILocation(line: 359, column: 18, scope: !7318)
!7321 = !DILocation(line: 359, column: 25, scope: !7322)
!7322 = !DILexicalBlockFile(scope: !7323, file: !376, discriminator: 2)
!7323 = !DILexicalBlockFile(scope: !7324, file: !376, discriminator: 1)
!7324 = distinct !DILexicalBlock(scope: !7318, file: !376, line: 359, column: 13)
!7325 = !DILocation(line: 359, column: 29, scope: !7324)
!7326 = !DILocation(line: 359, column: 27, scope: !7324)
!7327 = !DILocation(line: 359, column: 13, scope: !7318)
!7328 = !DILocation(line: 360, column: 41, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7324, file: !376, line: 359, column: 41)
!7330 = !DILocation(line: 360, column: 49, scope: !7329)
!7331 = !DILocation(line: 360, column: 60, scope: !7329)
!7332 = !DILocation(line: 360, column: 69, scope: !7329)
!7333 = !DILocation(line: 360, column: 86, scope: !7329)
!7334 = !DILocation(line: 360, column: 24, scope: !7329)
!7335 = !DILocation(line: 360, column: 129, scope: !7336)
!7336 = !DILexicalBlockFile(scope: !7329, file: !376, discriminator: 1)
!7337 = !DILocation(line: 360, column: 113, scope: !7329)
!7338 = !DILocation(line: 360, column: 96, scope: !7329)
!7339 = !DILocation(line: 360, column: 121, scope: !7329)
!7340 = !DILocation(line: 360, column: 95, scope: !7329)
!7341 = !DILocation(line: 360, column: 171, scope: !7342)
!7342 = !DILexicalBlockFile(scope: !7329, file: !376, discriminator: 2)
!7343 = !DILocation(line: 360, column: 155, scope: !7329)
!7344 = !DILocation(line: 360, column: 137, scope: !7329)
!7345 = !DILocation(line: 360, column: 163, scope: !7329)
!7346 = !DILocation(line: 360, column: 136, scope: !7329)
!7347 = !DILocation(line: 360, column: 21, scope: !7348)
!7348 = !DILexicalBlockFile(scope: !7349, file: !376, discriminator: 4)
!7349 = !DILexicalBlockFile(scope: !7329, file: !376, discriminator: 3)
!7350 = !DILocation(line: 361, column: 60, scope: !7329)
!7351 = !DILocation(line: 361, column: 55, scope: !7329)
!7352 = !DILocation(line: 361, column: 54, scope: !7329)
!7353 = !DILocation(line: 361, column: 37, scope: !7329)
!7354 = !DILocation(line: 361, column: 19, scope: !7329)
!7355 = !DILocation(line: 361, column: 45, scope: !7329)
!7356 = !DILocation(line: 361, column: 18, scope: !7329)
!7357 = !DILocation(line: 361, column: 58, scope: !7329)
!7358 = !DILocation(line: 362, column: 13, scope: !7329)
!7359 = !DILocation(line: 359, column: 37, scope: !7324)
!7360 = !DILocation(line: 359, column: 13, scope: !7324)
!7361 = !DILocation(line: 363, column: 9, scope: !7319)
!7362 = !DILocation(line: 365, column: 29, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7299, file: !376, line: 364, column: 14)
!7364 = !DILocation(line: 365, column: 13, scope: !7363)
!7365 = !DILocation(line: 367, column: 17, scope: !7363)
!7366 = !DILocation(line: 368, column: 13, scope: !7363)
!7367 = !DILocation(line: 371, column: 35, scope: !1036)
!7368 = !DILocation(line: 371, column: 46, scope: !1036)
!7369 = !DILocation(line: 371, column: 15, scope: !1036)
!7370 = !DILocation(line: 371, column: 13, scope: !1036)
!7371 = !DILocation(line: 372, column: 13, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !1036, file: !376, line: 372, column: 13)
!7373 = !DILocation(line: 372, column: 17, scope: !7372)
!7374 = !DILocation(line: 372, column: 13, scope: !1036)
!7375 = !DILocation(line: 373, column: 17, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7372, file: !376, line: 372, column: 32)
!7377 = !DILocation(line: 374, column: 13, scope: !7376)
!7378 = !DILocation(line: 376, column: 9, scope: !1036)
!7379 = !DILocation(line: 376, column: 14, scope: !7380)
!7380 = !DILexicalBlockFile(scope: !1043, file: !376, discriminator: 1)
!7381 = !DILocation(line: 376, column: 24, scope: !1043)
!7382 = !DILocation(line: 376, column: 54, scope: !1043)
!7383 = !DILocation(line: 376, column: 68, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !1043, file: !376, line: 376, column: 65)
!7385 = !DILocation(line: 376, column: 85, scope: !7384)
!7386 = !DILocation(line: 376, column: 65, scope: !7384)
!7387 = !DILocation(line: 376, column: 95, scope: !7384)
!7388 = !DILocation(line: 376, column: 65, scope: !1043)
!7389 = !DILocation(line: 376, column: 65, scope: !7390)
!7390 = !DILexicalBlockFile(scope: !1043, file: !376, discriminator: 2)
!7391 = !DILocation(line: 376, column: 126, scope: !7392)
!7392 = !DILexicalBlockFile(scope: !7384, file: !376, discriminator: 3)
!7393 = !DILocation(line: 376, column: 144, scope: !7384)
!7394 = !DILocation(line: 376, column: 154, scope: !7384)
!7395 = !DILocation(line: 376, column: 179, scope: !7384)
!7396 = !DILocation(line: 376, column: 110, scope: !7384)
!7397 = !DILocation(line: 376, column: 198, scope: !7398)
!7398 = !DILexicalBlockFile(scope: !1036, file: !376, discriminator: 4)
!7399 = !DILocation(line: 376, column: 198, scope: !1043)
!7400 = !DILocation(line: 376, column: 198, scope: !7401)
!7401 = !DILexicalBlockFile(scope: !1043, file: !376, discriminator: 5)
!7402 = !DILocation(line: 377, column: 5, scope: !1036)
!7403 = !DILocation(line: 338, column: 30, scope: !1037)
!7404 = !DILocation(line: 338, column: 5, scope: !1037)
!7405 = !DILocation(line: 379, column: 21, scope: !1005)
!7406 = !DILocation(line: 379, column: 28, scope: !1005)
!7407 = !DILocation(line: 379, column: 37, scope: !1005)
!7408 = !DILocation(line: 381, column: 12, scope: !1048)
!7409 = !DILocation(line: 381, column: 10, scope: !1048)
!7410 = !DILocation(line: 381, column: 17, scope: !7411)
!7411 = !DILexicalBlockFile(scope: !7412, file: !376, discriminator: 2)
!7412 = !DILexicalBlockFile(scope: !1047, file: !376, discriminator: 1)
!7413 = !DILocation(line: 381, column: 23, scope: !1047)
!7414 = !DILocation(line: 381, column: 22, scope: !1047)
!7415 = !DILocation(line: 381, column: 19, scope: !1047)
!7416 = !DILocation(line: 381, column: 5, scope: !1048)
!7417 = !DILocation(line: 382, column: 51, scope: !1046)
!7418 = !DILocation(line: 382, column: 35, scope: !1046)
!7419 = !DILocation(line: 382, column: 17, scope: !1046)
!7420 = !DILocation(line: 382, column: 43, scope: !1046)
!7421 = !DILocation(line: 382, column: 16, scope: !1046)
!7422 = !DILocation(line: 382, column: 13, scope: !1046)
!7423 = !DILocation(line: 383, column: 9, scope: !1046)
!7424 = !DILocation(line: 383, column: 14, scope: !7425)
!7425 = !DILexicalBlockFile(scope: !1045, file: !376, discriminator: 1)
!7426 = !DILocation(line: 383, column: 24, scope: !1045)
!7427 = !DILocation(line: 383, column: 55, scope: !1045)
!7428 = !DILocation(line: 383, column: 65, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !1045, file: !376, line: 383, column: 65)
!7430 = !DILocation(line: 383, column: 81, scope: !7429)
!7431 = !DILocation(line: 383, column: 65, scope: !1045)
!7432 = !DILocation(line: 383, column: 112, scope: !7433)
!7433 = !DILexicalBlockFile(scope: !7429, file: !376, discriminator: 2)
!7434 = !DILocation(line: 383, column: 131, scope: !7429)
!7435 = !DILocation(line: 383, column: 140, scope: !7429)
!7436 = !DILocation(line: 383, column: 96, scope: !7429)
!7437 = !DILocation(line: 383, column: 145, scope: !7438)
!7438 = !DILexicalBlockFile(scope: !7439, file: !376, discriminator: 4)
!7439 = !DILexicalBlockFile(scope: !1046, file: !376, discriminator: 3)
!7440 = !DILocation(line: 383, column: 145, scope: !1045)
!7441 = !DILocation(line: 383, column: 145, scope: !7442)
!7442 = !DILexicalBlockFile(scope: !1045, file: !376, discriminator: 5)
!7443 = !DILocation(line: 384, column: 5, scope: !1046)
!7444 = !DILocation(line: 381, column: 31, scope: !1047)
!7445 = !DILocation(line: 381, column: 5, scope: !1047)
!7446 = !DILocation(line: 385, column: 5, scope: !1005)
!7447 = !DILocation(line: 385, column: 10, scope: !7448)
!7448 = !DILexicalBlockFile(scope: !1050, file: !376, discriminator: 1)
!7449 = !DILocation(line: 385, column: 20, scope: !1050)
!7450 = !DILocation(line: 385, column: 50, scope: !1050)
!7451 = !DILocation(line: 385, column: 65, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !1050, file: !376, line: 385, column: 62)
!7453 = !DILocation(line: 385, column: 82, scope: !7452)
!7454 = !DILocation(line: 385, column: 62, scope: !7452)
!7455 = !DILocation(line: 385, column: 92, scope: !7452)
!7456 = !DILocation(line: 385, column: 62, scope: !1050)
!7457 = !DILocation(line: 385, column: 62, scope: !7458)
!7458 = !DILexicalBlockFile(scope: !1050, file: !376, discriminator: 2)
!7459 = !DILocation(line: 385, column: 123, scope: !7460)
!7460 = !DILexicalBlockFile(scope: !7452, file: !376, discriminator: 3)
!7461 = !DILocation(line: 385, column: 141, scope: !7452)
!7462 = !DILocation(line: 385, column: 151, scope: !7452)
!7463 = !DILocation(line: 385, column: 176, scope: !7452)
!7464 = !DILocation(line: 385, column: 107, scope: !7452)
!7465 = !DILocation(line: 385, column: 195, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !1005, file: !376, discriminator: 4)
!7467 = !DILocation(line: 385, column: 195, scope: !1050)
!7468 = !DILocation(line: 385, column: 195, scope: !7469)
!7469 = !DILexicalBlockFile(scope: !1050, file: !376, discriminator: 5)
!7470 = !DILocation(line: 387, column: 5, scope: !1005)
!7471 = !DILocation(line: 387, column: 10, scope: !7472)
!7472 = !DILexicalBlockFile(scope: !1052, file: !376, discriminator: 1)
!7473 = !DILocation(line: 387, column: 20, scope: !1052)
!7474 = !DILocation(line: 387, column: 50, scope: !1052)
!7475 = !DILocation(line: 387, column: 70, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !1052, file: !376, line: 387, column: 67)
!7477 = !DILocation(line: 387, column: 87, scope: !7476)
!7478 = !DILocation(line: 387, column: 67, scope: !7476)
!7479 = !DILocation(line: 387, column: 97, scope: !7476)
!7480 = !DILocation(line: 387, column: 67, scope: !1052)
!7481 = !DILocation(line: 387, column: 67, scope: !7482)
!7482 = !DILexicalBlockFile(scope: !1052, file: !376, discriminator: 2)
!7483 = !DILocation(line: 387, column: 128, scope: !7484)
!7484 = !DILexicalBlockFile(scope: !7476, file: !376, discriminator: 3)
!7485 = !DILocation(line: 387, column: 146, scope: !7476)
!7486 = !DILocation(line: 387, column: 156, scope: !7476)
!7487 = !DILocation(line: 387, column: 181, scope: !7476)
!7488 = !DILocation(line: 387, column: 112, scope: !7476)
!7489 = !DILocation(line: 387, column: 200, scope: !7466)
!7490 = !DILocation(line: 387, column: 200, scope: !1052)
!7491 = !DILocation(line: 387, column: 200, scope: !7492)
!7492 = !DILexicalBlockFile(scope: !1052, file: !376, discriminator: 5)
!7493 = !DILocation(line: 388, column: 5, scope: !1005)
!7494 = !DILocation(line: 388, column: 10, scope: !7495)
!7495 = !DILexicalBlockFile(scope: !1054, file: !376, discriminator: 1)
!7496 = !DILocation(line: 388, column: 20, scope: !1054)
!7497 = !DILocation(line: 388, column: 50, scope: !1054)
!7498 = !DILocation(line: 388, column: 70, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !1054, file: !376, line: 388, column: 67)
!7500 = !DILocation(line: 388, column: 87, scope: !7499)
!7501 = !DILocation(line: 388, column: 67, scope: !7499)
!7502 = !DILocation(line: 388, column: 97, scope: !7499)
!7503 = !DILocation(line: 388, column: 67, scope: !1054)
!7504 = !DILocation(line: 388, column: 67, scope: !7505)
!7505 = !DILexicalBlockFile(scope: !1054, file: !376, discriminator: 2)
!7506 = !DILocation(line: 388, column: 128, scope: !7507)
!7507 = !DILexicalBlockFile(scope: !7499, file: !376, discriminator: 3)
!7508 = !DILocation(line: 388, column: 146, scope: !7499)
!7509 = !DILocation(line: 388, column: 156, scope: !7499)
!7510 = !DILocation(line: 388, column: 181, scope: !7499)
!7511 = !DILocation(line: 388, column: 112, scope: !7499)
!7512 = !DILocation(line: 388, column: 200, scope: !7466)
!7513 = !DILocation(line: 388, column: 200, scope: !1054)
!7514 = !DILocation(line: 388, column: 200, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !1054, file: !376, discriminator: 5)
!7516 = !DILocation(line: 389, column: 12, scope: !1005)
!7517 = !DILocation(line: 389, column: 5, scope: !1005)
!7518 = !DILocation(line: 391, column: 1, scope: !1005)
!7519 = !DILocation(line: 801, column: 22, scope: !1055)
!7520 = !DILocation(line: 803, column: 5, scope: !1055)
!7521 = !DILocation(line: 803, column: 15, scope: !1055)
!7522 = !DILocation(line: 804, column: 5, scope: !1055)
!7523 = !DILocation(line: 804, column: 11, scope: !1055)
!7524 = !DILocation(line: 806, column: 35, scope: !1055)
!7525 = !DILocation(line: 806, column: 11, scope: !1055)
!7526 = !DILocation(line: 806, column: 9, scope: !1055)
!7527 = !DILocation(line: 807, column: 9, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !1055, file: !376, line: 807, column: 9)
!7529 = !DILocation(line: 807, column: 13, scope: !7528)
!7530 = !DILocation(line: 807, column: 9, scope: !1055)
!7531 = !DILocation(line: 808, column: 9, scope: !7528)
!7532 = !DILocation(line: 809, column: 55, scope: !1055)
!7533 = !DILocation(line: 809, column: 40, scope: !1055)
!7534 = !DILocation(line: 809, column: 62, scope: !1055)
!7535 = !DILocation(line: 809, column: 71, scope: !1055)
!7536 = !DILocation(line: 809, column: 11, scope: !1055)
!7537 = !DILocation(line: 809, column: 9, scope: !1055)
!7538 = !DILocation(line: 810, column: 9, scope: !1065)
!7539 = !DILocation(line: 810, column: 13, scope: !1065)
!7540 = !DILocation(line: 810, column: 9, scope: !1055)
!7541 = !DILocation(line: 811, column: 9, scope: !1064)
!7542 = !DILocation(line: 812, column: 9, scope: !1064)
!7543 = !DILocation(line: 812, column: 14, scope: !7544)
!7544 = !DILexicalBlockFile(scope: !1063, file: !376, discriminator: 1)
!7545 = !DILocation(line: 812, column: 24, scope: !1063)
!7546 = !DILocation(line: 812, column: 54, scope: !1063)
!7547 = !DILocation(line: 812, column: 68, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !1063, file: !376, line: 812, column: 65)
!7549 = !DILocation(line: 812, column: 85, scope: !7548)
!7550 = !DILocation(line: 812, column: 65, scope: !7548)
!7551 = !DILocation(line: 812, column: 95, scope: !7548)
!7552 = !DILocation(line: 812, column: 65, scope: !1063)
!7553 = !DILocation(line: 812, column: 65, scope: !7554)
!7554 = !DILexicalBlockFile(scope: !1063, file: !376, discriminator: 2)
!7555 = !DILocation(line: 812, column: 126, scope: !7556)
!7556 = !DILexicalBlockFile(scope: !7548, file: !376, discriminator: 3)
!7557 = !DILocation(line: 812, column: 144, scope: !7548)
!7558 = !DILocation(line: 812, column: 154, scope: !7548)
!7559 = !DILocation(line: 812, column: 179, scope: !7548)
!7560 = !DILocation(line: 812, column: 110, scope: !7548)
!7561 = !DILocation(line: 812, column: 198, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !1064, file: !376, discriminator: 4)
!7563 = !DILocation(line: 812, column: 198, scope: !1063)
!7564 = !DILocation(line: 812, column: 198, scope: !7565)
!7565 = !DILexicalBlockFile(scope: !1063, file: !376, discriminator: 5)
!7566 = !DILocation(line: 813, column: 9, scope: !1064)
!7567 = !DILocation(line: 815, column: 12, scope: !1055)
!7568 = !DILocation(line: 815, column: 52, scope: !1055)
!7569 = !DILocation(line: 815, column: 34, scope: !1055)
!7570 = !DILocation(line: 815, column: 59, scope: !1055)
!7571 = !DILocation(line: 815, column: 32, scope: !1055)
!7572 = !DILocation(line: 815, column: 5, scope: !1055)
!7573 = !DILocation(line: 816, column: 5, scope: !1055)
!7574 = !DILocation(line: 816, column: 10, scope: !7575)
!7575 = !DILexicalBlockFile(scope: !1067, file: !376, discriminator: 1)
!7576 = !DILocation(line: 816, column: 20, scope: !1067)
!7577 = !DILocation(line: 816, column: 50, scope: !1067)
!7578 = !DILocation(line: 816, column: 64, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !1067, file: !376, line: 816, column: 61)
!7580 = !DILocation(line: 816, column: 81, scope: !7579)
!7581 = !DILocation(line: 816, column: 61, scope: !7579)
!7582 = !DILocation(line: 816, column: 91, scope: !7579)
!7583 = !DILocation(line: 816, column: 61, scope: !1067)
!7584 = !DILocation(line: 816, column: 61, scope: !7585)
!7585 = !DILexicalBlockFile(scope: !1067, file: !376, discriminator: 2)
!7586 = !DILocation(line: 816, column: 122, scope: !7587)
!7587 = !DILexicalBlockFile(scope: !7579, file: !376, discriminator: 3)
!7588 = !DILocation(line: 816, column: 140, scope: !7579)
!7589 = !DILocation(line: 816, column: 150, scope: !7579)
!7590 = !DILocation(line: 816, column: 175, scope: !7579)
!7591 = !DILocation(line: 816, column: 106, scope: !7579)
!7592 = !DILocation(line: 816, column: 194, scope: !7593)
!7593 = !DILexicalBlockFile(scope: !1055, file: !376, discriminator: 4)
!7594 = !DILocation(line: 816, column: 194, scope: !1067)
!7595 = !DILocation(line: 816, column: 194, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !1067, file: !376, discriminator: 5)
!7597 = !DILocation(line: 818, column: 12, scope: !1055)
!7598 = !DILocation(line: 818, column: 5, scope: !1055)
!7599 = !DILocation(line: 819, column: 1, scope: !1055)
!7600 = !DILocation(line: 848, column: 30, scope: !1075)
!7601 = !DILocation(line: 848, column: 46, scope: !1075)
!7602 = !DILocation(line: 848, column: 55, scope: !1075)
!7603 = !DILocation(line: 850, column: 5, scope: !1075)
!7604 = !DILocation(line: 850, column: 17, scope: !1075)
!7605 = !DILocation(line: 851, column: 5, scope: !1075)
!7606 = !DILocation(line: 851, column: 16, scope: !1075)
!7607 = !DILocation(line: 851, column: 19, scope: !1075)
!7608 = !DILocation(line: 853, column: 25, scope: !1075)
!7609 = !DILocation(line: 853, column: 29, scope: !1075)
!7610 = !DILocation(line: 853, column: 12, scope: !1075)
!7611 = !DILocation(line: 853, column: 10, scope: !1075)
!7612 = !DILocation(line: 854, column: 9, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !1075, file: !376, line: 854, column: 9)
!7614 = !DILocation(line: 854, column: 14, scope: !7613)
!7615 = !DILocation(line: 854, column: 9, scope: !1075)
!7616 = !DILocation(line: 855, column: 9, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !376, line: 854, column: 29)
!7618 = !DILocation(line: 856, column: 9, scope: !7617)
!7619 = !DILocation(line: 859, column: 12, scope: !1088)
!7620 = !DILocation(line: 859, column: 10, scope: !1088)
!7621 = !DILocation(line: 859, column: 17, scope: !7622)
!7622 = !DILexicalBlockFile(scope: !7623, file: !376, discriminator: 2)
!7623 = !DILexicalBlockFile(scope: !1087, file: !376, discriminator: 1)
!7624 = !DILocation(line: 859, column: 21, scope: !1087)
!7625 = !DILocation(line: 859, column: 19, scope: !1087)
!7626 = !DILocation(line: 859, column: 5, scope: !1088)
!7627 = !DILocation(line: 860, column: 9, scope: !1086)
!7628 = !DILocation(line: 860, column: 19, scope: !1086)
!7629 = !DILocation(line: 860, column: 43, scope: !1086)
!7630 = !DILocation(line: 860, column: 50, scope: !1086)
!7631 = !DILocation(line: 860, column: 61, scope: !1086)
!7632 = !DILocation(line: 860, column: 70, scope: !1086)
!7633 = !DILocation(line: 860, column: 87, scope: !1086)
!7634 = !DILocation(line: 860, column: 26, scope: !1086)
!7635 = !DILocation(line: 860, column: 129, scope: !7636)
!7636 = !DILexicalBlockFile(scope: !1086, file: !376, discriminator: 1)
!7637 = !DILocation(line: 860, column: 114, scope: !1086)
!7638 = !DILocation(line: 860, column: 97, scope: !1086)
!7639 = !DILocation(line: 860, column: 121, scope: !1086)
!7640 = !DILocation(line: 860, column: 96, scope: !1086)
!7641 = !DILocation(line: 860, column: 170, scope: !7642)
!7642 = !DILexicalBlockFile(scope: !1086, file: !376, discriminator: 2)
!7643 = !DILocation(line: 860, column: 155, scope: !1086)
!7644 = !DILocation(line: 860, column: 137, scope: !1086)
!7645 = !DILocation(line: 860, column: 162, scope: !1086)
!7646 = !DILocation(line: 860, column: 136, scope: !1086)
!7647 = !DILocation(line: 860, column: 19, scope: !7648)
!7648 = !DILexicalBlockFile(scope: !7649, file: !376, discriminator: 4)
!7649 = !DILexicalBlockFile(scope: !1086, file: !376, discriminator: 3)
!7650 = !DILocation(line: 861, column: 31, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !1086, file: !376, line: 861, column: 13)
!7652 = !DILocation(line: 861, column: 38, scope: !7651)
!7653 = !DILocation(line: 861, column: 49, scope: !7651)
!7654 = !DILocation(line: 861, column: 58, scope: !7651)
!7655 = !DILocation(line: 861, column: 75, scope: !7651)
!7656 = !DILocation(line: 861, column: 13, scope: !1086)
!7657 = !DILocation(line: 862, column: 26, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7651, file: !376, line: 861, column: 82)
!7659 = !DILocation(line: 864, column: 17, scope: !7658)
!7660 = !DILocation(line: 862, column: 13, scope: !7658)
!7661 = !DILocation(line: 865, column: 24, scope: !7658)
!7662 = !DILocation(line: 865, column: 13, scope: !7658)
!7663 = !DILocation(line: 866, column: 13, scope: !7658)
!7664 = !DILocation(line: 868, column: 30, scope: !1086)
!7665 = !DILocation(line: 868, column: 13, scope: !1086)
!7666 = !DILocation(line: 868, column: 11, scope: !1086)
!7667 = !DILocation(line: 869, column: 13, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !1086, file: !376, line: 869, column: 13)
!7669 = !DILocation(line: 869, column: 13, scope: !1086)
!7670 = !DILocation(line: 870, column: 24, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7668, file: !376, line: 869, column: 31)
!7672 = !DILocation(line: 870, column: 13, scope: !7671)
!7673 = !DILocation(line: 871, column: 13, scope: !7671)
!7674 = !DILocation(line: 873, column: 13, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !1086, file: !376, line: 873, column: 13)
!7676 = !DILocation(line: 873, column: 22, scope: !7675)
!7677 = !DILocation(line: 873, column: 25, scope: !7678)
!7678 = !DILexicalBlockFile(scope: !7675, file: !376, discriminator: 1)
!7679 = !DILocation(line: 873, column: 27, scope: !7675)
!7680 = !DILocation(line: 873, column: 13, scope: !1086)
!7681 = !DILocation(line: 874, column: 26, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7675, file: !376, line: 873, column: 32)
!7683 = !DILocation(line: 874, column: 13, scope: !7682)
!7684 = !DILocation(line: 876, column: 24, scope: !7682)
!7685 = !DILocation(line: 876, column: 13, scope: !7682)
!7686 = !DILocation(line: 877, column: 13, scope: !7682)
!7687 = !DILocation(line: 879, column: 19, scope: !1086)
!7688 = !DILocation(line: 879, column: 14, scope: !1086)
!7689 = !DILocation(line: 879, column: 9, scope: !1086)
!7690 = !DILocation(line: 879, column: 17, scope: !1086)
!7691 = !DILocation(line: 880, column: 5, scope: !1087)
!7692 = !DILocation(line: 880, column: 5, scope: !7623)
!7693 = !DILocation(line: 880, column: 5, scope: !1086)
!7694 = !DILocation(line: 859, column: 27, scope: !1087)
!7695 = !DILocation(line: 859, column: 5, scope: !1087)
!7696 = !DILocation(line: 882, column: 12, scope: !1075)
!7697 = !DILocation(line: 882, column: 5, scope: !1075)
!7698 = !DILocation(line: 883, column: 1, scope: !1075)
!7699 = !DILocation(line: 928, column: 29, scope: !1089)
!7700 = !DILocation(line: 928, column: 45, scope: !1089)
!7701 = !DILocation(line: 928, column: 66, scope: !1089)
!7702 = !DILocation(line: 929, column: 36, scope: !1089)
!7703 = !DILocation(line: 929, column: 61, scope: !1089)
!7704 = !DILocation(line: 930, column: 29, scope: !1089)
!7705 = !DILocation(line: 932, column: 5, scope: !1089)
!7706 = !DILocation(line: 932, column: 16, scope: !1089)
!7707 = !DILocation(line: 932, column: 22, scope: !1089)
!7708 = !DILocation(line: 933, column: 5, scope: !1089)
!7709 = !DILocation(line: 933, column: 16, scope: !1089)
!7710 = !DILocation(line: 937, column: 9, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !1089, file: !376, line: 937, column: 9)
!7712 = !DILocation(line: 937, column: 14, scope: !7711)
!7713 = !DILocation(line: 937, column: 19, scope: !7711)
!7714 = !DILocation(line: 937, column: 23, scope: !7715)
!7715 = !DILexicalBlockFile(scope: !7711, file: !376, discriminator: 1)
!7716 = !DILocation(line: 937, column: 30, scope: !7711)
!7717 = !DILocation(line: 937, column: 34, scope: !7711)
!7718 = !DILocation(line: 937, column: 37, scope: !7719)
!7719 = !DILexicalBlockFile(scope: !7711, file: !376, discriminator: 2)
!7720 = !DILocation(line: 937, column: 44, scope: !7711)
!7721 = !DILocation(line: 937, column: 43, scope: !7711)
!7722 = !DILocation(line: 937, column: 55, scope: !7711)
!7723 = !DILocation(line: 937, column: 53, scope: !7711)
!7724 = !DILocation(line: 937, column: 9, scope: !1089)
!7725 = !DILocation(line: 938, column: 9, scope: !7711)
!7726 = !DILocation(line: 940, column: 12, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !1089, file: !376, line: 940, column: 5)
!7728 = !DILocation(line: 940, column: 10, scope: !7727)
!7729 = !DILocation(line: 940, column: 17, scope: !7730)
!7730 = !DILexicalBlockFile(scope: !7731, file: !376, discriminator: 2)
!7731 = !DILexicalBlockFile(scope: !7732, file: !376, discriminator: 1)
!7732 = distinct !DILexicalBlock(scope: !7727, file: !376, line: 940, column: 5)
!7733 = !DILocation(line: 940, column: 21, scope: !7732)
!7734 = !DILocation(line: 940, column: 19, scope: !7732)
!7735 = !DILocation(line: 940, column: 5, scope: !7727)
!7736 = !DILocation(line: 941, column: 21, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7732, file: !376, line: 941, column: 13)
!7738 = !DILocation(line: 941, column: 13, scope: !7737)
!7739 = !DILocation(line: 941, column: 26, scope: !7737)
!7740 = !DILocation(line: 941, column: 24, scope: !7737)
!7741 = !DILocation(line: 941, column: 13, scope: !7732)
!7742 = !DILocation(line: 942, column: 29, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7737, file: !376, line: 941, column: 36)
!7744 = !DILocation(line: 942, column: 13, scope: !7743)
!7745 = !DILocation(line: 944, column: 13, scope: !7743)
!7746 = !DILocation(line: 941, column: 26, scope: !7747)
!7747 = !DILexicalBlockFile(scope: !7737, file: !376, discriminator: 1)
!7748 = !DILocation(line: 940, column: 28, scope: !7732)
!7749 = !DILocation(line: 940, column: 5, scope: !7732)
!7750 = !DILocation(line: 947, column: 12, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !1089, file: !376, line: 947, column: 5)
!7752 = !DILocation(line: 947, column: 10, scope: !7751)
!7753 = !DILocation(line: 947, column: 17, scope: !7754)
!7754 = !DILexicalBlockFile(scope: !7755, file: !376, discriminator: 2)
!7755 = !DILexicalBlockFile(scope: !7756, file: !376, discriminator: 1)
!7756 = distinct !DILexicalBlock(scope: !7751, file: !376, line: 947, column: 5)
!7757 = !DILocation(line: 947, column: 21, scope: !7756)
!7758 = !DILocation(line: 947, column: 19, scope: !7756)
!7759 = !DILocation(line: 947, column: 5, scope: !7751)
!7760 = !DILocation(line: 948, column: 19, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7756, file: !376, line: 948, column: 13)
!7762 = !DILocation(line: 948, column: 13, scope: !7761)
!7763 = !DILocation(line: 948, column: 22, scope: !7761)
!7764 = !DILocation(line: 948, column: 13, scope: !7756)
!7765 = !DILocation(line: 949, column: 13, scope: !7761)
!7766 = !DILocation(line: 948, column: 25, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !7761, file: !376, discriminator: 1)
!7768 = !DILocation(line: 947, column: 28, scope: !7756)
!7769 = !DILocation(line: 947, column: 5, scope: !7756)
!7770 = !DILocation(line: 951, column: 17, scope: !1089)
!7771 = !DILocation(line: 951, column: 10, scope: !1089)
!7772 = !DILocation(line: 952, column: 12, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !1089, file: !376, line: 952, column: 5)
!7774 = !DILocation(line: 952, column: 10, scope: !7773)
!7775 = !DILocation(line: 952, column: 17, scope: !7776)
!7776 = !DILexicalBlockFile(scope: !7777, file: !376, discriminator: 2)
!7777 = !DILexicalBlockFile(scope: !7778, file: !376, discriminator: 1)
!7778 = distinct !DILexicalBlock(scope: !7773, file: !376, line: 952, column: 5)
!7779 = !DILocation(line: 952, column: 21, scope: !7778)
!7780 = !DILocation(line: 952, column: 19, scope: !7778)
!7781 = !DILocation(line: 952, column: 5, scope: !7773)
!7782 = !DILocation(line: 953, column: 21, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7778, file: !376, line: 953, column: 13)
!7784 = !DILocation(line: 953, column: 13, scope: !7783)
!7785 = !DILocation(line: 953, column: 24, scope: !7783)
!7786 = !DILocation(line: 953, column: 13, scope: !7778)
!7787 = !DILocation(line: 954, column: 28, scope: !7783)
!7788 = !DILocation(line: 954, column: 22, scope: !7783)
!7789 = !DILocation(line: 954, column: 30, scope: !7783)
!7790 = !DILocation(line: 954, column: 44, scope: !7783)
!7791 = !DILocation(line: 954, column: 36, scope: !7783)
!7792 = !DILocation(line: 954, column: 34, scope: !7783)
!7793 = !DILocation(line: 954, column: 18, scope: !7783)
!7794 = !DILocation(line: 954, column: 13, scope: !7783)
!7795 = !DILocation(line: 956, column: 28, scope: !7783)
!7796 = !DILocation(line: 956, column: 22, scope: !7783)
!7797 = !DILocation(line: 956, column: 30, scope: !7783)
!7798 = !DILocation(line: 956, column: 44, scope: !7783)
!7799 = !DILocation(line: 956, column: 36, scope: !7783)
!7800 = !DILocation(line: 956, column: 34, scope: !7783)
!7801 = !DILocation(line: 956, column: 18, scope: !7783)
!7802 = !DILocation(line: 953, column: 27, scope: !7783)
!7803 = !DILocation(line: 952, column: 28, scope: !7778)
!7804 = !DILocation(line: 952, column: 5, scope: !7778)
!7805 = !DILocation(line: 958, column: 9, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !1089, file: !376, line: 958, column: 9)
!7807 = !DILocation(line: 958, column: 16, scope: !7806)
!7808 = !DILocation(line: 958, column: 14, scope: !7806)
!7809 = !DILocation(line: 958, column: 23, scope: !7806)
!7810 = !DILocation(line: 958, column: 27, scope: !7806)
!7811 = !DILocation(line: 958, column: 30, scope: !7812)
!7812 = !DILexicalBlockFile(scope: !7806, file: !376, discriminator: 1)
!7813 = !DILocation(line: 958, column: 37, scope: !7806)
!7814 = !DILocation(line: 958, column: 35, scope: !7806)
!7815 = !DILocation(line: 958, column: 46, scope: !7806)
!7816 = !DILocation(line: 958, column: 44, scope: !7806)
!7817 = !DILocation(line: 958, column: 57, scope: !7806)
!7818 = !DILocation(line: 958, column: 55, scope: !7806)
!7819 = !DILocation(line: 958, column: 9, scope: !1089)
!7820 = !DILocation(line: 959, column: 9, scope: !7806)
!7821 = !DILocation(line: 961, column: 5, scope: !1089)
!7822 = !DILocation(line: 965, column: 21, scope: !1089)
!7823 = !DILocation(line: 965, column: 5, scope: !1089)
!7824 = !DILocation(line: 967, column: 5, scope: !1089)
!7825 = !DILocation(line: 968, column: 1, scope: !1089)
!7826 = !DILocation(line: 1029, column: 26, scope: !1102)
!7827 = !DILocation(line: 1031, column: 5, scope: !1102)
!7828 = !DILocation(line: 1031, column: 16, scope: !1102)
!7829 = !DILocation(line: 1031, column: 24, scope: !1102)
!7830 = !DILocation(line: 1031, column: 31, scope: !1102)
!7831 = !DILocation(line: 1032, column: 5, scope: !1102)
!7832 = !DILocation(line: 1032, column: 16, scope: !1102)
!7833 = !DILocation(line: 1032, column: 23, scope: !1102)
!7834 = !DILocation(line: 1033, column: 5, scope: !1102)
!7835 = !DILocation(line: 1033, column: 16, scope: !1102)
!7836 = !DILocation(line: 1033, column: 22, scope: !1102)
!7837 = !DILocation(line: 1034, column: 5, scope: !1102)
!7838 = !DILocation(line: 1034, column: 16, scope: !1102)
!7839 = !DILocation(line: 1035, column: 5, scope: !1102)
!7840 = !DILocation(line: 1035, column: 16, scope: !1102)
!7841 = !DILocation(line: 1036, column: 5, scope: !1102)
!7842 = !DILocation(line: 1036, column: 11, scope: !1102)
!7843 = !DILocation(line: 1042, column: 15, scope: !1102)
!7844 = !DILocation(line: 1042, column: 21, scope: !1102)
!7845 = !DILocation(line: 1042, column: 30, scope: !1102)
!7846 = !DILocation(line: 1042, column: 13, scope: !1102)
!7847 = !DILocation(line: 1045, column: 21, scope: !1102)
!7848 = !DILocation(line: 1045, column: 29, scope: !1102)
!7849 = !DILocation(line: 1045, column: 34, scope: !1102)
!7850 = !DILocation(line: 1045, column: 17, scope: !1102)
!7851 = !DILocation(line: 1045, column: 13, scope: !1102)
!7852 = !DILocation(line: 1047, column: 25, scope: !1102)
!7853 = !DILocation(line: 1047, column: 32, scope: !1102)
!7854 = !DILocation(line: 1047, column: 38, scope: !1102)
!7855 = !DILocation(line: 1047, column: 36, scope: !1102)
!7856 = !DILocation(line: 1047, column: 12, scope: !1102)
!7857 = !DILocation(line: 1047, column: 10, scope: !1102)
!7858 = !DILocation(line: 1048, column: 9, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !1102, file: !376, line: 1048, column: 9)
!7860 = !DILocation(line: 1048, column: 14, scope: !7859)
!7861 = !DILocation(line: 1048, column: 9, scope: !1102)
!7862 = !DILocation(line: 1049, column: 9, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7859, file: !376, line: 1048, column: 29)
!7864 = !DILocation(line: 1050, column: 9, scope: !7863)
!7865 = !DILocation(line: 1053, column: 12, scope: !1102)
!7866 = !DILocation(line: 1053, column: 19, scope: !1102)
!7867 = !DILocation(line: 1053, column: 17, scope: !1102)
!7868 = !DILocation(line: 1053, column: 28, scope: !1102)
!7869 = !DILocation(line: 1053, column: 35, scope: !1102)
!7870 = !DILocation(line: 1053, column: 41, scope: !1102)
!7871 = !DILocation(line: 1053, column: 48, scope: !1102)
!7872 = !DILocation(line: 1053, column: 5, scope: !1102)
!7873 = !DILocation(line: 1055, column: 16, scope: !1102)
!7874 = !DILocation(line: 1055, column: 23, scope: !1102)
!7875 = !DILocation(line: 1055, column: 5, scope: !1102)
!7876 = !DILocation(line: 1056, column: 19, scope: !1102)
!7877 = !DILocation(line: 1056, column: 5, scope: !1102)
!7878 = !DILocation(line: 1056, column: 12, scope: !1102)
!7879 = !DILocation(line: 1056, column: 17, scope: !1102)
!7880 = !DILocation(line: 1057, column: 19, scope: !1102)
!7881 = !DILocation(line: 1057, column: 5, scope: !1102)
!7882 = !DILocation(line: 1057, column: 12, scope: !1102)
!7883 = !DILocation(line: 1057, column: 16, scope: !1102)
!7884 = !DILocation(line: 1058, column: 17, scope: !1102)
!7885 = !DILocation(line: 1058, column: 24, scope: !1102)
!7886 = !DILocation(line: 1058, column: 5, scope: !1102)
!7887 = !DILocation(line: 1058, column: 11, scope: !1102)
!7888 = !DILocation(line: 1058, column: 15, scope: !1102)
!7889 = !DILocation(line: 1063, column: 23, scope: !1102)
!7890 = !DILocation(line: 1063, column: 10, scope: !1102)
!7891 = !DILocation(line: 1064, column: 12, scope: !1120)
!7892 = !DILocation(line: 1064, column: 10, scope: !1120)
!7893 = !DILocation(line: 1064, column: 17, scope: !7894)
!7894 = !DILexicalBlockFile(scope: !7895, file: !376, discriminator: 2)
!7895 = !DILexicalBlockFile(scope: !1119, file: !376, discriminator: 1)
!7896 = !DILocation(line: 1064, column: 21, scope: !1119)
!7897 = !DILocation(line: 1064, column: 27, scope: !1119)
!7898 = !DILocation(line: 1064, column: 19, scope: !1119)
!7899 = !DILocation(line: 1064, column: 5, scope: !1120)
!7900 = !DILocation(line: 1065, column: 25, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !1118, file: !376, line: 1065, column: 13)
!7902 = !DILocation(line: 1065, column: 13, scope: !7901)
!7903 = !DILocation(line: 1065, column: 19, scope: !7901)
!7904 = !DILocation(line: 1065, column: 28, scope: !7901)
!7905 = !DILocation(line: 1065, column: 13, scope: !1118)
!7906 = !DILocation(line: 1066, column: 13, scope: !7901)
!7907 = !DILocation(line: 1067, column: 27, scope: !1117)
!7908 = !DILocation(line: 1067, column: 13, scope: !1117)
!7909 = !DILocation(line: 1067, column: 19, scope: !1117)
!7910 = !DILocation(line: 1067, column: 30, scope: !1117)
!7911 = !DILocation(line: 1067, column: 13, scope: !1118)
!7912 = !DILocation(line: 1068, column: 13, scope: !1116)
!7913 = !DILocation(line: 1068, column: 24, scope: !1116)
!7914 = !DILocation(line: 1068, column: 41, scope: !1116)
!7915 = !DILocation(line: 1068, column: 29, scope: !1116)
!7916 = !DILocation(line: 1068, column: 35, scope: !1116)
!7917 = !DILocation(line: 1068, column: 43, scope: !1116)
!7918 = !DILocation(line: 1068, column: 63, scope: !1116)
!7919 = !DILocation(line: 1068, column: 49, scope: !1116)
!7920 = !DILocation(line: 1068, column: 55, scope: !1116)
!7921 = !DILocation(line: 1068, column: 47, scope: !1116)
!7922 = !DILocation(line: 1069, column: 21, scope: !1116)
!7923 = !DILocation(line: 1069, column: 18, scope: !1116)
!7924 = !DILocation(line: 1070, column: 28, scope: !1116)
!7925 = !DILocation(line: 1070, column: 30, scope: !1116)
!7926 = !DILocation(line: 1070, column: 27, scope: !1116)
!7927 = !DILocation(line: 1070, column: 39, scope: !7928)
!7928 = !DILexicalBlockFile(scope: !1116, file: !376, discriminator: 1)
!7929 = !DILocation(line: 1070, column: 38, scope: !1116)
!7930 = !DILocation(line: 1070, column: 27, scope: !7931)
!7931 = !DILexicalBlockFile(scope: !1116, file: !376, discriminator: 2)
!7932 = !DILocation(line: 1070, column: 24, scope: !7933)
!7933 = !DILexicalBlockFile(scope: !7934, file: !376, discriminator: 4)
!7934 = !DILexicalBlockFile(scope: !1116, file: !376, discriminator: 3)
!7935 = !DILocation(line: 1071, column: 9, scope: !1117)
!7936 = !DILocation(line: 1071, column: 9, scope: !1116)
!7937 = !DILocation(line: 1072, column: 5, scope: !1118)
!7938 = !DILocation(line: 1064, column: 34, scope: !1119)
!7939 = !DILocation(line: 1064, column: 5, scope: !1119)
!7940 = !DILocation(line: 1075, column: 13, scope: !1102)
!7941 = !DILocation(line: 1075, column: 23, scope: !1102)
!7942 = !DILocation(line: 1075, column: 30, scope: !1102)
!7943 = !DILocation(line: 1075, column: 21, scope: !1102)
!7944 = !DILocation(line: 1075, column: 39, scope: !1102)
!7945 = !DILocation(line: 1075, column: 37, scope: !1102)
!7946 = !DILocation(line: 1075, column: 11, scope: !1102)
!7947 = !DILocation(line: 1076, column: 12, scope: !1102)
!7948 = !DILocation(line: 1076, column: 18, scope: !1102)
!7949 = !DILocation(line: 1076, column: 29, scope: !1102)
!7950 = !DILocation(line: 1076, column: 36, scope: !7951)
!7951 = !DILexicalBlockFile(scope: !1102, file: !376, discriminator: 1)
!7952 = !DILocation(line: 1076, column: 42, scope: !1102)
!7953 = !DILocation(line: 1076, column: 36, scope: !1102)
!7954 = !DILocation(line: 1076, column: 35, scope: !1102)
!7955 = !DILocation(line: 1076, column: 55, scope: !7956)
!7956 = !DILexicalBlockFile(scope: !1102, file: !376, discriminator: 2)
!7957 = !DILocation(line: 1076, column: 61, scope: !1102)
!7958 = !DILocation(line: 1076, column: 55, scope: !1102)
!7959 = !DILocation(line: 1076, column: 10, scope: !7960)
!7960 = !DILexicalBlockFile(scope: !7961, file: !376, discriminator: 4)
!7961 = !DILexicalBlockFile(scope: !1102, file: !376, discriminator: 3)
!7962 = !DILocation(line: 1078, column: 12, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !1102, file: !376, line: 1078, column: 5)
!7964 = !DILocation(line: 1078, column: 10, scope: !7963)
!7965 = !DILocation(line: 1078, column: 17, scope: !7966)
!7966 = !DILexicalBlockFile(scope: !7967, file: !376, discriminator: 2)
!7967 = !DILexicalBlockFile(scope: !7968, file: !376, discriminator: 1)
!7968 = distinct !DILexicalBlock(scope: !7963, file: !376, line: 1078, column: 5)
!7969 = !DILocation(line: 1078, column: 21, scope: !7968)
!7970 = !DILocation(line: 1078, column: 27, scope: !7968)
!7971 = !DILocation(line: 1078, column: 19, scope: !7968)
!7972 = !DILocation(line: 1078, column: 5, scope: !7963)
!7973 = !DILocation(line: 1079, column: 43, scope: !7968)
!7974 = !DILocation(line: 1079, column: 49, scope: !7968)
!7975 = !DILocation(line: 1079, column: 55, scope: !7968)
!7976 = !DILocation(line: 1079, column: 53, scope: !7968)
!7977 = !DILocation(line: 1079, column: 63, scope: !7968)
!7978 = !DILocation(line: 1079, column: 65, scope: !7968)
!7979 = !DILocation(line: 1079, column: 64, scope: !7968)
!7980 = !DILocation(line: 1079, column: 61, scope: !7968)
!7981 = !DILocation(line: 1079, column: 30, scope: !7968)
!7982 = !DILocation(line: 1079, column: 19, scope: !7968)
!7983 = !DILocation(line: 1079, column: 25, scope: !7968)
!7984 = !DILocation(line: 1079, column: 10, scope: !7968)
!7985 = !DILocation(line: 1079, column: 9, scope: !7968)
!7986 = !DILocation(line: 1079, column: 33, scope: !7968)
!7987 = !DILocation(line: 1078, column: 38, scope: !7968)
!7988 = !DILocation(line: 1078, column: 5, scope: !7968)
!7989 = !DILocation(line: 1082, column: 37, scope: !1102)
!7990 = !DILocation(line: 1082, column: 43, scope: !1102)
!7991 = !DILocation(line: 1082, column: 48, scope: !1102)
!7992 = !DILocation(line: 1082, column: 24, scope: !1102)
!7993 = !DILocation(line: 1082, column: 5, scope: !1102)
!7994 = !DILocation(line: 1082, column: 11, scope: !1102)
!7995 = !DILocation(line: 1082, column: 22, scope: !1102)
!7996 = !DILocation(line: 1083, column: 9, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !1102, file: !376, line: 1083, column: 9)
!7998 = !DILocation(line: 1083, column: 15, scope: !7997)
!7999 = !DILocation(line: 1083, column: 26, scope: !7997)
!8000 = !DILocation(line: 1083, column: 9, scope: !1102)
!8001 = !DILocation(line: 1084, column: 9, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7997, file: !376, line: 1083, column: 41)
!8003 = !DILocation(line: 1085, column: 9, scope: !8002)
!8004 = !DILocation(line: 1087, column: 27, scope: !1102)
!8005 = !DILocation(line: 1087, column: 5, scope: !1102)
!8006 = !DILocation(line: 1087, column: 11, scope: !1102)
!8007 = !DILocation(line: 1087, column: 25, scope: !1102)
!8008 = !DILocation(line: 1088, column: 12, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !1102, file: !376, line: 1088, column: 5)
!8010 = !DILocation(line: 1088, column: 10, scope: !8009)
!8011 = !DILocation(line: 1088, column: 17, scope: !8012)
!8012 = !DILexicalBlockFile(scope: !8013, file: !376, discriminator: 2)
!8013 = !DILexicalBlockFile(scope: !8014, file: !376, discriminator: 1)
!8014 = distinct !DILexicalBlock(scope: !8009, file: !376, line: 1088, column: 5)
!8015 = !DILocation(line: 1088, column: 21, scope: !8014)
!8016 = !DILocation(line: 1088, column: 27, scope: !8014)
!8017 = !DILocation(line: 1088, column: 19, scope: !8014)
!8018 = !DILocation(line: 1088, column: 5, scope: !8009)
!8019 = !DILocation(line: 1089, column: 26, scope: !8014)
!8020 = !DILocation(line: 1089, column: 9, scope: !8014)
!8021 = !DILocation(line: 1089, column: 15, scope: !8014)
!8022 = !DILocation(line: 1089, column: 29, scope: !8014)
!8023 = !DILocation(line: 1088, column: 34, scope: !8014)
!8024 = !DILocation(line: 1088, column: 5, scope: !8014)
!8025 = !DILocation(line: 1092, column: 9, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !1102, file: !376, line: 1092, column: 9)
!8027 = !DILocation(line: 1092, column: 15, scope: !8026)
!8028 = !DILocation(line: 1092, column: 26, scope: !8026)
!8029 = !DILocation(line: 1092, column: 9, scope: !1102)
!8030 = !DILocation(line: 1093, column: 9, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8026, file: !376, line: 1092, column: 32)
!8032 = !DILocation(line: 1093, column: 15, scope: !8031)
!8033 = !DILocation(line: 1093, column: 26, scope: !8031)
!8034 = !DILocation(line: 1094, column: 5, scope: !8031)
!8035 = !DILocation(line: 1097, column: 9, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8026, file: !376, line: 1095, column: 10)
!8037 = !DILocation(line: 1097, column: 15, scope: !8036)
!8038 = !DILocation(line: 1097, column: 26, scope: !8036)
!8039 = !DILocation(line: 1098, column: 13, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8036, file: !376, line: 1098, column: 13)
!8041 = !DILocation(line: 1098, column: 19, scope: !8040)
!8042 = !DILocation(line: 1098, column: 28, scope: !8040)
!8043 = !DILocation(line: 1098, column: 13, scope: !8036)
!8044 = !DILocation(line: 1099, column: 33, scope: !8040)
!8045 = !DILocation(line: 1099, column: 39, scope: !8040)
!8046 = !DILocation(line: 1099, column: 46, scope: !8040)
!8047 = !DILocation(line: 1099, column: 52, scope: !8040)
!8048 = !DILocation(line: 1099, column: 60, scope: !8040)
!8049 = !DILocation(line: 1099, column: 64, scope: !8040)
!8050 = !DILocation(line: 1099, column: 43, scope: !8040)
!8051 = !DILocation(line: 1099, column: 13, scope: !8040)
!8052 = !DILocation(line: 1099, column: 19, scope: !8040)
!8053 = !DILocation(line: 1099, column: 23, scope: !8040)
!8054 = !DILocation(line: 1102, column: 5, scope: !1102)
!8055 = !DILocation(line: 1102, column: 12, scope: !1102)
!8056 = !DILocation(line: 1102, column: 18, scope: !1102)
!8057 = !DILocation(line: 1103, column: 5, scope: !1102)
!8058 = !DILocation(line: 1103, column: 12, scope: !1102)
!8059 = !DILocation(line: 1103, column: 19, scope: !1102)
!8060 = !DILocation(line: 1104, column: 5, scope: !1102)
!8061 = !DILocation(line: 1105, column: 1, scope: !1102)
!8062 = !DILocation(line: 1991, column: 34, scope: !1145)
!8063 = !DILocation(line: 1991, column: 46, scope: !1145)
!8064 = !DILocation(line: 1993, column: 28, scope: !1145)
!8065 = !DILocation(line: 1993, column: 34, scope: !1145)
!8066 = !DILocation(line: 1993, column: 40, scope: !1145)
!8067 = !DILocation(line: 1993, column: 12, scope: !1145)
!8068 = !DILocation(line: 1993, column: 5, scope: !1145)
!8069 = !DILocation(line: 1997, column: 35, scope: !1151)
!8070 = !DILocation(line: 1997, column: 47, scope: !1151)
!8071 = !DILocation(line: 1999, column: 5, scope: !1151)
!8072 = !DILocation(line: 1999, column: 14, scope: !1151)
!8073 = !DILocation(line: 1999, column: 22, scope: !1151)
!8074 = !DILocation(line: 1999, column: 28, scope: !1151)
!8075 = !DILocation(line: 2000, column: 31, scope: !1151)
!8076 = !DILocation(line: 2000, column: 38, scope: !1151)
!8077 = !DILocation(line: 2000, column: 12, scope: !1151)
!8078 = !DILocation(line: 2001, column: 1, scope: !1151)
!8079 = !DILocation(line: 2000, column: 5, scope: !1151)
!8080 = !DILocation(line: 2004, column: 32, scope: !1156)
!8081 = !DILocation(line: 2004, column: 44, scope: !1156)
!8082 = !DILocation(line: 2006, column: 5, scope: !1156)
!8083 = !DILocation(line: 2006, column: 16, scope: !1156)
!8084 = !DILocation(line: 2006, column: 24, scope: !1156)
!8085 = !DILocation(line: 2006, column: 30, scope: !1156)
!8086 = !DILocation(line: 2006, column: 36, scope: !1156)
!8087 = !DILocation(line: 2008, column: 9, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !1156, file: !376, line: 2008, column: 9)
!8089 = !DILocation(line: 2008, column: 15, scope: !8088)
!8090 = !DILocation(line: 2008, column: 19, scope: !8088)
!8091 = !DILocation(line: 2008, column: 9, scope: !1156)
!8092 = !DILocation(line: 2009, column: 62, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8088, file: !376, line: 2008, column: 34)
!8094 = !DILocation(line: 2009, column: 9, scope: !8093)
!8095 = !DILocation(line: 2011, column: 21, scope: !1156)
!8096 = !DILocation(line: 2011, column: 27, scope: !1156)
!8097 = !DILocation(line: 2011, column: 34, scope: !1156)
!8098 = !DILocation(line: 2011, column: 43, scope: !1156)
!8099 = !DILocation(line: 2012, column: 12, scope: !1156)
!8100 = !DILocation(line: 2012, column: 18, scope: !1156)
!8101 = !DILocation(line: 2012, column: 5, scope: !1156)
!8102 = !DILocation(line: 2013, column: 1, scope: !1156)
!8103 = !DILocation(line: 2016, column: 35, scope: !1161)
!8104 = !DILocation(line: 2016, column: 47, scope: !1161)
!8105 = !DILocation(line: 2018, column: 5, scope: !1161)
!8106 = !DILocation(line: 2018, column: 16, scope: !1161)
!8107 = !DILocation(line: 2018, column: 24, scope: !1161)
!8108 = !DILocation(line: 2018, column: 30, scope: !1161)
!8109 = !DILocation(line: 2018, column: 36, scope: !1161)
!8110 = !DILocation(line: 2019, column: 31, scope: !1161)
!8111 = !DILocation(line: 2019, column: 37, scope: !1161)
!8112 = !DILocation(line: 2019, column: 12, scope: !1161)
!8113 = !DILocation(line: 2020, column: 1, scope: !1161)
!8114 = !DILocation(line: 2019, column: 5, scope: !1161)
!8115 = !DILocation(line: 2023, column: 37, scope: !1166)
!8116 = !DILocation(line: 2023, column: 49, scope: !1166)
!8117 = !DILocation(line: 2025, column: 5, scope: !1166)
!8118 = !DILocation(line: 2025, column: 16, scope: !1166)
!8119 = !DILocation(line: 2025, column: 24, scope: !1166)
!8120 = !DILocation(line: 2025, column: 30, scope: !1166)
!8121 = !DILocation(line: 2025, column: 36, scope: !1166)
!8122 = !DILocation(line: 2026, column: 28, scope: !1166)
!8123 = !DILocation(line: 2026, column: 34, scope: !1166)
!8124 = !DILocation(line: 2026, column: 12, scope: !1166)
!8125 = !DILocation(line: 2027, column: 1, scope: !1166)
!8126 = !DILocation(line: 2026, column: 5, scope: !1166)
!8127 = !DILocation(line: 2030, column: 37, scope: !1171)
!8128 = !DILocation(line: 2030, column: 49, scope: !1171)
!8129 = !DILocation(line: 2032, column: 5, scope: !1171)
!8130 = !DILocation(line: 2032, column: 16, scope: !1171)
!8131 = !DILocation(line: 2032, column: 24, scope: !1171)
!8132 = !DILocation(line: 2032, column: 30, scope: !1171)
!8133 = !DILocation(line: 2032, column: 36, scope: !1171)
!8134 = !DILocation(line: 2033, column: 31, scope: !1171)
!8135 = !DILocation(line: 2033, column: 37, scope: !1171)
!8136 = !DILocation(line: 2033, column: 12, scope: !1171)
!8137 = !DILocation(line: 2034, column: 1, scope: !1171)
!8138 = !DILocation(line: 2033, column: 5, scope: !1171)
!8139 = !DILocation(line: 2037, column: 35, scope: !1176)
!8140 = !DILocation(line: 2037, column: 47, scope: !1176)
!8141 = !DILocation(line: 2039, column: 5, scope: !1176)
!8142 = !DILocation(line: 2039, column: 16, scope: !1176)
!8143 = !DILocation(line: 2039, column: 24, scope: !1176)
!8144 = !DILocation(line: 2039, column: 30, scope: !1176)
!8145 = !DILocation(line: 2039, column: 36, scope: !1176)
!8146 = !DILocation(line: 2040, column: 5, scope: !1176)
!8147 = !DILocation(line: 2040, column: 11, scope: !1176)
!8148 = !DILocation(line: 2040, column: 17, scope: !1176)
!8149 = !DILocation(line: 2040, column: 23, scope: !1176)
!8150 = !DILocation(line: 2040, column: 32, scope: !8151)
!8151 = !DILexicalBlockFile(scope: !1176, file: !376, discriminator: 1)
!8152 = !DILocation(line: 2040, column: 38, scope: !1176)
!8153 = !DILocation(line: 2040, column: 17, scope: !8154)
!8154 = !DILexicalBlockFile(scope: !1176, file: !376, discriminator: 2)
!8155 = !DILocation(line: 2040, column: 11, scope: !8156)
!8156 = !DILexicalBlockFile(scope: !8157, file: !376, discriminator: 4)
!8157 = !DILexicalBlockFile(scope: !1176, file: !376, discriminator: 3)
!8158 = !DILocation(line: 2041, column: 33, scope: !1176)
!8159 = !DILocation(line: 2041, column: 12, scope: !1176)
!8160 = !DILocation(line: 2042, column: 1, scope: !1176)
!8161 = !DILocation(line: 2041, column: 5, scope: !1176)
!8162 = !DILocation(line: 2045, column: 33, scope: !1182)
!8163 = !DILocation(line: 2045, column: 45, scope: !1182)
!8164 = !DILocation(line: 2047, column: 5, scope: !1182)
!8165 = !DILocation(line: 2047, column: 16, scope: !1182)
!8166 = !DILocation(line: 2047, column: 24, scope: !1182)
!8167 = !DILocation(line: 2047, column: 30, scope: !1182)
!8168 = !DILocation(line: 2047, column: 36, scope: !1182)
!8169 = !DILocation(line: 2048, column: 31, scope: !1182)
!8170 = !DILocation(line: 2048, column: 37, scope: !1182)
!8171 = !DILocation(line: 2048, column: 12, scope: !1182)
!8172 = !DILocation(line: 2049, column: 1, scope: !1182)
!8173 = !DILocation(line: 2048, column: 5, scope: !1182)
!8174 = !DILocation(line: 2052, column: 34, scope: !1187)
!8175 = !DILocation(line: 2052, column: 46, scope: !1187)
!8176 = !DILocation(line: 2054, column: 5, scope: !1187)
!8177 = !DILocation(line: 2054, column: 16, scope: !1187)
!8178 = !DILocation(line: 2054, column: 24, scope: !1187)
!8179 = !DILocation(line: 2054, column: 30, scope: !1187)
!8180 = !DILocation(line: 2054, column: 36, scope: !1187)
!8181 = !DILocation(line: 2055, column: 33, scope: !1187)
!8182 = !DILocation(line: 2055, column: 39, scope: !1187)
!8183 = !DILocation(line: 2055, column: 46, scope: !1187)
!8184 = !DILocation(line: 2055, column: 52, scope: !1187)
!8185 = !DILocation(line: 2055, column: 12, scope: !1187)
!8186 = !DILocation(line: 2056, column: 1, scope: !1187)
!8187 = !DILocation(line: 2055, column: 5, scope: !1187)
!8188 = !DILocation(line: 2059, column: 36, scope: !1208)
!8189 = !DILocation(line: 2059, column: 48, scope: !1208)
!8190 = !DILocation(line: 2061, column: 5, scope: !1208)
!8191 = !DILocation(line: 2061, column: 16, scope: !1208)
!8192 = !DILocation(line: 2061, column: 24, scope: !1208)
!8193 = !DILocation(line: 2061, column: 30, scope: !1208)
!8194 = !DILocation(line: 2061, column: 36, scope: !1208)
!8195 = !DILocation(line: 2062, column: 33, scope: !1208)
!8196 = !DILocation(line: 2062, column: 39, scope: !1208)
!8197 = !DILocation(line: 2062, column: 48, scope: !1208)
!8198 = !DILocation(line: 2062, column: 54, scope: !1208)
!8199 = !DILocation(line: 2062, column: 12, scope: !1208)
!8200 = !DILocation(line: 2063, column: 1, scope: !1208)
!8201 = !DILocation(line: 2062, column: 5, scope: !1208)
!8202 = !DILocation(line: 2066, column: 39, scope: !1213)
!8203 = !DILocation(line: 2066, column: 51, scope: !1213)
!8204 = !DILocation(line: 2068, column: 5, scope: !1213)
!8205 = !DILocation(line: 2068, column: 16, scope: !1213)
!8206 = !DILocation(line: 2068, column: 24, scope: !1213)
!8207 = !DILocation(line: 2068, column: 30, scope: !1213)
!8208 = !DILocation(line: 2068, column: 36, scope: !1213)
!8209 = !DILocation(line: 2069, column: 33, scope: !1213)
!8210 = !DILocation(line: 2069, column: 39, scope: !1213)
!8211 = !DILocation(line: 2069, column: 51, scope: !1213)
!8212 = !DILocation(line: 2069, column: 57, scope: !1213)
!8213 = !DILocation(line: 2069, column: 12, scope: !1213)
!8214 = !DILocation(line: 2070, column: 1, scope: !1213)
!8215 = !DILocation(line: 2069, column: 5, scope: !1213)
!8216 = !DILocation(line: 2073, column: 28, scope: !1218)
!8217 = !DILocation(line: 2073, column: 44, scope: !1218)
!8218 = !DILocation(line: 2075, column: 5, scope: !1218)
!8219 = !DILocation(line: 2075, column: 20, scope: !1218)
!8220 = !DILocation(line: 2075, column: 42, scope: !1218)
!8221 = !DILocation(line: 2075, column: 25, scope: !1218)
!8222 = !DILocation(line: 2076, column: 5, scope: !1218)
!8223 = !DILocation(line: 2076, column: 9, scope: !1218)
!8224 = !DILocation(line: 2076, column: 38, scope: !1218)
!8225 = !DILocation(line: 2076, column: 42, scope: !1218)
!8226 = !DILocation(line: 2076, column: 48, scope: !1218)
!8227 = !DILocation(line: 2076, column: 15, scope: !1218)
!8228 = !DILocation(line: 2078, column: 9, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !1218, file: !376, line: 2078, column: 9)
!8230 = !DILocation(line: 2078, column: 20, scope: !8229)
!8231 = !DILocation(line: 2078, column: 24, scope: !8229)
!8232 = !DILocation(line: 2078, column: 30, scope: !8229)
!8233 = !DILocation(line: 2078, column: 35, scope: !8229)
!8234 = !DILocation(line: 2078, column: 18, scope: !8229)
!8235 = !DILocation(line: 2078, column: 17, scope: !8229)
!8236 = !DILocation(line: 2078, column: 13, scope: !8229)
!8237 = !DILocation(line: 2078, column: 9, scope: !1218)
!8238 = !DILocation(line: 2079, column: 25, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8229, file: !376, line: 2078, column: 53)
!8240 = !DILocation(line: 2079, column: 9, scope: !8239)
!8241 = !DILocation(line: 2081, column: 9, scope: !8239)
!8242 = !DILocation(line: 2083, column: 28, scope: !1218)
!8243 = !DILocation(line: 2083, column: 12, scope: !1218)
!8244 = !DILocation(line: 2083, column: 5, scope: !1218)
!8245 = !DILocation(line: 2084, column: 1, scope: !1218)
!8246 = !DILocation(line: 2087, column: 34, scope: !1224)
!8247 = !DILocation(line: 2087, column: 50, scope: !1224)
!8248 = !DILocation(line: 2089, column: 5, scope: !1224)
!8249 = !DILocation(line: 2089, column: 20, scope: !1224)
!8250 = !DILocation(line: 2089, column: 42, scope: !1224)
!8251 = !DILocation(line: 2089, column: 25, scope: !1224)
!8252 = !DILocation(line: 2090, column: 5, scope: !1224)
!8253 = !DILocation(line: 2090, column: 9, scope: !1224)
!8254 = !DILocation(line: 2090, column: 38, scope: !1224)
!8255 = !DILocation(line: 2090, column: 42, scope: !1224)
!8256 = !DILocation(line: 2090, column: 48, scope: !1224)
!8257 = !DILocation(line: 2090, column: 15, scope: !1224)
!8258 = !DILocation(line: 2092, column: 9, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !1224, file: !376, line: 2092, column: 9)
!8260 = !DILocation(line: 2092, column: 20, scope: !8259)
!8261 = !DILocation(line: 2092, column: 24, scope: !8259)
!8262 = !DILocation(line: 2092, column: 30, scope: !8259)
!8263 = !DILocation(line: 2092, column: 35, scope: !8259)
!8264 = !DILocation(line: 2092, column: 18, scope: !8259)
!8265 = !DILocation(line: 2092, column: 17, scope: !8259)
!8266 = !DILocation(line: 2092, column: 13, scope: !8259)
!8267 = !DILocation(line: 2092, column: 9, scope: !1224)
!8268 = !DILocation(line: 2093, column: 25, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8259, file: !376, line: 2092, column: 53)
!8270 = !DILocation(line: 2093, column: 9, scope: !8269)
!8271 = !DILocation(line: 2095, column: 9, scope: !8269)
!8272 = !DILocation(line: 2097, column: 28, scope: !1224)
!8273 = !DILocation(line: 2097, column: 12, scope: !1224)
!8274 = !DILocation(line: 2097, column: 5, scope: !1224)
!8275 = !DILocation(line: 2098, column: 1, scope: !1224)
!8276 = !DILocation(line: 2101, column: 26, scope: !1230)
!8277 = !DILocation(line: 2101, column: 42, scope: !1230)
!8278 = !DILocation(line: 2103, column: 5, scope: !1230)
!8279 = !DILocation(line: 2103, column: 20, scope: !1230)
!8280 = !DILocation(line: 2103, column: 42, scope: !1230)
!8281 = !DILocation(line: 2103, column: 25, scope: !1230)
!8282 = !DILocation(line: 2104, column: 5, scope: !1230)
!8283 = !DILocation(line: 2104, column: 9, scope: !1230)
!8284 = !DILocation(line: 2104, column: 38, scope: !1230)
!8285 = !DILocation(line: 2104, column: 42, scope: !1230)
!8286 = !DILocation(line: 2104, column: 48, scope: !1230)
!8287 = !DILocation(line: 2104, column: 15, scope: !1230)
!8288 = !DILocation(line: 2106, column: 9, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !1230, file: !376, line: 2106, column: 9)
!8290 = !DILocation(line: 2106, column: 20, scope: !8289)
!8291 = !DILocation(line: 2106, column: 24, scope: !8289)
!8292 = !DILocation(line: 2106, column: 30, scope: !8289)
!8293 = !DILocation(line: 2106, column: 35, scope: !8289)
!8294 = !DILocation(line: 2106, column: 18, scope: !8289)
!8295 = !DILocation(line: 2106, column: 17, scope: !8289)
!8296 = !DILocation(line: 2106, column: 13, scope: !8289)
!8297 = !DILocation(line: 2106, column: 9, scope: !1230)
!8298 = !DILocation(line: 2107, column: 25, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8289, file: !376, line: 2106, column: 59)
!8300 = !DILocation(line: 2107, column: 9, scope: !8299)
!8301 = !DILocation(line: 2109, column: 9, scope: !8299)
!8302 = !DILocation(line: 2111, column: 28, scope: !1230)
!8303 = !DILocation(line: 2111, column: 12, scope: !1230)
!8304 = !DILocation(line: 2111, column: 5, scope: !1230)
!8305 = !DILocation(line: 2112, column: 1, scope: !1230)
!8306 = !DILocation(line: 1966, column: 34, scope: !1192)
!8307 = !DILocation(line: 1966, column: 52, scope: !1192)
!8308 = !DILocation(line: 1968, column: 5, scope: !1192)
!8309 = !DILocation(line: 1968, column: 15, scope: !1192)
!8310 = !DILocation(line: 1968, column: 23, scope: !1192)
!8311 = !DILocation(line: 1969, column: 5, scope: !1192)
!8312 = !DILocation(line: 1969, column: 16, scope: !1192)
!8313 = !DILocation(line: 1971, column: 9, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !1192, file: !376, line: 1971, column: 9)
!8315 = !DILocation(line: 1971, column: 15, scope: !8314)
!8316 = !DILocation(line: 1971, column: 9, scope: !1192)
!8317 = !DILocation(line: 1972, column: 16, scope: !8314)
!8318 = !DILocation(line: 1972, column: 9, scope: !8314)
!8319 = !DILocation(line: 1974, column: 25, scope: !1192)
!8320 = !DILocation(line: 1974, column: 13, scope: !1192)
!8321 = !DILocation(line: 1974, column: 11, scope: !1192)
!8322 = !DILocation(line: 1975, column: 9, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !1192, file: !376, line: 1975, column: 9)
!8324 = !DILocation(line: 1975, column: 15, scope: !8323)
!8325 = !DILocation(line: 1975, column: 9, scope: !1192)
!8326 = !DILocation(line: 1976, column: 9, scope: !8323)
!8327 = !DILocation(line: 1978, column: 12, scope: !1207)
!8328 = !DILocation(line: 1978, column: 10, scope: !1207)
!8329 = !DILocation(line: 1978, column: 17, scope: !8330)
!8330 = !DILexicalBlockFile(scope: !8331, file: !376, discriminator: 2)
!8331 = !DILexicalBlockFile(scope: !1206, file: !376, discriminator: 1)
!8332 = !DILocation(line: 1978, column: 21, scope: !1206)
!8333 = !DILocation(line: 1978, column: 19, scope: !1206)
!8334 = !DILocation(line: 1978, column: 5, scope: !1207)
!8335 = !DILocation(line: 1979, column: 38, scope: !1205)
!8336 = !DILocation(line: 1979, column: 32, scope: !1205)
!8337 = !DILocation(line: 1979, column: 13, scope: !1205)
!8338 = !DILocation(line: 1979, column: 11, scope: !1205)
!8339 = !DILocation(line: 1980, column: 13, scope: !1204)
!8340 = !DILocation(line: 1980, column: 15, scope: !1204)
!8341 = !DILocation(line: 1980, column: 13, scope: !1205)
!8342 = !DILocation(line: 1981, column: 13, scope: !1203)
!8343 = !DILocation(line: 1981, column: 18, scope: !8344)
!8344 = !DILexicalBlockFile(scope: !1202, file: !376, discriminator: 1)
!8345 = !DILocation(line: 1981, column: 28, scope: !1202)
!8346 = !DILocation(line: 1981, column: 58, scope: !1202)
!8347 = !DILocation(line: 1981, column: 74, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !1202, file: !376, line: 1981, column: 71)
!8349 = !DILocation(line: 1981, column: 91, scope: !8348)
!8350 = !DILocation(line: 1981, column: 71, scope: !8348)
!8351 = !DILocation(line: 1981, column: 101, scope: !8348)
!8352 = !DILocation(line: 1981, column: 71, scope: !1202)
!8353 = !DILocation(line: 1981, column: 71, scope: !8354)
!8354 = !DILexicalBlockFile(scope: !1202, file: !376, discriminator: 2)
!8355 = !DILocation(line: 1981, column: 132, scope: !8356)
!8356 = !DILexicalBlockFile(scope: !8348, file: !376, discriminator: 3)
!8357 = !DILocation(line: 1981, column: 150, scope: !8348)
!8358 = !DILocation(line: 1981, column: 160, scope: !8348)
!8359 = !DILocation(line: 1981, column: 185, scope: !8348)
!8360 = !DILocation(line: 1981, column: 116, scope: !8348)
!8361 = !DILocation(line: 1981, column: 204, scope: !8362)
!8362 = !DILexicalBlockFile(scope: !1203, file: !376, discriminator: 4)
!8363 = !DILocation(line: 1981, column: 204, scope: !1202)
!8364 = !DILocation(line: 1981, column: 204, scope: !8365)
!8365 = !DILexicalBlockFile(scope: !1202, file: !376, discriminator: 5)
!8366 = !DILocation(line: 1982, column: 13, scope: !1203)
!8367 = !DILocation(line: 1984, column: 51, scope: !1205)
!8368 = !DILocation(line: 1984, column: 46, scope: !1205)
!8369 = !DILocation(line: 1984, column: 29, scope: !1205)
!8370 = !DILocation(line: 1984, column: 11, scope: !1205)
!8371 = !DILocation(line: 1984, column: 38, scope: !1205)
!8372 = !DILocation(line: 1984, column: 10, scope: !1205)
!8373 = !DILocation(line: 1984, column: 49, scope: !1205)
!8374 = !DILocation(line: 1985, column: 5, scope: !1205)
!8375 = !DILocation(line: 1978, column: 27, scope: !1206)
!8376 = !DILocation(line: 1978, column: 5, scope: !1206)
!8377 = !DILocation(line: 1987, column: 12, scope: !1192)
!8378 = !DILocation(line: 1987, column: 5, scope: !1192)
!8379 = !DILocation(line: 1988, column: 1, scope: !1192)
!8380 = !DILocation(line: 2716, column: 40, scope: !1259)
!8381 = !DILocation(line: 2718, column: 19, scope: !1259)
!8382 = !DILocation(line: 2718, column: 5, scope: !1259)
!8383 = !DILocation(line: 2719, column: 1, scope: !1259)
!8384 = !DILocation(line: 2700, column: 28, scope: !1271)
!8385 = !DILocation(line: 2700, column: 44, scope: !1271)
!8386 = !DILocation(line: 2700, column: 60, scope: !1271)
!8387 = !DILocation(line: 2702, column: 5, scope: !1271)
!8388 = !DILocation(line: 2702, column: 24, scope: !1271)
!8389 = !DILocation(line: 2702, column: 49, scope: !1271)
!8390 = !DILocation(line: 2702, column: 28, scope: !1271)
!8391 = !DILocation(line: 2706, column: 5, scope: !1271)
!8392 = !DILocation(line: 2706, column: 15, scope: !1271)
!8393 = !DILocation(line: 2708, column: 45, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !1271, file: !376, line: 2708, column: 9)
!8395 = !DILocation(line: 2708, column: 51, scope: !8394)
!8396 = !DILocation(line: 2708, column: 10, scope: !8394)
!8397 = !DILocation(line: 2708, column: 9, scope: !1271)
!8398 = !DILocation(line: 2709, column: 9, scope: !8394)
!8399 = !DILocation(line: 2711, column: 23, scope: !1271)
!8400 = !DILocation(line: 2711, column: 35, scope: !1271)
!8401 = !DILocation(line: 2711, column: 5, scope: !1271)
!8402 = !DILocation(line: 2711, column: 8, scope: !1271)
!8403 = !DILocation(line: 2711, column: 20, scope: !1271)
!8404 = !{!8405, !1571, i64 16}
!8405 = !{!"", !1375, i64 0, !1571, i64 16}
!8406 = !DILocation(line: 2712, column: 5, scope: !1271)
!8407 = !DILocation(line: 2713, column: 1, scope: !1271)
!8408 = !DILocation(line: 2694, column: 31, scope: !1278)
!8409 = !DILocation(line: 2694, column: 47, scope: !1278)
!8410 = !DILocation(line: 2694, column: 63, scope: !1278)
!8411 = !DILocation(line: 2696, column: 48, scope: !1278)
!8412 = !DILocation(line: 2696, column: 26, scope: !1278)
!8413 = !DILocation(line: 2696, column: 12, scope: !1278)
!8414 = !DILocation(line: 2696, column: 5, scope: !1278)
!8415 = !DILocation(line: 2724, column: 39, scope: !1264)
!8416 = !DILocation(line: 2724, column: 56, scope: !1264)
!8417 = !DILocation(line: 2724, column: 66, scope: !1264)
!8418 = !DILocation(line: 2726, column: 6, scope: !1264)
!8419 = !DILocation(line: 2726, column: 13, scope: !1264)
!8420 = !DILocation(line: 2728, column: 9, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !1264, file: !376, line: 2728, column: 9)
!8422 = !DILocation(line: 2728, column: 15, scope: !8421)
!8423 = !DILocation(line: 2728, column: 9, scope: !1264)
!8424 = !DILocation(line: 2729, column: 9, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8421, file: !376, line: 2728, column: 28)
!8426 = !DILocation(line: 2729, column: 15, scope: !8425)
!8427 = !DILocation(line: 2729, column: 19, scope: !8425)
!8428 = !DILocation(line: 2730, column: 5, scope: !8425)
!8429 = !DILocation(line: 2732, column: 33, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8421, file: !376, line: 2731, column: 10)
!8431 = !DILocation(line: 2732, column: 21, scope: !8430)
!8432 = !DILocation(line: 2732, column: 9, scope: !8430)
!8433 = !DILocation(line: 2732, column: 15, scope: !8430)
!8434 = !DILocation(line: 2732, column: 19, scope: !8430)
!8435 = !DILocation(line: 2733, column: 25, scope: !8430)
!8436 = !DILocation(line: 2733, column: 31, scope: !8430)
!8437 = !DILocation(line: 2733, column: 38, scope: !8430)
!8438 = !DILocation(line: 2733, column: 47, scope: !8430)
!8439 = !DILocation(line: 2736, column: 5, scope: !1264)
